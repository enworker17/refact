
struct HLAYER__ : struct HOBJECT__  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x4>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------
  // baseclass struct HOBJECT__
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct TEXTUREINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ char* name;
  /*<thisrel this+0x4>*/ /*|0x1|*/ unsigned char scaleWithProgress;
  /*<thisrel this+0x8>*/ /*|0x4|*/ float centerX;
  /*<thisrel this+0xc>*/ /*|0x4|*/ float centerY;
  /*<thisrel this+0x10>*/ /*|0x4|*/ float width;
  /*<thisrel this+0x14>*/ /*|0x4|*/ float height;
  /*<thisrel this+0x18>*/ /*|0x4|*/ enum EGxBlend blend;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c>

struct MipBits {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct C4Pixel* mip[1];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct RECTF {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ float left;
  /*<thisrel this+0x4>*/ /*|0x4|*/ float bottom;
  /*<thisrel this+0x8>*/ /*|0x4|*/ float right;
  /*<thisrel this+0xc>*/ /*|0x4|*/ float top;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct CMemCmdItem {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int m_allocated;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int m_committed;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int m_reserved;
  /*<thisrel this+0xc>*/ /*|0x100|*/ char m_name[256];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------
  static int __cdecl CMemCmdItem::Compare(/*<regrel ebp+0x8>*/ /*|0x4|*/ void* m1, /*<regrel ebp+0xc>*/ /*|0x4|*/ void* m2);

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10c>

struct CDataStore::Space {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x0>

struct CDataStore::Space<T> {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int m_pos;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall Space<T>();
  unsigned int __thiscall GetDifferenceInclusive(class CDataStore&);
  unsigned int __thiscall GetDifferenceExclusive(class CDataStore&);
  void __thiscall Set(class CDataStore&, ...);
  void __thiscall SetDifferenceInclusive(class CDataStore&);
  void __thiscall SetDifferenceExclusive(class CDataStore&);

  // virtual functions ------------------------------
};
// <size 0x4>

struct CDataStore::FixedString {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x0>

struct CDataStore::FixedString<T,MAXSIZE> {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x0|*/ ... m_data[0];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall FixedString<T,MAXSIZE>(...*);
  void __thiscall FixedString<T,MAXSIZE>();
  struct CDataStore::FixedString<T,MAXSIZE>& __thiscall operator=(...*);
  unsigned int __thiscall MaxSize();
  int __thiscall Compare(...*);
  int __thiscall CompareI(...*);
  void __thiscall Copy(...*);
  void __thiscall Reset();

  // virtual functions ------------------------------
};
// <size 0x4>

struct CDataStore::FixedBuffer {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x0>

struct CDataStore::FixedBuffer<SIZET,MAXSIZE> {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x0|*/ ... m_size;
  /*<thisrel this+0x0>*/ /*|0x0|*/ unsigned char m_data[0];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall FixedBuffer<SIZET,MAXSIZE>(struct CDataStore::FixedBuffer<SIZET,MAXSIZE>&);
  void __thiscall FixedBuffer<SIZET,MAXSIZE>();
  struct CDataStore::FixedBuffer<SIZET,MAXSIZE>& __thiscall operator=(class CDataStore&);
  struct CDataStore::FixedBuffer<SIZET,MAXSIZE>& __thiscall operator=(struct CDataStore::FixedBuffer<SIZET,MAXSIZE>&);
  void* __thiscall operator void *();
  void* __thiscall operator const void *();
  unsigned int __thiscall MaxSize();
  unsigned int __thiscall Size();
  unsigned int __thiscall MaxBytes();
  unsigned int __thiscall Bytes();
  int __thiscall Compare(struct CDataStore::FixedBuffer<SIZET,MAXSIZE>&);
  void __thiscall Copy(class CDataStore&);
  void __thiscall Copy(void*, ...);
  void __thiscall Copy(struct CDataStore::FixedBuffer<SIZET,MAXSIZE>&);
  void __thiscall Reset();

  // virtual functions ------------------------------
};
// <size 0x4>

struct CDataStore::FixedArray {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x0>

struct CDataStore::FixedArray<SIZET,T,MAXSIZE> {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x0|*/ ... m_size;
  /*<thisrel this+0x0>*/ /*|0x0|*/ ... m_data[0];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall FixedArray<SIZET,T,MAXSIZE>(struct CDataStore::FixedArray<SIZET,T,MAXSIZE>&);
  void __thiscall FixedArray<SIZET,T,MAXSIZE>();
  struct CDataStore::FixedArray<SIZET,T,MAXSIZE>& __thiscall operator=(struct CDataStore::FixedArray<SIZET,T,MAXSIZE>&);
  unsigned int __thiscall MaxSize();
  unsigned int __thiscall Size();
  unsigned int __thiscall MaxBytes();
  unsigned int __thiscall Bytes();
  void __thiscall Copy(...*, ...);
  void __thiscall Copy(struct CDataStore::FixedArray<SIZET,T,MAXSIZE>&);
  void __thiscall Reset();
  void __thiscall PutFast(class CDataStore&);
  void __thiscall GetFast(class CDataStore&);

  // virtual functions ------------------------------
};
// <size 0x4>

struct CMemCmdDump {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ unsigned __int64 m_sumAllocated;
  /*<thisrel this+0x8>*/ /*|0x8|*/ unsigned __int64 m_sumCommitted;
  /*<thisrel this+0x10>*/ /*|0x8|*/ unsigned __int64 m_sumReserved;
  /*<thisrel this+0x18>*/ /*|0x14|*/ class TSGrowableArray<CMemCmdItem> m_items;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CMemCmdDump(struct CMemCmdDump&);
  void __thiscall CMemCmdDump();
  struct CMemCmdDump& __thiscall operator=(struct CMemCmdDump&);
  void __thiscall ~CMemCmdDump();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x30>

struct HOUTPUTCONTEXT__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct _ARGLIST {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long flags;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long id;
  /*<thisrel this+0x8>*/ /*|0x4|*/ char* name;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int  (callback*)(struct _CMDPARAMS*, char*);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct HEVENTCONTEXT__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct CVar : class TSHashObject<CVar,HASHKEY_STRI>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x20|*/ char m_name[32];
  /*<thisrel this+0x38>*/ /*|0x4|*/ unsigned int m_category;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ unsigned int m_flags;
  /*<thisrel this+0x40>*/ /*|0x4|*/ char* m_stringValue;
  /*<thisrel this+0x44>*/ /*|0x4|*/ float m_floatValue;
  /*<thisrel this+0x48>*/ /*|0x4|*/ int m_intValue;
  /*<thisrel this+0x4c>*/ /*|0x4|*/ int m_modified;
  /*<thisrel this+0x50>*/ /*|0x4|*/ char* m_defaultValue;
  /*<thisrel this+0x54>*/ /*|0x4|*/ char* m_resetValue;
  /*<thisrel this+0x58>*/ /*|0x4|*/ char* m_latchedValue;
  /*<thisrel this+0x5c>*/ /*|0x4|*/ unsigned char  (m_callback*)(struct CVar*, char*, char*, void*);
  /*<thisrel this+0x60>*/ /*|0x4|*/ void* m_arg;

  // base classes -----------------------------------
  // baseclass class TSHashObject<CVar,HASHKEY_STRI>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------
  static void __fastcall CVar::Initialize(/*<register ecx>*/ /*|0x4|*/ char* filename);
  static void __fastcall CVar::Destroy();
  static struct CVar* __fastcall CVar::Register(/*<register ecx>*/ /*|0x4|*/ char* name, /*<register edx>*/ /*|0x4|*/ char* help, /*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int flags, /*<regrel ebp+0xc>*/ /*|0x4|*/ char* value, /*<regrel ebp+0x10>*/ /*|0x4|*/ unsigned char  (fcn*)(struct CVar*, char*, char*, void*), /*<regrel ebp+0x14>*/ /*|0x4|*/ unsigned int category, /*<regrel ebp+0x18>*/ /*|0x1|*/ unsigned char setCommand, /*<regrel ebp+0x1c>*/ /*|0x4|*/ void* arg);
  static struct CVar* __fastcall CVar::Lookup(/*<register ecx>*/ /*|0x4|*/ char* name);

  // non-virtual functions --------------------------
  void __thiscall CVar(struct CVar&);
  void __thiscall CVar::CVar();
  void __thiscall CVar::~CVar();
  char* __thiscall GetString();
  float __thiscall GetFloat();
  int __thiscall GetInt();
  char* __thiscall GetName();
  char* __thiscall GetLatchedValue();
  char* __thiscall GetDefaultValue();
  char* __thiscall GetResetValue();
  unsigned char __thiscall CVar::Set(/*<regrel ebp+0x8>*/ /*|0x4|*/ char* value, /*<regrel ebp+0xc>*/ /*|0x1|*/ unsigned char setValue, /*<regrel ebp+0x10>*/ /*|0x1|*/ unsigned char setReset, /*<regrel ebp+0x14>*/ /*|0x1|*/ unsigned char setDefault);
  void __thiscall CVar::Reset();
  void __thiscall CVar::Default();
  unsigned char __thiscall CVar::Update();
  int __thiscall Modified();
  unsigned char __thiscall IsArchived();
  void __thiscall CVar::InternalSet(/*<regrel ebp+0x8>*/ /*|0x4|*/ char* value, /*<regrel ebp+0xc>*/ /*|0x1|*/ unsigned char setValue, /*<regrel ebp+0x10>*/ /*|0x1|*/ unsigned char setReset, /*<regrel ebp+0x14>*/ /*|0x1|*/ unsigned char setDefault);
  struct CVar& __thiscall operator=(struct CVar&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x64>

struct LoginData {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x40|*/ char m_account[64];
  /*<thisrel this+0x40>*/ /*|0x4|*/ int m_loginServerID;
  /*<thisrel this+0x44>*/ /*|0x28|*/ unsigned char m_sessionKey[40];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x6c>

struct HINSTANCE__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct CStatus::STATUSENTRY {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ char* text;
  /*<thisrel this+0x4>*/ /*|0x4|*/ enum STATUS_TYPE severity;
  /*<thisrel this+0x8>*/ /*|0x8|*/ class TSLink<CStatus::STATUSENTRY> link;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ~STATUSENTRY();
  void __thiscall STATUSENTRY(struct CStatus::STATUSENTRY&);
  void __thiscall STATUSENTRY();
  struct CStatus::STATUSENTRY& __thiscall operator=(struct CStatus::STATUSENTRY&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x10>

struct CGxGammaRamp {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x200|*/ unsigned short red[256];
  /*<thisrel this+0x200>*/ /*|0x200|*/ unsigned short green[256];
  /*<thisrel this+0x400>*/ /*|0x200|*/ unsigned short blue[256];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CGxGammaRamp::Set(/*<regrel ebp+0x8>*/ /*|0x4|*/ float gamma);
  void __thiscall CGxGammaRamp(float);
  void __thiscall CGxGammaRamp();
  struct CGxGammaRamp& __thiscall operator=(struct CGxGammaRamp&);

  // virtual functions ------------------------------
};
// <size 0x600>

struct IRunningObjectTable {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct IRunningObjectTableVtbl* lpVtbl;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct _GUID {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long Data1;
  /*<thisrel this+0x4>*/ /*|0x2|*/ unsigned short Data2;
  /*<thisrel this+0x6>*/ /*|0x2|*/ unsigned short Data3;
  /*<thisrel this+0x8>*/ /*|0x8|*/ unsigned char Data4[8];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct IUnknown {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IUnknown(struct IUnknown&);
  void __thiscall IUnknown();
  struct IUnknown& __thiscall operator=(struct IUnknown&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x4>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x8>*/ unsigned long __stdcall Release() = 0;
};
// <size 0x4>

struct IMoniker {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct IMonikerVtbl* lpVtbl;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct _FILETIME {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwLowDateTime;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwHighDateTime;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct IEnumMoniker {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct IEnumMonikerVtbl* lpVtbl;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct IRunningObjectTableVtbl {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long  (QueryInterface*)(struct IRunningObjectTable*, struct _GUID*, void**);
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long  (AddRef*)(struct IRunningObjectTable*);
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long  (Release*)(struct IRunningObjectTable*);
  /*<thisrel this+0xc>*/ /*|0x4|*/ long  (Register*)(struct IRunningObjectTable*, unsigned long, struct IUnknown*, struct IMoniker*, unsigned long*);
  /*<thisrel this+0x10>*/ /*|0x4|*/ long  (Revoke*)(struct IRunningObjectTable*, unsigned long);
  /*<thisrel this+0x14>*/ /*|0x4|*/ long  (IsRunning*)(struct IRunningObjectTable*, struct IMoniker*);
  /*<thisrel this+0x18>*/ /*|0x4|*/ long  (GetObjectA*)(struct IRunningObjectTable*, struct IMoniker*, struct IUnknown**);
  /*<thisrel this+0x1c>*/ /*|0x4|*/ long  (NoteChangeTime*)(struct IRunningObjectTable*, unsigned long, struct _FILETIME*);
  /*<thisrel this+0x20>*/ /*|0x4|*/ long  (GetTimeOfLastChange*)(struct IRunningObjectTable*, struct IMoniker*, struct _FILETIME*);
  /*<thisrel this+0x24>*/ /*|0x4|*/ long  (EnumRunning*)(struct IRunningObjectTable*, struct IEnumMoniker**);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x28>

struct IEnumString {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct IEnumStringVtbl* lpVtbl;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct IEnumStringVtbl {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long  (QueryInterface*)(struct IEnumString*, struct _GUID*, void**);
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long  (AddRef*)(struct IEnumString*);
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long  (Release*)(struct IEnumString*);
  /*<thisrel this+0xc>*/ /*|0x4|*/ long  (Next*)(struct IEnumString*, unsigned long, unsigned short**, unsigned long*);
  /*<thisrel this+0x10>*/ /*|0x4|*/ long  (Skip*)(struct IEnumString*, unsigned long);
  /*<thisrel this+0x14>*/ /*|0x4|*/ long  (Reset*)(struct IEnumString*);
  /*<thisrel this+0x18>*/ /*|0x4|*/ long  (Clone*)(struct IEnumString*, struct IEnumString**);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c>

struct tagBIND_OPTS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long cbStruct;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long grfFlags;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long grfMode;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long dwTickCountDeadline;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct IBindCtx {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct IBindCtxVtbl* lpVtbl;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct IBindCtxVtbl {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long  (QueryInterface*)(struct IBindCtx*, struct _GUID*, void**);
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long  (AddRef*)(struct IBindCtx*);
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long  (Release*)(struct IBindCtx*);
  /*<thisrel this+0xc>*/ /*|0x4|*/ long  (RegisterObjectBound*)(struct IBindCtx*, struct IUnknown*);
  /*<thisrel this+0x10>*/ /*|0x4|*/ long  (RevokeObjectBound*)(struct IBindCtx*, struct IUnknown*);
  /*<thisrel this+0x14>*/ /*|0x4|*/ long  (ReleaseBoundObjects*)(struct IBindCtx*);
  /*<thisrel this+0x18>*/ /*|0x4|*/ long  (SetBindOptions*)(struct IBindCtx*, struct tagBIND_OPTS*);
  /*<thisrel this+0x1c>*/ /*|0x4|*/ long  (GetBindOptions*)(struct IBindCtx*, struct tagBIND_OPTS*);
  /*<thisrel this+0x20>*/ /*|0x4|*/ long  (GetRunningObjectTable*)(struct IBindCtx*, struct IRunningObjectTable**);
  /*<thisrel this+0x24>*/ /*|0x4|*/ long  (RegisterObjectParam*)(struct IBindCtx*, unsigned short*, struct IUnknown*);
  /*<thisrel this+0x28>*/ /*|0x4|*/ long  (GetObjectParam*)(struct IBindCtx*, unsigned short*, struct IUnknown**);
  /*<thisrel this+0x2c>*/ /*|0x4|*/ long  (EnumObjectParam*)(struct IBindCtx*, struct IEnumString**);
  /*<thisrel this+0x30>*/ /*|0x4|*/ long  (RevokeObjectParam*)(struct IBindCtx*, unsigned short*);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x34>

struct IEnumSTATSTG {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct IEnumSTATSTGVtbl* lpVtbl;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct tagSTATSTG {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned short* pwcsName;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long type;
  /*<thisrel this+0x8>*/ /*|0x8|*/ union _ULARGE_INTEGER cbSize;
  /*<thisrel this+0x10>*/ /*|0x8|*/ struct _FILETIME mtime;
  /*<thisrel this+0x18>*/ /*|0x8|*/ struct _FILETIME ctime;
  /*<thisrel this+0x20>*/ /*|0x8|*/ struct _FILETIME atime;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned long grfMode;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ unsigned long grfLocksSupported;
  /*<thisrel this+0x30>*/ /*|0x10|*/ struct _GUID clsid;
  /*<thisrel this+0x40>*/ /*|0x4|*/ unsigned long grfStateBits;
  /*<thisrel this+0x44>*/ /*|0x4|*/ unsigned long reserved;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x48>

struct IEnumSTATSTGVtbl {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long  (QueryInterface*)(struct IEnumSTATSTG*, struct _GUID*, void**);
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long  (AddRef*)(struct IEnumSTATSTG*);
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long  (Release*)(struct IEnumSTATSTG*);
  /*<thisrel this+0xc>*/ /*|0x4|*/ long  (Next*)(struct IEnumSTATSTG*, unsigned long, struct tagSTATSTG*, unsigned long*);
  /*<thisrel this+0x10>*/ /*|0x4|*/ long  (Skip*)(struct IEnumSTATSTG*, unsigned long);
  /*<thisrel this+0x14>*/ /*|0x4|*/ long  (Reset*)(struct IEnumSTATSTG*);
  /*<thisrel this+0x18>*/ /*|0x4|*/ long  (Clone*)(struct IEnumSTATSTG*, struct IEnumSTATSTG**);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c>

struct IStream : struct ISequentialStream  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct ISequentialStream
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IStream(struct IStream&);
  void __thiscall IStream();
  struct IStream& __thiscall operator=(struct IStream&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x14>*/ long __stdcall Seek(union _LARGE_INTEGER, unsigned long, union _ULARGE_INTEGER*) = 0;
  virtual /*<vtableoff 0x18>*/ long __stdcall SetSize(union _ULARGE_INTEGER) = 0;
  virtual /*<vtableoff 0x1c>*/ long __stdcall CopyTo(struct IStream*, union _ULARGE_INTEGER, union _ULARGE_INTEGER*, union _ULARGE_INTEGER*) = 0;
  virtual /*<vtableoff 0x20>*/ long __stdcall Commit(unsigned long) = 0;
  virtual /*<vtableoff 0x24>*/ long __stdcall Revert() = 0;
  virtual /*<vtableoff 0x28>*/ long __stdcall LockRegion(union _ULARGE_INTEGER, union _ULARGE_INTEGER, unsigned long) = 0;
  virtual /*<vtableoff 0x2c>*/ long __stdcall UnlockRegion(union _ULARGE_INTEGER, union _ULARGE_INTEGER, unsigned long) = 0;
  virtual /*<vtableoff 0x30>*/ long __stdcall Stat(struct tagSTATSTG*, unsigned long) = 0;
  virtual /*<vtableoff 0x34>*/ long __stdcall Clone(struct IStream**) = 0;
};
// <size 0x4>

struct IStreamVtbl {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long  (QueryInterface*)(struct IStream*, struct _GUID*, void**);
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long  (AddRef*)(struct IStream*);
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long  (Release*)(struct IStream*);
  /*<thisrel this+0xc>*/ /*|0x4|*/ long  (Read*)(struct IStream*, void*, unsigned long, unsigned long*);
  /*<thisrel this+0x10>*/ /*|0x4|*/ long  (Write*)(struct IStream*, void*, unsigned long, unsigned long*);
  /*<thisrel this+0x14>*/ /*|0x4|*/ long  (Seek*)(struct IStream*, union _LARGE_INTEGER, unsigned long, union _ULARGE_INTEGER*);
  /*<thisrel this+0x18>*/ /*|0x4|*/ long  (SetSize*)(struct IStream*, union _ULARGE_INTEGER);
  /*<thisrel this+0x1c>*/ /*|0x4|*/ long  (CopyTo*)(struct IStream*, struct IStream*, union _ULARGE_INTEGER, union _ULARGE_INTEGER*, union _ULARGE_INTEGER*);
  /*<thisrel this+0x20>*/ /*|0x4|*/ long  (Commit*)(struct IStream*, unsigned long);
  /*<thisrel this+0x24>*/ /*|0x4|*/ long  (Revert*)(struct IStream*);
  /*<thisrel this+0x28>*/ /*|0x4|*/ long  (LockRegion*)(struct IStream*, union _ULARGE_INTEGER, union _ULARGE_INTEGER, unsigned long);
  /*<thisrel this+0x2c>*/ /*|0x4|*/ long  (UnlockRegion*)(struct IStream*, union _ULARGE_INTEGER, union _ULARGE_INTEGER, unsigned long);
  /*<thisrel this+0x30>*/ /*|0x4|*/ long  (Stat*)(struct IStream*, struct tagSTATSTG*, unsigned long);
  /*<thisrel this+0x34>*/ /*|0x4|*/ long  (Clone*)(struct IStream*, struct IStream**);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x38>

struct IEnumMonikerVtbl {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long  (QueryInterface*)(struct IEnumMoniker*, struct _GUID*, void**);
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long  (AddRef*)(struct IEnumMoniker*);
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long  (Release*)(struct IEnumMoniker*);
  /*<thisrel this+0xc>*/ /*|0x4|*/ long  (Next*)(struct IEnumMoniker*, unsigned long, struct IMoniker**, unsigned long*);
  /*<thisrel this+0x10>*/ /*|0x4|*/ long  (Skip*)(struct IEnumMoniker*, unsigned long);
  /*<thisrel this+0x14>*/ /*|0x4|*/ long  (Reset*)(struct IEnumMoniker*);
  /*<thisrel this+0x18>*/ /*|0x4|*/ long  (Clone*)(struct IEnumMoniker*, struct IEnumMoniker**);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c>

struct IEnumFORMATETC {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct IEnumFORMATETCVtbl* lpVtbl;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct tagFORMATETC {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short cfFormat;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct tagDVTARGETDEVICE* ptd;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long dwAspect;
  /*<thisrel this+0xc>*/ /*|0x4|*/ long lindex;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long tymed;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct IEnumFORMATETCVtbl {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long  (QueryInterface*)(struct IEnumFORMATETC*, struct _GUID*, void**);
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long  (AddRef*)(struct IEnumFORMATETC*);
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long  (Release*)(struct IEnumFORMATETC*);
  /*<thisrel this+0xc>*/ /*|0x4|*/ long  (Next*)(struct IEnumFORMATETC*, unsigned long, struct tagFORMATETC*, unsigned long*);
  /*<thisrel this+0x10>*/ /*|0x4|*/ long  (Skip*)(struct IEnumFORMATETC*, unsigned long);
  /*<thisrel this+0x14>*/ /*|0x4|*/ long  (Reset*)(struct IEnumFORMATETC*);
  /*<thisrel this+0x18>*/ /*|0x4|*/ long  (Clone*)(struct IEnumFORMATETC*, struct IEnumFORMATETC**);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c>

struct IUnknownVtbl {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long  (QueryInterface*)(struct IUnknown*, struct _GUID*, void**);
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long  (AddRef*)(struct IUnknown*);
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long  (Release*)(struct IUnknown*);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct IEnumUnknown {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct IEnumUnknownVtbl* lpVtbl;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct IEnumUnknownVtbl {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long  (QueryInterface*)(struct IEnumUnknown*, struct _GUID*, void**);
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long  (AddRef*)(struct IEnumUnknown*);
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long  (Release*)(struct IEnumUnknown*);
  /*<thisrel this+0xc>*/ /*|0x4|*/ long  (Next*)(struct IEnumUnknown*, unsigned long, struct IUnknown**, unsigned long*);
  /*<thisrel this+0x10>*/ /*|0x4|*/ long  (Skip*)(struct IEnumUnknown*, unsigned long);
  /*<thisrel this+0x14>*/ /*|0x4|*/ long  (Reset*)(struct IEnumUnknown*);
  /*<thisrel this+0x18>*/ /*|0x4|*/ long  (Clone*)(struct IEnumUnknown*, struct IEnumUnknown**);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c>

struct HBITMAP__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct HENHMETAFILE__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct IStorage {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct IStorageVtbl* lpVtbl;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct tagSTGMEDIUM {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long tymed;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct HBITMAP__* hBitmap;
  /*<thisrel this+0x4>*/ /*|0x4|*/ void* hMetaFilePict;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct HENHMETAFILE__* hEnhMetaFile;
  /*<thisrel this+0x4>*/ /*|0x4|*/ void* hGlobal;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned short* lpszFileName;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct IStream* pstm;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct IStorage* pstg;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct IUnknown* pUnkForRelease;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct DLGTEMPLATE {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long style;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwExtendedStyle;
  /*<thisrel this+0x8>*/ /*|0x2|*/ unsigned short cdit;
  /*<thisrel this+0xa>*/ /*|0x2|*/ short x;
  /*<thisrel this+0xc>*/ /*|0x2|*/ short y;
  /*<thisrel this+0xe>*/ /*|0x2|*/ short cx;
  /*<thisrel this+0x10>*/ /*|0x2|*/ short cy;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x12>

struct tagPALETTEENTRY {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char peRed;
  /*<thisrel this+0x1>*/ /*|0x1|*/ unsigned char peGreen;
  /*<thisrel this+0x2>*/ /*|0x1|*/ unsigned char peBlue;
  /*<thisrel this+0x3>*/ /*|0x1|*/ unsigned char peFlags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct _PROPSHEETPAGEW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct HINSTANCE__* hInstance;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned short* pszTemplate;
  /*<thisrel this+0xc>*/ /*|0x4|*/ struct DLGTEMPLATE* pResource;
  /*<thisrel this+0x10>*/ /*|0x4|*/ struct HICON__* hIcon;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned short* pszIcon;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned short* pszTitle;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int  (pfnDlgProc*)(struct HWND__*, unsigned int, unsigned int, long);
  /*<thisrel this+0x1c>*/ /*|0x4|*/ long lParam;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned int  (pfnCallback*)(struct HWND__*, unsigned int, struct _PROPSHEETPAGEW*);
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned int* pcRefParent;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned short* pszHeaderTitle;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ unsigned short* pszHeaderSubTitle;
  /*<thisrel this+0x30>*/ /*|0x4|*/ void* hActCtx;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x34>

struct tagDVTARGETDEVICE {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long tdSize;
  /*<thisrel this+0x4>*/ /*|0x2|*/ unsigned short tdDriverNameOffset;
  /*<thisrel this+0x6>*/ /*|0x2|*/ unsigned short tdDeviceNameOffset;
  /*<thisrel this+0x8>*/ /*|0x2|*/ unsigned short tdPortNameOffset;
  /*<thisrel this+0xa>*/ /*|0x2|*/ unsigned short tdExtDevmodeOffset;
  /*<thisrel this+0xc>*/ /*|0x1|*/ unsigned char tdData[1];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct IStream {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct IStreamVtbl* lpVtbl;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct IDataObject {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct IDataObjectVtbl* lpVtbl;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct IAdviseSink {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct IAdviseSinkVtbl* lpVtbl;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct IEnumSTATDATA {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct IEnumSTATDATAVtbl* lpVtbl;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct IDataObjectVtbl {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long  (QueryInterface*)(struct IDataObject*, struct _GUID*, void**);
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long  (AddRef*)(struct IDataObject*);
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long  (Release*)(struct IDataObject*);
  /*<thisrel this+0xc>*/ /*|0x4|*/ long  (GetData*)(struct IDataObject*, struct tagFORMATETC*, struct tagSTGMEDIUM*);
  /*<thisrel this+0x10>*/ /*|0x4|*/ long  (GetDataHere*)(struct IDataObject*, struct tagFORMATETC*, struct tagSTGMEDIUM*);
  /*<thisrel this+0x14>*/ /*|0x4|*/ long  (QueryGetData*)(struct IDataObject*, struct tagFORMATETC*);
  /*<thisrel this+0x18>*/ /*|0x4|*/ long  (GetCanonicalFormatEtc*)(struct IDataObject*, struct tagFORMATETC*, struct tagFORMATETC*);
  /*<thisrel this+0x1c>*/ /*|0x4|*/ long  (SetData*)(struct IDataObject*, struct tagFORMATETC*, struct tagSTGMEDIUM*, int);
  /*<thisrel this+0x20>*/ /*|0x4|*/ long  (EnumFormatEtc*)(struct IDataObject*, unsigned long, struct IEnumFORMATETC**);
  /*<thisrel this+0x24>*/ /*|0x4|*/ long  (DAdvise*)(struct IDataObject*, struct tagFORMATETC*, unsigned long, struct IAdviseSink*, unsigned long*);
  /*<thisrel this+0x28>*/ /*|0x4|*/ long  (DUnadvise*)(struct IDataObject*, unsigned long);
  /*<thisrel this+0x2c>*/ /*|0x4|*/ long  (EnumDAdvise*)(struct IDataObject*, struct IEnumSTATDATA**);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x30>

struct tagSTATDATA {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x14|*/ struct tagFORMATETC formatetc;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long advf;
  /*<thisrel this+0x18>*/ /*|0x4|*/ struct IAdviseSink* pAdvSink;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned long dwConnection;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct IAdviseSinkVtbl {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long  (QueryInterface*)(struct IAdviseSink*, struct _GUID*, void**);
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long  (AddRef*)(struct IAdviseSink*);
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long  (Release*)(struct IAdviseSink*);
  /*<thisrel this+0xc>*/ /*|0x4|*/ void  (OnDataChange*)(struct IAdviseSink*, struct tagFORMATETC*, struct tagSTGMEDIUM*);
  /*<thisrel this+0x10>*/ /*|0x4|*/ void  (OnViewChange*)(struct IAdviseSink*, unsigned long, long);
  /*<thisrel this+0x14>*/ /*|0x4|*/ void  (OnRename*)(struct IAdviseSink*, struct IMoniker*);
  /*<thisrel this+0x18>*/ /*|0x4|*/ void  (OnSave*)(struct IAdviseSink*);
  /*<thisrel this+0x1c>*/ /*|0x4|*/ void  (OnClose*)(struct IAdviseSink*);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct tagOLEVERB {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long lVerb;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned short* lpszVerbName;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long fuFlags;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long grfAttribs;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct IOleUILinkInfoW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct IOleUILinkInfoWVtbl* lpVtbl;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct IOleUILinkInfoWVtbl {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long  (QueryInterface*)(struct IOleUILinkInfoW*, struct _GUID*, void**);
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long  (AddRef*)(struct IOleUILinkInfoW*);
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long  (Release*)(struct IOleUILinkInfoW*);
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long  (GetNextLink*)(struct IOleUILinkInfoW*, unsigned long);
  /*<thisrel this+0x10>*/ /*|0x4|*/ long  (SetLinkUpdateOptions*)(struct IOleUILinkInfoW*, unsigned long, unsigned long);
  /*<thisrel this+0x14>*/ /*|0x4|*/ long  (GetLinkUpdateOptions*)(struct IOleUILinkInfoW*, unsigned long, unsigned long*);
  /*<thisrel this+0x18>*/ /*|0x4|*/ long  (SetLinkSource*)(struct IOleUILinkInfoW*, unsigned long, unsigned short*, unsigned long, unsigned long*, int);
  /*<thisrel this+0x1c>*/ /*|0x4|*/ long  (GetLinkSource*)(struct IOleUILinkInfoW*, unsigned long, unsigned short**, unsigned long*, unsigned short**, unsigned short**, int*, int*);
  /*<thisrel this+0x20>*/ /*|0x4|*/ long  (OpenLinkSource*)(struct IOleUILinkInfoW*, unsigned long);
  /*<thisrel this+0x24>*/ /*|0x4|*/ long  (UpdateLink*)(struct IOleUILinkInfoW*, unsigned long, int, int);
  /*<thisrel this+0x28>*/ /*|0x4|*/ long  (CancelLink*)(struct IOleUILinkInfoW*, unsigned long);
  /*<thisrel this+0x2c>*/ /*|0x4|*/ long  (GetLastUpdate*)(struct IOleUILinkInfoW*, unsigned long, struct _FILETIME*);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x30>

struct tagRECT {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long left;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long top;
  /*<thisrel this+0x8>*/ /*|0x4|*/ long right;
  /*<thisrel this+0xc>*/ /*|0x4|*/ long bottom;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct IMonikerVtbl {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long  (QueryInterface*)(struct IMoniker*, struct _GUID*, void**);
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long  (AddRef*)(struct IMoniker*);
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long  (Release*)(struct IMoniker*);
  /*<thisrel this+0xc>*/ /*|0x4|*/ long  (GetClassID*)(struct IMoniker*, struct _GUID*);
  /*<thisrel this+0x10>*/ /*|0x4|*/ long  (IsDirty*)(struct IMoniker*);
  /*<thisrel this+0x14>*/ /*|0x4|*/ long  (Load*)(struct IMoniker*, struct IStream*);
  /*<thisrel this+0x18>*/ /*|0x4|*/ long  (Save*)(struct IMoniker*, struct IStream*, int);
  /*<thisrel this+0x1c>*/ /*|0x4|*/ long  (GetSizeMax*)(struct IMoniker*, union _ULARGE_INTEGER*);
  /*<thisrel this+0x20>*/ /*|0x4|*/ long  (BindToObject*)(struct IMoniker*, struct IBindCtx*, struct IMoniker*, struct _GUID*, void**);
  /*<thisrel this+0x24>*/ /*|0x4|*/ long  (BindToStorage*)(struct IMoniker*, struct IBindCtx*, struct IMoniker*, struct _GUID*, void**);
  /*<thisrel this+0x28>*/ /*|0x4|*/ long  (Reduce*)(struct IMoniker*, struct IBindCtx*, unsigned long, struct IMoniker**, struct IMoniker**);
  /*<thisrel this+0x2c>*/ /*|0x4|*/ long  (ComposeWith*)(struct IMoniker*, struct IMoniker*, int, struct IMoniker**);
  /*<thisrel this+0x30>*/ /*|0x4|*/ long  (Enum*)(struct IMoniker*, int, struct IEnumMoniker**);
  /*<thisrel this+0x34>*/ /*|0x4|*/ long  (IsEqual*)(struct IMoniker*, struct IMoniker*);
  /*<thisrel this+0x38>*/ /*|0x4|*/ long  (Hash*)(struct IMoniker*, unsigned long*);
  /*<thisrel this+0x3c>*/ /*|0x4|*/ long  (IsRunning*)(struct IMoniker*, struct IBindCtx*, struct IMoniker*, struct IMoniker*);
  /*<thisrel this+0x40>*/ /*|0x4|*/ long  (GetTimeOfLastChange*)(struct IMoniker*, struct IBindCtx*, struct IMoniker*, struct _FILETIME*);
  /*<thisrel this+0x44>*/ /*|0x4|*/ long  (Inverse*)(struct IMoniker*, struct IMoniker**);
  /*<thisrel this+0x48>*/ /*|0x4|*/ long  (CommonPrefixWith*)(struct IMoniker*, struct IMoniker*, struct IMoniker**);
  /*<thisrel this+0x4c>*/ /*|0x4|*/ long  (RelativePathTo*)(struct IMoniker*, struct IMoniker*, struct IMoniker**);
  /*<thisrel this+0x50>*/ /*|0x4|*/ long  (GetDisplayName*)(struct IMoniker*, struct IBindCtx*, struct IMoniker*, unsigned short**);
  /*<thisrel this+0x54>*/ /*|0x4|*/ long  (ParseDisplayName*)(struct IMoniker*, struct IBindCtx*, struct IMoniker*, unsigned short*, unsigned long*, struct IMoniker**);
  /*<thisrel this+0x58>*/ /*|0x4|*/ long  (IsSystemMoniker*)(struct IMoniker*, unsigned long*);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x5c>

struct HPALETTE__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct _NETRESOURCEW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwScope;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwType;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long dwDisplayType;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long dwUsage;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned short* lpLocalName;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned short* lpRemoteName;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned short* lpComment;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned short* lpProvider;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct _ITEMIDLIST {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x3|*/ struct _SHITEMID mkid;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x3>

struct tagOFNW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long lStructSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct HWND__* hwndOwner;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct HINSTANCE__* hInstance;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned short* lpstrFilter;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned short* lpstrCustomFilter;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long nMaxCustFilter;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long nFilterIndex;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned short* lpstrFile;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned long nMaxFile;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned short* lpstrFileTitle;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned long nMaxFileTitle;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ unsigned short* lpstrInitialDir;
  /*<thisrel this+0x30>*/ /*|0x4|*/ unsigned short* lpstrTitle;
  /*<thisrel this+0x34>*/ /*|0x4|*/ unsigned long Flags;
  /*<thisrel this+0x38>*/ /*|0x2|*/ unsigned short nFileOffset;
  /*<thisrel this+0x3a>*/ /*|0x2|*/ unsigned short nFileExtension;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ unsigned short* lpstrDefExt;
  /*<thisrel this+0x40>*/ /*|0x4|*/ long lCustData;
  /*<thisrel this+0x44>*/ /*|0x4|*/ unsigned int  (lpfnHook*)(struct HWND__*, unsigned int, unsigned int, long);
  /*<thisrel this+0x48>*/ /*|0x4|*/ unsigned short* lpTemplateName;
  /*<thisrel this+0x4c>*/ /*|0x4|*/ void* pvReserved;
  /*<thisrel this+0x50>*/ /*|0x4|*/ unsigned long dwReserved;
  /*<thisrel this+0x54>*/ /*|0x4|*/ unsigned long FlagsEx;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x58>

struct _SecHandle {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwLower;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwUpper;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct _DCB {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long DCBlength;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long BaudRate;
  /*<bitfield this+0x8>*/ /*|0x4|*/ unsigned long fBinary:0:1;
  /*<bitfield this+0x8>*/ /*|0x4|*/ unsigned long fParity:1:1;
  /*<bitfield this+0x8>*/ /*|0x4|*/ unsigned long fOutxCtsFlow:2:1;
  /*<bitfield this+0x8>*/ /*|0x4|*/ unsigned long fOutxDsrFlow:3:1;
  /*<bitfield this+0x8>*/ /*|0x4|*/ unsigned long fDtrControl:4:2;
  /*<bitfield this+0x8>*/ /*|0x4|*/ unsigned long fDsrSensitivity:6:1;
  /*<bitfield this+0x8>*/ /*|0x4|*/ unsigned long fTXContinueOnXoff:7:1;
  /*<bitfield this+0x8>*/ /*|0x4|*/ unsigned long fOutX:8:1;
  /*<bitfield this+0x8>*/ /*|0x4|*/ unsigned long fInX:9:1;
  /*<bitfield this+0x8>*/ /*|0x4|*/ unsigned long fErrorChar:a:1;
  /*<bitfield this+0x8>*/ /*|0x4|*/ unsigned long fNull:b:1;
  /*<bitfield this+0x8>*/ /*|0x4|*/ unsigned long fRtsControl:c:2;
  /*<bitfield this+0x8>*/ /*|0x4|*/ unsigned long fAbortOnError:e:1;
  /*<bitfield this+0x8>*/ /*|0x4|*/ unsigned long fDummy2:f:11;
  /*<thisrel this+0xc>*/ /*|0x2|*/ unsigned short wReserved;
  /*<thisrel this+0xe>*/ /*|0x2|*/ unsigned short XonLim;
  /*<thisrel this+0x10>*/ /*|0x2|*/ unsigned short XoffLim;
  /*<thisrel this+0x12>*/ /*|0x1|*/ unsigned char ByteSize;
  /*<thisrel this+0x13>*/ /*|0x1|*/ unsigned char Parity;
  /*<thisrel this+0x14>*/ /*|0x1|*/ unsigned char StopBits;
  /*<thisrel this+0x15>*/ /*|0x1|*/ char XonChar;
  /*<thisrel this+0x16>*/ /*|0x1|*/ char XoffChar;
  /*<thisrel this+0x17>*/ /*|0x1|*/ char ErrorChar;
  /*<thisrel this+0x18>*/ /*|0x1|*/ char EofChar;
  /*<thisrel this+0x19>*/ /*|0x1|*/ char EvtChar;
  /*<thisrel this+0x1a>*/ /*|0x2|*/ unsigned short wReserved1;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c>

struct _COMMCONFIG {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwSize;
  /*<thisrel this+0x4>*/ /*|0x2|*/ unsigned short wVersion;
  /*<thisrel this+0x6>*/ /*|0x2|*/ unsigned short wReserved;
  /*<thisrel this+0x8>*/ /*|0x1c|*/ struct _DCB dcb;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned long dwProviderSubType;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned long dwProviderOffset;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ unsigned long dwProviderSize;
  /*<thisrel this+0x30>*/ /*|0x2|*/ unsigned short wcProviderData[1];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x34>

struct _SecBufferDesc {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long ulVersion;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long cBuffers;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct _SecBuffer* pBuffers;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct tagJOYCAPSW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short wMid;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short wPid;
  /*<thisrel this+0x4>*/ /*|0x40|*/ unsigned short szPname[32];
  /*<thisrel this+0x44>*/ /*|0x4|*/ unsigned int wXmin;
  /*<thisrel this+0x48>*/ /*|0x4|*/ unsigned int wXmax;
  /*<thisrel this+0x4c>*/ /*|0x4|*/ unsigned int wYmin;
  /*<thisrel this+0x50>*/ /*|0x4|*/ unsigned int wYmax;
  /*<thisrel this+0x54>*/ /*|0x4|*/ unsigned int wZmin;
  /*<thisrel this+0x58>*/ /*|0x4|*/ unsigned int wZmax;
  /*<thisrel this+0x5c>*/ /*|0x4|*/ unsigned int wNumButtons;
  /*<thisrel this+0x60>*/ /*|0x4|*/ unsigned int wPeriodMin;
  /*<thisrel this+0x64>*/ /*|0x4|*/ unsigned int wPeriodMax;
  /*<thisrel this+0x68>*/ /*|0x4|*/ unsigned int wRmin;
  /*<thisrel this+0x6c>*/ /*|0x4|*/ unsigned int wRmax;
  /*<thisrel this+0x70>*/ /*|0x4|*/ unsigned int wUmin;
  /*<thisrel this+0x74>*/ /*|0x4|*/ unsigned int wUmax;
  /*<thisrel this+0x78>*/ /*|0x4|*/ unsigned int wVmin;
  /*<thisrel this+0x7c>*/ /*|0x4|*/ unsigned int wVmax;
  /*<thisrel this+0x80>*/ /*|0x4|*/ unsigned int wCaps;
  /*<thisrel this+0x84>*/ /*|0x4|*/ unsigned int wMaxAxes;
  /*<thisrel this+0x88>*/ /*|0x4|*/ unsigned int wNumAxes;
  /*<thisrel this+0x8c>*/ /*|0x4|*/ unsigned int wMaxButtons;
  /*<thisrel this+0x90>*/ /*|0x40|*/ unsigned short szRegKey[32];
  /*<thisrel this+0xd0>*/ /*|0x208|*/ unsigned short szOEMVxD[260];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x2d8>

struct tagMIXERLINEW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long cbStruct;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwDestination;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long dwSource;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long dwLineID;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long fdwLine;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long dwUser;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long dwComponentType;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned long cChannels;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned long cConnections;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned long cControls;
  /*<thisrel this+0x28>*/ /*|0x20|*/ unsigned short szShortName[16];
  /*<thisrel this+0x48>*/ /*|0x80|*/ unsigned short szName[64];
  /*<thisrel this+0xc8>*/ /*|0x50|*/ struct __unnamed_cd_ Target;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x118>

struct _SMALL_RECT {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ short Left;
  /*<thisrel this+0x2>*/ /*|0x2|*/ short Top;
  /*<thisrel this+0x4>*/ /*|0x2|*/ short Right;
  /*<thisrel this+0x6>*/ /*|0x2|*/ short Bottom;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct tagMIXERCONTROLW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long cbStruct;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwControlID;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long dwControlType;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long fdwControl;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long cMultipleItems;
  /*<thisrel this+0x14>*/ /*|0x20|*/ unsigned short szShortName[16];
  /*<thisrel this+0x34>*/ /*|0x80|*/ unsigned short szName[64];
  /*<thisrel this+0xb4>*/ /*|0x18|*/ union __unnamed_ce_ Bounds;
  /*<thisrel this+0xcc>*/ /*|0x18|*/ union __unnamed_cf_ Metrics;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xe4>

struct tagMIXERLINECONTROLSW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long cbStruct;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwLineID;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long dwControlID;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long dwControlType;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long cControls;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long cbmxctrl;
  /*<thisrel this+0x14>*/ /*|0x4|*/ struct tagMIXERCONTROLW* pamxctrl;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct _SecPkgInfoW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long fCapabilities;
  /*<thisrel this+0x4>*/ /*|0x2|*/ unsigned short wVersion;
  /*<thisrel this+0x6>*/ /*|0x2|*/ unsigned short wRPCID;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long cbMaxToken;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned short* Name;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned short* Comment;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct tagLOGFONTW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long lfHeight;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long lfWidth;
  /*<thisrel this+0x8>*/ /*|0x4|*/ long lfEscapement;
  /*<thisrel this+0xc>*/ /*|0x4|*/ long lfOrientation;
  /*<thisrel this+0x10>*/ /*|0x4|*/ long lfWeight;
  /*<thisrel this+0x14>*/ /*|0x1|*/ unsigned char lfItalic;
  /*<thisrel this+0x15>*/ /*|0x1|*/ unsigned char lfUnderline;
  /*<thisrel this+0x16>*/ /*|0x1|*/ unsigned char lfStrikeOut;
  /*<thisrel this+0x17>*/ /*|0x1|*/ unsigned char lfCharSet;
  /*<thisrel this+0x18>*/ /*|0x1|*/ unsigned char lfOutPrecision;
  /*<thisrel this+0x19>*/ /*|0x1|*/ unsigned char lfClipPrecision;
  /*<thisrel this+0x1a>*/ /*|0x1|*/ unsigned char lfQuality;
  /*<thisrel this+0x1b>*/ /*|0x1|*/ unsigned char lfPitchAndFamily;
  /*<thisrel this+0x1c>*/ /*|0x40|*/ unsigned short lfFaceName[32];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x5c>

struct HKL__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct _POINTL {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long x;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long y;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct _FIXED {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short fract;
  /*<thisrel this+0x2>*/ /*|0x2|*/ short value;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct _MAT2 {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct _FIXED eM11;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct _FIXED eM12;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct _FIXED eM21;
  /*<thisrel this+0xc>*/ /*|0x4|*/ struct _FIXED eM22;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct tagOLEUIPASTEENTRYW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x14|*/ struct tagFORMATETC fmtetc;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned short* lpstrFormatName;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned short* lpstrResultText;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned long dwScratchSpace;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x24>

struct tagOLEUIPASTESPECIALW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long cbStruct;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct HWND__* hWndOwner;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned short* lpszCaption;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int  (lpfnHook*)(struct HWND__*, unsigned int, unsigned int, long);
  /*<thisrel this+0x14>*/ /*|0x4|*/ long lCustData;
  /*<thisrel this+0x18>*/ /*|0x4|*/ struct HINSTANCE__* hInstance;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned short* lpszTemplate;
  /*<thisrel this+0x20>*/ /*|0x4|*/ struct HRSRC__* hResource;
  /*<thisrel this+0x24>*/ /*|0x4|*/ struct IDataObject* lpSrcDataObj;
  /*<thisrel this+0x28>*/ /*|0x4|*/ struct tagOLEUIPASTEENTRYW* arrPasteEntries;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ int cPasteEntries;
  /*<thisrel this+0x30>*/ /*|0x4|*/ unsigned int* arrLinkTypes;
  /*<thisrel this+0x34>*/ /*|0x4|*/ int cLinkTypes;
  /*<thisrel this+0x38>*/ /*|0x4|*/ unsigned int cClsidExclude;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ struct _GUID* lpClsidExclude;
  /*<thisrel this+0x40>*/ /*|0x4|*/ int nSelectedIndex;
  /*<thisrel this+0x44>*/ /*|0x4|*/ int fLink;
  /*<thisrel this+0x48>*/ /*|0x4|*/ void* hMetaPict;
  /*<thisrel this+0x4c>*/ /*|0x8|*/ struct tagSIZE sizel;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x54>

struct tagAUXCAPSW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short wMid;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short wPid;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int vDriverVersion;
  /*<thisrel this+0x8>*/ /*|0x40|*/ unsigned short szPname[32];
  /*<thisrel this+0x48>*/ /*|0x2|*/ unsigned short wTechnology;
  /*<thisrel this+0x4a>*/ /*|0x2|*/ unsigned short wReserved1;
  /*<thisrel this+0x4c>*/ /*|0x4|*/ unsigned long dwSupport;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x50>

struct HMONITOR__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct HWND__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct HRSRC__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct IOleUILinkContainerW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct IOleUILinkContainerWVtbl* lpVtbl;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct tagOLEUICHANGESOURCEW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long cbStruct;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct HWND__* hWndOwner;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned short* lpszCaption;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int  (lpfnHook*)(struct HWND__*, unsigned int, unsigned int, long);
  /*<thisrel this+0x14>*/ /*|0x4|*/ long lCustData;
  /*<thisrel this+0x18>*/ /*|0x4|*/ struct HINSTANCE__* hInstance;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned short* lpszTemplate;
  /*<thisrel this+0x20>*/ /*|0x4|*/ struct HRSRC__* hResource;
  /*<thisrel this+0x24>*/ /*|0x4|*/ struct tagOFNW* lpOFN;
  /*<thisrel this+0x28>*/ /*|0x10|*/ unsigned long dwReserved1[4];
  /*<thisrel this+0x38>*/ /*|0x4|*/ struct IOleUILinkContainerW* lpOleUILinkContainer;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ unsigned long dwLink;
  /*<thisrel this+0x40>*/ /*|0x4|*/ unsigned short* lpszDisplayName;
  /*<thisrel this+0x44>*/ /*|0x4|*/ unsigned long nFileLength;
  /*<thisrel this+0x48>*/ /*|0x4|*/ unsigned short* lpszFrom;
  /*<thisrel this+0x4c>*/ /*|0x4|*/ unsigned short* lpszTo;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x50>

struct _currencyfmtW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int NumDigits;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int LeadingZero;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int Grouping;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned short* lpDecimalSep;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned short* lpThousandSep;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned int NegativeOrder;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned int PositiveOrder;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned short* lpCurrencySymbol;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct tagMIXERCAPSW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short wMid;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short wPid;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int vDriverVersion;
  /*<thisrel this+0x8>*/ /*|0x40|*/ unsigned short szPname[32];
  /*<thisrel this+0x48>*/ /*|0x4|*/ unsigned long fdwSupport;
  /*<thisrel this+0x4c>*/ /*|0x4|*/ unsigned long cDestinations;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x50>

struct _MMIOINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long fccIOProc;
  /*<thisrel this+0x8>*/ /*|0x4|*/ long  (pIOProc*)(char*, unsigned int, long, long);
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int wErrorRet;
  /*<thisrel this+0x10>*/ /*|0x4|*/ struct HTASK__* htask;
  /*<thisrel this+0x14>*/ /*|0x4|*/ long cchBuffer;
  /*<thisrel this+0x18>*/ /*|0x4|*/ char* pchBuffer;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ char* pchNext;
  /*<thisrel this+0x20>*/ /*|0x4|*/ char* pchEndRead;
  /*<thisrel this+0x24>*/ /*|0x4|*/ char* pchEndWrite;
  /*<thisrel this+0x28>*/ /*|0x4|*/ long lBufOffset;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ long lDiskOffset;
  /*<thisrel this+0x30>*/ /*|0xc|*/ unsigned long adwInfo[3];
  /*<thisrel this+0x3c>*/ /*|0x4|*/ unsigned long dwReserved1;
  /*<thisrel this+0x40>*/ /*|0x4|*/ unsigned long dwReserved2;
  /*<thisrel this+0x44>*/ /*|0x4|*/ struct HMMIO__* hmmio;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x48>

struct IOleContainer {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct IOleContainerVtbl* lpVtbl;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct IOleContainerVtbl {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long  (QueryInterface*)(struct IOleContainer*, struct _GUID*, void**);
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long  (AddRef*)(struct IOleContainer*);
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long  (Release*)(struct IOleContainer*);
  /*<thisrel this+0xc>*/ /*|0x4|*/ long  (ParseDisplayName*)(struct IOleContainer*, struct IBindCtx*, unsigned short*, unsigned long*, struct IMoniker**);
  /*<thisrel this+0x10>*/ /*|0x4|*/ long  (EnumObjects*)(struct IOleContainer*, unsigned long, struct IEnumUnknown**);
  /*<thisrel this+0x14>*/ /*|0x4|*/ long  (LockContainer*)(struct IOleContainer*, int);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct HKEY__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct __unnamed_cd_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwType;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwDeviceID;
  /*<thisrel this+0x8>*/ /*|0x2|*/ unsigned short wMid;
  /*<thisrel this+0xa>*/ /*|0x2|*/ unsigned short wPid;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int vDriverVersion;
  /*<thisrel this+0x10>*/ /*|0x40|*/ unsigned short szPname[32];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x50>

struct _SECURITY_ATTRIBUTES {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long nLength;
  /*<thisrel this+0x4>*/ /*|0x4|*/ void* lpSecurityDescriptor;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int bInheritHandle;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct tagACCEL {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char fVirt;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short key;
  /*<thisrel this+0x4>*/ /*|0x2|*/ unsigned short cmd;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x6>

struct _NETCONNECTINFOSTRUCT {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long cbStructure;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long dwSpeed;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long dwDelay;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long dwOptDataSize;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct tagRASDIALPARAMSW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwSize;
  /*<thisrel this+0x4>*/ /*|0x202|*/ unsigned short szEntryName[257];
  /*<thisrel this+0x206>*/ /*|0x102|*/ unsigned short szPhoneNumber[129];
  /*<thisrel this+0x308>*/ /*|0x102|*/ unsigned short szCallbackNumber[129];
  /*<thisrel this+0x40a>*/ /*|0x202|*/ unsigned short szUserName[257];
  /*<thisrel this+0x60c>*/ /*|0x202|*/ unsigned short szPassword[257];
  /*<thisrel this+0x80e>*/ /*|0x20|*/ unsigned short szDomain[16];
  /*<thisrel this+0x830>*/ /*|0x4|*/ unsigned long dwSubEntry;
  /*<thisrel this+0x834>*/ /*|0x4|*/ unsigned long dwCallbackId;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x838>

struct _SECURITY_QUALITY_OF_SERVICE {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long Length;
  /*<thisrel this+0x4>*/ /*|0x4|*/ enum _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  /*<thisrel this+0x8>*/ /*|0x1|*/ unsigned char ContextTrackingMode;
  /*<thisrel this+0x9>*/ /*|0x1|*/ unsigned char EffectiveOnly;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct tagCONVCONTEXT {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int cb;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int wFlags;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int wCountryID;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int iCodePage;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long dwLangID;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long dwSecurity;
  /*<thisrel this+0x18>*/ /*|0xc|*/ struct _SECURITY_QUALITY_OF_SERVICE qos;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x24>

struct HICON__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct _WIN32_FIND_DATAW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwFileAttributes;
  /*<thisrel this+0x4>*/ /*|0x8|*/ struct _FILETIME ftCreationTime;
  /*<thisrel this+0xc>*/ /*|0x8|*/ struct _FILETIME ftLastAccessTime;
  /*<thisrel this+0x14>*/ /*|0x8|*/ struct _FILETIME ftLastWriteTime;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned long nFileSizeHigh;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned long nFileSizeLow;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned long dwReserved0;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned long dwReserved1;
  /*<thisrel this+0x2c>*/ /*|0x208|*/ unsigned short cFileName[260];
  /*<thisrel this+0x234>*/ /*|0x1c|*/ unsigned short cAlternateFileName[14];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x250>

struct _PRINTER_DEFAULTSW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned short* pDatatype;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct _devicemodeW* pDevMode;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long DesiredAccess;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct tagTEXTMETRICW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long tmHeight;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long tmAscent;
  /*<thisrel this+0x8>*/ /*|0x4|*/ long tmDescent;
  /*<thisrel this+0xc>*/ /*|0x4|*/ long tmInternalLeading;
  /*<thisrel this+0x10>*/ /*|0x4|*/ long tmExternalLeading;
  /*<thisrel this+0x14>*/ /*|0x4|*/ long tmAveCharWidth;
  /*<thisrel this+0x18>*/ /*|0x4|*/ long tmMaxCharWidth;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ long tmWeight;
  /*<thisrel this+0x20>*/ /*|0x4|*/ long tmOverhang;
  /*<thisrel this+0x24>*/ /*|0x4|*/ long tmDigitizedAspectX;
  /*<thisrel this+0x28>*/ /*|0x4|*/ long tmDigitizedAspectY;
  /*<thisrel this+0x2c>*/ /*|0x2|*/ unsigned short tmFirstChar;
  /*<thisrel this+0x2e>*/ /*|0x2|*/ unsigned short tmLastChar;
  /*<thisrel this+0x30>*/ /*|0x2|*/ unsigned short tmDefaultChar;
  /*<thisrel this+0x32>*/ /*|0x2|*/ unsigned short tmBreakChar;
  /*<thisrel this+0x34>*/ /*|0x1|*/ unsigned char tmItalic;
  /*<thisrel this+0x35>*/ /*|0x1|*/ unsigned char tmUnderlined;
  /*<thisrel this+0x36>*/ /*|0x1|*/ unsigned char tmStruckOut;
  /*<thisrel this+0x37>*/ /*|0x1|*/ unsigned char tmPitchAndFamily;
  /*<thisrel this+0x38>*/ /*|0x1|*/ unsigned char tmCharSet;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x3c>

struct tagPANOSE {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char bFamilyType;
  /*<thisrel this+0x1>*/ /*|0x1|*/ unsigned char bSerifStyle;
  /*<thisrel this+0x2>*/ /*|0x1|*/ unsigned char bWeight;
  /*<thisrel this+0x3>*/ /*|0x1|*/ unsigned char bProportion;
  /*<thisrel this+0x4>*/ /*|0x1|*/ unsigned char bContrast;
  /*<thisrel this+0x5>*/ /*|0x1|*/ unsigned char bStrokeVariation;
  /*<thisrel this+0x6>*/ /*|0x1|*/ unsigned char bArmStyle;
  /*<thisrel this+0x7>*/ /*|0x1|*/ unsigned char bLetterform;
  /*<thisrel this+0x8>*/ /*|0x1|*/ unsigned char bMidline;
  /*<thisrel this+0x9>*/ /*|0x1|*/ unsigned char bXHeight;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xa>

struct tagPOINT {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long x;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long y;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct _OUTLINETEXTMETRICW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int otmSize;
  /*<thisrel this+0x4>*/ /*|0x3c|*/ struct tagTEXTMETRICW otmTextMetrics;
  /*<thisrel this+0x40>*/ /*|0x1|*/ unsigned char otmFiller;
  /*<thisrel this+0x41>*/ /*|0xa|*/ struct tagPANOSE otmPanoseNumber;
  /*<thisrel this+0x4c>*/ /*|0x4|*/ unsigned int otmfsSelection;
  /*<thisrel this+0x50>*/ /*|0x4|*/ unsigned int otmfsType;
  /*<thisrel this+0x54>*/ /*|0x4|*/ int otmsCharSlopeRise;
  /*<thisrel this+0x58>*/ /*|0x4|*/ int otmsCharSlopeRun;
  /*<thisrel this+0x5c>*/ /*|0x4|*/ int otmItalicAngle;
  /*<thisrel this+0x60>*/ /*|0x4|*/ unsigned int otmEMSquare;
  /*<thisrel this+0x64>*/ /*|0x4|*/ int otmAscent;
  /*<thisrel this+0x68>*/ /*|0x4|*/ int otmDescent;
  /*<thisrel this+0x6c>*/ /*|0x4|*/ unsigned int otmLineGap;
  /*<thisrel this+0x70>*/ /*|0x4|*/ unsigned int otmsCapEmHeight;
  /*<thisrel this+0x74>*/ /*|0x4|*/ unsigned int otmsXHeight;
  /*<thisrel this+0x78>*/ /*|0x10|*/ struct tagRECT otmrcFontBox;
  /*<thisrel this+0x88>*/ /*|0x4|*/ int otmMacAscent;
  /*<thisrel this+0x8c>*/ /*|0x4|*/ int otmMacDescent;
  /*<thisrel this+0x90>*/ /*|0x4|*/ unsigned int otmMacLineGap;
  /*<thisrel this+0x94>*/ /*|0x4|*/ unsigned int otmusMinimumPPEM;
  /*<thisrel this+0x98>*/ /*|0x8|*/ struct tagPOINT otmptSubscriptSize;
  /*<thisrel this+0xa0>*/ /*|0x8|*/ struct tagPOINT otmptSubscriptOffset;
  /*<thisrel this+0xa8>*/ /*|0x8|*/ struct tagPOINT otmptSuperscriptSize;
  /*<thisrel this+0xb0>*/ /*|0x8|*/ struct tagPOINT otmptSuperscriptOffset;
  /*<thisrel this+0xb8>*/ /*|0x4|*/ unsigned int otmsStrikeoutSize;
  /*<thisrel this+0xbc>*/ /*|0x4|*/ int otmsStrikeoutPosition;
  /*<thisrel this+0xc0>*/ /*|0x4|*/ int otmsUnderscoreSize;
  /*<thisrel this+0xc4>*/ /*|0x4|*/ int otmsUnderscorePosition;
  /*<thisrel this+0xc8>*/ /*|0x4|*/ char* otmpFamilyName;
  /*<thisrel this+0xcc>*/ /*|0x4|*/ char* otmpFaceName;
  /*<thisrel this+0xd0>*/ /*|0x4|*/ char* otmpStyleName;
  /*<thisrel this+0xd4>*/ /*|0x4|*/ char* otmpFullName;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xd8>

struct HDDEDATA__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct tagCIEXYZ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long ciexyzX;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long ciexyzY;
  /*<thisrel this+0x8>*/ /*|0x4|*/ long ciexyzZ;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct tagICEXYZTRIPLE {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xc|*/ struct tagCIEXYZ ciexyzRed;
  /*<thisrel this+0xc>*/ /*|0xc|*/ struct tagCIEXYZ ciexyzGreen;
  /*<thisrel this+0x18>*/ /*|0xc|*/ struct tagCIEXYZ ciexyzBlue;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x24>

struct _browseinfoW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct HWND__* hwndOwner;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct _ITEMIDLIST* pidlRoot;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned short* pszDisplayName;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned short* lpszTitle;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int ulFlags;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int  (lpfn*)(struct HWND__*, unsigned int, long, long);
  /*<thisrel this+0x18>*/ /*|0x4|*/ long lParam;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int iImage;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct tagOLEUICONVERTW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long cbStruct;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct HWND__* hWndOwner;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned short* lpszCaption;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int  (lpfnHook*)(struct HWND__*, unsigned int, unsigned int, long);
  /*<thisrel this+0x14>*/ /*|0x4|*/ long lCustData;
  /*<thisrel this+0x18>*/ /*|0x4|*/ struct HINSTANCE__* hInstance;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned short* lpszTemplate;
  /*<thisrel this+0x20>*/ /*|0x4|*/ struct HRSRC__* hResource;
  /*<thisrel this+0x24>*/ /*|0x10|*/ struct _GUID clsid;
  /*<thisrel this+0x34>*/ /*|0x10|*/ struct _GUID clsidConvertDefault;
  /*<thisrel this+0x44>*/ /*|0x10|*/ struct _GUID clsidActivateDefault;
  /*<thisrel this+0x54>*/ /*|0x10|*/ struct _GUID clsidNew;
  /*<thisrel this+0x64>*/ /*|0x4|*/ unsigned long dvAspect;
  /*<thisrel this+0x68>*/ /*|0x2|*/ unsigned short wFormat;
  /*<thisrel this+0x6c>*/ /*|0x4|*/ int fIsLinkedObject;
  /*<thisrel this+0x70>*/ /*|0x4|*/ void* hMetaPict;
  /*<thisrel this+0x74>*/ /*|0x4|*/ unsigned short* lpszUserType;
  /*<thisrel this+0x78>*/ /*|0x4|*/ int fObjectsIconChanged;
  /*<thisrel this+0x7c>*/ /*|0x4|*/ unsigned short* lpszDefLabel;
  /*<thisrel this+0x80>*/ /*|0x4|*/ unsigned int cClsidExclude;
  /*<thisrel this+0x84>*/ /*|0x4|*/ struct _GUID* lpClsidExclude;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x88>

struct _SHFILEOPSTRUCTW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct HWND__* hwnd;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int wFunc;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned short* pFrom;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned short* pTo;
  /*<thisrel this+0x10>*/ /*|0x2|*/ unsigned short fFlags;
  /*<thisrel this+0x12>*/ /*|0x4|*/ int fAnyOperationsAborted;
  /*<thisrel this+0x16>*/ /*|0x4|*/ void* hNameMappings;
  /*<thisrel this+0x1a>*/ /*|0x4|*/ unsigned short* lpszProgressTitle;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1e>

struct RASIPADDR {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char a;
  /*<thisrel this+0x1>*/ /*|0x1|*/ unsigned char b;
  /*<thisrel this+0x2>*/ /*|0x1|*/ unsigned char c;
  /*<thisrel this+0x3>*/ /*|0x1|*/ unsigned char d;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct tagRASENTRYW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwfOptions;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long dwCountryID;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long dwCountryCode;
  /*<thisrel this+0x10>*/ /*|0x16|*/ unsigned short szAreaCode[11];
  /*<thisrel this+0x26>*/ /*|0x102|*/ unsigned short szLocalPhoneNumber[129];
  /*<thisrel this+0x128>*/ /*|0x4|*/ unsigned long dwAlternateOffset;
  /*<thisrel this+0x12c>*/ /*|0x4|*/ struct RASIPADDR ipaddr;
  /*<thisrel this+0x130>*/ /*|0x4|*/ struct RASIPADDR ipaddrDns;
  /*<thisrel this+0x134>*/ /*|0x4|*/ struct RASIPADDR ipaddrDnsAlt;
  /*<thisrel this+0x138>*/ /*|0x4|*/ struct RASIPADDR ipaddrWins;
  /*<thisrel this+0x13c>*/ /*|0x4|*/ struct RASIPADDR ipaddrWinsAlt;
  /*<thisrel this+0x140>*/ /*|0x4|*/ unsigned long dwFrameSize;
  /*<thisrel this+0x144>*/ /*|0x4|*/ unsigned long dwfNetProtocols;
  /*<thisrel this+0x148>*/ /*|0x4|*/ unsigned long dwFramingProtocol;
  /*<thisrel this+0x14c>*/ /*|0x208|*/ unsigned short szScript[260];
  /*<thisrel this+0x354>*/ /*|0x208|*/ unsigned short szAutodialDll[260];
  /*<thisrel this+0x55c>*/ /*|0x208|*/ unsigned short szAutodialFunc[260];
  /*<thisrel this+0x764>*/ /*|0x22|*/ unsigned short szDeviceType[17];
  /*<thisrel this+0x786>*/ /*|0x102|*/ unsigned short szDeviceName[129];
  /*<thisrel this+0x888>*/ /*|0x42|*/ unsigned short szX25PadType[33];
  /*<thisrel this+0x8ca>*/ /*|0x192|*/ unsigned short szX25Address[201];
  /*<thisrel this+0xa5c>*/ /*|0x192|*/ unsigned short szX25Facilities[201];
  /*<thisrel this+0xbee>*/ /*|0x192|*/ unsigned short szX25UserData[201];
  /*<thisrel this+0xd80>*/ /*|0x4|*/ unsigned long dwChannels;
  /*<thisrel this+0xd84>*/ /*|0x4|*/ unsigned long dwReserved1;
  /*<thisrel this+0xd88>*/ /*|0x4|*/ unsigned long dwReserved2;
  /*<thisrel this+0xd8c>*/ /*|0x4|*/ unsigned long dwSubEntries;
  /*<thisrel this+0xd90>*/ /*|0x4|*/ unsigned long dwDialMode;
  /*<thisrel this+0xd94>*/ /*|0x4|*/ unsigned long dwDialExtraPercent;
  /*<thisrel this+0xd98>*/ /*|0x4|*/ unsigned long dwDialExtraSampleSeconds;
  /*<thisrel this+0xd9c>*/ /*|0x4|*/ unsigned long dwHangUpExtraPercent;
  /*<thisrel this+0xda0>*/ /*|0x4|*/ unsigned long dwHangUpExtraSampleSeconds;
  /*<thisrel this+0xda4>*/ /*|0x4|*/ unsigned long dwIdleDisconnectSeconds;
  /*<thisrel this+0xda8>*/ /*|0x4|*/ unsigned long dwType;
  /*<thisrel this+0xdac>*/ /*|0x4|*/ unsigned long dwEncryptionType;
  /*<thisrel this+0xdb0>*/ /*|0x4|*/ unsigned long dwCustomAuthKey;
  /*<thisrel this+0xdb4>*/ /*|0x10|*/ struct _GUID guidId;
  /*<thisrel this+0xdc4>*/ /*|0x208|*/ unsigned short szCustomDialDll[260];
  /*<thisrel this+0xfcc>*/ /*|0x4|*/ unsigned long dwVpnStrategy;
  /*<thisrel this+0xfd0>*/ /*|0x4|*/ unsigned long dwfOptions2;
  /*<thisrel this+0xfd4>*/ /*|0x4|*/ unsigned long dwfOptions3;
  /*<thisrel this+0xfd8>*/ /*|0x200|*/ unsigned short szDnsSuffix[256];
  /*<thisrel this+0x11d8>*/ /*|0x4|*/ unsigned long dwTcpWindowSize;
  /*<thisrel this+0x11dc>*/ /*|0x208|*/ unsigned short szPrerequisitePbk[260];
  /*<thisrel this+0x13e4>*/ /*|0x202|*/ unsigned short szPrerequisiteEntry[257];
  /*<thisrel this+0x15e8>*/ /*|0x4|*/ unsigned long dwRedialCount;
  /*<thisrel this+0x15ec>*/ /*|0x4|*/ unsigned long dwRedialPause;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x15f0>

struct tagOLEUIGNRLPROPSW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long cbStruct;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x8>*/ /*|0x8|*/ unsigned long dwReserved1[2];
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int  (lpfnHook*)(struct HWND__*, unsigned int, unsigned int, long);
  /*<thisrel this+0x14>*/ /*|0x4|*/ long lCustData;
  /*<thisrel this+0x18>*/ /*|0xc|*/ unsigned long dwReserved2[3];
  /*<thisrel this+0x24>*/ /*|0x4|*/ struct tagOLEUIOBJECTPROPSW* lpOP;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x28>

struct IStorageVtbl {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long  (QueryInterface*)(struct IStorage*, struct _GUID*, void**);
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long  (AddRef*)(struct IStorage*);
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long  (Release*)(struct IStorage*);
  /*<thisrel this+0xc>*/ /*|0x4|*/ long  (CreateStream*)(struct IStorage*, unsigned short*, unsigned long, unsigned long, unsigned long, struct IStream**);
  /*<thisrel this+0x10>*/ /*|0x4|*/ long  (OpenStream*)(struct IStorage*, unsigned short*, void*, unsigned long, unsigned long, struct IStream**);
  /*<thisrel this+0x14>*/ /*|0x4|*/ long  (CreateStorage*)(struct IStorage*, unsigned short*, unsigned long, unsigned long, unsigned long, struct IStorage**);
  /*<thisrel this+0x18>*/ /*|0x4|*/ long  (OpenStorage*)(struct IStorage*, unsigned short*, struct IStorage*, unsigned long, unsigned short**, unsigned long, struct IStorage**);
  /*<thisrel this+0x1c>*/ /*|0x4|*/ long  (CopyTo*)(struct IStorage*, unsigned long, struct _GUID*, unsigned short**, struct IStorage*);
  /*<thisrel this+0x20>*/ /*|0x4|*/ long  (MoveElementTo*)(struct IStorage*, unsigned short*, struct IStorage*, unsigned short*, unsigned long);
  /*<thisrel this+0x24>*/ /*|0x4|*/ long  (Commit*)(struct IStorage*, unsigned long);
  /*<thisrel this+0x28>*/ /*|0x4|*/ long  (Revert*)(struct IStorage*);
  /*<thisrel this+0x2c>*/ /*|0x4|*/ long  (EnumElements*)(struct IStorage*, unsigned long, void*, unsigned long, struct IEnumSTATSTG**);
  /*<thisrel this+0x30>*/ /*|0x4|*/ long  (DestroyElement*)(struct IStorage*, unsigned short*);
  /*<thisrel this+0x34>*/ /*|0x4|*/ long  (RenameElement*)(struct IStorage*, unsigned short*, unsigned short*);
  /*<thisrel this+0x38>*/ /*|0x4|*/ long  (SetElementTimes*)(struct IStorage*, unsigned short*, struct _FILETIME*, struct _FILETIME*, struct _FILETIME*);
  /*<thisrel this+0x3c>*/ /*|0x4|*/ long  (SetClass*)(struct IStorage*, struct _GUID*);
  /*<thisrel this+0x40>*/ /*|0x4|*/ long  (SetStateBits*)(struct IStorage*, unsigned long, unsigned long);
  /*<thisrel this+0x44>*/ /*|0x4|*/ long  (Stat*)(struct IStorage*, struct tagSTATSTG*, unsigned long);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x48>

struct __unnamed_d0_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long LowPart;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long HighPart;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct HCONV__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct HSZ__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct HCONVLIST__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct tagCONVINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long cb;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long hUser;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct HCONV__* hConvPartner;
  /*<thisrel this+0xc>*/ /*|0x4|*/ struct HSZ__* hszSvcPartner;
  /*<thisrel this+0x10>*/ /*|0x4|*/ struct HSZ__* hszServiceReq;
  /*<thisrel this+0x14>*/ /*|0x4|*/ struct HSZ__* hszTopic;
  /*<thisrel this+0x18>*/ /*|0x4|*/ struct HSZ__* hszItem;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned int wFmt;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned int wType;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned int wStatus;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned int wConvst;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ unsigned int wLastError;
  /*<thisrel this+0x30>*/ /*|0x4|*/ struct HCONVLIST__* hConvList;
  /*<thisrel this+0x34>*/ /*|0x24|*/ struct tagCONVCONTEXT ConvCtxt;
  /*<thisrel this+0x58>*/ /*|0x4|*/ struct HWND__* hwnd;
  /*<thisrel this+0x5c>*/ /*|0x4|*/ struct HWND__* hwndPartner;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x60>

struct HRASCONN__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct _LUID {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long LowPart;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long HighPart;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct tagRASCONNW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct HRASCONN__* hrasconn;
  /*<thisrel this+0x8>*/ /*|0x202|*/ unsigned short szEntryName[257];
  /*<thisrel this+0x20a>*/ /*|0x22|*/ unsigned short szDeviceType[17];
  /*<thisrel this+0x22c>*/ /*|0x102|*/ unsigned short szDeviceName[129];
  /*<thisrel this+0x32e>*/ /*|0x208|*/ unsigned short szPhonebook[260];
  /*<thisrel this+0x538>*/ /*|0x4|*/ unsigned long dwSubEntry;
  /*<thisrel this+0x53c>*/ /*|0x10|*/ struct _GUID guidEntry;
  /*<thisrel this+0x54c>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x550>*/ /*|0x8|*/ struct _LUID luid;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x558>

struct _SHFILEINFOW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct HICON__* hIcon;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int iIcon;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long dwAttributes;
  /*<thisrel this+0xc>*/ /*|0x208|*/ unsigned short szDisplayName[260];
  /*<thisrel this+0x214>*/ /*|0xa0|*/ unsigned short szTypeName[80];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x2b4>

struct _SECURITY_FUNCTION_TABLE_W {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwVersion;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long  (EnumerateSecurityPackagesW*)(unsigned long*, struct _SecPkgInfoW**);
  /*<thisrel this+0x8>*/ /*|0x4|*/ long  (QueryCredentialsAttributesW*)(struct _SecHandle*, unsigned long, void*);
  /*<thisrel this+0xc>*/ /*|0x4|*/ long  (AcquireCredentialsHandleW*)(unsigned short*, unsigned short*, unsigned long, void*, void*, void  (*)(void*, void*, unsigned long, void**, long*), void*, struct _SecHandle*, union _LARGE_INTEGER*);
  /*<thisrel this+0x10>*/ /*|0x4|*/ long  (FreeCredentialsHandle*)(struct _SecHandle*);
  /*<thisrel this+0x14>*/ /*|0x4|*/ void* Reserved2;
  /*<thisrel this+0x18>*/ /*|0x4|*/ long  (InitializeSecurityContextW*)(struct _SecHandle*, struct _SecHandle*, unsigned short*, unsigned long, unsigned long, unsigned long, struct _SecBufferDesc*, unsigned long, struct _SecHandle*, struct _SecBufferDesc*, unsigned long*, union _LARGE_INTEGER*);
  /*<thisrel this+0x1c>*/ /*|0x4|*/ long  (AcceptSecurityContext*)(struct _SecHandle*, struct _SecHandle*, struct _SecBufferDesc*, unsigned long, unsigned long, struct _SecHandle*, struct _SecBufferDesc*, unsigned long*, union _LARGE_INTEGER*);
  /*<thisrel this+0x20>*/ /*|0x4|*/ long  (CompleteAuthToken*)(struct _SecHandle*, struct _SecBufferDesc*);
  /*<thisrel this+0x24>*/ /*|0x4|*/ long  (DeleteSecurityContext*)(struct _SecHandle*);
  /*<thisrel this+0x28>*/ /*|0x4|*/ long  (ApplyControlToken*)(struct _SecHandle*, struct _SecBufferDesc*);
  /*<thisrel this+0x2c>*/ /*|0x4|*/ long  (QueryContextAttributesW*)(struct _SecHandle*, unsigned long, void*);
  /*<thisrel this+0x30>*/ /*|0x4|*/ long  (ImpersonateSecurityContext*)(struct _SecHandle*);
  /*<thisrel this+0x34>*/ /*|0x4|*/ long  (RevertSecurityContext*)(struct _SecHandle*);
  /*<thisrel this+0x38>*/ /*|0x4|*/ long  (MakeSignature*)(struct _SecHandle*, unsigned long, struct _SecBufferDesc*, unsigned long);
  /*<thisrel this+0x3c>*/ /*|0x4|*/ long  (VerifySignature*)(struct _SecHandle*, struct _SecBufferDesc*, unsigned long, unsigned long*);
  /*<thisrel this+0x40>*/ /*|0x4|*/ long  (FreeContextBuffer*)(void*);
  /*<thisrel this+0x44>*/ /*|0x4|*/ long  (QuerySecurityPackageInfoW*)(unsigned short*, struct _SecPkgInfoW**);
  /*<thisrel this+0x48>*/ /*|0x4|*/ void* Reserved3;
  /*<thisrel this+0x4c>*/ /*|0x4|*/ void* Reserved4;
  /*<thisrel this+0x50>*/ /*|0x4|*/ long  (ExportSecurityContext*)(struct _SecHandle*, unsigned long, struct _SecBuffer*, void**);
  /*<thisrel this+0x54>*/ /*|0x4|*/ long  (ImportSecurityContextW*)(unsigned short*, struct _SecBuffer*, void*, struct _SecHandle*);
  /*<thisrel this+0x58>*/ /*|0x4|*/ long  (AddCredentialsW*)(struct _SecHandle*, unsigned short*, unsigned short*, unsigned long, void*, void  (*)(void*, void*, unsigned long, void**, long*), void*, union _LARGE_INTEGER*);
  /*<thisrel this+0x5c>*/ /*|0x4|*/ void* Reserved8;
  /*<thisrel this+0x60>*/ /*|0x4|*/ long  (QuerySecurityContextToken*)(struct _SecHandle*, void**);
  /*<thisrel this+0x64>*/ /*|0x4|*/ long  (EncryptMessage*)(struct _SecHandle*, unsigned long, struct _SecBufferDesc*, unsigned long);
  /*<thisrel this+0x68>*/ /*|0x4|*/ long  (DecryptMessage*)(struct _SecHandle*, struct _SecBufferDesc*, unsigned long, unsigned long*);
  /*<thisrel this+0x6c>*/ /*|0x4|*/ long  (SetContextAttributesW*)(struct _SecHandle*, unsigned long, void*, unsigned long);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x70>

struct _STARTUPINFOW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long cb;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned short* lpReserved;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned short* lpDesktop;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned short* lpTitle;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long dwX;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long dwY;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long dwXSize;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned long dwYSize;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned long dwXCountChars;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned long dwYCountChars;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned long dwFillAttribute;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x30>*/ /*|0x2|*/ unsigned short wShowWindow;
  /*<thisrel this+0x32>*/ /*|0x2|*/ unsigned short cbReserved2;
  /*<thisrel this+0x34>*/ /*|0x4|*/ unsigned char* lpReserved2;
  /*<thisrel this+0x38>*/ /*|0x4|*/ void* hStdInput;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ void* hStdOutput;
  /*<thisrel this+0x40>*/ /*|0x4|*/ void* hStdError;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x44>

struct HACCEL__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct tagLOGCOLORSPACEW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long lcsSignature;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long lcsVersion;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long lcsSize;
  /*<thisrel this+0xc>*/ /*|0x4|*/ long lcsCSType;
  /*<thisrel this+0x10>*/ /*|0x4|*/ long lcsIntent;
  /*<thisrel this+0x14>*/ /*|0x24|*/ struct tagICEXYZTRIPLE lcsEndpoints;
  /*<thisrel this+0x38>*/ /*|0x4|*/ unsigned long lcsGammaRed;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ unsigned long lcsGammaGreen;
  /*<thisrel this+0x40>*/ /*|0x4|*/ unsigned long lcsGammaBlue;
  /*<thisrel this+0x44>*/ /*|0x208|*/ unsigned short lcsFilename[260];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x24c>

struct tagOLEUIINSERTOBJECTW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long cbStruct;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct HWND__* hWndOwner;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned short* lpszCaption;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int  (lpfnHook*)(struct HWND__*, unsigned int, unsigned int, long);
  /*<thisrel this+0x14>*/ /*|0x4|*/ long lCustData;
  /*<thisrel this+0x18>*/ /*|0x4|*/ struct HINSTANCE__* hInstance;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned short* lpszTemplate;
  /*<thisrel this+0x20>*/ /*|0x4|*/ struct HRSRC__* hResource;
  /*<thisrel this+0x24>*/ /*|0x10|*/ struct _GUID clsid;
  /*<thisrel this+0x34>*/ /*|0x4|*/ unsigned short* lpszFile;
  /*<thisrel this+0x38>*/ /*|0x4|*/ unsigned int cchFile;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ unsigned int cClsidExclude;
  /*<thisrel this+0x40>*/ /*|0x4|*/ struct _GUID* lpClsidExclude;
  /*<thisrel this+0x44>*/ /*|0x10|*/ struct _GUID iid;
  /*<thisrel this+0x54>*/ /*|0x4|*/ unsigned long oleRender;
  /*<thisrel this+0x58>*/ /*|0x4|*/ struct tagFORMATETC* lpFormatEtc;
  /*<thisrel this+0x5c>*/ /*|0x4|*/ struct IOleClientSite* lpIOleClientSite;
  /*<thisrel this+0x60>*/ /*|0x4|*/ struct IStorage* lpIStorage;
  /*<thisrel this+0x64>*/ /*|0x4|*/ void** ppvObj;
  /*<thisrel this+0x68>*/ /*|0x4|*/ long sc;
  /*<thisrel this+0x6c>*/ /*|0x4|*/ void* hMetaPict;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x70>

struct tagOLEUIOBJECTPROPSW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long cbStruct;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct _PROPSHEETHEADERW* lpPS;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long dwObject;
  /*<thisrel this+0x10>*/ /*|0x4|*/ struct IOleUIObjInfoW* lpObjInfo;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long dwLink;
  /*<thisrel this+0x18>*/ /*|0x4|*/ struct IOleUILinkInfoW* lpLinkInfo;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ struct tagOLEUIGNRLPROPSW* lpGP;
  /*<thisrel this+0x20>*/ /*|0x4|*/ struct tagOLEUIVIEWPROPSW* lpVP;
  /*<thisrel this+0x24>*/ /*|0x4|*/ struct tagOLEUILINKPROPSW* lpLP;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x28>

struct tagOLEUILINKPROPSW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long cbStruct;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x8>*/ /*|0x8|*/ unsigned long dwReserved1[2];
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int  (lpfnHook*)(struct HWND__*, unsigned int, unsigned int, long);
  /*<thisrel this+0x14>*/ /*|0x4|*/ long lCustData;
  /*<thisrel this+0x18>*/ /*|0xc|*/ unsigned long dwReserved2[3];
  /*<thisrel this+0x24>*/ /*|0x4|*/ struct tagOLEUIOBJECTPROPSW* lpOP;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x28>

struct HBRUSH__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct HFONT__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct tagOLEUIEDITLINKSW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long cbStruct;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct HWND__* hWndOwner;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned short* lpszCaption;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int  (lpfnHook*)(struct HWND__*, unsigned int, unsigned int, long);
  /*<thisrel this+0x14>*/ /*|0x4|*/ long lCustData;
  /*<thisrel this+0x18>*/ /*|0x4|*/ struct HINSTANCE__* hInstance;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned short* lpszTemplate;
  /*<thisrel this+0x20>*/ /*|0x4|*/ struct HRSRC__* hResource;
  /*<thisrel this+0x24>*/ /*|0x4|*/ struct IOleUILinkContainerW* lpOleUILinkContainer;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x28>

struct _ABC {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int abcA;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int abcB;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int abcC;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct _PROPSHEETHEADERW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct HWND__* hwndParent;
  /*<thisrel this+0xc>*/ /*|0x4|*/ struct HINSTANCE__* hInstance;
  /*<thisrel this+0x10>*/ /*|0x4|*/ struct HICON__* hIcon;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned short* pszIcon;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned short* pszCaption;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned int nPages;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned int nStartPage;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned short* pStartPage;
  /*<thisrel this+0x20>*/ /*|0x4|*/ struct _PROPSHEETPAGEW* ppsp;
  /*<thisrel this+0x20>*/ /*|0x4|*/ struct _PSP** phpage;
  /*<thisrel this+0x24>*/ /*|0x4|*/ int  (pfnCallback*)(struct HWND__*, unsigned int, long);
  /*<thisrel this+0x28>*/ /*|0x4|*/ struct HBITMAP__* hbmWatermark;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned short* pszbmWatermark;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ struct HPALETTE__* hplWatermark;
  /*<thisrel this+0x30>*/ /*|0x4|*/ struct HBITMAP__* hbmHeader;
  /*<thisrel this+0x30>*/ /*|0x4|*/ unsigned short* pszbmHeader;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x34>

struct IOleUIObjInfoW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct IOleUIObjInfoWVtbl* lpVtbl;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct tagOLEUIVIEWPROPSW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long cbStruct;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x8>*/ /*|0x8|*/ unsigned long dwReserved1[2];
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int  (lpfnHook*)(struct HWND__*, unsigned int, unsigned int, long);
  /*<thisrel this+0x14>*/ /*|0x4|*/ long lCustData;
  /*<thisrel this+0x18>*/ /*|0xc|*/ unsigned long dwReserved2[3];
  /*<thisrel this+0x24>*/ /*|0x4|*/ struct tagOLEUIOBJECTPROPSW* lpOP;
  /*<thisrel this+0x28>*/ /*|0x4|*/ int nScaleMin;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ int nScaleMax;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x30>

struct tagSIZE {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long cx;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long cy;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct tagPOLYTEXTW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int x;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int y;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int n;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned short* lpstr;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int uiFlags;
  /*<thisrel this+0x14>*/ /*|0x10|*/ struct tagRECT rcl;
  /*<thisrel this+0x24>*/ /*|0x4|*/ int* pdx;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x28>

struct tagFINDREPLACEW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long lStructSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct HWND__* hwndOwner;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct HINSTANCE__* hInstance;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long Flags;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned short* lpstrFindWhat;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned short* lpstrReplaceWith;
  /*<thisrel this+0x18>*/ /*|0x2|*/ unsigned short wFindWhatLen;
  /*<thisrel this+0x1a>*/ /*|0x2|*/ unsigned short wReplaceWithLen;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ long lCustData;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned int  (lpfnHook*)(struct HWND__*, unsigned int, unsigned int, long);
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned short* lpTemplateName;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x28>

struct _FOCUS_EVENT_RECORD {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int bSetFocus;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct _COMMTIMEOUTS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long ReadIntervalTimeout;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long ReadTotalTimeoutMultiplier;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long ReadTotalTimeoutConstant;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long WriteTotalTimeoutMultiplier;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long WriteTotalTimeoutConstant;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct tagMSG {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct HWND__* hwnd;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int message;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int wParam;
  /*<thisrel this+0xc>*/ /*|0x4|*/ long lParam;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long time;
  /*<thisrel this+0x14>*/ /*|0x8|*/ struct tagPOINT pt;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c>

struct tagLOGPALETTE {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short palVersion;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short palNumEntries;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct tagPALETTEENTRY palPalEntry[1];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct HDC__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct _SecBuffer {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long cbBuffer;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long BufferType;
  /*<thisrel this+0x8>*/ /*|0x4|*/ void* pvBuffer;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct tagBITMAPINFOHEADER {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long biSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long biWidth;
  /*<thisrel this+0x8>*/ /*|0x4|*/ long biHeight;
  /*<thisrel this+0xc>*/ /*|0x2|*/ unsigned short biPlanes;
  /*<thisrel this+0xe>*/ /*|0x2|*/ unsigned short biBitCount;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long biCompression;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long biSizeImage;
  /*<thisrel this+0x18>*/ /*|0x4|*/ long biXPelsPerMeter;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ long biYPelsPerMeter;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned long biClrUsed;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned long biClrImportant;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x28>

struct ICDECOMPRESSEX {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct tagBITMAPINFOHEADER* lpbiSrc;
  /*<thisrel this+0x8>*/ /*|0x4|*/ void* lpSrc;
  /*<thisrel this+0xc>*/ /*|0x4|*/ struct tagBITMAPINFOHEADER* lpbiDst;
  /*<thisrel this+0x10>*/ /*|0x4|*/ void* lpDst;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int xDst;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int yDst;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int dxDst;
  /*<thisrel this+0x20>*/ /*|0x4|*/ int dyDst;
  /*<thisrel this+0x24>*/ /*|0x4|*/ int xSrc;
  /*<thisrel this+0x28>*/ /*|0x4|*/ int ySrc;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ int dxSrc;
  /*<thisrel this+0x30>*/ /*|0x4|*/ int dySrc;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x34>

struct tagRASEAPINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwSizeofEapInfo;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned char* pbEapInfo;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct value_entW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned short* ve_valuename;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long ve_valuelen;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long ve_valueptr;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long ve_type;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct tagWNDCLASSEXW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int cbSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int style;
  /*<thisrel this+0x8>*/ /*|0x4|*/ long  (lpfnWndProc*)(struct HWND__*, unsigned int, unsigned int, long);
  /*<thisrel this+0xc>*/ /*|0x4|*/ int cbClsExtra;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int cbWndExtra;
  /*<thisrel this+0x14>*/ /*|0x4|*/ struct HINSTANCE__* hInstance;
  /*<thisrel this+0x18>*/ /*|0x4|*/ struct HICON__* hIcon;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ struct HICON__* hCursor;
  /*<thisrel this+0x20>*/ /*|0x4|*/ struct HBRUSH__* hbrBackground;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned short* lpszMenuName;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned short* lpszClassName;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ struct HICON__* hIconSm;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x30>

struct HMENU__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct tagMENUITEMINFOW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int cbSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int fMask;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int fType;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int fState;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int wID;
  /*<thisrel this+0x14>*/ /*|0x4|*/ struct HMENU__* hSubMenu;
  /*<thisrel this+0x18>*/ /*|0x4|*/ struct HBITMAP__* hbmpChecked;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ struct HBITMAP__* hbmpUnchecked;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned long dwItemData;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned short* dwTypeData;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned int cch;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ struct HBITMAP__* hbmpItem;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x30>

struct HTASK__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct _COORD {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ short X;
  /*<thisrel this+0x2>*/ /*|0x2|*/ short Y;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct _MOUSE_EVENT_RECORD {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct _COORD dwMousePosition;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwButtonState;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long dwControlKeyState;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long dwEventFlags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct _PSP {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x0>

struct _CONNECTDLGSTRUCTW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long cbStructure;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct HWND__* hwndOwner;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct _NETRESOURCEW* lpConnRes;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long dwDevNum;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct tagCHOOSECOLORW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long lStructSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct HWND__* hwndOwner;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct HWND__* hInstance;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long rgbResult;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long* lpCustColors;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long Flags;
  /*<thisrel this+0x18>*/ /*|0x4|*/ long lCustData;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned int  (lpfnHook*)(struct HWND__*, unsigned int, unsigned int, long);
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned short* lpTemplateName;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x24>

struct _SYSTEMTIME {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short wYear;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short wMonth;
  /*<thisrel this+0x4>*/ /*|0x2|*/ unsigned short wDayOfWeek;
  /*<thisrel this+0x6>*/ /*|0x2|*/ unsigned short wDay;
  /*<thisrel this+0x8>*/ /*|0x2|*/ unsigned short wHour;
  /*<thisrel this+0xa>*/ /*|0x2|*/ unsigned short wMinute;
  /*<thisrel this+0xc>*/ /*|0x2|*/ unsigned short wSecond;
  /*<thisrel this+0xe>*/ /*|0x2|*/ unsigned short wMilliseconds;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct _SHELLEXECUTEINFOW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long cbSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long fMask;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct HWND__* hwnd;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned short* lpVerb;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned short* lpFile;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned short* lpParameters;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned short* lpDirectory;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int nShow;
  /*<thisrel this+0x20>*/ /*|0x4|*/ struct HINSTANCE__* hInstApp;
  /*<thisrel this+0x24>*/ /*|0x4|*/ void* lpIDList;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned short* lpClass;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ struct HKEY__* hkeyClass;
  /*<thisrel this+0x30>*/ /*|0x4|*/ unsigned long dwHotKey;
  /*<thisrel this+0x34>*/ /*|0x4|*/ void* hIcon;
  /*<thisrel this+0x34>*/ /*|0x4|*/ void* hMonitor;
  /*<thisrel this+0x38>*/ /*|0x4|*/ void* hProcess;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x3c>

struct IOleUIObjInfoWVtbl {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long  (QueryInterface*)(struct IOleUIObjInfoW*, struct _GUID*, void**);
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long  (AddRef*)(struct IOleUIObjInfoW*);
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long  (Release*)(struct IOleUIObjInfoW*);
  /*<thisrel this+0xc>*/ /*|0x4|*/ long  (GetObjectInfo*)(struct IOleUIObjInfoW*, unsigned long, unsigned long*, unsigned short**, unsigned short**, unsigned short**, unsigned short**);
  /*<thisrel this+0x10>*/ /*|0x4|*/ long  (GetConvertInfo*)(struct IOleUIObjInfoW*, unsigned long, struct _GUID*, unsigned short*, struct _GUID*, struct _GUID**, unsigned int*);
  /*<thisrel this+0x14>*/ /*|0x4|*/ long  (ConvertObject*)(struct IOleUIObjInfoW*, unsigned long, struct _GUID*);
  /*<thisrel this+0x18>*/ /*|0x4|*/ long  (GetViewInfo*)(struct IOleUIObjInfoW*, unsigned long, void**, unsigned long*, int*);
  /*<thisrel this+0x1c>*/ /*|0x4|*/ long  (SetViewInfo*)(struct IOleUIObjInfoW*, unsigned long, void*, unsigned long, int, int);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct tagMIDIOUTCAPSW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short wMid;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short wPid;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int vDriverVersion;
  /*<thisrel this+0x8>*/ /*|0x40|*/ unsigned short szPname[32];
  /*<thisrel this+0x48>*/ /*|0x2|*/ unsigned short wTechnology;
  /*<thisrel this+0x4a>*/ /*|0x2|*/ unsigned short wVoices;
  /*<thisrel this+0x4c>*/ /*|0x2|*/ unsigned short wNotes;
  /*<thisrel this+0x4e>*/ /*|0x2|*/ unsigned short wChannelMask;
  /*<thisrel this+0x50>*/ /*|0x4|*/ unsigned long dwSupport;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x54>

struct _GLYPHMETRICS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int gmBlackBoxX;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int gmBlackBoxY;
  /*<thisrel this+0x8>*/ /*|0x8|*/ struct tagPOINT gmptGlyphOrigin;
  /*<thisrel this+0x10>*/ /*|0x2|*/ short gmCellIncX;
  /*<thisrel this+0x12>*/ /*|0x2|*/ short gmCellIncY;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct tagWAVEINCAPSW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short wMid;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short wPid;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int vDriverVersion;
  /*<thisrel this+0x8>*/ /*|0x40|*/ unsigned short szPname[32];
  /*<thisrel this+0x48>*/ /*|0x4|*/ unsigned long dwFormats;
  /*<thisrel this+0x4c>*/ /*|0x2|*/ unsigned short wChannels;
  /*<thisrel this+0x4e>*/ /*|0x2|*/ unsigned short wReserved1;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x50>

struct tagKERNINGPAIR {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short wFirst;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short wSecond;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int iKernAmount;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct __unnamed_d1_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long LowPart;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long HighPart;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct IOleClientSite {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct IOleClientSiteVtbl* lpVtbl;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct IOleClientSiteVtbl {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long  (QueryInterface*)(struct IOleClientSite*, struct _GUID*, void**);
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long  (AddRef*)(struct IOleClientSite*);
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long  (Release*)(struct IOleClientSite*);
  /*<thisrel this+0xc>*/ /*|0x4|*/ long  (SaveObject*)(struct IOleClientSite*);
  /*<thisrel this+0x10>*/ /*|0x4|*/ long  (GetMoniker*)(struct IOleClientSite*, unsigned long, unsigned long, struct IMoniker**);
  /*<thisrel this+0x14>*/ /*|0x4|*/ long  (GetContainer*)(struct IOleClientSite*, struct IOleContainer**);
  /*<thisrel this+0x18>*/ /*|0x4|*/ long  (ShowObject*)(struct IOleClientSite*);
  /*<thisrel this+0x1c>*/ /*|0x4|*/ long  (OnShowWindow*)(struct IOleClientSite*, int);
  /*<thisrel this+0x20>*/ /*|0x4|*/ long  (RequestNewObjectLayout*)(struct IOleClientSite*);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x24>

struct _KEY_EVENT_RECORD {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int bKeyDown;
  /*<thisrel this+0x4>*/ /*|0x2|*/ unsigned short wRepeatCount;
  /*<thisrel this+0x6>*/ /*|0x2|*/ unsigned short wVirtualKeyCode;
  /*<thisrel this+0x8>*/ /*|0x2|*/ unsigned short wVirtualScanCode;
  /*<thisrel this+0xa>*/ /*|0x2|*/ union __unnamed_d2_ uChar;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long dwControlKeyState;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct tagWAVEOUTCAPSW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short wMid;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short wPid;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int vDriverVersion;
  /*<thisrel this+0x8>*/ /*|0x40|*/ unsigned short szPname[32];
  /*<thisrel this+0x48>*/ /*|0x4|*/ unsigned long dwFormats;
  /*<thisrel this+0x4c>*/ /*|0x2|*/ unsigned short wChannels;
  /*<thisrel this+0x4e>*/ /*|0x2|*/ unsigned short wReserved1;
  /*<thisrel this+0x50>*/ /*|0x4|*/ unsigned long dwSupport;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x54>

struct _numberfmtW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int NumDigits;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int LeadingZero;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int Grouping;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned short* lpDecimalSep;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned short* lpThousandSep;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned int NegativeOrder;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct _DISPLAY_DEVICEW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long cb;
  /*<thisrel this+0x4>*/ /*|0x40|*/ unsigned short DeviceName[32];
  /*<thisrel this+0x44>*/ /*|0x100|*/ unsigned short DeviceString[128];
  /*<thisrel this+0x144>*/ /*|0x4|*/ unsigned long StateFlags;
  /*<thisrel this+0x148>*/ /*|0x100|*/ unsigned short DeviceID[128];
  /*<thisrel this+0x248>*/ /*|0x100|*/ unsigned short DeviceKey[128];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x348>

struct tagOLEUIBUSYW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long cbStruct;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct HWND__* hWndOwner;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned short* lpszCaption;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int  (lpfnHook*)(struct HWND__*, unsigned int, unsigned int, long);
  /*<thisrel this+0x14>*/ /*|0x4|*/ long lCustData;
  /*<thisrel this+0x18>*/ /*|0x4|*/ struct HINSTANCE__* hInstance;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned short* lpszTemplate;
  /*<thisrel this+0x20>*/ /*|0x4|*/ struct HRSRC__* hResource;
  /*<thisrel this+0x24>*/ /*|0x4|*/ struct HTASK__* hTask;
  /*<thisrel this+0x28>*/ /*|0x4|*/ struct HWND__** lphWndDialog;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x2c>

struct IOleObject {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct IOleObjectVtbl* lpVtbl;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct HMETAFILE__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct _devicemodeW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x40|*/ unsigned short dmDeviceName[32];
  /*<thisrel this+0x40>*/ /*|0x2|*/ unsigned short dmSpecVersion;
  /*<thisrel this+0x42>*/ /*|0x2|*/ unsigned short dmDriverVersion;
  /*<thisrel this+0x44>*/ /*|0x2|*/ unsigned short dmSize;
  /*<thisrel this+0x46>*/ /*|0x2|*/ unsigned short dmDriverExtra;
  /*<thisrel this+0x48>*/ /*|0x4|*/ unsigned long dmFields;
  /*<thisrel this+0x4c>*/ /*|0x2|*/ short dmOrientation;
  /*<thisrel this+0x4e>*/ /*|0x2|*/ short dmPaperSize;
  /*<thisrel this+0x50>*/ /*|0x2|*/ short dmPaperLength;
  /*<thisrel this+0x52>*/ /*|0x2|*/ short dmPaperWidth;
  /*<thisrel this+0x4c>*/ /*|0x8|*/ struct _POINTL dmPosition;
  /*<thisrel this+0x54>*/ /*|0x2|*/ short dmScale;
  /*<thisrel this+0x56>*/ /*|0x2|*/ short dmCopies;
  /*<thisrel this+0x58>*/ /*|0x2|*/ short dmDefaultSource;
  /*<thisrel this+0x5a>*/ /*|0x2|*/ short dmPrintQuality;
  /*<thisrel this+0x5c>*/ /*|0x2|*/ short dmColor;
  /*<thisrel this+0x5e>*/ /*|0x2|*/ short dmDuplex;
  /*<thisrel this+0x60>*/ /*|0x2|*/ short dmYResolution;
  /*<thisrel this+0x62>*/ /*|0x2|*/ short dmTTOption;
  /*<thisrel this+0x64>*/ /*|0x2|*/ short dmCollate;
  /*<thisrel this+0x66>*/ /*|0x40|*/ unsigned short dmFormName[32];
  /*<thisrel this+0xa6>*/ /*|0x2|*/ unsigned short dmLogPixels;
  /*<thisrel this+0xa8>*/ /*|0x4|*/ unsigned long dmBitsPerPel;
  /*<thisrel this+0xac>*/ /*|0x4|*/ unsigned long dmPelsWidth;
  /*<thisrel this+0xb0>*/ /*|0x4|*/ unsigned long dmPelsHeight;
  /*<thisrel this+0xb4>*/ /*|0x4|*/ unsigned long dmDisplayFlags;
  /*<thisrel this+0xb4>*/ /*|0x4|*/ unsigned long dmNup;
  /*<thisrel this+0xb8>*/ /*|0x4|*/ unsigned long dmDisplayFrequency;
  /*<thisrel this+0xbc>*/ /*|0x4|*/ unsigned long dmICMMethod;
  /*<thisrel this+0xc0>*/ /*|0x4|*/ unsigned long dmICMIntent;
  /*<thisrel this+0xc4>*/ /*|0x4|*/ unsigned long dmMediaType;
  /*<thisrel this+0xc8>*/ /*|0x4|*/ unsigned long dmDitherType;
  /*<thisrel this+0xcc>*/ /*|0x4|*/ unsigned long dmReserved1;
  /*<thisrel this+0xd0>*/ /*|0x4|*/ unsigned long dmReserved2;
  /*<thisrel this+0xd4>*/ /*|0x4|*/ unsigned long dmPanningWidth;
  /*<thisrel this+0xd8>*/ /*|0x4|*/ unsigned long dmPanningHeight;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xdc>

struct ICSETSTATUSPROC {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long lParam;
  /*<thisrel this+0x8>*/ /*|0x4|*/ long  (Status*)(long, unsigned int, long);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct IEnumOLEVERB {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct IEnumOLEVERBVtbl* lpVtbl;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct IEnumOLEVERBVtbl {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long  (QueryInterface*)(struct IEnumOLEVERB*, struct _GUID*, void**);
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long  (AddRef*)(struct IEnumOLEVERB*);
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long  (Release*)(struct IEnumOLEVERB*);
  /*<thisrel this+0xc>*/ /*|0x4|*/ long  (Next*)(struct IEnumOLEVERB*, unsigned long, struct tagOLEVERB*, unsigned long*);
  /*<thisrel this+0x10>*/ /*|0x4|*/ long  (Skip*)(struct IEnumOLEVERB*, unsigned long);
  /*<thisrel this+0x14>*/ /*|0x4|*/ long  (Reset*)(struct IEnumOLEVERB*);
  /*<thisrel this+0x18>*/ /*|0x4|*/ long  (Clone*)(struct IEnumOLEVERB*, struct IEnumOLEVERB**);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c>

struct _NOTIFYICONDATAW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long cbSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct HWND__* hWnd;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int uID;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int uFlags;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int uCallbackMessage;
  /*<thisrel this+0x14>*/ /*|0x4|*/ struct HICON__* hIcon;
  /*<thisrel this+0x18>*/ /*|0x100|*/ unsigned short szTip[128];
  /*<thisrel this+0x118>*/ /*|0x4|*/ unsigned long dwState;
  /*<thisrel this+0x11c>*/ /*|0x4|*/ unsigned long dwStateMask;
  /*<thisrel this+0x120>*/ /*|0x200|*/ unsigned short szInfo[256];
  /*<thisrel this+0x320>*/ /*|0x4|*/ unsigned int uTimeout;
  /*<thisrel this+0x320>*/ /*|0x4|*/ unsigned int uVersion;
  /*<thisrel this+0x324>*/ /*|0x80|*/ unsigned short szInfoTitle[64];
  /*<thisrel this+0x3a4>*/ /*|0x4|*/ unsigned long dwInfoFlags;
  /*<thisrel this+0x3a8>*/ /*|0x10|*/ struct _GUID guidItem;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x3b8>

struct HDROP__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct tagHELPINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int cbSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int iContextType;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int iCtrlId;
  /*<thisrel this+0xc>*/ /*|0x4|*/ void* hItemHandle;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long dwContextId;
  /*<thisrel this+0x14>*/ /*|0x8|*/ struct tagPOINT MousePos;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c>

struct tagQOCINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long dwInSpeed;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long dwOutSpeed;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct _DOCINFOW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int cbSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned short* lpszDocName;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned short* lpszOutput;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned short* lpszDatatype;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long fwType;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct HMMIO__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct tagWNDCLASSW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int style;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long  (lpfnWndProc*)(struct HWND__*, unsigned int, unsigned int, long);
  /*<thisrel this+0x8>*/ /*|0x4|*/ int cbClsExtra;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int cbWndExtra;
  /*<thisrel this+0x10>*/ /*|0x4|*/ struct HINSTANCE__* hInstance;
  /*<thisrel this+0x14>*/ /*|0x4|*/ struct HICON__* hIcon;
  /*<thisrel this+0x18>*/ /*|0x4|*/ struct HICON__* hCursor;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ struct HBRUSH__* hbrBackground;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned short* lpszMenuName;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned short* lpszClassName;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x28>

struct tagCHOOSEFONTW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long lStructSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct HWND__* hwndOwner;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct HDC__* hDC;
  /*<thisrel this+0xc>*/ /*|0x4|*/ struct tagLOGFONTW* lpLogFont;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int iPointSize;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long Flags;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long rgbColors;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ long lCustData;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned int  (lpfnHook*)(struct HWND__*, unsigned int, unsigned int, long);
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned short* lpTemplateName;
  /*<thisrel this+0x28>*/ /*|0x4|*/ struct HINSTANCE__* hInstance;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ unsigned short* lpszStyle;
  /*<thisrel this+0x30>*/ /*|0x2|*/ unsigned short nFontType;
  /*<thisrel this+0x32>*/ /*|0x2|*/ unsigned short ___MISSING_ALIGNMENT__;
  /*<thisrel this+0x34>*/ /*|0x4|*/ int nSizeMin;
  /*<thisrel this+0x38>*/ /*|0x4|*/ int nSizeMax;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x3c>

struct _cpinfoexW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int MaxCharSize;
  /*<thisrel this+0x4>*/ /*|0x2|*/ unsigned char DefaultChar[2];
  /*<thisrel this+0x6>*/ /*|0xc|*/ unsigned char LeadByte[12];
  /*<thisrel this+0x12>*/ /*|0x2|*/ unsigned short UnicodeDefaultChar;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned int CodePage;
  /*<thisrel this+0x18>*/ /*|0x208|*/ unsigned short CodePageName[260];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x220>

struct _PROCESS_INFORMATION {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ void* hProcess;
  /*<thisrel this+0x4>*/ /*|0x4|*/ void* hThread;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long dwProcessId;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long dwThreadId;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct tagRASDIALEXTENSIONS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwfOptions;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct HWND__* hwndParent;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long reserved;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long reserved1;
  /*<thisrel this+0x14>*/ /*|0x8|*/ struct tagRASEAPINFO RasEapInfo;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c>

struct tagALTTABINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long cbSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int cItems;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int cColumns;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int cRows;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int iColFocus;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int iRowFocus;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int cxItem;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int cyItem;
  /*<thisrel this+0x20>*/ /*|0x8|*/ struct tagPOINT ptStart;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x28>

struct HCOLORSPACE__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct _DISCDLGSTRUCTW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long cbStructure;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct HWND__* hwndOwner;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned short* lpLocalName;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned short* lpRemoteName;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long dwFlags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct HIC__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct tagPSDW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long lStructSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct HWND__* hwndOwner;
  /*<thisrel this+0x8>*/ /*|0x4|*/ void* hDevMode;
  /*<thisrel this+0xc>*/ /*|0x4|*/ void* hDevNames;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long Flags;
  /*<thisrel this+0x14>*/ /*|0x8|*/ struct tagPOINT ptPaperSize;
  /*<thisrel this+0x1c>*/ /*|0x10|*/ struct tagRECT rtMinMargin;
  /*<thisrel this+0x2c>*/ /*|0x10|*/ struct tagRECT rtMargin;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ struct HINSTANCE__* hInstance;
  /*<thisrel this+0x40>*/ /*|0x4|*/ long lCustData;
  /*<thisrel this+0x44>*/ /*|0x4|*/ unsigned int  (lpfnPageSetupHook*)(struct HWND__*, unsigned int, unsigned int, long);
  /*<thisrel this+0x48>*/ /*|0x4|*/ unsigned int  (lpfnPagePaintHook*)(struct HWND__*, unsigned int, unsigned int, long);
  /*<thisrel this+0x4c>*/ /*|0x4|*/ unsigned short* lpPageSetupTemplateName;
  /*<thisrel this+0x50>*/ /*|0x4|*/ void* hPageSetupTemplate;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x54>

struct tMIXERCONTROLDETAILS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long cbStruct;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwControlID;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long cChannels;
  /*<thisrel this+0xc>*/ /*|0x4|*/ struct HWND__* hwndOwner;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long cMultipleItems;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long cbDetails;
  /*<thisrel this+0x14>*/ /*|0x4|*/ void* paDetails;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct HHOOK__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct _cpinfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int MaxCharSize;
  /*<thisrel this+0x4>*/ /*|0x2|*/ unsigned char DefaultChar[2];
  /*<thisrel this+0x6>*/ /*|0xc|*/ unsigned char LeadByte[12];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct tagHW_PROFILE_INFOW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwDockInfo;
  /*<thisrel this+0x4>*/ /*|0x4e|*/ unsigned short szHwProfileGuid[39];
  /*<thisrel this+0x52>*/ /*|0xa0|*/ unsigned short szHwProfileName[80];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xf4>

struct _NETINFOSTRUCT {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long cbStructure;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwProviderVersion;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long dwStatus;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long dwCharacteristics;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long dwHandle;
  /*<thisrel this+0x14>*/ /*|0x2|*/ unsigned short wNetType;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long dwPrinters;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned long dwDrives;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct _CHAR_INFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ union __unnamed_d2_ Char;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short Attributes;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct _SHITEMID {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short cb;
  /*<thisrel this+0x2>*/ /*|0x1|*/ unsigned char abID[1];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x3>

struct ICDRAWSUGGEST {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct tagBITMAPINFOHEADER* lpbiIn;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct tagBITMAPINFOHEADER* lpbiSuggest;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int dxSrc;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int dySrc;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int dxDst;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int dyDst;
  /*<thisrel this+0x18>*/ /*|0x4|*/ struct HIC__* hicDecompressor;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c>

struct IEnumSTATDATAVtbl {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long  (QueryInterface*)(struct IEnumSTATDATA*, struct _GUID*, void**);
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long  (AddRef*)(struct IEnumSTATDATA*);
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long  (Release*)(struct IEnumSTATDATA*);
  /*<thisrel this+0xc>*/ /*|0x4|*/ long  (Next*)(struct IEnumSTATDATA*, unsigned long, struct tagSTATDATA*, unsigned long*);
  /*<thisrel this+0x10>*/ /*|0x4|*/ long  (Skip*)(struct IEnumSTATDATA*, unsigned long);
  /*<thisrel this+0x14>*/ /*|0x4|*/ long  (Reset*)(struct IEnumSTATDATA*);
  /*<thisrel this+0x18>*/ /*|0x4|*/ long  (Clone*)(struct IEnumSTATDATA*, struct IEnumSTATDATA**);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c>

struct tagPDW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long lStructSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct HWND__* hwndOwner;
  /*<thisrel this+0x8>*/ /*|0x4|*/ void* hDevMode;
  /*<thisrel this+0xc>*/ /*|0x4|*/ void* hDevNames;
  /*<thisrel this+0x10>*/ /*|0x4|*/ struct HDC__* hDC;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long Flags;
  /*<thisrel this+0x18>*/ /*|0x2|*/ unsigned short nFromPage;
  /*<thisrel this+0x1a>*/ /*|0x2|*/ unsigned short nToPage;
  /*<thisrel this+0x1c>*/ /*|0x2|*/ unsigned short nMinPage;
  /*<thisrel this+0x1e>*/ /*|0x2|*/ unsigned short nMaxPage;
  /*<thisrel this+0x20>*/ /*|0x2|*/ unsigned short nCopies;
  /*<thisrel this+0x22>*/ /*|0x4|*/ struct HINSTANCE__* hInstance;
  /*<thisrel this+0x26>*/ /*|0x4|*/ long lCustData;
  /*<thisrel this+0x2a>*/ /*|0x4|*/ unsigned int  (lpfnPrintHook*)(struct HWND__*, unsigned int, unsigned int, long);
  /*<thisrel this+0x2e>*/ /*|0x4|*/ unsigned int  (lpfnSetupHook*)(struct HWND__*, unsigned int, unsigned int, long);
  /*<thisrel this+0x32>*/ /*|0x4|*/ unsigned short* lpPrintTemplateName;
  /*<thisrel this+0x36>*/ /*|0x4|*/ unsigned short* lpSetupTemplateName;
  /*<thisrel this+0x3a>*/ /*|0x4|*/ void* hPrintTemplate;
  /*<thisrel this+0x3e>*/ /*|0x4|*/ void* hSetupTemplate;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x42>

struct _WINDOW_BUFFER_SIZE_RECORD {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct _COORD dwSize;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct _MENU_EVENT_RECORD {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int dwCommandId;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct _INPUT_RECORD {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short EventType;
  /*<thisrel this+0x4>*/ /*|0x10|*/ union __unnamed_d3_ Event;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct tagRASSUBENTRYW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwfFlags;
  /*<thisrel this+0x8>*/ /*|0x22|*/ unsigned short szDeviceType[17];
  /*<thisrel this+0x2a>*/ /*|0x102|*/ unsigned short szDeviceName[129];
  /*<thisrel this+0x12c>*/ /*|0x102|*/ unsigned short szLocalPhoneNumber[129];
  /*<thisrel this+0x230>*/ /*|0x4|*/ unsigned long dwAlternateOffset;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x234>

struct _ABCFLOAT {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ float abcfA;
  /*<thisrel this+0x4>*/ /*|0x4|*/ float abcfB;
  /*<thisrel this+0x8>*/ /*|0x4|*/ float abcfC;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct tagOLEUICHANGEICONW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long cbStruct;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct HWND__* hWndOwner;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned short* lpszCaption;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int  (lpfnHook*)(struct HWND__*, unsigned int, unsigned int, long);
  /*<thisrel this+0x14>*/ /*|0x4|*/ long lCustData;
  /*<thisrel this+0x18>*/ /*|0x4|*/ struct HINSTANCE__* hInstance;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned short* lpszTemplate;
  /*<thisrel this+0x20>*/ /*|0x4|*/ struct HRSRC__* hResource;
  /*<thisrel this+0x24>*/ /*|0x4|*/ void* hMetaPict;
  /*<thisrel this+0x28>*/ /*|0x10|*/ struct _GUID clsid;
  /*<thisrel this+0x38>*/ /*|0x208|*/ unsigned short szIconExe[260];
  /*<thisrel this+0x240>*/ /*|0x4|*/ int cchIconExe;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x244>

struct tagGCP_RESULTSW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long lStructSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned short* lpOutString;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int* lpOrder;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int* lpDx;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int* lpCaretPos;
  /*<thisrel this+0x14>*/ /*|0x4|*/ char* lpClass;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned short* lpGlyphs;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned int nGlyphs;
  /*<thisrel this+0x20>*/ /*|0x4|*/ int nMaxFit;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x24>

struct IOleObjectVtbl {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long  (QueryInterface*)(struct IOleObject*, struct _GUID*, void**);
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long  (AddRef*)(struct IOleObject*);
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long  (Release*)(struct IOleObject*);
  /*<thisrel this+0xc>*/ /*|0x4|*/ long  (SetClientSite*)(struct IOleObject*, struct IOleClientSite*);
  /*<thisrel this+0x10>*/ /*|0x4|*/ long  (GetClientSite*)(struct IOleObject*, struct IOleClientSite**);
  /*<thisrel this+0x14>*/ /*|0x4|*/ long  (SetHostNames*)(struct IOleObject*, unsigned short*, unsigned short*);
  /*<thisrel this+0x18>*/ /*|0x4|*/ long  (Close*)(struct IOleObject*, unsigned long);
  /*<thisrel this+0x1c>*/ /*|0x4|*/ long  (SetMoniker*)(struct IOleObject*, unsigned long, struct IMoniker*);
  /*<thisrel this+0x20>*/ /*|0x4|*/ long  (GetMoniker*)(struct IOleObject*, unsigned long, unsigned long, struct IMoniker**);
  /*<thisrel this+0x24>*/ /*|0x4|*/ long  (InitFromData*)(struct IOleObject*, struct IDataObject*, int, unsigned long);
  /*<thisrel this+0x28>*/ /*|0x4|*/ long  (GetClipboardData*)(struct IOleObject*, unsigned long, struct IDataObject**);
  /*<thisrel this+0x2c>*/ /*|0x4|*/ long  (DoVerb*)(struct IOleObject*, long, struct tagMSG*, struct IOleClientSite*, long, struct HWND__*, struct tagRECT*);
  /*<thisrel this+0x30>*/ /*|0x4|*/ long  (EnumVerbs*)(struct IOleObject*, struct IEnumOLEVERB**);
  /*<thisrel this+0x34>*/ /*|0x4|*/ long  (Update*)(struct IOleObject*);
  /*<thisrel this+0x38>*/ /*|0x4|*/ long  (IsUpToDate*)(struct IOleObject*);
  /*<thisrel this+0x3c>*/ /*|0x4|*/ long  (GetUserClassID*)(struct IOleObject*, struct _GUID*);
  /*<thisrel this+0x40>*/ /*|0x4|*/ long  (GetUserType*)(struct IOleObject*, unsigned long, unsigned short**);
  /*<thisrel this+0x44>*/ /*|0x4|*/ long  (SetExtent*)(struct IOleObject*, unsigned long, struct tagSIZE*);
  /*<thisrel this+0x48>*/ /*|0x4|*/ long  (GetExtent*)(struct IOleObject*, unsigned long, struct tagSIZE*);
  /*<thisrel this+0x4c>*/ /*|0x4|*/ long  (Advise*)(struct IOleObject*, struct IAdviseSink*, unsigned long*);
  /*<thisrel this+0x50>*/ /*|0x4|*/ long  (Unadvise*)(struct IOleObject*, unsigned long);
  /*<thisrel this+0x54>*/ /*|0x4|*/ long  (EnumAdvise*)(struct IOleObject*, struct IEnumSTATDATA**);
  /*<thisrel this+0x58>*/ /*|0x4|*/ long  (GetMiscStatus*)(struct IOleObject*, unsigned long, unsigned long*);
  /*<thisrel this+0x5c>*/ /*|0x4|*/ long  (SetColorScheme*)(struct IOleObject*, struct tagLOGPALETTE*);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x60>

struct tagMSGBOXPARAMSW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int cbSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct HWND__* hwndOwner;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct HINSTANCE__* hInstance;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned short* lpszText;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned short* lpszCaption;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long dwStyle;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned short* lpszIcon;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned long dwContextHelpId;
  /*<thisrel this+0x20>*/ /*|0x4|*/ void  (lpfnMsgBoxCallback*)(struct tagHELPINFO*);
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned long dwLanguageId;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x28>

struct tagDRAWTEXTPARAMS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int cbSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int iTabLength;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int iLeftMargin;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int iRightMargin;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int uiLengthDrawn;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct IOleUILinkContainerWVtbl {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long  (QueryInterface*)(struct IOleUILinkContainerW*, struct _GUID*, void**);
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long  (AddRef*)(struct IOleUILinkContainerW*);
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long  (Release*)(struct IOleUILinkContainerW*);
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long  (GetNextLink*)(struct IOleUILinkContainerW*, unsigned long);
  /*<thisrel this+0x10>*/ /*|0x4|*/ long  (SetLinkUpdateOptions*)(struct IOleUILinkContainerW*, unsigned long, unsigned long);
  /*<thisrel this+0x14>*/ /*|0x4|*/ long  (GetLinkUpdateOptions*)(struct IOleUILinkContainerW*, unsigned long, unsigned long*);
  /*<thisrel this+0x18>*/ /*|0x4|*/ long  (SetLinkSource*)(struct IOleUILinkContainerW*, unsigned long, unsigned short*, unsigned long, unsigned long*, int);
  /*<thisrel this+0x1c>*/ /*|0x4|*/ long  (GetLinkSource*)(struct IOleUILinkContainerW*, unsigned long, unsigned short**, unsigned long*, unsigned short**, unsigned short**, int*, int*);
  /*<thisrel this+0x20>*/ /*|0x4|*/ long  (OpenLinkSource*)(struct IOleUILinkContainerW*, unsigned long);
  /*<thisrel this+0x24>*/ /*|0x4|*/ long  (UpdateLink*)(struct IOleUILinkContainerW*, unsigned long, int, int);
  /*<thisrel this+0x28>*/ /*|0x4|*/ long  (CancelLink*)(struct IOleUILinkContainerW*, unsigned long);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x2c>

struct _OSVERSIONINFOW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwOSVersionInfoSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwMajorVersion;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long dwMinorVersion;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long dwBuildNumber;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long dwPlatformId;
  /*<thisrel this+0x14>*/ /*|0x100|*/ unsigned short szCSDVersion[128];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x114>

struct tagRASENTRYNAMEW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwSize;
  /*<thisrel this+0x4>*/ /*|0x202|*/ unsigned short szEntryName[257];
  /*<thisrel this+0x208>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x20c>*/ /*|0x20a|*/ unsigned short szPhonebookPath[261];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x418>

struct tagMIDIINCAPSW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short wMid;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short wPid;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int vDriverVersion;
  /*<thisrel this+0x8>*/ /*|0x40|*/ unsigned short szPname[32];
  /*<thisrel this+0x48>*/ /*|0x4|*/ unsigned long dwSupport;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4c>

struct tagRASDEVINFOW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwSize;
  /*<thisrel this+0x4>*/ /*|0x22|*/ unsigned short szDeviceType[17];
  /*<thisrel this+0x26>*/ /*|0x102|*/ unsigned short szDeviceName[129];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x128>

struct HMIXEROBJ__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct tagMONITORINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long cbSize;
  /*<thisrel this+0x4>*/ /*|0x10|*/ struct tagRECT rcMonitor;
  /*<thisrel this+0x14>*/ /*|0x10|*/ struct tagRECT rcWork;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned long dwFlags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x28>

struct tagRASCONNSTATUSW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ enum tagRASCONNSTATE rasconnstate;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long dwError;
  /*<thisrel this+0xc>*/ /*|0x22|*/ unsigned short szDeviceType[17];
  /*<thisrel this+0x2e>*/ /*|0x102|*/ unsigned short szDeviceName[129];
  /*<thisrel this+0x130>*/ /*|0x102|*/ unsigned short szPhoneNumber[129];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x234>

struct DLLMap {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ char* szDLLName;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct HINSTANCE__* hMod;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct _IMAGE_NT_HEADERS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long Signature;
  /*<thisrel this+0x4>*/ /*|0x14|*/ struct _IMAGE_FILE_HEADER FileHeader;
  /*<thisrel this+0x18>*/ /*|0xe0|*/ struct _IMAGE_OPTIONAL_HEADER OptionalHeader;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xf8>

struct _IMAGE_DATA_DIRECTORY {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long VirtualAddress;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long Size;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct _UNICODE_STRING {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short Length;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short MaximumLength;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned short* Buffer;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct LIST_ENTRY32 {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long Flink;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long Blink;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct _MEMORY_BASIC_INFORMATION {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ void* BaseAddress;
  /*<thisrel this+0x4>*/ /*|0x4|*/ void* AllocationBase;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long AllocationProtect;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long RegionSize;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long State;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long Protect;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long Type;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c>

struct _IMAGE_OPTIONAL_HEADER {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short Magic;
  /*<thisrel this+0x2>*/ /*|0x1|*/ unsigned char MajorLinkerVersion;
  /*<thisrel this+0x3>*/ /*|0x1|*/ unsigned char MinorLinkerVersion;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long SizeOfCode;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long SizeOfInitializedData;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long SizeOfUninitializedData;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long AddressOfEntryPoint;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long BaseOfCode;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long BaseOfData;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned long ImageBase;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned long SectionAlignment;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned long FileAlignment;
  /*<thisrel this+0x28>*/ /*|0x2|*/ unsigned short MajorOperatingSystemVersion;
  /*<thisrel this+0x2a>*/ /*|0x2|*/ unsigned short MinorOperatingSystemVersion;
  /*<thisrel this+0x2c>*/ /*|0x2|*/ unsigned short MajorImageVersion;
  /*<thisrel this+0x2e>*/ /*|0x2|*/ unsigned short MinorImageVersion;
  /*<thisrel this+0x30>*/ /*|0x2|*/ unsigned short MajorSubsystemVersion;
  /*<thisrel this+0x32>*/ /*|0x2|*/ unsigned short MinorSubsystemVersion;
  /*<thisrel this+0x34>*/ /*|0x4|*/ unsigned long Win32VersionValue;
  /*<thisrel this+0x38>*/ /*|0x4|*/ unsigned long SizeOfImage;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ unsigned long SizeOfHeaders;
  /*<thisrel this+0x40>*/ /*|0x4|*/ unsigned long CheckSum;
  /*<thisrel this+0x44>*/ /*|0x2|*/ unsigned short Subsystem;
  /*<thisrel this+0x46>*/ /*|0x2|*/ unsigned short DllCharacteristics;
  /*<thisrel this+0x48>*/ /*|0x4|*/ unsigned long SizeOfStackReserve;
  /*<thisrel this+0x4c>*/ /*|0x4|*/ unsigned long SizeOfStackCommit;
  /*<thisrel this+0x50>*/ /*|0x4|*/ unsigned long SizeOfHeapReserve;
  /*<thisrel this+0x54>*/ /*|0x4|*/ unsigned long SizeOfHeapCommit;
  /*<thisrel this+0x58>*/ /*|0x4|*/ unsigned long LoaderFlags;
  /*<thisrel this+0x5c>*/ /*|0x4|*/ unsigned long NumberOfRvaAndSizes;
  /*<thisrel this+0x60>*/ /*|0x80|*/ struct _IMAGE_DATA_DIRECTORY DataDirectory[16];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xe0>

struct _IMAGE_FILE_HEADER {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short Machine;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short NumberOfSections;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long TimeDateStamp;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long PointerToSymbolTable;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long NumberOfSymbols;
  /*<thisrel this+0x10>*/ /*|0x2|*/ unsigned short SizeOfOptionalHeader;
  /*<thisrel this+0x12>*/ /*|0x2|*/ unsigned short Characteristics;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct _LIST_ENTRY {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct _LIST_ENTRY* Flink;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct _LIST_ENTRY* Blink;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct LIST_ENTRY64 {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ unsigned __int64 Flink;
  /*<thisrel this+0x8>*/ /*|0x8|*/ unsigned __int64 Blink;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct _IMAGE_EXPORT_DIRECTORY {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long Characteristics;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long TimeDateStamp;
  /*<thisrel this+0x8>*/ /*|0x2|*/ unsigned short MajorVersion;
  /*<thisrel this+0xa>*/ /*|0x2|*/ unsigned short MinorVersion;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long Name;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long Base;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long NumberOfFunctions;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long NumberOfNames;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned long AddressOfFunctions;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned long AddressOfNames;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned long AddressOfNameOrdinals;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x28>

struct CBaseStatus {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char currSeq;
  /*<thisrel this+0x1>*/ /*|0x1|*/ unsigned char flags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CBaseStatus();

  // virtual functions ------------------------------
};
// <size 0x2>

struct CKeyTrackStatus {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int currKey;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int nextKey;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int timepastkey;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CKeyTrackStatus(struct CKeyTrackStatus&);
  void __thiscall CKeyTrackStatus::CKeyTrackStatus();

  // virtual functions ------------------------------
};
// <size 0xc>

struct InterpInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct CAnim* unique;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct CAnimData* shared;
  /*<thisrel this+0x8>*/ /*|0xc|*/ class NTempest::C3Vector basisX;
  /*<thisrel this+0x14>*/ /*|0xc|*/ class NTempest::C3Vector basisY;
  /*<thisrel this+0x20>*/ /*|0xc|*/ class NTempest::C3Vector basisZ;
  /*<thisrel this+0x2c>*/ /*|0xc|*/ class NTempest::C3Vector basisScale;
  /*<thisrel this+0x38>*/ /*|0xc|*/ class NTempest::C3Vector basisPosition;
  /*<thisrel this+0x44>*/ /*|0x4|*/ class TSFixedArray<NTempest::C3Vector>& positions;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall InterpInfo::InterpInfo(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct CAnim* container, /*<regrel ebp+0xc>*/ /*|0x4|*/ struct CAnimData* animptr, /*<regrel ebp+0x10>*/ /*|0x4|*/ class TSFixedArray<NTempest::C3Vector>& positions);
  struct InterpInfo& __thiscall operator=(struct InterpInfo&);
  void __thiscall ~InterpInfo();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x48>

struct CAnimSequence {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x50|*/ class CMdlString<80> name;
  /*<thisrel this+0x50>*/ /*|0x8|*/ class NTempest::CiRange time;
  /*<thisrel this+0x58>*/ /*|0x4|*/ float moveSpeed;
  /*<thisrel this+0x5c>*/ /*|0x4|*/ unsigned int flags;
  /*<thisrel this+0x60>*/ /*|0x4|*/ unsigned int randPickChance;
  /*<thisrel this+0x64>*/ /*|0x8|*/ class NTempest::CiRange replay;
  /*<thisrel this+0x6c>*/ /*|0x1c|*/ struct CMdlBounds bounds;
  /*<thisrel this+0x88>*/ /*|0x4|*/ unsigned int blendTime;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CAnimSequence(struct CAnimSequence&);
  void __thiscall CAnimSequence();
  struct CAnimSequence& __thiscall operator=(struct CAnimSequence&);
  void __thiscall CAnimSequence::~CAnimSequence();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x8c>

struct CKeyFrame {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int time;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct CSplineKeyFrame<NTempest::C4QuaternionCompressed> : struct CLinearKeyFrame<NTempest::C4QuaternionCompressed>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x10>*/ /*|0x8|*/ class NTempest::C4QuaternionCompressed inTan;
  /*<thisrel this+0x18>*/ /*|0x8|*/ class NTempest::C4QuaternionCompressed outTan;

  // base classes -----------------------------------
  // baseclass struct CLinearKeyFrame<NTempest::C4QuaternionCompressed>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CSplineKeyFrame<NTempest::C4QuaternionCompressed>(struct CSplineKeyFrame<NTempest::C4QuaternionCompressed>&);
  void __thiscall CSplineKeyFrame<NTempest::C4QuaternionCompressed>();
  struct CSplineKeyFrame<NTempest::C4QuaternionCompressed>& __thiscall operator=(struct CSplineKeyFrame<NTempest::C4QuaternionCompressed>&);

  // virtual functions ------------------------------
};
// <size 0x20>

struct CLinearKeyFrame<NTempest::C4QuaternionCompressed> : struct CKeyFrame  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x8|*/ class NTempest::C4QuaternionCompressed transform;

  // base classes -----------------------------------
  // baseclass struct CKeyFrame
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CLinearKeyFrame<NTempest::C4QuaternionCompressed>(struct CLinearKeyFrame<NTempest::C4QuaternionCompressed>&);
  void __thiscall CLinearKeyFrame<NTempest::C4QuaternionCompressed>();
  struct CLinearKeyFrame<NTempest::C4QuaternionCompressed>& __thiscall operator=(struct CLinearKeyFrame<NTempest::C4QuaternionCompressed>&);

  // virtual functions ------------------------------
};
// <size 0x10>

struct CSplineKeyFrame<NTempest::C3Vector> : struct CLinearKeyFrame<NTempest::C3Vector>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x10>*/ /*|0xc|*/ class NTempest::C3Vector inTan;
  /*<thisrel this+0x1c>*/ /*|0xc|*/ class NTempest::C3Vector outTan;

  // base classes -----------------------------------
  // baseclass struct CLinearKeyFrame<NTempest::C3Vector>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CSplineKeyFrame<NTempest::C3Vector>();
  void __thiscall ~CSplineKeyFrame<NTempest::C3Vector>();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x28>

struct CLinearKeyFrame<NTempest::C3Vector> : struct CKeyFrame  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x4>*/ /*|0xc|*/ class NTempest::C3Vector transform;

  // base classes -----------------------------------
  // baseclass struct CKeyFrame
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CLinearKeyFrame<NTempest::C3Vector>();
  void __thiscall ~CLinearKeyFrame<NTempest::C3Vector>();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x10>

struct CSplineKeyFrame<C3Color> : struct CLinearKeyFrame<C3Color>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x10>*/ /*|0xc|*/ class C3Color inTan;
  /*<thisrel this+0x1c>*/ /*|0xc|*/ class C3Color outTan;

  // base classes -----------------------------------
  // baseclass struct CLinearKeyFrame<C3Color>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CSplineKeyFrame<C3Color>(struct CSplineKeyFrame<C3Color>&);
  void __thiscall CSplineKeyFrame<C3Color>();

  // virtual functions ------------------------------
};
// <size 0x28>

struct CLinearKeyFrame<C3Color> : struct CKeyFrame  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x4>*/ /*|0xc|*/ class C3Color transform;

  // base classes -----------------------------------
  // baseclass struct CKeyFrame
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CLinearKeyFrame<C3Color>(struct CLinearKeyFrame<C3Color>&);
  void __thiscall CLinearKeyFrame<C3Color>();

  // virtual functions ------------------------------
};
// <size 0x10>

struct CSplineKeyFrame<float> : struct CLinearKeyFrame<float>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ float inTan;
  /*<thisrel this+0xc>*/ /*|0x4|*/ float outTan;

  // base classes -----------------------------------
  // baseclass struct CLinearKeyFrame<float>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct CLinearKeyFrame<float> : struct CKeyFrame  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x4>*/ /*|0x4|*/ float transform;

  // base classes -----------------------------------
  // baseclass struct CKeyFrame
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct CSplineKeyFrame<unsigned int> : struct CLinearKeyFrame<unsigned int>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int inTan;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int outTan;

  // base classes -----------------------------------
  // baseclass struct CLinearKeyFrame<unsigned int>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct CLinearKeyFrame<unsigned int> : struct CKeyFrame  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int transform;

  // base classes -----------------------------------
  // baseclass struct CKeyFrame
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct CKeySeq {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int start;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int count;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct CAnimObj : struct CAnimTransform  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x54>*/ /*|0x4|*/ unsigned int animObjId;
  /*<thisrel this+0x58>*/ /*|0x4|*/ unsigned int splitIndex;
  /*<thisrel this+0x5c>*/ /*|0x50|*/ char name[80];
  /*<thisrel this+0xac>*/ /*|0x14|*/ class TSGrowableArray<CAnimObj *> childarray;
  /*<thisrel this+0xc0>*/ /*|0x1|*/ unsigned char type;
  /*<thisrel this+0xc1>*/ /*|0x1|*/ unsigned char flags;

  // base classes -----------------------------------
  // baseclass struct CAnimTransform
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CAnimObj(struct CAnimObj&);
  void __thiscall CAnimObj(enum OBJECTTYPE);
  int __thiscall Animates();
  unsigned int __thiscall Bytes();
  struct CAnimObj& __thiscall operator=(struct CAnimObj&);
  void __thiscall CAnimObj::~CAnimObj();
  void __thiscall __dflt_ctor_closure();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xc4>

struct CAnimData : class CHandleObject  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x14|*/ class TSGrowableArray<CSeqOrdering> seqOrder;
  /*<thisrel this+0x1c>*/ /*|0x8|*/ class CArray<unsigned int> objectOrder;
  /*<thisrel this+0x24>*/ /*|0x8|*/ class CArray<CAnimSequence> seq;
  /*<thisrel this+0x2c>*/ /*|0x8|*/ class CArray<unsigned int> globalSeqLength;
  /*<thisrel this+0x34>*/ /*|0x8|*/ class CArray<CAnimObj *> obj;
  /*<thisrel this+0x3c>*/ /*|0x8|*/ class CArray<CAnimGeoset> geo;
  /*<thisrel this+0x44>*/ /*|0x8|*/ class CArray<CAnimTransform> tex;
  /*<thisrel this+0x4c>*/ /*|0x8|*/ class CArray<CAnimObj> baseObjs;
  /*<thisrel this+0x54>*/ /*|0x8|*/ class CArray<CAnimBoneObj> boneObjs;
  /*<thisrel this+0x5c>*/ /*|0x8|*/ class CArray<CAnimLightObj> lightObjs;
  /*<thisrel this+0x64>*/ /*|0x8|*/ class CArray<CAnimModelObj> modelObjs;
  /*<thisrel this+0x6c>*/ /*|0x8|*/ class CArray<CAnimEmitter2Obj> emitter2Objs;
  /*<thisrel this+0x74>*/ /*|0x8|*/ class CArray<CAnimRibbonObj> ribbonObjs;
  /*<thisrel this+0x7c>*/ /*|0x8|*/ class CArray<CAnimCameraObj> cameraObjs;
  /*<thisrel this+0x84>*/ /*|0x8|*/ class CArray<CAnimEventObj> eventObjs;
  /*<thisrel this+0x8c>*/ /*|0x8|*/ class CArray<CAnimMaterialLayer> layers;
  /*<thisrel this+0x94>*/ /*|0x14|*/ class TSGrowableArray<unsigned int> geoIdToGeoAnimId;
  /*<thisrel this+0xa8>*/ /*|0x14|*/ class TSGrowableArray<CAnimObj *> headarray;
  /*<thisrel this+0xbc>*/ /*|0x1|*/ unsigned char flags;

  // base classes -----------------------------------
  // baseclass class CHandleObject
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CAnimData(struct CAnimData&);
  void __thiscall CAnimData();
  int __thiscall CAnimData::Animates();
  int __thiscall CAnimData::Moves();
  struct CAnimData& __thiscall operator=(struct CAnimData&);
  void __thiscall __local_vftable_ctor_closure();

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ void __thiscall ~CAnimData();
  virtual /*<vtableoff 0x0>*/ void* __thiscall __vecDelDtor(unsigned int);
};
// <size 0xc0>

struct CAnimLightObj : struct CAnimObj,  struct CAnimVisibleObj  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0xe0>*/ /*|0x1c|*/ class CKeyFrameTrack<float,float> attenstart;
  /*<thisrel this+0xfc>*/ /*|0x1c|*/ class CKeyFrameTrack<float,float> attenend;
  /*<thisrel this+0x118>*/ /*|0x1c|*/ class CKeyFrameTrack<C3Color,C3Color> color;
  /*<thisrel this+0x134>*/ /*|0x1c|*/ class CKeyFrameTrack<float,float> intensity;
  /*<thisrel this+0x150>*/ /*|0x1c|*/ class CKeyFrameTrack<C3Color,C3Color> ambColor;
  /*<thisrel this+0x16c>*/ /*|0x1c|*/ class CKeyFrameTrack<float,float> ambIntensity;

  // base classes -----------------------------------
  // baseclass struct CAnimObj
  // <base data offset+0x0>

  // baseclass struct CAnimVisibleObj
  // <base data offset+0xc4>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CAnimLightObj(struct CAnimLightObj&);
  void __thiscall CAnimLightObj::CAnimLightObj();
  int __thiscall Animates();
  unsigned int __thiscall Bytes();
  struct CAnimLightObj& __thiscall operator=(struct CAnimLightObj&);
  void __thiscall ~CAnimLightObj();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x188>

struct CAnimModelObj : struct CAnimObj,  struct CAnimVisibleObj  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0xe0>*/ /*|0x1|*/ unsigned char geosetId;

  // base classes -----------------------------------
  // baseclass struct CAnimObj
  // <base data offset+0x0>

  // baseclass struct CAnimVisibleObj
  // <base data offset+0xc4>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CAnimModelObj(struct CAnimModelObj&);
  void __thiscall CAnimModelObj::CAnimModelObj();
  int __thiscall Animates();
  unsigned int __thiscall Bytes();
  struct CAnimModelObj& __thiscall operator=(struct CAnimModelObj&);
  void __thiscall ~CAnimModelObj();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xe4>

struct CAnimBoneObj : struct CAnimObj  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0xc4>*/ /*|0x1|*/ unsigned char geosetId;

  // base classes -----------------------------------
  // baseclass struct CAnimObj
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CAnimBoneObj(struct CAnimBoneObj&);
  void __thiscall CAnimBoneObj::CAnimBoneObj();
  unsigned int __thiscall Bytes();
  int __thiscall CAnimBoneObj::IsVisible(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct CAnim& anim);
  struct CAnimBoneObj& __thiscall operator=(struct CAnimBoneObj&);
  void __thiscall ~CAnimBoneObj();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xc8>

struct CAnimEmitter2Obj : struct CAnimObj,  struct CAnimVisibleObj  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0xe0>*/ /*|0x1c|*/ class CKeyFrameTrack<float,float> particleSpeed;
  /*<thisrel this+0xfc>*/ /*|0x1c|*/ class CKeyFrameTrack<float,float> emissionRate;
  /*<thisrel this+0x118>*/ /*|0x1c|*/ class CKeyFrameTrack<float,float> gravity;
  /*<thisrel this+0x134>*/ /*|0x1c|*/ class CKeyFrameTrack<float,float> variation;
  /*<thisrel this+0x150>*/ /*|0x1c|*/ class CKeyFrameTrack<float,float> latitude;
  /*<thisrel this+0x16c>*/ /*|0x1c|*/ class CKeyFrameTrack<float,float> longitude;
  /*<thisrel this+0x188>*/ /*|0x1c|*/ class CKeyFrameTrack<float,float> length;
  /*<thisrel this+0x1a4>*/ /*|0x1c|*/ class CKeyFrameTrack<float,float> width;
  /*<thisrel this+0x1c0>*/ /*|0x1c|*/ class CKeyFrameTrack<float,float> zsource;
  /*<thisrel this+0x1dc>*/ /*|0x1c|*/ class CKeyFrameTrack<float,float> lifeSpan;
  /*<thisrel this+0x1f8>*/ /*|0x4|*/ unsigned int squirts;

  // base classes -----------------------------------
  // baseclass struct CAnimObj
  // <base data offset+0x0>

  // baseclass struct CAnimVisibleObj
  // <base data offset+0xc4>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CAnimEmitter2Obj(struct CAnimEmitter2Obj&);
  void __thiscall CAnimEmitter2Obj::CAnimEmitter2Obj();
  int __thiscall Animates();
  unsigned int __thiscall Bytes();
  struct CAnimEmitter2Obj& __thiscall operator=(struct CAnimEmitter2Obj&);
  void __thiscall ~CAnimEmitter2Obj();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x1fc>

struct CAnimRibbonObj : struct CAnimObj,  struct CAnimVisibleObj  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0xe0>*/ /*|0x1c|*/ class CKeyFrameTrack<float,float> heightAbove;
  /*<thisrel this+0xfc>*/ /*|0x1c|*/ class CKeyFrameTrack<float,float> heightBelow;
  /*<thisrel this+0x118>*/ /*|0x1c|*/ class CKeyFrameTrack<C3Color,C3Color> color;
  /*<thisrel this+0x134>*/ /*|0x1c|*/ class CKeyFrameTrack<float,float> alpha;
  /*<thisrel this+0x150>*/ /*|0x1c|*/ class CKeyFrameTrack<unsigned int,unsigned int> slot;

  // base classes -----------------------------------
  // baseclass struct CAnimObj
  // <base data offset+0x0>

  // baseclass struct CAnimVisibleObj
  // <base data offset+0xc4>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CAnimRibbonObj(struct CAnimRibbonObj&);
  void __thiscall CAnimRibbonObj();
  int __thiscall Animates();
  unsigned int __thiscall Bytes();
  struct CAnimRibbonObj& __thiscall operator=(struct CAnimRibbonObj&);
  void __thiscall CAnimRibbonObj::~CAnimRibbonObj();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x16c>

struct CAnimEventObj : struct CAnimObj  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0xc4>*/ /*|0x18|*/ class CKeyFrameTrackBase events;

  // base classes -----------------------------------
  // baseclass struct CAnimObj
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CAnimEventObj(struct CAnimEventObj&);
  void __thiscall CAnimEventObj();
  int __thiscall Animates();
  struct CAnimEventObj& __thiscall operator=(struct CAnimEventObj&);
  void __thiscall ~CAnimEventObj();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xdc>

struct MDLSIMPLEKEYTRACK<MDLEVENTKEY> {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x14|*/ class TSGrowableArray<MDLEVENTKEY> keys;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned int globalSeqId;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLSIMPLEKEYTRACK<MDLEVENTKEY>(struct MDLSIMPLEKEYTRACK<MDLEVENTKEY>&);
  void __thiscall MDLSIMPLEKEYTRACK<MDLEVENTKEY>::MDLSIMPLEKEYTRACK<MDLEVENTKEY>();
  struct MDLSIMPLEKEYTRACK<MDLEVENTKEY>& __thiscall operator=(struct MDLSIMPLEKEYTRACK<MDLEVENTKEY>&);
  void __thiscall ~MDLSIMPLEKEYTRACK<MDLEVENTKEY>();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x18>

struct MDLKEYTRACK<NTempest::C3Vector> {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x14|*/ class TSGrowableArray<MDLKEYFRAME<NTempest::C3Vector> > keys;
  /*<thisrel this+0x14>*/ /*|0x4|*/ enum MDLTRACKTYPE type;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned int globalSeqId;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLKEYTRACK<NTempest::C3Vector>::MDLKEYTRACK<NTempest::C3Vector>(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct MDLKEYTRACK<NTempest::C3Vector>& __that);
  void __thiscall MDLKEYTRACK<NTempest::C3Vector>::MDLKEYTRACK<NTempest::C3Vector>(/*<regrel ebp+0x8>*/ /*|0x4|*/ enum MDLTRACKTYPE type);
  struct MDLKEYTRACK<NTempest::C3Vector>& __thiscall operator=(struct MDLKEYTRACK<NTempest::C3Vector>&);
  void __thiscall ~MDLKEYTRACK<NTempest::C3Vector>();
  void __thiscall __dflt_ctor_closure();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x1c>

struct MDLKEYTRACK<NTempest::C4Quaternion> {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x14|*/ class TSGrowableArray<MDLKEYFRAME<NTempest::C4Quaternion> > keys;
  /*<thisrel this+0x14>*/ /*|0x4|*/ enum MDLTRACKTYPE type;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned int globalSeqId;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLKEYTRACK<NTempest::C4Quaternion>::MDLKEYTRACK<NTempest::C4Quaternion>(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct MDLKEYTRACK<NTempest::C4Quaternion>& __that);
  void __thiscall MDLKEYTRACK<NTempest::C4Quaternion>::MDLKEYTRACK<NTempest::C4Quaternion>(/*<regrel ebp+0x8>*/ /*|0x4|*/ enum MDLTRACKTYPE type);
  struct MDLKEYTRACK<NTempest::C4Quaternion>& __thiscall operator=(struct MDLKEYTRACK<NTempest::C4Quaternion>&);
  void __thiscall ~MDLKEYTRACK<NTempest::C4Quaternion>();
  void __thiscall __dflt_ctor_closure();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x1c>

struct MDLKEYTRACK<float> {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x14|*/ class TSGrowableArray<MDLKEYFRAME<float> > keys;
  /*<thisrel this+0x14>*/ /*|0x4|*/ enum MDLTRACKTYPE type;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned int globalSeqId;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLKEYTRACK<float>::MDLKEYTRACK<float>(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct MDLKEYTRACK<float>& __that);
  void __thiscall MDLKEYTRACK<float>::MDLKEYTRACK<float>(/*<regrel ebp+0x8>*/ /*|0x4|*/ enum MDLTRACKTYPE type);
  struct MDLKEYTRACK<float>& __thiscall operator=(struct MDLKEYTRACK<float>&);
  void __thiscall ~MDLKEYTRACK<float>();
  void __thiscall __dflt_ctor_closure();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x1c>

struct MDLKEYTRACK<C3Color> {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x14|*/ class TSGrowableArray<MDLKEYFRAME<C3Color> > keys;
  /*<thisrel this+0x14>*/ /*|0x4|*/ enum MDLTRACKTYPE type;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned int globalSeqId;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLKEYTRACK<C3Color>::MDLKEYTRACK<C3Color>(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct MDLKEYTRACK<C3Color>& __that);
  void __thiscall MDLKEYTRACK<C3Color>::MDLKEYTRACK<C3Color>(/*<regrel ebp+0x8>*/ /*|0x4|*/ enum MDLTRACKTYPE type);
  struct MDLKEYTRACK<C3Color>& __thiscall operator=(struct MDLKEYTRACK<C3Color>&);
  void __thiscall ~MDLKEYTRACK<C3Color>();
  void __thiscall __dflt_ctor_closure();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x1c>

struct CAnimVisibleObj {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1c|*/ class CKeyFrameTrack<float,float> visibility;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  int __thiscall Animates();
  unsigned int __thiscall Bytes();
  void __thiscall CAnimVisibleObj(struct CAnimVisibleObj&);
  void __thiscall CAnimVisibleObj();
  struct CAnimVisibleObj& __thiscall operator=(struct CAnimVisibleObj&);
  void __thiscall ~CAnimVisibleObj();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x1c>

struct MDLSIMPLEKEYTRACK<MDLINTKEY> {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x14|*/ class TSGrowableArray<MDLINTKEY> keys;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned int globalSeqId;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLSIMPLEKEYTRACK<MDLINTKEY>::MDLSIMPLEKEYTRACK<MDLINTKEY>(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct MDLSIMPLEKEYTRACK<MDLINTKEY>& __that);
  void __thiscall MDLSIMPLEKEYTRACK<MDLINTKEY>();
  struct MDLSIMPLEKEYTRACK<MDLINTKEY>& __thiscall operator=(struct MDLSIMPLEKEYTRACK<MDLINTKEY>&);
  void __thiscall ~MDLSIMPLEKEYTRACK<MDLINTKEY>();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x18>

struct CAnim : class CHandleObject  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x8|*/ class CArray<CSeqInfo> seq;
  /*<thisrel this+0x10>*/ /*|0x8|*/ class CArray<CAnimObjStatus *> status;
  /*<thisrel this+0x18>*/ /*|0x8|*/ class CArray<CAnimObjStatus> baseStatus;
  /*<thisrel this+0x20>*/ /*|0x8|*/ class CArray<CAnimObjStatus> boneStatus;
  /*<thisrel this+0x28>*/ /*|0x8|*/ class CArray<CAnimGeosetObjStatus> geosetStatus;
  /*<thisrel this+0x30>*/ /*|0x8|*/ class CArray<CAnimModelObjStatus> modelStatus;
  /*<thisrel this+0x38>*/ /*|0x8|*/ class CArray<unsigned int> globalSeqElapsed;
  /*<thisrel this+0x40>*/ /*|0x8|*/ class CArray<CAnimObjBlendStatus> blendStatus;
  /*<thisrel this+0x48>*/ /*|0x8|*/ class CArray<CAnimLightObjStatus> lightStatus;
  /*<thisrel this+0x50>*/ /*|0x8|*/ class CArray<CAnimObjStatus> textureStatus;
  /*<thisrel this+0x58>*/ /*|0x8|*/ class CArray<CAnimEmitter2ObjStatus> emitter2Status;
  /*<thisrel this+0x60>*/ /*|0x8|*/ class CArray<CAnimRibbonObjStatus> ribbonStatus;
  /*<thisrel this+0x68>*/ /*|0x8|*/ class CArray<CAnimCameraObjStatus> cameraStatus;
  /*<thisrel this+0x70>*/ /*|0x8|*/ class CArray<CAnimEventObjStatus> eventStatus;
  /*<thisrel this+0x78>*/ /*|0x8|*/ class CArray<CAnimLayerStatus> layerStatus;
  /*<thisrel this+0x80>*/ /*|0x14|*/ class TSGrowableArray<NTempest::C3Vector> lookAtTarget;
  /*<thisrel this+0x94>*/ /*|0x8|*/ struct CCallbackFcn<int (__fastcall*)(void *)> anySeqFinished;
  /*<thisrel this+0x9c>*/ /*|0x8|*/ struct CCallbackFcn<void (__fastcall*)(char const *,NTempest::C3Vector const &,void *)> appEvent;
  /*<thisrel this+0xa4>*/ /*|0x4|*/ struct HANIMDATA__* hdata;
  /*<thisrel this+0xa8>*/ /*|0x4|*/ unsigned long seqLastTime;
  /*<thisrel this+0xac>*/ /*|0x1|*/ unsigned char flags;
  /*<thisrel this+0xad>*/ /*|0x1|*/ unsigned char primarySeq;
  /*<thisrel this+0xae>*/ /*|0x1|*/ unsigned char seqMapIndex;

  // base classes -----------------------------------
  // baseclass class CHandleObject
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CAnim(struct CAnim&);
  void __thiscall CAnim::CAnim(/*<regrel ebp+0x8>*/ /*|0x1|*/ unsigned char flags);
  struct CAnim& __thiscall CAnim::operator=(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct CAnim& __that);
  void __thiscall __dflt_ctor_closure();
  void __thiscall __local_vftable_ctor_closure();

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ void __thiscall ~CAnim();
  virtual /*<vtableoff 0x0>*/ void* __thiscall __vecDelDtor(unsigned int);
};
// <size 0xb0>

struct HANIM__ : struct HOBJECT__  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x4>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------
  // baseclass struct HOBJECT__
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct MDLTEXLAYER {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ enum MDLTEXOP blendMode;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int flags;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int textureId;
  /*<thisrel this+0xc>*/ /*|0x18|*/ struct MDLSIMPLEKEYTRACK<MDLINTKEY> flipKeys;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned int transformId;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned int coordId;
  /*<thisrel this+0x2c>*/ /*|0x1c|*/ struct MDLKEYTRACK<float> alphaKeys;
  /*<thisrel this+0x48>*/ /*|0x4|*/ float staticAlpha;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLTEXLAYER::MDLTEXLAYER(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct MDLTEXLAYER& __that);
  void __thiscall MDLTEXLAYER();
  struct MDLTEXLAYER& __thiscall operator=(struct MDLTEXLAYER&);
  void __thiscall MDLTEXLAYER::~MDLTEXLAYER();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x4c>

struct MDLGEOSETANIMSECTION {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1c|*/ struct MDLKEYTRACK<float> alphaKeys;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ float staticAlpha;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned int flags;
  /*<thisrel this+0x24>*/ /*|0x1c|*/ struct MDLKEYTRACK<C3Color> colorKeys;
  /*<thisrel this+0x40>*/ /*|0xc|*/ class C3Color staticColor;
  /*<thisrel this+0x4c>*/ /*|0x4|*/ unsigned int geosetId;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLGEOSETANIMSECTION(struct MDLGEOSETANIMSECTION&);
  void __thiscall MDLGEOSETANIMSECTION::MDLGEOSETANIMSECTION();
  struct MDLGEOSETANIMSECTION& __thiscall operator=(struct MDLGEOSETANIMSECTION&);
  void __thiscall ~MDLGEOSETANIMSECTION();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x50>

struct MDLCAMERASECTION {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x50|*/ class CMdlString<80> name;
  /*<thisrel this+0x50>*/ /*|0xc|*/ class NTempest::C3Vector pivot;
  /*<thisrel this+0x5c>*/ /*|0x4|*/ float fieldOfView;
  /*<thisrel this+0x60>*/ /*|0x4|*/ float farClip;
  /*<thisrel this+0x64>*/ /*|0x4|*/ float nearClip;
  /*<thisrel this+0x68>*/ /*|0x1c|*/ struct MDLKEYTRACK<NTempest::C3Vector> transkeys;
  /*<thisrel this+0x84>*/ /*|0x1c|*/ struct MDLKEYTRACK<float> rollkeys;
  /*<thisrel this+0xa0>*/ /*|0x28|*/ struct MDLTARGETSECTION target;
  /*<thisrel this+0xc8>*/ /*|0x1c|*/ struct MDLKEYTRACK<float> visibilityKeys;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLCAMERASECTION(struct MDLCAMERASECTION&);
  void __thiscall MDLCAMERASECTION::MDLCAMERASECTION();
  struct MDLCAMERASECTION& __thiscall operator=(struct MDLCAMERASECTION&);
  void __thiscall ~MDLCAMERASECTION();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xe4>

struct CAnimCameraObj : struct CAnimVisibleObj  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x1c>*/ /*|0x50|*/ char name[80];
  /*<thisrel this+0x6c>*/ /*|0xc|*/ class NTempest::C3Vector pivot;
  /*<thisrel this+0x78>*/ /*|0x1c|*/ class CKeyFrameTrack<NTempest::C3Vector,NTempest::C3Vector> translation;
  /*<thisrel this+0x94>*/ /*|0x1c|*/ class CKeyFrameTrack<float,float> roll;
  /*<thisrel this+0xb0>*/ /*|0xc|*/ class NTempest::C3Vector targetPivot;
  /*<thisrel this+0xbc>*/ /*|0x1c|*/ class CKeyFrameTrack<NTempest::C3Vector,NTempest::C3Vector> targetTranslation;

  // base classes -----------------------------------
  // baseclass struct CAnimVisibleObj
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CAnimCameraObj(struct CAnimCameraObj&);
  void __thiscall CAnimCameraObj();
  int __thiscall Animates();
  unsigned int __thiscall Bytes();
  struct CAnimCameraObj& __thiscall operator=(struct CAnimCameraObj&);
  void __thiscall CAnimCameraObj::~CAnimCameraObj();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xd8>

struct CAnimTransform {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1c|*/ class CKeyFrameTrack<NTempest::C3Vector,NTempest::C3Vector> translation;
  /*<thisrel this+0x1c>*/ /*|0x1c|*/ class CKeyFrameTrack<NTempest::C4QuaternionCompressed,NTempest::C4Quaternion> rotation;
  /*<thisrel this+0x38>*/ /*|0x1c|*/ class CKeyFrameTrack<NTempest::C3Vector,NTempest::C3Vector> scale;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  int __thiscall CAnimTransform::Animates();
  unsigned int __thiscall Bytes();
  void __thiscall CAnimTransform(struct CAnimTransform&);
  void __thiscall CAnimTransform::CAnimTransform();
  struct CAnimTransform& __thiscall operator=(struct CAnimTransform&);
  void __thiscall CAnimTransform::~CAnimTransform();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x54>

struct CAnimObjStatus {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xc|*/ struct CKeyTrackStatus translation;
  /*<thisrel this+0xc>*/ /*|0xc|*/ struct CKeyTrackStatus rotation;
  /*<thisrel this+0x18>*/ /*|0xc|*/ struct CKeyTrackStatus scale;
  /*<thisrel this+0x24>*/ /*|0x2|*/ struct CBaseStatus base;
  /*<thisrel this+0x26>*/ /*|0x1|*/ unsigned char lookAtId;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CAnimObjStatus(struct CAnimObjStatus&);
  void __thiscall CAnimObjStatus::CAnimObjStatus();

  // virtual functions ------------------------------
};
// <size 0x28>

struct CAnimEventObjStatus : struct CAnimObjStatus  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x28>*/ /*|0xc|*/ struct CKeyTrackStatus event;
  /*<thisrel this+0x34>*/ /*|0xc|*/ class NTempest::C3Vector position;

  // base classes -----------------------------------
  // baseclass struct CAnimObjStatus
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CAnimEventObjStatus(struct CAnimEventObjStatus&);
  void __thiscall CAnimEventObjStatus();
  void __thiscall ~CAnimEventObjStatus();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x40>

struct CAnimGeoset : struct CAnimVisibleObj  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x1c>*/ /*|0x1c|*/ class CKeyFrameTrack<C3Color,C3Color> color;
  /*<thisrel this+0x38>*/ /*|0x4|*/ unsigned int sgGeosetId;

  // base classes -----------------------------------
  // baseclass struct CAnimVisibleObj
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CAnimGeoset(struct CAnimGeoset&);
  void __thiscall CAnimGeoset();
  int __thiscall Animates();
  unsigned int __thiscall Bytes();
  struct CAnimGeoset& __thiscall operator=(struct CAnimGeoset&);
  void __thiscall ~CAnimGeoset();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x3c>

struct CAnimMaterialLayer : struct CAnimVisibleObj  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x1c>*/ /*|0x1c|*/ class CKeyFrameTrack<unsigned int,unsigned int> flip;
  /*<thisrel this+0x38>*/ /*|0x4|*/ unsigned int layerId;

  // base classes -----------------------------------
  // baseclass struct CAnimVisibleObj
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CAnimMaterialLayer(struct CAnimMaterialLayer&);
  void __thiscall CAnimMaterialLayer::CAnimMaterialLayer();
  int __thiscall Animates();
  unsigned int __thiscall Bytes();
  struct CAnimMaterialLayer& __thiscall operator=(struct CAnimMaterialLayer&);
  void __thiscall CAnimMaterialLayer::~CAnimMaterialLayer();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x3c>

struct CSeqInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int elapsed;
  /*<bitfield this+0x4>*/ /*|0x4|*/ unsigned int useCount:0:10;
  /*<bitfield this+0x4>*/ /*|0x4|*/ unsigned int replayTimes:10:f;
  /*<bitfield this+0x4>*/ /*|0x4|*/ unsigned int seqFinished:1f:1;
  /*<thisrel this+0x8>*/ /*|0x8|*/ struct CCallbackFcn<int (__fastcall*)(void *)> finished;
  /*<thisrel this+0x10>*/ /*|0x4|*/ float seqTimeScale;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int scaledElapsedTime;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall Reset();
  void __thiscall ResetCallback();
  void __thiscall CSeqInfo::CSeqInfo();

  // virtual functions ------------------------------
};
// <size 0x18>

struct CAnimGeosetObjStatus {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xc|*/ struct CKeyTrackStatus color;
  /*<thisrel this+0xc>*/ /*|0xc|*/ struct CKeyTrackStatus visibility;
  /*<thisrel this+0x18>*/ /*|0x2|*/ struct CBaseStatus base;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CAnimGeosetObjStatus(struct CAnimGeosetObjStatus&);
  void __thiscall CAnimGeosetObjStatus();
  int __thiscall IsVisible();

  // virtual functions ------------------------------
};
// <size 0x1c>

struct CAnimModelObjStatus : struct CAnimObjStatus  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x28>*/ /*|0xc|*/ struct CKeyTrackStatus visibility;
  /*<thisrel this+0x34>*/ /*|0x4|*/ float visible;

  // base classes -----------------------------------
  // baseclass struct CAnimObjStatus
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CAnimModelObjStatus(struct CAnimModelObjStatus&);
  void __thiscall CAnimModelObjStatus();
  int __thiscall IsVisible();

  // virtual functions ------------------------------
};
// <size 0x38>

struct CAnimObjBlendStatus {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int blendTimer;
  /*<thisrel this+0x4>*/ /*|0xc|*/ class NTempest::C3Vector prevSeqPosition;
  /*<thisrel this+0x10>*/ /*|0x10|*/ class NTempest::C4Quaternion prevSeqRotation;
  /*<thisrel this+0x20>*/ /*|0xc|*/ class NTempest::C3Vector prevSeqScale;
  /*<thisrel this+0x2c>*/ /*|0xc|*/ class NTempest::C3Vector blendPosition;
  /*<thisrel this+0x38>*/ /*|0x10|*/ class NTempest::C4Quaternion blendRotation;
  /*<thisrel this+0x48>*/ /*|0xc|*/ class NTempest::C3Vector blendScale;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CAnimObjBlendStatus::CAnimObjBlendStatus();
  void __thiscall CAnimObjBlendStatus::~CAnimObjBlendStatus();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x54>

struct CAnimLightObjStatus : struct CAnimObjStatus  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x28>*/ /*|0xc|*/ struct CKeyTrackStatus attenstart;
  /*<thisrel this+0x34>*/ /*|0xc|*/ struct CKeyTrackStatus attenend;
  /*<thisrel this+0x40>*/ /*|0xc|*/ struct CKeyTrackStatus color;
  /*<thisrel this+0x4c>*/ /*|0xc|*/ struct CKeyTrackStatus intensity;
  /*<thisrel this+0x58>*/ /*|0xc|*/ struct CKeyTrackStatus visibility;
  /*<thisrel this+0x64>*/ /*|0xc|*/ struct CKeyTrackStatus ambColor;
  /*<thisrel this+0x70>*/ /*|0xc|*/ struct CKeyTrackStatus ambIntensity;

  // base classes -----------------------------------
  // baseclass struct CAnimObjStatus
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CAnimLightObjStatus(struct CAnimLightObjStatus&);
  void __thiscall CAnimLightObjStatus();

  // virtual functions ------------------------------
};
// <size 0x7c>

struct CAnimEmitter2ObjStatus : struct CAnimObjStatus  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x28>*/ /*|0xc|*/ struct CKeyTrackStatus speed;
  /*<thisrel this+0x34>*/ /*|0xc|*/ struct CKeyTrackStatus emissionRate;
  /*<thisrel this+0x40>*/ /*|0xc|*/ struct CKeyTrackStatus gravity;
  /*<thisrel this+0x4c>*/ /*|0xc|*/ struct CKeyTrackStatus latitude;
  /*<thisrel this+0x58>*/ /*|0xc|*/ struct CKeyTrackStatus longitude;
  /*<thisrel this+0x64>*/ /*|0xc|*/ struct CKeyTrackStatus visibility;
  /*<thisrel this+0x70>*/ /*|0xc|*/ struct CKeyTrackStatus variation;
  /*<thisrel this+0x7c>*/ /*|0xc|*/ struct CKeyTrackStatus length;
  /*<thisrel this+0x88>*/ /*|0xc|*/ struct CKeyTrackStatus width;
  /*<thisrel this+0x94>*/ /*|0xc|*/ struct CKeyTrackStatus zsource;
  /*<thisrel this+0xa0>*/ /*|0xc|*/ struct CKeyTrackStatus lifeSpan;
  /*<thisrel this+0xac>*/ /*|0x4|*/ float elapsedTime;

  // base classes -----------------------------------
  // baseclass struct CAnimObjStatus
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CAnimEmitter2ObjStatus(struct CAnimEmitter2ObjStatus&);
  void __thiscall CAnimEmitter2ObjStatus();

  // virtual functions ------------------------------
};
// <size 0xb0>

struct CAnimLayerStatus {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xc|*/ struct CKeyTrackStatus visibility;
  /*<thisrel this+0xc>*/ /*|0xc|*/ struct CKeyTrackStatus flipIndex;
  /*<thisrel this+0x18>*/ /*|0x2|*/ struct CBaseStatus base;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CAnimLayerStatus(struct CAnimLayerStatus&);
  void __thiscall CAnimLayerStatus::CAnimLayerStatus();

  // virtual functions ------------------------------
};
// <size 0x1c>

struct MDLKEYFRAME<NTempest::C3Vector> {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int time;
  /*<thisrel this+0x4>*/ /*|0xc|*/ class NTempest::C3Vector value;
  /*<thisrel this+0x10>*/ /*|0xc|*/ class NTempest::C3Vector inTan;
  /*<thisrel this+0x1c>*/ /*|0xc|*/ class NTempest::C3Vector outTan;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLKEYFRAME<NTempest::C3Vector>::MDLKEYFRAME<NTempest::C3Vector>();
  void __thiscall MDLKEYFRAME<NTempest::C3Vector>::~MDLKEYFRAME<NTempest::C3Vector>();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x28>

struct MDLKEYFRAME<C3Color> {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int time;
  /*<thisrel this+0x4>*/ /*|0xc|*/ class C3Color value;
  /*<thisrel this+0x10>*/ /*|0xc|*/ class C3Color inTan;
  /*<thisrel this+0x1c>*/ /*|0xc|*/ class C3Color outTan;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLKEYFRAME<C3Color>(struct MDLKEYFRAME<C3Color>&);
  void __thiscall MDLKEYFRAME<C3Color>::MDLKEYFRAME<C3Color>();

  // virtual functions ------------------------------
};
// <size 0x28>

struct CGeosetColor {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ class NTempest::CImVector animatedColor;
  /*<thisrel this+0x4>*/ /*|0x4|*/ class NTempest::CImVector proceduralColor;
  /*<thisrel this+0x8>*/ /*|0x4|*/ float animatedAlpha;
  /*<thisrel this+0xc>*/ /*|0x4|*/ float proceduralAlpha;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CGeosetColor(struct CGeosetColor&);
  void __thiscall CGeosetColor::CGeosetColor();
  struct CGeosetColor& __thiscall operator=(struct CGeosetColor&);
  void __thiscall ~CGeosetColor();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x10>

struct CVariations {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ class CArray<unsigned char> variation;
  /*<thisrel this+0x8>*/ /*|0x1|*/ unsigned char primary;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CVariations(struct CVariations&);
  void __thiscall CVariations::CVariations();
  struct CVariations& __thiscall operator=(struct CVariations&);
  void __thiscall CVariations::~CVariations();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xc>

struct CameraInfo : struct InterpInfo  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x48>*/ /*|0x4|*/ class TSFixedArray<HCAMERA__ *>& cameras;

  // base classes -----------------------------------
  // baseclass struct InterpInfo
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CameraInfo(struct CAnim*, struct CAnimData*, class TSFixedArray<NTempest::C3Vector>&, class TSFixedArray<HCAMERA__ *>&);
  struct CameraInfo& __thiscall operator=(struct CameraInfo&);
  void __thiscall ~CameraInfo();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x4c>

struct CAnimCameraObjStatus {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ float visible;
  /*<thisrel this+0x4>*/ /*|0xc|*/ struct CKeyTrackStatus visibility;
  /*<thisrel this+0x10>*/ /*|0xc|*/ struct CKeyTrackStatus translation;
  /*<thisrel this+0x1c>*/ /*|0xc|*/ struct CKeyTrackStatus roll;
  /*<thisrel this+0x28>*/ /*|0xc|*/ struct CKeyTrackStatus targetTranslation;
  /*<thisrel this+0x34>*/ /*|0x2|*/ struct CBaseStatus base;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CAnimCameraObjStatus(struct CAnimCameraObjStatus&);
  void __thiscall CAnimCameraObjStatus();
  int __thiscall IsVisible();

  // virtual functions ------------------------------
};
// <size 0x38>

struct HCAMERA__ : struct HDATAMGR__  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------
  // baseclass struct HDATAMGR__
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct CAnimationData {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ class NTempest::C34Matrix* boneMtx;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int numBones;
  /*<thisrel this+0x8>*/ /*|0x4|*/ class NTempest::C34Matrix* textureMtx;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int numTexBones;
  /*<thisrel this+0x10>*/ /*|0x4|*/ class TSFixedArray<NTempest::C3Vector>* positions;
  /*<thisrel this+0x14>*/ /*|0x4|*/ class TSFixedArray<unsigned long>* lights;
  /*<thisrel this+0x18>*/ /*|0x4|*/ class TSFixedArray<CParticleEmitter2 *>* emitters2;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ class TSFixedArray<CRibbonEmitter *>* ribbons;
  /*<thisrel this+0x20>*/ /*|0x4|*/ class NTempest::C34Matrix* attached;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned int numAttached;
  /*<thisrel this+0x28>*/ /*|0x4|*/ struct CGeosetColor* geosetColor;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ class NTempest::C3Vector* cameraWorldPos;
  /*<thisrel this+0x30>*/ /*|0x4|*/ class NTempest::C3Vector* cameraVector;
  /*<thisrel this+0x34>*/ /*|0x4|*/ unsigned char* layerAlpha;
  /*<thisrel this+0x38>*/ /*|0x4|*/ unsigned int* layerTextureIds;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x3c>

struct AnimInfo : struct InterpInfo  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x48>*/ /*|0x4|*/ struct CAnimationData& data;
  /*<thisrel this+0x4c>*/ /*|0xc|*/ class NTempest::C3Vector cameraVector;
  /*<thisrel this+0x58>*/ /*|0xc|*/ class NTempest::C3Vector cameraWorldPos;

  // base classes -----------------------------------
  // baseclass struct InterpInfo
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall AnimInfo(struct CAnim*, struct CAnimData*, struct CAnimationData&);
  struct AnimInfo& __thiscall operator=(struct AnimInfo&);
  void __thiscall ~AnimInfo();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x64>

struct CAnimRibbonObjStatus : struct CAnimObjStatus  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x28>*/ /*|0xc|*/ struct CKeyTrackStatus visibility;
  /*<thisrel this+0x34>*/ /*|0xc|*/ struct CKeyTrackStatus heightAbove;
  /*<thisrel this+0x40>*/ /*|0xc|*/ struct CKeyTrackStatus heightBelow;
  /*<thisrel this+0x4c>*/ /*|0xc|*/ struct CKeyTrackStatus color;
  /*<thisrel this+0x58>*/ /*|0xc|*/ struct CKeyTrackStatus alpha;
  /*<thisrel this+0x64>*/ /*|0xc|*/ struct CKeyTrackStatus slot;
  /*<thisrel this+0x70>*/ /*|0x4|*/ float elapsedTime;

  // base classes -----------------------------------
  // baseclass struct CAnimObjStatus
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CAnimRibbonObjStatus(struct CAnimRibbonObjStatus&);
  void __thiscall CAnimRibbonObjStatus();

  // virtual functions ------------------------------
};
// <size 0x74>

struct CAnimNameHash : class TSHashObject<CAnimNameHash,HASHKEY_CONSTSTRI>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned int index;

  // base classes -----------------------------------
  // baseclass class TSHashObject<CAnimNameHash,HASHKEY_CONSTSTRI>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CAnimNameHash(struct CAnimNameHash&);
  void __thiscall CAnimNameHash();
  struct CAnimNameHash& __thiscall operator=(struct CAnimNameHash&);
  void __thiscall ~CAnimNameHash();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x1c>

struct CSeqOrdering {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ class CArray<CVariations> order;
  /*<thisrel this+0x8>*/ /*|0x4|*/ char** nameListUsed;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CSeqOrdering(struct CSeqOrdering&);
  void __thiscall CSeqOrdering::CSeqOrdering();
  struct CSeqOrdering& __thiscall operator=(struct CSeqOrdering&);
  void __thiscall ~CSeqOrdering();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xc>

struct ANIMHASH : class TSHashObject<ANIMHASH,HASHKEY_STRI>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x4|*/ struct HANIM__* anim;

  // base classes -----------------------------------
  // baseclass class TSHashObject<ANIMHASH,HASHKEY_STRI>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ANIMHASH(struct ANIMHASH&);
  void __thiscall ANIMHASH();
  void __thiscall ~ANIMHASH();
  struct ANIMHASH& __thiscall operator=(struct ANIMHASH&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x1c>

struct MDLDATA : struct MDLBASE  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct MDLBASE
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLDATA(struct MDLDATA&);
  void __thiscall MDLDATA();
  struct MDLDATA& __thiscall operator=(struct MDLDATA&);
  void __thiscall ~MDLDATA();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x564>

struct MDLBONESECTION : struct MDLGENOBJECT  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0xb0>*/ /*|0x4|*/ unsigned int geosetId;
  /*<thisrel this+0xb4>*/ /*|0x4|*/ unsigned int geosetAnimId;

  // base classes -----------------------------------
  // baseclass struct MDLGENOBJECT
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLBONESECTION(struct MDLBONESECTION&);
  void __thiscall MDLBONESECTION();
  struct MDLBONESECTION& __thiscall operator=(struct MDLBONESECTION&);
  void __thiscall ~MDLBONESECTION();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xb8>

struct MDLGENOBJECT {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x50|*/ class CMdlString<80> name;
  /*<thisrel this+0x50>*/ /*|0x4|*/ unsigned int objectId;
  /*<thisrel this+0x54>*/ /*|0x4|*/ unsigned int parentId;
  /*<thisrel this+0x58>*/ /*|0x4|*/ unsigned int flags;
  /*<thisrel this+0x5c>*/ /*|0x1c|*/ struct MDLKEYTRACK<NTempest::C3Vector> transkeys;
  /*<thisrel this+0x78>*/ /*|0x1c|*/ struct MDLKEYTRACK<NTempest::C4Quaternion> rotkeys;
  /*<thisrel this+0x94>*/ /*|0x1c|*/ struct MDLKEYTRACK<NTempest::C3Vector> scalekeys;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLGENOBJECT(struct MDLGENOBJECT&);
  void __thiscall MDLGENOBJECT::MDLGENOBJECT(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int flags);
  struct MDLGENOBJECT& __thiscall operator=(struct MDLGENOBJECT&);
  void __thiscall MDLGENOBJECT::~MDLGENOBJECT();
  void __thiscall __dflt_ctor_closure();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xb0>

struct MDLHITTESTSHAPE : struct MDLGENOBJECT  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0xb0>*/ /*|0x4|*/ enum GEOM_SHAPE type;
  /*<thisrel this+0xb4>*/ /*|0x18|*/ union MDLHITTESTSHAPE::__unnamed_d4_ shape;

  // base classes -----------------------------------
  // baseclass struct MDLGENOBJECT
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLHITTESTSHAPE(struct MDLHITTESTSHAPE&);
  void __thiscall MDLHITTESTSHAPE();
  struct MDLHITTESTSHAPE& __thiscall MDLHITTESTSHAPE::operator=(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct MDLHITTESTSHAPE& source);
  void __thiscall ~MDLHITTESTSHAPE();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xcc>

struct MDLLIGHTSECTION : struct MDLGENOBJECT  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0xb0>*/ /*|0x4|*/ enum LIGHT_TYPE type;
  /*<thisrel this+0xb4>*/ /*|0x1c|*/ struct MDLKEYTRACK<float> attenstartkeys;
  /*<thisrel this+0xd0>*/ /*|0x4|*/ float staticAttenStart;
  /*<thisrel this+0xd4>*/ /*|0x1c|*/ struct MDLKEYTRACK<float> attenendkeys;
  /*<thisrel this+0xf0>*/ /*|0x4|*/ float staticAttenEnd;
  /*<thisrel this+0xf4>*/ /*|0x1c|*/ struct MDLKEYTRACK<C3Color> colorkeys;
  /*<thisrel this+0x110>*/ /*|0xc|*/ class C3Color staticColor;
  /*<thisrel this+0x11c>*/ /*|0x1c|*/ struct MDLKEYTRACK<float> intensitykeys;
  /*<thisrel this+0x138>*/ /*|0x4|*/ float staticIntensity;
  /*<thisrel this+0x13c>*/ /*|0x1c|*/ struct MDLKEYTRACK<C3Color> ambcolorkeys;
  /*<thisrel this+0x158>*/ /*|0xc|*/ class C3Color staticAmbColor;
  /*<thisrel this+0x164>*/ /*|0x1c|*/ struct MDLKEYTRACK<float> ambintensitykeys;
  /*<thisrel this+0x180>*/ /*|0x4|*/ float staticAmbIntensity;
  /*<thisrel this+0x184>*/ /*|0x1c|*/ struct MDLKEYTRACK<float> visibilityKeys;

  // base classes -----------------------------------
  // baseclass struct MDLGENOBJECT
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLLIGHTSECTION(struct MDLLIGHTSECTION&);
  void __thiscall MDLLIGHTSECTION::MDLLIGHTSECTION();
  struct MDLLIGHTSECTION& __thiscall operator=(struct MDLLIGHTSECTION&);
  void __thiscall MDLLIGHTSECTION::~MDLLIGHTSECTION();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x1a0>

struct MDLPARTICLEEMITTER2 : struct MDLGENOBJECT  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0xb0>*/ /*|0x4|*/ enum MDLPARTICLEEMITTER2::PARTICLE_EMITTER_TYPE emitterType;
  /*<thisrel this+0xb4>*/ /*|0x4|*/ float staticSpeed;
  /*<thisrel this+0xb8>*/ /*|0x1c|*/ struct MDLKEYTRACK<float> speed;
  /*<thisrel this+0xd4>*/ /*|0x4|*/ float staticVariation;
  /*<thisrel this+0xd8>*/ /*|0x1c|*/ struct MDLKEYTRACK<float> variation;
  /*<thisrel this+0xf4>*/ /*|0x4|*/ float staticLatitude;
  /*<thisrel this+0xf8>*/ /*|0x1c|*/ struct MDLKEYTRACK<float> latitude;
  /*<thisrel this+0x114>*/ /*|0x4|*/ float staticLongitude;
  /*<thisrel this+0x118>*/ /*|0x1c|*/ struct MDLKEYTRACK<float> longitude;
  /*<thisrel this+0x134>*/ /*|0x4|*/ float staticGravity;
  /*<thisrel this+0x138>*/ /*|0x1c|*/ struct MDLKEYTRACK<float> gravity;
  /*<thisrel this+0x154>*/ /*|0x4|*/ float staticLife;
  /*<thisrel this+0x158>*/ /*|0x1c|*/ struct MDLKEYTRACK<float> life;
  /*<thisrel this+0x174>*/ /*|0x4|*/ float staticEmissionRate;
  /*<thisrel this+0x178>*/ /*|0x1c|*/ struct MDLKEYTRACK<float> emissionRate;
  /*<thisrel this+0x194>*/ /*|0x4|*/ float staticWidth;
  /*<thisrel this+0x198>*/ /*|0x1c|*/ struct MDLKEYTRACK<float> width;
  /*<thisrel this+0x1b4>*/ /*|0x4|*/ float staticLength;
  /*<thisrel this+0x1b8>*/ /*|0x1c|*/ struct MDLKEYTRACK<float> length;
  /*<thisrel this+0x1d4>*/ /*|0x4|*/ float staticZsource;
  /*<thisrel this+0x1d8>*/ /*|0x1c|*/ struct MDLKEYTRACK<float> zsource;
  /*<thisrel this+0x1f4>*/ /*|0x4|*/ enum MDLPARTICLEEMITTER2::PARTICLE_BLEND_MODE blendMode;
  /*<thisrel this+0x1f8>*/ /*|0x4|*/ unsigned int rows;
  /*<thisrel this+0x1fc>*/ /*|0x4|*/ unsigned int cols;
  /*<thisrel this+0x200>*/ /*|0x4|*/ enum MDLPARTICLEEMITTER2::PARTICLE_TYPE type;
  /*<thisrel this+0x204>*/ /*|0x4|*/ float tailLength;
  /*<thisrel this+0x208>*/ /*|0x4|*/ float middleTime;
  /*<thisrel this+0x20c>*/ /*|0xc|*/ class C3Color startColor;
  /*<thisrel this+0x218>*/ /*|0xc|*/ class C3Color middleColor;
  /*<thisrel this+0x224>*/ /*|0xc|*/ class C3Color endColor;
  /*<thisrel this+0x230>*/ /*|0x1|*/ unsigned char startAlpha;
  /*<thisrel this+0x231>*/ /*|0x1|*/ unsigned char middleAlpha;
  /*<thisrel this+0x232>*/ /*|0x1|*/ unsigned char endAlpha;
  /*<thisrel this+0x234>*/ /*|0x4|*/ float startScale;
  /*<thisrel this+0x238>*/ /*|0x4|*/ float middleScale;
  /*<thisrel this+0x23c>*/ /*|0x4|*/ float endScale;
  /*<thisrel this+0x240>*/ /*|0x4|*/ unsigned int lifespanUVAnimStart;
  /*<thisrel this+0x244>*/ /*|0x4|*/ unsigned int lifespanUVAnimEnd;
  /*<thisrel this+0x248>*/ /*|0x4|*/ unsigned int lifespanUVAnimRepeat;
  /*<thisrel this+0x24c>*/ /*|0x4|*/ unsigned int decayUVAnimStart;
  /*<thisrel this+0x250>*/ /*|0x4|*/ unsigned int decayUVAnimEnd;
  /*<thisrel this+0x254>*/ /*|0x4|*/ unsigned int decayUVAnimRepeat;
  /*<thisrel this+0x258>*/ /*|0x4|*/ unsigned int tailUVAnimStart;
  /*<thisrel this+0x25c>*/ /*|0x4|*/ unsigned int tailUVAnimEnd;
  /*<thisrel this+0x260>*/ /*|0x4|*/ unsigned int tailUVAnimRepeat;
  /*<thisrel this+0x264>*/ /*|0x4|*/ unsigned int tailDecayUVAnimStart;
  /*<thisrel this+0x268>*/ /*|0x4|*/ unsigned int tailDecayUVAnimEnd;
  /*<thisrel this+0x26c>*/ /*|0x4|*/ unsigned int tailDecayUVAnimRepeat;
  /*<thisrel this+0x270>*/ /*|0x1c|*/ struct MDLKEYTRACK<float> visibilityKeys;
  /*<thisrel this+0x28c>*/ /*|0x4|*/ unsigned int squirts;
  /*<thisrel this+0x290>*/ /*|0x4|*/ unsigned int textureId;
  /*<thisrel this+0x294>*/ /*|0x4|*/ int priorityPlane;
  /*<thisrel this+0x298>*/ /*|0x4|*/ unsigned int replaceableId;
  /*<thisrel this+0x29c>*/ /*|0x104|*/ class CMdlString<260> geometryMdl;
  /*<thisrel this+0x3a0>*/ /*|0x104|*/ class CMdlString<260> recursionMdl;
  /*<thisrel this+0x4a4>*/ /*|0x4|*/ float twinkleFPS;
  /*<thisrel this+0x4a8>*/ /*|0x4|*/ float twinkleOnOff;
  /*<thisrel this+0x4ac>*/ /*|0x4|*/ float twinkleScaleMin;
  /*<thisrel this+0x4b0>*/ /*|0x4|*/ float twinkleScaleMax;
  /*<thisrel this+0x4b4>*/ /*|0x4|*/ float ivelScale;
  /*<thisrel this+0x4b8>*/ /*|0x4|*/ float tumblexMin;
  /*<thisrel this+0x4bc>*/ /*|0x4|*/ float tumblexMax;
  /*<thisrel this+0x4c0>*/ /*|0x4|*/ float tumbleyMin;
  /*<thisrel this+0x4c4>*/ /*|0x4|*/ float tumbleyMax;
  /*<thisrel this+0x4c8>*/ /*|0x4|*/ float tumblezMin;
  /*<thisrel this+0x4cc>*/ /*|0x4|*/ float tumblezMax;
  /*<thisrel this+0x4d0>*/ /*|0x4|*/ float drag;
  /*<thisrel this+0x4d4>*/ /*|0x4|*/ float spin;
  /*<thisrel this+0x4d8>*/ /*|0xc|*/ class NTempest::C3Vector windVector;
  /*<thisrel this+0x4e4>*/ /*|0x4|*/ float windTime;
  /*<thisrel this+0x4e8>*/ /*|0x4|*/ float followSpeed1;
  /*<thisrel this+0x4ec>*/ /*|0x4|*/ float followScale1;
  /*<thisrel this+0x4f0>*/ /*|0x4|*/ float followSpeed2;
  /*<thisrel this+0x4f4>*/ /*|0x4|*/ float followScale2;
  /*<thisrel this+0x4f8>*/ /*|0x14|*/ class TSGrowableArray<NTempest::C3Vector> spline;

  // base classes -----------------------------------
  // baseclass struct MDLGENOBJECT
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLPARTICLEEMITTER2::MDLPARTICLEEMITTER2(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct MDLPARTICLEEMITTER2& __that);
  void __thiscall MDLPARTICLEEMITTER2::MDLPARTICLEEMITTER2();
  struct MDLPARTICLEEMITTER2& __thiscall operator=(struct MDLPARTICLEEMITTER2&);
  void __thiscall MDLPARTICLEEMITTER2::~MDLPARTICLEEMITTER2();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x50c>

struct MDLRIBBONEMITTER : struct MDLGENOBJECT  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0xb0>*/ /*|0x4|*/ float staticHeightAbove;
  /*<thisrel this+0xb4>*/ /*|0x1c|*/ struct MDLKEYTRACK<float> heightAbove;
  /*<thisrel this+0xd0>*/ /*|0x4|*/ float staticHeightBelow;
  /*<thisrel this+0xd4>*/ /*|0x1c|*/ struct MDLKEYTRACK<float> heightBelow;
  /*<thisrel this+0xf0>*/ /*|0x4|*/ float staticAlpha;
  /*<thisrel this+0xf4>*/ /*|0x1c|*/ struct MDLKEYTRACK<float> alphaKeys;
  /*<thisrel this+0x110>*/ /*|0xc|*/ class C3Color staticColor;
  /*<thisrel this+0x11c>*/ /*|0x1c|*/ struct MDLKEYTRACK<C3Color> colorKeys;
  /*<thisrel this+0x138>*/ /*|0x4|*/ unsigned int edgesPerSecond;
  /*<thisrel this+0x13c>*/ /*|0x4|*/ float edgeLifetime;
  /*<thisrel this+0x140>*/ /*|0x4|*/ float gravity;
  /*<thisrel this+0x144>*/ /*|0x4|*/ unsigned int textureRows;
  /*<thisrel this+0x148>*/ /*|0x4|*/ unsigned int textureCols;
  /*<thisrel this+0x14c>*/ /*|0x4|*/ unsigned int staticTextureSlot;
  /*<thisrel this+0x150>*/ /*|0x18|*/ struct MDLSIMPLEKEYTRACK<MDLINTKEY> textureSlot;
  /*<thisrel this+0x168>*/ /*|0x1c|*/ struct MDLKEYTRACK<float> visibilityKeys;
  /*<thisrel this+0x184>*/ /*|0x4|*/ unsigned int materialId;

  // base classes -----------------------------------
  // baseclass struct MDLGENOBJECT
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLRIBBONEMITTER(struct MDLRIBBONEMITTER&);
  void __thiscall MDLRIBBONEMITTER::MDLRIBBONEMITTER();
  struct MDLRIBBONEMITTER& __thiscall operator=(struct MDLRIBBONEMITTER&);
  void __thiscall MDLRIBBONEMITTER::~MDLRIBBONEMITTER();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x188>

struct MDLEVENTSECTION : struct MDLGENOBJECT  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0xb0>*/ /*|0x18|*/ struct MDLSIMPLEKEYTRACK<MDLEVENTKEY> eventKeys;

  // base classes -----------------------------------
  // baseclass struct MDLGENOBJECT
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLEVENTSECTION(struct MDLEVENTSECTION&);
  void __thiscall MDLEVENTSECTION();
  struct MDLEVENTSECTION& __thiscall operator=(struct MDLEVENTSECTION&);
  void __thiscall ~MDLEVENTSECTION();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xc8>

struct MDLBASE {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x205|*/ struct MDLHEADERSECTION header;
  /*<thisrel this+0x208>*/ /*|0x1a0|*/ struct MDLMODELSECTION model;
  /*<thisrel this+0x3a8>*/ /*|0x4|*/ unsigned int version;
  /*<thisrel this+0x3ac>*/ /*|0x14|*/ class TSGrowableArray<MDLSEQUENCESSECTION> sequences;
  /*<thisrel this+0x3c0>*/ /*|0x14|*/ class TSGrowableArray<MDLGLOBALSEQSECTION> globalSeqs;
  /*<thisrel this+0x3d4>*/ /*|0x14|*/ class TSGrowableArray<MDLMATERIALSECTION> materials;
  /*<thisrel this+0x3e8>*/ /*|0x14|*/ class TSGrowableArray<MDLTEXTURESECTION> textures;
  /*<thisrel this+0x3fc>*/ /*|0x14|*/ class TSGrowableArray<MDLTEXANIMSECTION> textureanims;
  /*<thisrel this+0x410>*/ /*|0x14|*/ class TSGrowableArray<MDLGEOSETSECTION> geosets;
  /*<thisrel this+0x424>*/ /*|0x14|*/ class TSGrowableArray<MDLGEOSETANIMSECTION> geosetAnims;
  /*<thisrel this+0x438>*/ /*|0x14|*/ class TSGrowableArray<MDLGENOBJECT *> objects;
  /*<thisrel this+0x44c>*/ /*|0x14|*/ class TSGrowableArray<MDLBONESECTION> bones;
  /*<thisrel this+0x460>*/ /*|0x14|*/ class TSGrowableArray<MDLLIGHTSECTION> lights;
  /*<thisrel this+0x474>*/ /*|0x14|*/ class TSGrowableArray<MDLGENOBJECT> helpers;
  /*<thisrel this+0x488>*/ /*|0x14|*/ class TSGrowableArray<MDLATTACHMENTSECTION> attachments;
  /*<thisrel this+0x49c>*/ /*|0x14|*/ class TSGrowableArray<NTempest::C3Vector> pivotPoints;
  /*<thisrel this+0x4b0>*/ /*|0x14|*/ class TSGrowableArray<MDLPARTICLEEMITTER> particleEmitters;
  /*<thisrel this+0x4c4>*/ /*|0x14|*/ class TSGrowableArray<MDLCAMERASECTION> cameras;
  /*<thisrel this+0x4d8>*/ /*|0x14|*/ class TSGrowableArray<MDLEVENTSECTION> events;
  /*<thisrel this+0x4ec>*/ /*|0x14|*/ class TSGrowableArray<MDLPARTICLEEMITTER2> particleEmitters2;
  /*<thisrel this+0x500>*/ /*|0x14|*/ class TSGrowableArray<MDLHITTESTSHAPE> hitTestShapes;
  /*<thisrel this+0x514>*/ /*|0x14|*/ class TSGrowableArray<MDLRIBBONEMITTER> ribbonEmitters;
  /*<thisrel this+0x528>*/ /*|0x3c|*/ struct MDLCOLLISION collision;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLBASE(struct MDLBASE&);
  void __thiscall MDLBASE::MDLBASE();
  void __thiscall MDLBASE::RebuildObjectPtrs();
  struct MDLBASE& __thiscall operator=(struct MDLBASE&);
  void __thiscall MDLBASE::~MDLBASE();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x564>

struct CDataRecycler::Node {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct CDataRecycler::Node* m_next;
  /*<thisrel this+0x4>*/ /*|0x4|*/ void* m_data;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long m_bytes;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct CDataRecycler::NodeBlock {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct CDataRecycler::NodeBlock* m_next;
  /*<thisrel this+0x4>*/ /*|0xc|*/ struct CDataRecycler::Node m_nodes[1];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct HPROPCONTEXT__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct PrefetchNode : class TSHashObject<PrefetchNode,HASHKEY_STRI>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x4|*/ void* buffer;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned int size;
  /*<thisrel this+0x20>*/ /*|0x8|*/ struct SOVERLAPPED overlapped;
  /*<thisrel this+0x28>*/ /*|0x4|*/ int refCount;

  // base classes -----------------------------------
  // baseclass class TSHashObject<PrefetchNode,HASHKEY_STRI>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall PrefetchNode(struct PrefetchNode&);
  void __thiscall PrefetchNode();
  struct PrefetchNode& __thiscall operator=(struct PrefetchNode&);
  void __thiscall ~PrefetchNode();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x2c>

struct UncachableNode : class TSHashObject<UncachableNode,HASHKEY_STRI>  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass class TSHashObject<UncachableNode,HASHKEY_STRI>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall UncachableNode(struct UncachableNode&);
  void __thiscall UncachableNode();
  struct UncachableNode& __thiscall operator=(struct UncachableNode&);
  void __thiscall ~UncachableNode();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x18>

struct HSLOG__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct HOBJECT__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct EvtContext : class TSingletonInstanceId<EvtContext,8>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x10>*/ /*|0x18|*/ class SCritSect m_critsect;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned long m_currTime;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ enum EvtContext::SCHEDSTATE m_schedState;
  /*<thisrel this+0x30>*/ /*|0x10|*/ class TSTimerPriority<unsigned long> m_schedNextWakeTime;
  /*<thisrel this+0x40>*/ /*|0x4|*/ unsigned long m_schedLastIdle;
  /*<thisrel this+0x44>*/ /*|0x4|*/ unsigned long m_schedFlags;
  /*<thisrel this+0x48>*/ /*|0x4|*/ unsigned long m_schedIdleTime;
  /*<thisrel this+0x4c>*/ /*|0x4|*/ unsigned long m_schedInitialIdleTime;
  /*<thisrel this+0x50>*/ /*|0x4|*/ unsigned int m_schedWeight;
  /*<thisrel this+0x54>*/ /*|0x4|*/ unsigned int m_schedSmoothWeight;
  /*<thisrel this+0x58>*/ /*|0x4|*/ int m_schedRebalance;
  /*<thisrel this+0x5c>*/ /*|0x15c|*/ class TSExplicitList<EvtHandler,0> m_queueHandlerList[29];
  /*<thisrel this+0x1b8>*/ /*|0xc|*/ class TSExplicitList<EvtMessage,4> m_queueMessageList;
  /*<thisrel this+0x1c4>*/ /*|0x4|*/ unsigned int m_queueSyncButtonState;
  /*<thisrel this+0x1c8>*/ /*|0xc|*/ class TSExplicitList<EvtKeyDown,0> m_queueSyncKeyDownList;
  /*<thisrel this+0x1d4>*/ /*|0x28|*/ class EvtIdTable<EvtTimer *> m_timerIdTable;
  /*<thisrel this+0x1fc>*/ /*|0x18|*/ class EvtTimerQueue m_timerQueue;
  /*<thisrel this+0x214>*/ /*|0x4|*/ struct HPROPCONTEXT__* m_propContext;
  /*<thisrel this+0x218>*/ /*|0x4|*/ void* m_callContext;
  /*<thisrel this+0x21c>*/ /*|0x4|*/ unsigned int m_startWatchdog;

  // base classes -----------------------------------
  // baseclass class TSingletonInstanceId<EvtContext,8>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall EvtContext(unsigned long, unsigned long, unsigned int, void*, int);
  void __thiscall EvtContext(struct EvtContext&);
  struct EvtContext& __thiscall operator=(struct EvtContext&);
  struct HEVENTCONTEXT__* __thiscall Handle();
  int __thiscall EvtContext::IsCurrentContext();
  unsigned long __thiscall GetCurrTime();
  void __thiscall SetCurrTime(unsigned long);
  void __thiscall SchedSelect();
  void __thiscall SchedDeselect();
  int __thiscall SchedGetClosed();
  void __thiscall SchedSetClosed();
  int __thiscall SchedGetDestroyed();
  void __thiscall SchedSetDestroyed();
  unsigned long __thiscall SchedGetNextWakeTime();
  void __thiscall SchedSetNextWakeTime(unsigned long);
  unsigned long __thiscall SchedGetLastIdle();
  void __thiscall SchedSetLastIdle(unsigned long);
  unsigned long __thiscall SchedGetFlags(unsigned long);
  void __thiscall SchedSetFlags(unsigned long);
  void __thiscall SchedResetFlags(unsigned long);
  unsigned long __thiscall SchedGetInitialIdleTime();
  unsigned long __thiscall SchedGetIdleTime();
  void __thiscall SchedSetIdleTime(unsigned long);
  unsigned int __thiscall SchedGetWeight();
  void __thiscall SchedSetWeight(unsigned int);
  unsigned int __thiscall SchedGetSmoothWeight();
  void __thiscall SchedSetSmoothWeight(unsigned int);
  int __thiscall SchedGetRebalance();
  void __thiscall SchedSetRebalance(int);
  class TSExplicitList<EvtHandler,0>& __thiscall QueueLockHandlerList(enum EVENTID);
  void __thiscall QueueUnlockHandlerList();
  class TSExplicitList<EvtMessage,4>& __thiscall QueueLockMessageList();
  void __thiscall QueueUnlockMessageList();
  class TSExplicitList<EvtKeyDown,0>& __thiscall QueueLockSyncKeyDownList();
  void __thiscall QueueUnlockSyncKeyDownList();
  unsigned int __thiscall QueueGetSyncButtonState(unsigned int);
  void __thiscall QueueSetSyncButtonState(unsigned int);
  void __thiscall QueueResetSyncButtonState(unsigned int);
  void __thiscall TimerLockIdTableAndQueue(class EvtIdTable<EvtTimer *>*&, class EvtTimerQueue*&);
  void __thiscall TimerUnlockIdTableAndQueue();
  int __thiscall StartWatchdog();

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ void __thiscall ~EvtContext();
  virtual /*<vtableoff 0x0>*/ void* __thiscall __vecDelDtor(unsigned int);
};
// <size 0x220>

struct EVENT_DATA_TIMER {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ float elapsedSec;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long currTime;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct EventReg : class TSHashObject<EventReg,HASHKEY_NONE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long flags;
  /*<thisrel this+0x1c>*/ /*|0xc|*/ class TSList<EventReg::EVENTCALLBACKREG,TSGetLink<EventReg::EVENTCALLBACKREG> > callbackList;
  /*<thisrel this+0x28>*/ /*|0xc|*/ class TSList<EventReg::EVENTDISPATCHREG,TSGetLink<EventReg::EVENTDISPATCHREG> > dispatchList;

  // base classes -----------------------------------
  // baseclass class TSHashObject<EventReg,HASHKEY_NONE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall SetFlag(unsigned long);
  void __thiscall ClearFlag(unsigned long);
  int __thiscall TestFlag(unsigned long);
  void __thiscall EventReg(struct EventReg&);
  void __thiscall EventReg::EventReg();
  void __thiscall EventReg::~EventReg();
  void __thiscall EventReg::RegisterCallback(/*<regrel ebp+0x8>*/ /*|0x4|*/ int  (callback*)(class CEvent&, void*), /*<regrel ebp+0xc>*/ /*|0x4|*/ void* param);
  void __thiscall EventReg::RegisterEvent(/*<regrel ebp+0x8>*/ /*|0x4|*/ int expectedEventId, /*<regrel ebp+0xc>*/ /*|0x4|*/ class CObserver* pObserver);
  void __thiscall EventReg::UnregisterCallback(/*<regrel ebp+0x8>*/ /*|0x4|*/ int  (callback*)(class CEvent&, void*));
  void __thiscall EventReg::UnregisterEvent(/*<regrel ebp+0x8>*/ /*|0x4|*/ class CObserver* pObserver);
  void __thiscall EventReg::CleanupCallbacks();
  void __thiscall EventReg::CleanupEvents();
  int __thiscall EventReg::IsCallbackRegistered(/*<regrel ebp+0x8>*/ /*|0x4|*/ int  (callback*)(class CEvent&, void*));
  int __thiscall EventReg::IsEventRegistered(/*<regrel ebp+0x8>*/ /*|0x4|*/ class CObserver* pObserver);
  int __thiscall EventReg::DispatchCallback(/*<regrel ebp+0x8>*/ /*|0x4|*/ class CEvent& event);
  int __thiscall EventReg::DispatchEvent(/*<regrel ebp+0x8>*/ /*|0x4|*/ class CEvent& event);
  int __thiscall IsEmpty();
  int __thiscall Locked();
  void __thiscall IncLock();
  void __thiscall DecLock();
  int __thiscall Changed();
  void __thiscall MarkChanged();
  void __thiscall ResetChanged();
  struct EventReg& __thiscall operator=(struct EventReg&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x34>

struct EventReg::EVENTCALLBACKREG : class TSLinkedNode<EventReg::EVENTCALLBACKREG>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ int  (callback*)(class CEvent&, void*);
  /*<thisrel this+0xc>*/ /*|0x4|*/ void* param;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<EventReg::EVENTCALLBACKREG>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall EVENTCALLBACKREG(struct EventReg::EVENTCALLBACKREG&);
  void __thiscall EVENTCALLBACKREG();
  void __thiscall EventReg::EVENTCALLBACKREG::~EVENTCALLBACKREG();
  struct EventReg::EVENTCALLBACKREG& __thiscall operator=(struct EventReg::EVENTCALLBACKREG&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x10>

struct EventReg::EVENTDISPATCHREG : class TSLinkedNode<EventReg::EVENTDISPATCHREG>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ class TRefCntPtr<CObserver> pObserver;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int expectedEventId;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<EventReg::EVENTDISPATCHREG>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall EVENTDISPATCHREG(struct EventReg::EVENTDISPATCHREG&);
  void __thiscall EVENTDISPATCHREG();
  void __thiscall ~EVENTDISPATCHREG();
  struct EventReg::EVENTDISPATCHREG& __thiscall operator=(struct EventReg::EVENTDISPATCHREG&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x10>

struct EVENT_DATA_CHAR {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int ch;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int metaKeyState;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int repeat;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct EVENT_DATA_KEY {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ enum KEY key;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int metaKeyState;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int repeat;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long time;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct EVENT_DATA_MOUSE {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ enum MOUSEMODE mode;
  /*<thisrel this+0x4>*/ /*|0x4|*/ enum MOUSEBUTTON button;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int buttonState;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int metaKeyState;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int flags;
  /*<thisrel this+0x14>*/ /*|0x4|*/ float x;
  /*<thisrel this+0x18>*/ /*|0x4|*/ float y;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int wheelDistance;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned long time;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x24>

struct EVENT_DATA_IME {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int message;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int wParam;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int lParam;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int codepage;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct EVENT_DATA_SIZE {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int w;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int h;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct EVENT_DATA_FOCUS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int focus;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct EvtMessage : class TExtraInstanceRecyclable<EvtMessage>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x4>*/ /*|0x8|*/ class TSLink<EvtMessage> link;
  /*<thisrel this+0xc>*/ /*|0x4|*/ enum EVENTID id;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned char data[4];

  // base classes -----------------------------------
  // baseclass class TExtraInstanceRecyclable<EvtMessage>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall EvtMessage(struct EvtMessage&);
  void __thiscall EvtMessage();
  struct EvtMessage& __thiscall operator=(struct EvtMessage&);
  void __thiscall ~EvtMessage();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x14>

struct EvtHandler {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ class TSLink<EvtHandler> link;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int  (func*)(void*, void*);
  /*<thisrel this+0xc>*/ /*|0x4|*/ void* param;
  /*<thisrel this+0x10>*/ /*|0x4|*/ float priority;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int marker;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall EvtHandler(struct EvtHandler&);
  void __thiscall EvtHandler();
  struct EvtHandler& __thiscall operator=(struct EvtHandler&);
  void __thiscall ~EvtHandler();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x18>

struct EvtKeyDown {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ class TSLink<EvtKeyDown> link;
  /*<thisrel this+0x8>*/ /*|0x4|*/ enum KEY key;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall EvtKeyDown(struct EvtKeyDown&);
  void __thiscall EvtKeyDown();
  struct EvtKeyDown& __thiscall operator=(struct EvtKeyDown&);
  void __thiscall ~EvtKeyDown();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xc>

struct INSTANCELOCK__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct EvtThread : class TSLinkedNode<EvtThread>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int m_threadSlot;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int m_threadCount;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int m_weightTotal;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned int m_weightAvg;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned int m_contextCount;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned int m_rebalance;
  /*<thisrel this+0x20>*/ /*|0x4|*/ class SEvent m_wakeEvent;
  /*<thisrel this+0x24>*/ /*|0x18|*/ class EvtContextQueue m_contextQueue;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<EvtThread>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall EvtThread(struct EvtThread&);
  void __thiscall EvtThread();
  struct EvtThread& __thiscall operator=(struct EvtThread&);
  void __thiscall EvtThread::~EvtThread();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x3c>

struct EVENT_DATA_IDLE {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ float elapsedSec;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long time;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct GXUFONTHYPERLINKINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x10|*/ class NTempest::CRect extent;
  /*<thisrel this+0x10>*/ /*|0x4|*/ char* link;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned int linkLength;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall GXUFONTHYPERLINKINFO();
  void __thiscall ~GXUFONTHYPERLINKINFO();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x18>

struct FrameScriptObject_Variable : class TSHashObject<FrameScriptObject_Variable,HASHKEY_STR>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x4|*/ int reference;

  // base classes -----------------------------------
  // baseclass class TSHashObject<FrameScriptObject_Variable,HASHKEY_STR>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall FrameScriptObject_Variable(struct FrameScriptObject_Variable&);
  void __thiscall FrameScriptObject_Variable();
  struct FrameScriptObject_Variable& __thiscall operator=(struct FrameScriptObject_Variable&);
  void __thiscall ~FrameScriptObject_Variable();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x1c>

struct FrameScript_Method {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ char* name;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int  (method*)(struct lua_State*);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct lua_State {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x0>

struct StringToButtonState::__unnamed_d5_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ enum CSimpleButtonState state;
  /*<thisrel this+0x4>*/ /*|0x4|*/ char* string;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct XMLTree {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x0>

struct REGIONNODE : class TSLinkedNode<REGIONNODE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ class CSimpleRegion* region;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<REGIONNODE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall REGIONNODE(struct REGIONNODE&);
  void __thiscall REGIONNODE();
  struct REGIONNODE& __thiscall operator=(struct REGIONNODE&);
  void __thiscall ~REGIONNODE();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xc>

struct CGxString : class TSLinkedNode<CGxString>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x8|*/ class TSLink<CGxString> m_fontStringLink;
  /*<thisrel this+0x10>*/ /*|0x8|*/ class TSLink<CGxString> m_batchedStringLink;
  /*<thisrel this+0x18>*/ /*|0x4|*/ float m_requestedFontHeight;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ float m_currentFontHeight;
  /*<thisrel this+0x20>*/ /*|0xc|*/ class NTempest::C3Vector m_position;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ class NTempest::CImVector m_fontColor;
  /*<thisrel this+0x30>*/ /*|0x4|*/ class NTempest::CImVector m_shadowColor;
  /*<thisrel this+0x34>*/ /*|0x8|*/ class NTempest::C2Vector m_shadowOffset;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ float m_blockWidth;
  /*<thisrel this+0x40>*/ /*|0x4|*/ float m_blockHeight;
  /*<thisrel this+0x44>*/ /*|0x4|*/ struct CGxFont* m_currentFace;
  /*<thisrel this+0x48>*/ /*|0x18|*/ struct IGXUTEXTBLOCK m_textBlock;
  /*<thisrel this+0x60>*/ /*|0x4|*/ char* m_text;
  /*<thisrel this+0x64>*/ /*|0x4|*/ unsigned int m_textLen;
  /*<thisrel this+0x68>*/ /*|0x4|*/ enum EGxFontVJusts m_vertJust;
  /*<thisrel this+0x6c>*/ /*|0x4|*/ enum EGxFontHJusts m_horzJust;
  /*<thisrel this+0x70>*/ /*|0x4|*/ float m_spacing;
  /*<thisrel this+0x74>*/ /*|0x4|*/ unsigned int m_flags;
  /*<thisrel this+0x78>*/ /*|0x8|*/ class NTempest::C2Vector m_viewportOffset;
  /*<thisrel this+0x80>*/ /*|0x4|*/ unsigned int m_texturePagesUsed;
  /*<thisrel this+0x84>*/ /*|0x4|*/ int m_textureEvicted;
  /*<thisrel this+0x88>*/ /*|0x4|*/ float m_stringHeight;
  /*<thisrel this+0x8c>*/ /*|0x4|*/ float m_savedWidth;
  /*<thisrel this+0x90>*/ /*|0x14|*/ class TSGrowableArray<GXUFONTHYPERLINKINFO> m_hyperlinkInfo;
  /*<thisrel this+0xa4>*/ /*|0x14|*/ class TSGrowableArray<NTempest::CImVector *> m_colorGradients;
  /*<thisrel this+0xb8>*/ /*|0x14|*/ class TSGrowableArray<NTempest::CImVector *> m_colorGradientShadows;
  /*<thisrel this+0xcc>*/ /*|0x4|*/ int m_lastGradientStart;
  /*<thisrel this+0xd0>*/ /*|0x4|*/ int m_lastGradientLength;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<CGxString>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------
  static struct CGxString* __fastcall CGxString::GetNewString(/*<register ecx>*/ /*|0x4|*/ int linkonList);

  // non-virtual functions --------------------------
  int __thiscall IsBillboarded();
  void __thiscall CGxString::Render(/*<regrel ebp+0x8>*/ /*|0x4|*/ class NTempest::C44Matrix& xform);
  void __thiscall CGxString::Render();
  void __thiscall CGxString(struct CGxString&);
  void __thiscall CGxString::CGxString();
  void __thiscall CGxString::~CGxString();
  int __thiscall CGxString::Initialize(/*<regrel ebp+0x8>*/ /*|0x4|*/ float fontHeight, /*<regrel ebp+0xc>*/ /*|0x4|*/ class NTempest::C3Vector& position, /*<regrel ebp+0x10>*/ /*|0x4|*/ float blockWidth, /*<regrel ebp+0x14>*/ /*|0x4|*/ float blockHeight, /*<regrel ebp+0x18>*/ /*|0x4|*/ struct CGxFont* face, /*<regrel ebp+0x1c>*/ /*|0x4|*/ char* text, /*<regrel ebp+0x20>*/ /*|0x4|*/ enum EGxFontVJusts vertJust, /*<regrel ebp+0x24>*/ /*|0x4|*/ enum EGxFontHJusts horzJust, /*<regrel ebp+0x28>*/ /*|0x4|*/ float spacing, /*<regrel ebp+0x2c>*/ /*|0x4|*/ unsigned int flags, /*<regrel ebp+0x30>*/ /*|0x4|*/ class NTempest::CImVector& color);
  void __thiscall CGxString::Recycle();
  void __thiscall CGxString::CreateGeometry();
  void __thiscall CGxString::InitializeViewportOffsets();
  void __thiscall CGxString::HandleScreenSizeChange();
  void __thiscall CGxString::RemoveShadow();
  void __thiscall CGxString::SetColor(/*<regrel ebp+0x8>*/ /*|0x4|*/ class NTempest::CImVector& color);
  void __thiscall CGxString::SetStringPosition(/*<regrel ebp+0x8>*/ /*|0x4|*/ class NTempest::C3Vector& position);
  void __thiscall CGxString::TexturePageEvicted(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int pageNumber);
  void __thiscall CGxString::GenerateVertexIndices();
  void __thiscall CGxString::SetCharSpacing(/*<regrel ebp+0x8>*/ /*|0x4|*/ float spacing);
  float __thiscall GetStringHeight();
  unsigned int __thiscall Flags();
  void __thiscall AddFlag(unsigned int);
  struct CGxFont* __thiscall GetCurrentFace();
  void __thiscall CGxString::BuildView(/*<regrel ebp+0x8>*/ /*|0x4|*/ class NTempest::C44Matrix* viewPtr, /*<regrel ebp+0xc>*/ /*|0x4|*/ float width, /*<regrel ebp+0x10>*/ /*|0x4|*/ float height);
  void __thiscall CGxString::BuildProjection(/*<regrel ebp+0x8>*/ /*|0x4|*/ class NTempest::C44Matrix* projPtr, /*<regrel ebp+0xc>*/ /*|0x4|*/ float minx, /*<regrel ebp+0x10>*/ /*|0x4|*/ float maxx, /*<regrel ebp+0x14>*/ /*|0x4|*/ float miny, /*<regrel ebp+0x18>*/ /*|0x4|*/ float maxy, /*<regrel ebp+0x1c>*/ /*|0x4|*/ float pixWidth, /*<regrel ebp+0x20>*/ /*|0x4|*/ float pixHeight);
  void __thiscall CGxString::InitializeTextLine(/*<regrel ebp+0x8>*/ /*|0x4|*/ char* currentText, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int numBytes, /*<regrel ebp+0x10>*/ /*|0x4|*/ class NTempest::CImVector& workingColor, /*<regrel ebp+0x14>*/ /*|0x4|*/ class NTempest::C3Vector& position, /*<regrel ebp+0x18>*/ /*|0x4|*/ unsigned int* texturePagesUsedFlag, /*<regrel ebp+0x1c>*/ /*|0x4|*/ struct HYPERLINKPARSEINFO& info);
  struct CGxString* __thiscall CGxString::Duplicate();
  float __thiscall GetSavedWidth();
  float __thiscall GetSavedHeight();
  unsigned int __thiscall CGxString::GetHyperLinkInfo(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct GXUFONTHYPERLINKINFO*& list);
  int __thiscall CGxString::SetGradient(/*<regrel ebp+0x8>*/ /*|0x4|*/ int startCharacter, /*<regrel ebp+0xc>*/ /*|0x4|*/ int length, /*<regrel ebp+0x10>*/ /*|0x4|*/ class TSGrowableArray<NTempest::CImVector *>& array, /*<regrel ebp+0x14>*/ /*|0x1|*/ unsigned char alpha);
  int __thiscall CGxString::SetGradient(/*<regrel ebp+0x8>*/ /*|0x4|*/ int startCharacter, /*<regrel ebp+0xc>*/ /*|0x4|*/ int length);
  void __thiscall CGxString::AddShadow(/*<regrel ebp+0x8>*/ /*|0x4|*/ class NTempest::C2Vector& offset, /*<regrel ebp+0xc>*/ /*|0x4|*/ class NTempest::CImVector& color);
  void __thiscall CGxString::AddShadowFixedGeometry();
  void __thiscall CGxString::ClearInstanceData();
  void __thiscall InternalRender(unsigned char);
  void __thiscall CGxString::InternalRender();
  void __thiscall CGxString::ClearStringMatrixEntry();
  void __thiscall CGxString::AddHyperlinkParseInfo(/*<regrel ebp+0x8>*/ /*|0x18|*/ struct GXUFONTHYPERLINKINFO currentParseInfo);
  void __thiscall CGxString::CheckEvictedTextures();
  void __thiscall CGxString::RenderTexture(/*<regrel ebp+0x8>*/ /*|0x4|*/ int line, /*<regrel ebp+0xc>*/ /*|0x4|*/ int texture);
  void __thiscall CGxString::RenderTexture(/*<regrel ebp+0x8>*/ /*|0x1|*/ unsigned char initGxRenderStates, /*<regrel ebp+0xc>*/ /*|0x4|*/ int texture);
  struct CGxString& __thiscall operator=(struct CGxString&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xd4>

struct HTEXTFONT__ : struct HOBJECT__  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x4>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------
  // baseclass struct HOBJECT__
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct HTEXTBLOCK__ : struct HOBJECT__  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x4>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------
  // baseclass struct HOBJECT__
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct MessageData {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ char* text;
  /*<thisrel this+0x4>*/ /*|0x4|*/ class NTempest::CImVector color;
  /*<thisrel this+0x8>*/ /*|0x4|*/ float timeVisible;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int permanent;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MessageData(struct MessageData&);
  void __thiscall MessageData();
  struct MessageData& __thiscall operator=(struct MessageData&);
  void __thiscall ~MessageData();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x10>

struct OsIMECandidate {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x400|*/ char candidate[1024];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x400>

struct CGxTexFlags {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<bitfield this+0x0>*/ /*|0x4|*/ unsigned long m_filter:0:3;
  /*<bitfield this+0x0>*/ /*|0x4|*/ unsigned long m_wrapU:3:1;
  /*<bitfield this+0x0>*/ /*|0x4|*/ unsigned long m_wrapV:4:1;
  /*<bitfield this+0x0>*/ /*|0x4|*/ unsigned long m_forceMipTracking:5:1;
  /*<bitfield this+0x0>*/ /*|0x4|*/ unsigned long m_generateMipMaps:6:1;
  /*<bitfield this+0x0>*/ /*|0x4|*/ unsigned long m_renderTarget:7:1;
  /*<bitfield this+0x0>*/ /*|0x4|*/ unsigned long m_maxAnisotropy:8:5;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CGxTexFlags::CGxTexFlags(/*<regrel ebp+0x8>*/ /*|0x4|*/ enum EGxTexFilter filter, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned long wrapU, /*<regrel ebp+0x10>*/ /*|0x4|*/ unsigned long wrapV, /*<regrel ebp+0x14>*/ /*|0x4|*/ unsigned long force, /*<regrel ebp+0x18>*/ /*|0x4|*/ unsigned long generateMipMaps, /*<regrel ebp+0x1c>*/ /*|0x4|*/ unsigned long renderTarget, /*<regrel ebp+0x20>*/ /*|0x4|*/ unsigned long maxAnisotropy);
  unsigned char __thiscall operator==(struct CGxTexFlags&);
  unsigned char __thiscall operator!=(struct CGxTexFlags&);
  void __thiscall __dflt_ctor_closure();

  // virtual functions ------------------------------
};
// <size 0x4>

struct HTEXTURE__ : struct HOBJECT__  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x4>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------
  // baseclass struct HOBJECT__
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct CSimpleBatchedTexture {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long textureID;
  /*<thisrel this+0x4>*/ /*|0x4|*/ class NTempest::C3Vector* position;
  /*<thisrel this+0x8>*/ /*|0x4|*/ class NTempest::C2Vector* texCoord;
  /*<thisrel this+0xc>*/ /*|0x4|*/ enum EGxBlend alphamode;
  /*<thisrel this+0x10>*/ /*|0x4|*/ class NTempest::CImVector* GxColor;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct SIMPLEFRAMENODE : class TSLinkedNode<SIMPLEFRAMENODE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ class CSimpleFrame* frame;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<SIMPLEFRAMENODE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall SIMPLEFRAMENODE(struct SIMPLEFRAMENODE&);
  void __thiscall SIMPLEFRAMENODE();
  struct SIMPLEFRAMENODE& __thiscall operator=(struct SIMPLEFRAMENODE&);
  void __thiscall ~SIMPLEFRAMENODE();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xc>

struct CLayoutFrame::FRAMENODE : class TSLinkedNode<CLayoutFrame::FRAMENODE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0xc>*/ /*|0x4|*/ class CLayoutFrame* frame;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int dep;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<CLayoutFrame::FRAMENODE>
  // <base data offset+0x4>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall FRAMENODE(struct CLayoutFrame::FRAMENODE&);
  void __thiscall FRAMENODE();
  struct CLayoutFrame::FRAMENODE& __thiscall operator=(struct CLayoutFrame::FRAMENODE&);
  void __thiscall __local_vftable_ctor_closure();

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ void __thiscall ~FRAMENODE();
  virtual /*<vtableoff 0x0>*/ void* __thiscall __vecDelDtor(unsigned int);
};
// <size 0x14>

struct SIMPLECONTEXTHASHOBJ : class TSHashObject<SIMPLECONTEXTHASHOBJ,HASHKEY_NONE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x2c|*/ class TSHashTable<SIMPLEFRAMEREGHASH,HASHKEY_STR> s_frameRegistry;
  /*<thisrel this+0x44>*/ /*|0x2c|*/ class TSHashTable<SIMPLETEXTUREREGHASH,HASHKEY_STR> s_textureRegistry;
  /*<thisrel this+0x70>*/ /*|0x2c|*/ class TSHashTable<SIMPLEFONTSTRINGREGHASH,HASHKEY_STR> s_stringRegistry;

  // base classes -----------------------------------
  // baseclass class TSHashObject<SIMPLECONTEXTHASHOBJ,HASHKEY_NONE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ~SIMPLECONTEXTHASHOBJ();
  void __thiscall SIMPLECONTEXTHASHOBJ(struct SIMPLECONTEXTHASHOBJ&);
  void __thiscall SIMPLECONTEXTHASHOBJ();
  struct SIMPLECONTEXTHASHOBJ& __thiscall operator=(struct SIMPLECONTEXTHASHOBJ&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x9c>

struct SIMPLEFRAMEREGHASH : class TSHashObject<SIMPLEFRAMEREGHASH,HASHKEY_STR>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x4|*/ class CSimpleFrame* object;

  // base classes -----------------------------------
  // baseclass class TSHashObject<SIMPLEFRAMEREGHASH,HASHKEY_STR>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall SIMPLEFRAMEREGHASH(struct SIMPLEFRAMEREGHASH&);
  void __thiscall SIMPLEFRAMEREGHASH();
  struct SIMPLEFRAMEREGHASH& __thiscall operator=(struct SIMPLEFRAMEREGHASH&);
  void __thiscall ~SIMPLEFRAMEREGHASH();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x1c>

struct SIMPLETEXTUREREGHASH : class TSHashObject<SIMPLETEXTUREREGHASH,HASHKEY_STR>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x4|*/ class CSimpleTexture* object;

  // base classes -----------------------------------
  // baseclass class TSHashObject<SIMPLETEXTUREREGHASH,HASHKEY_STR>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall SIMPLETEXTUREREGHASH(struct SIMPLETEXTUREREGHASH&);
  void __thiscall SIMPLETEXTUREREGHASH();
  struct SIMPLETEXTUREREGHASH& __thiscall operator=(struct SIMPLETEXTUREREGHASH&);
  void __thiscall ~SIMPLETEXTUREREGHASH();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x1c>

struct SIMPLEFONTSTRINGREGHASH : class TSHashObject<SIMPLEFONTSTRINGREGHASH,HASHKEY_STR>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x4|*/ class CSimpleFontString* object;

  // base classes -----------------------------------
  // baseclass class TSHashObject<SIMPLEFONTSTRINGREGHASH,HASHKEY_STR>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall SIMPLEFONTSTRINGREGHASH(struct SIMPLEFONTSTRINGREGHASH&);
  void __thiscall SIMPLEFONTSTRINGREGHASH();
  struct SIMPLEFONTSTRINGREGHASH& __thiscall operator=(struct SIMPLEFONTSTRINGREGHASH&);
  void __thiscall ~SIMPLEFONTSTRINGREGHASH();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x1c>

struct CModelCreate {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int flags;
  /*<thisrel this+0x4>*/ /*|0x4|*/ char** sequenceNames;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int numSequences;
  /*<thisrel this+0xc>*/ /*|0x4|*/ char** boneNames;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int numBones;
  /*<thisrel this+0x14>*/ /*|0x4|*/ char** cameraNames;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned int numCameras;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CModelCreate();

  // virtual functions ------------------------------
};
// <size 0x1c>

struct HMODEL__ : struct HOBJECT__  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x4>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------
  // baseclass struct HOBJECT__
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct TSet::__unnamed_d6_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int token;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int needed;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int dupsOk;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int seen;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct MDLMODELSECTION {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x50|*/ class CMdlString<80> name;
  /*<thisrel this+0x50>*/ /*|0x104|*/ class CMdlString<260> animationFile;
  /*<thisrel this+0x154>*/ /*|0x4|*/ unsigned int geosetCount;
  /*<thisrel this+0x158>*/ /*|0x4|*/ unsigned int geosetAnimCount;
  /*<thisrel this+0x15c>*/ /*|0x4|*/ unsigned int boneCount;
  /*<thisrel this+0x160>*/ /*|0x4|*/ unsigned int lightCount;
  /*<thisrel this+0x164>*/ /*|0x4|*/ unsigned int helperCount;
  /*<thisrel this+0x168>*/ /*|0x4|*/ unsigned int attachmentCount;
  /*<thisrel this+0x16c>*/ /*|0x4|*/ unsigned int particleCount;
  /*<thisrel this+0x170>*/ /*|0x4|*/ unsigned int particle2Count;
  /*<thisrel this+0x174>*/ /*|0x4|*/ unsigned int ribbonCount;
  /*<thisrel this+0x178>*/ /*|0x4|*/ unsigned int eventCount;
  /*<thisrel this+0x17c>*/ /*|0x1c|*/ struct CMdlBounds bounds;
  /*<thisrel this+0x198>*/ /*|0x4|*/ unsigned int blendTime;
  /*<thisrel this+0x19c>*/ /*|0x1|*/ unsigned char flags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLMODELSECTION(struct MDLMODELSECTION&);
  void __thiscall MDLMODELSECTION();
  struct MDLMODELSECTION& __thiscall operator=(struct MDLMODELSECTION&);
  void __thiscall ~MDLMODELSECTION();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x1a0>

struct MDLSEQUENCESSECTION {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x50|*/ class CMdlString<80> name;
  /*<thisrel this+0x50>*/ /*|0x8|*/ class NTempest::CiRange time;
  /*<thisrel this+0x58>*/ /*|0x4|*/ float movespeed;
  /*<thisrel this+0x5c>*/ /*|0x4|*/ unsigned int flags;
  /*<thisrel this+0x60>*/ /*|0x1c|*/ struct CMdlBounds bounds;
  /*<thisrel this+0x7c>*/ /*|0x4|*/ float frequency;
  /*<thisrel this+0x80>*/ /*|0x8|*/ class NTempest::CiRange replay;
  /*<thisrel this+0x88>*/ /*|0x4|*/ unsigned int blendTime;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLSEQUENCESSECTION(struct MDLSEQUENCESSECTION&);
  void __thiscall MDLSEQUENCESSECTION::MDLSEQUENCESSECTION();
  struct MDLSEQUENCESSECTION& __thiscall operator=(struct MDLSEQUENCESSECTION&);
  void __thiscall MDLSEQUENCESSECTION::~MDLSEQUENCESSECTION();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x8c>

struct CMdlBounds {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x18|*/ class NTempest::CAaBox extent;
  /*<thisrel this+0x18>*/ /*|0x4|*/ float radius;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CMdlBounds::CMdlBounds();
  void __thiscall ~CMdlBounds();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x1c>

struct MDLGLOBALSEQSECTION {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int length;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLGLOBALSEQSECTION();

  // virtual functions ------------------------------
};
// <size 0x4>

struct TOKENFLAG {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int mask;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int token;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct MDLTEXTURESECTION {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int replaceableId;
  /*<thisrel this+0x4>*/ /*|0x104|*/ class CMdlString<260> image;
  /*<thisrel this+0x108>*/ /*|0x4|*/ unsigned int flags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLTEXTURESECTION(struct MDLTEXTURESECTION&);
  void __thiscall MDLTEXTURESECTION();
  struct MDLTEXTURESECTION& __thiscall operator=(struct MDLTEXTURESECTION&);

  // virtual functions ------------------------------
};
// <size 0x10c>

struct MDLMATERIALSECTION {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x14|*/ class TSGrowableArray<MDLTEXLAYER> texLayers;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int priorityPlane;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLMATERIALSECTION(struct MDLMATERIALSECTION&);
  void __thiscall MDLMATERIALSECTION();
  struct MDLMATERIALSECTION& __thiscall operator=(struct MDLMATERIALSECTION&);
  void __thiscall ~MDLMATERIALSECTION();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x18>

struct MDLTEXANIMSECTION {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1c|*/ struct MDLKEYTRACK<NTempest::C3Vector> transkeys;
  /*<thisrel this+0x1c>*/ /*|0x1c|*/ struct MDLKEYTRACK<NTempest::C4Quaternion> rotkeys;
  /*<thisrel this+0x38>*/ /*|0x1c|*/ struct MDLKEYTRACK<NTempest::C3Vector> scalekeys;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLTEXANIMSECTION(struct MDLTEXANIMSECTION&);
  void __thiscall MDLTEXANIMSECTION::MDLTEXANIMSECTION();
  struct MDLTEXANIMSECTION& __thiscall operator=(struct MDLTEXANIMSECTION&);
  void __thiscall MDLTEXANIMSECTION::~MDLTEXANIMSECTION();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x54>

struct MDLGEOSETSECTION {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x14|*/ class TSGrowableArray<NTempest::C3Vector> vertices;
  /*<thisrel this+0x14>*/ /*|0x14|*/ class TSGrowableArray<NTempest::C3Vector> normals;
  /*<thisrel this+0x28>*/ /*|0x14|*/ class TSGrowableArray<TSGrowableArray<NTempest::C2Vector> > texCoords;
  /*<thisrel this+0x3c>*/ /*|0x14|*/ class TSGrowableArray<unsigned char> vertGroupIndices;
  /*<thisrel this+0x50>*/ /*|0x3c|*/ struct MDLPRIMITIVES primitives;
  /*<thisrel this+0x8c>*/ /*|0x14|*/ class TSGrowableArray<unsigned int> groupMatrixCounts;
  /*<thisrel this+0xa0>*/ /*|0x14|*/ class TSGrowableArray<unsigned int> matrices;
  /*<thisrel this+0xb4>*/ /*|0x14|*/ class TSGrowableArray<unsigned int> boneIndices;
  /*<thisrel this+0xc8>*/ /*|0x14|*/ class TSGrowableArray<unsigned int> boneWeights;
  /*<thisrel this+0xdc>*/ /*|0x4|*/ unsigned int materialId;
  /*<thisrel this+0xe0>*/ /*|0x1c|*/ struct CMdlBounds bounds;
  /*<thisrel this+0xfc>*/ /*|0x14|*/ class TSGrowableArray<CMdlBounds> seqBounds;
  /*<thisrel this+0x110>*/ /*|0x4|*/ unsigned int selectionGroup;
  /*<thisrel this+0x114>*/ /*|0x4|*/ unsigned int flags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLGEOSETSECTION(struct MDLGEOSETSECTION&);
  void __thiscall MDLGEOSETSECTION::MDLGEOSETSECTION();
  struct MDLGEOSETSECTION& __thiscall operator=(struct MDLGEOSETSECTION&);
  void __thiscall MDLGEOSETSECTION::~MDLGEOSETSECTION();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x118>

struct MDLPRIMITIVES {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x14|*/ class TSGrowableArray<unsigned char> types;
  /*<thisrel this+0x14>*/ /*|0x14|*/ class TSGrowableArray<unsigned int> counts;
  /*<thisrel this+0x28>*/ /*|0x14|*/ class TSGrowableArray<unsigned short> vertices;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ReserveSpace(unsigned int, unsigned int);
  void __thiscall MDLPRIMITIVES::SetCount(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int numPrimitives, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int numVertices);
  void __thiscall MDLPRIMITIVES::MDLPRIMITIVES(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct MDLPRIMITIVES& __that);
  void __thiscall MDLPRIMITIVES();
  struct MDLPRIMITIVES& __thiscall operator=(struct MDLPRIMITIVES&);
  void __thiscall MDLPRIMITIVES::~MDLPRIMITIVES();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x3c>

struct MDLATTACHMENTSECTION : struct MDLGENOBJECT  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0xb0>*/ /*|0x104|*/ class CMdlString<260> path;
  /*<thisrel this+0x1b4>*/ /*|0x1c|*/ struct MDLKEYTRACK<float> visibilityKeys;
  /*<thisrel this+0x1d0>*/ /*|0x4|*/ unsigned int attachmentId;

  // base classes -----------------------------------
  // baseclass struct MDLGENOBJECT
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLATTACHMENTSECTION(struct MDLATTACHMENTSECTION&);
  void __thiscall MDLATTACHMENTSECTION::MDLATTACHMENTSECTION();
  struct MDLATTACHMENTSECTION& __thiscall operator=(struct MDLATTACHMENTSECTION&);
  void __thiscall MDLATTACHMENTSECTION::~MDLATTACHMENTSECTION();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x1d4>

struct MDLPARTICLEEMITTER : struct MDLGENOBJECT  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0xb0>*/ /*|0x1c|*/ struct MDLKEYTRACK<float> emissionRate;
  /*<thisrel this+0xcc>*/ /*|0x4|*/ float staticEmissionRate;
  /*<thisrel this+0xd0>*/ /*|0x1c|*/ struct MDLKEYTRACK<float> gravity;
  /*<thisrel this+0xec>*/ /*|0x4|*/ float staticGravity;
  /*<thisrel this+0xf0>*/ /*|0x1c|*/ struct MDLKEYTRACK<float> longitude;
  /*<thisrel this+0x10c>*/ /*|0x4|*/ float staticLongitude;
  /*<thisrel this+0x110>*/ /*|0x1c|*/ struct MDLKEYTRACK<float> latitude;
  /*<thisrel this+0x12c>*/ /*|0x4|*/ float staticLatitude;
  /*<thisrel this+0x130>*/ /*|0x144|*/ struct MDLPARTICLE particle;
  /*<thisrel this+0x274>*/ /*|0x1c|*/ struct MDLKEYTRACK<float> visibilityKeys;

  // base classes -----------------------------------
  // baseclass struct MDLGENOBJECT
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLPARTICLEEMITTER(struct MDLPARTICLEEMITTER&);
  void __thiscall MDLPARTICLEEMITTER::MDLPARTICLEEMITTER();
  struct MDLPARTICLEEMITTER& __thiscall operator=(struct MDLPARTICLEEMITTER&);
  void __thiscall MDLPARTICLEEMITTER::~MDLPARTICLEEMITTER();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x290>

struct MDLPARTICLE {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x104|*/ class CMdlString<260> path;
  /*<thisrel this+0x104>*/ /*|0x1c|*/ struct MDLKEYTRACK<float> life;
  /*<thisrel this+0x120>*/ /*|0x4|*/ float staticLife;
  /*<thisrel this+0x124>*/ /*|0x1c|*/ struct MDLKEYTRACK<float> speed;
  /*<thisrel this+0x140>*/ /*|0x4|*/ float staticSpeed;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLPARTICLE::MDLPARTICLE(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct MDLPARTICLE& __that);
  void __thiscall MDLPARTICLE();
  struct MDLPARTICLE& __thiscall operator=(struct MDLPARTICLE&);
  void __thiscall ~MDLPARTICLE();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x144>

struct MDLINTKEY {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int time;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int value;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLINTKEY();

  // virtual functions ------------------------------
};
// <size 0x8>

struct MDLTARGETSECTION {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xc|*/ class NTempest::C3Vector pivot;
  /*<thisrel this+0xc>*/ /*|0x1c|*/ struct MDLKEYTRACK<NTempest::C3Vector> transkeys;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLTARGETSECTION(struct MDLTARGETSECTION&);
  void __thiscall MDLTARGETSECTION();
  struct MDLTARGETSECTION& __thiscall operator=(struct MDLTARGETSECTION&);
  void __thiscall MDLTARGETSECTION::~MDLTARGETSECTION();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x28>

struct MDLKEYFRAME<float> {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int time;
  /*<thisrel this+0x4>*/ /*|0x4|*/ float value;
  /*<thisrel this+0x8>*/ /*|0x4|*/ float inTan;
  /*<thisrel this+0xc>*/ /*|0x4|*/ float outTan;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLKEYFRAME<float>();

  // virtual functions ------------------------------
};
// <size 0x10>

struct MDLEVENTKEY {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int time;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLEVENTKEY();

  // virtual functions ------------------------------
};
// <size 0x4>

struct Vector3 {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ float x;
  /*<thisrel this+0x4>*/ /*|0x4|*/ float y;
  /*<thisrel this+0x8>*/ /*|0x4|*/ float z;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  class NTempest::C3Vector __thiscall operator class NTempest::C3Vector();

  // virtual functions ------------------------------
};
// <size 0xc>

struct MDLKEYFRAME<NTempest::C4Quaternion> {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int time;
  /*<thisrel this+0x4>*/ /*|0x10|*/ class NTempest::C4Quaternion value;
  /*<thisrel this+0x14>*/ /*|0x10|*/ class NTempest::C4Quaternion inTan;
  /*<thisrel this+0x24>*/ /*|0x10|*/ class NTempest::C4Quaternion outTan;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLKEYFRAME<NTempest::C4Quaternion>::MDLKEYFRAME<NTempest::C4Quaternion>();
  void __thiscall MDLKEYFRAME<NTempest::C4Quaternion>::~MDLKEYFRAME<NTempest::C4Quaternion>();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x34>

struct MDLCOLLISION {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x14|*/ class TSGrowableArray<NTempest::C3Vector> vertices;
  /*<thisrel this+0x14>*/ /*|0x14|*/ class TSGrowableArray<unsigned short> triIndices;
  /*<thisrel this+0x28>*/ /*|0x14|*/ class TSGrowableArray<NTempest::C3Vector> facetNormals;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLCOLLISION(struct MDLCOLLISION&);
  void __thiscall MDLCOLLISION::MDLCOLLISION();
  struct MDLCOLLISION& __thiscall operator=(struct MDLCOLLISION&);
  void __thiscall ~MDLCOLLISION();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x3c>

struct __unnamed_d7_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int mask;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int token;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct _iobuf {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ char* _ptr;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int _cnt;
  /*<thisrel this+0x8>*/ /*|0x4|*/ char* _base;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int _flag;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int _file;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int _charbuf;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int _bufsiz;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ char* _tmpfname;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct __unnamed_d8_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int token;
  /*<thisrel this+0x4>*/ /*|0x4|*/ char* text;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct CNullStatus : class CStatus  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass class CStatus
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __cdecl Add(int, char*, ...);
  void __thiscall CNullStatus(struct CNullStatus&);
  void __thiscall CNullStatus();
  struct CNullStatus& __thiscall operator=(struct CNullStatus&);
  void __thiscall __local_vftable_ctor_closure();

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ void __thiscall ~CNullStatus();
  virtual /*<vtableoff 0x0>*/ void* __thiscall __vecDelDtor(unsigned int);
};
// <size 0x10>

struct HCOLLISIONDATA__ : struct HOBJECT__  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x4>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------
  // baseclass struct HOBJECT__
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct CCollisionData : class CHandleObject  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x10|*/ class TSFixedArray<NTempest::C3Vector> vertices;
  /*<thisrel this+0x18>*/ /*|0x10|*/ class TSFixedArray<unsigned short> indices;
  /*<thisrel this+0x28>*/ /*|0x10|*/ class TSFixedArray<NTempest::C3Vector> surfaceNormals;
  /*<thisrel this+0x38>*/ /*|0x18|*/ class NTempest::CAaBox extents;

  // base classes -----------------------------------
  // baseclass class CHandleObject
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CCollisionData(struct CCollisionData&);
  void __thiscall CCollisionData();
  struct CCollisionData& __thiscall operator=(struct CCollisionData&);
  void __thiscall __local_vftable_ctor_closure();

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ void __thiscall ~CCollisionData();
  virtual /*<vtableoff 0x0>*/ void* __thiscall __vecDelDtor(unsigned int);
};
// <size 0x50>

struct CModelShared : class CHandleObject  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x10|*/ class TSFixedArray<CBoundsData> seqBounds;
  /*<thisrel this+0x18>*/ /*|0x10|*/ class TSFixedArray<unsigned int> attachIdToIndex;
  /*<thisrel this+0x28>*/ /*|0x10|*/ class TSFixedArray_<NTempest::C3Vector,1229811556,376> positions;
  /*<thisrel this+0x38>*/ /*|0x10|*/ class TSFixedArray<CHitTest> hitTest;
  /*<thisrel this+0x48>*/ /*|0x10|*/ class TSFixedArray<CGeosetShared> geosets;
  /*<thisrel this+0x58>*/ /*|0x10|*/ class TSFixedArray<unsigned int> emitter2Order;
  /*<thisrel this+0x68>*/ /*|0x10|*/ class TSFixedArray<unsigned int> ribbonOrder;
  /*<thisrel this+0x78>*/ /*|0x4|*/ unsigned int numBones;
  /*<thisrel this+0x7c>*/ /*|0x4|*/ unsigned int numTexBones;
  /*<thisrel this+0x80>*/ /*|0x4|*/ enum GROUND_TRACK groundTrack;
  /*<thisrel this+0x84>*/ /*|0x4|*/ struct HCOLLISIONDATA__* collision;
  /*<thisrel this+0x88>*/ /*|0x104|*/ char name[260];
  /*<thisrel this+0x18c>*/ /*|0x28|*/ struct CBoundsData bounds;
  /*<thisrel this+0x1b4>*/ /*|0x1|*/ unsigned char numGeosets;
  /*<thisrel this+0x1b5>*/ /*|0x1|*/ unsigned char numLayers;

  // base classes -----------------------------------
  // baseclass class CHandleObject
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CModelShared(struct CModelShared&);
  void __thiscall CModelShared();
  struct CModelShared& __thiscall operator=(struct CModelShared&);
  void __thiscall __local_vftable_ctor_closure();

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ void __thiscall ~CModelShared();
  virtual /*<vtableoff 0x0>*/ char* __thiscall CModelShared::GetObjectName();
  virtual /*<vtableoff 0x0>*/ void* __thiscall __vecDelDtor(unsigned int);
};
// <size 0x1b8>

struct CModelTexture {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct HTEXTURE__* handle;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int replaceableId;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CModelTexture::CModelTexture(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct CModelTexture& source);
  void __thiscall CModelTexture();
  struct CModelTexture& __thiscall CModelTexture::operator=(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct CModelTexture& source);
  void __thiscall CModelTexture::~CModelTexture();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x8>

struct HMATERIAL__ : struct HOBJECT__  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x4>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------
  // baseclass struct HOBJECT__
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct CMaterial : class CHandleObject  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x14|*/ class TSGrowableArray<CTexLayer> layers;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ struct HMATERIALSHARED__* data;
  /*<thisrel this+0x20>*/ /*|0x4|*/ class NTempest::CImVector emissiveColor;

  // base classes -----------------------------------
  // baseclass class CHandleObject
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CMaterial(struct CMaterial&);
  void __thiscall CMaterial();
  struct CMaterial& __thiscall operator=(struct CMaterial&);
  void __thiscall __local_vftable_ctor_closure();

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ void __thiscall ~CMaterial();
  virtual /*<vtableoff 0x0>*/ void* __thiscall __vecDelDtor(unsigned int);
};
// <size 0x24>

struct CMaterialShared : class CHandleObject  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x14|*/ class TSGrowableArray<CTexLayerShared> layers;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int priorityPlane;

  // base classes -----------------------------------
  // baseclass class CHandleObject
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CMaterialShared(struct CMaterialShared&);
  void __thiscall CMaterialShared();
  struct CMaterialShared& __thiscall operator=(struct CMaterialShared&);
  void __thiscall __local_vftable_ctor_closure();

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ void __thiscall ~CMaterialShared();
  virtual /*<vtableoff 0x0>*/ void* __thiscall __vecDelDtor(unsigned int);
};
// <size 0x20>

struct CGeosetShared {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x10|*/ class TSFixedArray_<NTempest::C3Vector,1229811556,276> position;
  /*<thisrel this+0x10>*/ /*|0x10|*/ class TSFixedArray_<unsigned char,1229811556,277> boneWeights;
  /*<thisrel this+0x20>*/ /*|0x10|*/ class TSFixedArray_<NTempest::C3Vector,1229811556,278> normal;
  /*<thisrel this+0x30>*/ /*|0x10|*/ class TSFixedArray_<TSFixedArray_<NTempest::C2Vector,1229811556,266>,1229811556,279> texCoord;
  /*<thisrel this+0x40>*/ /*|0x10|*/ class TSFixedArray_<CPrimitive,1229811556,280> primitive;
  /*<thisrel this+0x50>*/ /*|0x10|*/ class TSFixedArray_<unsigned short,1229811556,281> primitiveVertices;
  /*<thisrel this+0x60>*/ /*|0x10|*/ class TSFixedArray_<unsigned int,1229811556,282> groupMatrixCounts;
  /*<thisrel this+0x70>*/ /*|0x10|*/ class TSFixedArray_<unsigned int,1229811556,283> matrices;
  /*<thisrel this+0x80>*/ /*|0x10|*/ class TSFixedArray_<unsigned int,1229811556,284> hwBoneIndices;
  /*<thisrel this+0x90>*/ /*|0x10|*/ class TSFixedArray_<unsigned int,1229811556,285> hwBoneWeights;
  /*<thisrel this+0xa0>*/ /*|0x4|*/ enum EGxVertexShader vertexShader;
  /*<thisrel this+0xa4>*/ /*|0x4|*/ unsigned int materialId;
  /*<thisrel this+0xa8>*/ /*|0xc|*/ class NTempest::C3Vector centroid;
  /*<thisrel this+0xb4>*/ /*|0x4|*/ float radius;
  /*<thisrel this+0xb8>*/ /*|0x4|*/ unsigned int selectionGroup;
  /*<thisrel this+0xbc>*/ /*|0x4|*/ unsigned int geosetId;
  /*<thisrel this+0xc0>*/ /*|0x4|*/ unsigned int flags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CGeosetShared::CGeosetShared(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct CGeosetShared& __that);
  void __thiscall CGeosetShared::CGeosetShared();
  struct CGeosetShared& __thiscall operator=(struct CGeosetShared&);
  void __thiscall CGeosetShared::~CGeosetShared();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xc4>

struct CTexLayer {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ enum EGxVertexBufferFormat vertexFormat;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct CTexLayer::__unnamed::__unnamed_d9_ disable;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long disables;
  /*<thisrel this+0x8>*/ /*|0x4|*/ enum EGxBlend blendMode;
  /*<thisrel this+0xc>*/ /*|0x10|*/ struct CTmuPassUnique tmuPass[2];
  /*<thisrel this+0x1c>*/ /*|0x1|*/ unsigned char layerAlpha;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------
  static int __fastcall CTexLayer::Compare(/*<register ecx>*/ /*|0x4|*/ struct CModelTexture* aTextures, /*<register edx>*/ /*|0x4|*/ struct CModelTexture* bTextures, /*<regrel ebp+0x8>*/ /*|0x4|*/ struct CTexLayer& a, /*<regrel ebp+0xc>*/ /*|0x4|*/ struct CTexLayer& b);

  // non-virtual functions --------------------------
  void __thiscall CTexLayer::CTexLayer(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct CTexLayer& a);
  void __thiscall CTexLayer::CTexLayer();

  // virtual functions ------------------------------
};
// <size 0x20>

struct CTexLayerShared {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ enum EGxBlend blendMode;
  /*<thisrel this+0x4>*/ /*|0x20|*/ struct CTmuPassShared tmuPass[2];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CTexLayerShared();

  // virtual functions ------------------------------
};
// <size 0x24>

struct LINKUNIQUE : class TSLinkedNode<LINKUNIQUE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct HMODEL__* child;
  /*<thisrel this+0xc>*/ /*|0x4|*/ float scale;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<LINKUNIQUE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall LINKUNIQUE(struct LINKUNIQUE&);
  void __thiscall LINKUNIQUE();
  void __thiscall ~LINKUNIQUE();
  struct LINKUNIQUE& __thiscall operator=(struct LINKUNIQUE&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x10>

struct CTmuPassUnique {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ enum EGxTexBlend combiner;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int textureId;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------
  static int __fastcall Compare(struct CModelTexture*, struct CModelTexture*, struct CTmuPassUnique&, struct CTmuPassUnique&);

  // non-virtual functions --------------------------
  void __thiscall CTmuPassUnique::CTmuPassUnique();

  // virtual functions ------------------------------
};
// <size 0x8>

struct CRibbonMat {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<bitfield this+0x0>*/ /*|0x4|*/ int enableLighting:0:1;
  /*<bitfield this+0x0>*/ /*|0x4|*/ int enableFog:1:1;
  /*<bitfield this+0x0>*/ /*|0x4|*/ int enableDepthTest:2:1;
  /*<bitfield this+0x0>*/ /*|0x4|*/ int enableDepthWrite:3:1;
  /*<bitfield this+0x0>*/ /*|0x4|*/ int enableCulling:4:1;
  /*<thisrel this+0x4>*/ /*|0x4|*/ enum EGxBlend alpha;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CRibbonMat::CRibbonMat();

  // virtual functions ------------------------------
};
// <size 0x8>

struct CParticleMat {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ enum EGxBlend alpha;
  /*<bitfield this+0x4>*/ /*|0x4|*/ int enableLighting:0:1;
  /*<bitfield this+0x4>*/ /*|0x4|*/ int enableFog:1:1;
  /*<bitfield this+0x4>*/ /*|0x4|*/ int enableDepthWrites:2:1;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CParticleMat();

  // virtual functions ------------------------------
};
// <size 0x8>

struct NTempest::CFacet {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x10|*/ class NTempest::C4Plane plane;
  /*<thisrel this+0x10>*/ /*|0x24|*/ class NTempest::C3Vector vertices[3];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall NTempest::CFacet::CFacet(/*<regrel ebp+0x8>*/ /*|0x4|*/ class NTempest::C3Vector& a, /*<regrel ebp+0xc>*/ /*|0x4|*/ class NTempest::C3Vector& b, /*<regrel ebp+0x10>*/ /*|0x4|*/ class NTempest::C3Vector& c);
  void __thiscall NTempest::CFacet::CFacet(/*<regrel ebp+0x8>*/ /*|0x4|*/ float a);
  void __thiscall NTempest::CFacet::~CFacet();
  void __thiscall Get(class NTempest::C3Vector*);
  void __thiscall Get(class NTempest::C4Plane&);
  void __thiscall Get(class NTempest::C4Plane&, class NTempest::C3Vector*);
  void __thiscall Set(class NTempest::C3Vector*, class NTempest::C4Plane&);
  void __thiscall Set(class NTempest::C3Vector*);
  void __thiscall NTempest::CFacet::Set(/*<regrel ebp+0x8>*/ /*|0x4|*/ class NTempest::C3Vector& a, /*<regrel ebp+0xc>*/ /*|0x4|*/ class NTempest::C3Vector& b, /*<regrel ebp+0x10>*/ /*|0x4|*/ class NTempest::C3Vector& c);
  void __thiscall NTempest::CFacet::Set(/*<regrel ebp+0x8>*/ /*|0x4|*/ float a);
  void __thiscall __dflt_ctor_closure();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x34>

struct CGeoset {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int weightedBones;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int flags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CGeoset::CGeoset();

  // virtual functions ------------------------------
};
// <size 0x8>

struct CCustomGeoset {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xc|*/ class NTempest::C3Vector position;
  /*<thisrel this+0xc>*/ /*|0x4|*/ void  (renderCallback*)(struct HMODEL__*, class NTempest::C34Matrix&, void*);
  /*<thisrel this+0x10>*/ /*|0x4|*/ void* renderParam;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CCustomGeoset();
  void __thiscall ~CCustomGeoset();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x14>

struct CMatrixGroup {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int* matrices;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int numMatrices;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int index;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int leftIndex;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int rightIndex;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CMatrixGroup(unsigned int*, unsigned int);
  void __thiscall CMatrixGroup();

  // virtual functions ------------------------------
};
// <size 0x14>

struct COpaqueLayer {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct CGeoset* geoUnique;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct CGeosetShared* geoShared;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct HMODEL__* model;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int flags;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int firstLayer;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned int passNumber;
  /*<thisrel this+0x18>*/ /*|0x4|*/ struct CTexLayer* layer;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------
  static unsigned char __fastcall COpaqueLayer::HasHigherPriority(/*<register ecx>*/ /*|0x4|*/ struct COpaqueLayer* a, /*<register edx>*/ /*|0x4|*/ struct COpaqueLayer* b);

  // non-virtual functions --------------------------
  void __thiscall COpaqueLayer(struct COpaqueLayer&);
  void __thiscall COpaqueLayer();
  void __thiscall ~COpaqueLayer();
  struct COpaqueLayer& __thiscall operator=(struct COpaqueLayer&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x1c>

struct CTransparentObject {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ enum SORTABLES sortType;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int priorityPlane;
  /*<thisrel this+0x8>*/ /*|0x4|*/ float sqDistFromCamera;
  /*<thisrel this+0xc>*/ /*|0xc|*/ struct CTransparentObject::__unnamed::__unnamed_da_ geo;
  /*<thisrel this+0xc>*/ /*|0x8|*/ struct CTransparentObject::__unnamed::__unnamed_db_ stnd;
  /*<thisrel this+0xc>*/ /*|0xc|*/ struct CTransparentObject::__unnamed::__unnamed_dc_ cust;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------
  static unsigned char __fastcall CTransparentObject::HasHigherPriority(/*<register ecx>*/ /*|0x4|*/ struct CTransparentObject* a, /*<register edx>*/ /*|0x4|*/ struct CTransparentObject* b);

  // non-virtual functions --------------------------
  void __thiscall CTransparentObject(struct CTransparentObject&);
  void __thiscall CTransparentObject();
  void __thiscall ~CTransparentObject();
  struct CTransparentObject& __thiscall operator=(struct CTransparentObject&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x18>

struct CPrimitive {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ enum EGxPrim type;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int vertexCount;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CPrimitive();

  // virtual functions ------------------------------
};
// <size 0x8>

struct CModelRenderData {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct CGeoset* m_geosets;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct CGeosetColor* m_geosetColor;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int m_numGeosets;
  /*<thisrel this+0xc>*/ /*|0x4|*/ struct HMATERIAL__** m_materials;
  /*<thisrel this+0x10>*/ /*|0x4|*/ struct CModelTexture* m_textures;
  /*<thisrel this+0x14>*/ /*|0x4|*/ class CModel* m_model;
  /*<thisrel this+0x18>*/ /*|0x4|*/ struct CModelShared* m_shared;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned int m_renderFlags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct CModelHash : class TSHashObject<CModelHash,CHashKeyFilePath>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x118>*/ /*|0x4|*/ struct HMODEL__* model;
  /*<thisrel this+0x11c>*/ /*|0x4|*/ unsigned int createFlags;
  /*<thisrel this+0x120>*/ /*|0x4|*/ unsigned long timeStamp;
  /*<thisrel this+0x124>*/ /*|0x8|*/ class TSLink<CModelHash> link;

  // base classes -----------------------------------
  // baseclass class TSHashObject<CModelHash,CHashKeyFilePath>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CModelHash(struct CModelHash&);
  void __thiscall CModelHash::CModelHash();
  void __thiscall CModelHash::~CModelHash();
  struct CModelHash& __thiscall operator=(struct CModelHash&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x12c>

struct CModelModItem : class TSLinkedNode<CModelModItem>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ enum EModelModQ action;
  /*<thisrel this+0xc>*/ /*|0x10|*/ unsigned char paramData[16];

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<CModelModItem>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CModelModItem(struct CModelModItem&);
  void __thiscall CModelModItem();
  struct CModelModItem& __thiscall operator=(struct CModelModItem&);
  void __thiscall ~CModelModItem();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x1c>

struct CBoundsData {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x18|*/ class NTempest::CAaBox extent;
  /*<thisrel this+0x18>*/ /*|0x10|*/ class NTempest::CAaSphere sphere;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CBoundsData::CBoundsData();
  void __thiscall ~CBoundsData();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x28>

struct CHitTest {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ enum COLLIDE_TYPE type;
  /*<thisrel this+0x4>*/ /*|0x18|*/ class NTempest::C3Vector extent[2];
  /*<thisrel this+0x1c>*/ /*|0x4|*/ float radius;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CHitTest::CHitTest();
  void __thiscall ~CHitTest();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x20>

struct CTmuPassShared {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int transformId;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int coordId;
  /*<thisrel this+0x8>*/ /*|0x4|*/ enum EGxTextureShader textureShader;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int flags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CTmuPassShared::CTmuPassShared();

  // virtual functions ------------------------------
};
// <size 0x10>

struct SoundFileObjectCacheNode : class TSHashObject<SoundFileObjectCacheNode,HASHKEY_NONE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x4|*/ struct SoundFileObject* object;

  // base classes -----------------------------------
  // baseclass class TSHashObject<SoundFileObjectCacheNode,HASHKEY_NONE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall SoundFileObjectCacheNode(struct SoundFileObjectCacheNode&);
  void __thiscall SoundFileObjectCacheNode::SoundFileObjectCacheNode();
  struct SoundFileObjectCacheNode& __thiscall operator=(struct SoundFileObjectCacheNode&);
  void __thiscall ~SoundFileObjectCacheNode();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x1c>

struct SoundFileObject {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x104|*/ char filename[260];
  /*<thisrel this+0x104>*/ /*|0x4|*/ unsigned int hash;
  /*<thisrel this+0x108>*/ /*|0x4|*/ class SFile* file;
  /*<thisrel this+0x10c>*/ /*|0x4|*/ unsigned int baseHandle;
  /*<thisrel this+0x110>*/ /*|0x4|*/ unsigned int size;
  /*<thisrel this+0x114>*/ /*|0x4|*/ unsigned int openInstances;
  /*<thisrel this+0x118>*/ /*|0x4|*/ unsigned int bigFileCacheBlockOffset;
  /*<thisrel this+0x11c>*/ /*|0x80|*/ struct SoundFileInstance instances[16];
  /*<thisrel this+0x19c>*/ /*|0x8|*/ class TSLink<SoundFileObject> link;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall SoundFileObject(struct SoundFileObject&);
  void __thiscall SoundFileObject();
  struct SoundFileObject& __thiscall operator=(struct SoundFileObject&);
  void __thiscall ~SoundFileObject();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x1a4>

struct SoundFileDataCacheBlock : class TSHashObject<SoundFileDataCacheBlock,HASHKEY_LONGLONG>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x20>*/ /*|0x8|*/ class TSLink<SoundFileDataCacheBlock> link;
  /*<thisrel this+0x28>*/ /*|0x1000|*/ unsigned char data[4096];

  // base classes -----------------------------------
  // baseclass class TSHashObject<SoundFileDataCacheBlock,HASHKEY_LONGLONG>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall SoundFileDataCacheBlock(struct SoundFileDataCacheBlock&);
  void __thiscall SoundFileDataCacheBlock::SoundFileDataCacheBlock();
  struct SoundFileDataCacheBlock& __thiscall operator=(struct SoundFileDataCacheBlock&);
  void __thiscall SoundFileDataCacheBlock::~SoundFileDataCacheBlock();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x1028>

struct W32Joystick {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int id;
  /*<thisrel this+0x4>*/ /*|0x30|*/ struct W32Joystick::_transaxis transaxis[6];
  /*<thisrel this+0x34>*/ /*|0x194|*/ struct tagJOYCAPSA caps;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c8>

struct joyinfoex_tag {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long dwXpos;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long dwYpos;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long dwZpos;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long dwRpos;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long dwUpos;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned long dwVpos;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned long dwButtons;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned long dwButtonNumber;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned long dwPOV;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ unsigned long dwReserved1;
  /*<thisrel this+0x30>*/ /*|0x4|*/ unsigned long dwReserved2;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x34>

struct tagJOYCAPSA {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short wMid;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short wPid;
  /*<thisrel this+0x4>*/ /*|0x20|*/ char szPname[32];
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned int wXmin;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned int wXmax;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ unsigned int wYmin;
  /*<thisrel this+0x30>*/ /*|0x4|*/ unsigned int wYmax;
  /*<thisrel this+0x34>*/ /*|0x4|*/ unsigned int wZmin;
  /*<thisrel this+0x38>*/ /*|0x4|*/ unsigned int wZmax;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ unsigned int wNumButtons;
  /*<thisrel this+0x40>*/ /*|0x4|*/ unsigned int wPeriodMin;
  /*<thisrel this+0x44>*/ /*|0x4|*/ unsigned int wPeriodMax;
  /*<thisrel this+0x48>*/ /*|0x4|*/ unsigned int wRmin;
  /*<thisrel this+0x4c>*/ /*|0x4|*/ unsigned int wRmax;
  /*<thisrel this+0x50>*/ /*|0x4|*/ unsigned int wUmin;
  /*<thisrel this+0x54>*/ /*|0x4|*/ unsigned int wUmax;
  /*<thisrel this+0x58>*/ /*|0x4|*/ unsigned int wVmin;
  /*<thisrel this+0x5c>*/ /*|0x4|*/ unsigned int wVmax;
  /*<thisrel this+0x60>*/ /*|0x4|*/ unsigned int wCaps;
  /*<thisrel this+0x64>*/ /*|0x4|*/ unsigned int wMaxAxes;
  /*<thisrel this+0x68>*/ /*|0x4|*/ unsigned int wNumAxes;
  /*<thisrel this+0x6c>*/ /*|0x4|*/ unsigned int wMaxButtons;
  /*<thisrel this+0x70>*/ /*|0x20|*/ char szRegKey[32];
  /*<thisrel this+0x90>*/ /*|0x104|*/ char szOEMVxD[260];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x194>

struct IDirectMusicLoader : struct IUnknown  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IUnknown
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirectMusicLoader(struct IDirectMusicLoader&);
  void __thiscall IDirectMusicLoader();
  struct IDirectMusicLoader& __thiscall operator=(struct IDirectMusicLoader&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0xc>*/ long __stdcall GetObjectA(struct _DMUS_OBJECTDESC*, struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x10>*/ long __stdcall SetObject(struct _DMUS_OBJECTDESC*) = 0;
  virtual /*<vtableoff 0x14>*/ long __stdcall SetSearchDirectory(struct _GUID&, unsigned short*, int) = 0;
  virtual /*<vtableoff 0x18>*/ long __stdcall ScanDirectory(struct _GUID&, unsigned short*, unsigned short*) = 0;
  virtual /*<vtableoff 0x1c>*/ long __stdcall CacheObject(struct IDirectMusicObject*) = 0;
  virtual /*<vtableoff 0x20>*/ long __stdcall ReleaseObject(struct IDirectMusicObject*) = 0;
  virtual /*<vtableoff 0x24>*/ long __stdcall ClearCache(struct _GUID&) = 0;
  virtual /*<vtableoff 0x28>*/ long __stdcall EnableCache(struct _GUID&, int) = 0;
  virtual /*<vtableoff 0x2c>*/ long __stdcall EnumObject(struct _GUID&, unsigned long, struct _DMUS_OBJECTDESC*) = 0;
};
// <size 0x4>

struct _DMUS_OBJECTDESC {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwValidData;
  /*<thisrel this+0x8>*/ /*|0x10|*/ struct _GUID guidObject;
  /*<thisrel this+0x18>*/ /*|0x10|*/ struct _GUID guidClass;
  /*<thisrel this+0x28>*/ /*|0x8|*/ struct _FILETIME ftDate;
  /*<thisrel this+0x30>*/ /*|0x8|*/ struct _DMUS_VERSION vVersion;
  /*<thisrel this+0x38>*/ /*|0x80|*/ unsigned short wszName[64];
  /*<thisrel this+0xb8>*/ /*|0x80|*/ unsigned short wszCategory[64];
  /*<thisrel this+0x138>*/ /*|0x208|*/ unsigned short wszFileName[260];
  /*<thisrel this+0x340>*/ /*|0x8|*/ __int64 llMemLength;
  /*<thisrel this+0x348>*/ /*|0x4|*/ unsigned char* pbMemData;
  /*<thisrel this+0x34c>*/ /*|0x4|*/ struct IStream* pStream;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x350>

struct IDirectMusicObject : struct IUnknown  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IUnknown
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirectMusicObject(struct IDirectMusicObject&);
  void __thiscall IDirectMusicObject();
  struct IDirectMusicObject& __thiscall operator=(struct IDirectMusicObject&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0xc>*/ long __stdcall GetDescriptor(struct _DMUS_OBJECTDESC*) = 0;
  virtual /*<vtableoff 0x10>*/ long __stdcall SetDescriptor(struct _DMUS_OBJECTDESC*) = 0;
  virtual /*<vtableoff 0x14>*/ long __stdcall ParseDescriptor(struct IStream*, struct _DMUS_OBJECTDESC*) = 0;
};
// <size 0x4>

struct IDirectMusicPerformance8 : struct IDirectMusicPerformance  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IDirectMusicPerformance
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirectMusicPerformance8(struct IDirectMusicPerformance8&);
  void __thiscall IDirectMusicPerformance8();
  struct IDirectMusicPerformance8& __thiscall operator=(struct IDirectMusicPerformance8&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall Init(struct IDirectMusic**, struct IDirectSound*, struct HWND__*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall PlaySegment(struct IDirectMusicSegment*, unsigned long, __int64, struct IDirectMusicSegmentState**) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall Stop(struct IDirectMusicSegment*, struct IDirectMusicSegmentState*, long, unsigned long) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetSegmentState(struct IDirectMusicSegmentState**, long) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall SetPrepareTime(unsigned long) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetPrepareTime(unsigned long*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall SetBumperLength(unsigned long) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetBumperLength(unsigned long*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall SendPMsg(struct _DMUS_PMSG*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall MusicToReferenceTime(long, __int64*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall ReferenceToMusicTime(__int64, long*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall IsPlaying(struct IDirectMusicSegment*, struct IDirectMusicSegmentState*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetTime(__int64*, long*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall AllocPMsg(unsigned long, struct _DMUS_PMSG**) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall FreePMsg(struct _DMUS_PMSG*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetGraph(struct IDirectMusicGraph**) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall SetGraph(struct IDirectMusicGraph*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall SetNotificationHandle(void*, __int64) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetNotificationPMsg(struct _DMUS_NOTIFICATION_PMSG**) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall AddNotificationType(struct _GUID&) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall RemoveNotificationType(struct _GUID&) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall AddPortA(struct IDirectMusicPort*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall RemovePort(struct IDirectMusicPort*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall AssignPChannelBlock(unsigned long, struct IDirectMusicPort*, unsigned long) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall AssignPChannel(unsigned long, struct IDirectMusicPort*, unsigned long, unsigned long) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall PChannelInfo(unsigned long, struct IDirectMusicPort**, unsigned long*, unsigned long*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall DownloadInstrument(struct IDirectMusicInstrument*, unsigned long, struct IDirectMusicDownloadedInstrument**, struct _DMUS_NOTERANGE*, unsigned long, struct IDirectMusicPort**, unsigned long*, unsigned long*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall Invalidate(long, unsigned long) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetParam(struct _GUID&, unsigned long, unsigned long, long, long*, void*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall SetParam(struct _GUID&, unsigned long, unsigned long, long, void*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetGlobalParam(struct _GUID&, void*, unsigned long) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall SetGlobalParam(struct _GUID&, void*, unsigned long) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetLatencyTime(__int64*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetQueueTime(__int64*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall AdjustTime(__int64) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall CloseDown() = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetResolvedTime(__int64, __int64*, unsigned long) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall MIDIToMusic(unsigned char, struct _DMUS_CHORD_KEY*, unsigned char, unsigned char, unsigned short*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall MusicToMIDI(unsigned short, struct _DMUS_CHORD_KEY*, unsigned char, unsigned char, unsigned char*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall TimeToRhythm(long, struct _DMUS_TIMESIGNATURE*, unsigned short*, unsigned char*, unsigned char*, short*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall RhythmToTime(unsigned short, unsigned char, unsigned char, short, struct _DMUS_TIMESIGNATURE*, long*) = 0;
  virtual /*<vtableoff 0xb0>*/ long __stdcall InitAudio(struct IDirectMusic**, struct IDirectSound**, struct HWND__*, unsigned long, unsigned long, unsigned long, struct _DMUS_AUDIOPARAMS*) = 0;
  virtual /*<vtableoff 0xb4>*/ long __stdcall PlaySegmentEx(struct IUnknown*, unsigned short*, struct IUnknown*, unsigned long, __int64, struct IDirectMusicSegmentState**, struct IUnknown*, struct IUnknown*) = 0;
  virtual /*<vtableoff 0xb8>*/ long __stdcall StopEx(struct IUnknown*, __int64, unsigned long) = 0;
  virtual /*<vtableoff 0xbc>*/ long __stdcall ClonePMsg(struct _DMUS_PMSG*, struct _DMUS_PMSG**) = 0;
  virtual /*<vtableoff 0xc0>*/ long __stdcall CreateAudioPath(struct IUnknown*, int, struct IDirectMusicAudioPath**) = 0;
  virtual /*<vtableoff 0xc4>*/ long __stdcall CreateStandardAudioPath(unsigned long, unsigned long, int, struct IDirectMusicAudioPath**) = 0;
  virtual /*<vtableoff 0xc8>*/ long __stdcall SetDefaultAudioPath(struct IDirectMusicAudioPath*) = 0;
  virtual /*<vtableoff 0xcc>*/ long __stdcall GetDefaultAudioPath(struct IDirectMusicAudioPath**) = 0;
  virtual /*<vtableoff 0xd0>*/ long __stdcall GetParamEx(struct _GUID&, unsigned long, unsigned long, unsigned long, long, long*, void*) = 0;
};
// <size 0x4>

struct IDirectMusicSegment8 : struct IDirectMusicSegment  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IDirectMusicSegment
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirectMusicSegment8(struct IDirectMusicSegment8&);
  void __thiscall IDirectMusicSegment8();
  struct IDirectMusicSegment8& __thiscall operator=(struct IDirectMusicSegment8&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetLength(long*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall SetLength(long) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetRepeats(unsigned long*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall SetRepeats(unsigned long) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetDefaultResolution(unsigned long*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall SetDefaultResolution(unsigned long) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetTrack(struct _GUID&, unsigned long, unsigned long, struct IDirectMusicTrack**) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetTrackGroup(struct IDirectMusicTrack*, unsigned long*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall InsertTrack(struct IDirectMusicTrack*, unsigned long) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall RemoveTrack(struct IDirectMusicTrack*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall InitPlay(struct IDirectMusicSegmentState**, struct IDirectMusicPerformance*, unsigned long) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetGraph(struct IDirectMusicGraph**) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall SetGraph(struct IDirectMusicGraph*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall AddNotificationType(struct _GUID&) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall RemoveNotificationType(struct _GUID&) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetParam(struct _GUID&, unsigned long, unsigned long, long, long*, void*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall SetParam(struct _GUID&, unsigned long, unsigned long, long, void*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall Clone(long, long, struct IDirectMusicSegment**) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall SetStartPoint(long) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetStartPoint(long*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall SetLoopPoints(long, long) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetLoopPoints(long*, long*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall SetPChannelsUsed(unsigned long, unsigned long*) = 0;
  virtual /*<vtableoff 0x68>*/ long __stdcall SetTrackConfig(struct _GUID&, unsigned long, unsigned long, unsigned long, unsigned long) = 0;
  virtual /*<vtableoff 0x6c>*/ long __stdcall GetAudioPathConfig(struct IUnknown**) = 0;
  virtual /*<vtableoff 0x70>*/ long __stdcall Compose(long, struct IDirectMusicSegment*, struct IDirectMusicSegment*, struct IDirectMusicSegment**) = 0;
  virtual /*<vtableoff 0x74>*/ long __stdcall Download(struct IUnknown*) = 0;
  virtual /*<vtableoff 0x78>*/ long __stdcall Unload(struct IUnknown*) = 0;
};
// <size 0x4>

struct IDirectMusicAudioPath : struct IUnknown  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IUnknown
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirectMusicAudioPath(struct IDirectMusicAudioPath&);
  void __thiscall IDirectMusicAudioPath();
  struct IDirectMusicAudioPath& __thiscall operator=(struct IDirectMusicAudioPath&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0xc>*/ long __stdcall GetObjectInPath(unsigned long, unsigned long, unsigned long, struct _GUID&, unsigned long, struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x10>*/ long __stdcall Activate(int) = 0;
  virtual /*<vtableoff 0x14>*/ long __stdcall SetVolume(long, unsigned long) = 0;
  virtual /*<vtableoff 0x18>*/ long __stdcall ConvertPChannel(unsigned long, unsigned long*) = 0;
};
// <size 0x4>

struct IDirectMusicCollection : struct IUnknown  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IUnknown
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirectMusicCollection(struct IDirectMusicCollection&);
  void __thiscall IDirectMusicCollection();
  struct IDirectMusicCollection& __thiscall operator=(struct IDirectMusicCollection&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0xc>*/ long __stdcall GetInstrument(unsigned long, struct IDirectMusicInstrument**) = 0;
  virtual /*<vtableoff 0x10>*/ long __stdcall EnumInstrument(unsigned long, unsigned long*, unsigned short*, unsigned long) = 0;
};
// <size 0x4>

struct ASYNCLOADER {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ class CAsyncObject* asyncLoader;
  /*<thisrel this+0x4>*/ /*|0x14|*/ class TSGrowableArray<char> buffer;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ASYNCLOADER(struct ASYNCLOADER&);
  void __thiscall ASYNCLOADER();
  void __thiscall ASYNCLOADER::~ASYNCLOADER();
  void __thiscall ASYNCLOADER::Clear();
  struct ASYNCLOADER& __thiscall operator=(struct ASYNCLOADER&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x18>

struct Sound : class TSLinkedNode<Sound>  {

  // static data ------------------------------------
  static /*<rva 0xcb9f94>*/ /*|0x4|*/ unsigned char  (m_positionUpdateCallback*)(__int64, class NTempest::C3Vector&);

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x8|*/ class TSLink<Sound> link;
  /*<thisrel this+0x10>*/ /*|0x8|*/ class TSLink<Sound> fadeLink;
  /*<thisrel this+0x18>*/ /*|0x8|*/ class TSLink<Sound> updateLink;
  /*<thisrel this+0x20>*/ /*|0x8|*/ class TSLink<Sound> panningLink;
  /*<thisrel this+0x28>*/ /*|0x8|*/ class TSLink<Sound> cutoffLink;
  /*<thisrel this+0x30>*/ /*|0x8|*/ class TSLink<Sound> stopLink;
  /*<thisrel this+0x38>*/ /*|0x4|*/ int m_channel;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ void* m_stream;
  /*<thisrel this+0x40>*/ /*|0x4|*/ unsigned int m_flags;
  /*<thisrel this+0x44>*/ /*|0x4|*/ unsigned int m_suspendedFlags;
  /*<thisrel this+0x48>*/ /*|0x4|*/ unsigned int m_fadeStartTime;
  /*<thisrel this+0x4c>*/ /*|0x4|*/ int m_fadeVolume;
  /*<thisrel this+0x50>*/ /*|0x4|*/ float m_fadeRate;
  /*<thisrel this+0x54>*/ /*|0x4|*/ float m_panning;
  /*<thisrel this+0x58>*/ /*|0xc|*/ class NTempest::C3Vector m_worldPosition;
  /*<thisrel this+0x64>*/ /*|0xc|*/ class NTempest::C3Vector m_velocity;
  /*<thisrel this+0x70>*/ /*|0x8|*/ __int64 m_updateHandle;
  /*<thisrel this+0x78>*/ /*|0x4|*/ float m_cutoffDistanceSquared;
  /*<thisrel this+0x7c>*/ /*|0x4|*/ float m_volume;
  /*<thisrel this+0x80>*/ /*|0x4|*/ unsigned long m_freq;
  /*<thisrel this+0x84>*/ /*|0x4|*/ int m_fileNameHashed;
  /*<thisrel this+0x88>*/ /*|0x4|*/ enum SOUNDCATEGORIES m_category;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<Sound>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------
  static int __fastcall Sound::Initialize(/*<register ecx>*/ /*|0x4|*/ unsigned char  (GetParamInt*)(char*, int&), /*<register edx>*/ /*|0x4|*/ unsigned char  (GetParamFloat*)(char*, float&), /*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned char  (GetParamString*)(char*, char*&));
  static void __fastcall Sound::Shutdown();
  static void __fastcall Sound::Update();
  static void __fastcall Sound::SetListenerAttributes(/*<register ecx>*/ /*|0x4|*/ class NTempest::C3Vector& worldPosition, /*<register edx>*/ /*|0x4|*/ class NTempest::C3Vector* worldVelocity, /*<regrel ebp+0x8>*/ /*|0x4|*/ class NTempest::C3Vector& worldForward, /*<regrel ebp+0xc>*/ /*|0x4|*/ class NTempest::C3Vector& worldUp);
  static void __fastcall Sound::GetListenerPosition(/*<register ecx>*/ /*|0x4|*/ class NTempest::C3Vector& position);
  static void __fastcall Sound::SetReverbProperties(/*<register ecx>*/ /*|0x4|*/ struct _FSOUND_REVERB_PROPERTIES* reverb);
  static struct Sound* __fastcall Sound::Play2D(/*<register ecx>*/ /*|0x4|*/ enum SOUNDCATEGORIES category, /*<register edx>*/ /*|0x4|*/ char* filename, /*<regrel ebp+0x8>*/ /*|0x4|*/ int flags, /*<regrel ebp+0xc>*/ /*|0x1|*/ unsigned char startPaused);
  static struct Sound* __fastcall Sound::Play3D(/*<register ecx>*/ /*|0x4|*/ enum SOUNDCATEGORIES category, /*<register edx>*/ /*|0x4|*/ char* filename, /*<regrel ebp+0x8>*/ /*|0x4|*/ int flags, /*<regrel ebp+0xc>*/ /*|0x1|*/ unsigned char startPaused);
  static struct Sound* __fastcall Sound::Play2DLooped(/*<register ecx>*/ /*|0x4|*/ enum SOUNDCATEGORIES category, /*<register edx>*/ /*|0x4|*/ char* filename, /*<regrel ebp+0x8>*/ /*|0x4|*/ int flags, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int loopCount, /*<regrel ebp+0x10>*/ /*|0x1|*/ unsigned char startPaused);
  static struct Sound* __fastcall Sound::Play3DLooped(/*<register ecx>*/ /*|0x4|*/ enum SOUNDCATEGORIES category, /*<register edx>*/ /*|0x4|*/ char* filename, /*<regrel ebp+0x8>*/ /*|0x4|*/ int flags, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int loopCount, /*<regrel ebp+0x10>*/ /*|0x1|*/ unsigned char startPaused);
  static void __fastcall Sound::KillSound(/*<register ecx>*/ /*|0x4|*/ struct Sound*& sound);
  static int __fastcall Sound::GetNumOutputSystems();
  static char* __fastcall Sound::GetOutputSystemName(/*<register ecx>*/ /*|0x4|*/ int index);
  static int __fastcall Sound::GetNumDrivers();
  static char* __fastcall Sound::GetDriverName(/*<register ecx>*/ /*|0x4|*/ int index);
  static int __fastcall Sound::GetNumMixers();
  static char* __fastcall Sound::GetMixerName(/*<register ecx>*/ /*|0x4|*/ int index);
  static int __fastcall Sound::MIDI_Initialize();
  static void __fastcall Sound::MIDI_Shutdown();
  static void __fastcall Sound::MIDI_Play(/*<register ecx>*/ /*|0x4|*/ char* midiFilename, /*<register edx>*/ /*|0x4|*/ char* dlsFilename);
  static void __fastcall Sound::MIDI_Stop();
  static void __fastcall Sound::MIDI_SetVolume(/*<regrel ebp+0x8>*/ /*|0x4|*/ float volume);
  static unsigned char __fastcall Sound::MIDI_Playing();
  static void __fastcall Sound::SetSoundVolume(/*<regrel ebp+0x8>*/ /*|0x4|*/ float volume);
  static void __fastcall Sound::SetMusicVolume(/*<regrel ebp+0x8>*/ /*|0x4|*/ float volume);
  static void __fastcall Sound::SetMasterVolume(/*<regrel ebp+0x8>*/ /*|0x4|*/ float volume);
  static void __fastcall Sound::MuteSFX(/*<register cl>*/ /*|0x1|*/ unsigned char m);
  static int __fastcall Sound::GetMixRate();
  static void __fastcall SetPositionUpdateCallback(unsigned char  (*)(__int64, class NTempest::C3Vector&));
  static struct Sound* __fastcall Sound::Alloc(/*<register ecx>*/ /*|0x4|*/ char* name);
  static struct Sound* __fastcall Sound::Play(/*<register ecx>*/ /*|0x4|*/ enum SOUNDCATEGORIES category, /*<register edx>*/ /*|0x4|*/ char* filename, /*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int mode, /*<regrel ebp+0xc>*/ /*|0x1|*/ unsigned char startPaused, /*<regrel ebp+0x10>*/ /*|0x4|*/ int flags);
  static struct Sound* __fastcall Sound::PlayLooped(/*<register ecx>*/ /*|0x4|*/ enum SOUNDCATEGORIES category, /*<register edx>*/ /*|0x4|*/ char* filename, /*<regrel ebp+0x8>*/ /*|0x4|*/ int loopCount, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int mode, /*<regrel ebp+0x10>*/ /*|0x1|*/ unsigned char startPaused, /*<regrel ebp+0x14>*/ /*|0x4|*/ int flags);
  static void __fastcall Sound::ProcessStopList();
  static void __fastcall Sound::ProcessFadeList();
  static void __fastcall Sound::ProcessUpdateList();
  static void __fastcall Sound::ProcessPanningList(/*<register ecx>*/ /*|0x4|*/ class NTempest::C3Vector& listenerPos);
  static void __fastcall Sound::ProcessCutoffList(/*<register ecx>*/ /*|0x4|*/ class NTempest::C3Vector& listenerPos);
  static void __fastcall Sound::UpdateSoundVolumes(/*<register cl>*/ /*|0x1|*/ unsigned char music);
  static unsigned char __fastcall Sound::DupeCheckFailed(/*<register ecx>*/ /*|0x4|*/ enum SOUNDCATEGORIES category, /*<register edx>*/ /*|0x4|*/ char* fileName, /*<regrel ebp+0x8>*/ /*|0x4|*/ int flags);

  // non-virtual functions --------------------------
  void __thiscall Sound::SetReverbProperties(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct _FSOUND_REVERB_CHANNELPROPERTIES* reverb);
  unsigned char __thiscall Sound::SetPaused(/*<regrel ebp+0x8>*/ /*|0x1|*/ unsigned char state);
  void __thiscall Sound::SetFadeIn(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int fadeTime, /*<regrel ebp+0xc>*/ /*|0x4|*/ float volume);
  void __thiscall Sound::SetFadeIn(/*<regrel ebp+0x8>*/ /*|0x4|*/ float fadeTime, /*<regrel ebp+0xc>*/ /*|0x4|*/ float volume);
  void __thiscall Sound::Set3DUpdateHandle(/*<regrel ebp+0x8>*/ /*|0x8|*/ __int64 handle);
  void __thiscall Sound::SetPosition(/*<regrel ebp+0x8>*/ /*|0x4|*/ class NTempest::C3Vector& worldPosition, /*<regrel ebp+0xc>*/ /*|0x4|*/ class NTempest::C3Vector* vel);
  void __thiscall Sound::SetPanning(/*<regrel ebp+0x8>*/ /*|0x4|*/ float pan);
  void __thiscall Sound::SetCutoffDistanceSquared(/*<regrel ebp+0x8>*/ /*|0x4|*/ float distanceSquared);
  void __thiscall Sound::SetDistances(/*<regrel ebp+0x8>*/ /*|0x4|*/ float min, /*<regrel ebp+0xc>*/ /*|0x4|*/ float max);
  int __thiscall Sound::GetLengthMs();
  int __thiscall Sound::SetPositionMs(/*<regrel ebp+0x8>*/ /*|0x4|*/ int milliseconds);
  unsigned char __thiscall Sound::IsPlaying();
  unsigned char __thiscall Sound::IsStopping();
  unsigned char __thiscall Sound::IsOutOfRange();
  void __thiscall Sound::Stop();
  void __thiscall Sound::Stop(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int fadeTime);
  void __thiscall Sound::Stop(/*<regrel ebp+0x8>*/ /*|0x4|*/ float fadeTime);
  void __thiscall Sound::SetVolume(/*<regrel ebp+0x8>*/ /*|0x4|*/ int volume);
  void __thiscall Sound::SetVolume(/*<regrel ebp+0x8>*/ /*|0x4|*/ float volume);
  void __thiscall Sound::SetFrequency(/*<regrel ebp+0x8>*/ /*|0x4|*/ int freq);
  void __thiscall Sound(struct Sound&);
  void __thiscall Sound::Sound();
  void __thiscall Sound::~Sound();
  void __thiscall Sound::Suspend();
  void __thiscall Sound::Resume();
  int __thiscall Sound::GetVolume();
  void __thiscall Sound::AddToFadeList();
  void __thiscall Sound::RemoveFromFadeList();
  void __thiscall Sound::AddToUpdateList();
  void __thiscall Sound::RemoveFromUpdateList();
  void __thiscall Sound::AddToPanningList();
  void __thiscall Sound::RemoveFromPanningList();
  void __thiscall Sound::AddToCutoffList();
  void __thiscall Sound::RemoveFromCutoffList();
  void __thiscall Sound::IncrementCategory(/*<regrel ebp+0x8>*/ /*|0x4|*/ enum SOUNDCATEGORIES category);
  void __thiscall Sound::DecrementCategory(/*<regrel ebp+0x8>*/ /*|0x4|*/ enum SOUNDCATEGORIES category);
  void __thiscall Sound::UpdateVolume();
  void __thiscall Sound::UpdatePosition();
  unsigned char __thiscall Sound::IsSuspended();
  struct Sound& __thiscall operator=(struct Sound&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x90>

struct IPersistStream : struct IPersist  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IPersist
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IPersistStream(struct IPersistStream&);
  void __thiscall IPersistStream();
  struct IPersistStream& __thiscall operator=(struct IPersistStream&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x10>*/ long __stdcall IsDirty() = 0;
  virtual /*<vtableoff 0x14>*/ long __stdcall Load(struct IStream*) = 0;
  virtual /*<vtableoff 0x18>*/ long __stdcall Save(struct IStream*, int) = 0;
  virtual /*<vtableoff 0x1c>*/ long __stdcall GetSizeMax(union _ULARGE_INTEGER*) = 0;
};
// <size 0x4>

struct _DMUS_VERSION {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwVersionMS;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwVersionLS;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct _ULARGE_INTEGER::__unnamed_dd_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long LowPart;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long HighPart;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct _LARGE_INTEGER::__unnamed_de_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long LowPart;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long HighPart;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct InitParams {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int outputSystem;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int driver;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int mixer;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int bufferSize;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int minNumHardwareChannels;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int maxNumHardwareChannels;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int mixRate;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int numSoftwareChannels;
  /*<thisrel this+0x20>*/ /*|0x4|*/ int flags;
  /*<thisrel this+0x24>*/ /*|0x4|*/ float distanceFactor;
  /*<thisrel this+0x28>*/ /*|0x4|*/ float dopplerFactor;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ float rolloffFactor;
  /*<thisrel this+0x30>*/ /*|0x4|*/ int cacheSizeMB;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x34>

struct FSOUND_STREAM {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x0>

struct _FSOUND_REVERB_CHANNELPROPERTIES {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int Direct;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int DirectHF;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int Room;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int RoomHF;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int Obstruction;
  /*<thisrel this+0x14>*/ /*|0x4|*/ float ObstructionLFRatio;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int Occlusion;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ float OcclusionLFRatio;
  /*<thisrel this+0x20>*/ /*|0x4|*/ float OcclusionRoomRatio;
  /*<thisrel this+0x24>*/ /*|0x4|*/ float OcclusionDirectRatio;
  /*<thisrel this+0x28>*/ /*|0x4|*/ int Exclusion;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ float ExclusionLFRatio;
  /*<thisrel this+0x30>*/ /*|0x4|*/ int OutsideVolumeHF;
  /*<thisrel this+0x34>*/ /*|0x4|*/ float DopplerFactor;
  /*<thisrel this+0x38>*/ /*|0x4|*/ float RolloffFactor;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ float RoomRolloffFactor;
  /*<thisrel this+0x40>*/ /*|0x4|*/ float AirAbsorptionFactor;
  /*<thisrel this+0x44>*/ /*|0x4|*/ int Flags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x48>

struct _FSOUND_REVERB_PROPERTIES {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int Environment;
  /*<thisrel this+0x4>*/ /*|0x4|*/ float EnvSize;
  /*<thisrel this+0x8>*/ /*|0x4|*/ float EnvDiffusion;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int Room;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int RoomHF;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int RoomLF;
  /*<thisrel this+0x18>*/ /*|0x4|*/ float DecayTime;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ float DecayHFRatio;
  /*<thisrel this+0x20>*/ /*|0x4|*/ float DecayLFRatio;
  /*<thisrel this+0x24>*/ /*|0x4|*/ int Reflections;
  /*<thisrel this+0x28>*/ /*|0x4|*/ float ReflectionsDelay;
  /*<thisrel this+0x2c>*/ /*|0xc|*/ float ReflectionsPan[3];
  /*<thisrel this+0x38>*/ /*|0x4|*/ int Reverb;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ float ReverbDelay;
  /*<thisrel this+0x40>*/ /*|0xc|*/ float ReverbPan[3];
  /*<thisrel this+0x4c>*/ /*|0x4|*/ float EchoTime;
  /*<thisrel this+0x50>*/ /*|0x4|*/ float EchoDepth;
  /*<thisrel this+0x54>*/ /*|0x4|*/ float ModulationTime;
  /*<thisrel this+0x58>*/ /*|0x4|*/ float ModulationDepth;
  /*<thisrel this+0x5c>*/ /*|0x4|*/ float AirAbsorptionHF;
  /*<thisrel this+0x60>*/ /*|0x4|*/ float HFReference;
  /*<thisrel this+0x64>*/ /*|0x4|*/ float LFReference;
  /*<thisrel this+0x68>*/ /*|0x4|*/ float RoomRolloffFactor;
  /*<thisrel this+0x6c>*/ /*|0x4|*/ float Diffusion;
  /*<thisrel this+0x70>*/ /*|0x4|*/ float Density;
  /*<thisrel this+0x74>*/ /*|0x4|*/ unsigned int Flags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x78>

struct OSEVENT {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ enum OSINPUT id;
  /*<thisrel this+0x4>*/ /*|0x10|*/ int param[4];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct tagMOUSEINPUT {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long dx;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long dy;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long mouseData;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long time;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long dwExtraInfo;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct tagKEYBDINPUT {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short wVk;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short wScan;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long time;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long dwExtraInfo;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct tagHARDWAREINPUT {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long uMsg;
  /*<thisrel this+0x4>*/ /*|0x2|*/ unsigned short wParamL;
  /*<thisrel this+0x6>*/ /*|0x2|*/ unsigned short wParamH;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct tagINPUT {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long type;
  /*<thisrel this+0x4>*/ /*|0x18|*/ struct tagMOUSEINPUT mi;
  /*<thisrel this+0x4>*/ /*|0x10|*/ struct tagKEYBDINPUT ki;
  /*<thisrel this+0x4>*/ /*|0x8|*/ struct tagHARDWAREINPUT hi;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c>

struct _SYSTEM_INFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwOemId;
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short wProcessorArchitecture;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short wReserved;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwPageSize;
  /*<thisrel this+0x8>*/ /*|0x4|*/ void* lpMinimumApplicationAddress;
  /*<thisrel this+0xc>*/ /*|0x4|*/ void* lpMaximumApplicationAddress;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long dwActiveProcessorMask;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long dwNumberOfProcessors;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long dwProcessorType;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned long dwAllocationGranularity;
  /*<thisrel this+0x20>*/ /*|0x2|*/ unsigned short wProcessorLevel;
  /*<thisrel this+0x22>*/ /*|0x2|*/ unsigned short wProcessorRevision;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x24>

struct _OSVERSIONINFOEXA {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwOSVersionInfoSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwMajorVersion;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long dwMinorVersion;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long dwBuildNumber;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long dwPlatformId;
  /*<thisrel this+0x14>*/ /*|0x80|*/ char szCSDVersion[128];
  /*<thisrel this+0x94>*/ /*|0x2|*/ unsigned short wServicePackMajor;
  /*<thisrel this+0x96>*/ /*|0x2|*/ unsigned short wServicePackMinor;
  /*<thisrel this+0x98>*/ /*|0x2|*/ unsigned short wSuiteMask;
  /*<thisrel this+0x9a>*/ /*|0x1|*/ unsigned char wProductType;
  /*<thisrel this+0x9b>*/ /*|0x1|*/ unsigned char wReserved;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x9c>

struct _MEMORYSTATUS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwLength;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwMemoryLoad;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long dwTotalPhys;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long dwAvailPhys;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long dwTotalPageFile;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long dwAvailPageFile;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long dwTotalVirtual;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned long dwAvailVirtual;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct _OVERLAPPED {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long Internal;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long InternalHigh;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long Offset;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long OffsetHigh;
  /*<thisrel this+0x8>*/ /*|0x4|*/ void* Pointer;
  /*<thisrel this+0x10>*/ /*|0x4|*/ void* hEvent;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct sockaddr {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short sa_family;
  /*<thisrel this+0x2>*/ /*|0xe|*/ char sa_data[14];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct _WSABUF {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long len;
  /*<thisrel this+0x4>*/ /*|0x4|*/ char* buf;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct OsNet::TCPNET {

  // static data ------------------------------------
  static /*<rva 0x8c4da0>*/ /*|0x20|*/ class CInitCritSect s_initLock;
  static /*<rva 0x8c4808>*/ /*|0x14|*/ unsigned long s_initCount[5];
  static /*<rva 0x8c4c00>*/ /*|0x4|*/ struct OsNet::TCPNET* s_pnet;
  static /*<rva 0x8c4804>*/ /*|0x4|*/ int s_baseShutdown;
  static /*<rva 0x8c4dcc>*/ /*|0x4|*/ int s_pumpShutdown;
  static /*<rva 0x8c4dd4>*/ /*|0x4|*/ int s_tcpShutdown;
  static /*<rva 0x8c4dc8>*/ /*|0x4|*/ int s_preTerminateHostAddr;
  static /*<rva 0x8c4c10>*/ /*|0x190|*/ struct WSAData s_wsaData;
  static /*<rva 0x8c4c08>*/ /*|0x4|*/ struct HINSTANCE__* s_mswsockModule;
  static /*<rva 0x8c4c04>*/ /*|0x4|*/ struct HINSTANCE__* s_ws2Module;
  static /*<rva 0x8c4828>*/ /*|0x4|*/ int  (s_AcceptEx*)(unsigned int, unsigned int, void*, unsigned long, unsigned long, unsigned long, unsigned long*, struct _OVERLAPPED*);
  static /*<rva 0x8c482c>*/ /*|0x4|*/ void  (s_GetAcceptExSockaddrs*)(void*, unsigned long, unsigned long, unsigned long, struct sockaddr**, int*, struct sockaddr**, int*);
  static /*<rva 0x8c4dd0>*/ /*|0x4|*/ int  (s_WSASend*)(unsigned int, struct _WSABUF*, unsigned long, unsigned long*, unsigned long, struct _OVERLAPPED*, void  (*)(unsigned long, unsigned long, struct _OVERLAPPED*, unsigned long));
  static /*<rva 0x8c4820>*/ /*|0x4|*/ int  (s_WSARecv*)(unsigned int, struct _WSABUF*, unsigned long, unsigned long*, unsigned long*, struct _OVERLAPPED*, void  (*)(unsigned long, unsigned long, struct _OVERLAPPED*, unsigned long));
  static /*<rva 0x8c4824>*/ /*|0x4|*/ struct HSLOG__* s_log;
  static /*<rva 0x8c4dc4>*/ /*|0x4|*/ int s_qpcexists;
  static /*<rva 0x8c4dc0>*/ /*|0x4|*/ float s_qpctoms;

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ class OsNet::LOCKEDLONG m_refCount;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long m_pumpThreadCount;
  /*<thisrel this+0x8>*/ /*|0x14|*/ class TSGrowableArray<void *> m_pumpThreads;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ void* m_udpPumpThread;
  /*<thisrel this+0x20>*/ /*|0x4|*/ void* m_udpPumpEvent;
  /*<thisrel this+0x24>*/ /*|0x18|*/ class CCritSect m_loopLock;
  /*<thisrel this+0x3c>*/ /*|0xc|*/ class TSExplicitList<OsNet::LOOPCONN::INPUT,8> m_loopInputRecycleList;
  /*<thisrel this+0x48>*/ /*|0xc|*/ class TSExplicitList<OsNet::LOOPCONN::INPUT,8> m_loopInputList;
  /*<thisrel this+0x54>*/ /*|0xc|*/ class TSExplicitList<OsNet::LOOPCONN,108> m_loopDisconnectList;
  /*<thisrel this+0x60>*/ /*|0x4b0|*/ class OsNet::TSSlottedListEx<OsNet::NETCONN,8,8> m_connList[4];
  /*<thisrel this+0x510>*/ /*|0x4|*/ void* m_listenThread;
  /*<thisrel this+0x514>*/ /*|0x30|*/ class OsNet::TSSlottedListEx<OsNet::TCPLISTEN,8,1> m_listenList;
  /*<thisrel this+0x544>*/ /*|0x4|*/ void* m_baseThread;
  /*<thisrel this+0x548>*/ /*|0x4|*/ void* m_baseEvent;
  /*<thisrel this+0x54c>*/ /*|0x4|*/ int m_baseTcpShutdown;
  /*<thisrel this+0x550>*/ /*|0x4|*/ void* m_baseTcpShutdownEvent;
  /*<thisrel this+0x554>*/ /*|0xc0|*/ class OsNet::TSSlottedListEx<OsNet::NETCONNECT,8,1> m_connectList[4];
  /*<thisrel this+0x614>*/ /*|0x4|*/ void* m_port;
  /*<thisrel this+0x618>*/ /*|0x4|*/ class OsNet::LOCKEDLONG m_hostAddrInfoCount;
  /*<thisrel this+0x61c>*/ /*|0x4|*/ class OsNet::CEventLock m_hostAddrInfoLock;
  /*<thisrel this+0x620>*/ /*|0x4|*/ unsigned long m_hostAddrInfoId;
  /*<thisrel this+0x624>*/ /*|0xc|*/ class TSList<OsNet::TCPHOSTADDRINFO,TSGetLink<OsNet::TCPHOSTADDRINFO> > m_hostAddrInfoList;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------
  static void __fastcall OsNet::TCPNET::IncludeDependantParts(/*<register ecx>*/ /*|0x4|*/ unsigned long* parts);
  static void __fastcall OsNet::TCPNET::MakeConnAddr(/*<register ecx>*/ /*|0x4|*/ unsigned int sock, /*<register edx>*/ /*|0x4|*/ unsigned long port, /*<regrel ebp+0x8>*/ /*|0x4|*/ struct NETCONNADDR* connAddr);
  static unsigned int __fastcall OsNet::TCPNET::CreateListenSocket(/*<register cx>*/ /*|0x2|*/ unsigned short port);
  static void* __fastcall OsNet::TCPNET::IoCompletionPresent(/*<register ecx>*/ /*|0x4|*/ unsigned long* pumpThreadCount);
  static unsigned int __stdcall OsNet::TCPNET::BaseThread(/*<regrel ebp+0x8>*/ /*|0x4|*/ void* lpnet);
  static unsigned int __stdcall OsNet::TCPNET::GetHostAddrsThread(/*<regrel ebp+0x8>*/ /*|0x4|*/ void* lpparam);
  static unsigned int __stdcall OsNet::TCPNET::IoPumpThread(/*<regrel ebp+0x8>*/ /*|0x4|*/ void* lpnet);
  static unsigned int __stdcall OsNet::TCPNET::SlPumpThread(/*<regrel ebp+0x8>*/ /*|0x4|*/ void* lpnet);
  static unsigned int __stdcall OsNet::TCPNET::ListenThread(/*<regrel ebp+0x8>*/ /*|0x4|*/ void* lpnet);
  static unsigned int __stdcall OsNet::TCPNET::UdpPumpThread(/*<regrel ebp+0x8>*/ /*|0x4|*/ void* lpnet);
  static int __fastcall OsNet::TCPNET::Initialize(/*<register ecx>*/ /*|0x4|*/ unsigned long hints, /*<register edx>*/ /*|0x4|*/ unsigned long parts);
  static void __fastcall OsNet::TCPNET::Destroy(/*<register ecx>*/ /*|0x4|*/ unsigned long parts);
  static struct OsNet::TCPNET* __fastcall Net();
  static void __cdecl OsNet::TCPNET::LogWrite(/*<regrel ebp+0x8>*/ /*|0x4|*/ char* format, /*<regrel ebp-0x400>*/ /*|0x400|*/ char line[1024]);
  static void __cdecl OsNet::TCPNET::LogDump(/*<regrel ebp+0x8>*/ /*|0x4|*/ char* header, /*<regrel ebp+0xc>*/ /*|0x4|*/ void* data, /*<regrel ebp+0x10>*/ /*|0x4|*/ unsigned long bytes);

  // non-virtual functions --------------------------
  void __thiscall OsNet::TCPNET::IncRef();
  void __thiscall OsNet::TCPNET::DecRef();
  int __thiscall OsNet::TCPNET::BaseInitialize(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned long hints);
  void __thiscall OsNet::TCPNET::BaseDestroy();
  int __thiscall OsNet::TCPNET::WinsockInitialize(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned long hints);
  void __thiscall OsNet::TCPNET::WinsockDestroy();
  int __thiscall OsNet::TCPNET::IoInitialize(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned long hints);
  void __thiscall OsNet::TCPNET::IoDestroy();
  int __thiscall OsNet::TCPNET::TcpInitialize(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned long hints);
  void __thiscall OsNet::TCPNET::TcpDestroy();
  int __thiscall OsNet::TCPNET::PumpThreadsInitialize();
  void __thiscall OsNet::TCPNET::PumpThreadsDestroy();
  void __thiscall OsNet::TCPNET::WakePumpThread();
  void __thiscall OsNet::TCPNET::LoopMakeConn(/*<regrel ebp+0x8>*/ /*|0x4|*/ int  (eventProcSrc*)(struct HNETCONN__*, struct NETCONNADDR*, enum NETNOTE, void*, void*, unsigned long, unsigned long*), /*<regrel ebp+0xc>*/ /*|0x4|*/ int  (eventProcDst*)(struct HNETCONN__*, struct NETCONNADDR*, enum NETNOTE, void*, void*, unsigned long, unsigned long*), /*<regrel ebp+0x10>*/ /*|0x4|*/ void* user, /*<regrel ebp+0x14>*/ /*|0x4|*/ void* data, /*<regrel ebp+0x18>*/ /*|0x4|*/ unsigned long bytes);
  void __thiscall OsNet::TCPNET::TcpMakeConn(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int sock, /*<regrel ebp+0xc>*/ /*|0x4|*/ int  (eventProc*)(struct HNETCONN__*, struct NETCONNADDR*, enum NETNOTE, void*, void*, unsigned long, unsigned long*), /*<regrel ebp+0x10>*/ /*|0x4|*/ void* user, /*<regrel ebp+0x14>*/ /*|0x4|*/ struct NETCONNADDR* pconnAddr, /*<regrel ebp+0x18>*/ /*|0x4|*/ void* data, /*<regrel ebp+0x1c>*/ /*|0x4|*/ unsigned long bytes);
  void __thiscall OsNet::TCPNET::UdpMakeConn(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int sock, /*<regrel ebp+0xc>*/ /*|0x4|*/ int  (eventProc*)(struct HNETCONN__*, struct NETCONNADDR*, enum NETNOTE, void*, void*, unsigned long, unsigned long*), /*<regrel ebp+0x10>*/ /*|0x4|*/ void* user, /*<regrel ebp+0x14>*/ /*|0x4|*/ struct NETCONNADDR* pconnAddr);
  void __thiscall OsNet::TCPNET::FileMakeConn(/*<regrel ebp+0x8>*/ /*|0x4|*/ void* file, /*<regrel ebp+0xc>*/ /*|0x4|*/ int  (eventProc*)(struct HNETCONN__*, struct NETCONNADDR*, enum NETNOTE, void*, void*, unsigned long, unsigned long*), /*<regrel ebp+0x10>*/ /*|0x4|*/ void* user, /*<regrel ebp+0x14>*/ /*|0x4|*/ struct NETCONNADDR* pconnAddr);
  void __thiscall OsNet::TCPNET::LoopConnectInit(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct OsNet::LOOPCONNECT* pconnect);
  void __thiscall OsNet::TCPNET::TcpConnectInit(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct OsNet::TCPCONNECT* pconnect);
  void __thiscall OsNet::TCPNET::FileConnectInit(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct OsNet::FILECONNECT* pconnect);
  void __thiscall OsNet::TCPNET::IoPump(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned long timeout);
  void __thiscall OsNet::TCPNET::TCPNET();
  void __thiscall TCPNET(struct OsNet::TCPNET&);
  struct OsNet::TCPNET& __thiscall operator=(struct OsNet::TCPNET&);
  void __thiscall OsNet::TCPNET::~TCPNET();
  void __thiscall OsNet::TCPNET::Pump(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned long timeout);
  int __thiscall PostIo(unsigned long, unsigned long, struct _OVERLAPPED*);
  int __thiscall OsNet::TCPNET::TcpListen(/*<regrel ebp+0x8>*/ /*|0x2|*/ unsigned short port, /*<regrel ebp+0xc>*/ /*|0x4|*/ int  (eventProc*)(struct HNETCONN__*, struct NETCONNADDR*, enum NETNOTE, void*, void*, unsigned long, unsigned long*), /*<regrel ebp+0x10>*/ /*|0x4|*/ void* user);
  void __thiscall OsNet::TCPNET::TcpListenEnable(/*<regrel ebp+0x8>*/ /*|0x2|*/ unsigned short port, /*<regrel ebp+0xc>*/ /*|0x4|*/ int enable);
  void __thiscall OsNet::TCPNET::LoopConnect(/*<regrel ebp+0x8>*/ /*|0x4|*/ int  (eventProcSrc*)(struct HNETCONN__*, struct NETCONNADDR*, enum NETNOTE, void*, void*, unsigned long, unsigned long*), /*<regrel ebp+0xc>*/ /*|0x4|*/ int  (eventProcDst*)(struct HNETCONN__*, struct NETCONNADDR*, enum NETNOTE, void*, void*, unsigned long, unsigned long*), /*<regrel ebp+0x10>*/ /*|0x4|*/ void* user, /*<regrel ebp+0x14>*/ /*|0x4|*/ void* data, /*<regrel ebp+0x18>*/ /*|0x4|*/ unsigned long bytes);
  void __thiscall OsNet::TCPNET::TcpConnect(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned long nodeNumber, /*<regrel ebp+0xc>*/ /*|0x2|*/ unsigned short port, /*<regrel ebp+0x10>*/ /*|0x4|*/ int  (eventProc*)(struct HNETCONN__*, struct NETCONNADDR*, enum NETNOTE, void*, void*, unsigned long, unsigned long*), /*<regrel ebp+0x14>*/ /*|0x4|*/ void* user, /*<regrel ebp+0x18>*/ /*|0x4|*/ void* data, /*<regrel ebp+0x1c>*/ /*|0x4|*/ unsigned long bytes);
  void __thiscall OsNet::TCPNET::UdpConnect(/*<regrel ebp+0x8>*/ /*|0x4|*/ union NETADDR* addr, /*<regrel ebp+0xc>*/ /*|0x2|*/ unsigned short portMin, /*<regrel ebp+0x10>*/ /*|0x2|*/ unsigned short portMax, /*<regrel ebp+0x14>*/ /*|0x4|*/ int  (eventProc*)(struct HNETCONN__*, struct NETCONNADDR*, enum NETNOTE, void*, void*, unsigned long, unsigned long*), /*<regrel ebp+0x18>*/ /*|0x4|*/ void* user);
  void __thiscall OsNet::TCPNET::FileConnCreate(/*<regrel ebp+0x8>*/ /*|0x4|*/ char* fileName, /*<regrel ebp+0xc>*/ /*|0x4|*/ int  (eventProc*)(struct HNETCONN__*, struct NETCONNADDR*, enum NETNOTE, void*, void*, unsigned long, unsigned long*), /*<regrel ebp+0x10>*/ /*|0x4|*/ void* user, /*<regrel ebp+0x14>*/ /*|0x4|*/ int readOnly);
  struct OsNet::TCPHOSTADDRINFO* __thiscall OsNet::TCPNET::LockedFindHostAddrInfo(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned long infoId);
  int __thiscall OsNet::TCPNET::GetHostAddrs(/*<regrel ebp+0x8>*/ /*|0x4|*/ char* hostNameList, /*<regrel ebp+0xc>*/ /*|0x2|*/ unsigned short defaultPort, /*<regrel ebp+0x10>*/ /*|0x4|*/ void  (hostAddrProc*)(union NETADDR*, unsigned long, void*), /*<regrel ebp+0x14>*/ /*|0x4|*/ void* user);
  void __thiscall OsNet::TCPNET::CompleteAcceptEx(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct OsNet::TCPACCEPT* paccept, /*<regrel ebp+0xc>*/ /*|0x4|*/ int makeConn);
  void __thiscall OsNet::TCPNET::CompleteAccept(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct OsNet::TCPLISTEN* plisten, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int sock, /*<regrel ebp+0x10>*/ /*|0x4|*/ struct NETCONNADDR* pconnAddr);
  void __thiscall OsNet::TCPNET::LoopCompleteConnect(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct OsNet::LOOPCONNECT* pconnect);
  void __thiscall OsNet::TCPNET::TcpCompleteConnect(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct OsNet::TCPCONNECT* pconnect);
  void __thiscall OsNet::TCPNET::FileCompleteConnect(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct OsNet::FILECONNECT* pconnect);
  void __thiscall OsNet::TCPNET::LinkConn(/*<regrel ebp+0x8>*/ /*|0x4|*/ class OsNet::NETCONN* pconn, /*<regrel ebp+0xc>*/ /*|0x4|*/ enum OsNet::CONNLIST tolist);
  void __thiscall BaseWakeThread();
  void __thiscall LoopLock();
  void __thiscall LoopUnlock();
  void __thiscall LoopLinkInput(struct OsNet::LOOPCONN::INPUT*);
  void __thiscall LoopLinkDisconnectConn(class OsNet::LOOPCONN*);
  struct OsNet::LOOPCONN::INPUT* __thiscall OsNet::TCPNET::LoopAllocInput(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned long bytes);
  void __thiscall OsNet::TCPNET::LoopFreeInput(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct OsNet::LOOPCONN::INPUT* pinput);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x630>

struct WSAData {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short wVersion;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short wHighVersion;
  /*<thisrel this+0x4>*/ /*|0x101|*/ char szDescription[257];
  /*<thisrel this+0x105>*/ /*|0x81|*/ char szSystemStatus[129];
  /*<thisrel this+0x186>*/ /*|0x2|*/ unsigned short iMaxSockets;
  /*<thisrel this+0x188>*/ /*|0x2|*/ unsigned short iMaxUdpDg;
  /*<thisrel this+0x18c>*/ /*|0x4|*/ char* lpVendorInfo;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x190>

struct OsNet::NETSELSOCK {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int m_sock;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall NETSELSOCK(struct OsNet::NETSELSOCK&);
  void __thiscall NETSELSOCK(unsigned int);
  void __thiscall NETSELSOCK();
  struct OsNet::NETSELSOCK& __thiscall operator=(struct OsNet::NETSELSOCK&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ void __thiscall Selected(struct OsNet::TCPNET*, enum OsNet::SELECTSET) = 0;
  virtual /*<vtableoff 0x4>*/ int __thiscall OsNet::NETSELSOCK::IsClosed();
  virtual /*<vtableoff 0x8>*/ void __thiscall AddToSelectSets(class OsNet::NETSELECTSETS*) = 0;
};
// <size 0x8>

struct timeval {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long tv_sec;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long tv_usec;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct OsNet::TCPACCEPT : class TSLinkedNode<OsNet::TCPACCEPT>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x18|*/ struct OsNet::NETOVERLAP m_overlap;
  /*<thisrel this+0x20>*/ /*|0x18|*/ class CCritSect m_lock;
  /*<thisrel this+0x38>*/ /*|0x40|*/ unsigned char m_addr[64];
  /*<thisrel this+0x78>*/ /*|0x4|*/ struct OsNet::TCPLISTEN* m_listen;
  /*<thisrel this+0x7c>*/ /*|0x4|*/ unsigned int m_sock;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<OsNet::TCPACCEPT>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall TCPACCEPT(struct OsNet::TCPACCEPT&);
  void __thiscall OsNet::TCPACCEPT::TCPACCEPT(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct OsNet::TCPLISTEN* listen);
  void __thiscall OsNet::TCPACCEPT::~TCPACCEPT();
  void __thiscall OsNet::TCPACCEPT::Init();
  unsigned int __thiscall OsNet::TCPACCEPT::Complete(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct NETCONNADDR* connAddr, /*<regrel ebp+0xc>*/ /*|0x4|*/ int makeSock);
  struct OsNet::TCPACCEPT& __thiscall operator=(struct OsNet::TCPACCEPT&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x80>

struct OsNet::TCPLISTEN : struct OsNet::NETSELSOCK  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x8|*/ class TSLink<OsNet::TCPLISTEN> m_link;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long m_portAddr;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int  (m_eventProc*)(struct HNETCONN__*, struct NETCONNADDR*, enum NETNOTE, void*, void*, unsigned long, unsigned long*);
  /*<thisrel this+0x18>*/ /*|0x4|*/ void* m_user;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int m_enabled;
  /*<thisrel this+0x20>*/ /*|0xc|*/ class TSList<OsNet::TCPACCEPT,TSGetLink<OsNet::TCPACCEPT> > m_acceptList;

  // base classes -----------------------------------
  // baseclass struct OsNet::NETSELSOCK
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall TCPLISTEN(struct OsNet::TCPLISTEN&);
  void __thiscall OsNet::TCPLISTEN::TCPLISTEN(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int sock, /*<regrel ebp+0xc>*/ /*|0x2|*/ unsigned short port, /*<regrel ebp+0x10>*/ /*|0x4|*/ int  (eventProc*)(struct HNETCONN__*, struct NETCONNADDR*, enum NETNOTE, void*, void*, unsigned long, unsigned long*), /*<regrel ebp+0x14>*/ /*|0x4|*/ void* user, /*<regrel ebp+0x18>*/ /*|0x4|*/ unsigned long acceptCount);
  void __thiscall OsNet::TCPLISTEN::~TCPLISTEN();
  int __thiscall OsNet::TCPLISTEN::Enable(/*<regrel ebp+0x8>*/ /*|0x4|*/ int enable);
  void __thiscall OsNet::TCPLISTEN::Close();
  struct OsNet::TCPLISTEN& __thiscall operator=(struct OsNet::TCPLISTEN&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ void __thiscall OsNet::TCPLISTEN::Selected(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct OsNet::TCPNET* pnet, /*<regrel ebp+0xc>*/ /*|0x4|*/ enum OsNet::SELECTSET selectSet);
  virtual /*<vtableoff 0x0>*/ void __thiscall OsNet::TCPLISTEN::AddToSelectSets(/*<regrel ebp+0x8>*/ /*|0x4|*/ class OsNet::NETSELECTSETS* selectSets);
};
// <size 0x2c>

struct NETCONNADDR {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x10|*/ union NETADDR peerAddr;
  /*<thisrel this+0x10>*/ /*|0x10|*/ union NETADDR selfAddr;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct HNETCONN__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct OsNet::NETCONNECT : struct OsNet::NETSELSOCK  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x8|*/ class TSLink<OsNet::NETCONNECT> m_link;
  /*<thisrel this+0x10>*/ /*|0x4|*/ void* m_user;
  /*<thisrel this+0x14>*/ /*|0x4|*/ void* m_data;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long m_bytes;

  // base classes -----------------------------------
  // baseclass struct OsNet::NETSELSOCK
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall OsNet::NETCONNECT::~NETCONNECT();
  void __thiscall OsNet::NETCONNECT::NoteCantConnect(/*<regrel ebp+0x8>*/ /*|0x4|*/ int  (eventProc*)(struct HNETCONN__*, struct NETCONNADDR*, enum NETNOTE, void*, void*, unsigned long, unsigned long*), /*<regrel ebp+0xc>*/ /*|0x4|*/ struct NETCONNADDR* pconnAddr);
  void __thiscall NETCONNECT(struct OsNet::NETCONNECT&);
  void __thiscall NETCONNECT();
  struct OsNet::NETCONNECT& __thiscall operator=(struct OsNet::NETCONNECT&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0xc>*/ void __thiscall Fail() = 0;
  virtual /*<vtableoff 0x10>*/ void __thiscall Complete(struct OsNet::TCPNET*) = 0;
};
// <size 0x1c>

struct OsNet::LOOPCONNECT : struct OsNet::NETCONNECT  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int  (m_eventProcSrc*)(struct HNETCONN__*, struct NETCONNADDR*, enum NETNOTE, void*, void*, unsigned long, unsigned long*);
  /*<thisrel this+0x20>*/ /*|0x4|*/ int  (m_eventProcDst*)(struct HNETCONN__*, struct NETCONNADDR*, enum NETNOTE, void*, void*, unsigned long, unsigned long*);

  // base classes -----------------------------------
  // baseclass struct OsNet::NETCONNECT
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall LOOPCONNECT(struct OsNet::LOOPCONNECT&);
  void __thiscall LOOPCONNECT();
  struct OsNet::LOOPCONNECT& __thiscall operator=(struct OsNet::LOOPCONNECT&);
  void __thiscall ~LOOPCONNECT();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ void __thiscall OsNet::LOOPCONNECT::Selected(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct OsNet::TCPNET* __formal, /*<regrel ebp+0xc>*/ /*|0x4|*/ enum OsNet::SELECTSET __formal);
  virtual /*<vtableoff 0x0>*/ int __thiscall OsNet::LOOPCONNECT::IsClosed();
  virtual /*<vtableoff 0x0>*/ void __thiscall OsNet::LOOPCONNECT::AddToSelectSets(/*<regrel ebp+0x8>*/ /*|0x4|*/ class OsNet::NETSELECTSETS* __formal);
  virtual /*<vtableoff 0x0>*/ void __thiscall OsNet::LOOPCONNECT::Fail();
  virtual /*<vtableoff 0x0>*/ void __thiscall OsNet::LOOPCONNECT::Complete(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct OsNet::TCPNET* pnet);
};
// <size 0x24>

struct OsNet::TCPCONNECT : struct OsNet::NETCONNECT  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned long m_nodeNumber;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned long m_portAddr;
  /*<thisrel this+0x24>*/ /*|0x4|*/ int  (m_eventProc*)(struct HNETCONN__*, struct NETCONNADDR*, enum NETNOTE, void*, void*, unsigned long, unsigned long*);

  // base classes -----------------------------------
  // baseclass struct OsNet::NETCONNECT
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall TCPCONNECT(struct OsNet::TCPCONNECT&);
  void __thiscall TCPCONNECT();
  struct OsNet::TCPCONNECT& __thiscall operator=(struct OsNet::TCPCONNECT&);
  void __thiscall ~TCPCONNECT();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ void __thiscall OsNet::TCPCONNECT::Selected(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct OsNet::TCPNET* pnet, /*<regrel ebp+0xc>*/ /*|0x4|*/ enum OsNet::SELECTSET selectSet);
  virtual /*<vtableoff 0x0>*/ void __thiscall OsNet::TCPCONNECT::AddToSelectSets(/*<regrel ebp+0x8>*/ /*|0x4|*/ class OsNet::NETSELECTSETS* selectSets);
  virtual /*<vtableoff 0x0>*/ void __thiscall OsNet::TCPCONNECT::Fail();
  virtual /*<vtableoff 0x0>*/ void __thiscall OsNet::TCPCONNECT::Complete(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct OsNet::TCPNET* pnet);
};
// <size 0x28>

struct OsNet::FILECONNECT : struct OsNet::NETCONNECT  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x1c>*/ /*|0x4|*/ void* m_file;
  /*<thisrel this+0x20>*/ /*|0x4|*/ int  (m_eventProc*)(struct HNETCONN__*, struct NETCONNADDR*, enum NETNOTE, void*, void*, unsigned long, unsigned long*);

  // base classes -----------------------------------
  // baseclass struct OsNet::NETCONNECT
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall FILECONNECT(struct OsNet::FILECONNECT&);
  void __thiscall FILECONNECT();
  struct OsNet::FILECONNECT& __thiscall operator=(struct OsNet::FILECONNECT&);
  void __thiscall ~FILECONNECT();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ void __thiscall OsNet::FILECONNECT::Selected(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct OsNet::TCPNET* __formal, /*<regrel ebp+0xc>*/ /*|0x4|*/ enum OsNet::SELECTSET __formal);
  virtual /*<vtableoff 0x0>*/ int __thiscall OsNet::FILECONNECT::IsClosed();
  virtual /*<vtableoff 0x0>*/ void __thiscall OsNet::FILECONNECT::AddToSelectSets(/*<regrel ebp+0x8>*/ /*|0x4|*/ class OsNet::NETSELECTSETS* __formal);
  virtual /*<vtableoff 0x0>*/ void __thiscall OsNet::FILECONNECT::Fail();
  virtual /*<vtableoff 0x0>*/ void __thiscall OsNet::FILECONNECT::Complete(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct OsNet::TCPNET* pnet);
};
// <size 0x24>

struct in_addr {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ union in_addr::__unnamed_df_ S_un;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct sockaddr_in {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ short sin_family;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short sin_port;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct in_addr sin_addr;
  /*<thisrel this+0x8>*/ /*|0x8|*/ char sin_zero[8];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct _OSVERSIONINFOA {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwOSVersionInfoSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwMajorVersion;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long dwMinorVersion;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long dwBuildNumber;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long dwPlatformId;
  /*<thisrel this+0x14>*/ /*|0x80|*/ char szCSDVersion[128];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x94>

struct OsNet::NETOVERLAP {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x14|*/ struct _OVERLAPPED m_overlapped;
  /*<thisrel this+0x14>*/ /*|0x4|*/ enum OsNet::OVERLAPTYPE m_type;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall Init(enum OsNet::OVERLAPTYPE);

  // virtual functions ------------------------------
};
// <size 0x18>

struct fd_set {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int fd_count;
  /*<thisrel this+0x4>*/ /*|0x1000|*/ unsigned int fd_array[1024];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1004>

struct OsNet::TCPHOSTADDRINFO : class TSLinkedNode<OsNet::TCPHOSTADDRINFO>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ char* m_hostNameList;
  /*<thisrel this+0xc>*/ /*|0x4|*/ char* m_hostNameCurr;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long m_infoId;
  /*<thisrel this+0x14>*/ /*|0x4|*/ void* m_thread;
  /*<thisrel this+0x18>*/ /*|0x4|*/ void  (m_hostAddrProc*)(union NETADDR*, unsigned long, void*);
  /*<thisrel this+0x1c>*/ /*|0x4|*/ void* m_user;
  /*<thisrel this+0x20>*/ /*|0x4|*/ int m_ready;
  /*<thisrel this+0x24>*/ /*|0x14|*/ class TSGrowableArray<NETADDR> m_addrs;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<OsNet::TCPHOSTADDRINFO>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall OsNet::TCPHOSTADDRINFO::~TCPHOSTADDRINFO();
  void __thiscall Fail();
  void __thiscall OsNet::TCPHOSTADDRINFO::Complete();
  void __thiscall TCPHOSTADDRINFO(struct OsNet::TCPHOSTADDRINFO&);
  void __thiscall TCPHOSTADDRINFO();
  struct OsNet::TCPHOSTADDRINFO& __thiscall operator=(struct OsNet::TCPHOSTADDRINFO&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x38>

struct NETADDR::__unnamed_e0_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ unsigned __int64 pos;
  /*<thisrel this+0x8>*/ /*|0x4|*/ void* operationId;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct OsNet::TCPHOSTADDRTHREAD {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct OsNet::TCPNET* m_net;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long m_infoId;
  /*<thisrel this+0x8>*/ /*|0x4|*/ void* m_event;
  /*<thisrel this+0xc>*/ /*|0x2|*/ unsigned short m_defaultPort;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall TCPHOSTADDRTHREAD();
  void __thiscall ~TCPHOSTADDRTHREAD();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x10>

struct OsNet::LOOPCONN::INPUT {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ class TSLink<OsNet::LOOPCONN::INPUT> m_link;
  /*<thisrel this+0x8>*/ /*|0x8|*/ class TSLink<OsNet::LOOPCONN::INPUT> m_linkNet;
  /*<thisrel this+0x10>*/ /*|0x4|*/ class OsNet::LOOPCONN* m_conn;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long m_bytes;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long m_dataBytes;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned char m_data[4];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall INPUT(struct OsNet::LOOPCONN::INPUT&);
  void __thiscall INPUT();
  struct OsNet::LOOPCONN::INPUT& __thiscall operator=(struct OsNet::LOOPCONN::INPUT&);
  void __thiscall OsNet::LOOPCONN::INPUT::~INPUT();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x20>

struct OsNet::OUTPUT : class TSLinkedNode<OsNet::OUTPUT>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x18|*/ struct OsNet::NETOVERLAP m_overlap;
  /*<thisrel this+0x20>*/ /*|0x4|*/ enum OsNet::OUTPUTSTATE m_state;
  /*<thisrel this+0x24>*/ /*|0x4|*/ struct OsNet::OUTPUT::__unnamed::__unnamed_e1_ m_file;
  /*<thisrel this+0x24>*/ /*|0x4|*/ struct OsNet::OUTPUT::__unnamed::__unnamed_e2_ m_sock;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned long m_bytes;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ unsigned long m_dataBytes;
  /*<thisrel this+0x30>*/ /*|0x4|*/ unsigned char* m_data;
  /*<thisrel this+0x34>*/ /*|0x4|*/ class SEvent* m_completionEvent;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<OsNet::OUTPUT>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall OUTPUT(struct OsNet::OUTPUT&);
  void __thiscall OUTPUT();
  void __thiscall OsNet::OUTPUT::~OUTPUT();
  struct OsNet::OUTPUT& __thiscall operator=(struct OsNet::OUTPUT&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x38>

struct OsNet::INPUT : class TSLinkedNode<OsNet::INPUT>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x18|*/ struct OsNet::NETOVERLAP m_overlap;
  /*<thisrel this+0x20>*/ /*|0x4|*/ struct OsNet::INPUT::__unnamed::__unnamed_e3_ m_file;
  /*<thisrel this+0x20>*/ /*|0x1|*/ struct OsNet::INPUT::__unnamed::__unnamed_e4_ m_sock;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned long m_bytes;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned char* m_buffer;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<OsNet::INPUT>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall INPUT(struct OsNet::INPUT&);
  void __thiscall INPUT();
  struct OsNet::INPUT& __thiscall operator=(struct OsNet::INPUT&);
  void __thiscall ~INPUT();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x2c>

struct OsNet::NETSELSOCKPTR : class TSHashObject<OsNet::NETSELSOCKPTR,HASHKEY_NONE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x4|*/ struct OsNet::NETSELSOCK* ptr;

  // base classes -----------------------------------
  // baseclass class TSHashObject<OsNet::NETSELSOCKPTR,HASHKEY_NONE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall NETSELSOCKPTR(struct OsNet::NETSELSOCKPTR&);
  void __thiscall OsNet::NETSELSOCKPTR::NETSELSOCKPTR();
  struct OsNet::NETSELSOCKPTR& __thiscall operator=(struct OsNet::NETSELSOCKPTR&);
  void __thiscall ~NETSELSOCKPTR();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x1c>

struct ThreadData : class TSLinkedNode<ThreadData>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long m_threadId;
  /*<thisrel this+0xc>*/ /*|0x4|*/ void* m_threadHandle;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int m_enabled;
  /*<thisrel this+0x14>*/ /*|0x4|*/ struct ContextData* m_contextData;
  /*<thisrel this+0x18>*/ /*|0x1800|*/ struct ThreadStack m_funcStack[512];
  /*<thisrel this+0x1818>*/ /*|0x4|*/ unsigned long m_funcStackIndex;
  /*<thisrel this+0x181c>*/ /*|0x80|*/ char m_title[128];

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<ThreadData>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ThreadData(struct ThreadData&);
  void __thiscall ThreadData();
  struct ThreadData& __thiscall operator=(struct ThreadData&);
  void __thiscall ~ThreadData();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x189c>

struct ContextData : class TSLinkedNode<ContextData>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct ThreadData* m_threadData;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long m_checksum;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long m_turnId;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long m_turnIdComplete;
  /*<thisrel this+0x18>*/ /*|0x4000|*/ struct ContextTurn m_turnBuffer[1024];
  /*<thisrel this+0x4018>*/ /*|0x4|*/ unsigned long m_turnBufferHead;
  /*<thisrel this+0x401c>*/ /*|0x4|*/ unsigned long m_turnBufferTail;
  /*<thisrel this+0x4020>*/ /*|0x500|*/ struct ContextCall m_callBuffer[256];
  /*<thisrel this+0x4520>*/ /*|0x4|*/ unsigned long m_callBufferHead;
  /*<thisrel this+0x4524>*/ /*|0x4|*/ unsigned long m_callBufferTail;
  /*<thisrel this+0x4528>*/ /*|0x80|*/ char m_title[128];

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<ContextData>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ContextData(struct ContextData&);
  void __thiscall ContextData();
  struct ContextData& __thiscall operator=(struct ContextData&);
  void __thiscall ~ContextData();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x45a8>

struct HOSFILE__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct OSFILETIME {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ unsigned __int64 m_value;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct RemoveDirectoryRecurseData {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ char* path;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long flags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct OS_FILE_DATA {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long size;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long flags;
  /*<thisrel this+0x8>*/ /*|0x104|*/ char fileName[260];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10c>

struct __unnamed_e5_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long m_id;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct HINSTANCE__* m_handle;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct HIMC__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct tagCANDIDATELIST {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwStyle;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long dwCount;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long dwSelection;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long dwPageStart;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long dwPageSize;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long dwOffset[1];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c>

struct OSSYSTEMTIME {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short year;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short month;
  /*<thisrel this+0x4>*/ /*|0x2|*/ unsigned short dayOfWeek;
  /*<thisrel this+0x6>*/ /*|0x2|*/ unsigned short day;
  /*<thisrel this+0x8>*/ /*|0x2|*/ unsigned short hour;
  /*<thisrel this+0xa>*/ /*|0x2|*/ unsigned short minute;
  /*<thisrel this+0xc>*/ /*|0x2|*/ unsigned short second;
  /*<thisrel this+0xe>*/ /*|0x2|*/ unsigned short milliseconds;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct OsTimeManager::TimeSnapshot {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ __int64 rdtsc;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long tickCount;
  /*<thisrel this+0x10>*/ /*|0x8|*/ union _LARGE_INTEGER qperfCount;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct sNCodeToItemCode::OsGuiCodeTranslation {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x0>

struct OsGuiCallbackInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ void  (function*)(struct OsGuiCallbackParams&);
  /*<thisrel this+0x4>*/ /*|0x4|*/ void* userParam;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct tagINITCOMMONCONTROLSEX {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwICC;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct OsGuiCallbackParams {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int type;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int subType;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int code;
  /*<thisrel this+0xc>*/ /*|0x4|*/ void* user;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct OsGuiMenuHotkey {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int keyID;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int modKeyID;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct tagMENUITEMINFOA {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int cbSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int fMask;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int fType;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int fState;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int wID;
  /*<thisrel this+0x14>*/ /*|0x4|*/ struct HMENU__* hSubMenu;
  /*<thisrel this+0x18>*/ /*|0x4|*/ struct HBITMAP__* hbmpChecked;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ struct HBITMAP__* hbmpUnchecked;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned long dwItemData;
  /*<thisrel this+0x24>*/ /*|0x4|*/ char* dwTypeData;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned int cch;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ struct HBITMAP__* hbmpItem;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x30>

struct tagWINDOWINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long cbSize;
  /*<thisrel this+0x4>*/ /*|0x10|*/ struct tagRECT rcWindow;
  /*<thisrel this+0x14>*/ /*|0x10|*/ struct tagRECT rcClient;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned long dwStyle;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned long dwExStyle;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ unsigned long dwWindowStatus;
  /*<thisrel this+0x30>*/ /*|0x4|*/ unsigned int cxWindowBorders;
  /*<thisrel this+0x34>*/ /*|0x4|*/ unsigned int cyWindowBorders;
  /*<thisrel this+0x38>*/ /*|0x2|*/ unsigned short atomWindowType;
  /*<thisrel this+0x3a>*/ /*|0x2|*/ unsigned short wCreatorVersion;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x3c>

struct tagTRACKMOUSEEVENT {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long cbSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct HWND__* hwndTrack;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long dwHoverTime;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct tagTOOLINFOA {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int cbSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int uFlags;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct HWND__* hwnd;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int uId;
  /*<thisrel this+0x10>*/ /*|0x10|*/ struct tagRECT rect;
  /*<thisrel this+0x20>*/ /*|0x4|*/ struct HINSTANCE__* hinst;
  /*<thisrel this+0x24>*/ /*|0x4|*/ char* lpszText;
  /*<thisrel this+0x28>*/ /*|0x4|*/ long lParam;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x2c>

struct tagRGBQUAD {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char rgbBlue;
  /*<thisrel this+0x1>*/ /*|0x1|*/ unsigned char rgbGreen;
  /*<thisrel this+0x2>*/ /*|0x1|*/ unsigned char rgbRed;
  /*<thisrel this+0x3>*/ /*|0x1|*/ unsigned char rgbReserved;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct tagBITMAPINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x28|*/ struct tagBITMAPINFOHEADER bmiHeader;
  /*<thisrel this+0x28>*/ /*|0x4|*/ struct tagRGBQUAD bmiColors[1];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x2c>

struct _TREEITEM {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x0>

struct tagTVITEMEXA {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int mask;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct _TREEITEM* hItem;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int state;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int stateMask;
  /*<thisrel this+0x10>*/ /*|0x4|*/ char* pszText;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int cchTextMax;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int iImage;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int iSelectedImage;
  /*<thisrel this+0x20>*/ /*|0x4|*/ int cChildren;
  /*<thisrel this+0x24>*/ /*|0x4|*/ long lParam;
  /*<thisrel this+0x28>*/ /*|0x4|*/ int iIntegral;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x2c>

struct tagTVITEMA {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int mask;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct _TREEITEM* hItem;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int state;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int stateMask;
  /*<thisrel this+0x10>*/ /*|0x4|*/ char* pszText;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int cchTextMax;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int iImage;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int iSelectedImage;
  /*<thisrel this+0x20>*/ /*|0x4|*/ int cChildren;
  /*<thisrel this+0x24>*/ /*|0x4|*/ long lParam;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x28>

struct tagTVINSERTSTRUCTA {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct _TREEITEM* hParent;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct _TREEITEM* hInsertAfter;
  /*<thisrel this+0x8>*/ /*|0x2c|*/ struct tagTVITEMEXA itemex;
  /*<thisrel this+0x8>*/ /*|0x28|*/ struct tagTVITEMA item;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x34>

struct OsGuiTVSelectionInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int numSelected;
  /*<thisrel this+0x4>*/ /*|0x4|*/ void* firstSelection;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int flags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct OsGuiTVSIResults {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xc|*/ struct OsGuiTVSelectionInfo info;
  /*<thisrel this+0xc>*/ /*|0x4|*/ void* lastSelected;
  /*<thisrel this+0x10>*/ /*|0x4|*/ void* lastProcessed;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct tagTVHITTESTINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ struct tagPOINT pt;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int flags;
  /*<thisrel this+0xc>*/ /*|0x4|*/ struct _TREEITEM* hItem;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct OsGuiTVDDInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ class COsTreeView* treeView;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int action;
  /*<thisrel this+0x8>*/ /*|0x4|*/ void* dragItem;
  /*<thisrel this+0xc>*/ /*|0x4|*/ void* targItem;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int targX;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int targY;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct OsGuiTreeItemParams {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int used;
  /*<thisrel this+0x4>*/ /*|0x4|*/ class NTempest::CImVector color;
  /*<thisrel this+0x8>*/ /*|0x4|*/ void* user;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall OsGuiTreeItemParams(struct OsGuiTreeItemParams&);
  void __thiscall OsGuiTreeItemParams::OsGuiTreeItemParams();
  struct OsGuiTreeItemParams& __thiscall operator=(struct OsGuiTreeItemParams&);
  void __thiscall ~OsGuiTreeItemParams();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xc>

struct HPEN__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct HRGN__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct tagTCITEMA {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int mask;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwState;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long dwStateMask;
  /*<thisrel this+0xc>*/ /*|0x4|*/ char* pszText;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int cchTextMax;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int iImage;
  /*<thisrel this+0x18>*/ /*|0x4|*/ long lParam;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c>

struct tagLVCOLUMNA {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int mask;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int fmt;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int cx;
  /*<thisrel this+0xc>*/ /*|0x4|*/ char* pszText;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int cchTextMax;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int iSubItem;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int iImage;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int iOrder;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct tagLVITEMA {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int mask;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int iItem;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int iSubItem;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int state;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int stateMask;
  /*<thisrel this+0x14>*/ /*|0x4|*/ char* pszText;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int cchTextMax;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int iImage;
  /*<thisrel this+0x20>*/ /*|0x4|*/ long lParam;
  /*<thisrel this+0x24>*/ /*|0x4|*/ int iIndent;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x28>

struct _TBBUTTON {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int iBitmap;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int idCommand;
  /*<thisrel this+0x8>*/ /*|0x1|*/ unsigned char fsState;
  /*<thisrel this+0x9>*/ /*|0x1|*/ unsigned char fsStyle;
  /*<thisrel this+0xa>*/ /*|0x2|*/ unsigned char bReserved[2];
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long dwData;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int iString;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct TBBUTTONINFOA {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int cbSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwMask;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int idCommand;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int iImage;
  /*<thisrel this+0x10>*/ /*|0x1|*/ unsigned char fsState;
  /*<thisrel this+0x11>*/ /*|0x1|*/ unsigned char fsStyle;
  /*<thisrel this+0x12>*/ /*|0x2|*/ unsigned short cx;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long lParam;
  /*<thisrel this+0x18>*/ /*|0x4|*/ char* pszText;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int cchText;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct tagSCROLLINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int cbSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int fMask;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int nMin;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int nMax;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int nPage;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int nPos;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int nTrackPos;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c>

struct tagWINDOWPLACEMENT {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int length;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int flags;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int showCmd;
  /*<thisrel this+0xc>*/ /*|0x8|*/ struct tagPOINT ptMinPosition;
  /*<thisrel this+0x14>*/ /*|0x8|*/ struct tagPOINT ptMaxPosition;
  /*<thisrel this+0x1c>*/ /*|0x10|*/ struct tagRECT rcNormalPosition;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x2c>

struct __unnamed_e6_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ float  (func*)(enum ACTIVITY);
  /*<thisrel this+0x4>*/ /*|0x4|*/ char* title;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct CGxStringBatch : class TSLinkedNode<CGxStringBatch>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x2c|*/ class TSHashTable<BATCHEDRENDERFONTDESC,HASHKEY_PTR> m_fontBatch;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<CGxStringBatch>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CGxStringBatch::~CGxStringBatch();
  void __thiscall Clear();
  void __thiscall CGxStringBatch::AddString(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct CGxString* string);
  void __thiscall CGxStringBatch::RenderBatch();
  void __thiscall CGxStringBatch(struct CGxStringBatch&);
  void __thiscall CGxStringBatch();
  struct CGxStringBatch& __thiscall operator=(struct CGxStringBatch&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x34>

struct CGxFont : class TSLinkedNode<CGxFont>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0xc|*/ class TSExplicitList<CGxString,8> m_strings;
  /*<thisrel this+0x14>*/ /*|0x8|*/ class TSLink<CGxFont> m_batchedRenderLink;
  /*<thisrel this+0x1c>*/ /*|0x2c|*/ class TSHashTable<GLYPHBITMAPDATA,HASHKEY_NONE> m_glyphBitmapData;
  /*<thisrel this+0x48>*/ /*|0x2c|*/ class TSHashTable<CHARCODEDESC,HASHKEY_NONE> m_activeCharacters;
  /*<thisrel this+0x74>*/ /*|0x2c|*/ class TSHashTable<KERNNODE,KERNINGHASHKEY> m_kernInfo;
  /*<thisrel this+0xa0>*/ /*|0xc|*/ class TSExplicitList<CHARCODEDESC,32> m_activeCharacterCache;
  /*<thisrel this+0xac>*/ /*|0x4|*/ struct HFACE__* m_faceHandle;
  /*<thisrel this+0xb0>*/ /*|0x4|*/ unsigned int m_pixelSize;
  /*<thisrel this+0xb4>*/ /*|0x4|*/ unsigned int m_rasterPixelSize;
  /*<thisrel this+0xb8>*/ /*|0x104|*/ char m_fontName[260];
  /*<thisrel this+0x1bc>*/ /*|0x4|*/ unsigned int m_cellHeight;
  /*<thisrel this+0x1c0>*/ /*|0x4|*/ unsigned int m_baseline;
  /*<thisrel this+0x1c4>*/ /*|0x4|*/ unsigned int m_flags;
  /*<thisrel this+0x1c8>*/ /*|0x4|*/ float m_requestedFontHeight;
  /*<thisrel this+0x1cc>*/ /*|0x4|*/ float m_currentFontHeight;
  /*<thisrel this+0x1d0>*/ /*|0x4|*/ float m_pixelsPerUnit;
  /*<thisrel this+0x1d4>*/ /*|0x120|*/ struct TEXTURECACHE m_textureCache[8];

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<CGxFont>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CGxFont(struct CGxFont&);
  void __thiscall CGxFont::CGxFont();
  void __thiscall CGxFont::~CGxFont();
  void __thiscall CGxFont::Clear();
  void __thiscall CGxFont::ClearGlyphs();
  void __thiscall CGxFont::UpdateTextures();
  struct CHARCODEDESC* __thiscall CGxFont::NewCodeDesc(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int code);
  int __thiscall CGxFont::GetGlyphData(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct GLYPHBITMAPDATA* glyphData, /*<regrel ebp+0xc>*/ /*|0x4|*/ struct FT_FaceRec_* face, /*<regrel ebp+0x10>*/ /*|0x4|*/ unsigned int code);
  void __thiscall CGxFont::RegisterEvictNotice(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int pageNumber);
  int __thiscall CGxFont::CheckStringGlyphs(/*<regrel ebp+0x8>*/ /*|0x4|*/ char* string);
  int __thiscall CGxFont::UpdateDimensions();
  int __thiscall CGxFont::Initialize(/*<regrel ebp+0x8>*/ /*|0x4|*/ char* name, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int newFlags, /*<regrel ebp+0x10>*/ /*|0x4|*/ float fontHeight);
  unsigned int __thiscall CGxFont::GetNumCurrentTextures();
  float __thiscall CGxFont::ComputeStep(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int currentCode, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int nextCode);
  float __thiscall CGxFont::ComputeStepFixedWidth(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int currentCode, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int nextCode);
  float __thiscall CGxFont::GetCharAdvance(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int code);
  void __thiscall CGxFont::HandleScreenSizeChange();
  char* __thiscall CGxFont::GetName();
  unsigned int __thiscall GetFlags();
  struct CGxFont& __thiscall operator=(struct CGxFont&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x2f4>

struct HSHEAP__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct _SMEMHEAPDETAILS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long size;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct HSHEAP__* handle;
  /*<thisrel this+0x8>*/ /*|0x104|*/ char filename[260];
  /*<thisrel this+0x10c>*/ /*|0x4|*/ int linenumber;
  /*<thisrel this+0x110>*/ /*|0x4|*/ unsigned long regions;
  /*<thisrel this+0x114>*/ /*|0x4|*/ unsigned long committedbytes;
  /*<thisrel this+0x118>*/ /*|0x4|*/ unsigned long reservedbytes;
  /*<thisrel this+0x11c>*/ /*|0x4|*/ unsigned long maximumsize;
  /*<thisrel this+0x120>*/ /*|0x4|*/ unsigned long allocatedblocks;
  /*<thisrel this+0x124>*/ /*|0x4|*/ unsigned long allocatedbytes;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x128>

struct IPerfRemoteLoggingIni::__unnamed_e7_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char signature;
  /*<thisrel this+0x1>*/ /*|0x1|*/ unsigned char message;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short len;
  /*<thisrel this+0x4>*/ /*|0x100|*/ char strings[256];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x104>

struct SimplePerfHdr {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char signature;
  /*<thisrel this+0x1>*/ /*|0x1|*/ unsigned char message;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short len;
  /*<thisrel this+0x4>*/ /*|0x8|*/ __int64 timestamp;
  /*<thisrel this+0xc>*/ /*|0x8|*/ __int64 frame;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long updateCount;
  /*<thisrel this+0x18>*/ /*|0x2|*/ unsigned short id;
  /*<thisrel this+0x1a>*/ /*|0x2|*/ unsigned short size;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c>

struct IPerfRemoteQueuePerfData::__unnamed_e8_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long msgSize;
  /*<thisrel this+0x4>*/ /*|0x1c|*/ struct SimplePerfHdr h;
  /*<thisrel this+0x20>*/ /*|0x50|*/ float perfTime[20];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x70>

struct IPerfRemoteQueuePerfLabels::__unnamed_e9_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long msgSize;
  /*<thisrel this+0x4>*/ /*|0x1c|*/ struct SimplePerfHdr h;
  /*<thisrel this+0x20>*/ /*|0x400|*/ char labels[1024];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x420>

struct IPerfRemoteQueueLogString::__unnamed_ea_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long msgSize;
  /*<thisrel this+0x4>*/ /*|0x1c|*/ struct SimplePerfHdr h;
  /*<thisrel this+0x20>*/ /*|0x100|*/ char prompt[256];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x120>

struct HSRGN__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct TGA32Pixel {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char b;
  /*<thisrel this+0x1>*/ /*|0x1|*/ unsigned char g;
  /*<thisrel this+0x2>*/ /*|0x1|*/ unsigned char r;
  /*<thisrel this+0x3>*/ /*|0x1|*/ unsigned char a;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall TGA32Pixel(unsigned int);
  void __thiscall TGA32Pixel(unsigned char, unsigned char, unsigned char, unsigned char);
  void __thiscall TGA32Pixel();
  unsigned int __thiscall operator unsigned int();

  // virtual functions ------------------------------
};
// <size 0x4>

struct TGAHeader {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char bIDLength;
  /*<thisrel this+0x1>*/ /*|0x1|*/ unsigned char bColorMapType;
  /*<thisrel this+0x2>*/ /*|0x1|*/ unsigned char bImageType;
  /*<thisrel this+0x3>*/ /*|0x2|*/ unsigned short wColorMapStartIndex;
  /*<thisrel this+0x5>*/ /*|0x2|*/ unsigned short wColorMapEntries;
  /*<thisrel this+0x7>*/ /*|0x1|*/ unsigned char bColorMapEntrySize;
  /*<thisrel this+0x8>*/ /*|0x2|*/ unsigned short wXOrigin;
  /*<thisrel this+0xa>*/ /*|0x2|*/ unsigned short wYOrigin;
  /*<thisrel this+0xc>*/ /*|0x2|*/ unsigned short wWidth;
  /*<thisrel this+0xe>*/ /*|0x2|*/ unsigned short wHeight;
  /*<thisrel this+0x10>*/ /*|0x1|*/ unsigned char bPixelDepth;
  /*<thisrel this+0x11>*/ /*|0x1|*/ unsigned char bImageDescriptor;
  /*<thisrel this+0x11>*/ /*|0x1|*/ struct TGAHeader::__unnamed::__unnamed_eb_ Desc;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x12>

struct TGAFooter {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwExtensionOffset;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwDeveloperOffset;
  /*<thisrel this+0x8>*/ /*|0x12|*/ char szSigniture[18];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1a>

struct ProfileInternal::STRINGBLOCK : class TSLinkedNode<ProfileInternal::STRINGBLOCK>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long m_refCount;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long m_dataSize;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long m_dataUsed;
  /*<thisrel this+0x14>*/ /*|0x4|*/ char m_data[4];

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<ProfileInternal::STRINGBLOCK>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------
  static struct ProfileInternal::STRINGBLOCK* __fastcall ProfileInternal::STRINGBLOCK::AllocBlock(/*<register ecx>*/ /*|0x4|*/ unsigned long chars);
  static char* __fastcall ProfileInternal::STRINGBLOCK::AllocString(/*<register ecx>*/ /*|0x4|*/ class TSList<ProfileInternal::STRINGBLOCK,TSGetLink<ProfileInternal::STRINGBLOCK> >& stringBlockList, /*<register edx>*/ /*|0x4|*/ char* string, /*<regrel ebp+0x8>*/ /*|0x4|*/ int inSitu);
  static void __fastcall ProfileInternal::STRINGBLOCK::FreeString(/*<register ecx>*/ /*|0x4|*/ class TSList<ProfileInternal::STRINGBLOCK,TSGetLink<ProfileInternal::STRINGBLOCK> >& stringBlockList, /*<register edx>*/ /*|0x4|*/ char* string);

  // non-virtual functions --------------------------
  int __thiscall Contains(char*);
  void __thiscall STRINGBLOCK(struct ProfileInternal::STRINGBLOCK&);
  void __thiscall STRINGBLOCK();
  struct ProfileInternal::STRINGBLOCK& __thiscall operator=(struct ProfileInternal::STRINGBLOCK&);
  void __thiscall ~STRINGBLOCK();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x18>

struct ProfileInternal::PROFILE : class CHandleObject  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x2c|*/ class TSHashTable<ProfileInternal::SECTION,HASHKEY_CONSTSTRI> sectionTable;
  /*<thisrel this+0x34>*/ /*|0xc|*/ class TSList<ProfileInternal::STRINGBLOCK,TSGetLink<ProfileInternal::STRINGBLOCK> > stringBlockList;

  // base classes -----------------------------------
  // baseclass class CHandleObject
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall PROFILE(struct ProfileInternal::PROFILE&);
  void __thiscall PROFILE();
  struct ProfileInternal::PROFILE& __thiscall operator=(struct ProfileInternal::PROFILE&);
  void __thiscall __local_vftable_ctor_closure();

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ void __thiscall ~PROFILE();
  virtual /*<vtableoff 0x0>*/ void* __thiscall __vecDelDtor(unsigned int);
};
// <size 0x40>

struct ProfileInternal::SECTION : class TSHashObject<ProfileInternal::SECTION,HASHKEY_CONSTSTRI>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x2c|*/ class TSHashTable<ProfileInternal::KEYVALUE,HASHKEY_CONSTSTRI> keyTable;

  // base classes -----------------------------------
  // baseclass class TSHashObject<ProfileInternal::SECTION,HASHKEY_CONSTSTRI>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ~SECTION();
  void __thiscall SECTION(struct ProfileInternal::SECTION&);
  void __thiscall SECTION();
  struct ProfileInternal::SECTION& __thiscall operator=(struct ProfileInternal::SECTION&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x44>

struct ProfileInternal::KEYVALUE : class TSHashObject<ProfileInternal::KEYVALUE,HASHKEY_CONSTSTRI>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x14|*/ class TSGrowableArray<char *> values;

  // base classes -----------------------------------
  // baseclass class TSHashObject<ProfileInternal::KEYVALUE,HASHKEY_CONSTSTRI>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall KEYVALUE(struct ProfileInternal::KEYVALUE&);
  void __thiscall KEYVALUE();
  struct ProfileInternal::KEYVALUE& __thiscall operator=(struct ProfileInternal::KEYVALUE&);
  void __thiscall ~KEYVALUE();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x2c>

struct FONTHASHOBJ : class TSHashObject<FONTHASHOBJ,HASHKEY_STR>,  class CHandleObject  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x20>*/ /*|0x4|*/ struct CGxFont* font;

  // base classes -----------------------------------
  // baseclass class TSHashObject<FONTHASHOBJ,HASHKEY_STR>
  // <base data offset+0x8>

  // baseclass class CHandleObject
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall FONTHASHOBJ(struct FONTHASHOBJ&);
  void __thiscall FONTHASHOBJ();
  struct FONTHASHOBJ& __thiscall operator=(struct FONTHASHOBJ&);
  void __thiscall __local_vftable_ctor_closure();

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ void __thiscall ~FONTHASHOBJ();
  virtual /*<vtableoff 0x0>*/ void* __thiscall __vecDelDtor(unsigned int);
};
// <size 0x24>

struct TEXTBLOCK : class CHandleObject  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct CGxString* string;

  // base classes -----------------------------------
  // baseclass class CHandleObject
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall TEXTBLOCK(struct TEXTBLOCK&);
  void __thiscall TEXTBLOCK();
  struct TEXTBLOCK& __thiscall operator=(struct TEXTBLOCK&);
  void __thiscall __local_vftable_ctor_closure();

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ void __thiscall ~TEXTBLOCK();
  virtual /*<vtableoff 0x0>*/ void* __thiscall __vecDelDtor(unsigned int);
};
// <size 0xc>

struct HDATAMGR__ : struct HOBJECT__  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x4>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------
  // baseclass struct HOBJECT__
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct UpdateInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ void  (updateFcn*)(float, void*, void*);
  /*<thisrel this+0x4>*/ /*|0x4|*/ void* updateData;
  /*<thisrel this+0x8>*/ /*|0x4|*/ float updatePriority;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall UpdateInfo();

  // virtual functions ------------------------------
};
// <size 0xc>

struct CSortableParticleRecord {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ float dist;
  /*<thisrel this+0x4>*/ /*|0x4|*/ class CParticle2* p;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------
  static unsigned char __fastcall HasHigherPriority(struct CSortableParticleRecord&, struct CSortableParticleRecord&);

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct CGxVertexPNCT0 {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xc|*/ class NTempest::C3Vector p;
  /*<thisrel this+0xc>*/ /*|0xc|*/ class NTempest::C3Vector n;
  /*<thisrel this+0x18>*/ /*|0x4|*/ class NTempest::CImVector c;
  /*<thisrel this+0x1c>*/ /*|0x8|*/ class NTempest::C2Vector tc[1];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CGxVertexPNCT0(struct CGxVertexPNCT0&);
  void __thiscall CGxVertexPNCT0();
  struct CGxVertexPNCT0& __thiscall operator=(struct CGxVertexPNCT0&);
  void __thiscall ~CGxVertexPNCT0();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x24>

struct CGxBufCommand {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x3c|*/ struct CGxBufOp vertex;
  /*<thisrel this+0x3c>*/ /*|0x3c|*/ struct CGxBufOp index;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CGxBufCommand();

  // virtual functions ------------------------------
};
// <size 0x78>

struct CGxBuf {

  // static data ------------------------------------
  static /*<rva 0x40b08c>*/ /*|0x4|*/ unsigned int BASE_NONE;

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ class TSLink<CGxBuf> linkGx;
  /*<thisrel this+0x8>*/ /*|0x8|*/ class TSLink<CGxBuf> linkVB;
  /*<thisrel this+0x10>*/ /*|0x8|*/ class TSLink<CGxBuf> linkIB;
  /*<thisrel this+0x18>*/ /*|0x4|*/ enum EGxBufWriteFreq m_writeFreq;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ enum EGxVertexBufferFormat m_vbFormat;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned int m_numVertices;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned int m_numIndices;
  /*<thisrel this+0x28>*/ /*|0x4|*/ void  (m_userCallback*)(struct CGxBufCommand&, struct CGxBuf*);
  /*<thisrel this+0x2c>*/ /*|0x4|*/ void* m_userArg;
  /*<thisrel this+0x30>*/ /*|0x4|*/ unsigned int m_vertexBase;
  /*<thisrel this+0x34>*/ /*|0x4|*/ unsigned int m_indexBase;
  /*<thisrel this+0x38>*/ /*|0x4|*/ enum CGxBuf::Status m_vertexStatus;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ enum CGxBuf::Status m_indexStatus;
  /*<thisrel this+0x40>*/ /*|0x4|*/ unsigned int writeFrameTag;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CGxBuf::CGxBuf();
  void __thiscall CGxBuf(struct CGxBuf&);
  struct CGxBuf& __thiscall operator=(struct CGxBuf&);
  void __thiscall CGxBuf::Invalidate(/*<regrel ebp+0x8>*/ /*|0x4|*/ enum CGxBuf::Status vertexStatus, /*<regrel ebp+0xc>*/ /*|0x4|*/ enum CGxBuf::Status indexStatus);
  unsigned int __thiscall VertexCount();
  unsigned int __thiscall IndexCount();
  void __thiscall CGxBuf::CountSet(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int numVertices, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int numIndices);
  void* __thiscall UserArg();
  void __thiscall UserArgSet(void*);
  void  (*)(struct CGxBufCommand&, struct CGxBuf*) __thiscall UserCallback();
  void __thiscall UserCallbackSet(void  (*)(struct CGxBufCommand&, struct CGxBuf*));
  void __thiscall ~CGxBuf();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x44>

struct CGxBatch {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ enum EGxPrim m_primType;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int m_count;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int m_start;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int m_minIndex;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int m_maxIndex;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CGxBatch::CGxBatch(/*<regrel ebp+0x8>*/ /*|0x4|*/ enum EGxPrim prim, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int count, /*<regrel ebp+0x10>*/ /*|0x4|*/ unsigned int start, /*<regrel ebp+0x14>*/ /*|0x4|*/ int minIndex, /*<regrel ebp+0x18>*/ /*|0x4|*/ int maxIndex);
  void __thiscall CGxBatch();

  // virtual functions ------------------------------
};
// <size 0x14>

struct CRibbonVertex {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xc|*/ class NTempest::C3Vector pos;
  /*<thisrel this+0xc>*/ /*|0x8|*/ class NTempest::C2Vector texCoord;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CRibbonVertex();
  void __thiscall CRibbonVertex::~CRibbonVertex();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x14>

struct CTextureHash : class TSHashObject<CTextureHash,HASHKEY_TEXTUREFILE>,  struct CTextureItem  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass class TSHashObject<CTextureHash,HASHKEY_TEXTUREFILE>
  // <base data offset+0x0>

  // baseclass struct CTextureItem
  // <base data offset+0x1c>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CTextureHash(struct CTextureHash&);
  void __thiscall CTextureHash::CTextureHash();
  struct CTextureHash& __thiscall operator=(struct CTextureHash&);
  void __thiscall CTextureHash::~CTextureHash();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x30>

struct CSolidTextureHash : class TSHashObject<CSolidTextureHash,HASHKEY_NONE>,  struct CTextureItem  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass class TSHashObject<CSolidTextureHash,HASHKEY_NONE>
  // <base data offset+0x0>

  // baseclass struct CTextureItem
  // <base data offset+0x18>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CSolidTextureHash(struct CSolidTextureHash&);
  void __thiscall CSolidTextureHash::CSolidTextureHash();
  struct CSolidTextureHash& __thiscall operator=(struct CSolidTextureHash&);
  void __thiscall CSolidTextureHash::~CSolidTextureHash();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x2c>

struct CGxTexParmsEx {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ enum EGxTexTarget target;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int width;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int height;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int depth;
  /*<thisrel this+0x10>*/ /*|0x4|*/ enum EGxTexFormat format;
  /*<thisrel this+0x14>*/ /*|0x4|*/ enum EGxTexFormat dataFormat;
  /*<thisrel this+0x18>*/ /*|0x4|*/ struct CGxTexFlags flags;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ void* userArg;
  /*<thisrel this+0x20>*/ /*|0x4|*/ void  (userFunc*)(enum EGxTexCommand, unsigned int, unsigned int, unsigned int, unsigned int, void*, unsigned int&, void*&);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CGxTexParmsEx();

  // virtual functions ------------------------------
};
// <size 0x24>

struct HCOLORLIST__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct BlpPalPixel {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char b;
  /*<thisrel this+0x1>*/ /*|0x1|*/ unsigned char g;
  /*<thisrel this+0x2>*/ /*|0x1|*/ unsigned char r;
  /*<thisrel this+0x3>*/ /*|0x1|*/ unsigned char pad;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct BLPHeader {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long magic;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long formatVersion;
  /*<thisrel this+0x8>*/ /*|0x1|*/ unsigned char colorEncoding;
  /*<thisrel this+0x9>*/ /*|0x1|*/ unsigned char alphaSize;
  /*<thisrel this+0xa>*/ /*|0x1|*/ unsigned char preferredFormat;
  /*<thisrel this+0xb>*/ /*|0x1|*/ unsigned char hasMips;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long width;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long height;
  /*<thisrel this+0x14>*/ /*|0x40|*/ unsigned long mipOffsets[16];
  /*<thisrel this+0x54>*/ /*|0x40|*/ unsigned long mipSizes[16];
  /*<thisrel this+0x94>*/ /*|0x400|*/ union BLPHeader::__unnamed_ec_ extended;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x494>

struct HCOLORMAP__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct C4Pixel {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char b;
  /*<thisrel this+0x1>*/ /*|0x1|*/ unsigned char g;
  /*<thisrel this+0x2>*/ /*|0x1|*/ unsigned char r;
  /*<thisrel this+0x3>*/ /*|0x1|*/ unsigned char a;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall C4Pixel(unsigned int);
  void __thiscall C4Pixel(unsigned char, unsigned char, unsigned char, unsigned char);
  void __thiscall C4Pixel();
  unsigned int __thiscall BitDepth();
  unsigned int __thiscall operator unsigned int();

  // virtual functions ------------------------------
};
// <size 0x4>

struct CTextureItem {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct HTEXTURE__* texture;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int fromColor;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long timeStamp;
  /*<thisrel this+0xc>*/ /*|0x8|*/ class TSLink<CTextureItem> link;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CTextureItem(struct CTextureItem&);
  void __thiscall CTextureItem(int);
  void __thiscall CTextureItem::~CTextureItem();
  struct CTextureItem& __thiscall operator=(struct CTextureItem&);
  void __thiscall __dflt_ctor_closure();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x14>

struct MSGBUFFER : class TSLinkedNode<MSGBUFFER>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ char* string;
  /*<thisrel this+0xc>*/ /*|0x4|*/ float timeVisible;
  /*<thisrel this+0x10>*/ /*|0x4|*/ enum SYSMSG_TYPE severity;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned int categoryMask;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<MSGBUFFER>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MSGBUFFER(struct MSGBUFFER&);
  void __thiscall MSGBUFFER();
  void __thiscall ~MSGBUFFER();
  void __thiscall MSGBUFFER::SetInfo(/*<regrel ebp+0x8>*/ /*|0x4|*/ char* newString, /*<regrel ebp+0xc>*/ /*|0x4|*/ enum SYSMSG_TYPE newSeverity, /*<regrel ebp+0x10>*/ /*|0x4|*/ unsigned int categories);
  struct MSGBUFFER& __thiscall operator=(struct MSGBUFFER&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x18>

struct __unnamed_ed_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char red;
  /*<thisrel this+0x1>*/ /*|0x1|*/ unsigned char green;
  /*<thisrel this+0x2>*/ /*|0x1|*/ unsigned char blue;
  /*<thisrel this+0x4>*/ /*|0x4|*/ float timeVisible;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct MACRODESC {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x90|*/ unsigned int soundID[12][3];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MACRODESC();

  // virtual functions ------------------------------
};
// <size 0x90>

struct CHUNKHASHOBJ : class TSHashObject<CHUNKHASHOBJ,HASHKEY_STRI>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x80|*/ char zoneName[128];
  /*<thisrel this+0x98>*/ /*|0x80|*/ char subZoneName[128];
  /*<thisrel this+0x118>*/ /*|0x4|*/ unsigned int chunkNumber;
  /*<thisrel this+0x11c>*/ /*|0x78|*/ struct _FSOUND_REVERB_PROPERTIES desc;

  // base classes -----------------------------------
  // baseclass class TSHashObject<CHUNKHASHOBJ,HASHKEY_STRI>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CHUNKHASHOBJ(struct CHUNKHASHOBJ&);
  void __thiscall CHUNKHASHOBJ();
  void __thiscall CHUNKHASHOBJ::DumpInfo(/*<regrel ebp+0x8>*/ /*|0x4|*/ int summary, /*<regrel ebp+0xc>*/ /*|0x4|*/ int newlyCreated);
  void __thiscall CHUNKHASHOBJ::PrintInfo(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct _iobuf* outFile);
  struct CHUNKHASHOBJ& __thiscall operator=(struct CHUNKHASHOBJ&);
  void __thiscall ~CHUNKHASHOBJ();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x194>

struct OUTDOORSCHUNKHASHOBJ : class TSHashObject<OUTDOORSCHUNKHASHOBJ,AREAHASHKEY>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned int chunkNumber;
  /*<thisrel this+0x24>*/ /*|0x78|*/ struct _FSOUND_REVERB_PROPERTIES desc;
  /*<thisrel this+0x9c>*/ /*|0x4|*/ unsigned int continentID;
  /*<thisrel this+0xa0>*/ /*|0x4|*/ unsigned int areaID;

  // base classes -----------------------------------
  // baseclass class TSHashObject<OUTDOORSCHUNKHASHOBJ,AREAHASHKEY>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall OUTDOORSCHUNKHASHOBJ::DumpInfo(/*<regrel ebp+0x8>*/ /*|0x4|*/ int summary, /*<regrel ebp+0xc>*/ /*|0x4|*/ int newlyCreated);
  void __thiscall OUTDOORSCHUNKHASHOBJ::PrintInfo(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct _iobuf* outFile);
  void __thiscall OUTDOORSCHUNKHASHOBJ(struct OUTDOORSCHUNKHASHOBJ&);
  void __thiscall OUTDOORSCHUNKHASHOBJ();
  struct OUTDOORSCHUNKHASHOBJ& __thiscall operator=(struct OUTDOORSCHUNKHASHOBJ&);
  void __thiscall ~OUTDOORSCHUNKHASHOBJ();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xa4>

struct LIQUIDINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct Sound* m_sound;
  /*<thisrel this+0x4>*/ /*|0xc|*/ unsigned int m_subTypes[3];
  /*<thisrel this+0x10>*/ /*|0xc|*/ class SoundEntriesRec* m_soundRecords[3];
  /*<thisrel this+0x1c>*/ /*|0x24|*/ class NTempest::C3Vector m_positionOffset[3];
  /*<thisrel this+0x40>*/ /*|0x4|*/ class SoundEntriesRec* m_currentRecord;
  /*<thisrel this+0x44>*/ /*|0x4|*/ unsigned int m_currentPlayingSound;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall InitSoundID(unsigned int, unsigned int);
  void __thiscall LIQUIDINFO::StartSound(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int subType, /*<regrel ebp+0xc>*/ /*|0x4|*/ class NTempest::C3Vector& listenerPos);
  void __thiscall LIQUIDINFO::StopSound(/*<regrel ebp+0x8>*/ /*|0x4|*/ int immediate);
  int __thiscall LIQUIDINFO::Update(/*<regrel ebp+0x8>*/ /*|0x4|*/ class NTempest::C3Vector& listenerPos);
  void __thiscall LIQUIDINFO::UpdateVolume();
  void __thiscall LIQUIDINFO::Tick();
  void __thiscall LIQUIDINFO(struct LIQUIDINFO&);
  void __thiscall LIQUIDINFO();
  void __thiscall PreUpdate();
  void __thiscall ClearSubTypes();
  void __thiscall ClearSoundRecords();
  void __thiscall RegisterSubType(unsigned int, class NTempest::C3Vector&);
  struct LIQUIDINFO& __thiscall operator=(struct LIQUIDINFO&);
  void __thiscall ~LIQUIDINFO();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x48>

struct SOUNDDEFINITION : class TSHashObject<SOUNDDEFINITION,HASHKEY_NONE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0xa54|*/ class TSCArray<FILENAMEENTRY,10> m_fileNames;
  /*<thisrel this+0xa6c>*/ /*|0x4|*/ float m_volume;
  /*<thisrel this+0xa70>*/ /*|0x4|*/ float m_pitch;
  /*<thisrel this+0xa74>*/ /*|0x4|*/ float m_pitchVariation;
  /*<thisrel this+0xa78>*/ /*|0x4|*/ unsigned int m_priority;
  /*<thisrel this+0xa7c>*/ /*|0x4|*/ unsigned int m_channel;
  /*<thisrel this+0xa80>*/ /*|0x4|*/ unsigned int m_flags;
  /*<thisrel this+0xa84>*/ /*|0x4|*/ float m_minDistance;
  /*<thisrel this+0xa88>*/ /*|0x4|*/ float m_maxDistance;
  /*<thisrel this+0xa8c>*/ /*|0x4|*/ float m_distanceCutoffSquared;
  /*<thisrel this+0xa90>*/ /*|0x4|*/ unsigned int m_totalFrequency;
  /*<thisrel this+0xa94>*/ /*|0x4|*/ unsigned int m_lastPlayed;
  /*<thisrel this+0xa98>*/ /*|0x4|*/ unsigned int m_loopCounter;
  /*<thisrel this+0xa9c>*/ /*|0x4|*/ unsigned int m_primeStepIndex;
  /*<thisrel this+0xaa0>*/ /*|0x4|*/ int m_equalFreqs;
  /*<thisrel this+0xaa4>*/ /*|0x4|*/ int m_reverbPrefIndex;

  // base classes -----------------------------------
  // baseclass class TSHashObject<SOUNDDEFINITION,HASHKEY_NONE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall SOUNDDEFINITION::SOUNDDEFINITION(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct SOUNDDEFINITION& rhs);
  void __thiscall SOUNDDEFINITION::SOUNDDEFINITION();
  void __thiscall SOUNDDEFINITION::~SOUNDDEFINITION();
  struct SOUNDDEFINITION& __thiscall SOUNDDEFINITION::operator=(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct SOUNDDEFINITION& rhs);
  char* __thiscall SOUNDDEFINITION::GetRandomFileName(/*<regrel ebp+0x8>*/ /*|0x4|*/ int index);
  void __thiscall SOUNDDEFINITION::SetFrequencyAndVolume(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct Sound* sound, /*<regrel ebp+0xc>*/ /*|0x4|*/ float volumeScaler, /*<regrel ebp+0x10>*/ /*|0x1|*/ unsigned char neverVaryVolume);
  void __thiscall SOUNDDEFINITION::Set3DParams(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct Sound* sound, /*<regrel ebp+0xc>*/ /*|0x4|*/ class NTempest::C3Vector* pos);
  int __thiscall SOUNDDEFINITION::GetOsFlags();
  float __thiscall SOUNDDEFINITION::GetVolume(/*<regrel ebp+0x8>*/ /*|0x4|*/ float volumeScale, /*<regrel ebp+0xc>*/ /*|0x1|*/ unsigned char neverVary);
  void __thiscall SOUNDDEFINITION::Clear();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xaa8>

struct LOOPEDDOODADDESC {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x60|*/ class NTempest::C3Vector pos[8];
  /*<thisrel this+0x60>*/ /*|0x4|*/ int posInUseFlags;
  /*<thisrel this+0x64>*/ /*|0x4|*/ int soundID;
  /*<thisrel this+0x68>*/ /*|0x4|*/ struct Sound* sound;
  /*<thisrel this+0x6c>*/ /*|0x4|*/ int currentIndex;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall LOOPEDDOODADDESC();
  int __thiscall LOOPEDDOODADDESC::FindFreeSlot();
  void __thiscall LOOPEDDOODADDESC::Update(/*<regrel ebp+0x8>*/ /*|0x4|*/ class NTempest::C3Vector& lPos);
  int __thiscall LOOPEDDOODADDESC::GetClosestIndex(/*<regrel ebp+0x8>*/ /*|0x4|*/ class NTempest::C3Vector& listener);
  void __thiscall ~LOOPEDDOODADDESC();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x70>

struct UISOUNDLOOKUP : class TSHashObject<UISOUNDLOOKUP,HASHKEY_STRI>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned int soundID;

  // base classes -----------------------------------
  // baseclass class TSHashObject<UISOUNDLOOKUP,HASHKEY_STRI>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall UISOUNDLOOKUP(struct UISOUNDLOOKUP&);
  void __thiscall UISOUNDLOOKUP();
  struct UISOUNDLOOKUP& __thiscall operator=(struct UISOUNDLOOKUP&);
  void __thiscall ~UISOUNDLOOKUP();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x1c>

struct VOCALUISOUND {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ unsigned int soundTypes[2];
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int pissedCount;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall Clear();

  // virtual functions ------------------------------
};
// <size 0xc>

struct WEAPONSOUNDS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ unsigned int soundList[2];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall WEAPONSOUNDS::WEAPONSOUNDS(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct WEAPONSOUNDS& rhs);
  void __thiscall WEAPONSOUNDS::WEAPONSOUNDS();
  struct WEAPONSOUNDS& __thiscall WEAPONSOUNDS::operator=(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct WEAPONSOUNDS& rhs);
  void __thiscall WEAPONSOUNDS::~WEAPONSOUNDS();
  void __thiscall WEAPONSOUNDS::Clear();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x8>

struct IMPACTSOUNDARRAY {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xa0|*/ struct IMPACTSOUNDDESC desc[10];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IMPACTSOUNDARRAY(struct IMPACTSOUNDARRAY&);
  void __thiscall IMPACTSOUNDARRAY();
  struct IMPACTSOUNDARRAY& __thiscall operator=(struct IMPACTSOUNDARRAY&);
  void __thiscall ~IMPACTSOUNDARRAY();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xa0>

struct REVERBINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char inUse;
  /*<thisrel this+0x4>*/ /*|0x48|*/ struct _FSOUND_REVERB_CHANNELPROPERTIES prefs;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall REVERBINFO();

  // virtual functions ------------------------------
};
// <size 0x4c>

struct SHEATHSOUNDHASH : class TSHashObject<SHEATHSOUNDHASH,HASHKEY_NONE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x10|*/ class TSFixedArray<unsigned int> materialSheathSound;
  /*<thisrel this+0x28>*/ /*|0x10|*/ class TSFixedArray<unsigned int> materialUnsheathSound;

  // base classes -----------------------------------
  // baseclass class TSHashObject<SHEATHSOUNDHASH,HASHKEY_NONE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall SHEATHSOUNDHASH(struct SHEATHSOUNDHASH&);
  void __thiscall SHEATHSOUNDHASH();
  struct SHEATHSOUNDHASH& __thiscall operator=(struct SHEATHSOUNDHASH&);
  void __thiscall ~SHEATHSOUNDHASH();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x38>

struct HGAMETIMECALLBACK__ : struct HOBJECT__  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x4>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------
  // baseclass struct HOBJECT__
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct FOOTSTEPSNDCACHE : class TSHashObject<FOOTSTEPSNDCACHE,HASHKEY_NONE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x14|*/ class TSGrowableArray<unsigned int> m_soundIDs;
  /*<thisrel this+0x2c>*/ /*|0x14|*/ class TSGrowableArray<unsigned int> m_splashSoundIDs;

  // base classes -----------------------------------
  // baseclass class TSHashObject<FOOTSTEPSNDCACHE,HASHKEY_NONE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall FOOTSTEPSNDCACHE(struct FOOTSTEPSNDCACHE&);
  void __thiscall FOOTSTEPSNDCACHE();
  void __thiscall ~FOOTSTEPSNDCACHE();
  struct FOOTSTEPSNDCACHE& __thiscall operator=(struct FOOTSTEPSNDCACHE&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x40>

struct IMPACTSOUNDDESC {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x10|*/ struct WEAPONSOUNDS materialSounds[2];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IMPACTSOUNDDESC(struct IMPACTSOUNDDESC&);
  void __thiscall IMPACTSOUNDDESC();
  void __thiscall IMPACTSOUNDDESC::~IMPACTSOUNDDESC();
  struct IMPACTSOUNDDESC& __thiscall operator=(struct IMPACTSOUNDDESC&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x10>

struct VirtualItemInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char m_classID;
  /*<thisrel this+0x1>*/ /*|0x1|*/ unsigned char m_subclassID;
  /*<thisrel this+0x2>*/ /*|0x1|*/ unsigned char m_material;
  /*<thisrel this+0x3>*/ /*|0x1|*/ unsigned char m_inventoryType;
  /*<thisrel this+0x4>*/ /*|0x1|*/ unsigned char m_sheatheType;
  /*<thisrel this+0x5>*/ /*|0x1|*/ unsigned char m_padding0;
  /*<thisrel this+0x6>*/ /*|0x1|*/ unsigned char m_padding1;
  /*<thisrel this+0x7>*/ /*|0x1|*/ unsigned char m_padding2;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  unsigned char __thiscall operator!=(struct VirtualItemInfo&);

  // virtual functions ------------------------------
};
// <size 0x8>

struct OBJALLOCGLOBALS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x14|*/ class TSGrowableArray<CObjectHeapList> objects;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall OBJALLOCGLOBALS(struct OBJALLOCGLOBALS&);
  void __thiscall OBJALLOCGLOBALS();
  struct OBJALLOCGLOBALS& __thiscall operator=(struct OBJALLOCGLOBALS&);
  void __thiscall ~OBJALLOCGLOBALS();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x14>

struct C_OBJECTHASH : class TSHashObject<C_OBJECTHASH,CHashKeyGUID>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned int memHandle;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned int thisMemHandle;
  /*<thisrel this+0x28>*/ /*|0x1db8|*/ class TSList<CMirrorHandler,TSGetLink<CMirrorHandler> > mirrorHandlers[634];
  /*<thisrel this+0x1de0>*/ /*|0x8|*/ class TSLink<C_OBJECTHASH> link;
  /*<thisrel this+0x1de8>*/ /*|0x8|*/ class TSLink<C_OBJECTHASH> reenableLink;

  // base classes -----------------------------------
  // baseclass class TSHashObject<C_OBJECTHASH,CHashKeyGUID>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall C_OBJECTHASH(struct C_OBJECTHASH&);
  void __thiscall C_OBJECTHASH();
  struct C_OBJECTHASH& __thiscall operator=(struct C_OBJECTHASH&);
  void __thiscall ~C_OBJECTHASH();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x1df0>

struct CClientObjCreate {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xb0|*/ struct CClientMoveUpdate move;
  /*<thisrel this+0xb0>*/ /*|0x4|*/ unsigned int flags;
  /*<thisrel this+0xb4>*/ /*|0x4|*/ unsigned int attackCycle;
  /*<thisrel this+0xb8>*/ /*|0x4|*/ unsigned int timerID;
  /*<thisrel this+0xc0>*/ /*|0x8|*/ unsigned __int64 victim;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------
  static void __fastcall Skip(class CDataStore*);

  // non-virtual functions --------------------------
  void __thiscall CClientObjCreate(struct CClientObjCreate&);
  void __thiscall CClientObjCreate();
  void __thiscall Put(class CDataStore*);
  void __thiscall Get(class CDataStore*);
  struct CClientObjCreate& __thiscall operator=(struct CClientObjCreate&);
  void __thiscall ~CClientObjCreate();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xc8>

struct CClientMoveUpdate {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x30|*/ struct CMovementStatus status;
  /*<thisrel this+0x30>*/ /*|0x4|*/ unsigned int timeFallen;
  /*<thisrel this+0x34>*/ /*|0x4|*/ float walkSpeed;
  /*<thisrel this+0x38>*/ /*|0x4|*/ float runSpeed;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ float swimSpeed;
  /*<thisrel this+0x40>*/ /*|0x4|*/ float turnRate;
  /*<thisrel this+0x48>*/ /*|0x68|*/ struct CMoveSpline spline;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------
  static void __fastcall CClientMoveUpdate::Skip(/*<register ecx>*/ /*|0x4|*/ class CDataStore* packet);

  // non-virtual functions --------------------------
  void __thiscall CClientMoveUpdate(struct CClientMoveUpdate&);
  void __thiscall CClientMoveUpdate::CClientMoveUpdate();
  struct CClientMoveUpdate& __thiscall operator=(struct CClientMoveUpdate&);
  void __thiscall ~CClientMoveUpdate();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xb0>

struct CMovementStatus {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ unsigned __int64 transport;
  /*<thisrel this+0x8>*/ /*|0xc|*/ class NTempest::C3Vector transRelPosition;
  /*<thisrel this+0x14>*/ /*|0x4|*/ float transRelFacing;
  /*<thisrel this+0x18>*/ /*|0xc|*/ class NTempest::C3Vector worldPosition;
  /*<thisrel this+0x24>*/ /*|0x4|*/ float worldFacing;
  /*<thisrel this+0x28>*/ /*|0x4|*/ float pitch;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ unsigned int moveFlags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------
  static unsigned int __fastcall Skip(class CDataStore*);

  // non-virtual functions --------------------------
  void __thiscall CMovementStatus::CMovementStatus();
  void __thiscall CMovementStatus::~CMovementStatus();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x30>

struct CMoveSpline {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int flags;
  /*<thisrel this+0x8>*/ /*|0x20|*/ struct CMoveSpline::SplineFaceData face;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned long start;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ unsigned long time;
  /*<thisrel this+0x30>*/ /*|0x34|*/ class NTempest::C3Spline_CatmullRom spline;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------
  static void __fastcall Skip(class CDataStore*);

  // non-virtual functions --------------------------
  void __thiscall CMoveSpline(struct CMoveSpline&);
  void __thiscall CMoveSpline::CMoveSpline();
  struct CMoveSpline& __thiscall operator=(struct CMoveSpline&);
  void __thiscall ~CMoveSpline();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x68>

struct CMirrorHandler : class TSLinkedNode<CMirrorHandler>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x8|*/ class TSLink<CMirrorHandler> callLink;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int  (handler*)(unsigned __int64, unsigned int, unsigned int, void*, void*);
  /*<thisrel this+0x14>*/ /*|0x4|*/ void* param;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned int blocksLeft;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned int offset;
  /*<thisrel this+0x20>*/ /*|0x14|*/ class TSGrowableArray_<unsigned char,1330464594,71> previous;
  /*<thisrel this+0x34>*/ /*|0x4|*/ enum HANDLER_PRIORITY priority;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<CMirrorHandler>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CMirrorHandler(struct CMirrorHandler&);
  void __thiscall CMirrorHandler();
  struct CMirrorHandler& __thiscall operator=(struct CMirrorHandler&);
  void __thiscall CMirrorHandler::~CMirrorHandler();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x38>

struct OBJHANDLERREQUEST : class TSLinkedNode<OBJHANDLERREQUEST>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x8|*/ unsigned __int64 guid;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int offset;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned int bytes;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int  (handler*)(unsigned __int64, unsigned int, unsigned int, void*, void*);
  /*<thisrel this+0x1c>*/ /*|0x4|*/ void* param;
  /*<thisrel this+0x20>*/ /*|0x4|*/ enum HANDLER_PRIORITY priority;
  /*<thisrel this+0x24>*/ /*|0x1|*/ unsigned char set;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<OBJHANDLERREQUEST>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall OBJHANDLERREQUEST(struct OBJHANDLERREQUEST&);
  void __thiscall OBJHANDLERREQUEST();
  struct OBJHANDLERREQUEST& __thiscall operator=(struct OBJHANDLERREQUEST&);
  void __thiscall ~OBJHANDLERREQUEST();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x28>

struct CMoveSpline::SplineFaceData {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xc|*/ class NTempest::C3Vector spot;
  /*<thisrel this+0x10>*/ /*|0x8|*/ unsigned __int64 guid;
  /*<thisrel this+0x18>*/ /*|0x4|*/ float facing;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CMoveSpline::SplineFaceData::SplineFaceData();
  void __thiscall ~SplineFaceData();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x20>

struct DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH : class TSHashObject<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x30|*/ class GuildStats_C m_record;
  /*<thisrel this+0x48>*/ /*|0x4|*/ int m_dbkey;
  /*<thisrel this+0x4c>*/ /*|0x1|*/ unsigned char m_haveData;
  /*<thisrel this+0x50>*/ /*|0xc|*/ class TSList<DBCACHECALLBACK,TSGetLink<DBCACHECALLBACK> > m_callbacks;
  /*<thisrel this+0x5c>*/ /*|0x1|*/ unsigned char m_temp;

  // base classes -----------------------------------
  // baseclass class TSHashObject<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall DBCACHEHASH(struct DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH&);
  void __thiscall DBCACHEHASH();
  void __thiscall ~DBCACHEHASH();
  struct DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH& __thiscall operator=(struct DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x60>

struct CHARINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x108|*/ struct CHARACTER_INFO m_characterInfo;
  /*<thisrel this+0x108>*/ /*|0x4|*/ int m_eStyle;
  /*<thisrel this+0x10c>*/ /*|0x4|*/ int m_eColor;
  /*<thisrel this+0x110>*/ /*|0x4|*/ int m_bStyle;
  /*<thisrel this+0x114>*/ /*|0x4|*/ int m_bColor;
  /*<thisrel this+0x118>*/ /*|0x4|*/ int m_background;
  /*<thisrel this+0x11c>*/ /*|0x4|*/ struct HMODEL__* m_characterModel;
  /*<thisrel this+0x120>*/ /*|0x4|*/ struct HTEXCOMPONENT__* m_characterComponent;
  /*<thisrel this+0x124>*/ /*|0x4|*/ struct HMODEL__* m_petModel;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CHARINFO(struct CHARINFO&);
  void __thiscall CHARINFO();
  void __thiscall CHARINFO::~CHARINFO();
  struct CHARINFO& __thiscall operator=(struct CHARINFO&);
  void __thiscall CHARINFO::UpdateTabardTexture();
  void __thiscall CHARINFO::UpdateCharacterInfo(/*<regrel ebp+0x8>*/ /*|0x4|*/ char* modelName, /*<regrel ebp+0xc>*/ /*|0x4|*/ struct HMODEL__* backgroundModel);
  void __thiscall CHARINFO::ChangeSkinTexture();
  void __thiscall CHARINFO::CommitTexture(/*<regrel ebp+0x8>*/ /*|0x4|*/ int force);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x128>

struct HCHARGEOSET__ : struct HOBJECT__  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x4>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------
  // baseclass struct HOBJECT__
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct BEARDSTYLEDATA {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int beardGeoset;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int sideBurnGeoset;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int moustacheGeoset;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall BEARDSTYLEDATA();

  // virtual functions ------------------------------
};
// <size 0xc>

struct CHARACTER_INFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ unsigned __int64 guid;
  /*<thisrel this+0x8>*/ /*|0x30|*/ char name[48];
  /*<thisrel this+0x38>*/ /*|0x4|*/ unsigned int mapID;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ unsigned int zoneID;
  /*<thisrel this+0x40>*/ /*|0x4|*/ unsigned int guildID;
  /*<thisrel this+0x44>*/ /*|0xc|*/ class NTempest::C3Vector position;
  /*<thisrel this+0x50>*/ /*|0x50|*/ unsigned int inventoryItemDisplayID[20];
  /*<thisrel this+0xa0>*/ /*|0x50|*/ unsigned int inventoryItemType[20];
  /*<thisrel this+0xf0>*/ /*|0x4|*/ unsigned int petDisplayInfoID;
  /*<thisrel this+0xf4>*/ /*|0x4|*/ unsigned int petExperienceLevel;
  /*<thisrel this+0xf8>*/ /*|0x4|*/ unsigned int petCreatureFamilyID;
  /*<thisrel this+0xfc>*/ /*|0x1|*/ unsigned char raceID;
  /*<thisrel this+0xfd>*/ /*|0x1|*/ unsigned char classID;
  /*<thisrel this+0xfe>*/ /*|0x1|*/ unsigned char sexID;
  /*<thisrel this+0xff>*/ /*|0x1|*/ unsigned char skinID;
  /*<thisrel this+0x100>*/ /*|0x1|*/ unsigned char faceID;
  /*<thisrel this+0x101>*/ /*|0x1|*/ unsigned char hairStyleID;
  /*<thisrel this+0x102>*/ /*|0x1|*/ unsigned char hairColorID;
  /*<thisrel this+0x103>*/ /*|0x1|*/ unsigned char facialHairStyleID;
  /*<thisrel this+0x104>*/ /*|0x1|*/ unsigned char experienceLevel;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CHARACTER_INFO::CHARACTER_INFO();
  void __thiscall ~CHARACTER_INFO();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x108>

struct HTEXCOMPONENT__ : struct HOBJECT__  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x4>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------
  // baseclass struct HOBJECT__
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct CustomizationSelections {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int classID;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int outfit;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int skinColor;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int hairColor;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int hairStyle;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned int facialStyle;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned int face;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CustomizationSelections();

  // virtual functions ------------------------------
};
// <size 0x1c>

struct CHARCREATEINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ struct HMODEL__* characterModel[2];
  /*<thisrel this+0x8>*/ /*|0x8|*/ struct HCHARGEOSET__* geosetHandle[2];
  /*<thisrel this+0x10>*/ /*|0x8|*/ struct HTEXCOMPONENT__* characterComponent[2];
  /*<thisrel this+0x18>*/ /*|0x38|*/ struct CustomizationSelections selections[2];
  /*<thisrel this+0x50>*/ /*|0x10|*/ float cameraHeight[2][2];
  /*<thisrel this+0x60>*/ /*|0x10|*/ float cameraRadius[2][2];
  /*<thisrel this+0x70>*/ /*|0x10|*/ float targetHeight[2][2];
  /*<thisrel this+0x80>*/ /*|0xb4|*/ unsigned int currentGeosets[3][15];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CHARCREATEINFO();
  void __thiscall ~CHARCREATEINFO();
  void __thiscall Initialize();
  void __thiscall CHARCREATEINFO::Shutdown();
  void __thiscall CHARCREATEINFO::UpdateOutfit(/*<regrel ebp+0x8>*/ /*|0x4|*/ int increment, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int race, /*<regrel ebp+0x10>*/ /*|0x4|*/ unsigned int sex);
  void __thiscall CHARCREATEINFO::ResetOutfitSelection(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int raceID, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int sex);
  void __thiscall CHARCREATEINFO::CommitGeoset(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int sex);
  void __thiscall CHARCREATEINFO::UpdateCharacterInfo(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int race, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int sex);
  void __thiscall CHARCREATEINFO::ChangeHairGeosets(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int race, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int sex);
  void __thiscall CHARCREATEINFO::UpdateEquipment(/*<regrel ebp+0x8>*/ /*|0x4|*/ int doNotCommitGeosets, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int race, /*<regrel ebp+0x10>*/ /*|0x4|*/ unsigned int sex);
  void __thiscall CHARCREATEINFO::ChangeSkinTexture(/*<regrel ebp+0x8>*/ /*|0x4|*/ int doNotCommitGeosets, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int race, /*<regrel ebp+0x10>*/ /*|0x4|*/ unsigned int sex);
  void __thiscall CHARCREATEINFO::ChangeFaceTexture(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int race, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int sex);
  void __thiscall CHARCREATEINFO::ChangeFacialHairTexture(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int race, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int sex);
  void __thiscall RefreshVisibleGeosets(unsigned int);
  void __thiscall CHARCREATEINFO::ChangeFacialHairGeosets(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int sex, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int beardGeoset, /*<regrel ebp+0x10>*/ /*|0x4|*/ unsigned int sideburnGeoset, /*<regrel ebp+0x14>*/ /*|0x4|*/ unsigned int moustacheGeoset);
  void __thiscall CHARCREATEINFO::ChangeScalpHairTexture(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int race, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int sex);
  void __thiscall CHARCREATEINFO::UpdateGeosets(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int beardGeoset, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int sideBurnGeoset, /*<regrel ebp+0x10>*/ /*|0x4|*/ unsigned int moustacheGeoset, /*<regrel ebp+0x14>*/ /*|0x4|*/ unsigned int sex);
  void __thiscall CHARCREATEINFO::FindRange(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int group, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int* start, /*<regrel ebp+0x10>*/ /*|0x4|*/ unsigned int* end);
  void __thiscall CHARCREATEINFO::CommitTexture(/*<regrel ebp+0x8>*/ /*|0x4|*/ int race, /*<regrel ebp+0xc>*/ /*|0x4|*/ int sex);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x134>

struct CHARACTER_CREATE_INFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x30|*/ char name[48];
  /*<thisrel this+0x30>*/ /*|0x1|*/ unsigned char raceID;
  /*<thisrel this+0x31>*/ /*|0x1|*/ unsigned char classID;
  /*<thisrel this+0x32>*/ /*|0x1|*/ unsigned char sexID;
  /*<thisrel this+0x33>*/ /*|0x1|*/ unsigned char skinID;
  /*<thisrel this+0x34>*/ /*|0x1|*/ unsigned char faceID;
  /*<thisrel this+0x35>*/ /*|0x1|*/ unsigned char hairStyleID;
  /*<thisrel this+0x36>*/ /*|0x1|*/ unsigned char hairColorID;
  /*<thisrel this+0x37>*/ /*|0x1|*/ unsigned char facialHairStyleID;
  /*<thisrel this+0x38>*/ /*|0x1|*/ unsigned char outfitID;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x39>

struct REALM_INFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char id;
  /*<thisrel this+0x1>*/ /*|0x100|*/ char name[256];
  /*<thisrel this+0x101>*/ /*|0x20|*/ char address[32];
  /*<thisrel this+0x124>*/ /*|0x4|*/ unsigned int players;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x128>

struct GEOCOMPONENTINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ __int64 allowedSlots;
  /*<thisrel this+0x8>*/ /*|0x8|*/ int itemLinks[2];
  /*<thisrel this+0x10>*/ /*|0x8|*/ int altItemLinks[2];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct LAYERIDS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x28|*/ enum TEXCOMPONENT_LAYERS layers[10];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x28>

struct SECTIONPRIORITIES {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x28|*/ enum LAYERPRIORITY priorities[10];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x28>

struct SECTIONDESC {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ char* m_columnName;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int x;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int y;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int width;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int height;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct CSectionFileNames {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x618|*/ char path[6][260];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x618>

struct SUBCOMPONENTDESC {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ char* pathName;
  /*<thisrel this+0x4>*/ /*|0x4|*/ char* textureName;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int connectionPointIndex;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall Cleanup();
  void __thiscall SUBCOMPONENTDESC();
  void __thiscall SetPathName(char*);
  void __thiscall SetTextureName(char*);
  void __thiscall ~SUBCOMPONENTDESC();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xc>

struct HTEXTURECACHE__ : struct HOBJECT__  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x4>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------
  // baseclass struct HOBJECT__
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct NULLSTATUS : class CStatus  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass class CStatus
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall NULLSTATUS(struct NULLSTATUS&);
  void __thiscall NULLSTATUS();
  struct NULLSTATUS& __thiscall operator=(struct NULLSTATUS&);
  void __thiscall __local_vftable_ctor_closure();

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ void __thiscall NULLSTATUS::Add(/*<regrel ebp+0x8>*/ /*|0x4|*/ class CStatus& source);
  virtual /*<vtableoff 0x0>*/ void __cdecl NULLSTATUS::Add(/*<regrel ebp+0xc>*/ /*|0x4|*/ enum STATUS_TYPE severity, /*<regrel ebp+0x10>*/ /*|0x4|*/ char* format, ...);
  virtual /*<vtableoff 0x0>*/ void __cdecl NULLSTATUS::Prepend(/*<regrel ebp+0xc>*/ /*|0x4|*/ enum STATUS_TYPE severity, /*<regrel ebp+0x10>*/ /*|0x4|*/ char* format, ...);
  virtual /*<vtableoff 0x0>*/ void __thiscall ~NULLSTATUS();
  virtual /*<vtableoff 0x0>*/ void* __thiscall __vecDelDtor(unsigned int);
};
// <size 0x10>

struct HMIPPEDTEXTURE__ : struct HOBJECT__  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x4>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------
  // baseclass struct HOBJECT__
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct CAMERAFILENAMES {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x30c|*/ char fileName[3][260];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CAMERAFILENAMES();

  // virtual functions ------------------------------
};
// <size 0x30c>

struct CHARACTERRACEVARIATIONS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x39c|*/ struct CHARACTERSEXVARIATIONS sex[3];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CHARACTERRACEVARIATIONS(struct CHARACTERRACEVARIATIONS&);
  void __thiscall CHARACTERRACEVARIATIONS();
  struct CHARACTERRACEVARIATIONS& __thiscall operator=(struct CHARACTERRACEVARIATIONS&);
  void __thiscall ~CHARACTERRACEVARIATIONS();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x39c>

struct __unnamed_ee_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x24|*/ unsigned int disableGeosetFlags[9];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x24>

struct INVHOLDINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x10|*/ struct HOLDINFO holdInfo[2];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall INVHOLDINFO::INVHOLDINFO(/*<regrel ebp+0x8>*/ /*|0x4|*/ enum CHARACTER_ITEM_GEOSETS geoset0, /*<regrel ebp+0xc>*/ /*|0x4|*/ enum TEXCOMPONENT_SECTIONS section0, /*<regrel ebp+0x10>*/ /*|0x4|*/ enum CHARACTER_ITEM_GEOSETS geoset1, /*<regrel ebp+0x14>*/ /*|0x4|*/ enum TEXCOMPONENT_SECTIONS section1);

  // virtual functions ------------------------------
};
// <size 0x10>

struct ITEMGEOSETGROUPS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x10|*/ enum CHARACTER_ITEM_GEOSETS geosetGroup[4];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct VARIATIONS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x10|*/ unsigned int textureHolds[4];
  /*<thisrel this+0x10>*/ /*|0x10|*/ struct FACIALVARIATIONS facialVariations;
  /*<thisrel this+0x20>*/ /*|0x14|*/ class TSGrowableArray<INTDATA> hairGeosets;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall VARIATIONS::~VARIATIONS();
  void __thiscall VARIATIONS::VARIATIONS(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct VARIATIONS& __that);
  void __thiscall VARIATIONS();
  struct VARIATIONS& __thiscall operator=(struct VARIATIONS&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x34>

struct CHARACTERSEXVARIATIONS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xdc|*/ class TSGrowableArray<CHARACTERVARIATIONS> names[11];
  /*<thisrel this+0xdc>*/ /*|0x2c|*/ int firstNPCVar[11];
  /*<thisrel this+0x108>*/ /*|0x2c|*/ int lastNPCVar[11];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CHARACTERSEXVARIATIONS(struct CHARACTERSEXVARIATIONS&);
  void __thiscall CHARACTERSEXVARIATIONS();
  void __thiscall CHARACTERSEXVARIATIONS::~CHARACTERSEXVARIATIONS();
  void __thiscall CHARACTERSEXVARIATIONS::GetNumVariations(/*<regrel ebp+0x8>*/ /*|0x4|*/ enum CHARTEXTURESECTIONID section, /*<regrel ebp+0xc>*/ /*|0x4|*/ int* pcVars, /*<regrel ebp+0x10>*/ /*|0x4|*/ int* npcVars);
  struct CHARACTERVARIATIONS& __thiscall GetNames(int, int);
  struct CHARACTERVARIATIONS& __thiscall GetNames(int, int);
  int __thiscall NumVariations(int);
  class TSGrowableArray<CHARACTERVARIATIONS>& __thiscall GetSectionData(int);
  class TSGrowableArray<CHARACTERVARIATIONS>& __thiscall GetSectionData(int);
  struct CHARACTERSEXVARIATIONS& __thiscall operator=(struct CHARACTERSEXVARIATIONS&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x134>

struct CHARACTERVARIATIONS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x14|*/ class TSGrowableArray<STRINGWANNABE> color;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CHARACTERVARIATIONS::~CHARACTERVARIATIONS();
  struct STRINGWANNABE& __thiscall GetColor(int);
  struct STRINGWANNABE& __thiscall GetColor(int);
  int __thiscall GetColorCount();
  void __thiscall SetColorCount(int);
  void __thiscall CHARACTERVARIATIONS::CHARACTERVARIATIONS(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct CHARACTERVARIATIONS& __that);
  void __thiscall CHARACTERVARIATIONS::CHARACTERVARIATIONS();
  struct CHARACTERVARIATIONS& __thiscall operator=(struct CHARACTERVARIATIONS&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x14>

struct FACIALGEOSETS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int beardGeoset;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int sideBurnGeoset;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int moustacheGeoset;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall FACIALGEOSETS();

  // virtual functions ------------------------------
};
// <size 0xc>

struct FACIALVARIATIONS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x10|*/ class TSFixedArray<FACIALGEOSETS> facialGeosets;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall AddVariation(class CharacterFacialHairStylesRec*);
  void __thiscall ~FACIALVARIATIONS();
  unsigned int __thiscall NumVariations();
  void __thiscall FACIALVARIATIONS::FACIALVARIATIONS(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct FACIALVARIATIONS& __that);
  void __thiscall FACIALVARIATIONS();
  struct FACIALVARIATIONS& __thiscall operator=(struct FACIALVARIATIONS&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x10>

struct STRINGWANNABE {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ char* string;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  char* __thiscall GetString();
  void __thiscall SetString(char*, char*);
  void __thiscall STRINGWANNABE();

  // virtual functions ------------------------------
};
// <size 0x4>

struct CARgbColor {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char a;
  /*<thisrel this+0x1>*/ /*|0x1|*/ unsigned char r;
  /*<thisrel this+0x2>*/ /*|0x1|*/ unsigned char g;
  /*<thisrel this+0x3>*/ /*|0x1|*/ unsigned char b;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  class NTempest::CImVector __thiscall operator class NTempest::CImVector();

  // virtual functions ------------------------------
};
// <size 0x4>

struct ObjDataDescriptor {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ char* debugName;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int fieldName;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int fieldSize;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int fieldMirrorType;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int fieldMirrorFlags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct CWalkableSurface {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ float closeDist;
  /*<thisrel this+0x4>*/ /*|0x4|*/ float farDist;
  /*<thisrel this+0x8>*/ /*|0xc|*/ class NTempest::C3Vector firstPtOfContact;
  /*<thisrel this+0x14>*/ /*|0xc|*/ class NTempest::C3Vector lastPtOfContact;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned int facetId;
  /*<thisrel this+0x24>*/ /*|0x4|*/ float highestElevation;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------
  static unsigned char __fastcall HasHigherPriority(struct CWalkableSurface&, struct CWalkableSurface&);

  // non-virtual functions --------------------------
  void __thiscall CWalkableSurface::CWalkableSurface();
  void __thiscall ~CWalkableSurface();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x28>

struct CWFacetData {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x14|*/ class TSGrowableArray<NTempest::CFacet> facets;
  /*<thisrel this+0x14>*/ /*|0x14|*/ class TSGrowableArray<unsigned __int64> gameObjects;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CWFacetData(struct CWFacetData&);
  void __thiscall CWFacetData();
  struct CWFacetData& __thiscall operator=(struct CWFacetData&);
  void __thiscall ~CWFacetData();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x28>

struct CRedirect {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xc|*/ class NTempest::C3Vector hitPoint;
  /*<thisrel this+0xc>*/ /*|0x18|*/ class NTempest::C3Vector surfaceNorm[2];
  /*<thisrel this+0x28>*/ /*|0x8|*/ unsigned __int64 gameObjHit;
  /*<thisrel this+0x30>*/ /*|0x1|*/ unsigned char flags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CRedirect();
  void __thiscall Reset();
  void __thiscall ~CRedirect();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x38>

struct CMoveState {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xc|*/ class NTempest::C3Vector position;
  /*<thisrel this+0xc>*/ /*|0x4|*/ float facing;
  /*<thisrel this+0x10>*/ /*|0x4|*/ float pitch;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned int moveFlags;
  /*<thisrel this+0x18>*/ /*|0xc|*/ class NTempest::C3Vector anchorPosition;
  /*<thisrel this+0x24>*/ /*|0x4|*/ float anchorFacing;
  /*<thisrel this+0x28>*/ /*|0x4|*/ float anchorPitch;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ unsigned long moveStartTime;
  /*<thisrel this+0x30>*/ /*|0xc|*/ class NTempest::C3Vector direction;
  /*<thisrel this+0x3c>*/ /*|0x8|*/ class NTempest::C2Vector direction2d;
  /*<thisrel this+0x44>*/ /*|0x4|*/ float cosAnchorPitch;
  /*<thisrel this+0x48>*/ /*|0x4|*/ float sinAnchorPitch;
  /*<thisrel this+0x4c>*/ /*|0xc|*/ class NTempest::C3Vector reDirection;
  /*<thisrel this+0x58>*/ /*|0x4|*/ unsigned long fallStartTime;
  /*<thisrel this+0x5c>*/ /*|0x4|*/ float fallStartElevation;
  /*<thisrel this+0x60>*/ /*|0x4|*/ float jumpVelocity;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CMoveState();
  void __thiscall ~CMoveState();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x64>

struct CMovementGlobals {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x104|*/ char logFileName[260];
  /*<thisrel this+0x104>*/ /*|0x4|*/ struct _iobuf* movementLog;
  /*<thisrel this+0x108>*/ /*|0x4|*/ struct _iobuf* fallingLog;
  /*<thisrel this+0x10c>*/ /*|0xc|*/ class TSExplicitList<CMovementData,0> movers;
  /*<thisrel this+0x118>*/ /*|0x4|*/ int numMovers;
  /*<bitfield this+0x11c>*/ /*|0x4|*/ unsigned int ignoreObstacles:0:1;
  /*<thisrel this+0x120>*/ /*|0x4|*/ class CMovement* currentLoading;
  /*<thisrel this+0x124>*/ /*|0x4|*/ class CMovement* m_localMover;
  /*<thisrel this+0x128>*/ /*|0xc|*/ class CPlayerMoveQueue m_localMoveQueue;
  /*<thisrel this+0x134>*/ /*|0x4|*/ unsigned long m_lastUpdateTime;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CMovementGlobals(struct CMovementGlobals&);
  void __thiscall CMovementGlobals();
  void __thiscall ~CMovementGlobals();
  struct CMovementGlobals& __thiscall operator=(struct CMovementGlobals&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x138>

struct CPlayerMoveEvent : class TSLinkedNode<CPlayerMoveEvent>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long timeStamp;
  /*<thisrel this+0xc>*/ /*|0x4|*/ enum PLAYER_MOVE_EVT eventType;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int memHandle;
  /*<thisrel this+0x14>*/ /*|0x4|*/ float facing;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<CPlayerMoveEvent>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CPlayerMoveEvent(struct CPlayerMoveEvent&);
  void __thiscall CPlayerMoveEvent();
  struct CPlayerMoveEvent& __thiscall operator=(struct CPlayerMoveEvent&);
  void __thiscall ~CPlayerMoveEvent();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x18>

struct DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH : class TSHashObject<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,CHashKeyGUID>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x20>*/ /*|0x48|*/ class NameCache m_record;
  /*<thisrel this+0x68>*/ /*|0x8|*/ unsigned __int64 m_dbkey;
  /*<thisrel this+0x70>*/ /*|0x1|*/ unsigned char m_haveData;
  /*<thisrel this+0x74>*/ /*|0xc|*/ class TSList<DBCACHECALLBACK,TSGetLink<DBCACHECALLBACK> > m_callbacks;
  /*<thisrel this+0x80>*/ /*|0x1|*/ unsigned char m_temp;

  // base classes -----------------------------------
  // baseclass class TSHashObject<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,CHashKeyGUID>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall DBCACHEHASH(struct DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH&);
  void __thiscall DBCACHEHASH();
  void __thiscall ~DBCACHEHASH();
  struct DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH& __thiscall operator=(struct DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x88>

struct __unnamed_ef_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ float blipSizeScale;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int color;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct QUADINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ class NTempest::C2Vector m_UL;
  /*<thisrel this+0x8>*/ /*|0x8|*/ class NTempest::C2Vector m_LR;
  /*<thisrel this+0x10>*/ /*|0x8|*/ class NTempest::C2Vector m_conversion;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall QUADINFO(class NTempest::C2Vector&, class NTempest::C2Vector&, class NTempest::C2Vector&);
  void __thiscall ~QUADINFO();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x18>

struct QUADDATA {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x30|*/ class NTempest::C3Vector verts[4];
  /*<thisrel this+0x30>*/ /*|0x20|*/ class NTempest::C2Vector texCoords[4];
  /*<thisrel this+0x50>*/ /*|0x20|*/ class NTempest::C2Vector maskTexCoords[4];
  /*<thisrel this+0x70>*/ /*|0x18|*/ class NTempest::CAaBox aaBox;
  /*<thisrel this+0x88>*/ /*|0x4|*/ struct QUADDATA* rLink;
  /*<thisrel this+0x8c>*/ /*|0x4|*/ float sortz;
  /*<thisrel this+0x90>*/ /*|0x4|*/ struct HTEXTURE__* m_texture;
  /*<thisrel this+0x94>*/ /*|0x4|*/ unsigned int m_flags;
  /*<thisrel this+0x98>*/ /*|0x8|*/ class NTempest::C2iVector m_areaNum;
  /*<thisrel this+0xa0>*/ /*|0x4|*/ unsigned int groupNum;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall QUADDATA::QUADDATA();
  void __thiscall QUADDATA::GenerateVertTexInfo(/*<regrel ebp+0x8>*/ /*|0x4|*/ class NTempest::CRect& rect, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int quad, /*<regrel ebp+0x10>*/ /*|0x4|*/ class NTempest::C2Vector& centerPoint, /*<regrel ebp+0x14>*/ /*|0x4|*/ float radius, /*<regrel ebp+0x18>*/ /*|0x4|*/ class NTempest::CRect& maskBox, /*<regrel ebp+0x1c>*/ /*|0x4|*/ float layoutScale);
  void __thiscall QUADDATA::UpdateData(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int quad, /*<regrel ebp+0xc>*/ /*|0x8|*/ class NTempest::C2Vector centerPoint, /*<regrel ebp+0x14>*/ /*|0x4|*/ float radius, /*<regrel ebp+0x18>*/ /*|0x4|*/ float layoutScale);
  void __thiscall QUADDATA::Render(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int quad, /*<regrel ebp+0xc>*/ /*|0x4|*/ class NTempest::CImVector& color);
  class NTempest::CRect __thiscall QUADDATA::NormalizeToQuad(/*<regrel ebp+0x8>*/ /*|0x4|*/ class NTempest::CRect* __$ReturnUdt, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int quad);
  void __thiscall ~QUADDATA();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xa4>

struct MinimapTexParams {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char inside;
  /*<thisrel this+0x4>*/ /*|0x4|*/ class CGxTex* texture;
  /*<thisrel this+0x8>*/ /*|0x1|*/ unsigned char updateTexture;
  /*<thisrel this+0xc>*/ /*|0x4|*/ float size;
  /*<thisrel this+0x10>*/ /*|0x40|*/ class NTempest::C44Matrix worldRotation;
  /*<thisrel this+0x50>*/ /*|0x40|*/ class NTempest::C44Matrix invMapObjMtx;
  /*<thisrel this+0x90>*/ /*|0xc|*/ class NTempest::C3Vector localCenter;
  /*<thisrel this+0x9c>*/ /*|0xc|*/ class NTempest::C3Vector localOffset;
  /*<thisrel this+0xa8>*/ /*|0x1|*/ unsigned char asyncTexWait;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MinimapTexParams();
  struct MinimapTexParams& __thiscall operator=(struct MinimapTexParams&);
  void __thiscall ~MinimapTexParams();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xac>

struct POIINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int icon;
  /*<thisrel this+0x4>*/ /*|0x30|*/ class NTempest::C3Vector vertices[4];
  /*<thisrel this+0x34>*/ /*|0x8|*/ class NTempest::C2Vector position;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ char* string;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall POIINFO::POIINFO();
  void __thiscall POIINFO::~POIINFO();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x40>

struct POIDIRECTIONDATA {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x40|*/ char POIName[64];
  /*<thisrel this+0x40>*/ /*|0x4|*/ float rotation;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x44>

struct PARTYMEMBERINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ unsigned __int64 guid;
  /*<thisrel this+0x8>*/ /*|0x30|*/ char name[48];
  /*<thisrel this+0x38>*/ /*|0x4|*/ int showArrow;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ int showBlip;
  /*<thisrel this+0x40>*/ /*|0x8|*/ class NTempest::C2Vector position;
  /*<thisrel this+0x48>*/ /*|0x4|*/ float rotation;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall PARTYMEMBERINFO();
  void __thiscall ~PARTYMEMBERINFO();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x50>

struct DNInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int time;
  /*<thisrel this+0x4>*/ /*|0x4|*/ float dayProgression;
  /*<thisrel this+0x8>*/ /*|0x4|*/ float day;
  /*<thisrel this+0xc>*/ /*|0xc|*/ class NTempest::C3Vector playerPos;
  /*<thisrel this+0x18>*/ /*|0xc|*/ class NTempest::C3Vector cameraPos;
  /*<thisrel this+0x24>*/ /*|0xc|*/ class NTempest::C3Vector cameraDir;
  /*<thisrel this+0x30>*/ /*|0x4|*/ float faceAngle;
  /*<thisrel this+0x34>*/ /*|0x4|*/ float nearClipScaled;
  /*<thisrel this+0x38>*/ /*|0x4|*/ float farClip;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ float elapsedSec;
  /*<thisrel this+0x40>*/ /*|0x4|*/ float stormPercentage;
  /*<thisrel this+0x44>*/ /*|0x1|*/ unsigned char eclipseAmount;
  /*<thisrel this+0x45>*/ /*|0x4|*/ class NTempest::CImVector eclipseColor;
  /*<thisrel this+0x4c>*/ /*|0x64|*/ struct CurrentLight light;
  /*<thisrel this+0xb0>*/ /*|0xc|*/ struct DNFogInfo fogInfo;
  /*<thisrel this+0xbc>*/ /*|0x1|*/ unsigned char intFog;
  /*<thisrel this+0xc0>*/ /*|0xc|*/ struct DNFogInfo intFogInfo;
  /*<thisrel this+0xcc>*/ /*|0x2c|*/ struct DNLightInfo lightInfo;
  /*<thisrel this+0xf8>*/ /*|0x4|*/ class NTempest::CImVector shadowClr;
  /*<thisrel this+0xfc>*/ /*|0x4|*/ float billbRescale;
  /*<thisrel this+0x100>*/ /*|0x4|*/ int showSky;
  /*<thisrel this+0x104>*/ /*|0x4|*/ class CGxTex* cloudTex;
  /*<thisrel this+0x108>*/ /*|0x8|*/ class NTempest::C2Vector sunPosTexPt;
  /*<thisrel this+0x110>*/ /*|0x4|*/ float sunMoonPath;
  /*<thisrel this+0x114>*/ /*|0x4|*/ float sidn;
  /*<thisrel this+0x118>*/ /*|0x4|*/ float unitSelect;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall DNInfo(struct DNInfo&);
  void __thiscall DNInfo();
  struct DNInfo& __thiscall operator=(struct DNInfo&);
  void __thiscall ~DNInfo();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x11c>

struct MINIMAPINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ class CGPlayer_C* player;
  /*<thisrel this+0x4>*/ /*|0xc|*/ class NTempest::C3Vector currentPos;
  /*<thisrel this+0x10>*/ /*|0x4|*/ float radius;
  /*<thisrel this+0x14>*/ /*|0x4|*/ float layoutScale;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MINIMAPINFO();
  void __thiscall ~MINIMAPINFO();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x18>

struct OBJINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ unsigned __int64 object;
  /*<thisrel this+0x8>*/ /*|0x8|*/ class NTempest::C2Vector position;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall OBJINFO();
  void __thiscall ~OBJINFO();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x10>

struct DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH : class TSHashObject<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x1a0|*/ class ItemStats_C m_record;
  /*<thisrel this+0x1b8>*/ /*|0x4|*/ int m_dbkey;
  /*<thisrel this+0x1bc>*/ /*|0x1|*/ unsigned char m_haveData;
  /*<thisrel this+0x1c0>*/ /*|0xc|*/ class TSList<DBCACHECALLBACK,TSGetLink<DBCACHECALLBACK> > m_callbacks;
  /*<thisrel this+0x1cc>*/ /*|0x1|*/ unsigned char m_temp;

  // base classes -----------------------------------
  // baseclass class TSHashObject<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall DBCACHEHASH(struct DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH&);
  void __thiscall DBCACHEHASH();
  void __thiscall ~DBCACHEHASH();
  struct DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH& __thiscall operator=(struct DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x1d0>

struct TradeSkillInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int spellID;
  /*<thisrel this+0x4>*/ /*|0x4|*/ enum TRADESKILL_CATEGORY category;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int classID;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int subClassID;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int invSlots;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int itemLevel;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int numAvailable;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int enabled;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct TradeSkillSubClassInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int classID;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int subClassID;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int filteredCount;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int enabled;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int collapsed;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct VendorItem {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int m_muid;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int m_itemType;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int m_itemDisplayID;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int m_quantity;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int m_price;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int m_durability;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int m_stackCount;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c>

struct TradeItemData {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int entryID;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int displayID;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int count;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int enchantmentID;
  /*<thisrel this+0x10>*/ /*|0x8|*/ unsigned __int64 creator;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct CraftInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int spellID;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int skillLine;
  /*<thisrel this+0x8>*/ /*|0x4|*/ enum CRAFT_LEVEL_CATEGORY category;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct CraftSkillLineInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int skillLine;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int filteredCount;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int collapsed;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct PetitionVendorItem {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int m_muid;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int m_itemID;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int m_itemDisplayID;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int m_price;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int m_flags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct PetitionSignerInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ unsigned __int64 guid;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int choice;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH : class TSHashObject<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x13c8|*/ class CGPetition m_record;
  /*<thisrel this+0x13e0>*/ /*|0x4|*/ int m_dbkey;
  /*<thisrel this+0x13e4>*/ /*|0x1|*/ unsigned char m_haveData;
  /*<thisrel this+0x13e8>*/ /*|0xc|*/ class TSList<DBCACHECALLBACK,TSGetLink<DBCACHECALLBACK> > m_callbacks;
  /*<thisrel this+0x13f4>*/ /*|0x1|*/ unsigned char m_temp;

  // base classes -----------------------------------
  // baseclass class TSHashObject<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall DBCACHEHASH(struct DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH&);
  void __thiscall DBCACHEHASH();
  void __thiscall ~DBCACHEHASH();
  struct DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH& __thiscall operator=(struct DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x13f8>

struct CGUIBindings::AddMetaPrefix::__unnamed_f0_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int metaKey;
  /*<thisrel this+0x4>*/ /*|0x4|*/ char* metaStr;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct KEYBINDING : class TSHashObject<KEYBINDING,HASHKEY_STRI>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x4|*/ int index;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ char* command;

  // base classes -----------------------------------
  // baseclass class TSHashObject<KEYBINDING,HASHKEY_STRI>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall KEYBINDING(struct KEYBINDING&);
  void __thiscall KEYBINDING();
  void __thiscall ~KEYBINDING();
  struct KEYBINDING& __thiscall operator=(struct KEYBINDING&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x20>

struct KEYCOMMAND : class TSHashObject<KEYCOMMAND,HASHKEY_STRI>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x4|*/ int index;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int headerIndex;
  /*<thisrel this+0x20>*/ /*|0x4|*/ int function;
  /*<thisrel this+0x24>*/ /*|0x4|*/ int runOnUp;

  // base classes -----------------------------------
  // baseclass class TSHashObject<KEYCOMMAND,HASHKEY_STRI>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall KEYCOMMAND(struct KEYCOMMAND&);
  void __thiscall KEYCOMMAND();
  void __thiscall ~KEYCOMMAND();
  struct KEYCOMMAND& __thiscall operator=(struct KEYCOMMAND&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x28>

struct SkillInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int isProf;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int skillID;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int profLevel;
  /*<thisrel this+0xc>*/ /*|0x40|*/ char profName[64];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4c>

struct ProficiencyInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int minLevel;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int slot;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH : class TSHashObject<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x1f8|*/ class PageTextCache_C m_record;
  /*<thisrel this+0x210>*/ /*|0x4|*/ int m_dbkey;
  /*<thisrel this+0x214>*/ /*|0x1|*/ unsigned char m_haveData;
  /*<thisrel this+0x218>*/ /*|0xc|*/ class TSList<DBCACHECALLBACK,TSGetLink<DBCACHECALLBACK> > m_callbacks;
  /*<thisrel this+0x224>*/ /*|0x1|*/ unsigned char m_temp;

  // base classes -----------------------------------
  // baseclass class TSHashObject<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall DBCACHEHASH(struct DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH&);
  void __thiscall DBCACHEHASH();
  void __thiscall ~DBCACHEHASH();
  struct DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH& __thiscall operator=(struct DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x228>

struct TaxiNode {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int id;
  /*<thisrel this+0x4>*/ /*|0x4|*/ float offsetx;
  /*<thisrel this+0x8>*/ /*|0x4|*/ float offsety;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct QuestLogInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int questID;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int logIndex;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int isHeader;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH : class TSHashObject<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0xac0|*/ class QuestCache m_record;
  /*<thisrel this+0xad8>*/ /*|0x4|*/ int m_dbkey;
  /*<thisrel this+0xadc>*/ /*|0x1|*/ unsigned char m_haveData;
  /*<thisrel this+0xae0>*/ /*|0xc|*/ class TSList<DBCACHECALLBACK,TSGetLink<DBCACHECALLBACK> > m_callbacks;
  /*<thisrel this+0xaec>*/ /*|0x1|*/ unsigned char m_temp;

  // base classes -----------------------------------
  // baseclass class TSHashObject<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall DBCACHEHASH(struct DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH&);
  void __thiscall DBCACHEHASH();
  void __thiscall ~DBCACHEHASH();
  struct DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH& __thiscall operator=(struct DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xaf0>

struct DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH : class TSHashObject<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x20|*/ class CreatureStats_C m_record;
  /*<thisrel this+0x38>*/ /*|0x4|*/ int m_dbkey;
  /*<thisrel this+0x3c>*/ /*|0x1|*/ unsigned char m_haveData;
  /*<thisrel this+0x40>*/ /*|0xc|*/ class TSList<DBCACHECALLBACK,TSGetLink<DBCACHECALLBACK> > m_callbacks;
  /*<thisrel this+0x4c>*/ /*|0x1|*/ unsigned char m_temp;

  // base classes -----------------------------------
  // baseclass class TSHashObject<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall DBCACHEHASH(struct DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH&);
  void __thiscall DBCACHEHASH();
  void __thiscall ~DBCACHEHASH();
  struct DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH& __thiscall operator=(struct DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x50>

struct DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH : class TSHashObject<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x40|*/ class GameObjectStats_C m_record;
  /*<thisrel this+0x58>*/ /*|0x4|*/ int m_dbkey;
  /*<thisrel this+0x5c>*/ /*|0x1|*/ unsigned char m_haveData;
  /*<thisrel this+0x60>*/ /*|0xc|*/ class TSList<DBCACHECALLBACK,TSGetLink<DBCACHECALLBACK> > m_callbacks;
  /*<thisrel this+0x6c>*/ /*|0x1|*/ unsigned char m_temp;

  // base classes -----------------------------------
  // baseclass class TSHashObject<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall DBCACHEHASH(struct DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH&);
  void __thiscall DBCACHEHASH();
  void __thiscall ~DBCACHEHASH();
  struct DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH& __thiscall operator=(struct DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x70>

struct CQuestLogData {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int m_questID;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int m_questGiverID;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int m_questRewarderID;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int m_questFlags;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int m_questFailureTime;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int m_qtyMonsterToKill;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct TrainerServiceInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int spellID;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int skillLine;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int moneyCost;
  /*<thisrel this+0xc>*/ /*|0x2|*/ unsigned char pointCost[2];
  /*<thisrel this+0xe>*/ /*|0x1|*/ unsigned char reqLevel;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int reqSkillLine;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned int reqSkillRank;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned int reqSkillStep;
  /*<thisrel this+0x1c>*/ /*|0xc|*/ int reqAbility[3];
  /*<thisrel this+0x28>*/ /*|0x1|*/ unsigned char usable;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ int enabled;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x30>

struct TrainerSkillLineInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int skillLine;
  /*<thisrel this+0x4>*/ /*|0x18|*/ unsigned int numSkills[6];
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int enabled;
  /*<thisrel this+0x20>*/ /*|0x4|*/ int collapsed;
  /*<thisrel this+0x24>*/ /*|0x4|*/ int allCostPoints;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ClearSkills();

  // virtual functions ------------------------------
};
// <size 0x28>

struct WorldMapContinentInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int continentID;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int mapAreaID;
  /*<thisrel this+0x8>*/ /*|0x10|*/ class TSFixedArray<int> zoneList;
  /*<thisrel this+0x18>*/ /*|0x10000|*/ int chunkZones[128][128];
  /*<thisrel this+0x10018>*/ /*|0x10|*/ class NTempest::CRect hitRect;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall WorldMapContinentInfo(struct WorldMapContinentInfo&);
  void __thiscall WorldMapContinentInfo();
  struct WorldMapContinentInfo& __thiscall operator=(struct WorldMapContinentInfo&);
  void __thiscall ~WorldMapContinentInfo();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x10028>

struct WorldMapLandmarkInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int entryID;
  /*<thisrel this+0x4>*/ /*|0x4|*/ float x;
  /*<thisrel this+0x8>*/ /*|0x4|*/ float y;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int isPortLoc;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct CGLootSlot {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int pending;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int itemID;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int itemDisplayID;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int quantity;
  /*<thisrel this+0x10>*/ /*|0x1|*/ unsigned char slot;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct CGPartyInfo::RemoteStats {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int health;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int maxHealth;
  /*<thisrel this+0x8>*/ /*|0x4|*/ enum POWER_TYPE powerType;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int power;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int maxPower;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int classID;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int level;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int mapID;
  /*<thisrel this+0x20>*/ /*|0x4|*/ int areaID;
  /*<thisrel this+0x24>*/ /*|0xc|*/ class NTempest::C3Vector pos;
  /*<thisrel this+0x30>*/ /*|0x4|*/ int connected;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall RemoteStats();
  void __thiscall ~RemoteStats();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x34>

struct FADEOUTHASHOBJ : class TSHashObject<FADEOUTHASHOBJ,CHashKeyGUID>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x20>*/ /*|0x4|*/ struct HMODEL__* model;
  /*<thisrel this+0x24>*/ /*|0x4|*/ struct HTEXCOMPONENT__* texture;
  /*<thisrel this+0x28>*/ /*|0x30|*/ class NTempest::C34Matrix matrix;
  /*<thisrel this+0x58>*/ /*|0x4|*/ float renderScale;
  /*<thisrel this+0x5c>*/ /*|0x4|*/ unsigned int startTime;
  /*<thisrel this+0x60>*/ /*|0x1|*/ unsigned char startAlpha;

  // base classes -----------------------------------
  // baseclass class TSHashObject<FADEOUTHASHOBJ,CHashKeyGUID>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ~FADEOUTHASHOBJ();
  void __thiscall FADEOUTHASHOBJ(struct FADEOUTHASHOBJ&);
  void __thiscall FADEOUTHASHOBJ();
  struct FADEOUTHASHOBJ& __thiscall operator=(struct FADEOUTHASHOBJ&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x68>

struct CModelRecord : class TSLinkedNode<CModelRecord>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct HMODEL__* model;
  /*<thisrel this+0xc>*/ /*|0x4|*/ float distance;
  /*<thisrel this+0x10>*/ /*|0x4|*/ float scale;
  /*<thisrel this+0x18>*/ /*|0x8|*/ unsigned __int64 guid;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<CModelRecord>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CModelRecord(struct CModelRecord&);
  void __thiscall CModelRecord();
  void __thiscall CModelRecord::~CModelRecord();
  struct CModelRecord& __thiscall CModelRecord::operator=(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct CModelRecord& source);
  void __thiscall CModelRecord::Copy(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct CModelRecord& source);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x20>

struct CGWorldFrame::HitTestResult {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ unsigned __int64 object;
  /*<thisrel this+0x8>*/ /*|0xc|*/ class NTempest::C3Vector point;
  /*<thisrel this+0x14>*/ /*|0x4|*/ float distance;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall HitTestResult();
  void __thiscall ~HitTestResult();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x18>

struct CWorldClickEvent {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int button;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct CTerrainClickEvent {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xc|*/ class NTempest::C3Vector point;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int button;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CTerrainClickEvent();
  void __thiscall ~CTerrainClickEvent();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x10>

struct CSpriteClickEvent {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ unsigned __int64 objectGUID;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int button;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int time;
  /*<thisrel this+0x10>*/ /*|0x8|*/ class NTempest::C2Vector pos;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CSpriteClickEvent();
  void __thiscall ~CSpriteClickEvent();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x18>

struct CObjectTrackEvent {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ unsigned __int64 object;
  /*<thisrel this+0x8>*/ /*|0x8|*/ unsigned __int64 oldGUID;
  /*<thisrel this+0x10>*/ /*|0x4|*/ float x;
  /*<thisrel this+0x14>*/ /*|0x4|*/ float y;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CObjectTrackEvent();

  // virtual functions ------------------------------
};
// <size 0x18>

struct WorldObjCollisionHandlerData {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct HMODEL__* model;
  /*<thisrel this+0x4>*/ /*|0x18|*/ class NTempest::CAaBox collideExt;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ float scale;
  /*<thisrel this+0x20>*/ /*|0x40|*/ class NTempest::C44Matrix matrix;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall WorldObjCollisionHandlerData();
  struct WorldObjCollisionHandlerData& __thiscall operator=(struct WorldObjCollisionHandlerData&);
  void __thiscall ~WorldObjCollisionHandlerData();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x60>

struct PENDINGCHAT : class TSLinkedNode<PENDINGCHAT>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ int slashCmd;
  /*<thisrel this+0x10>*/ /*|0x8|*/ unsigned __int64 guid;
  /*<thisrel this+0x18>*/ /*|0x4|*/ char* text;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned int language;
  /*<thisrel this+0x20>*/ /*|0x4|*/ int waitingForUI;
  /*<thisrel this+0x24>*/ /*|0x4|*/ int parse;
  /*<thisrel this+0x28>*/ /*|0x80|*/ char channel[128];
  /*<thisrel this+0xa8>*/ /*|0x8|*/ unsigned __int64 guid2;
  /*<thisrel this+0xb0>*/ /*|0x5|*/ char specialFlag[5];

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<PENDINGCHAT>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall PENDINGCHAT(struct PENDINGCHAT&);
  void __thiscall PENDINGCHAT();
  void __thiscall ~PENDINGCHAT();
  struct PENDINGCHAT& __thiscall operator=(struct PENDINGCHAT&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xb8>

struct PENDINGTEXTEMOTE : class TSLinkedNode<PENDINGTEXTEMOTE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x8|*/ unsigned __int64 sender;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int textEmoteID;
  /*<thisrel this+0x14>*/ /*|0x4|*/ char* target;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int waitingForUI;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<PENDINGTEXTEMOTE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall PENDINGTEXTEMOTE(struct PENDINGTEXTEMOTE&);
  void __thiscall PENDINGTEXTEMOTE();
  void __thiscall ~PENDINGTEXTEMOTE();
  struct PENDINGTEXTEMOTE& __thiscall operator=(struct PENDINGTEXTEMOTE&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x20>

struct regex_t {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int re_magic;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int re_nsub;
  /*<thisrel this+0x8>*/ /*|0x4|*/ char* re_endp;
  /*<thisrel this+0xc>*/ /*|0x4|*/ struct re_guts* re_g;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct WORDLIST : class TSHashObject<WORDLIST,HASHKEY_LANGUAGE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x1c>*/ /*|0x14|*/ class TSGrowableArray<LanguageWordsRec const *> m_words;

  // base classes -----------------------------------
  // baseclass class TSHashObject<WORDLIST,HASHKEY_LANGUAGE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall WORDLIST(struct WORDLIST&);
  void __thiscall WORDLIST();
  struct WORDLIST& __thiscall operator=(struct WORDLIST&);
  void __thiscall ~WORDLIST();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x30>

struct ChatChannel {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int localID;
  /*<thisrel this+0x4>*/ /*|0x80|*/ char name[128];
  /*<thisrel this+0x84>*/ /*|0xc|*/ class TSList<PENDINGUSERLIST,TSGetLink<PENDINGUSERLIST> > pendingNames;
  /*<thisrel this+0x90>*/ /*|0x1|*/ unsigned char channelFlags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ~ChatChannel();
  void __thiscall ChatChannel(struct ChatChannel&);
  void __thiscall ChatChannel();
  struct ChatChannel& __thiscall operator=(struct ChatChannel&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x94>

struct regmatch_t {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long rm_so;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long rm_eo;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct StringToChatType::__unnamed_f1_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ enum SLASH_COMMAND_ID id;
  /*<thisrel this+0x4>*/ /*|0x4|*/ char* string;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct PENDINGUSERLIST : class TSLinkedNode<PENDINGUSERLIST>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x8|*/ unsigned __int64 guid;
  /*<thisrel this+0x10>*/ /*|0x1|*/ unsigned char flags;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<PENDINGUSERLIST>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall PENDINGUSERLIST(struct PENDINGUSERLIST&);
  void __thiscall PENDINGUSERLIST();
  struct PENDINGUSERLIST& __thiscall operator=(struct PENDINGUSERLIST&);
  void __thiscall ~PENDINGUSERLIST();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x18>

struct NearestEnemyData {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ unsigned __int64 guid;
  /*<thisrel this+0x8>*/ /*|0x4|*/ float distSq;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct GAMEERRORDESC {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ char* stringToken;
  /*<thisrel this+0x4>*/ /*|0x4|*/ enum ERROR_TEXT_PLACEMENT textPlacement;
  /*<thisrel this+0x8>*/ /*|0x4|*/ char* soundName;
  /*<thisrel this+0xc>*/ /*|0x4|*/ enum VOCALUISOUNDS voiceID;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int supressText;
  /*<thisrel this+0x14>*/ /*|0x4|*/ enum SLASH_COMMAND_ID slashCmd;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall GAMEERRORDESC::GAMEERRORDESC(/*<regrel ebp+0x8>*/ /*|0x4|*/ char* _stringToken, /*<regrel ebp+0xc>*/ /*|0x4|*/ enum ERROR_TEXT_PLACEMENT _textPlacement, /*<regrel ebp+0x10>*/ /*|0x4|*/ char* _soundName, /*<regrel ebp+0x14>*/ /*|0x4|*/ enum VOCALUISOUNDS _voiceID, /*<regrel ebp+0x18>*/ /*|0x4|*/ int _supressText, /*<regrel ebp+0x1c>*/ /*|0x4|*/ enum SLASH_COMMAND_ID _slashCmd);

  // virtual functions ------------------------------
};
// <size 0x18>

struct CinematicData {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ class CinematicSequencesRec* sequence;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct Sound* sequenceMusic;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int sequenceIndex;
  /*<thisrel this+0xc>*/ /*|0x4|*/ class CinematicCameraRec* camera;
  /*<thisrel this+0x10>*/ /*|0x4|*/ struct Sound* cameraMusic;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int zoneMusicWasEnabled;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct Script_SetCursor::__unnamed_f2_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ enum CURSORANIMATIONS animation;
  /*<thisrel this+0x4>*/ /*|0x4|*/ char* string;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct ClosestObjectMatchData {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ enum OBJECT_TYPE type;
  /*<thisrel this+0x4>*/ /*|0x4|*/ char* match;
  /*<thisrel this+0x8>*/ /*|0x4|*/ class CGUnit_C* source;
  /*<thisrel this+0xc>*/ /*|0x4|*/ class CGObject_C* object;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int best_match;
  /*<thisrel this+0x14>*/ /*|0x4|*/ float best_distance;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct ATTACKROUNDINFO : struct DAMAGELOGBASE  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0xc8>*/ /*|0x4|*/ unsigned int armorReduction;
  /*<thisrel this+0xcc>*/ /*|0x4|*/ enum VICTIMSTATES newVictimState;
  /*<thisrel this+0xd0>*/ /*|0x4|*/ unsigned int victimRoundDuration;
  /*<thisrel this+0xd4>*/ /*|0x4|*/ float dodgeRollFloat;
  /*<thisrel this+0xd8>*/ /*|0x4|*/ float dodgeRollNeededFloat;
  /*<thisrel this+0xdc>*/ /*|0x4|*/ float parryRollFloat;
  /*<thisrel this+0xe0>*/ /*|0x4|*/ float parryRollNeededFloat;
  /*<thisrel this+0xe4>*/ /*|0x4|*/ float blockRollFloat;
  /*<thisrel this+0xe8>*/ /*|0x4|*/ float blockRollNeededFloat;
  /*<thisrel this+0xec>*/ /*|0x4|*/ float stunRollFloat;
  /*<thisrel this+0xf0>*/ /*|0x4|*/ float stunRollNeededFloat;
  /*<thisrel this+0xf4>*/ /*|0x4|*/ unsigned int delayTime;
  /*<thisrel this+0xf8>*/ /*|0x4|*/ unsigned int spellDamageAdded;
  /*<thisrel this+0xfc>*/ /*|0x4|*/ unsigned int spellAddedDamage;
  /*<thisrel this+0x100>*/ /*|0x4|*/ unsigned int sinceLastSwing;
  /*<thisrel this+0x104>*/ /*|0x4|*/ float dualWieldHitRollFloat;
  /*<thisrel this+0x108>*/ /*|0x4|*/ float dualWieldHitRollNeededFloat;
  /*<thisrel this+0x10c>*/ /*|0x4|*/ int procSpell;

  // base classes -----------------------------------
  // baseclass struct DAMAGELOGBASE
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ATTACKROUNDINFO::ATTACKROUNDINFO(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct ATTACKROUNDINFO& __that);
  void __thiscall ATTACKROUNDINFO::ATTACKROUNDINFO();
  struct ATTACKROUNDINFO& __thiscall operator=(struct ATTACKROUNDINFO&);
  void __thiscall ~ATTACKROUNDINFO();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ void __thiscall ATTACKROUNDINFO::PI(/*<regrel ebp+0x8>*/ /*|0x4|*/ class CDataStore& msg, /*<regrel ebp+0xc>*/ /*|0x4|*/ int debug);
  virtual /*<vtableoff 0x0>*/ void __thiscall ATTACKROUNDINFO::UI(/*<regrel ebp+0x8>*/ /*|0x4|*/ class CDataStore& msg);
};
// <size 0x110>

struct SPELLLOG : struct DAMAGELOGBASE  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0xc8>*/ /*|0x4|*/ unsigned int auraEffectID;
  /*<thisrel this+0xcc>*/ /*|0x4|*/ unsigned int spellID;
  /*<thisrel this+0xd0>*/ /*|0x4|*/ unsigned int damageType;
  /*<thisrel this+0xd4>*/ /*|0x4|*/ float resistanceCoefficient;

  // base classes -----------------------------------
  // baseclass struct DAMAGELOGBASE
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall SPELLLOG(struct SPELLLOG&);
  void __thiscall SPELLLOG(unsigned __int64, unsigned __int64, unsigned int, float, float, unsigned int, unsigned int, float);
  void __thiscall SPELLLOG(unsigned __int64, unsigned __int64, int);
  void __thiscall SPELLLOG(unsigned __int64, unsigned int);
  struct SPELLLOG& __thiscall operator=(struct SPELLLOG&);
  void __thiscall ~SPELLLOG();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ void __thiscall SPELLLOG::PI(/*<regrel ebp+0x8>*/ /*|0x4|*/ class CDataStore& msg, /*<regrel ebp+0xc>*/ /*|0x4|*/ int debug);
  virtual /*<vtableoff 0x0>*/ void __thiscall SPELLLOG::UI(/*<regrel ebp+0x8>*/ /*|0x4|*/ class CDataStore& msg);
};
// <size 0xd8>

struct MIRRORTIMERDAMAGE : struct LOGBASE  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x4>*/ /*|0x4|*/ int damage;
  /*<thisrel this+0x8>*/ /*|0x8|*/ unsigned __int64 victim;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int amount;

  // base classes -----------------------------------
  // baseclass struct LOGBASE
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MIRRORTIMERDAMAGE(struct MIRRORTIMERDAMAGE&);
  void __thiscall MIRRORTIMERDAMAGE();
  void __thiscall MIRRORTIMERDAMAGE(enum UNIT_MIRROR_TIMER, unsigned __int64, int);
  struct MIRRORTIMERDAMAGE& __thiscall operator=(struct MIRRORTIMERDAMAGE&);
  void __thiscall ~MIRRORTIMERDAMAGE();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ void __thiscall MIRRORTIMERDAMAGE::PI(/*<regrel ebp+0x8>*/ /*|0x4|*/ class CDataStore& msg, /*<regrel ebp+0xc>*/ /*|0x4|*/ int debug);
  virtual /*<vtableoff 0x0>*/ void __thiscall MIRRORTIMERDAMAGE::UI(/*<regrel ebp+0x8>*/ /*|0x4|*/ class CDataStore& msg);
};
// <size 0x18>

struct ITEMPORTRAIT : class TSHashObject<ITEMPORTRAIT,HASHKEY_STR>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x18|*/ struct PortraitData portrait;

  // base classes -----------------------------------
  // baseclass class TSHashObject<ITEMPORTRAIT,HASHKEY_STR>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ITEMPORTRAIT(struct ITEMPORTRAIT&);
  void __thiscall ITEMPORTRAIT();
  struct ITEMPORTRAIT& __thiscall operator=(struct ITEMPORTRAIT&);
  void __thiscall ~ITEMPORTRAIT();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x30>

struct PLAYERPORTRAIT : class TSHashObject<PLAYERPORTRAIT,CHashKeyGUID>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x20>*/ /*|0x1|*/ unsigned char dirty;
  /*<thisrel this+0x24>*/ /*|0x18|*/ struct PortraitData portrait;

  // base classes -----------------------------------
  // baseclass class TSHashObject<PLAYERPORTRAIT,CHashKeyGUID>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall PLAYERPORTRAIT(struct PLAYERPORTRAIT&);
  void __thiscall PLAYERPORTRAIT();
  struct PLAYERPORTRAIT& __thiscall operator=(struct PLAYERPORTRAIT&);
  void __thiscall ~PLAYERPORTRAIT();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x40>

struct __unnamed_f3_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int enable;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int omni;
  /*<thisrel this+0x8>*/ /*|0x4|*/ float dirx;
  /*<thisrel this+0xc>*/ /*|0x4|*/ float diry;
  /*<thisrel this+0x10>*/ /*|0x4|*/ float dirz;
  /*<thisrel this+0x14>*/ /*|0x4|*/ float ambColorr;
  /*<thisrel this+0x18>*/ /*|0x4|*/ float ambColorg;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ float ambColorb;
  /*<thisrel this+0x20>*/ /*|0x4|*/ float dirColorr;
  /*<thisrel this+0x24>*/ /*|0x4|*/ float dirColorg;
  /*<thisrel this+0x28>*/ /*|0x4|*/ float dirColorb;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ float ambIntens;
  /*<thisrel this+0x30>*/ /*|0x4|*/ float dirIntens;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x34>

struct DIRTYFACE : class TSLinkedNode<DIRTYFACE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x8|*/ unsigned __int64 guid;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<DIRTYFACE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall DIRTYFACE(struct DIRTYFACE&);
  void __thiscall DIRTYFACE();
  struct DIRTYFACE& __thiscall operator=(struct DIRTYFACE&);
  void __thiscall ~DIRTYFACE();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x10>

struct UNITPORTRAIT : class TSHashObject<UNITPORTRAIT,HASHKEY_NONE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x18|*/ struct PortraitData portrait;

  // base classes -----------------------------------
  // baseclass class TSHashObject<UNITPORTRAIT,HASHKEY_NONE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall UNITPORTRAIT(struct UNITPORTRAIT&);
  void __thiscall UNITPORTRAIT();
  struct UNITPORTRAIT& __thiscall operator=(struct UNITPORTRAIT&);
  void __thiscall ~UNITPORTRAIT();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x30>

struct PortraitData {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct HTEXTURE__* texture;
  /*<thisrel this+0x4>*/ /*|0x14|*/ class TSGrowableArray<NTempest::CImVector> pixels;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall PortraitData(struct PortraitData&);
  void __thiscall PortraitData();
  void __thiscall ~PortraitData();
  struct PortraitData& __thiscall operator=(struct PortraitData&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x18>

struct CACHEENTRY : class TSHashObject<CACHEENTRY,HASHKEY_STRI>,  class CHandleObject  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x20>*/ /*|0x8|*/ class TSLink<CACHEENTRY> m_cacheLink;
  /*<thisrel this+0x28>*/ /*|0x4|*/ struct HTEXTURE__* m_texture;
  /*<thisrel this+0x2c>*/ /*|0x1c|*/ struct TEXTUREINFO m_textureInfo;
  /*<thisrel this+0x44>*/ /*|0x4|*/ unsigned int m_size;
  /*<thisrel this+0x48>*/ /*|0x4|*/ unsigned int m_expireTime;
  /*<thisrel this+0x4c>*/ /*|0x4|*/ int m_uncached;
  /*<thisrel this+0x50>*/ /*|0x4|*/ struct HMIPPEDTEXTURE__* m_selfReference;

  // base classes -----------------------------------
  // baseclass class TSHashObject<CACHEENTRY,HASHKEY_STRI>
  // <base data offset+0x8>

  // baseclass class CHandleObject
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall LoadData(char*);
  void __thiscall CACHEENTRY(struct CACHEENTRY&);
  void __thiscall CACHEENTRY();
  int __thiscall IsInUse();
  struct CACHEENTRY& __thiscall operator=(struct CACHEENTRY&);
  void __thiscall __local_vftable_ctor_closure();

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ void __thiscall ~CACHEENTRY();
  virtual /*<vtableoff 0x0>*/ void* __thiscall __vecDelDtor(unsigned int);
};
// <size 0x54>

struct CGInputControl::OnUpdate::__unnamed_f4_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int absvalue;
  /*<thisrel this+0x4>*/ /*|0x8|*/ float speed[2];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct CGCamera::PerformTerrainTilt::__unnamed_f5_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ float slope;
  /*<thisrel this+0x4>*/ /*|0x4|*/ float angle;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct RangeList::range {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ float m_min;
  /*<thisrel this+0x4>*/ /*|0x4|*/ float m_max;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct CameraShake : class TSLinkedNode<CameraShake>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ enum CGCameraShakeType m_shakeType;
  /*<thisrel this+0xc>*/ /*|0x4|*/ enum CGCameraDir m_direction;
  /*<thisrel this+0x10>*/ /*|0x4|*/ float m_amplitude;
  /*<thisrel this+0x14>*/ /*|0x4|*/ float m_frequency;
  /*<thisrel this+0x18>*/ /*|0x4|*/ float m_duration;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ float m_phase;
  /*<thisrel this+0x20>*/ /*|0x4|*/ float m_coefficient;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned long m_timestamp;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<CameraShake>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CameraShake(struct CameraShake&);
  void __thiscall CameraShake();
  struct CameraShake& __thiscall operator=(struct CameraShake&);
  void __thiscall ~CameraShake();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x28>

struct ItemEnchantment {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int id;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int expiration;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int chargesRemaining;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ItemEnchantment(int, int, int);
  struct ItemEnchantment& __thiscall operator=(struct ItemEnchantment&);
  unsigned char __thiscall operator==(struct ItemEnchantment&);
  unsigned char __thiscall operator!=(struct ItemEnchantment&);
  void __thiscall __dflt_ctor_closure();

  // virtual functions ------------------------------
};
// <size 0xc>

struct TooltipExtendedItemInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x14|*/ int enchantment[5];
  /*<thisrel this+0x14>*/ /*|0x14|*/ unsigned int enchantmentExpiration[5];
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned int cooldownTime;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ int proposedEnchantment;
  /*<thisrel this+0x30>*/ /*|0x8|*/ unsigned __int64 creator;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x38>

struct __unnamed_f6_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ class NTempest::CRect  (function*)(enum SCREENRECTGRIDS, class NTempest::CRect);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct GRIDRECTLIST {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x14|*/ class TSGrowableArray<NTempest::CRect> rectList;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall GRIDRECTLIST(struct GRIDRECTLIST&);
  void __thiscall GRIDRECTLIST();
  struct GRIDRECTLIST& __thiscall operator=(struct GRIDRECTLIST&);
  void __thiscall ~GRIDRECTLIST();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x14>

struct BFSNODE : class TSLinkedNode<BFSNODE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x10|*/ class NTempest::CRect nodeRect;
  /*<thisrel this+0x18>*/ /*|0x4|*/ enum TEST_DIRECTION dontTestDirection;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<BFSNODE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall BFSNODE(struct BFSNODE&);
  void __thiscall BFSNODE();
  struct BFSNODE& __thiscall operator=(struct BFSNODE&);
  void __thiscall ~BFSNODE();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x1c>

struct NETCLIENTNODE : class TSLinkedNode<NETCLIENTNODE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ class NetClient* client;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<NETCLIENTNODE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall NETCLIENTNODE(struct NETCLIENTNODE&);
  void __thiscall NETCLIENTNODE();
  struct NETCLIENTNODE& __thiscall operator=(struct NETCLIENTNODE&);
  void __thiscall ~NETCLIENTNODE();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xc>

struct CLIENT_NETSTATS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long bytesSent;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long messagesSent;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long sendTimestamp;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long bytesReceived;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long messagesReceived;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long receivTimestamp;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long logTimestamp;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c>

struct DBCACHECALLBACK : class TSLinkedNode<DBCACHECALLBACK>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ void  (m_callback*)(int, unsigned __int64&, void*, unsigned char);
  /*<thisrel this+0x10>*/ /*|0x8|*/ unsigned __int64 m_guid;
  /*<thisrel this+0x18>*/ /*|0x4|*/ void* m_cbArg;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<DBCACHECALLBACK>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall DBCACHECALLBACK(struct DBCACHECALLBACK&);
  void __thiscall DBCACHECALLBACK();
  struct DBCACHECALLBACK& __thiscall operator=(struct DBCACHECALLBACK&);
  void __thiscall ~DBCACHECALLBACK();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x20>

struct DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH : class TSHashObject<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x8|*/ class NPCText m_record;
  /*<thisrel this+0x20>*/ /*|0x4|*/ int m_dbkey;
  /*<thisrel this+0x24>*/ /*|0x1|*/ unsigned char m_haveData;
  /*<thisrel this+0x28>*/ /*|0xc|*/ class TSList<DBCACHECALLBACK,TSGetLink<DBCACHECALLBACK> > m_callbacks;
  /*<thisrel this+0x34>*/ /*|0x1|*/ unsigned char m_temp;

  // base classes -----------------------------------
  // baseclass class TSHashObject<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall DBCACHEHASH(struct DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH&);
  void __thiscall DBCACHEHASH();
  void __thiscall ~DBCACHEHASH();
  struct DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH& __thiscall operator=(struct DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x38>

struct DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH : class TSHashObject<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x38|*/ class PetNameCache m_record;
  /*<thisrel this+0x50>*/ /*|0x4|*/ int m_dbkey;
  /*<thisrel this+0x54>*/ /*|0x1|*/ unsigned char m_haveData;
  /*<thisrel this+0x58>*/ /*|0xc|*/ class TSList<DBCACHECALLBACK,TSGetLink<DBCACHECALLBACK> > m_callbacks;
  /*<thisrel this+0x64>*/ /*|0x1|*/ unsigned char m_temp;

  // base classes -----------------------------------
  // baseclass class TSHashObject<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall DBCACHEHASH(struct DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH&);
  void __thiscall DBCACHEHASH();
  void __thiscall ~DBCACHEHASH();
  struct DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH& __thiscall operator=(struct DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x68>

struct VARIATIONSECTIONS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x10|*/ enum CHARTEXTURESECTIONID section[4];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct _D3DCOLORVALUE {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ float r;
  /*<thisrel this+0x4>*/ /*|0x4|*/ float g;
  /*<thisrel this+0x8>*/ /*|0x4|*/ float b;
  /*<thisrel this+0xc>*/ /*|0x4|*/ float a;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct _D3DVECTOR {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ float x;
  /*<thisrel this+0x4>*/ /*|0x4|*/ float y;
  /*<thisrel this+0x8>*/ /*|0x4|*/ float z;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct _D3DLIGHT9 {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ enum _D3DLIGHTTYPE Type;
  /*<thisrel this+0x4>*/ /*|0x10|*/ struct _D3DCOLORVALUE Diffuse;
  /*<thisrel this+0x14>*/ /*|0x10|*/ struct _D3DCOLORVALUE Specular;
  /*<thisrel this+0x24>*/ /*|0x10|*/ struct _D3DCOLORVALUE Ambient;
  /*<thisrel this+0x34>*/ /*|0xc|*/ struct _D3DVECTOR Position;
  /*<thisrel this+0x40>*/ /*|0xc|*/ struct _D3DVECTOR Direction;
  /*<thisrel this+0x4c>*/ /*|0x4|*/ float Range;
  /*<thisrel this+0x50>*/ /*|0x4|*/ float Falloff;
  /*<thisrel this+0x54>*/ /*|0x4|*/ float Attenuation0;
  /*<thisrel this+0x58>*/ /*|0x4|*/ float Attenuation1;
  /*<thisrel this+0x5c>*/ /*|0x4|*/ float Attenuation2;
  /*<thisrel this+0x60>*/ /*|0x4|*/ float Theta;
  /*<thisrel this+0x64>*/ /*|0x4|*/ float Phi;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x68>

struct _D3DMATERIAL9 {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x10|*/ struct _D3DCOLORVALUE Diffuse;
  /*<thisrel this+0x10>*/ /*|0x10|*/ struct _D3DCOLORVALUE Ambient;
  /*<thisrel this+0x20>*/ /*|0x10|*/ struct _D3DCOLORVALUE Specular;
  /*<thisrel this+0x30>*/ /*|0x10|*/ struct _D3DCOLORVALUE Emissive;
  /*<thisrel this+0x40>*/ /*|0x4|*/ float Power;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x44>

struct _D3DPRESENT_PARAMETERS_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int BackBufferWidth;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int BackBufferHeight;
  /*<thisrel this+0x8>*/ /*|0x4|*/ enum _D3DFORMAT BackBufferFormat;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int BackBufferCount;
  /*<thisrel this+0x10>*/ /*|0x4|*/ enum _D3DMULTISAMPLE_TYPE MultiSampleType;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long MultiSampleQuality;
  /*<thisrel this+0x18>*/ /*|0x4|*/ enum _D3DSWAPEFFECT SwapEffect;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ struct HWND__* hDeviceWindow;
  /*<thisrel this+0x20>*/ /*|0x4|*/ int Windowed;
  /*<thisrel this+0x24>*/ /*|0x4|*/ int EnableAutoDepthStencil;
  /*<thisrel this+0x28>*/ /*|0x4|*/ enum _D3DFORMAT AutoDepthStencilFormat;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ unsigned long Flags;
  /*<thisrel this+0x30>*/ /*|0x4|*/ unsigned int FullScreen_RefreshRateInHz;
  /*<thisrel this+0x34>*/ /*|0x4|*/ unsigned int PresentationInterval;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x38>

struct IDirect3DSurface9 : struct IDirect3DResource9  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IDirect3DResource9
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirect3DSurface9(struct IDirect3DSurface9&);
  void __thiscall IDirect3DSurface9();
  struct IDirect3DSurface9& __thiscall operator=(struct IDirect3DSurface9&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetDevice(struct IDirect3DDevice9**) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall SetPrivateData(struct _GUID&, void*, unsigned long, unsigned long) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetPrivateData(struct _GUID&, void*, unsigned long*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall FreePrivateData(struct _GUID&) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall SetPriority(unsigned long) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall GetPriority() = 0;
  virtual /*<vtableoff 0x0>*/ void __stdcall PreLoad() = 0;
  virtual /*<vtableoff 0x0>*/ enum _D3DRESOURCETYPE __stdcall GetType() = 0;
  virtual /*<vtableoff 0x2c>*/ long __stdcall GetContainer(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x30>*/ long __stdcall GetDesc(struct _D3DSURFACE_DESC*) = 0;
  virtual /*<vtableoff 0x34>*/ long __stdcall LockRect(struct _D3DLOCKED_RECT*, struct tagRECT*, unsigned long) = 0;
  virtual /*<vtableoff 0x38>*/ long __stdcall UnlockRect() = 0;
  virtual /*<vtableoff 0x3c>*/ long __stdcall GetDC(struct HDC__**) = 0;
  virtual /*<vtableoff 0x40>*/ long __stdcall ReleaseDC(struct HDC__*) = 0;
};
// <size 0x4>

struct _D3DSURFACE_DESC {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ enum _D3DFORMAT Format;
  /*<thisrel this+0x4>*/ /*|0x4|*/ enum _D3DRESOURCETYPE Type;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long Usage;
  /*<thisrel this+0xc>*/ /*|0x4|*/ enum _D3DPOOL Pool;
  /*<thisrel this+0x10>*/ /*|0x4|*/ enum _D3DMULTISAMPLE_TYPE MultiSampleType;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long MultiSampleQuality;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned int Width;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned int Height;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct _D3DLOCKED_RECT {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int Pitch;
  /*<thisrel this+0x4>*/ /*|0x4|*/ void* pBits;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct _D3DVIEWPORT9 {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long X;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long Y;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long Width;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long Height;
  /*<thisrel this+0x10>*/ /*|0x4|*/ float MinZ;
  /*<thisrel this+0x14>*/ /*|0x4|*/ float MaxZ;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct _D3DMATRIX {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ float _11;
  /*<thisrel this+0x4>*/ /*|0x4|*/ float _12;
  /*<thisrel this+0x8>*/ /*|0x4|*/ float _13;
  /*<thisrel this+0xc>*/ /*|0x4|*/ float _14;
  /*<thisrel this+0x10>*/ /*|0x4|*/ float _21;
  /*<thisrel this+0x14>*/ /*|0x4|*/ float _22;
  /*<thisrel this+0x18>*/ /*|0x4|*/ float _23;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ float _24;
  /*<thisrel this+0x20>*/ /*|0x4|*/ float _31;
  /*<thisrel this+0x24>*/ /*|0x4|*/ float _32;
  /*<thisrel this+0x28>*/ /*|0x4|*/ float _33;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ float _34;
  /*<thisrel this+0x30>*/ /*|0x4|*/ float _41;
  /*<thisrel this+0x34>*/ /*|0x4|*/ float _42;
  /*<thisrel this+0x38>*/ /*|0x4|*/ float _43;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ float _44;
  /*<thisrel this+0x0>*/ /*|0x40|*/ float m[4][4];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x40>

struct D3DXMATRIX : struct _D3DMATRIX  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct _D3DMATRIX
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall D3DXMATRIX(float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float);
  void __thiscall D3DXMATRIX(struct D3DXFLOAT16*);
  void __thiscall D3DXMATRIX(struct _D3DMATRIX&);
  void __thiscall D3DXMATRIX(float*);
  void __thiscall D3DXMATRIX();
  float __thiscall operator()(unsigned int, unsigned int);
  float& __thiscall operator()(unsigned int, unsigned int);
  float* __thiscall operator float *();
  float* __thiscall operator const float *();
  struct D3DXMATRIX& __thiscall operator*=(float);
  struct D3DXMATRIX& __thiscall operator*=(struct D3DXMATRIX&);
  struct D3DXMATRIX& __thiscall operator+=(struct D3DXMATRIX&);
  struct D3DXMATRIX& __thiscall operator-=(struct D3DXMATRIX&);
  struct D3DXMATRIX& __thiscall operator/=(float);
  struct D3DXMATRIX __thiscall operator+(struct D3DXMATRIX&);
  struct D3DXMATRIX __thiscall operator+();
  struct D3DXMATRIX __thiscall operator-(struct D3DXMATRIX&);
  struct D3DXMATRIX __thiscall operator-();
  struct D3DXMATRIX __thiscall operator*(float);
  struct D3DXMATRIX __thiscall operator*(struct D3DXMATRIX&);
  struct D3DXMATRIX __thiscall operator/(float);
  int __thiscall operator==(struct D3DXMATRIX&);
  int __thiscall operator!=(struct D3DXMATRIX&);

  // virtual functions ------------------------------
};
// <size 0x40>

struct D3DXFLOAT16 {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short value;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall D3DXFLOAT16(struct D3DXFLOAT16&);
  void __thiscall D3DXFLOAT16(float);
  void __thiscall D3DXFLOAT16();
  float __thiscall operator float();
  int __thiscall operator==(struct D3DXFLOAT16&);
  int __thiscall operator!=(struct D3DXFLOAT16&);

  // virtual functions ------------------------------
};
// <size 0x2>

struct IDirect3DVertexBuffer9 : struct IDirect3DResource9  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IDirect3DResource9
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirect3DVertexBuffer9(struct IDirect3DVertexBuffer9&);
  void __thiscall IDirect3DVertexBuffer9();
  struct IDirect3DVertexBuffer9& __thiscall operator=(struct IDirect3DVertexBuffer9&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetDevice(struct IDirect3DDevice9**) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall SetPrivateData(struct _GUID&, void*, unsigned long, unsigned long) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetPrivateData(struct _GUID&, void*, unsigned long*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall FreePrivateData(struct _GUID&) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall SetPriority(unsigned long) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall GetPriority() = 0;
  virtual /*<vtableoff 0x0>*/ void __stdcall PreLoad() = 0;
  virtual /*<vtableoff 0x0>*/ enum _D3DRESOURCETYPE __stdcall GetType() = 0;
  virtual /*<vtableoff 0x2c>*/ long __stdcall Lock(unsigned int, unsigned int, void**, unsigned long) = 0;
  virtual /*<vtableoff 0x30>*/ long __stdcall Unlock() = 0;
  virtual /*<vtableoff 0x34>*/ long __stdcall GetDesc(struct _D3DVERTEXBUFFER_DESC*) = 0;
};
// <size 0x4>

struct IDirect3DIndexBuffer9 : struct IDirect3DResource9  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IDirect3DResource9
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirect3DIndexBuffer9(struct IDirect3DIndexBuffer9&);
  void __thiscall IDirect3DIndexBuffer9();
  struct IDirect3DIndexBuffer9& __thiscall operator=(struct IDirect3DIndexBuffer9&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetDevice(struct IDirect3DDevice9**) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall SetPrivateData(struct _GUID&, void*, unsigned long, unsigned long) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetPrivateData(struct _GUID&, void*, unsigned long*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall FreePrivateData(struct _GUID&) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall SetPriority(unsigned long) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall GetPriority() = 0;
  virtual /*<vtableoff 0x0>*/ void __stdcall PreLoad() = 0;
  virtual /*<vtableoff 0x0>*/ enum _D3DRESOURCETYPE __stdcall GetType() = 0;
  virtual /*<vtableoff 0x2c>*/ long __stdcall Lock(unsigned int, unsigned int, void**, unsigned long) = 0;
  virtual /*<vtableoff 0x30>*/ long __stdcall Unlock() = 0;
  virtual /*<vtableoff 0x34>*/ long __stdcall GetDesc(struct _D3DINDEXBUFFER_DESC*) = 0;
};
// <size 0x4>

struct CGxBufOp {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ enum EGxBufOp op;
  /*<thisrel this+0x4>*/ /*|0x1c|*/ void** mem[7];
  /*<thisrel this+0x20>*/ /*|0x1c|*/ unsigned int stride[7];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CGxBufOp();
  void __thiscall Set(enum EGxVertexMember, void*, unsigned int);

  // virtual functions ------------------------------
};
// <size 0x3c>

struct IDirect3DTexture9 : struct IDirect3DBaseTexture9  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IDirect3DBaseTexture9
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirect3DTexture9(struct IDirect3DTexture9&);
  void __thiscall IDirect3DTexture9();
  struct IDirect3DTexture9& __thiscall operator=(struct IDirect3DTexture9&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetDevice(struct IDirect3DDevice9**) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall SetPrivateData(struct _GUID&, void*, unsigned long, unsigned long) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetPrivateData(struct _GUID&, void*, unsigned long*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall FreePrivateData(struct _GUID&) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall SetPriority(unsigned long) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall GetPriority() = 0;
  virtual /*<vtableoff 0x0>*/ void __stdcall PreLoad() = 0;
  virtual /*<vtableoff 0x0>*/ enum _D3DRESOURCETYPE __stdcall GetType() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall SetLOD(unsigned long) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall GetLOD() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall GetLevelCount() = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall SetAutoGenFilterType(enum _D3DTEXTUREFILTERTYPE) = 0;
  virtual /*<vtableoff 0x0>*/ enum _D3DTEXTUREFILTERTYPE __stdcall GetAutoGenFilterType() = 0;
  virtual /*<vtableoff 0x0>*/ void __stdcall GenerateMipSubLevels() = 0;
  virtual /*<vtableoff 0x44>*/ long __stdcall GetLevelDesc(unsigned int, struct _D3DSURFACE_DESC*) = 0;
  virtual /*<vtableoff 0x48>*/ long __stdcall GetSurfaceLevel(unsigned int, struct IDirect3DSurface9**) = 0;
  virtual /*<vtableoff 0x4c>*/ long __stdcall LockRect(unsigned int, struct _D3DLOCKED_RECT*, struct tagRECT*, unsigned long) = 0;
  virtual /*<vtableoff 0x50>*/ long __stdcall UnlockRect(unsigned int) = 0;
  virtual /*<vtableoff 0x54>*/ long __stdcall AddDirtyRect(struct tagRECT*) = 0;
};
// <size 0x4>

struct ID3DXBuffer : struct IUnknown  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IUnknown
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ID3DXBuffer(struct ID3DXBuffer&);
  void __thiscall ID3DXBuffer();
  struct ID3DXBuffer& __thiscall operator=(struct ID3DXBuffer&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0xc>*/ void* __stdcall GetBufferPointer() = 0;
  virtual /*<vtableoff 0x10>*/ unsigned long __stdcall GetBufferSize() = 0;
};
// <size 0x4>

struct IDirect3DPixelShader9 : struct IUnknown  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IUnknown
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirect3DPixelShader9(struct IDirect3DPixelShader9&);
  void __thiscall IDirect3DPixelShader9();
  struct IDirect3DPixelShader9& __thiscall operator=(struct IDirect3DPixelShader9&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0xc>*/ long __stdcall GetDevice(struct IDirect3DDevice9**) = 0;
  virtual /*<vtableoff 0x10>*/ long __stdcall GetFunction(void*, unsigned int*) = 0;
};
// <size 0x4>

struct RegisterCombiners::CombinerPortion {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x30|*/ struct RegisterCombiners::CombinerVariable variable[4];
  /*<thisrel this+0x30>*/ /*|0x18|*/ struct RegisterCombiners::CombinerOutput output;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall RegisterCombiners::CombinerPortion::Realize(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int stage, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int portion);

  // virtual functions ------------------------------
};
// <size 0x48>

struct RegisterCombiners::GeneralCombiner {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x90|*/ struct RegisterCombiners::CombinerPortion portion[2];
  /*<thisrel this+0x90>*/ /*|0x20|*/ class NTempest::C4Vector constants[2];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall RegisterCombiners::GeneralCombiner::Realize(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int stage, /*<regrel ebp+0xc>*/ /*|0x4|*/ int perStageConstants);
  void __thiscall GeneralCombiner();
  void __thiscall ~GeneralCombiner();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xb0>

struct RegisterCombiners::FinalCombiner {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x54|*/ struct RegisterCombiners::CombinerVariable variable[7];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall RegisterCombiners::FinalCombiner::Realize();

  // virtual functions ------------------------------
};
// <size 0x54>

struct HGLRC__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct CGxFormat {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long apiSpecificModeID;
  /*<thisrel this+0x4>*/ /*|0x1|*/ unsigned char hwTnL;
  /*<thisrel this+0x5>*/ /*|0x1|*/ unsigned char fixLag;
  /*<thisrel this+0x6>*/ /*|0x1|*/ unsigned char window;
  /*<thisrel this+0x8>*/ /*|0x4|*/ enum CGxFormat::Format depthFormat;
  /*<thisrel this+0xc>*/ /*|0x8|*/ class NTempest::C2iVector size;
  /*<thisrel this+0x14>*/ /*|0x4|*/ enum CGxFormat::Format colorFormat;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned int refreshRate;
  /*<thisrel this+0x1c>*/ /*|0x1|*/ unsigned char vsync;
  /*<thisrel this+0x20>*/ /*|0x8|*/ class NTempest::C2iVector pos;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CGxFormat::CGxFormat(/*<regrel ebp+0x8>*/ /*|0x1|*/ unsigned char p_window, /*<regrel ebp+0xc>*/ /*|0x4|*/ class NTempest::C2iVector& p_size, /*<regrel ebp+0x10>*/ /*|0x4|*/ enum CGxFormat::Format p_colorFormat, /*<regrel ebp+0x14>*/ /*|0x4|*/ enum CGxFormat::Format p_depthFormat, /*<regrel ebp+0x18>*/ /*|0x4|*/ unsigned int p_refreshRate, /*<regrel ebp+0x1c>*/ /*|0x1|*/ unsigned char p_vsync, /*<regrel ebp+0x20>*/ /*|0x1|*/ unsigned char p_hwTnl, /*<regrel ebp+0x24>*/ /*|0x1|*/ unsigned char p_fixLag);
  void __thiscall CGxFormat::CGxFormat();
  void __thiscall CGxFormat::~CGxFormat();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x28>

struct tagPIXELFORMATDESCRIPTOR {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short nSize;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short nVersion;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x8>*/ /*|0x1|*/ unsigned char iPixelType;
  /*<thisrel this+0x9>*/ /*|0x1|*/ unsigned char cColorBits;
  /*<thisrel this+0xa>*/ /*|0x1|*/ unsigned char cRedBits;
  /*<thisrel this+0xb>*/ /*|0x1|*/ unsigned char cRedShift;
  /*<thisrel this+0xc>*/ /*|0x1|*/ unsigned char cGreenBits;
  /*<thisrel this+0xd>*/ /*|0x1|*/ unsigned char cGreenShift;
  /*<thisrel this+0xe>*/ /*|0x1|*/ unsigned char cBlueBits;
  /*<thisrel this+0xf>*/ /*|0x1|*/ unsigned char cBlueShift;
  /*<thisrel this+0x10>*/ /*|0x1|*/ unsigned char cAlphaBits;
  /*<thisrel this+0x11>*/ /*|0x1|*/ unsigned char cAlphaShift;
  /*<thisrel this+0x12>*/ /*|0x1|*/ unsigned char cAccumBits;
  /*<thisrel this+0x13>*/ /*|0x1|*/ unsigned char cAccumRedBits;
  /*<thisrel this+0x14>*/ /*|0x1|*/ unsigned char cAccumGreenBits;
  /*<thisrel this+0x15>*/ /*|0x1|*/ unsigned char cAccumBlueBits;
  /*<thisrel this+0x16>*/ /*|0x1|*/ unsigned char cAccumAlphaBits;
  /*<thisrel this+0x17>*/ /*|0x1|*/ unsigned char cDepthBits;
  /*<thisrel this+0x18>*/ /*|0x1|*/ unsigned char cStencilBits;
  /*<thisrel this+0x19>*/ /*|0x1|*/ unsigned char cAuxBuffers;
  /*<thisrel this+0x1a>*/ /*|0x1|*/ unsigned char iLayerType;
  /*<thisrel this+0x1b>*/ /*|0x1|*/ unsigned char bReserved;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned long dwLayerMask;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned long dwVisibleMask;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned long dwDamageMask;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x28>

struct HPBUFFERARB__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct tagPAINTSTRUCT {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct HDC__* hdc;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int fErase;
  /*<thisrel this+0x8>*/ /*|0x10|*/ struct tagRECT rcPaint;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int fRestore;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int fIncUpdate;
  /*<thisrel this+0x20>*/ /*|0x20|*/ unsigned char rgbReserved[32];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x40>

struct IDirect3D9 : struct IUnknown  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IUnknown
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirect3D9(struct IDirect3D9&);
  void __thiscall IDirect3D9();
  struct IDirect3D9& __thiscall operator=(struct IDirect3D9&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0xc>*/ long __stdcall RegisterSoftwareDevice(void*) = 0;
  virtual /*<vtableoff 0x10>*/ unsigned int __stdcall GetAdapterCount() = 0;
  virtual /*<vtableoff 0x14>*/ long __stdcall GetAdapterIdentifier(unsigned int, unsigned long, struct _D3DADAPTER_IDENTIFIER9*) = 0;
  virtual /*<vtableoff 0x18>*/ unsigned int __stdcall GetAdapterModeCount(unsigned int, enum _D3DFORMAT) = 0;
  virtual /*<vtableoff 0x1c>*/ long __stdcall EnumAdapterModes(unsigned int, enum _D3DFORMAT, unsigned int, struct _D3DDISPLAYMODE*) = 0;
  virtual /*<vtableoff 0x20>*/ long __stdcall GetAdapterDisplayMode(unsigned int, struct _D3DDISPLAYMODE*) = 0;
  virtual /*<vtableoff 0x24>*/ long __stdcall CheckDeviceType(unsigned int, enum _D3DDEVTYPE, enum _D3DFORMAT, enum _D3DFORMAT, int) = 0;
  virtual /*<vtableoff 0x28>*/ long __stdcall CheckDeviceFormat(unsigned int, enum _D3DDEVTYPE, enum _D3DFORMAT, unsigned long, enum _D3DRESOURCETYPE, enum _D3DFORMAT) = 0;
  virtual /*<vtableoff 0x2c>*/ long __stdcall CheckDeviceMultiSampleType(unsigned int, enum _D3DDEVTYPE, enum _D3DFORMAT, int, enum _D3DMULTISAMPLE_TYPE, unsigned long*) = 0;
  virtual /*<vtableoff 0x30>*/ long __stdcall CheckDepthStencilMatch(unsigned int, enum _D3DDEVTYPE, enum _D3DFORMAT, enum _D3DFORMAT, enum _D3DFORMAT) = 0;
  virtual /*<vtableoff 0x34>*/ long __stdcall CheckDeviceFormatConversion(unsigned int, enum _D3DDEVTYPE, enum _D3DFORMAT, enum _D3DFORMAT) = 0;
  virtual /*<vtableoff 0x38>*/ long __stdcall GetDeviceCaps(unsigned int, enum _D3DDEVTYPE, struct _D3DCAPS9*) = 0;
  virtual /*<vtableoff 0x3c>*/ struct HMONITOR__* __stdcall GetAdapterMonitor(unsigned int) = 0;
  virtual /*<vtableoff 0x40>*/ long __stdcall CreateDevice(unsigned int, enum _D3DDEVTYPE, struct HWND__*, unsigned long, struct _D3DPRESENT_PARAMETERS_*, struct IDirect3DDevice9**) = 0;
};
// <size 0x4>

struct _D3DDISPLAYMODE {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int Width;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int Height;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int RefreshRate;
  /*<thisrel this+0xc>*/ /*|0x4|*/ enum _D3DFORMAT Format;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct tagWNDCLASSEXA {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int cbSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int style;
  /*<thisrel this+0x8>*/ /*|0x4|*/ long  (lpfnWndProc*)(struct HWND__*, unsigned int, unsigned int, long);
  /*<thisrel this+0xc>*/ /*|0x4|*/ int cbClsExtra;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int cbWndExtra;
  /*<thisrel this+0x14>*/ /*|0x4|*/ struct HINSTANCE__* hInstance;
  /*<thisrel this+0x18>*/ /*|0x4|*/ struct HICON__* hIcon;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ struct HICON__* hCursor;
  /*<thisrel this+0x20>*/ /*|0x4|*/ struct HBRUSH__* hbrBackground;
  /*<thisrel this+0x24>*/ /*|0x4|*/ char* lpszMenuName;
  /*<thisrel this+0x28>*/ /*|0x4|*/ char* lpszClassName;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ struct HICON__* hIconSm;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x30>

struct CGxDeviceOpenGl::PixelFormatAttribute<int> {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int attribute;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int value;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall PixelFormatAttribute<int>(int, int);
  void __thiscall PixelFormatAttribute<int>();

  // virtual functions ------------------------------
};
// <size 0x8>

struct _DISPLAY_DEVICEA {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long cb;
  /*<thisrel this+0x4>*/ /*|0x20|*/ char DeviceName[32];
  /*<thisrel this+0x24>*/ /*|0x80|*/ char DeviceString[128];
  /*<thisrel this+0xa4>*/ /*|0x4|*/ unsigned long StateFlags;
  /*<thisrel this+0xa8>*/ /*|0x80|*/ char DeviceID[128];
  /*<thisrel this+0x128>*/ /*|0x80|*/ char DeviceKey[128];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1a8>

struct _devicemodeA {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x20|*/ unsigned char dmDeviceName[32];
  /*<thisrel this+0x20>*/ /*|0x2|*/ unsigned short dmSpecVersion;
  /*<thisrel this+0x22>*/ /*|0x2|*/ unsigned short dmDriverVersion;
  /*<thisrel this+0x24>*/ /*|0x2|*/ unsigned short dmSize;
  /*<thisrel this+0x26>*/ /*|0x2|*/ unsigned short dmDriverExtra;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned long dmFields;
  /*<thisrel this+0x2c>*/ /*|0x2|*/ short dmOrientation;
  /*<thisrel this+0x2e>*/ /*|0x2|*/ short dmPaperSize;
  /*<thisrel this+0x30>*/ /*|0x2|*/ short dmPaperLength;
  /*<thisrel this+0x32>*/ /*|0x2|*/ short dmPaperWidth;
  /*<thisrel this+0x2c>*/ /*|0x8|*/ struct _POINTL dmPosition;
  /*<thisrel this+0x34>*/ /*|0x2|*/ short dmScale;
  /*<thisrel this+0x36>*/ /*|0x2|*/ short dmCopies;
  /*<thisrel this+0x38>*/ /*|0x2|*/ short dmDefaultSource;
  /*<thisrel this+0x3a>*/ /*|0x2|*/ short dmPrintQuality;
  /*<thisrel this+0x3c>*/ /*|0x2|*/ short dmColor;
  /*<thisrel this+0x3e>*/ /*|0x2|*/ short dmDuplex;
  /*<thisrel this+0x40>*/ /*|0x2|*/ short dmYResolution;
  /*<thisrel this+0x42>*/ /*|0x2|*/ short dmTTOption;
  /*<thisrel this+0x44>*/ /*|0x2|*/ short dmCollate;
  /*<thisrel this+0x46>*/ /*|0x20|*/ unsigned char dmFormName[32];
  /*<thisrel this+0x66>*/ /*|0x2|*/ unsigned short dmLogPixels;
  /*<thisrel this+0x68>*/ /*|0x4|*/ unsigned long dmBitsPerPel;
  /*<thisrel this+0x6c>*/ /*|0x4|*/ unsigned long dmPelsWidth;
  /*<thisrel this+0x70>*/ /*|0x4|*/ unsigned long dmPelsHeight;
  /*<thisrel this+0x74>*/ /*|0x4|*/ unsigned long dmDisplayFlags;
  /*<thisrel this+0x74>*/ /*|0x4|*/ unsigned long dmNup;
  /*<thisrel this+0x78>*/ /*|0x4|*/ unsigned long dmDisplayFrequency;
  /*<thisrel this+0x7c>*/ /*|0x4|*/ unsigned long dmICMMethod;
  /*<thisrel this+0x80>*/ /*|0x4|*/ unsigned long dmICMIntent;
  /*<thisrel this+0x84>*/ /*|0x4|*/ unsigned long dmMediaType;
  /*<thisrel this+0x88>*/ /*|0x4|*/ unsigned long dmDitherType;
  /*<thisrel this+0x8c>*/ /*|0x4|*/ unsigned long dmReserved1;
  /*<thisrel this+0x90>*/ /*|0x4|*/ unsigned long dmReserved2;
  /*<thisrel this+0x94>*/ /*|0x4|*/ unsigned long dmPanningWidth;
  /*<thisrel this+0x98>*/ /*|0x4|*/ unsigned long dmPanningHeight;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x9c>

struct _D3DADAPTER_IDENTIFIER9 {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x200|*/ char Driver[512];
  /*<thisrel this+0x200>*/ /*|0x200|*/ char Description[512];
  /*<thisrel this+0x400>*/ /*|0x20|*/ char DeviceName[32];
  /*<thisrel this+0x420>*/ /*|0x8|*/ union _LARGE_INTEGER DriverVersion;
  /*<thisrel this+0x428>*/ /*|0x4|*/ unsigned long VendorId;
  /*<thisrel this+0x42c>*/ /*|0x4|*/ unsigned long DeviceId;
  /*<thisrel this+0x430>*/ /*|0x4|*/ unsigned long SubSysId;
  /*<thisrel this+0x434>*/ /*|0x4|*/ unsigned long Revision;
  /*<thisrel this+0x438>*/ /*|0x10|*/ struct _GUID DeviceIdentifier;
  /*<thisrel this+0x448>*/ /*|0x4|*/ unsigned long WHQLLevel;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x44c>

struct _D3DVSHADERCAPS2_0 {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long Caps;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int DynamicFlowControlDepth;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int NumTemps;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int StaticFlowControlDepth;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct _D3DPSHADERCAPS2_0 {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long Caps;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int DynamicFlowControlDepth;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int NumTemps;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int StaticFlowControlDepth;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int NumInstructionSlots;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct _D3DCAPS9 {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ enum _D3DDEVTYPE DeviceType;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int AdapterOrdinal;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long Caps;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long Caps2;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long Caps3;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long PresentationIntervals;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long CursorCaps;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned long DevCaps;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned long PrimitiveMiscCaps;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned long RasterCaps;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned long ZCmpCaps;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ unsigned long SrcBlendCaps;
  /*<thisrel this+0x30>*/ /*|0x4|*/ unsigned long DestBlendCaps;
  /*<thisrel this+0x34>*/ /*|0x4|*/ unsigned long AlphaCmpCaps;
  /*<thisrel this+0x38>*/ /*|0x4|*/ unsigned long ShadeCaps;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ unsigned long TextureCaps;
  /*<thisrel this+0x40>*/ /*|0x4|*/ unsigned long TextureFilterCaps;
  /*<thisrel this+0x44>*/ /*|0x4|*/ unsigned long CubeTextureFilterCaps;
  /*<thisrel this+0x48>*/ /*|0x4|*/ unsigned long VolumeTextureFilterCaps;
  /*<thisrel this+0x4c>*/ /*|0x4|*/ unsigned long TextureAddressCaps;
  /*<thisrel this+0x50>*/ /*|0x4|*/ unsigned long VolumeTextureAddressCaps;
  /*<thisrel this+0x54>*/ /*|0x4|*/ unsigned long LineCaps;
  /*<thisrel this+0x58>*/ /*|0x4|*/ unsigned long MaxTextureWidth;
  /*<thisrel this+0x5c>*/ /*|0x4|*/ unsigned long MaxTextureHeight;
  /*<thisrel this+0x60>*/ /*|0x4|*/ unsigned long MaxVolumeExtent;
  /*<thisrel this+0x64>*/ /*|0x4|*/ unsigned long MaxTextureRepeat;
  /*<thisrel this+0x68>*/ /*|0x4|*/ unsigned long MaxTextureAspectRatio;
  /*<thisrel this+0x6c>*/ /*|0x4|*/ unsigned long MaxAnisotropy;
  /*<thisrel this+0x70>*/ /*|0x4|*/ float MaxVertexW;
  /*<thisrel this+0x74>*/ /*|0x4|*/ float GuardBandLeft;
  /*<thisrel this+0x78>*/ /*|0x4|*/ float GuardBandTop;
  /*<thisrel this+0x7c>*/ /*|0x4|*/ float GuardBandRight;
  /*<thisrel this+0x80>*/ /*|0x4|*/ float GuardBandBottom;
  /*<thisrel this+0x84>*/ /*|0x4|*/ float ExtentsAdjust;
  /*<thisrel this+0x88>*/ /*|0x4|*/ unsigned long StencilCaps;
  /*<thisrel this+0x8c>*/ /*|0x4|*/ unsigned long FVFCaps;
  /*<thisrel this+0x90>*/ /*|0x4|*/ unsigned long TextureOpCaps;
  /*<thisrel this+0x94>*/ /*|0x4|*/ unsigned long MaxTextureBlendStages;
  /*<thisrel this+0x98>*/ /*|0x4|*/ unsigned long MaxSimultaneousTextures;
  /*<thisrel this+0x9c>*/ /*|0x4|*/ unsigned long VertexProcessingCaps;
  /*<thisrel this+0xa0>*/ /*|0x4|*/ unsigned long MaxActiveLights;
  /*<thisrel this+0xa4>*/ /*|0x4|*/ unsigned long MaxUserClipPlanes;
  /*<thisrel this+0xa8>*/ /*|0x4|*/ unsigned long MaxVertexBlendMatrices;
  /*<thisrel this+0xac>*/ /*|0x4|*/ unsigned long MaxVertexBlendMatrixIndex;
  /*<thisrel this+0xb0>*/ /*|0x4|*/ float MaxPointSize;
  /*<thisrel this+0xb4>*/ /*|0x4|*/ unsigned long MaxPrimitiveCount;
  /*<thisrel this+0xb8>*/ /*|0x4|*/ unsigned long MaxVertexIndex;
  /*<thisrel this+0xbc>*/ /*|0x4|*/ unsigned long MaxStreams;
  /*<thisrel this+0xc0>*/ /*|0x4|*/ unsigned long MaxStreamStride;
  /*<thisrel this+0xc4>*/ /*|0x4|*/ unsigned long VertexShaderVersion;
  /*<thisrel this+0xc8>*/ /*|0x4|*/ unsigned long MaxVertexShaderConst;
  /*<thisrel this+0xcc>*/ /*|0x4|*/ unsigned long PixelShaderVersion;
  /*<thisrel this+0xd0>*/ /*|0x4|*/ float PixelShader1xMaxValue;
  /*<thisrel this+0xd4>*/ /*|0x4|*/ unsigned long DevCaps2;
  /*<thisrel this+0xd8>*/ /*|0x4|*/ float MaxNpatchTessellationLevel;
  /*<thisrel this+0xdc>*/ /*|0x4|*/ unsigned long Reserved5;
  /*<thisrel this+0xe0>*/ /*|0x4|*/ unsigned int MasterAdapterOrdinal;
  /*<thisrel this+0xe4>*/ /*|0x4|*/ unsigned int AdapterOrdinalInGroup;
  /*<thisrel this+0xe8>*/ /*|0x4|*/ unsigned int NumberOfAdaptersInGroup;
  /*<thisrel this+0xec>*/ /*|0x4|*/ unsigned long DeclTypes;
  /*<thisrel this+0xf0>*/ /*|0x4|*/ unsigned long NumSimultaneousRTs;
  /*<thisrel this+0xf4>*/ /*|0x4|*/ unsigned long StretchRectFilterCaps;
  /*<thisrel this+0xf8>*/ /*|0x10|*/ struct _D3DVSHADERCAPS2_0 VS20Caps;
  /*<thisrel this+0x108>*/ /*|0x14|*/ struct _D3DPSHADERCAPS2_0 PS20Caps;
  /*<thisrel this+0x11c>*/ /*|0x4|*/ unsigned long VertexTextureFilterCaps;
  /*<thisrel this+0x120>*/ /*|0x4|*/ unsigned long MaxVShaderInstructionsExecuted;
  /*<thisrel this+0x124>*/ /*|0x4|*/ unsigned long MaxPShaderInstructionsExecuted;
  /*<thisrel this+0x128>*/ /*|0x4|*/ unsigned long MaxVertexShader30InstructionSlots;
  /*<thisrel this+0x12c>*/ /*|0x4|*/ unsigned long MaxPixelShader30InstructionSlots;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x130>

struct CGxMonitorMode {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ class NTempest::C2iVector size;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int bpp;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int refreshRate;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CGxMonitorMode::CGxMonitorMode();
  void __thiscall ~CGxMonitorMode();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x10>

struct CGxAppRenderState {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x10|*/ class CGxStateBom mValue;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long mStackDepth;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int mDirty;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CGxAppRenderState::CGxAppRenderState();

  // virtual functions ------------------------------
};
// <size 0x18>

struct CGxPushedRenderState {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ enum EGxRenderState mWhich;
  /*<thisrel this+0x4>*/ /*|0x10|*/ class CGxStateBom mValue;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long mStackDepth;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct CGxTexParms {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int width;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int height;
  /*<thisrel this+0x8>*/ /*|0x4|*/ enum EGxTexFormat format;
  /*<thisrel this+0xc>*/ /*|0x4|*/ struct CGxTexFlags flags;
  /*<thisrel this+0x10>*/ /*|0x4|*/ void* userArg;
  /*<thisrel this+0x14>*/ /*|0x4|*/ void  (userFunc*)(enum EGxTexCommand, unsigned int, unsigned int, unsigned int, unsigned int, void*, unsigned int&, void*&);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CGxTexParms();

  // virtual functions ------------------------------
};
// <size 0x18>

struct CGxShader::DirEntry {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int start;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int count;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct DxtColorBlock::Tables {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x40|*/ unsigned short dt135[32];
  /*<thisrel this+0x40>*/ /*|0x40|*/ unsigned short dt235[32];
  /*<thisrel this+0x80>*/ /*|0x80|*/ unsigned short dt136[64];
  /*<thisrel this+0x100>*/ /*|0x80|*/ unsigned short dt236[64];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall DxtColorBlock::Tables::Tables();

  // virtual functions ------------------------------
};
// <size 0x180>

struct C4LargePixel {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long b;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long g;
  /*<thisrel this+0x8>*/ /*|0x4|*/ long r;
  /*<thisrel this+0xc>*/ /*|0x4|*/ long a;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall C4LargePixel(unsigned int);
  void __thiscall C4LargePixel(long, long, long, long);
  void __thiscall C4LargePixel();
  struct C4LargePixel& __thiscall operator+=(struct C4LargePixel&);
  unsigned int __thiscall BitDepth();

  // virtual functions ------------------------------
};
// <size 0x10>

struct Dxt3Block : struct DxtBlock  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ struct Dxt3AlphaBlock alpha;
  /*<thisrel this+0x8>*/ /*|0x8|*/ struct DxtColorBlock color;

  // base classes -----------------------------------
  // baseclass struct DxtBlock
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall Dxt3Block();
  struct Dxt3Block& __thiscall operator=(struct Dxt3Block&);

  // virtual functions ------------------------------
};
// <size 0x10>

struct DxtRect {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int l;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int t;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int r;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int b;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int w;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned int h;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall Check();
  void __thiscall DxtRect();
  void __thiscall DxtRect(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int);
  void __thiscall DxtRect(unsigned int, unsigned int, unsigned int, unsigned int);

  // virtual functions ------------------------------
};
// <size 0x18>

struct Dxt1Block : struct DxtBlock  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ struct DxtColorBlock color;

  // base classes -----------------------------------
  // baseclass struct DxtBlock
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall Dxt1Block();
  struct Dxt1Block& __thiscall operator=(struct Dxt1Block&);

  // virtual functions ------------------------------
};
// <size 0x8>

struct DxtColorBlock : struct DxtBlock  {

  // static data ------------------------------------
  static /*<rva 0xa139d8>*/ /*|0x180|*/ struct DxtColorBlock::Tables tables;

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ class NTempest::CRgb565 color0;
  /*<thisrel this+0x2>*/ /*|0x2|*/ class NTempest::CRgb565 color1;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned char row[4];

  // base classes -----------------------------------
  // baseclass struct DxtBlock
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall DxtColorBlock();
  struct DxtColorBlock& __thiscall operator=(struct DxtColorBlock&);

  // virtual functions ------------------------------
};
// <size 0x8>

struct FT_StreamRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned char* base;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long size;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long pos;
  /*<thisrel this+0xc>*/ /*|0x4|*/ union FT_StreamDesc_ descriptor;
  /*<thisrel this+0x10>*/ /*|0x4|*/ union FT_StreamDesc_ pathname;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long  (read*)(struct FT_StreamRec_*, unsigned long, unsigned char*, unsigned long);
  /*<thisrel this+0x18>*/ /*|0x4|*/ void  (close*)(struct FT_StreamRec_*);
  /*<thisrel this+0x1c>*/ /*|0x4|*/ struct FT_MemoryRec_* memory;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned char* cursor;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned char* limit;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x28>

struct FT_MemoryRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ void* user;
  /*<thisrel this+0x4>*/ /*|0x4|*/ void*  (alloc*)(struct FT_MemoryRec_*, long);
  /*<thisrel this+0x8>*/ /*|0x4|*/ void  (free*)(struct FT_MemoryRec_*, void*);
  /*<thisrel this+0xc>*/ /*|0x4|*/ void*  (realloc*)(struct FT_MemoryRec_*, long, long, void*);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct FT_AutoHinterRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x14|*/ struct FT_ModuleRec_ root;
  /*<thisrel this+0x14>*/ /*|0x4|*/ struct AH_Hinter* hinter;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct FT_FaceRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long num_faces;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long face_index;
  /*<thisrel this+0x8>*/ /*|0x4|*/ long face_flags;
  /*<thisrel this+0xc>*/ /*|0x4|*/ long style_flags;
  /*<thisrel this+0x10>*/ /*|0x4|*/ long num_glyphs;
  /*<thisrel this+0x14>*/ /*|0x4|*/ char* family_name;
  /*<thisrel this+0x18>*/ /*|0x4|*/ char* style_name;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int num_fixed_sizes;
  /*<thisrel this+0x20>*/ /*|0x4|*/ struct FT_Bitmap_Size_* available_sizes;
  /*<thisrel this+0x24>*/ /*|0x4|*/ int num_charmaps;
  /*<thisrel this+0x28>*/ /*|0x4|*/ struct FT_CharMapRec_** charmaps;
  /*<thisrel this+0x2c>*/ /*|0x8|*/ struct FT_Generic_ generic;
  /*<thisrel this+0x34>*/ /*|0x10|*/ struct FT_BBox_ bbox;
  /*<thisrel this+0x44>*/ /*|0x2|*/ unsigned short units_per_EM;
  /*<thisrel this+0x46>*/ /*|0x2|*/ short ascender;
  /*<thisrel this+0x48>*/ /*|0x2|*/ short descender;
  /*<thisrel this+0x4a>*/ /*|0x2|*/ short height;
  /*<thisrel this+0x4c>*/ /*|0x2|*/ short max_advance_width;
  /*<thisrel this+0x4e>*/ /*|0x2|*/ short max_advance_height;
  /*<thisrel this+0x50>*/ /*|0x2|*/ short underline_position;
  /*<thisrel this+0x52>*/ /*|0x2|*/ short underline_thickness;
  /*<thisrel this+0x54>*/ /*|0x4|*/ struct FT_GlyphSlotRec_* glyph;
  /*<thisrel this+0x58>*/ /*|0x4|*/ struct FT_SizeRec_* size;
  /*<thisrel this+0x5c>*/ /*|0x4|*/ struct FT_CharMapRec_* charmap;
  /*<thisrel this+0x60>*/ /*|0x4|*/ struct FT_DriverRec_* driver;
  /*<thisrel this+0x64>*/ /*|0x4|*/ struct FT_MemoryRec_* memory;
  /*<thisrel this+0x68>*/ /*|0x4|*/ struct FT_StreamRec_* stream;
  /*<thisrel this+0x6c>*/ /*|0x8|*/ struct FT_ListRec_ sizes_list;
  /*<thisrel this+0x74>*/ /*|0x8|*/ struct FT_Generic_ autohint;
  /*<thisrel this+0x7c>*/ /*|0x4|*/ void* extensions;
  /*<thisrel this+0x80>*/ /*|0x4|*/ struct FT_Face_InternalRec_* internal;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x84>

struct FT_GlyphSlotRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct FT_LibraryRec_* library;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct FT_FaceRec_* face;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct FT_GlyphSlotRec_* next;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int flags;
  /*<thisrel this+0x10>*/ /*|0x8|*/ struct FT_Generic_ generic;
  /*<thisrel this+0x18>*/ /*|0x20|*/ struct FT_Glyph_Metrics_ metrics;
  /*<thisrel this+0x38>*/ /*|0x4|*/ long linearHoriAdvance;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ long linearVertAdvance;
  /*<thisrel this+0x40>*/ /*|0x8|*/ struct FT_Vector_ advance;
  /*<thisrel this+0x48>*/ /*|0x4|*/ int format;
  /*<thisrel this+0x4c>*/ /*|0x18|*/ struct FT_Bitmap_ bitmap;
  /*<thisrel this+0x64>*/ /*|0x4|*/ int bitmap_left;
  /*<thisrel this+0x68>*/ /*|0x4|*/ int bitmap_top;
  /*<thisrel this+0x6c>*/ /*|0x14|*/ struct FT_Outline_ outline;
  /*<thisrel this+0x80>*/ /*|0x4|*/ unsigned int num_subglyphs;
  /*<thisrel this+0x84>*/ /*|0x4|*/ struct FT_SubGlyph_* subglyphs;
  /*<thisrel this+0x88>*/ /*|0x4|*/ void* control_data;
  /*<thisrel this+0x8c>*/ /*|0x4|*/ long control_len;
  /*<thisrel this+0x90>*/ /*|0x4|*/ void* other;
  /*<thisrel this+0x94>*/ /*|0x4|*/ struct FT_Slot_InternalRec_* internal;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x98>

struct FT_SizeRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct FT_FaceRec_* face;
  /*<thisrel this+0x4>*/ /*|0x8|*/ struct FT_Generic_ generic;
  /*<thisrel this+0xc>*/ /*|0x1c|*/ struct FT_Size_Metrics_ metrics;
  /*<thisrel this+0x28>*/ /*|0x4|*/ struct FT_Size_InternalRec_* internal;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x2c>

struct FT_AutoHinter_Interface {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ void  (reset_face*)(struct FT_AutoHinterRec_*, struct FT_FaceRec_*);
  /*<thisrel this+0x4>*/ /*|0x4|*/ int  (load_glyph*)(struct FT_AutoHinterRec_*, struct FT_GlyphSlotRec_*, struct FT_SizeRec_*, unsigned int, unsigned long);
  /*<thisrel this+0x8>*/ /*|0x4|*/ void  (get_global_hints*)(struct FT_AutoHinterRec_*, struct FT_FaceRec_*, void**, long*);
  /*<thisrel this+0xc>*/ /*|0x4|*/ void  (done_global_hints*)(struct FT_AutoHinterRec_*, void*);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct FT_ModuleRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct FT_Module_Class_* clazz;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct FT_LibraryRec_* library;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct FT_MemoryRec_* memory;
  /*<thisrel this+0xc>*/ /*|0x8|*/ struct FT_Generic_ generic;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct FT_Module_Class_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long module_flags;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int module_size;
  /*<thisrel this+0x8>*/ /*|0x4|*/ char* module_name;
  /*<thisrel this+0xc>*/ /*|0x4|*/ long module_version;
  /*<thisrel this+0x10>*/ /*|0x4|*/ long module_requires;
  /*<thisrel this+0x14>*/ /*|0x4|*/ void* module_interface;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int  (module_init*)(struct FT_ModuleRec_*);
  /*<thisrel this+0x1c>*/ /*|0x4|*/ void  (module_done*)(struct FT_ModuleRec_*);
  /*<thisrel this+0x20>*/ /*|0x4|*/ void  (*)()  (get_interface*)(struct FT_ModuleRec_*, char*);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x24>

struct FT_LibraryRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct FT_MemoryRec_* memory;
  /*<thisrel this+0x4>*/ /*|0x8|*/ struct FT_Generic_ generic;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int num_modules;
  /*<thisrel this+0x10>*/ /*|0x40|*/ struct FT_ModuleRec_* modules[16];
  /*<thisrel this+0x50>*/ /*|0x8|*/ struct FT_ListRec_ renderers;
  /*<thisrel this+0x58>*/ /*|0x4|*/ struct FT_RendererRec_* cur_renderer;
  /*<thisrel this+0x5c>*/ /*|0x4|*/ struct FT_ModuleRec_* auto_hinter;
  /*<thisrel this+0x60>*/ /*|0x4|*/ unsigned char* raster_pool;
  /*<thisrel this+0x64>*/ /*|0x4|*/ unsigned long raster_pool_size;
  /*<thisrel this+0x68>*/ /*|0x10|*/ void  (*)(void*) debug_hooks[4];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x78>

struct AH_Hinter {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct FT_MemoryRec_* memory;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int flags;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int algorithm;
  /*<thisrel this+0xc>*/ /*|0x4|*/ struct FT_FaceRec_* face;
  /*<thisrel this+0x10>*/ /*|0x4|*/ struct AH_Face_Globals_* globals;
  /*<thisrel this+0x14>*/ /*|0x4|*/ struct AH_Outline_* glyph;
  /*<thisrel this+0x18>*/ /*|0x4|*/ struct FT_GlyphLoader_* loader;
  /*<thisrel this+0x1c>*/ /*|0x8|*/ struct FT_Vector_ pp1;
  /*<thisrel this+0x24>*/ /*|0x8|*/ struct FT_Vector_ pp2;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x2c>

struct AH_Outline_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct FT_MemoryRec_* memory;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int vert_major_dir;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int horz_major_dir;
  /*<thisrel this+0xc>*/ /*|0x4|*/ long x_scale;
  /*<thisrel this+0x10>*/ /*|0x4|*/ long y_scale;
  /*<thisrel this+0x14>*/ /*|0x4|*/ long edge_distance_threshold;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int max_points;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int num_points;
  /*<thisrel this+0x20>*/ /*|0x4|*/ struct AH_Point* points;
  /*<thisrel this+0x24>*/ /*|0x4|*/ int max_contours;
  /*<thisrel this+0x28>*/ /*|0x4|*/ int num_contours;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ struct AH_Point** contours;
  /*<thisrel this+0x30>*/ /*|0x4|*/ int num_hedges;
  /*<thisrel this+0x34>*/ /*|0x4|*/ struct AH_Edge* horz_edges;
  /*<thisrel this+0x38>*/ /*|0x4|*/ int num_vedges;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ struct AH_Edge* vert_edges;
  /*<thisrel this+0x40>*/ /*|0x4|*/ int num_hsegments;
  /*<thisrel this+0x44>*/ /*|0x4|*/ struct AH_Segment* horz_segments;
  /*<thisrel this+0x48>*/ /*|0x4|*/ int num_vsegments;
  /*<thisrel this+0x4c>*/ /*|0x4|*/ struct AH_Segment* vert_segments;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x50>

struct AH_Face_Globals_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct FT_FaceRec_* face;
  /*<thisrel this+0x4>*/ /*|0x90|*/ struct AH_Globals_ design;
  /*<thisrel this+0x94>*/ /*|0x90|*/ struct AH_Globals_ scaled;
  /*<thisrel this+0x124>*/ /*|0x4|*/ long x_scale;
  /*<thisrel this+0x128>*/ /*|0x4|*/ long y_scale;
  /*<thisrel this+0x12c>*/ /*|0x1|*/ unsigned char control_overshoot;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x130>

struct AH_Globals_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int num_widths;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int num_heights;
  /*<thisrel this+0x8>*/ /*|0x30|*/ long widths[12];
  /*<thisrel this+0x38>*/ /*|0x30|*/ long heights[12];
  /*<thisrel this+0x68>*/ /*|0x14|*/ long blue_refs[5];
  /*<thisrel this+0x7c>*/ /*|0x14|*/ long blue_shoots[5];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x90>

struct FT_CharMapRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct FT_FaceRec_* face;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int encoding;
  /*<thisrel this+0x8>*/ /*|0x2|*/ unsigned short platform_id;
  /*<thisrel this+0xa>*/ /*|0x2|*/ unsigned short encoding_id;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct FT_Vector_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long x;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long y;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct AH_Point {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int flags;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long ox;
  /*<thisrel this+0x8>*/ /*|0x4|*/ long oy;
  /*<thisrel this+0xc>*/ /*|0x4|*/ long fx;
  /*<thisrel this+0x10>*/ /*|0x4|*/ long fy;
  /*<thisrel this+0x14>*/ /*|0x4|*/ long x;
  /*<thisrel this+0x18>*/ /*|0x4|*/ long y;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ long u;
  /*<thisrel this+0x20>*/ /*|0x4|*/ long v;
  /*<thisrel this+0x24>*/ /*|0x4|*/ int in_dir;
  /*<thisrel this+0x28>*/ /*|0x4|*/ int out_dir;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ int in_angle;
  /*<thisrel this+0x30>*/ /*|0x4|*/ int out_angle;
  /*<thisrel this+0x34>*/ /*|0x4|*/ struct AH_Point* next;
  /*<thisrel this+0x38>*/ /*|0x4|*/ struct AH_Point* prev;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x3c>

struct FT_Outline_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ short n_contours;
  /*<thisrel this+0x2>*/ /*|0x2|*/ short n_points;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct FT_Vector_* points;
  /*<thisrel this+0x8>*/ /*|0x4|*/ char* tags;
  /*<thisrel this+0xc>*/ /*|0x4|*/ short* contours;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int flags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct FT_BBox_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long xMin;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long yMin;
  /*<thisrel this+0x8>*/ /*|0x4|*/ long xMax;
  /*<thisrel this+0xc>*/ /*|0x4|*/ long yMax;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct AH_Segment {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int flags;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int dir;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct AH_Point* first;
  /*<thisrel this+0xc>*/ /*|0x4|*/ struct AH_Point* last;
  /*<thisrel this+0x10>*/ /*|0x4|*/ struct AH_Point** contour;
  /*<thisrel this+0x14>*/ /*|0x4|*/ long pos;
  /*<thisrel this+0x18>*/ /*|0x4|*/ long min_coord;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ long max_coord;
  /*<thisrel this+0x20>*/ /*|0x4|*/ struct AH_Edge* edge;
  /*<thisrel this+0x24>*/ /*|0x4|*/ struct AH_Segment* edge_next;
  /*<thisrel this+0x28>*/ /*|0x4|*/ struct AH_Segment* link;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ struct AH_Segment* serif;
  /*<thisrel this+0x30>*/ /*|0x4|*/ long num_linked;
  /*<thisrel this+0x34>*/ /*|0x4|*/ int score;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x38>

struct FT_GlyphLoader_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct FT_MemoryRec_* memory;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int max_points;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int max_contours;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int max_subglyphs;
  /*<thisrel this+0x10>*/ /*|0x1|*/ unsigned char use_extra;
  /*<thisrel this+0x14>*/ /*|0x20|*/ struct FT_GlyphLoad_ base;
  /*<thisrel this+0x34>*/ /*|0x20|*/ struct FT_GlyphLoad_ current;
  /*<thisrel this+0x54>*/ /*|0x4|*/ void* other;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x58>

struct FT_SubGlyph_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int index;
  /*<thisrel this+0x4>*/ /*|0x2|*/ unsigned short flags;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int arg1;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int arg2;
  /*<thisrel this+0x10>*/ /*|0x10|*/ struct FT_Matrix_ transform;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct AH_Edge {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int flags;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int dir;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct AH_Segment* first;
  /*<thisrel this+0xc>*/ /*|0x4|*/ struct AH_Segment* last;
  /*<thisrel this+0x10>*/ /*|0x4|*/ long fpos;
  /*<thisrel this+0x14>*/ /*|0x4|*/ long opos;
  /*<thisrel this+0x18>*/ /*|0x4|*/ long pos;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ struct AH_Edge* link;
  /*<thisrel this+0x20>*/ /*|0x4|*/ struct AH_Edge* serif;
  /*<thisrel this+0x24>*/ /*|0x4|*/ int num_linked;
  /*<thisrel this+0x28>*/ /*|0x4|*/ int score;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ long* blue_edge;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x30>

struct FT_Frame_Field_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int value;
  /*<thisrel this+0x4>*/ /*|0x1|*/ unsigned char size;
  /*<thisrel this+0x6>*/ /*|0x2|*/ unsigned short offset;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct TEncoding {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int platform_id;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int encoding_id;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int encoding;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct T2_Field_Handler_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int kind;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int code;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int offset;
  /*<thisrel this+0xc>*/ /*|0x1|*/ unsigned char size;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int  (reader*)(struct T2_Parser_*);
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned int array_max;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned int count_offset;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c>

struct FT_Parameter_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long tag;
  /*<thisrel this+0x4>*/ /*|0x4|*/ void* data;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct FT_Driver_Class_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x24|*/ struct FT_Module_Class_ root;
  /*<thisrel this+0x24>*/ /*|0x4|*/ int face_object_size;
  /*<thisrel this+0x28>*/ /*|0x4|*/ int size_object_size;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ int slot_object_size;
  /*<thisrel this+0x30>*/ /*|0x4|*/ int  (init_face*)(struct FT_StreamRec_*, struct FT_FaceRec_*, int, int, struct FT_Parameter_*);
  /*<thisrel this+0x34>*/ /*|0x4|*/ void  (done_face*)(struct FT_FaceRec_*);
  /*<thisrel this+0x38>*/ /*|0x4|*/ int  (init_size*)(struct FT_SizeRec_*);
  /*<thisrel this+0x3c>*/ /*|0x4|*/ void  (done_size*)(struct FT_SizeRec_*);
  /*<thisrel this+0x40>*/ /*|0x4|*/ int  (init_slot*)(struct FT_GlyphSlotRec_*);
  /*<thisrel this+0x44>*/ /*|0x4|*/ void  (done_slot*)(struct FT_GlyphSlotRec_*);
  /*<thisrel this+0x48>*/ /*|0x4|*/ int  (set_char_sizes*)(struct FT_SizeRec_*, long, long, unsigned int, unsigned int);
  /*<thisrel this+0x4c>*/ /*|0x4|*/ int  (set_pixel_sizes*)(struct FT_SizeRec_*, unsigned int, unsigned int);
  /*<thisrel this+0x50>*/ /*|0x4|*/ int  (load_glyph*)(struct FT_GlyphSlotRec_*, struct FT_SizeRec_*, unsigned int, int);
  /*<thisrel this+0x54>*/ /*|0x4|*/ unsigned int  (get_char_index*)(struct FT_CharMapRec_*, long);
  /*<thisrel this+0x58>*/ /*|0x4|*/ int  (get_kerning*)(struct FT_FaceRec_*, unsigned int, unsigned int, struct FT_Vector_*);
  /*<thisrel this+0x5c>*/ /*|0x4|*/ int  (attach_file*)(struct FT_FaceRec_*, struct FT_StreamRec_*);
  /*<thisrel this+0x60>*/ /*|0x4|*/ int  (get_advances*)(struct FT_FaceRec_*, unsigned int, unsigned int, unsigned char, unsigned short*);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x64>

struct TT_FaceRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x84|*/ struct FT_FaceRec_ root;
  /*<thisrel this+0x84>*/ /*|0x10|*/ struct TTC_Header_ ttc_header;
  /*<thisrel this+0x94>*/ /*|0x4|*/ unsigned long format_tag;
  /*<thisrel this+0x98>*/ /*|0x2|*/ unsigned short num_tables;
  /*<thisrel this+0x9c>*/ /*|0x4|*/ struct TT_Table_* dir_tables;
  /*<thisrel this+0xa0>*/ /*|0x38|*/ struct TT_Header_ header;
  /*<thisrel this+0xd8>*/ /*|0x2c|*/ struct TT_HoriHeader_ horizontal;
  /*<thisrel this+0x104>*/ /*|0x20|*/ struct TT_MaxProfile_ max_profile;
  /*<thisrel this+0x124>*/ /*|0x4|*/ unsigned long max_components;
  /*<thisrel this+0x128>*/ /*|0x1|*/ unsigned char vertical_info;
  /*<thisrel this+0x12c>*/ /*|0x2c|*/ struct TT_VertHeader_ vertical;
  /*<thisrel this+0x158>*/ /*|0x2|*/ unsigned short num_names;
  /*<thisrel this+0x15c>*/ /*|0x10|*/ struct TT_NameTable_ name_table;
  /*<thisrel this+0x16c>*/ /*|0x64|*/ struct TT_OS2_ os2;
  /*<thisrel this+0x1d0>*/ /*|0x20|*/ struct TT_Postscript_ postscript;
  /*<thisrel this+0x1f0>*/ /*|0x4|*/ int num_charmaps;
  /*<thisrel this+0x1f4>*/ /*|0x4|*/ struct TT_CharMapRec_* charmaps;
  /*<thisrel this+0x1f8>*/ /*|0x4|*/ int  (goto_table*)(struct TT_FaceRec_*, unsigned long, struct FT_StreamRec_*, unsigned long*);
  /*<thisrel this+0x1fc>*/ /*|0x4|*/ int  (access_glyph_frame*)(struct TT_Loader_*, unsigned int, unsigned long, unsigned int);
  /*<thisrel this+0x200>*/ /*|0x4|*/ int  (read_glyph_header*)(struct TT_Loader_*);
  /*<thisrel this+0x204>*/ /*|0x4|*/ int  (read_simple_glyph*)(struct TT_Loader_*);
  /*<thisrel this+0x208>*/ /*|0x4|*/ int  (read_composite_glyph*)(struct TT_Loader_*);
  /*<thisrel this+0x20c>*/ /*|0x4|*/ void  (forget_glyph_frame*)(struct TT_Loader_*);
  /*<thisrel this+0x210>*/ /*|0x4|*/ void* sfnt;
  /*<thisrel this+0x214>*/ /*|0x4|*/ void* psnames;
  /*<thisrel this+0x218>*/ /*|0x8|*/ struct TT_Hdmx_ hdmx;
  /*<thisrel this+0x220>*/ /*|0x8|*/ struct TT_Gasp_ gasp;
  /*<thisrel this+0x228>*/ /*|0x38|*/ struct TT_PCLT_ pclt;
  /*<thisrel this+0x260>*/ /*|0x4|*/ int num_sbit_strikes;
  /*<thisrel this+0x264>*/ /*|0x4|*/ struct TT_SBit_Strike_* sbit_strikes;
  /*<thisrel this+0x268>*/ /*|0x4|*/ int num_sbit_scales;
  /*<thisrel this+0x26c>*/ /*|0x4|*/ struct TT_SBit_Scale_* sbit_scales;
  /*<thisrel this+0x270>*/ /*|0x10|*/ struct TT_Post_Names_ postscript_names;
  /*<thisrel this+0x280>*/ /*|0x2|*/ unsigned short num_locations;
  /*<thisrel this+0x284>*/ /*|0x4|*/ long* glyph_locations;
  /*<thisrel this+0x288>*/ /*|0x4|*/ unsigned long font_program_size;
  /*<thisrel this+0x28c>*/ /*|0x4|*/ unsigned char* font_program;
  /*<thisrel this+0x290>*/ /*|0x4|*/ unsigned long cvt_program_size;
  /*<thisrel this+0x294>*/ /*|0x4|*/ unsigned char* cvt_program;
  /*<thisrel this+0x298>*/ /*|0x4|*/ unsigned long cvt_size;
  /*<thisrel this+0x29c>*/ /*|0x4|*/ short* cvt;
  /*<thisrel this+0x2a0>*/ /*|0x4|*/ int num_kern_pairs;
  /*<thisrel this+0x2a4>*/ /*|0x4|*/ int kern_table_index;
  /*<thisrel this+0x2a8>*/ /*|0x4|*/ struct TT_Kern_0_Pair_* kern_pairs;
  /*<thisrel this+0x2ac>*/ /*|0x4|*/ int  (interpreter*)(void*);
  /*<thisrel this+0x2b0>*/ /*|0x8|*/ struct FT_Generic_ extra;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x2b8>

struct T2_GlyphSlotRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x98|*/ struct FT_GlyphSlotRec_ root;
  /*<thisrel this+0x98>*/ /*|0x1|*/ unsigned char hint;
  /*<thisrel this+0x99>*/ /*|0x1|*/ unsigned char scaled;
  /*<thisrel this+0x9c>*/ /*|0x4|*/ long x_scale;
  /*<thisrel this+0xa0>*/ /*|0x4|*/ long y_scale;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xa4>

struct TT_CharMapRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xc|*/ struct FT_CharMapRec_ root;
  /*<thisrel this+0xc>*/ /*|0x2c|*/ struct TT_CMapTable_ cmap;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x38>

struct T2_DriverRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x28|*/ struct FT_DriverRec_ root;
  /*<thisrel this+0x28>*/ /*|0x4|*/ void* extension_component;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x2c>

struct T2_Parser_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned char* start;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned char* limit;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned char* cursor;
  /*<thisrel this+0xc>*/ /*|0x184|*/ unsigned char* stack[97];
  /*<thisrel this+0x190>*/ /*|0x4|*/ unsigned char** top;
  /*<thisrel this+0x194>*/ /*|0x4|*/ unsigned int object_code;
  /*<thisrel this+0x198>*/ /*|0x4|*/ void* object;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x19c>

struct SFNT_Interface_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int  (goto_table*)(struct TT_FaceRec_*, unsigned long, struct FT_StreamRec_*, unsigned long*);
  /*<thisrel this+0x4>*/ /*|0x4|*/ int  (init_face*)(struct FT_StreamRec_*, struct TT_FaceRec_*, int, int, struct FT_Parameter_*);
  /*<thisrel this+0x8>*/ /*|0x4|*/ int  (load_face*)(struct FT_StreamRec_*, struct TT_FaceRec_*, int, int, struct FT_Parameter_*);
  /*<thisrel this+0xc>*/ /*|0x4|*/ void  (done_face*)(struct TT_FaceRec_*);
  /*<thisrel this+0x10>*/ /*|0x4|*/ void  (*)()  (get_interface*)(struct FT_ModuleRec_*, char*);
  /*<thisrel this+0x14>*/ /*|0x4|*/ int  (load_any*)(struct TT_FaceRec_*, unsigned long, long, unsigned char*, unsigned long*);
  /*<thisrel this+0x18>*/ /*|0x4|*/ int  (load_sfnt_header*)(struct TT_FaceRec_*, struct FT_StreamRec_*, long, struct SFNT_Header_*);
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int  (load_directory*)(struct TT_FaceRec_*, struct FT_StreamRec_*, struct SFNT_Header_*);
  /*<thisrel this+0x20>*/ /*|0x4|*/ int  (load_header*)(struct TT_FaceRec_*, struct FT_StreamRec_*);
  /*<thisrel this+0x24>*/ /*|0x4|*/ int  (load_metrics*)(struct TT_FaceRec_*, struct FT_StreamRec_*, unsigned char);
  /*<thisrel this+0x28>*/ /*|0x4|*/ int  (load_charmaps*)(struct TT_FaceRec_*, struct FT_StreamRec_*);
  /*<thisrel this+0x2c>*/ /*|0x4|*/ int  (load_max_profile*)(struct TT_FaceRec_*, struct FT_StreamRec_*);
  /*<thisrel this+0x30>*/ /*|0x4|*/ int  (load_os2*)(struct TT_FaceRec_*, struct FT_StreamRec_*);
  /*<thisrel this+0x34>*/ /*|0x4|*/ int  (load_psnames*)(struct TT_FaceRec_*, struct FT_StreamRec_*);
  /*<thisrel this+0x38>*/ /*|0x4|*/ int  (load_names*)(struct TT_FaceRec_*, struct FT_StreamRec_*);
  /*<thisrel this+0x3c>*/ /*|0x4|*/ void  (free_names*)(struct TT_FaceRec_*);
  /*<thisrel this+0x40>*/ /*|0x4|*/ int  (load_hdmx*)(struct TT_FaceRec_*, struct FT_StreamRec_*);
  /*<thisrel this+0x44>*/ /*|0x4|*/ void  (free_hdmx*)(struct TT_FaceRec_*);
  /*<thisrel this+0x48>*/ /*|0x4|*/ int  (load_kerning*)(struct TT_FaceRec_*, struct FT_StreamRec_*);
  /*<thisrel this+0x4c>*/ /*|0x4|*/ int  (load_gasp*)(struct TT_FaceRec_*, struct FT_StreamRec_*);
  /*<thisrel this+0x50>*/ /*|0x4|*/ int  (load_pclt*)(struct TT_FaceRec_*, struct FT_StreamRec_*);
  /*<thisrel this+0x54>*/ /*|0x4|*/ int  (load_bitmap_header*)(struct TT_FaceRec_*, struct FT_StreamRec_*);
  /*<thisrel this+0x58>*/ /*|0x4|*/ int  (set_sbit_strike*)(struct TT_FaceRec_*, int, int, unsigned long*);
  /*<thisrel this+0x5c>*/ /*|0x4|*/ int  (load_sbits*)(struct TT_FaceRec_*, struct FT_StreamRec_*);
  /*<thisrel this+0x60>*/ /*|0x4|*/ int  (load_sbit_image*)(struct TT_FaceRec_*, unsigned long, unsigned int, unsigned int, struct FT_StreamRec_*, struct FT_Bitmap_*, struct TT_SBit_Metrics_*);
  /*<thisrel this+0x64>*/ /*|0x4|*/ void  (free_sbits*)(struct TT_FaceRec_*);
  /*<thisrel this+0x68>*/ /*|0x4|*/ int  (get_psname*)(struct TT_FaceRec_*, unsigned int, char**);
  /*<thisrel this+0x6c>*/ /*|0x4|*/ void  (free_psnames*)(struct TT_FaceRec_*);
  /*<thisrel this+0x70>*/ /*|0x4|*/ int  (load_charmap*)(struct TT_FaceRec_*, struct TT_CMapTable_*, struct FT_StreamRec_*);
  /*<thisrel this+0x74>*/ /*|0x4|*/ int  (free_charmap*)(struct TT_FaceRec_*, struct TT_CMapTable_*);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x78>

struct PSNames_Interface_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long  (unicode_value*)(char*);
  /*<thisrel this+0x4>*/ /*|0x4|*/ int  (build_unicodes*)(struct FT_MemoryRec_*, unsigned int, char**, struct PS_Unicodes_*);
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int  (lookup_unicode*)(struct PS_Unicodes_*, unsigned int);
  /*<thisrel this+0xc>*/ /*|0x4|*/ char*  (macintosh_name*)(unsigned int);
  /*<thisrel this+0x10>*/ /*|0x4|*/ char*  (adobe_std_strings*)(unsigned int);
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned short* adobe_std_encoding;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned short* adobe_expert_encoding;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c>

struct CFF_Font_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct FT_StreamRec_* stream;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct FT_MemoryRec_* memory;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int num_faces;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int num_glyphs;
  /*<thisrel this+0x10>*/ /*|0x1|*/ unsigned char version_major;
  /*<thisrel this+0x11>*/ /*|0x1|*/ unsigned char version_minor;
  /*<thisrel this+0x12>*/ /*|0x1|*/ unsigned char header_size;
  /*<thisrel this+0x13>*/ /*|0x1|*/ unsigned char absolute_offsize;
  /*<thisrel this+0x14>*/ /*|0x18|*/ struct CFF_Index_ name_index;
  /*<thisrel this+0x2c>*/ /*|0x18|*/ struct CFF_Index_ top_dict_index;
  /*<thisrel this+0x44>*/ /*|0x18|*/ struct CFF_Index_ string_index;
  /*<thisrel this+0x5c>*/ /*|0x18|*/ struct CFF_Index_ global_subrs_index;
  /*<thisrel this+0x74>*/ /*|0x18|*/ struct CFF_Index_ charstrings_index;
  /*<thisrel this+0x8c>*/ /*|0x18|*/ struct CFF_Index_ font_dict_index;
  /*<thisrel this+0xa4>*/ /*|0x18|*/ struct CFF_Index_ private_index;
  /*<thisrel this+0xbc>*/ /*|0x18|*/ struct CFF_Index_ local_subrs_index;
  /*<thisrel this+0xd4>*/ /*|0x4|*/ char* font_name;
  /*<thisrel this+0xd8>*/ /*|0x4|*/ unsigned int num_global_subrs;
  /*<thisrel this+0xdc>*/ /*|0x4|*/ unsigned char** global_subrs;
  /*<thisrel this+0xe0>*/ /*|0x230|*/ struct CFF_SubFont_ top_font;
  /*<thisrel this+0x310>*/ /*|0x4|*/ unsigned int num_subfonts;
  /*<thisrel this+0x314>*/ /*|0x40|*/ struct CFF_SubFont_* subfonts[16];
  /*<thisrel this+0x354>*/ /*|0x1c|*/ struct CFF_FD_Select_ fd_select;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x370>

struct CFF_Index_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct FT_StreamRec_* stream;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int count;
  /*<thisrel this+0x8>*/ /*|0x1|*/ unsigned char off_size;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long data_offset;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long* offsets;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned char* bytes;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct CFF_SubFont_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xa8|*/ struct CFF_Font_Dict_ font_dict;
  /*<thisrel this+0xa8>*/ /*|0x168|*/ struct CFF_Private_ private_dict;
  /*<thisrel this+0x210>*/ /*|0x18|*/ struct CFF_Index_ local_subrs_index;
  /*<thisrel this+0x228>*/ /*|0x4|*/ unsigned int num_local_subrs;
  /*<thisrel this+0x22c>*/ /*|0x4|*/ unsigned char** local_subrs;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x230>

struct CFF_FD_Select_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char format;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int range_count;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned char* data;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int data_size;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int cache_first;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned int cache_count;
  /*<thisrel this+0x18>*/ /*|0x1|*/ unsigned char cache_fd;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c>

struct T2_Builder_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct FT_MemoryRec_* memory;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct TT_FaceRec_* face;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct T2_GlyphSlotRec_* glyph;
  /*<thisrel this+0xc>*/ /*|0x4|*/ struct FT_GlyphLoader_* loader;
  /*<thisrel this+0x10>*/ /*|0x4|*/ struct FT_Outline_* base;
  /*<thisrel this+0x14>*/ /*|0x4|*/ struct FT_Outline_* current;
  /*<thisrel this+0x18>*/ /*|0x8|*/ struct FT_Vector_ last;
  /*<thisrel this+0x20>*/ /*|0x4|*/ long scale_x;
  /*<thisrel this+0x24>*/ /*|0x4|*/ long scale_y;
  /*<thisrel this+0x28>*/ /*|0x4|*/ long pos_x;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ long pos_y;
  /*<thisrel this+0x30>*/ /*|0x8|*/ struct FT_Vector_ left_bearing;
  /*<thisrel this+0x38>*/ /*|0x8|*/ struct FT_Vector_ advance;
  /*<thisrel this+0x40>*/ /*|0x10|*/ struct FT_BBox_ bbox;
  /*<thisrel this+0x50>*/ /*|0x1|*/ unsigned char path_begun;
  /*<thisrel this+0x51>*/ /*|0x1|*/ unsigned char load_points;
  /*<thisrel this+0x52>*/ /*|0x1|*/ unsigned char no_recurse;
  /*<thisrel this+0x54>*/ /*|0x4|*/ int error;
  /*<thisrel this+0x58>*/ /*|0x1|*/ unsigned char metrics_only;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x5c>

struct T2_Decoder_Zone_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned char* base;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned char* limit;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned char* cursor;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct T2_Decoder_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x5c|*/ struct T2_Builder_ builder;
  /*<thisrel this+0x5c>*/ /*|0x4|*/ struct CFF_Font_* cff;
  /*<thisrel this+0x60>*/ /*|0xc4|*/ long stack[49];
  /*<thisrel this+0x124>*/ /*|0x4|*/ long* top;
  /*<thisrel this+0x128>*/ /*|0x18c|*/ struct T2_Decoder_Zone_ zones[33];
  /*<thisrel this+0x2b4>*/ /*|0x4|*/ struct T2_Decoder_Zone_* zone;
  /*<thisrel this+0x2b8>*/ /*|0x4|*/ int flex_state;
  /*<thisrel this+0x2bc>*/ /*|0x4|*/ int num_flex_vectors;
  /*<thisrel this+0x2c0>*/ /*|0x38|*/ struct FT_Vector_ flex_vectors[7];
  /*<thisrel this+0x2f8>*/ /*|0x4|*/ long glyph_width;
  /*<thisrel this+0x2fc>*/ /*|0x4|*/ long nominal_width;
  /*<thisrel this+0x300>*/ /*|0x1|*/ unsigned char read_width;
  /*<thisrel this+0x304>*/ /*|0x4|*/ int num_hints;
  /*<thisrel this+0x308>*/ /*|0x4|*/ long* buildchar;
  /*<thisrel this+0x30c>*/ /*|0x4|*/ int len_buildchar;
  /*<thisrel this+0x310>*/ /*|0x4|*/ unsigned int num_locals;
  /*<thisrel this+0x314>*/ /*|0x4|*/ unsigned int num_globals;
  /*<thisrel this+0x318>*/ /*|0x4|*/ int locals_bias;
  /*<thisrel this+0x31c>*/ /*|0x4|*/ int globals_bias;
  /*<thisrel this+0x320>*/ /*|0x4|*/ unsigned char** locals;
  /*<thisrel this+0x324>*/ /*|0x4|*/ unsigned char** globals;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x328>

struct T1_Field_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ char* ident;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int location;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int type;
  /*<thisrel this+0xc>*/ /*|0x4|*/ void  (reader*)(struct FT_FaceRec_*, void*);
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int offset;
  /*<thisrel this+0x14>*/ /*|0x1|*/ unsigned char size;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned int array_max;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned int count_offset;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct CID_FaceRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x84|*/ struct FT_FaceRec_ root;
  /*<thisrel this+0x84>*/ /*|0x4|*/ void* psnames;
  /*<thisrel this+0x88>*/ /*|0x4|*/ void* psaux;
  /*<thisrel this+0x8c>*/ /*|0xac|*/ struct CID_Info_ cid;
  /*<thisrel this+0x138>*/ /*|0x4|*/ void* afm_data;
  /*<thisrel this+0x13c>*/ /*|0x4|*/ struct CID_Subrs_* subrs;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x140>

struct CID_Parser_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x44|*/ struct T1_Parser_ root;
  /*<thisrel this+0x44>*/ /*|0x4|*/ struct FT_StreamRec_* stream;
  /*<thisrel this+0x48>*/ /*|0x4|*/ unsigned char* postscript;
  /*<thisrel this+0x4c>*/ /*|0x4|*/ int postscript_len;
  /*<thisrel this+0x50>*/ /*|0x4|*/ unsigned long data_offset;
  /*<thisrel this+0x54>*/ /*|0x4|*/ struct CID_Info_* cid;
  /*<thisrel this+0x58>*/ /*|0x4|*/ int num_dict;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x5c>

struct CID_Loader_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x5c|*/ struct CID_Parser_ parser;
  /*<thisrel this+0x5c>*/ /*|0x4|*/ int num_chars;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x60>

struct PSAux_Interface_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct PS_Table_Funcs_* ps_table_funcs;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct T1_Parser_Funcs_* t1_parser_funcs;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct T1_Builder_Funcs_* t1_builder_funcs;
  /*<thisrel this+0xc>*/ /*|0x4|*/ struct T1_Decoder_Funcs_* t1_decoder_funcs;
  /*<thisrel this+0x10>*/ /*|0x4|*/ void  (t1_decrypt*)(unsigned char*, int, unsigned short);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct CID_Subrs_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int num_subrs;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned char** code;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct CID_DriverRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x0>

struct FT_DriverRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x14|*/ struct FT_ModuleRec_ root;
  /*<thisrel this+0x14>*/ /*|0x4|*/ struct FT_Driver_Class_* clazz;
  /*<thisrel this+0x18>*/ /*|0x8|*/ struct FT_ListRec_ faces_list;
  /*<thisrel this+0x20>*/ /*|0x4|*/ void* extensions;
  /*<thisrel this+0x24>*/ /*|0x4|*/ struct FT_GlyphLoader_* glyph_loader;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x28>

struct CID_GlyphSlotRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x98|*/ struct FT_GlyphSlotRec_ root;
  /*<thisrel this+0x98>*/ /*|0x1|*/ unsigned char hint;
  /*<thisrel this+0x99>*/ /*|0x1|*/ unsigned char scaled;
  /*<thisrel this+0x9c>*/ /*|0x4|*/ long x_scale;
  /*<thisrel this+0xa0>*/ /*|0x4|*/ long y_scale;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xa4>

struct CID_SizeRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2c|*/ struct FT_SizeRec_ root;
  /*<thisrel this+0x2c>*/ /*|0x1|*/ unsigned char valid;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x30>

struct FT_Matrix_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long xx;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long xy;
  /*<thisrel this+0x8>*/ /*|0x4|*/ long yx;
  /*<thisrel this+0xc>*/ /*|0x4|*/ long yy;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct T1_Builder_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct FT_MemoryRec_* memory;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct FT_FaceRec_* face;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct FT_GlyphSlotRec_* glyph;
  /*<thisrel this+0xc>*/ /*|0x4|*/ struct FT_GlyphLoader_* loader;
  /*<thisrel this+0x10>*/ /*|0x4|*/ struct FT_Outline_* base;
  /*<thisrel this+0x14>*/ /*|0x4|*/ struct FT_Outline_* current;
  /*<thisrel this+0x18>*/ /*|0x8|*/ struct FT_Vector_ last;
  /*<thisrel this+0x20>*/ /*|0x4|*/ long scale_x;
  /*<thisrel this+0x24>*/ /*|0x4|*/ long scale_y;
  /*<thisrel this+0x28>*/ /*|0x4|*/ long pos_x;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ long pos_y;
  /*<thisrel this+0x30>*/ /*|0x8|*/ struct FT_Vector_ left_bearing;
  /*<thisrel this+0x38>*/ /*|0x8|*/ struct FT_Vector_ advance;
  /*<thisrel this+0x40>*/ /*|0x10|*/ struct FT_BBox_ bbox;
  /*<thisrel this+0x50>*/ /*|0x1|*/ unsigned char path_begun;
  /*<thisrel this+0x51>*/ /*|0x1|*/ unsigned char load_points;
  /*<thisrel this+0x52>*/ /*|0x1|*/ unsigned char no_recurse;
  /*<thisrel this+0x53>*/ /*|0x1|*/ unsigned char shift;
  /*<thisrel this+0x54>*/ /*|0x4|*/ int error;
  /*<thisrel this+0x58>*/ /*|0x1|*/ unsigned char metrics_only;
  /*<thisrel this+0x5c>*/ /*|0x20|*/ struct T1_Builder_Funcs_ funcs;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x7c>

struct T1_Decoder_Zone_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned char* cursor;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned char* base;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned char* limit;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct T1_Blend_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int num_designs;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int num_axis;
  /*<thisrel this+0x8>*/ /*|0x10|*/ char* axis_names[4];
  /*<thisrel this+0x18>*/ /*|0x40|*/ long* design_pos[16];
  /*<thisrel this+0x58>*/ /*|0x30|*/ struct T1_DesignMap_ design_map[4];
  /*<thisrel this+0x88>*/ /*|0x4|*/ long* weight_vector;
  /*<thisrel this+0x8c>*/ /*|0x4|*/ long* default_weight_vector;
  /*<thisrel this+0x90>*/ /*|0x44|*/ struct T1_FontInfo* font_infos[17];
  /*<thisrel this+0xd4>*/ /*|0x44|*/ struct T1_Private* privates[17];
  /*<thisrel this+0x118>*/ /*|0x4|*/ unsigned long blend_bitflags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x11c>

struct T1_Decoder_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x7c|*/ struct T1_Builder_ builder;
  /*<thisrel this+0x7c>*/ /*|0x400|*/ long stack[256];
  /*<thisrel this+0x47c>*/ /*|0x4|*/ long* top;
  /*<thisrel this+0x480>*/ /*|0xcc|*/ struct T1_Decoder_Zone_ zones[17];
  /*<thisrel this+0x54c>*/ /*|0x4|*/ struct T1_Decoder_Zone_* zone;
  /*<thisrel this+0x550>*/ /*|0x4|*/ struct PSNames_Interface_* psnames;
  /*<thisrel this+0x554>*/ /*|0x4|*/ unsigned int num_glyphs;
  /*<thisrel this+0x558>*/ /*|0x4|*/ unsigned char** glyph_names;
  /*<thisrel this+0x55c>*/ /*|0x4|*/ unsigned int lenIV;
  /*<thisrel this+0x560>*/ /*|0x4|*/ unsigned int num_subrs;
  /*<thisrel this+0x564>*/ /*|0x4|*/ unsigned char** subrs;
  /*<thisrel this+0x568>*/ /*|0x4|*/ int* subrs_len;
  /*<thisrel this+0x56c>*/ /*|0x10|*/ struct FT_Matrix_ font_matrix;
  /*<thisrel this+0x57c>*/ /*|0x8|*/ struct FT_Vector_ font_offset;
  /*<thisrel this+0x584>*/ /*|0x4|*/ int flex_state;
  /*<thisrel this+0x588>*/ /*|0x4|*/ int num_flex_vectors;
  /*<thisrel this+0x58c>*/ /*|0x38|*/ struct FT_Vector_ flex_vectors[7];
  /*<thisrel this+0x5c4>*/ /*|0x4|*/ struct T1_Blend_* blend;
  /*<thisrel this+0x5c8>*/ /*|0x4|*/ int  (parse_callback*)(struct T1_Decoder_*, unsigned int);
  /*<thisrel this+0x5cc>*/ /*|0xc|*/ struct T1_Decoder_Funcs_ funcs;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x5d8>

struct T1_Decoder_Funcs_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int  (init*)(struct T1_Decoder_*, struct FT_FaceRec_*, struct FT_SizeRec_*, struct FT_GlyphSlotRec_*, unsigned char**, struct T1_Blend_*, int  (*)(struct T1_Decoder_*, unsigned int));
  /*<thisrel this+0x4>*/ /*|0x4|*/ void  (done*)(struct T1_Decoder_*);
  /*<thisrel this+0x8>*/ /*|0x4|*/ int  (parse_charstrings*)(struct T1_Decoder_*, unsigned char*, unsigned int);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct PS_Table_Funcs_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int  (init*)(struct PS_Table_*, int, struct FT_MemoryRec_*);
  /*<thisrel this+0x4>*/ /*|0x4|*/ void  (done*)(struct PS_Table_*);
  /*<thisrel this+0x8>*/ /*|0x4|*/ int  (add*)(struct PS_Table_*, int, void*, int);
  /*<thisrel this+0xc>*/ /*|0x4|*/ void  (release*)(struct PS_Table_*);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct T1_Parser_Funcs_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ void  (init*)(struct T1_Parser_*, unsigned char*, unsigned char*, struct FT_MemoryRec_*);
  /*<thisrel this+0x4>*/ /*|0x4|*/ void  (done*)(struct T1_Parser_*);
  /*<thisrel this+0x8>*/ /*|0x4|*/ void  (skip_spaces*)(struct T1_Parser_*);
  /*<thisrel this+0xc>*/ /*|0x4|*/ void  (skip_alpha*)(struct T1_Parser_*);
  /*<thisrel this+0x10>*/ /*|0x4|*/ long  (to_int*)(struct T1_Parser_*);
  /*<thisrel this+0x14>*/ /*|0x4|*/ long  (to_fixed*)(struct T1_Parser_*, int);
  /*<thisrel this+0x18>*/ /*|0x4|*/ int  (to_coord_array*)(struct T1_Parser_*, int, short*);
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int  (to_fixed_array*)(struct T1_Parser_*, int, long*, int);
  /*<thisrel this+0x20>*/ /*|0x4|*/ void  (to_token*)(struct T1_Parser_*, struct T1_Token_*);
  /*<thisrel this+0x24>*/ /*|0x4|*/ void  (to_token_array*)(struct T1_Parser_*, struct T1_Token_*, unsigned int, int*);
  /*<thisrel this+0x28>*/ /*|0x4|*/ int  (load_field*)(struct T1_Parser_*, struct T1_Field_*, void**, unsigned int, unsigned long*);
  /*<thisrel this+0x2c>*/ /*|0x4|*/ int  (load_field_table*)(struct T1_Parser_*, struct T1_Field_*, void**, unsigned int, unsigned long*);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x30>

struct T1_Builder_Funcs_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ void  (init*)(struct T1_Builder_*, struct FT_FaceRec_*, struct FT_SizeRec_*, struct FT_GlyphSlotRec_*);
  /*<thisrel this+0x4>*/ /*|0x4|*/ void  (done*)(struct T1_Builder_*);
  /*<thisrel this+0x8>*/ /*|0x4|*/ int  (check_points*)(struct T1_Builder_*, int);
  /*<thisrel this+0xc>*/ /*|0x4|*/ void  (add_point*)(struct T1_Builder_*, long, long, unsigned char);
  /*<thisrel this+0x10>*/ /*|0x4|*/ int  (add_point1*)(struct T1_Builder_*, long, long);
  /*<thisrel this+0x14>*/ /*|0x4|*/ int  (add_contour*)(struct T1_Builder_*);
  /*<thisrel this+0x18>*/ /*|0x4|*/ int  (start_point*)(struct T1_Builder_*, long, long);
  /*<thisrel this+0x1c>*/ /*|0x4|*/ void  (close_contour*)(struct T1_Builder_*);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct PS_Table_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned char* block;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int cursor;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int capacity;
  /*<thisrel this+0xc>*/ /*|0x4|*/ long init;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int max_elems;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int num_elems;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned char** elements;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int* lengths;
  /*<thisrel this+0x20>*/ /*|0x4|*/ struct FT_MemoryRec_* memory;
  /*<thisrel this+0x24>*/ /*|0x10|*/ struct PS_Table_Funcs_ funcs;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x34>

struct T1_Parser_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned char* cursor;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned char* base;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned char* limit;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int error;
  /*<thisrel this+0x10>*/ /*|0x4|*/ struct FT_MemoryRec_* memory;
  /*<thisrel this+0x14>*/ /*|0x30|*/ struct T1_Parser_Funcs_ funcs;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x44>

struct T1_Token_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned char* start;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned char* limit;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int type;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct PS_Unicodes_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int num_maps;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct PS_UniMap_* maps;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct FT_RendererRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x14|*/ struct FT_ModuleRec_ root;
  /*<thisrel this+0x14>*/ /*|0x4|*/ struct FT_Renderer_Class_* clazz;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int glyph_format;
  /*<thisrel this+0x1c>*/ /*|0x20|*/ struct FT_Glyph_Class_ glyph_class;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ struct FT_RasterRec_* raster;
  /*<thisrel this+0x40>*/ /*|0x4|*/ int  (raster_render*)(struct FT_RasterRec_*, struct FT_Raster_Params_*);
  /*<thisrel this+0x44>*/ /*|0x4|*/ int  (render*)(struct FT_RendererRec_*, struct FT_GlyphSlotRec_*, unsigned int, struct FT_Vector_*);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x48>

struct FT_Raster_Funcs_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int glyph_format;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int  (raster_new*)(void*, struct FT_RasterRec_**);
  /*<thisrel this+0x8>*/ /*|0x4|*/ void  (raster_reset*)(struct FT_RasterRec_*, unsigned char*, unsigned long);
  /*<thisrel this+0xc>*/ /*|0x4|*/ int  (raster_set_mode*)(struct FT_RasterRec_*, unsigned long, void*);
  /*<thisrel this+0x10>*/ /*|0x4|*/ int  (raster_render*)(struct FT_RasterRec_*, struct FT_Raster_Params_*);
  /*<thisrel this+0x14>*/ /*|0x4|*/ void  (raster_done*)(struct FT_RasterRec_*);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct FT_Renderer_Class_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x24|*/ struct FT_Module_Class_ root;
  /*<thisrel this+0x24>*/ /*|0x4|*/ int glyph_format;
  /*<thisrel this+0x28>*/ /*|0x4|*/ int  (render_glyph*)(struct FT_RendererRec_*, struct FT_GlyphSlotRec_*, unsigned int, struct FT_Vector_*);
  /*<thisrel this+0x2c>*/ /*|0x4|*/ int  (transform_glyph*)(struct FT_RendererRec_*, struct FT_GlyphSlotRec_*, struct FT_Matrix_*, struct FT_Vector_*);
  /*<thisrel this+0x30>*/ /*|0x4|*/ void  (get_glyph_cbox*)(struct FT_RendererRec_*, struct FT_GlyphSlotRec_*, struct FT_BBox_*);
  /*<thisrel this+0x34>*/ /*|0x4|*/ int  (set_mode*)(struct FT_RendererRec_*, unsigned long, void*);
  /*<thisrel this+0x38>*/ /*|0x4|*/ struct FT_Raster_Funcs_* raster_class;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x3c>

struct FT_RasterRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x0>

struct FT_Raster_Params_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct FT_Bitmap_* target;
  /*<thisrel this+0x4>*/ /*|0x4|*/ void* source;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int flags;
  /*<thisrel this+0xc>*/ /*|0x4|*/ void  (gray_spans*)(int, int, struct FT_Span_*, void*);
  /*<thisrel this+0x10>*/ /*|0x4|*/ void  (black_spans*)(int, int, struct FT_Span_*, void*);
  /*<thisrel this+0x14>*/ /*|0x4|*/ int  (bit_test*)(int, int, void*);
  /*<thisrel this+0x18>*/ /*|0x4|*/ void  (bit_set*)(int, int, void*);
  /*<thisrel this+0x1c>*/ /*|0x4|*/ void* user;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct TRaster_Instance_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int precision_bits;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int precision;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int precision_half;
  /*<thisrel this+0xc>*/ /*|0x4|*/ long precision_mask;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int precision_shift;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int precision_step;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int precision_jitter;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int scale_shift;
  /*<thisrel this+0x20>*/ /*|0x4|*/ long* buff;
  /*<thisrel this+0x24>*/ /*|0x4|*/ long* sizeBuff;
  /*<thisrel this+0x28>*/ /*|0x4|*/ long* maxBuff;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ long* top;
  /*<thisrel this+0x30>*/ /*|0x4|*/ int error;
  /*<thisrel this+0x34>*/ /*|0x4|*/ int numTurns;
  /*<thisrel this+0x38>*/ /*|0x4|*/ struct TPoint_* arc;
  /*<thisrel this+0x3c>*/ /*|0x2|*/ unsigned short bWidth;
  /*<thisrel this+0x40>*/ /*|0x4|*/ unsigned char* bTarget;
  /*<thisrel this+0x44>*/ /*|0x4|*/ unsigned char* gTarget;
  /*<thisrel this+0x48>*/ /*|0x4|*/ long lastX;
  /*<thisrel this+0x4c>*/ /*|0x4|*/ long lastY;
  /*<thisrel this+0x50>*/ /*|0x4|*/ long minY;
  /*<thisrel this+0x54>*/ /*|0x4|*/ long maxY;
  /*<thisrel this+0x58>*/ /*|0x2|*/ unsigned short num_Profs;
  /*<thisrel this+0x5a>*/ /*|0x1|*/ char fresh;
  /*<thisrel this+0x5b>*/ /*|0x1|*/ char joint;
  /*<thisrel this+0x5c>*/ /*|0x4|*/ struct TProfile_* cProfile;
  /*<thisrel this+0x60>*/ /*|0x4|*/ struct TProfile_* fProfile;
  /*<thisrel this+0x64>*/ /*|0x4|*/ struct TProfile_* gProfile;
  /*<thisrel this+0x68>*/ /*|0x4|*/ int state;
  /*<thisrel this+0x6c>*/ /*|0x18|*/ struct FT_Bitmap_ target;
  /*<thisrel this+0x84>*/ /*|0x14|*/ struct FT_Outline_ outline;
  /*<thisrel this+0x98>*/ /*|0x4|*/ long traceOfs;
  /*<thisrel this+0x9c>*/ /*|0x4|*/ long traceG;
  /*<thisrel this+0xa0>*/ /*|0x2|*/ short traceIncr;
  /*<thisrel this+0xa2>*/ /*|0x2|*/ short gray_min_x;
  /*<thisrel this+0xa4>*/ /*|0x2|*/ short gray_max_x;
  /*<thisrel this+0xa8>*/ /*|0x4|*/ void  (Proc_Sweep_Init*)(struct TRaster_Instance_*, short*, short*);
  /*<thisrel this+0xac>*/ /*|0x4|*/ void  (Proc_Sweep_Span*)(struct TRaster_Instance_*, short, long, long, struct TProfile_*, struct TProfile_*);
  /*<thisrel this+0xb0>*/ /*|0x4|*/ void  (Proc_Sweep_Drop*)(struct TRaster_Instance_*, short, long, long, struct TProfile_*, struct TProfile_*);
  /*<thisrel this+0xb4>*/ /*|0x4|*/ void  (Proc_Sweep_Step*)(struct TRaster_Instance_*);
  /*<thisrel this+0xb8>*/ /*|0x1|*/ unsigned char dropOutControl;
  /*<thisrel this+0xb9>*/ /*|0x1|*/ char second_pass;
  /*<thisrel this+0xbc>*/ /*|0x208|*/ struct TPoint_ arcs[65];
  /*<thisrel this+0x2c4>*/ /*|0x40|*/ struct TBand_ band_stack[16];
  /*<thisrel this+0x304>*/ /*|0x4|*/ int band_top;
  /*<thisrel this+0x308>*/ /*|0x400|*/ int count_table[256];
  /*<thisrel this+0x708>*/ /*|0x4|*/ void* memory;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x70c>

struct FT_Bitmap_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int rows;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int width;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int pitch;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned char* buffer;
  /*<thisrel this+0x10>*/ /*|0x2|*/ short num_grays;
  /*<thisrel this+0x12>*/ /*|0x1|*/ char pixel_mode;
  /*<thisrel this+0x13>*/ /*|0x1|*/ char palette_mode;
  /*<thisrel this+0x14>*/ /*|0x4|*/ void* palette;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct TProfile_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long X;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct TProfile_* link;
  /*<thisrel this+0x8>*/ /*|0x4|*/ long* offset;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int flow;
  /*<thisrel this+0x10>*/ /*|0x4|*/ long height;
  /*<thisrel this+0x14>*/ /*|0x4|*/ long start;
  /*<thisrel this+0x18>*/ /*|0x2|*/ unsigned short countL;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ struct TProfile_* next;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct TPoint_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long x;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long y;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct FT_Span_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ short x;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short len;
  /*<thisrel this+0x4>*/ /*|0x1|*/ unsigned char coverage;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x6>

struct SFNT_Header_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long format_tag;
  /*<thisrel this+0x4>*/ /*|0x2|*/ unsigned short num_tables;
  /*<thisrel this+0x6>*/ /*|0x2|*/ unsigned short search_range;
  /*<thisrel this+0x8>*/ /*|0x2|*/ unsigned short entry_selector;
  /*<thisrel this+0xa>*/ /*|0x2|*/ unsigned short range_shift;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct TT_SBit_Metrics_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char height;
  /*<thisrel this+0x1>*/ /*|0x1|*/ unsigned char width;
  /*<thisrel this+0x2>*/ /*|0x1|*/ char horiBearingX;
  /*<thisrel this+0x3>*/ /*|0x1|*/ char horiBearingY;
  /*<thisrel this+0x4>*/ /*|0x1|*/ unsigned char horiAdvance;
  /*<thisrel this+0x5>*/ /*|0x1|*/ char vertBearingX;
  /*<thisrel this+0x6>*/ /*|0x1|*/ char vertBearingY;
  /*<thisrel this+0x7>*/ /*|0x1|*/ unsigned char vertAdvance;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct TT_CMapTable_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short platformID;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short platformEncodingID;
  /*<thisrel this+0x4>*/ /*|0x2|*/ unsigned short format;
  /*<thisrel this+0x6>*/ /*|0x2|*/ unsigned short length;
  /*<thisrel this+0x8>*/ /*|0x2|*/ unsigned short version;
  /*<thisrel this+0xa>*/ /*|0x1|*/ unsigned char loaded;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long offset;
  /*<thisrel this+0x10>*/ /*|0x18|*/ union __unnamed_f7_ c;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned int  (get_index*)(struct TT_CMapTable_*, unsigned long);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x2c>

struct TT_Table_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long Tag;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long CheckSum;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long Offset;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long Length;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct TT_HoriHeader_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long Version;
  /*<thisrel this+0x4>*/ /*|0x2|*/ short Ascender;
  /*<thisrel this+0x6>*/ /*|0x2|*/ short Descender;
  /*<thisrel this+0x8>*/ /*|0x2|*/ short Line_Gap;
  /*<thisrel this+0xa>*/ /*|0x2|*/ unsigned short advance_Width_Max;
  /*<thisrel this+0xc>*/ /*|0x2|*/ short min_Left_Side_Bearing;
  /*<thisrel this+0xe>*/ /*|0x2|*/ short min_Right_Side_Bearing;
  /*<thisrel this+0x10>*/ /*|0x2|*/ short xMax_Extent;
  /*<thisrel this+0x12>*/ /*|0x2|*/ short caret_Slope_Rise;
  /*<thisrel this+0x14>*/ /*|0x2|*/ short caret_Slope_Run;
  /*<thisrel this+0x16>*/ /*|0x2|*/ short caret_Offset;
  /*<thisrel this+0x18>*/ /*|0x8|*/ short Reserved[4];
  /*<thisrel this+0x20>*/ /*|0x2|*/ short metric_Data_Format;
  /*<thisrel this+0x22>*/ /*|0x2|*/ unsigned short number_Of_HMetrics;
  /*<thisrel this+0x24>*/ /*|0x4|*/ void* long_metrics;
  /*<thisrel this+0x28>*/ /*|0x4|*/ void* short_metrics;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x2c>

struct TT_LongMetrics_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short advance;
  /*<thisrel this+0x2>*/ /*|0x2|*/ short bearing;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct TT_NameRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short platformID;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short encodingID;
  /*<thisrel this+0x4>*/ /*|0x2|*/ unsigned short languageID;
  /*<thisrel this+0x6>*/ /*|0x2|*/ unsigned short nameID;
  /*<thisrel this+0x8>*/ /*|0x2|*/ unsigned short stringLength;
  /*<thisrel this+0xa>*/ /*|0x2|*/ unsigned short stringOffset;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned char* string;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct TT_CMapDir_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short tableVersionNumber;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short numCMaps;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct TT_GaspRange_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short maxPPEM;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short gaspFlag;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct TT_Kern_0_Pair_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short left;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short right;
  /*<thisrel this+0x4>*/ /*|0x2|*/ short value;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x6>

struct TT_HdmxRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char ppem;
  /*<thisrel this+0x1>*/ /*|0x1|*/ unsigned char max_width;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned char* widths;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct TT_CMap4Segment_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short endCount;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short startCount;
  /*<thisrel this+0x4>*/ /*|0x2|*/ short idDelta;
  /*<thisrel this+0x6>*/ /*|0x2|*/ unsigned short idRangeOffset;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct TT_SBit_Strike_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int num_ranges;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct TT_SBit_Range* sbit_ranges;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long ranges_offset;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long color_ref;
  /*<thisrel this+0x10>*/ /*|0xc|*/ struct TT_SBit_Line_Metrics_ hori;
  /*<thisrel this+0x1c>*/ /*|0xc|*/ struct TT_SBit_Line_Metrics_ vert;
  /*<thisrel this+0x28>*/ /*|0x2|*/ unsigned short start_glyph;
  /*<thisrel this+0x2a>*/ /*|0x2|*/ unsigned short end_glyph;
  /*<thisrel this+0x2c>*/ /*|0x1|*/ unsigned char x_ppem;
  /*<thisrel this+0x2d>*/ /*|0x1|*/ unsigned char y_ppem;
  /*<thisrel this+0x2e>*/ /*|0x1|*/ unsigned char bit_depth;
  /*<thisrel this+0x2f>*/ /*|0x1|*/ char flags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x30>

struct TT_SBit_Range {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short first_glyph;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short last_glyph;
  /*<thisrel this+0x4>*/ /*|0x2|*/ unsigned short index_format;
  /*<thisrel this+0x6>*/ /*|0x2|*/ unsigned short image_format;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long image_offset;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long image_size;
  /*<thisrel this+0x10>*/ /*|0x8|*/ struct TT_SBit_Metrics_ metrics;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long num_glyphs;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned long* glyph_offsets;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned short* glyph_codes;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned long table_offset;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x28>

struct TT_SBit_Component_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short glyph_code;
  /*<thisrel this+0x2>*/ /*|0x1|*/ char x_offset;
  /*<thisrel this+0x3>*/ /*|0x1|*/ char y_offset;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct TT_SBit_Small_Metrics_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char height;
  /*<thisrel this+0x1>*/ /*|0x1|*/ unsigned char width;
  /*<thisrel this+0x2>*/ /*|0x1|*/ char bearingX;
  /*<thisrel this+0x3>*/ /*|0x1|*/ char bearingY;
  /*<thisrel this+0x4>*/ /*|0x1|*/ unsigned char advance;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x5>

struct FT_Outline_Funcs_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int  (move_to*)(struct FT_Vector_*, void*);
  /*<thisrel this+0x4>*/ /*|0x4|*/ int  (line_to*)(struct FT_Vector_*, void*);
  /*<thisrel this+0x8>*/ /*|0x4|*/ int  (conic_to*)(struct FT_Vector_*, struct FT_Vector_*, void*);
  /*<thisrel this+0xc>*/ /*|0x4|*/ int  (cubic_to*)(struct FT_Vector_*, struct FT_Vector_*, struct FT_Vector_*, void*);
  /*<thisrel this+0x10>*/ /*|0x4|*/ int shift;
  /*<thisrel this+0x14>*/ /*|0x4|*/ long delta;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct TRaster_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct TCell_* cells;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int max_cells;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int num_cells;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int min_ex;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int max_ex;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int min_ey;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int max_ey;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int area;
  /*<thisrel this+0x20>*/ /*|0x4|*/ int cover;
  /*<thisrel this+0x24>*/ /*|0x4|*/ int invalid;
  /*<thisrel this+0x28>*/ /*|0x4|*/ int ex;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ int ey;
  /*<thisrel this+0x30>*/ /*|0x4|*/ int cx;
  /*<thisrel this+0x34>*/ /*|0x4|*/ int cy;
  /*<thisrel this+0x38>*/ /*|0x4|*/ long x;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ long y;
  /*<thisrel this+0x40>*/ /*|0x4|*/ int last_ey;
  /*<thisrel this+0x44>*/ /*|0x300|*/ struct FT_Vector_ bez_stack[96];
  /*<thisrel this+0x344>*/ /*|0x80|*/ int lev_stack[32];
  /*<thisrel this+0x3c4>*/ /*|0x14|*/ struct FT_Outline_ outline;
  /*<thisrel this+0x3d8>*/ /*|0x18|*/ struct FT_Bitmap_ target;
  /*<thisrel this+0x3f0>*/ /*|0xc0|*/ struct FT_Span_ gray_spans[32];
  /*<thisrel this+0x4b0>*/ /*|0x4|*/ int num_gray_spans;
  /*<thisrel this+0x4b4>*/ /*|0x4|*/ void  (render_span*)(int, int, struct FT_Span_*, void*);
  /*<thisrel this+0x4b8>*/ /*|0x4|*/ void* render_span_data;
  /*<thisrel this+0x4bc>*/ /*|0x4|*/ int span_y;
  /*<thisrel this+0x4c0>*/ /*|0x4|*/ int band_size;
  /*<thisrel this+0x4c4>*/ /*|0x4|*/ int band_shoot;
  /*<thisrel this+0x4c8>*/ /*|0x4|*/ int conic_level;
  /*<thisrel this+0x4cc>*/ /*|0x4|*/ int cubic_level;
  /*<thisrel this+0x4d0>*/ /*|0x4|*/ void* memory;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4d4>

struct TBand_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ short y_min;
  /*<thisrel this+0x2>*/ /*|0x2|*/ short y_max;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct TCell_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int x;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int y;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int cover;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int area;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct TT_SizeRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2c|*/ struct FT_SizeRec_ root;
  /*<thisrel this+0x2c>*/ /*|0x28|*/ struct TT_Size_Metrics_ ttmetrics;
  /*<thisrel this+0x54>*/ /*|0x4|*/ unsigned int strike_index;
  /*<thisrel this+0x58>*/ /*|0x1c|*/ struct FT_Size_Metrics_ strike_metrics;
  /*<thisrel this+0x74>*/ /*|0x1|*/ unsigned char debug;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x78>

struct TT_DriverRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x28|*/ struct FT_DriverRec_ root;
  /*<thisrel this+0x28>*/ /*|0x4|*/ struct TT_ExecContextRec_* context;
  /*<thisrel this+0x2c>*/ /*|0x1c|*/ struct TT_GlyphZone_ zone;
  /*<thisrel this+0x48>*/ /*|0x4|*/ void* extension_component;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4c>

struct TT_GlyphZone_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct FT_MemoryRec_* memory;
  /*<thisrel this+0x4>*/ /*|0x2|*/ unsigned short max_points;
  /*<thisrel this+0x6>*/ /*|0x2|*/ unsigned short max_contours;
  /*<thisrel this+0x8>*/ /*|0x2|*/ unsigned short n_points;
  /*<thisrel this+0xa>*/ /*|0x2|*/ short n_contours;
  /*<thisrel this+0xc>*/ /*|0x4|*/ struct FT_Vector_* org;
  /*<thisrel this+0x10>*/ /*|0x4|*/ struct FT_Vector_* cur;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned char* tags;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned short* contours;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c>

struct TT_ExecContextRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x0>

struct TT_Loader_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct FT_FaceRec_* face;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct FT_SizeRec_* size;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct FT_GlyphSlotRec_* glyph;
  /*<thisrel this+0xc>*/ /*|0x4|*/ struct FT_GlyphLoader_* gloader;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long load_flags;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned int glyph_index;
  /*<thisrel this+0x18>*/ /*|0x4|*/ struct FT_StreamRec_* stream;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int byte_len;
  /*<thisrel this+0x20>*/ /*|0x2|*/ short n_contours;
  /*<thisrel this+0x24>*/ /*|0x10|*/ struct FT_BBox_ bbox;
  /*<thisrel this+0x34>*/ /*|0x4|*/ int left_bearing;
  /*<thisrel this+0x38>*/ /*|0x4|*/ int advance;
  /*<thisrel this+0x3c>*/ /*|0x1|*/ unsigned char preserve_pps;
  /*<thisrel this+0x40>*/ /*|0x8|*/ struct FT_Vector_ pp1;
  /*<thisrel this+0x48>*/ /*|0x8|*/ struct FT_Vector_ pp2;
  /*<thisrel this+0x50>*/ /*|0x4|*/ unsigned long glyf_offset;
  /*<thisrel this+0x54>*/ /*|0x1c|*/ struct TT_GlyphZone_ base;
  /*<thisrel this+0x70>*/ /*|0x1c|*/ struct TT_GlyphZone_ zone;
  /*<thisrel this+0x8c>*/ /*|0x4|*/ struct TT_ExecContextRec_* exec;
  /*<thisrel this+0x90>*/ /*|0x4|*/ unsigned char* instructions;
  /*<thisrel this+0x94>*/ /*|0x4|*/ unsigned long ins_pos;
  /*<thisrel this+0x98>*/ /*|0x4|*/ void* other;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x9c>

struct FT_GlyphLoad_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x14|*/ struct FT_Outline_ outline;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned int num_subglyphs;
  /*<thisrel this+0x18>*/ /*|0x4|*/ struct FT_SubGlyph_* subglyphs;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ struct FT_Vector_* extra_points;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct T1_FaceRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x84|*/ struct FT_FaceRec_ root;
  /*<thisrel this+0x84>*/ /*|0x158|*/ struct T1_Font_ type1;
  /*<thisrel this+0x1dc>*/ /*|0x4|*/ void* psnames;
  /*<thisrel this+0x1e0>*/ /*|0x4|*/ void* psaux;
  /*<thisrel this+0x1e4>*/ /*|0x4|*/ void* afm_data;
  /*<thisrel this+0x1e8>*/ /*|0x18|*/ struct FT_CharMapRec_ charmaprecs[2];
  /*<thisrel this+0x200>*/ /*|0x8|*/ struct FT_CharMapRec_* charmaps[2];
  /*<thisrel this+0x208>*/ /*|0x8|*/ struct PS_Unicodes_ unicode_map;
  /*<thisrel this+0x210>*/ /*|0x4|*/ struct T1_Blend_* blend;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x214>

struct T1_Loader_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x5c|*/ struct T1_ParserRec_ parser;
  /*<thisrel this+0x5c>*/ /*|0x4|*/ int num_chars;
  /*<thisrel this+0x60>*/ /*|0x34|*/ struct PS_Table_ encoding_table;
  /*<thisrel this+0x94>*/ /*|0x4|*/ int num_glyphs;
  /*<thisrel this+0x98>*/ /*|0x34|*/ struct PS_Table_ glyph_names;
  /*<thisrel this+0xcc>*/ /*|0x34|*/ struct PS_Table_ charstrings;
  /*<thisrel this+0x100>*/ /*|0x4|*/ int num_subrs;
  /*<thisrel this+0x104>*/ /*|0x34|*/ struct PS_Table_ subrs;
  /*<thisrel this+0x138>*/ /*|0x1|*/ unsigned char fontdata;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x13c>

struct T1_ParserRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x44|*/ struct T1_Parser_ root;
  /*<thisrel this+0x44>*/ /*|0x4|*/ struct FT_StreamRec_* stream;
  /*<thisrel this+0x48>*/ /*|0x4|*/ unsigned char* base_dict;
  /*<thisrel this+0x4c>*/ /*|0x4|*/ int base_len;
  /*<thisrel this+0x50>*/ /*|0x4|*/ unsigned char* private_dict;
  /*<thisrel this+0x54>*/ /*|0x4|*/ int private_len;
  /*<thisrel this+0x58>*/ /*|0x1|*/ unsigned char in_pfb;
  /*<thisrel this+0x59>*/ /*|0x1|*/ unsigned char in_memory;
  /*<thisrel this+0x5a>*/ /*|0x1|*/ unsigned char single_block;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x5c>

struct PFB_Tag_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short tag;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long size;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct T1_DriverRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x0>

struct FT_Multi_Master_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int num_axis;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int num_designs;
  /*<thisrel this+0x8>*/ /*|0x30|*/ struct FT_MM_Axis_ axis[4];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x38>

struct T1_GlyphSlotRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x98|*/ struct FT_GlyphSlotRec_ root;
  /*<thisrel this+0x98>*/ /*|0x1|*/ unsigned char hint;
  /*<thisrel this+0x99>*/ /*|0x1|*/ unsigned char scaled;
  /*<thisrel this+0x9c>*/ /*|0x4|*/ int max_points;
  /*<thisrel this+0xa0>*/ /*|0x4|*/ int max_contours;
  /*<thisrel this+0xa4>*/ /*|0x4|*/ long x_scale;
  /*<thisrel this+0xa8>*/ /*|0x4|*/ long y_scale;
  /*<thisrel this+0xac>*/ /*|0x4|*/ struct T1_Glyph_Hints_* hints;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xb0>

struct T1_SizeRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2c|*/ struct FT_SizeRec_ root;
  /*<thisrel this+0x2c>*/ /*|0x1|*/ unsigned char valid;
  /*<thisrel this+0x30>*/ /*|0x4|*/ struct T1_Size_Hints_* hints;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x34>

struct T1_AFM_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int num_pairs;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct T1_Kern_Pair_* kern_pairs;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct T1_Font_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x20|*/ struct T1_FontInfo font_info;
  /*<thisrel this+0x20>*/ /*|0xc0|*/ struct T1_Private private_dict;
  /*<thisrel this+0xe0>*/ /*|0x4|*/ char* font_name;
  /*<thisrel this+0xe4>*/ /*|0x4|*/ int encoding_type;
  /*<thisrel this+0xe8>*/ /*|0x14|*/ struct T1_Encoding_ encoding;
  /*<thisrel this+0xfc>*/ /*|0x4|*/ unsigned char* subrs_block;
  /*<thisrel this+0x100>*/ /*|0x4|*/ unsigned char* charstrings_block;
  /*<thisrel this+0x104>*/ /*|0x4|*/ unsigned char* glyph_names_block;
  /*<thisrel this+0x108>*/ /*|0x4|*/ int num_subrs;
  /*<thisrel this+0x10c>*/ /*|0x4|*/ unsigned char** subrs;
  /*<thisrel this+0x110>*/ /*|0x4|*/ int* subrs_len;
  /*<thisrel this+0x114>*/ /*|0x4|*/ int num_glyphs;
  /*<thisrel this+0x118>*/ /*|0x4|*/ char** glyph_names;
  /*<thisrel this+0x11c>*/ /*|0x4|*/ unsigned char** charstrings;
  /*<thisrel this+0x120>*/ /*|0x4|*/ int* charstrings_len;
  /*<thisrel this+0x124>*/ /*|0x1|*/ unsigned char paint_type;
  /*<thisrel this+0x125>*/ /*|0x1|*/ unsigned char font_type;
  /*<thisrel this+0x128>*/ /*|0x10|*/ struct FT_Matrix_ font_matrix;
  /*<thisrel this+0x138>*/ /*|0x8|*/ struct FT_Vector_ font_offset;
  /*<thisrel this+0x140>*/ /*|0x10|*/ struct FT_BBox_ font_bbox;
  /*<thisrel this+0x150>*/ /*|0x4|*/ long font_id;
  /*<thisrel this+0x154>*/ /*|0x4|*/ int stroke_width;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x158>

struct FNT_FaceRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x84|*/ struct FT_FaceRec_ root;
  /*<thisrel this+0x84>*/ /*|0x4|*/ unsigned int num_fonts;
  /*<thisrel this+0x88>*/ /*|0x4|*/ struct FNT_Font_* fonts;
  /*<thisrel this+0x8c>*/ /*|0x4|*/ struct FT_CharMapRec_* charmap_handle;
  /*<thisrel this+0x90>*/ /*|0xc|*/ struct FT_CharMapRec_ charmap;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x9c>

struct FNT_Font_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long offset;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int size_shift;
  /*<thisrel this+0x8>*/ /*|0x90|*/ struct WinFNT_Header_ header;
  /*<thisrel this+0x98>*/ /*|0x4|*/ unsigned char* fnt_frame;
  /*<thisrel this+0x9c>*/ /*|0x4|*/ unsigned long fnt_size;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xa0>

struct WinMZ_Header_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short magic;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short lfanew;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct WinNE_Header_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short magic;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short resource_tab_offset;
  /*<thisrel this+0x4>*/ /*|0x2|*/ unsigned short rname_tab_offset;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x6>

struct FNT_SizeRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2c|*/ struct FT_SizeRec_ root;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ struct FNT_Font_* font;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x30>

struct FT_Int64_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int lo;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int hi;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct FT_Slot_InternalRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct FT_GlyphLoader_* loader;
  /*<thisrel this+0x4>*/ /*|0x1|*/ unsigned char glyph_transformed;
  /*<thisrel this+0x8>*/ /*|0x10|*/ struct FT_Matrix_ glyph_matrix;
  /*<thisrel this+0x18>*/ /*|0x8|*/ struct FT_Vector_ glyph_delta;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct FT_Open_Args_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int flags;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned char* memory_base;
  /*<thisrel this+0x8>*/ /*|0x4|*/ long memory_size;
  /*<thisrel this+0xc>*/ /*|0x4|*/ char* pathname;
  /*<thisrel this+0x10>*/ /*|0x4|*/ struct FT_StreamRec_* stream;
  /*<thisrel this+0x14>*/ /*|0x4|*/ struct FT_ModuleRec_* driver;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int num_params;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ struct FT_Parameter_* params;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct FT_ListNodeRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct FT_ListNodeRec_* prev;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct FT_ListNodeRec_* next;
  /*<thisrel this+0x8>*/ /*|0x4|*/ void* data;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct FT_Face_InternalRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short max_points;
  /*<thisrel this+0x2>*/ /*|0x2|*/ short max_contours;
  /*<thisrel this+0x4>*/ /*|0x10|*/ struct FT_Matrix_ transform_matrix;
  /*<thisrel this+0x14>*/ /*|0x8|*/ struct FT_Vector_ transform_delta;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int transform_flags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct FT_Size_Metrics_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short x_ppem;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short y_ppem;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long x_scale;
  /*<thisrel this+0x8>*/ /*|0x4|*/ long y_scale;
  /*<thisrel this+0xc>*/ /*|0x4|*/ long ascender;
  /*<thisrel this+0x10>*/ /*|0x4|*/ long descender;
  /*<thisrel this+0x14>*/ /*|0x4|*/ long height;
  /*<thisrel this+0x18>*/ /*|0x4|*/ long max_advance;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c>

struct FT_ListRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct FT_ListNodeRec_* head;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct FT_ListNodeRec_* tail;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct FT_Extension_Registry_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int num_extensions;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long cur_offset;
  /*<thisrel this+0x8>*/ /*|0xc0|*/ struct FT_Extension_Class_ classes[8];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc8>

struct FT_Extension_Class_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ char* id;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long size;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int  (init*)(void*, struct FT_FaceRec_*);
  /*<thisrel this+0xc>*/ /*|0x4|*/ void  (finalize*)(void*, struct FT_FaceRec_*);
  /*<thisrel this+0x10>*/ /*|0x4|*/ void* interface;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long offset;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct FT_SfntName_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short platform_id;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short encoding_id;
  /*<thisrel this+0x4>*/ /*|0x2|*/ unsigned short language_id;
  /*<thisrel this+0x6>*/ /*|0x2|*/ unsigned short name_id;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned char* string;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int string_len;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct WhoListEntry {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x30|*/ char name[48];
  /*<thisrel this+0x30>*/ /*|0x60|*/ char guild[96];
  /*<thisrel this+0x90>*/ /*|0x4|*/ int level;
  /*<thisrel this+0x94>*/ /*|0x4|*/ int raceID;
  /*<thisrel this+0x98>*/ /*|0x4|*/ int classID;
  /*<thisrel this+0x9c>*/ /*|0x4|*/ int areaID;
  /*<thisrel this+0xa0>*/ /*|0x4|*/ enum PARTY_STATUS partyStatus;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xa4>

struct WhoSortType {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ enum WHO_SORT_TYPE type;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int reverse;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct SHA1_CONTEXT {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x14|*/ unsigned int state[5];
  /*<thisrel this+0x14>*/ /*|0x8|*/ unsigned int count[2];
  /*<thisrel this+0x1c>*/ /*|0x40|*/ unsigned char buffer[64];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x5c>

struct WowConnection::SENDNODE : class TSLinkedNode<WowConnection::SENDNODE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned char* data;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int size;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int offset;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned int datasize;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<WowConnection::SENDNODE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall SENDNODE(struct WowConnection::SENDNODE&);
  void __thiscall SENDNODE(unsigned char*, int, void*, unsigned char);
  void __thiscall ~SENDNODE();
  struct WowConnection::SENDNODE& __thiscall operator=(struct WowConnection::SENDNODE&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x18>

struct GLYPHDATA {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ void* data;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int dataSize;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int freeTypeGlyphWidth;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int freeTypeGlyphHeight;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int freeTypeGlyphPitch;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int freeTypeGlyphAdvance;
  /*<thisrel this+0x18>*/ /*|0x4|*/ float freeTypeGlyphBearing;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned int yOffset;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned int yStart;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall GLYPHDATA();
  void __thiscall ~GLYPHDATA();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x24>

struct FACEDATA : class TSHashObject<FACEDATA,HASHKEY_STRI>,  class CHandleObject  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x20>*/ /*|0x4|*/ void* data;
  /*<thisrel this+0x24>*/ /*|0x4|*/ struct FT_FaceRec_* face;
  /*<thisrel this+0x28>*/ /*|0x4|*/ struct HFACE__* selfReference;

  // base classes -----------------------------------
  // baseclass class TSHashObject<FACEDATA,HASHKEY_STRI>
  // <base data offset+0x8>

  // baseclass class CHandleObject
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall FACEDATA(struct FACEDATA&);
  void __thiscall FACEDATA();
  struct FACEDATA& __thiscall operator=(struct FACEDATA&);
  void __thiscall __local_vftable_ctor_closure();

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ void __thiscall ~FACEDATA();
  virtual /*<vtableoff 0x0>*/ void* __thiscall __vecDelDtor(unsigned int);
};
// <size 0x2c>

struct HFACE__ : struct HOBJECT__  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x4>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------
  // baseclass struct HOBJECT__
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct TEXTLINETEXTURE : class TSLinkedNode<TEXTLINETEXTURE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x14|*/ class TSGrowableArray_<VERT,1199076678,58> m_vert;
  /*<thisrel this+0x1c>*/ /*|0x14|*/ class TSGrowableArray_<NTempest::CImVector,1199076678,59> m_shadowColors;
  /*<thisrel this+0x30>*/ /*|0x14|*/ class TSGrowableArray_<NTempest::CImVector,1199076678,60> m_colors;
  /*<thisrel this+0x44>*/ /*|0x14|*/ class TSGrowableArray_<unsigned short,1199076678,61> m_vertIndices;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<TEXTLINETEXTURE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------
  static struct TEXTLINETEXTURE* __fastcall TEXTLINETEXTURE::NewTextLineTexture();

  // non-virtual functions --------------------------
  void __thiscall TEXTLINETEXTURE(struct TEXTLINETEXTURE&);
  void __thiscall TEXTLINETEXTURE();
  void __thiscall TEXTLINETEXTURE::~TEXTLINETEXTURE();
  void __thiscall TEXTLINETEXTURE::Recycle();
  void __thiscall TEXTLINETEXTURE::InternalRenderTexture(/*<regrel ebp+0x8>*/ /*|0x4|*/ int textureNum, /*<regrel ebp+0xc>*/ /*|0x4|*/ struct CGxFont* face, /*<regrel ebp+0x10>*/ /*|0x1|*/ unsigned char showShadow, /*<regrel ebp+0x14>*/ /*|0x4|*/ class NTempest::CImVector& shadowColor, /*<regrel ebp+0x18>*/ /*|0x4|*/ class NTempest::C2Vector& shadowOffset, /*<regrel ebp+0x1c>*/ /*|0x4|*/ class NTempest::CImVector& fontColor);
  struct TEXTLINETEXTURE& __thiscall operator=(struct TEXTLINETEXTURE&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x58>

struct IGXUTEXTLINE : class TSLinkedNode<IGXUTEXTLINE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x14|*/ class TSGrowableArray<TEXTLINETEXTURE *> m_texturePages;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<IGXUTEXTLINE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------
  static struct IGXUTEXTLINE* __fastcall IGXUTEXTLINE::NewGxuTextLine();

  // non-virtual functions --------------------------
  void __thiscall IGXUTEXTLINE::Destroy();
  void __thiscall IGXUTEXTLINE::Recycle();
  void __thiscall IGXUTEXTLINE::Reserve(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int numTextLineTextures);
  void __thiscall ~IGXUTEXTLINE();
  void __thiscall IGXUTEXTLINE(struct IGXUTEXTLINE&);
  void __thiscall IGXUTEXTLINE();
  struct IGXUTEXTLINE& __thiscall operator=(struct IGXUTEXTLINE&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x1c>

struct STRINGVIEWMATRICES : class TSHashObject<STRINGVIEWMATRICES,HASHKEY_PTR>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x8|*/ class TSLink<STRINGVIEWMATRICES> m_freeLink;
  /*<thisrel this+0x20>*/ /*|0x40|*/ class NTempest::C44Matrix projection;
  /*<thisrel this+0x60>*/ /*|0x40|*/ class NTempest::C44Matrix view;

  // base classes -----------------------------------
  // baseclass class TSHashObject<STRINGVIEWMATRICES,HASHKEY_PTR>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall STRINGVIEWMATRICES(struct STRINGVIEWMATRICES&);
  void __thiscall STRINGVIEWMATRICES();
  struct STRINGVIEWMATRICES& __thiscall operator=(struct STRINGVIEWMATRICES&);
  void __thiscall ~STRINGVIEWMATRICES();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xa0>

struct HYPERLINKPARSEINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ enum HYPERLINKPARSEMODE hyperlinkParseMode;
  /*<thisrel this+0x4>*/ /*|0x18|*/ struct GXUFONTHYPERLINKINFO currentParseInfo;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ char* lastLinkStartPtr;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned int lastLinkLength;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall HYPERLINKPARSEINFO();
  void __thiscall ~HYPERLINKPARSEINFO();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x24>

struct CHARCODEDESC : class TSHashObject<CHARCODEDESC,HASHKEY_NONE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x8|*/ class TSLink<CHARCODEDESC> textureRowLink;
  /*<thisrel this+0x20>*/ /*|0x8|*/ class TSLink<CHARCODEDESC> fontGlyphLink;
  /*<thisrel this+0x28>*/ /*|0x4|*/ int dataValid;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ unsigned int textureNumber;
  /*<thisrel this+0x30>*/ /*|0x4|*/ unsigned int rowNumber;
  /*<thisrel this+0x34>*/ /*|0x4|*/ unsigned int glyphStartPixel;
  /*<thisrel this+0x38>*/ /*|0x4|*/ unsigned int glyphEndPixel;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ struct GLYPHBITMAPDATA* bitmapData;

  // base classes -----------------------------------
  // baseclass class TSHashObject<CHARCODEDESC,HASHKEY_NONE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CHARCODEDESC(struct CHARCODEDESC&);
  void __thiscall CHARCODEDESC();
  int __thiscall ValidBlockEndPoints();
  int __thiscall ValidTextureCoords();
  unsigned int __thiscall GetCellWidth();
  void __thiscall CHARCODEDESC::GenerateTextureCoords(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int rowNumber, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int glyphSide);
  unsigned int __thiscall CHARCODEDESC::GapToNextTexture();
  unsigned int __thiscall CHARCODEDESC::GapToPreviousTexture();
  struct CHARCODEDESC& __thiscall operator=(struct CHARCODEDESC&);
  void __thiscall CHARCODEDESC::~CHARCODEDESC();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x40>

struct VERT {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xc|*/ class NTempest::C3Vector vc;
  /*<thisrel this+0xc>*/ /*|0x8|*/ class NTempest::C2Vector tc;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall VERT();
  void __thiscall VERT::~VERT();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x14>

struct GLYPHBITMAPDATA : class TSHashObject<GLYPHBITMAPDATA,HASHKEY_NONE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned int m_code;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ void* m_data;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned int m_dataSize;
  /*<thisrel this+0x24>*/ /*|0x4|*/ int m_dirty;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned int m_glyphWidth;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ unsigned int m_glyphHeight;
  /*<thisrel this+0x30>*/ /*|0x4|*/ unsigned int m_glyphCellWidth;
  /*<thisrel this+0x34>*/ /*|0x4|*/ int m_glyphAdvance;
  /*<thisrel this+0x38>*/ /*|0x4|*/ float m_glyphBearing;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ unsigned int m_glyphPitch;
  /*<thisrel this+0x40>*/ /*|0x4|*/ int m_yOffset;
  /*<thisrel this+0x44>*/ /*|0x4|*/ int m_yStart;
  /*<thisrel this+0x48>*/ /*|0x10|*/ class NTempest::CRect m_textureCoords;
  /*<thisrel this+0x58>*/ /*|0x4|*/ int m_textureValid;

  // base classes -----------------------------------
  // baseclass class TSHashObject<GLYPHBITMAPDATA,HASHKEY_NONE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall GLYPHBITMAPDATA(struct GLYPHBITMAPDATA&);
  void __thiscall GLYPHBITMAPDATA::GLYPHBITMAPDATA();
  void __thiscall GLYPHBITMAPDATA::~GLYPHBITMAPDATA();
  void __thiscall GLYPHBITMAPDATA::Clear();
  struct GLYPHBITMAPDATA& __thiscall operator=(struct GLYPHBITMAPDATA&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x5c>

struct TEXTURECACHE {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int m_anyDirtyGlyphs;
  /*<thisrel this+0x4>*/ /*|0x4|*/ void* m_data;
  /*<thisrel this+0x8>*/ /*|0x4|*/ class CGxTex* m_texture;
  /*<thisrel this+0xc>*/ /*|0x4|*/ struct CGxFont* m_theFace;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int m_page;
  /*<thisrel this+0x14>*/ /*|0x10|*/ class TSFixedArray<TEXTURECACHEROW> m_textureRows;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------
  static void __fastcall TEXTURECACHE::TextureCallback(/*<register ecx>*/ /*|0x4|*/ enum EGxTexCommand cmd, /*<register edx>*/ /*|0x4|*/ unsigned int w, /*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int h, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int d, /*<regrel ebp+0x10>*/ /*|0x4|*/ unsigned int mipLevel, /*<regrel ebp+0x14>*/ /*|0x4|*/ void* userArg, /*<regrel ebp+0x18>*/ /*|0x4|*/ unsigned int& texelStrideInBytes, /*<regrel ebp+0x1c>*/ /*|0x4|*/ void*& texels);

  // non-virtual functions --------------------------
  void __thiscall TEXTURECACHE(struct TEXTURECACHE&);
  void __thiscall TEXTURECACHE::TEXTURECACHE();
  void __thiscall TEXTURECACHE::~TEXTURECACHE();
  void __thiscall TEXTURECACHE::CreateTexture(/*<regrel ebp+0x8>*/ /*|0x4|*/ int filter);
  struct CHARCODEDESC* __thiscall TEXTURECACHE::AllocateNewGlyph(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct GLYPHBITMAPDATA* data);
  class CGxTex* __thiscall GetTexturePtr();
  void __thiscall TEXTURECACHE::Initialize(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct CGxFont* face, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int thePage, /*<regrel ebp+0x10>*/ /*|0x4|*/ unsigned int pixelSize);
  void __thiscall Clear();
  void __thiscall TEXTURECACHE::Update();
  void __thiscall TEXTURECACHE::PasteGlyph(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct GLYPHBITMAPDATA* data, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned long* dst, /*<regrel ebp+0x10>*/ /*|0x4|*/ int thick);
  void __thiscall TEXTURECACHE::PasteGlyphOutlinedMonochrome(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct GLYPHBITMAPDATA* glyphData, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned long* dst, /*<regrel ebp+0x10>*/ /*|0x4|*/ int thick);
  void __thiscall TEXTURECACHE::PasteGlyphNonOutlinedMonochrome(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct GLYPHBITMAPDATA* glyphData, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned long* dst);
  void __thiscall TEXTURECACHE::PasteGlyphOutlinedAA(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct GLYPHBITMAPDATA* glyphData, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned long* dst, /*<regrel ebp+0x10>*/ /*|0x4|*/ int thick);
  void __thiscall TEXTURECACHE::PasteGlyphNonOutlinedAA(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct GLYPHBITMAPDATA* glyphData, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned long* dst);
  void __thiscall TEXTURECACHE::TextureCallbackHandler(/*<regrel ebp+0x8>*/ /*|0x4|*/ enum EGxTexCommand cmd, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int w, /*<regrel ebp+0x10>*/ /*|0x4|*/ unsigned int h, /*<regrel ebp+0x14>*/ /*|0x4|*/ unsigned int mipLevel, /*<regrel ebp+0x18>*/ /*|0x4|*/ unsigned int& texelStrideInBytes, /*<regrel ebp+0x1c>*/ /*|0x4|*/ void*& texels);
  struct TEXTURECACHE& __thiscall operator=(struct TEXTURECACHE&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x24>

struct KERNNODE : class TSHashObject<KERNNODE,KERNINGHASHKEY>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned int flags;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ float proporportionalSpacing;
  /*<thisrel this+0x20>*/ /*|0x4|*/ float fixedWidthSpacing;

  // base classes -----------------------------------
  // baseclass class TSHashObject<KERNNODE,KERNINGHASHKEY>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall KERNNODE(struct KERNNODE&);
  void __thiscall KERNNODE();
  struct KERNNODE& __thiscall operator=(struct KERNNODE&);
  void __thiscall ~KERNNODE();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x24>

struct TEXTURECACHEROW {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int widestFreeSlot;
  /*<thisrel this+0x4>*/ /*|0xc|*/ class TSExplicitList<CHARCODEDESC,24> glyphList;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall TEXTURECACHEROW::TEXTURECACHEROW(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct TEXTURECACHEROW& __that);
  void __thiscall TEXTURECACHEROW();
  void __thiscall TEXTURECACHEROW::EvictGlyph(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct CHARCODEDESC*& desc);
  struct CHARCODEDESC* __thiscall TEXTURECACHEROW::CreateNewDesc(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct GLYPHBITMAPDATA* data, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int rowNumber, /*<regrel ebp+0x10>*/ /*|0x4|*/ unsigned int glyphCellHeight);
  struct TEXTURECACHEROW& __thiscall operator=(struct TEXTURECACHEROW&);
  void __thiscall ~TEXTURECACHEROW();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x10>

struct IGXUTEXTBLOCK {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ float m_offsetY;
  /*<thisrel this+0x4>*/ /*|0x14|*/ class TSGrowableArray<IGXUTEXTLINE *> m_lines;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  class TSGrowableArray<IGXUTEXTLINE *>& __thiscall GetLines();
  float __thiscall YOffset();
  void __thiscall SetYOffset(float);
  unsigned int __thiscall NumLines();
  void __thiscall IGXUTEXTBLOCK::Destroy();
  struct IGXUTEXTLINE* __thiscall IGXUTEXTBLOCK::NewLine();
  void __thiscall IGXUTEXTBLOCK::Recycle();
  void __thiscall IGXUTEXTBLOCK(struct IGXUTEXTBLOCK&);
  void __thiscall IGXUTEXTBLOCK();
  void __thiscall ~IGXUTEXTBLOCK();
  struct IGXUTEXTBLOCK& __thiscall operator=(struct IGXUTEXTBLOCK&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x18>

struct BATCHEDRENDERFONTDESC : class TSHashObject<BATCHEDRENDERFONTDESC,HASHKEY_PTR>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x4|*/ struct CGxFont* face;
  /*<thisrel this+0x1c>*/ /*|0xc|*/ class TSExplicitList<CGxString,16> m_strings;

  // base classes -----------------------------------
  // baseclass class TSHashObject<BATCHEDRENDERFONTDESC,HASHKEY_PTR>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall BATCHEDRENDERFONTDESC(struct BATCHEDRENDERFONTDESC&);
  void __thiscall BATCHEDRENDERFONTDESC();
  void __thiscall BATCHEDRENDERFONTDESC::~BATCHEDRENDERFONTDESC();
  void __thiscall BATCHEDRENDERFONTDESC::RenderBatch();
  struct BATCHEDRENDERFONTDESC& __thiscall operator=(struct BATCHEDRENDERFONTDESC&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x28>

struct GxuFontStripEscapeCodes::__unnamed_f8_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int stripFlags;
  /*<thisrel this+0x4>*/ /*|0x1|*/ char charCode;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int addEscapeChar;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct CGxuLight : class TSLinkedNode<CGxuLight>  {

  // static data ------------------------------------
  static /*<rva 0xa16108>*/ /*|0xc|*/ class TSList<CGxuLight,TSGetLink<CGxuLight> > s_lights;
  static /*<rva 0xa16064>*/ /*|0xc|*/ class TSList<CGxuLight,TSGetLink<CGxuLight> > s_lightsFreeList;
  static /*<rva 0xa16114>*/ /*|0xc|*/ class TSExplicitList<CGxuLightLink,12> s_linksFreeList;

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x3c|*/ class CGxLight m_light;
  /*<thisrel this+0x44>*/ /*|0x4|*/ unsigned int m_hwLight;
  /*<thisrel this+0x48>*/ /*|0x4|*/ unsigned long m_selectionCount;
  /*<thisrel this+0x4c>*/ /*|0x4|*/ int m_lockCount;
  /*<thisrel this+0x50>*/ /*|0xc|*/ class TSExplicitList<CGxuLightLink,12> m_links;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<CGxuLight>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CGxuLight(struct CGxuLight&);
  void __thiscall CGxuLight();
  float __thiscall Fitness(class NTempest::C3Vector&, float, float);
  class CGxuLightLink* __thiscall AllocListLink();
  void __thiscall ClearListLinks();
  struct CGxuLight& __thiscall operator=(struct CGxuLight&);
  void __thiscall ~CGxuLight();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x5c>

struct CLightList : class TSHashObject<CLightList,HASHKEY_DWORD>  {

  // static data ------------------------------------
  static /*<rva 0x0>*/ /*|0xc|*/ class TSExplicitList<CGxuLightLink,20> s_dirLightList;
  static /*<rva 0xa16078>*/ /*|0x48|*/ class TSHashTableReuse<CLightList,HASHKEY_DWORD,1> s_lightHashTable;

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0xc|*/ class TSExplicitList<CGxuLightLink,20> m_links;

  // base classes -----------------------------------
  // baseclass class TSHashObject<CLightList,HASHKEY_DWORD>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CLightList(struct CLightList&);
  void __thiscall CLightList::CLightList();
  struct CLightList& __thiscall operator=(struct CLightList&);
  void __thiscall CLightList::~CLightList();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x24>

struct SRP6_Random::__ctor::__unnamed_f9_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long ltime;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int msec;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int random;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct PropertyInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int typeId;
  /*<thisrel this+0x4>*/ /*|0x4|*/ char* name;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int valueType;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int valueBaseType;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct CGameObjectDef::EnumValue {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int count;
  /*<thisrel this+0x4>*/ /*|0x4|*/ char** list;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int defaultIndex;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct CGameObjectDef::NumberValue {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ float min;
  /*<thisrel this+0x4>*/ /*|0x4|*/ float max;
  /*<thisrel this+0x8>*/ /*|0x4|*/ float step;
  /*<thisrel this+0xc>*/ /*|0x4|*/ float defaultValue;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct ObjectInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int typeId;
  /*<thisrel this+0x4>*/ /*|0x4|*/ char* name;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int numProperties;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int* propertyInfo;
  /*<thisrel this+0x10>*/ /*|0x4|*/ union CGameObjectDef::ValueInfo** valueInfo;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct __unnamed_fa_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ char* animName;
  /*<thisrel this+0x4>*/ /*|0x4|*/ enum ANIMENUMERATION anim;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct ANIMKIT : class TSHashObject<ANIMKIT,HASHKEY_NONE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x30|*/ struct WEAPONHANDCHANCES chancesArray[2];

  // base classes -----------------------------------
  // baseclass class TSHashObject<ANIMKIT,HASHKEY_NONE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ANIMKIT(struct ANIMKIT&);
  void __thiscall ANIMKIT();
  struct ANIMKIT& __thiscall operator=(struct ANIMKIT&);
  void __thiscall ~ANIMKIT();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x48>

struct DAMAGELOGBASE : struct LOGBASE  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x8|*/ unsigned __int64 attacker;
  /*<thisrel this+0x10>*/ /*|0x8|*/ unsigned __int64 victim;
  /*<thisrel this+0x18>*/ /*|0x4|*/ float intellectBonus;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ float DPSScaler;
  /*<thisrel this+0x20>*/ /*|0x4|*/ float modDamageTaken;
  /*<thisrel this+0x24>*/ /*|0x4|*/ float modDamageDone;
  /*<thisrel this+0x28>*/ /*|0x4|*/ float scaledDamage;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ float netDamageMultiplier;
  /*<thisrel this+0x30>*/ /*|0x4|*/ float maxDamageReduction;
  /*<thisrel this+0x34>*/ /*|0x4|*/ float scaledArmorReduction;
  /*<thisrel this+0x38>*/ /*|0x4|*/ float hitRollFloat;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ float hitRollNeededFloat;
  /*<thisrel this+0x40>*/ /*|0x4|*/ float critRollFloat;
  /*<thisrel this+0x44>*/ /*|0x4|*/ float critRollNeededFloat;
  /*<thisrel this+0x48>*/ /*|0x4|*/ unsigned int flags;
  /*<thisrel this+0x4c>*/ /*|0x7c|*/ struct DamageData dmg;

  // base classes -----------------------------------
  // baseclass struct LOGBASE
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall DAMAGELOGBASE::DAMAGELOGBASE(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct DAMAGELOGBASE& __that);
  void __thiscall DAMAGELOGBASE::DAMAGELOGBASE(/*<regrel ebp+0x8>*/ /*|0x8|*/ unsigned __int64 attacker_, /*<regrel ebp+0x10>*/ /*|0x8|*/ unsigned __int64 victim_);
  struct DAMAGELOGBASE& __thiscall DAMAGELOGBASE::operator=(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct DAMAGELOGBASE& __that);
  void __thiscall ~DAMAGELOGBASE();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xc8>

struct WEAPONHANDCHANCES {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int total;
  /*<thisrel this+0x4>*/ /*|0x14|*/ class TSGrowableArray<CHANCES> chances;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall WEAPONHANDCHANCES(struct WEAPONHANDCHANCES&);
  void __thiscall WEAPONHANDCHANCES();
  struct WEAPONHANDCHANCES& __thiscall operator=(struct WEAPONHANDCHANCES&);
  void __thiscall ~WEAPONHANDCHANCES();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x18>

struct ANIMQUEUENODE : class TSLinkedNode<ANIMQUEUENODE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ enum ANIMQUEUETYPE type;
  /*<thisrel this+0x10>*/ /*|0x110|*/ struct ATTACKROUNDINFO roundInfo;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<ANIMQUEUENODE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ANIMQUEUENODE(struct ANIMQUEUENODE&);
  void __thiscall ANIMQUEUENODE();
  struct ANIMQUEUENODE& __thiscall operator=(struct ANIMQUEUENODE&);
  void __thiscall ~ANIMQUEUENODE();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x120>

struct LOGBASE {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall LOGBASE(struct LOGBASE&);
  void __thiscall LOGBASE();
  void __thiscall ~LOGBASE();
  struct LOGBASE& __thiscall operator=(struct LOGBASE&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ void __thiscall PI(class CDataStore&, int) = 0;
  virtual /*<vtableoff 0x4>*/ void __thiscall UI(class CDataStore&) = 0;
};
// <size 0x4>

struct ENVIRONMENTALDAMAGE : struct LOGBASE  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x8|*/ unsigned __int64 victim;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int school;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int amount;

  // base classes -----------------------------------
  // baseclass struct LOGBASE
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ENVIRONMENTALDAMAGE(struct ENVIRONMENTALDAMAGE&);
  void __thiscall ENVIRONMENTALDAMAGE();
  void __thiscall ENVIRONMENTALDAMAGE(unsigned __int64, int, int);
  struct ENVIRONMENTALDAMAGE& __thiscall operator=(struct ENVIRONMENTALDAMAGE&);
  void __thiscall ~ENVIRONMENTALDAMAGE();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ void __thiscall ENVIRONMENTALDAMAGE::PI(/*<regrel ebp+0x8>*/ /*|0x4|*/ class CDataStore& msg, /*<regrel ebp+0xc>*/ /*|0x4|*/ int debug);
  virtual /*<vtableoff 0x0>*/ void __thiscall ENVIRONMENTALDAMAGE::UI(/*<regrel ebp+0x8>*/ /*|0x4|*/ class CDataStore& msg);
};
// <size 0x18>

struct ENCHANTMENTLOG : struct LOGBASE  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x8|*/ unsigned __int64 attacker;
  /*<thisrel this+0x10>*/ /*|0x8|*/ unsigned __int64 victim;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int enchantment;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int itemID;
  /*<thisrel this+0x20>*/ /*|0x4|*/ int flags;

  // base classes -----------------------------------
  // baseclass struct LOGBASE
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ENCHANTMENTLOG(struct ENCHANTMENTLOG&);
  void __thiscall ENCHANTMENTLOG();
  struct ENCHANTMENTLOG& __thiscall operator=(struct ENCHANTMENTLOG&);
  void __thiscall ~ENCHANTMENTLOG();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ void __thiscall ENCHANTMENTLOG::PI(/*<regrel ebp+0x8>*/ /*|0x4|*/ class CDataStore& msg, /*<regrel ebp+0xc>*/ /*|0x4|*/ int debug);
  virtual /*<vtableoff 0x0>*/ void __thiscall ENCHANTMENTLOG::UI(/*<regrel ebp+0x8>*/ /*|0x4|*/ class CDataStore& msg);
};
// <size 0x28>

struct RESISTLOG : struct LOGBASE  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x8|*/ unsigned __int64 attacker;
  /*<thisrel this+0x10>*/ /*|0x8|*/ unsigned __int64 victim;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int spell;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ float resistRollNeeded;
  /*<thisrel this+0x20>*/ /*|0x4|*/ float resistRoll;
  /*<thisrel this+0x24>*/ /*|0x4|*/ int flags;
  /*<thisrel this+0x28>*/ /*|0x4|*/ int castLevel;

  // base classes -----------------------------------
  // baseclass struct LOGBASE
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall RESISTLOG(struct RESISTLOG&);
  void __thiscall RESISTLOG();
  struct RESISTLOG& __thiscall operator=(struct RESISTLOG&);
  void __thiscall ~RESISTLOG();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ void __thiscall RESISTLOG::PI(/*<regrel ebp+0x8>*/ /*|0x4|*/ class CDataStore& msg, /*<regrel ebp+0xc>*/ /*|0x4|*/ int debug);
  virtual /*<vtableoff 0x0>*/ void __thiscall RESISTLOG::UI(/*<regrel ebp+0x8>*/ /*|0x4|*/ class CDataStore& msg);
};
// <size 0x30>

struct PARTYKILLLOG : struct LOGBASE  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x8|*/ unsigned __int64 killer;
  /*<thisrel this+0x10>*/ /*|0x8|*/ unsigned __int64 victim;

  // base classes -----------------------------------
  // baseclass struct LOGBASE
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall PARTYKILLLOG(struct PARTYKILLLOG&);
  void __thiscall PARTYKILLLOG(unsigned __int64, unsigned __int64);
  struct PARTYKILLLOG& __thiscall operator=(struct PARTYKILLLOG&);
  void __thiscall ~PARTYKILLLOG();
  void __thiscall __dflt_ctor_closure();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ void __thiscall PARTYKILLLOG::PI(/*<regrel ebp+0x8>*/ /*|0x4|*/ class CDataStore& msg, /*<regrel ebp+0xc>*/ /*|0x4|*/ int debug);
  virtual /*<vtableoff 0x0>*/ void __thiscall PARTYKILLLOG::UI(/*<regrel ebp+0x8>*/ /*|0x4|*/ class CDataStore& msg);
};
// <size 0x18>

struct SPELLMISSLOG : struct LOGBASE  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x8|*/ unsigned __int64 attacker;
  /*<thisrel this+0x10>*/ /*|0x8|*/ unsigned __int64 victim;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned int spellID;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned int reason;
  /*<thisrel this+0x20>*/ /*|0x4|*/ float hitRoll;
  /*<thisrel this+0x24>*/ /*|0x4|*/ float hitRollNeeded;
  /*<thisrel this+0x28>*/ /*|0x4|*/ float dodgeRoll;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ float dodgeRollNeeded;
  /*<thisrel this+0x30>*/ /*|0x4|*/ float parryRoll;
  /*<thisrel this+0x34>*/ /*|0x4|*/ float parryRollNeeded;
  /*<thisrel this+0x38>*/ /*|0x4|*/ float blockRoll;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ float blockRollNeeded;
  /*<thisrel this+0x40>*/ /*|0x4|*/ unsigned int flags;

  // base classes -----------------------------------
  // baseclass struct LOGBASE
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall SPELLMISSLOG(struct SPELLMISSLOG&);
  void __thiscall SPELLMISSLOG(unsigned __int64, unsigned __int64, unsigned int);
  struct SPELLMISSLOG& __thiscall operator=(struct SPELLMISSLOG&);
  void __thiscall ~SPELLMISSLOG();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ void __thiscall SPELLMISSLOG::PI(/*<regrel ebp+0x8>*/ /*|0x4|*/ class CDataStore& msg, /*<regrel ebp+0xc>*/ /*|0x4|*/ int debug);
  virtual /*<vtableoff 0x0>*/ void __thiscall SPELLMISSLOG::UI(/*<regrel ebp+0x8>*/ /*|0x4|*/ class CDataStore& msg);
};
// <size 0x48>

struct HITSPRITE : class TSLinkedNode<HITSPRITE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int start;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int duration;
  /*<thisrel this+0x10>*/ /*|0x4|*/ struct HMODEL__* model;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<HITSPRITE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall HITSPRITE(struct HITSPRITE&);
  void __thiscall HITSPRITE();
  void __thiscall HITSPRITE::~HITSPRITE();
  struct HITSPRITE& __thiscall operator=(struct HITSPRITE&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x14>

struct RESULTTYPEHANDLERDESC {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ void  (handler*)(struct COMBATMESSAGEPRONOUNS&, struct ATTACKROUNDINFO&, char*, unsigned int);
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int flags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct ENCHANTMENTLOGDESC {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char valid;
  /*<thisrel this+0x8>*/ /*|0x28|*/ struct ENCHANTMENTLOG log;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ENCHANTMENTLOGDESC(struct ENCHANTMENTLOGDESC&);
  void __thiscall ENCHANTMENTLOGDESC();
  struct ENCHANTMENTLOGDESC& __thiscall operator=(struct ENCHANTMENTLOGDESC&);
  void __thiscall ~ENCHANTMENTLOGDESC();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x30>

struct COMBATLOGDESC {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int totalDamageDoneByEntity;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int totalDamageReducedByVictim;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int totalAttemptsByEntity;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int totalMisses;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int totalHits;
  /*<thisrel this+0x14>*/ /*|0x24|*/ unsigned int totalVictimStatesByEntity[9];
  /*<thisrel this+0x38>*/ /*|0x4|*/ unsigned int parryAttempts;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ unsigned int dodgeAttempts;
  /*<thisrel this+0x40>*/ /*|0x4|*/ unsigned int blockAttempts;
  /*<thisrel this+0x44>*/ /*|0x4|*/ unsigned int totalTimeDelayed;
  /*<thisrel this+0x48>*/ /*|0x4|*/ unsigned int criticalHits;
  /*<thisrel this+0x4c>*/ /*|0x4|*/ unsigned int spellCritsAttempted;
  /*<thisrel this+0x50>*/ /*|0x4|*/ unsigned int spellCritsSucceeded;
  /*<thisrel this+0x54>*/ /*|0x4|*/ unsigned int spellCritsSuffered;
  /*<thisrel this+0x58>*/ /*|0x4|*/ int totalHealthHealed;
  /*<thisrel this+0x5c>*/ /*|0x4|*/ int totalReflectedDamageSuffered;
  /*<thisrel this+0x60>*/ /*|0x4|*/ int totalDamageSuffered;
  /*<thisrel this+0x64>*/ /*|0x4|*/ int totalHealingProvided;
  /*<thisrel this+0x68>*/ /*|0x4|*/ int totalReflectedDamageProvided;
  /*<thisrel this+0x6c>*/ /*|0x4|*/ int totalDamageProvided;
  /*<thisrel this+0x70>*/ /*|0x4|*/ float totalSpellDamageReducedByVictim;
  /*<thisrel this+0x74>*/ /*|0x4|*/ float totalSpellDamageReduced;
  /*<thisrel this+0x78>*/ /*|0x2c|*/ class TSHashTable<UNITHASHOBJ,CHashKeyGUID> victims;
  /*<thisrel this+0xa4>*/ /*|0x2c|*/ class TSHashTable<UNITHASHOBJ,CHashKeyGUID> attackers;
  /*<thisrel this+0xd0>*/ /*|0x30|*/ char m_name[48];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall COMBATLOGDESC(struct COMBATLOGDESC&);
  void __thiscall COMBATLOGDESC::COMBATLOGDESC(/*<regrel ebp+0x8>*/ /*|0x4|*/ char* name);
  void __thiscall COMBATLOGDESC::~COMBATLOGDESC();
  void __thiscall COMBATLOGDESC::Clear();
  void __thiscall COMBATLOGDESC::LogAttack(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct SPELLLOG& info);
  void __thiscall COMBATLOGDESC::LogAttack(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct ATTACKROUNDINFO& info);
  void __thiscall COMBATLOGDESC::LogVictim(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct SPELLLOG& info);
  void __thiscall COMBATLOGDESC::LogVictim(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct ATTACKROUNDINFO& info);
  void __thiscall COMBATLOGDESC::LogUnitGUID(/*<regrel ebx+0x8>*/ /*|0x8|*/ unsigned __int64 guid, /*<regrel ebx+0x10>*/ /*|0x4|*/ class TSHashTable<UNITHASHOBJ,CHashKeyGUID>& theTable);
  struct COMBATLOGDESC& __thiscall operator=(struct COMBATLOGDESC&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x100>

struct __unnamed_fb_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ char* cvarname;
  /*<thisrel this+0x4>*/ /*|0x4|*/ char* defaultvalue;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct __unnamed_fc_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int hitRollValid;
  /*<thisrel this+0x4>*/ /*|0x4|*/ char* actionString;
  /*<thisrel this+0x8>*/ /*|0x4|*/ char* optionalString;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct COMBATMESSAGEPRONOUNS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x30|*/ char attackerName[48];
  /*<thisrel this+0x30>*/ /*|0x30|*/ char victimName[48];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x60>

struct DamageData {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int totalDamage;
  /*<thisrel this+0x4>*/ /*|0x14|*/ int damageType[5];
  /*<thisrel this+0x18>*/ /*|0x14|*/ unsigned int minDamage[5];
  /*<thisrel this+0x2c>*/ /*|0x14|*/ unsigned int maxDamage[5];
  /*<thisrel this+0x40>*/ /*|0x14|*/ float damageFloat[5];
  /*<thisrel this+0x54>*/ /*|0x14|*/ int damage[5];
  /*<thisrel this+0x68>*/ /*|0x14|*/ int absorbed[5];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall DamageData::Clear();

  // virtual functions ------------------------------
};
// <size 0x7c>

struct UNITHASHOBJ : class TSHashObject<UNITHASHOBJ,CHashKeyGUID>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned int count;

  // base classes -----------------------------------
  // baseclass class TSHashObject<UNITHASHOBJ,CHashKeyGUID>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall UNITHASHOBJ(struct UNITHASHOBJ&);
  void __thiscall UNITHASHOBJ();
  struct UNITHASHOBJ& __thiscall operator=(struct UNITHASHOBJ&);
  void __thiscall ~UNITHASHOBJ();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x28>

struct GetItemTypeCountData {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int entryID;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int count;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct FindItemClassData {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int classID;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int subclassMask;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall FindItemClassData(int, int);

  // virtual functions ------------------------------
};
// <size 0x8>

struct PERSISTENTTEXTURE : struct LISTBASE  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct LISTBASE
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall PERSISTENTTEXTURE(struct PERSISTENTTEXTURE&);
  void __thiscall PERSISTENTTEXTURE::PERSISTENTTEXTURE();
  struct PERSISTENTTEXTURE& __thiscall operator=(struct PERSISTENTTEXTURE&);
  void __thiscall ~PERSISTENTTEXTURE();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ unsigned char __thiscall PERSISTENTTEXTURE::MakeSpace();
};
// <size 0x2c>

struct LISTBASE {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x4>*/ /*|0xc|*/ class TSExplicitList<SPLATDATA,68> m_splatOrder;
  /*<thisrel this+0x10>*/ /*|0xc|*/ class TSList<CHUNKDATA,TSGetLink<CHUNKDATA> > m_chunks;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ struct HTEXTURE__* m_texture;
  /*<thisrel this+0x20>*/ /*|0x4|*/ int m_currentCount;
  /*<thisrel this+0x24>*/ /*|0x4|*/ int m_maxCount;
  /*<thisrel this+0x28>*/ /*|0x4|*/ int m_flags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall LISTBASE(struct LISTBASE&);
  void __thiscall LISTBASE::LISTBASE(/*<regrel ebp+0x8>*/ /*|0x4|*/ int m, /*<regrel ebp+0xc>*/ /*|0x4|*/ int f);
  void __thiscall LISTBASE::~LISTBASE();
  void __thiscall LISTBASE::Render();
  void __thiscall LISTBASE::Add(/*<regrel ebp+0x8>*/ /*|0x4|*/ class NTempest::C3Vector& position, /*<regrel ebp+0xc>*/ /*|0x4|*/ class NTempest::CAaBox& box, /*<regrel ebp+0x10>*/ /*|0x4|*/ class NTempest::C44Matrix& matrix);
  void __thiscall LISTBASE::SetTexture(/*<regrel ebp+0x8>*/ /*|0x4|*/ char* n);
  struct CHUNKDATA* __thiscall LISTBASE::FindChunk(/*<regrel ebp+0x8>*/ /*|0x4|*/ int id);
  struct LISTBASE& __thiscall operator=(struct LISTBASE&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ unsigned char __thiscall MakeSpace() = 0;
};
// <size 0x2c>

struct CHUNKDATA : class TSLinkedNode<CHUNKDATA>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ int m_sourceID;
  /*<thisrel this+0xc>*/ /*|0xc|*/ class TSExplicitList<SPLATDATA,76> m_splats;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int m_flags;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int m_vertCount;
  /*<thisrel this+0x20>*/ /*|0x4|*/ int m_indexCount;
  /*<thisrel this+0x24>*/ /*|0x4|*/ int m_numSplats;
  /*<thisrel this+0x28>*/ /*|0x40|*/ class NTempest::C44Matrix m_matrix;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<CHUNKDATA>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CHUNKDATA(struct CHUNKDATA&);
  void __thiscall CHUNKDATA();
  struct SPLATDATA* __thiscall CHUNKDATA::Add(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct CWTriData::Batch& batch, /*<regrel ebp+0xc>*/ /*|0x4|*/ class NTempest::CAaBox& box, /*<regrel ebp+0x10>*/ /*|0x4|*/ class NTempest::C44Matrix& basis);
  void __thiscall CHUNKDATA::RecycleSplat(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct SPLATDATA* splat);
  void __thiscall CHUNKDATA::Render();
  int __thiscall CHUNKDATA::GetVertCount(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct CWTriData::Batch& batch, /*<regrel ebp+0xc>*/ /*|0x4|*/ int& lowest, /*<regrel ebp+0x10>*/ /*|0x4|*/ int& highest);
  void __thiscall CHUNKDATA::~CHUNKDATA();
  struct CHUNKDATA& __thiscall operator=(struct CHUNKDATA&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x68>

struct CWTriData::Batch {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ class NTempest::C44Matrix* matrix;
  /*<thisrel this+0x4>*/ /*|0x4|*/ class NTempest::C3Vector* vertices;
  /*<thisrel this+0x8>*/ /*|0x4|*/ class NTempest::C3Vector* normals;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned short* vertexIndices;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned short* triIndices;
  /*<thisrel this+0x14>*/ /*|0x2|*/ unsigned short indexCount;
  /*<thisrel this+0x16>*/ /*|0x2|*/ unsigned short triCount;
  /*<thisrel this+0x18>*/ /*|0x2|*/ unsigned short minIndex;
  /*<thisrel this+0x1a>*/ /*|0x2|*/ unsigned short maxIndex;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned long sourceID;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  unsigned short __thiscall GetMinIndex();
  unsigned short __thiscall CWTriData::Batch::GetVertexCount();
  unsigned short __thiscall GetIndexCount();
  unsigned short __thiscall GetIndex(unsigned short);
  class NTempest::C3Vector& __thiscall GetVertex(unsigned short);
  class NTempest::C3Vector& __thiscall GetNormal(unsigned short);

  // virtual functions ------------------------------
};
// <size 0x20>

struct SPLATDATA {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x14|*/ class TSGrowableArray<VERTDATA> data;
  /*<thisrel this+0x14>*/ /*|0x14|*/ class TSGrowableArray<unsigned short> indices;
  /*<thisrel this+0x28>*/ /*|0x4|*/ int startTime;
  /*<thisrel this+0x2c>*/ /*|0xc|*/ class NTempest::C3Vector position;
  /*<thisrel this+0x38>*/ /*|0x1|*/ unsigned char skip;
  /*<thisrel this+0x39>*/ /*|0x4|*/ class NTempest::CImVector color;
  /*<thisrel this+0x40>*/ /*|0x4|*/ struct CHUNKDATA* chunk;
  /*<thisrel this+0x44>*/ /*|0x8|*/ class TSLink<SPLATDATA> orderLink;
  /*<thisrel this+0x4c>*/ /*|0x8|*/ class TSLink<SPLATDATA> normalLink;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  unsigned char __thiscall SPLATDATA::Update(/*<regrel ebp+0x8>*/ /*|0x4|*/ float progress, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned char& nuke);
  unsigned char __thiscall Culled();
  void __thiscall SPLATDATA(struct SPLATDATA&);
  void __thiscall SPLATDATA();
  struct SPLATDATA& __thiscall operator=(struct SPLATDATA&);
  void __thiscall ~SPLATDATA();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x54>

struct TIMEDTEXTURE : struct LISTBASE  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct LISTBASE
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall TIMEDTEXTURE(struct TIMEDTEXTURE&);
  void __thiscall TIMEDTEXTURE();
  struct TIMEDTEXTURE& __thiscall operator=(struct TIMEDTEXTURE&);
  void __thiscall ~TIMEDTEXTURE();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ unsigned char __thiscall TIMEDTEXTURE::MakeSpace();
};
// <size 0x2c>

struct VERTDATA {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xc|*/ class NTempest::C3Vector p;
  /*<thisrel this+0xc>*/ /*|0x10|*/ class NTempest::C2Vector t[2];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall VERTDATA::VERTDATA();
  void __thiscall ~VERTDATA();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x1c>

struct UNITONESHOTEFFECTDESC : class TSHashObject<UNITONESHOTEFFECTDESC,CHashKeyGUID>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x20>*/ /*|0xc|*/ class TSExplicitList<ONESHOTEFFECTNODE,4> m_effects;

  // base classes -----------------------------------
  // baseclass class TSHashObject<UNITONESHOTEFFECTDESC,CHashKeyGUID>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall UNITONESHOTEFFECTDESC(struct UNITONESHOTEFFECTDESC&);
  void __thiscall UNITONESHOTEFFECTDESC();
  void __thiscall ~UNITONESHOTEFFECTDESC();
  struct UNITONESHOTEFFECTDESC& __thiscall operator=(struct UNITONESHOTEFFECTDESC&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x30>

struct MISSILENODE : class TSLinkedNode<MISSILENODE>  {

  // static data ------------------------------------
  static /*<rva 0x40d388>*/ /*|0x4|*/ float HEIGHT_SCAN_RANGE;
  static /*<rva 0x40d38c>*/ /*|0x4|*/ float MIN_HEIGHT;

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct HMODEL__* model;
  /*<thisrel this+0x10>*/ /*|0x8|*/ unsigned __int64 caster;
  /*<thisrel this+0x18>*/ /*|0xc|*/ class NTempest::C3Vector startPosition;
  /*<thisrel this+0x24>*/ /*|0xc|*/ class NTempest::C3Vector position;
  /*<thisrel this+0x30>*/ /*|0xc|*/ class NTempest::C3Vector endPosition;
  /*<thisrel this+0x3c>*/ /*|0xc|*/ class NTempest::C3Vector normal;
  /*<thisrel this+0x48>*/ /*|0x8|*/ unsigned __int64 target;
  /*<thisrel this+0x50>*/ /*|0x4|*/ unsigned int startTime;
  /*<thisrel this+0x54>*/ /*|0x4|*/ unsigned int travelTime;
  /*<thisrel this+0x58>*/ /*|0xc|*/ class NTempest::C3Vector facing;
  /*<thisrel this+0x64>*/ /*|0x4|*/ unsigned int spellID;
  /*<thisrel this+0x68>*/ /*|0x4|*/ unsigned int victimEffect;
  /*<thisrel this+0x6c>*/ /*|0x4|*/ unsigned int pathType;
  /*<thisrel this+0x70>*/ /*|0x1|*/ unsigned char miss;
  /*<thisrel this+0x74>*/ /*|0x4|*/ enum MISS_REASON missReason;
  /*<thisrel this+0x78>*/ /*|0x4|*/ int flags;
  /*<thisrel this+0x7c>*/ /*|0x4|*/ struct Sound* sound;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<MISSILENODE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MISSILENODE(struct MISSILENODE&);
  void __thiscall MISSILENODE::MISSILENODE();
  void __thiscall MISSILENODE::~MISSILENODE();
  void __thiscall MISSILENODE::CheckModelLoadStatus();
  struct MISSILENODE& __thiscall operator=(struct MISSILENODE&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x80>

struct MISSILESTRUCT {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ class CGUnit_C* caster;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int spellID;
  /*<thisrel this+0x8>*/ /*|0x8|*/ unsigned __int64 target;
  /*<thisrel this+0x10>*/ /*|0xc|*/ class NTempest::C3Vector startPosition;
  /*<thisrel this+0x1c>*/ /*|0xc|*/ class NTempest::C3Vector destination;
  /*<thisrel this+0x28>*/ /*|0x4|*/ float speed;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ unsigned int ammoDisplayID;
  /*<thisrel this+0x30>*/ /*|0x4|*/ int inventoryType;
  /*<thisrel this+0x34>*/ /*|0x4|*/ unsigned int missileEffect;
  /*<thisrel this+0x38>*/ /*|0x4|*/ unsigned int missileVictimEffect;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ unsigned int missilePathType;
  /*<thisrel this+0x40>*/ /*|0x1|*/ unsigned char hits;
  /*<thisrel this+0x44>*/ /*|0x4|*/ enum MISS_REASON reason;
  /*<thisrel this+0x48>*/ /*|0x4|*/ int sound;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MISSILESTRUCT();
  void __thiscall ~MISSILESTRUCT();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x50>

struct CORPSEANIMDATA {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ unsigned __int64 guid;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct SEQFINISHINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int  (handler*)(void*, class CGUnit_C*);
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int callbackFlags;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int flags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct CGUnit_C::AddWorldText::WORLDTEXTINFO {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x0>

struct __unnamed_fd_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ char* animName;
  /*<thisrel this+0x4>*/ /*|0x4|*/ enum ANIMENUMERATION anim;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int crit;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct __unnamed_fe_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char hasMovement;
  /*<thisrel this+0x4>*/ /*|0x4|*/ float disengageDistance;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct FREENAMEPLATE : class TSLinkedNode<FREENAMEPLATE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ class CGNamePlateFrame* namePlate;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<FREENAMEPLATE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall FREENAMEPLATE(struct FREENAMEPLATE&);
  void __thiscall FREENAMEPLATE();
  void __thiscall FREENAMEPLATE::~FREENAMEPLATE();
  struct FREENAMEPLATE& __thiscall operator=(struct FREENAMEPLATE&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xc>

struct SPELLEFFECTDESC : class TSLinkedNode<SPELLEFFECTDESC>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ class SpellVisualKitRec* kitPtr;
  /*<thisrel this+0xc>*/ /*|0x4|*/ class NTempest::CImVector color;
  /*<thisrel this+0x10>*/ /*|0x4|*/ float scale;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned int startTime;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned int fadeInTime;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned int fadeOutTime;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned int endTime;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned int curTime;
  /*<thisrel this+0x28>*/ /*|0x4|*/ float period;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ int standAnim;
  /*<thisrel this+0x30>*/ /*|0x4|*/ int walkAnim;
  /*<thisrel this+0x34>*/ /*|0x1|*/ unsigned char isOneShot;
  /*<thisrel this+0x38>*/ /*|0xc|*/ struct LightningObject* lightningObjs[3];

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<SPELLEFFECTDESC>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall SPELLEFFECTDESC::~SPELLEFFECTDESC();
  void __thiscall SPELLEFFECTDESC(struct SPELLEFFECTDESC&);
  void __thiscall SPELLEFFECTDESC::SPELLEFFECTDESC();
  void __thiscall SPELLEFFECTDESC::ClearLightningObjects();
  float __thiscall SPELLEFFECTDESC::CalcScalar();
  struct SPELLEFFECTDESC& __thiscall operator=(struct SPELLEFFECTDESC&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x44>

struct NAMEPLATEDESC : class TSHashObject<NAMEPLATEDESC,CHashKeyGUID>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x20>*/ /*|0x8|*/ class TSLink<NAMEPLATEDESC> m_sortLink;
  /*<thisrel this+0x28>*/ /*|0x4|*/ float screenSortOrder;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ class CGUnit_C* unit;
  /*<thisrel this+0x30>*/ /*|0x4|*/ class CGNamePlateFrame* namePlate;
  /*<thisrel this+0x34>*/ /*|0x8|*/ class NTempest::C2Vector screenCoords;

  // base classes -----------------------------------
  // baseclass class TSHashObject<NAMEPLATEDESC,CHashKeyGUID>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall NAMEPLATEDESC(struct NAMEPLATEDESC&);
  void __thiscall NAMEPLATEDESC();
  void __thiscall NAMEPLATEDESC::~NAMEPLATEDESC();
  struct NAMEPLATEDESC& __thiscall operator=(struct NAMEPLATEDESC&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x40>

struct BLOODSPLATNODE : class TSLinkedNode<BLOODSPLATNODE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int m_triggerTime;
  /*<thisrel this+0xc>*/ /*|0xc|*/ class NTempest::C3Vector m_position;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<BLOODSPLATNODE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall BLOODSPLATNODE(struct BLOODSPLATNODE&);
  void __thiscall BLOODSPLATNODE();
  struct BLOODSPLATNODE& __thiscall operator=(struct BLOODSPLATNODE&);
  void __thiscall BLOODSPLATNODE::~BLOODSPLATNODE();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x18>

struct INTERACTICONTYPEINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct HMODEL__* model;
  /*<thisrel this+0x4>*/ /*|0x4|*/ enum STRINGLOOKUP string;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall INTERACTICONTYPEINFO(enum STRINGLOOKUP);

  // virtual functions ------------------------------
};
// <size 0x8>

struct AuraDecayNode : class TSLinkedNode<AuraDecayNode>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x10|*/ struct AuraVisual visual;
  /*<thisrel this+0x18>*/ /*|0x8|*/ unsigned __int64 unit;
  /*<thisrel this+0x20>*/ /*|0x4|*/ enum UNITEFFECTATTACHPPOINT attach;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<AuraDecayNode>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall AuraDecayNode::~AuraDecayNode();
  void __thiscall AuraDecayNode(struct AuraDecayNode&);
  void __thiscall AuraDecayNode();
  struct AuraDecayNode& __thiscall operator=(struct AuraDecayNode&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x28>

struct ANIMENDDATA {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ unsigned __int64 unit;
  /*<thisrel this+0x8>*/ /*|0x4|*/ enum ANIMENUMERATION animID;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct ACTIVEAURAINFO : class TSLinkedNode<ACTIVEAURAINFO>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ int auraSlot;
  /*<thisrel this+0xc>*/ /*|0x4|*/ class SpellVisualKitRec* stateKitRec;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<ACTIVEAURAINFO>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ACTIVEAURAINFO(struct ACTIVEAURAINFO&);
  void __thiscall ACTIVEAURAINFO();
  void __thiscall ~ACTIVEAURAINFO();
  struct ACTIVEAURAINFO& __thiscall operator=(struct ACTIVEAURAINFO&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x10>

struct ACTIVEATTACHMENTINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int inventoryType;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int flags;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int invSlot;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int sheathAttachmentSlot;
  /*<thisrel this+0x10>*/ /*|0x4|*/ class ItemDisplayInfoRec* displayInfo;
  /*<thisrel this+0x14>*/ /*|0x4|*/ class ItemVisualsRec* enchantmentVisual;
  /*<thisrel this+0x18>*/ /*|0x18|*/ struct ATTACHMENTMODELINFO modelInfo[2];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ACTIVEATTACHMENTINFO::Clear();
  void __thiscall ~ACTIVEATTACHMENTINFO();
  void __thiscall ACTIVEATTACHMENTINFO();
  void __thiscall ACTIVEATTACHMENTINFO::Hide(/*<regrel ebp+0x8>*/ /*|0x4|*/ class CGUnit_C* unitPtr, /*<regrel ebp+0xc>*/ /*|0x4|*/ struct HMODEL__* charModel, /*<regrel ebp+0x10>*/ /*|0x4|*/ struct HMODEL__* paperDollModel, /*<regrel ebp+0x14>*/ /*|0x1|*/ unsigned char hide);
  void __thiscall ACTIVEATTACHMENTINFO::ClearAttachmentFromModel(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct HMODEL__* charModel, /*<regrel ebp+0xc>*/ /*|0x4|*/ struct HMODEL__* paperDollModel);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x30>

struct IMPACTEFFECTDESC : class TSLinkedNode<IMPACTEFFECTDESC>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x8|*/ unsigned __int64 victim;
  /*<thisrel this+0x10>*/ /*|0x8|*/ unsigned __int64 attacker;
  /*<thisrel this+0x18>*/ /*|0x4|*/ class SpellVisualKitRec* impactKit;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int spellID;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<IMPACTEFFECTDESC>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IMPACTEFFECTDESC(struct IMPACTEFFECTDESC&);
  void __thiscall IMPACTEFFECTDESC();
  void __thiscall IMPACTEFFECTDESC::~IMPACTEFFECTDESC();
  void __thiscall IMPACTEFFECTDESC::Set(/*<regrel ebp+0x8>*/ /*|0x8|*/ unsigned __int64 a, /*<regrel ebp+0x10>*/ /*|0x8|*/ unsigned __int64 v, /*<regrel ebp+0x18>*/ /*|0x4|*/ class SpellVisualKitRec* i, /*<regrel ebp+0x1c>*/ /*|0x4|*/ int s);
  struct IMPACTEFFECTDESC& __thiscall operator=(struct IMPACTEFFECTDESC&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x20>

struct UnitAnimationInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int state;
  /*<thisrel this+0x4>*/ /*|0x4|*/ char* name;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int flags;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int basePriority;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int priorityOffset;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned int statePreempts;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall UnitAnimationInfo::UnitAnimationInfo(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int theState, /*<regrel ebp+0xc>*/ /*|0x4|*/ char* theName, /*<regrel ebp+0x10>*/ /*|0x4|*/ unsigned int theFlags, /*<regrel ebp+0x14>*/ /*|0x4|*/ int theBasePriority, /*<regrel ebp+0x18>*/ /*|0x4|*/ int thePriorityOffset);

  // virtual functions ------------------------------
};
// <size 0x18>

struct QUESTGIVEREMOTENODE {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int delay;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int emoteID;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall QUESTGIVEREMOTENODE();

  // virtual functions ------------------------------
};
// <size 0x8>

struct ATTACHMENTMODELINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct HMODEL__* model;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int attachmentPoint;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int currentLink;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ATTACHMENTMODELINFO();
  void __thiscall ~ATTACHMENTMODELINFO();
  void __thiscall ATTACHMENTMODELINFO::ClearAttachmentFromModel(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct HMODEL__* charModel, /*<regrel ebp+0xc>*/ /*|0x4|*/ struct HMODEL__* paperDollModel);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xc>

struct AuraVisual {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int flags;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int spellID;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int effectID;
  /*<thisrel this+0xc>*/ /*|0x4|*/ struct HMODEL__* theModel;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long obj;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall AuraVisual();
  void __thiscall SetSpellID(unsigned int);
  unsigned int __thiscall GetSpellID();
  unsigned char __thiscall HasArt();
  unsigned char __thiscall IsWorldModel();
  unsigned int __thiscall GetEffect();
  void __thiscall SetEffect(unsigned int);
  struct HMODEL__* __thiscall Model();
  void __thiscall AuraVisual::Clear();
  void __thiscall Set(struct AuraVisual&);
  void __thiscall AuraVisual::SetModel(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct HMODEL__* model);
  void __thiscall AuraVisual::SetWorldObject(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned long object);
  void __thiscall SetPermanent(unsigned char);
  struct HMODEL__* __thiscall AuraVisual::GetModel();

  // virtual functions ------------------------------
};
// <size 0x10>

struct StateAnimInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int seq;
  /*<thisrel this+0x4>*/ /*|0x1|*/ unsigned char reverse;
  /*<thisrel this+0x5>*/ /*|0x1|*/ unsigned char setAtEnd;
  /*<thisrel this+0x6>*/ /*|0x1|*/ unsigned char neverUseFallback;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct InitialSpellStruct {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short spellID;
  /*<thisrel this+0x2>*/ /*|0x2|*/ short slot;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct LootItem {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int m_itemID;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int m_displayID;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int m_quantity;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct ITEMEXPIRATION : class TSHashObject<ITEMEXPIRATION,CHashKeyGUID>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x20>*/ /*|0x4|*/ int timeLeft;
  /*<thisrel this+0x24>*/ /*|0x14|*/ int enchantmentTimeLeft[5];

  // base classes -----------------------------------
  // baseclass class TSHashObject<ITEMEXPIRATION,CHashKeyGUID>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ITEMEXPIRATION(struct ITEMEXPIRATION&);
  void __thiscall ITEMEXPIRATION();
  struct ITEMEXPIRATION& __thiscall operator=(struct ITEMEXPIRATION&);
  void __thiscall ~ITEMEXPIRATION();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x38>

struct ITEMSWAP {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ unsigned __int64 bagA;
  /*<thisrel this+0x8>*/ /*|0x8|*/ unsigned __int64 bagB;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int slotA;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int slotB;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int pendingID;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ITEMSWAP();
  void __thiscall Clear();

  // virtual functions ------------------------------
};
// <size 0x20>

struct DEFERREDDAMAGE : class TSLinkedNode<DEFERREDDAMAGE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ int normal;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int flags;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int damage;
  /*<thisrel this+0x18>*/ /*|0x8|*/ unsigned __int64 victim;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<DEFERREDDAMAGE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall Set(int, unsigned int, unsigned int, unsigned __int64);
  void __thiscall DEFERREDDAMAGE(struct DEFERREDDAMAGE&);
  void __thiscall DEFERREDDAMAGE();
  struct DEFERREDDAMAGE& __thiscall operator=(struct DEFERREDDAMAGE&);
  void __thiscall ~DEFERREDDAMAGE();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x20>

struct DEFERREDSPELLMISS : class TSLinkedNode<DEFERREDSPELLMISS>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x8|*/ unsigned __int64 victim;
  /*<thisrel this+0x10>*/ /*|0x4|*/ enum MISS_REASON reason;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int spellID;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<DEFERREDSPELLMISS>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall Set(unsigned __int64, enum MISS_REASON, int);
  void __thiscall DEFERREDSPELLMISS(struct DEFERREDSPELLMISS&);
  void __thiscall DEFERREDSPELLMISS();
  struct DEFERREDSPELLMISS& __thiscall operator=(struct DEFERREDSPELLMISS&);
  void __thiscall ~DEFERREDSPELLMISS();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x18>

struct RandomRollInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int min;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int max;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int result;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct TRADESKILLLINE : class TSHashObject<TRADESKILLLINE,HASHKEY_NONE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x14|*/ class TSGrowableArray<int> spells;

  // base classes -----------------------------------
  // baseclass class TSHashObject<TRADESKILLLINE,HASHKEY_NONE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall TRADESKILLLINE(struct TRADESKILLLINE&);
  void __thiscall TRADESKILLLINE();
  struct TRADESKILLLINE& __thiscall operator=(struct TRADESKILLLINE&);
  void __thiscall ~TRADESKILLLINE();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x2c>

struct INVENTORYART : class TSHashObject<INVENTORYART,HASHKEY_NONE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x4|*/ char* textureName;

  // base classes -----------------------------------
  // baseclass class TSHashObject<INVENTORYART,HASHKEY_NONE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall INVENTORYART(struct INVENTORYART&);
  void __thiscall INVENTORYART();
  struct INVENTORYART& __thiscall operator=(struct INVENTORYART&);
  void __thiscall ~INVENTORYART();
  void __thiscall Clear();
  void __thiscall SetArt(char*);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x1c>

struct _PCI_VENTABLE {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short VenId;
  /*<thisrel this+0x4>*/ /*|0x4|*/ char* VenShort;
  /*<thisrel this+0x8>*/ /*|0x4|*/ char* VenFull;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct _PCI_CLASSCODETABLE {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char BaseClass;
  /*<thisrel this+0x1>*/ /*|0x1|*/ unsigned char SubClass;
  /*<thisrel this+0x2>*/ /*|0x1|*/ unsigned char ProgIf;
  /*<thisrel this+0x4>*/ /*|0x4|*/ char* BaseDesc;
  /*<thisrel this+0x8>*/ /*|0x4|*/ char* SubDesc;
  /*<thisrel this+0xc>*/ /*|0x4|*/ char* ProgDesc;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct CpuHardware {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int farclipIdx;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int animatingDoodadIdx;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int waterLODIdx;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int particleDensityIdx;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int smallCullDistIdx;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned int unitDrawDistIdx;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct SoundHardware {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int numChannels;
  /*<thisrel this+0x4>*/ /*|0x1|*/ unsigned char fivePointOne;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct _PCI_DEVTABLE {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short VenId;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short DevId;
  /*<thisrel this+0x4>*/ /*|0x4|*/ char* Chip;
  /*<thisrel this+0x8>*/ /*|0x4|*/ char* ChipDesc;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct Hardware {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xc|*/ struct Hardware::Device videoDevice;
  /*<thisrel this+0xc>*/ /*|0xc|*/ struct Hardware::Device soundDevice;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned int cpuIdx;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned int videoIdx;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned int soundIdx;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned int memIdx;
  /*<thisrel this+0x28>*/ /*|0x4|*/ class VideoHardwareRec* videoHw;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ struct CpuHardware* cpuHw;
  /*<thisrel this+0x30>*/ /*|0x4|*/ struct SoundHardware* soundHw;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x34>

struct DefaultSettings {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ float farClip;
  /*<thisrel this+0x4>*/ /*|0x4|*/ float terrainLODDist;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int terrainShadowLOD;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int detailDoodadDensity;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int detailDoodadAlpha;
  /*<thisrel this+0x14>*/ /*|0x1|*/ unsigned char animatingDoodads;
  /*<thisrel this+0x15>*/ /*|0x1|*/ unsigned char trilinear;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned int numLights;
  /*<thisrel this+0x1c>*/ /*|0x1|*/ unsigned char specularity;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned int waterLOD;
  /*<thisrel this+0x24>*/ /*|0x4|*/ float particleDensity;
  /*<thisrel this+0x28>*/ /*|0x4|*/ float unitDrawDist;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ float smallCull;
  /*<thisrel this+0x30>*/ /*|0x4|*/ float distCull;
  /*<thisrel this+0x34>*/ /*|0x4|*/ struct CGxFormat* format;
  /*<thisrel this+0x38>*/ /*|0x4|*/ unsigned int baseMipLevel;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ unsigned int numChannels;
  /*<thisrel this+0x40>*/ /*|0x1|*/ unsigned char fivePointOne;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x44>

struct CONSOLECOMMAND : class TSHashObject<CONSOLECOMMAND,HASHKEY_CONSTSTRI>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x4|*/ int  (m_handler*)(char*, char*);
  /*<thisrel this+0x1c>*/ /*|0x4|*/ char* m_helpText;
  /*<thisrel this+0x20>*/ /*|0x4|*/ enum CATEGORY m_category;

  // base classes -----------------------------------
  // baseclass class TSHashObject<CONSOLECOMMAND,HASHKEY_CONSTSTRI>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CONSOLECOMMAND(struct CONSOLECOMMAND&);
  void __thiscall CONSOLECOMMAND();
  struct CONSOLECOMMAND& __thiscall operator=(struct CONSOLECOMMAND&);
  void __thiscall ~CONSOLECOMMAND();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x24>

struct CategoryTranslation {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ enum CATEGORY categoryValue;
  /*<thisrel this+0x4>*/ /*|0x14|*/ char categoryString[20];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct CONSOLELINE : class TSLinkedNode<CONSOLELINE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ char* buffer;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long chars;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long charsalloc;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long inputpos;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long inputstart;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ enum COLOR_T colorType;
  /*<thisrel this+0x20>*/ /*|0x4|*/ struct CGxString* fontPointer;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<CONSOLELINE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ~CONSOLELINE();
  void __thiscall CONSOLELINE(struct CONSOLELINE&);
  void __thiscall CONSOLELINE();
  struct CONSOLELINE& __thiscall operator=(struct CONSOLELINE&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x24>

struct Hardware::Device {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short vendorID;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short deviceID;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long driverVersionHi;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long driverVersionLo;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct GAMETIMECBSTRUCT : class TSLinkedNode<GAMETIMECBSTRUCT>,  class CHandleObject  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x10>*/ /*|0x4|*/ void* userData;
  /*<thisrel this+0x14>*/ /*|0x4|*/ void  (callback*)(class WowTime&, void*);

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<GAMETIMECBSTRUCT>
  // <base data offset+0x8>

  // baseclass class CHandleObject
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall GAMETIMECBSTRUCT(struct GAMETIMECBSTRUCT&);
  void __thiscall GAMETIMECBSTRUCT();
  struct GAMETIMECBSTRUCT& __thiscall operator=(struct GAMETIMECBSTRUCT&);
  void __thiscall __local_vftable_ctor_closure();

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ void __thiscall ~GAMETIMECBSTRUCT();
  virtual /*<vtableoff 0x0>*/ void* __thiscall __vecDelDtor(unsigned int);
};
// <size 0x18>

struct TIMESTAMPSTRUCT : class TSHashObject<TIMESTAMPSTRUCT,HASHKEY_NONE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0xc|*/ class TSList<GAMETIMECBSTRUCT,TSGetLink<GAMETIMECBSTRUCT> > callbackList;

  // base classes -----------------------------------
  // baseclass class TSHashObject<TIMESTAMPSTRUCT,HASHKEY_NONE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ~TIMESTAMPSTRUCT();
  void __thiscall TIMESTAMPSTRUCT(struct TIMESTAMPSTRUCT&);
  void __thiscall TIMESTAMPSTRUCT();
  struct TIMESTAMPSTRUCT& __thiscall operator=(struct TIMESTAMPSTRUCT&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x24>

struct tm {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int tm_sec;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int tm_min;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int tm_hour;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int tm_mday;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int tm_mon;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int tm_year;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int tm_wday;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int tm_yday;
  /*<thisrel this+0x20>*/ /*|0x4|*/ int tm_isdst;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x24>

struct ZipFileDirEntry : class TSHashObject<ZipFileDirEntry,HASHKEY_CONSTSTRI>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x4|*/ struct ZipFileArchive* archive;
  /*<thisrel this+0x1c>*/ /*|0x100|*/ char filename[256];
  /*<thisrel this+0x11c>*/ /*|0x4|*/ unsigned int startOffset;
  /*<thisrel this+0x120>*/ /*|0x4|*/ unsigned int compressedSize;
  /*<thisrel this+0x124>*/ /*|0x4|*/ unsigned int uncompressedSize;
  /*<thisrel this+0x128>*/ /*|0x4|*/ unsigned int compressionMethod;

  // base classes -----------------------------------
  // baseclass class TSHashObject<ZipFileDirEntry,HASHKEY_CONSTSTRI>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ZipFileDirEntry(struct ZipFileDirEntry&);
  void __thiscall ZipFileDirEntry::ZipFileDirEntry();
  void __thiscall ZipFileDirEntry::~ZipFileDirEntry();
  struct ZipFileDirEntry& __thiscall operator=(struct ZipFileDirEntry&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x12c>

struct ZipFileArchive : class TSLinkedNode<ZipFileArchive>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct _iobuf* file;
  /*<thisrel this+0xc>*/ /*|0x100|*/ char filename[256];
  /*<thisrel this+0x10c>*/ /*|0x4|*/ unsigned int openFileCount;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<ZipFileArchive>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ZipFileArchive(struct ZipFileArchive&);
  void __thiscall ZipFileArchive::ZipFileArchive();
  void __thiscall ZipFileArchive::~ZipFileArchive();
  int __thiscall ZipFileArchive::Open(/*<regrel ebp+0x8>*/ /*|0x4|*/ char* archivename);
  int __thiscall ZipFileArchive::GetCentralDirectoryHeader(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct CentralDirectoryHeader& cdirHeader);
  int __thiscall ZipFileArchive::ProcessCentralDirectory(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct CentralDirectoryHeader& cdirHeader);
  int __thiscall ZipFileArchive::ReadCentralDirectoryFileHeader();
  struct ZipFileArchive& __thiscall operator=(struct ZipFileArchive&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x110>

struct CentralDirectoryHeader {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ char signature[4];
  /*<thisrel this+0x4>*/ /*|0x2|*/ unsigned short thisDiskNumber;
  /*<thisrel this+0x6>*/ /*|0x2|*/ unsigned short directoryStartDiskNumber;
  /*<thisrel this+0x8>*/ /*|0x2|*/ unsigned short directoryEntriesThisDisk;
  /*<thisrel this+0xa>*/ /*|0x2|*/ unsigned short directoryEntriesTotal;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int centralDirectorySize;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int centralDirectoryOffset;
  /*<thisrel this+0x14>*/ /*|0x2|*/ unsigned short commentLength;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CentralDirectoryHeader::EndianCorrect();

  // virtual functions ------------------------------
};
// <size 0x16>

struct LocalFileHeader {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ char signature[4];
  /*<thisrel this+0x4>*/ /*|0x2|*/ unsigned short versionRequired;
  /*<thisrel this+0x6>*/ /*|0x2|*/ unsigned short generalFlags;
  /*<thisrel this+0x8>*/ /*|0x2|*/ unsigned short compressionMethod;
  /*<thisrel this+0xa>*/ /*|0x2|*/ unsigned short modifiedTime;
  /*<thisrel this+0xc>*/ /*|0x2|*/ unsigned short modifiedDate;
  /*<thisrel this+0xe>*/ /*|0x4|*/ unsigned int z_crc32;
  /*<thisrel this+0x12>*/ /*|0x4|*/ unsigned int compressedSize;
  /*<thisrel this+0x16>*/ /*|0x4|*/ unsigned int uncompressedSize;
  /*<thisrel this+0x1a>*/ /*|0x2|*/ unsigned short filenameSize;
  /*<thisrel this+0x1c>*/ /*|0x2|*/ unsigned short extraFieldSize;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall LocalFileHeader::EndianCorrect();

  // virtual functions ------------------------------
};
// <size 0x1e>

struct CentralDirectoryFileHeader {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ char signature[4];
  /*<thisrel this+0x4>*/ /*|0x2|*/ unsigned short versionMadeBy;
  /*<thisrel this+0x6>*/ /*|0x2|*/ unsigned short versionRequired;
  /*<thisrel this+0x8>*/ /*|0x2|*/ unsigned short generalFlags;
  /*<thisrel this+0xa>*/ /*|0x2|*/ unsigned short compressionMethod;
  /*<thisrel this+0xc>*/ /*|0x2|*/ unsigned short modifiedTime;
  /*<thisrel this+0xe>*/ /*|0x2|*/ unsigned short modifiedDate;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int z_crc32;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned int compressedSize;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned int uncompressedSize;
  /*<thisrel this+0x1c>*/ /*|0x2|*/ unsigned short filenameSize;
  /*<thisrel this+0x1e>*/ /*|0x2|*/ unsigned short extraFieldSize;
  /*<thisrel this+0x20>*/ /*|0x2|*/ unsigned short commentSize;
  /*<thisrel this+0x22>*/ /*|0x2|*/ unsigned short diskNumberStart;
  /*<thisrel this+0x24>*/ /*|0x2|*/ unsigned short internalFileAttributes;
  /*<thisrel this+0x26>*/ /*|0x4|*/ unsigned int externalFileAttributes;
  /*<thisrel this+0x2a>*/ /*|0x4|*/ unsigned int localHeaderOffset;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CentralDirectoryFileHeader::EndianCorrect();

  // virtual functions ------------------------------
};
// <size 0x2e>

struct DataDescriptor {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int z_crc32;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int compressedSize;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int uncompressedSize;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall DataDescriptor::EndianCorrect();

  // virtual functions ------------------------------
};
// <size 0xc>

struct ZipFileFCB {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct ZipFileDirEntry* dirEntry;
  /*<thisrel this+0x4>*/ /*|0x4|*/ class Flags flags;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int targetPosition;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int compressedPosition;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int uncompressedPosition;
  /*<thisrel this+0x14>*/ /*|0x38|*/ struct z_stream_s zlibStream;
  /*<thisrel this+0x4c>*/ /*|0x1000|*/ unsigned char compressedData[4096];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ZipFileFCB::ZipFileFCB();
  void __thiscall ZipFileFCB::~ZipFileFCB();
  int __thiscall ZipFileFCB::SetFault();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x104c>

struct internal_state {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int dummy;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct z_stream_s {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned char* next_in;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int avail_in;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long total_in;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned char* next_out;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int avail_out;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long total_out;
  /*<thisrel this+0x18>*/ /*|0x4|*/ char* msg;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ struct internal_state* state;
  /*<thisrel this+0x20>*/ /*|0x4|*/ void*  (zalloc*)(void*, unsigned int, unsigned int);
  /*<thisrel this+0x24>*/ /*|0x4|*/ void  (zfree*)(void*, void*);
  /*<thisrel this+0x28>*/ /*|0x4|*/ void* opaque;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ int data_type;
  /*<thisrel this+0x30>*/ /*|0x4|*/ unsigned long adler;
  /*<thisrel this+0x34>*/ /*|0x4|*/ unsigned long reserved;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x38>

struct SDIR {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x104|*/ char name[260];
  /*<thisrel this+0x104>*/ /*|0x4|*/ void* handle;
  /*<thisrel this+0x108>*/ /*|0x140|*/ struct _WIN32_FIND_DATAA findData;
  /*<thisrel this+0x248>*/ /*|0x104|*/ struct SDIRENT dirent;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x34c>

struct _stat {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int st_dev;
  /*<thisrel this+0x4>*/ /*|0x2|*/ unsigned short st_ino;
  /*<thisrel this+0x6>*/ /*|0x2|*/ unsigned short st_mode;
  /*<thisrel this+0x8>*/ /*|0x2|*/ short st_nlink;
  /*<thisrel this+0xa>*/ /*|0x2|*/ short st_uid;
  /*<thisrel this+0xc>*/ /*|0x2|*/ short st_gid;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int st_rdev;
  /*<thisrel this+0x14>*/ /*|0x4|*/ long st_size;
  /*<thisrel this+0x18>*/ /*|0x4|*/ long st_atime;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ long st_mtime;
  /*<thisrel this+0x20>*/ /*|0x4|*/ long st_ctime;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x24>

struct SDIRENT {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x104|*/ char d_name[260];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x104>

struct BREAKCMD : class TSLinkedNode<BREAKCMD>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ void* data;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<BREAKCMD>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall BREAKCMD(struct BREAKCMD&);
  void __thiscall BREAKCMD::BREAKCMD();
  struct BREAKCMD& __thiscall operator=(struct BREAKCMD&);
  void __thiscall BREAKCMD::~BREAKCMD();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xc>

struct _RTL_CRITICAL_SECTION {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct _RTL_CRITICAL_SECTION_DEBUG* DebugInfo;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long LockCount;
  /*<thisrel this+0x8>*/ /*|0x4|*/ long RecursionCount;
  /*<thisrel this+0xc>*/ /*|0x4|*/ void* OwningThread;
  /*<thisrel this+0x10>*/ /*|0x4|*/ void* LockSemaphore;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long SpinCount;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct _TYPEHASHENTRY {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long type;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long subtype;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long sequence;
  /*<thisrel this+0xc>*/ /*|0x4|*/ struct _IDHASHTABLE* idhashtable;
  /*<thisrel this+0x10>*/ /*|0x4|*/ struct _TYPEHASHENTRY* next;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct _IDHASHTABLE {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct _IDHASHENTRY** data;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long size;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long used;
  /*<thisrel this+0xc>*/ /*|0x4|*/ struct _IDHASHTABLE* next;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct _IDHASHENTRY {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long id;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long sequence;
  /*<thisrel this+0x8>*/ /*|0x4|*/ void  (handler*)(void*);
  /*<thisrel this+0xc>*/ /*|0x4|*/ struct _IDHASHENTRY* next;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct _AUTHCOMPANYINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ char* keyname;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long authresult;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct REQUEST : class TSLinkedNode<REQUEST>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ void* event;
  /*<thisrel this+0xc>*/ /*|0x4|*/ struct Storm::SFile::FILEREC* file;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long location;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long approxarchivelocation;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long requiredcompletiontime;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int urgent;
  /*<thisrel this+0x20>*/ /*|0x4|*/ void* buffer;
  /*<thisrel this+0x24>*/ /*|0x4|*/ void* bufferbegin;
  /*<thisrel this+0x28>*/ /*|0x4|*/ struct IDirectSoundBuffer* soundbuffer;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ unsigned long soundbufferoffset;
  /*<thisrel this+0x30>*/ /*|0x4|*/ struct Storm::SFile::AUDIOSTREAM* stream;
  /*<thisrel this+0x34>*/ /*|0x4|*/ unsigned long bytestoread;
  /*<thisrel this+0x38>*/ /*|0x4|*/ int autodelrequest;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ unsigned long bytesread;
  /*<thisrel this+0x40>*/ /*|0x4|*/ struct _TASYNCPARAMBLOCK* asyncparam;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<REQUEST>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall REQUEST::~REQUEST();
  void __thiscall REQUEST(struct REQUEST&);
  void __thiscall REQUEST::REQUEST();
  struct REQUEST& __thiscall operator=(struct REQUEST&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x44>

struct EVENTREC : class TSLinkedNode<EVENTREC>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ void* event;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<EVENTREC>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall EVENTREC(struct EVENTREC&);
  void __thiscall EVENTREC::EVENTREC();
  struct EVENTREC& __thiscall operator=(struct EVENTREC&);
  void __thiscall EVENTREC::~EVENTREC();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xc>

struct IDirectSound : struct IUnknown  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IUnknown
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirectSound(struct IDirectSound&);
  void __thiscall IDirectSound();
  struct IDirectSound& __thiscall operator=(struct IDirectSound&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0xc>*/ long __stdcall CreateSoundBuffer(struct _DSBUFFERDESC*, struct IDirectSoundBuffer**, struct IUnknown*) = 0;
  virtual /*<vtableoff 0x10>*/ long __stdcall GetCaps(struct _DSCAPS*) = 0;
  virtual /*<vtableoff 0x14>*/ long __stdcall DuplicateSoundBuffer(struct IDirectSoundBuffer*, struct IDirectSoundBuffer**) = 0;
  virtual /*<vtableoff 0x18>*/ long __stdcall SetCooperativeLevel(struct HWND__*, unsigned long) = 0;
  virtual /*<vtableoff 0x1c>*/ long __stdcall Compact() = 0;
  virtual /*<vtableoff 0x20>*/ long __stdcall GetSpeakerConfig(unsigned long*) = 0;
  virtual /*<vtableoff 0x24>*/ long __stdcall SetSpeakerConfig(unsigned long) = 0;
  virtual /*<vtableoff 0x28>*/ long __stdcall Initialize(struct _GUID*) = 0;
};
// <size 0x4>

struct Storm::SFile::AUDIOSTREAM : class TSLinkedNode<Storm::SFile::AUDIOSTREAM>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct Storm::SFile::FILEREC* file;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long nextwrite;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long bytespersecond;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int loop;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long fillstatus;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned long bytespastend;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned long waveheadersize;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned long wavedatasize;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned long startingoffset;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ unsigned long playcursor;
  /*<thisrel this+0x30>*/ /*|0x4|*/ unsigned long writecursor;
  /*<thisrel this+0x34>*/ /*|0x4|*/ long volume;
  /*<thisrel this+0x38>*/ /*|0x4|*/ long pan;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ struct IDirectSoundBuffer* soundbuffer;
  /*<thisrel this+0x40>*/ /*|0x4|*/ unsigned long soundbuffersize;
  /*<thisrel this+0x44>*/ /*|0x4|*/ int soundbufferlocal;
  /*<thisrel this+0x48>*/ /*|0x1|*/ unsigned char fillvalue;
  /*<thisrel this+0x4c>*/ /*|0x4|*/ long refcount;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<Storm::SFile::AUDIOSTREAM>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall Storm::SFile::AUDIOSTREAM::~AUDIOSTREAM();
  void __thiscall AUDIOSTREAM(struct Storm::SFile::AUDIOSTREAM&);
  void __thiscall Storm::SFile::AUDIOSTREAM::AUDIOSTREAM();
  struct Storm::SFile::AUDIOSTREAM& __thiscall operator=(struct Storm::SFile::AUDIOSTREAM&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x50>

struct _STORMOPTIONS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int smemleaksilentwarning;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int serrleaksilentwarning;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long wavechunksize;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int alignstreamingwavedata;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int echotooutputdebugstring;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int serrsuppresslogs;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int crcenabled;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int orderedprintfenabled;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct Storm::SFile::ARCHIVEREC : class TSLinkedNode<Storm::SFile::ARCHIVEREC>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x18|*/ class CCritSect sync;
  /*<thisrel this+0x20>*/ /*|0x4|*/ long refcount;
  /*<thisrel this+0x24>*/ /*|0x104|*/ char archivename[260];
  /*<thisrel this+0x128>*/ /*|0x4|*/ void* handle;
  /*<thisrel this+0x12c>*/ /*|0x4|*/ int dontCheckDisk;
  /*<thisrel this+0x130>*/ /*|0x4|*/ int priority;
  /*<thisrel this+0x134>*/ /*|0x20|*/ struct _ARCHIVEHEADER header;
  /*<thisrel this+0x154>*/ /*|0x4|*/ struct HSFILE__* ownerarchivefile;
  /*<thisrel this+0x158>*/ /*|0x4|*/ struct HSARCHIVE__* parentArchive;
  /*<thisrel this+0x15c>*/ /*|0x104|*/ char pathPrefix[260];
  /*<thisrel this+0x260>*/ /*|0x4|*/ void* sectorfile;
  /*<thisrel this+0x264>*/ /*|0x4|*/ unsigned long sectorlocation;
  /*<thisrel this+0x268>*/ /*|0x4|*/ unsigned long sectorsize;
  /*<thisrel this+0x26c>*/ /*|0x4|*/ unsigned char* sectorbuffer;
  /*<thisrel this+0x270>*/ /*|0x4|*/ unsigned long sectorbytesread;
  /*<thisrel this+0x274>*/ /*|0x4|*/ unsigned long startinglocation;
  /*<thisrel this+0x278>*/ /*|0x4|*/ unsigned long endinglocation;
  /*<thisrel this+0x27c>*/ /*|0x4|*/ struct _BLOCKENTRY* blocktable;
  /*<thisrel this+0x280>*/ /*|0x4|*/ struct _HASHENTRY* hashtable;
  /*<thisrel this+0x284>*/ /*|0x4|*/ unsigned long lastlocation;
  /*<thisrel this+0x288>*/ /*|0x4|*/ int disableCount;
  /*<thisrel this+0x28c>*/ /*|0x4|*/ unsigned long cdrom;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<Storm::SFile::ARCHIVEREC>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall Storm::SFile::ARCHIVEREC::~ARCHIVEREC();
  int __thiscall Storm::SFile::ARCHIVEREC::IsReopenedArchive();
  int __thiscall Storm::SFile::ARCHIVEREC::IsSubArchive();
  void __thiscall ARCHIVEREC(struct Storm::SFile::ARCHIVEREC&);
  void __thiscall Storm::SFile::ARCHIVEREC::ARCHIVEREC();
  struct Storm::SFile::ARCHIVEREC& __thiscall operator=(struct Storm::SFile::ARCHIVEREC&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x290>

struct Storm::SFile::FILEREC : class TSLinkedNode<Storm::SFile::FILEREC>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x18|*/ class CCritSect sync;
  /*<thisrel this+0x20>*/ /*|0x4|*/ long refcount;
  /*<thisrel this+0x24>*/ /*|0x104|*/ char name[260];
  /*<thisrel this+0x128>*/ /*|0x4|*/ char* actualName;
  /*<thisrel this+0x12c>*/ /*|0x4|*/ void* handle;
  /*<thisrel this+0x130>*/ /*|0x4|*/ struct Storm::SFile::ARCHIVEREC* archive;
  /*<thisrel this+0x134>*/ /*|0x2c|*/ struct _BLOCKENTRY block;
  /*<thisrel this+0x160>*/ /*|0x4|*/ unsigned long key;
  /*<thisrel this+0x164>*/ /*|0x4|*/ unsigned long location;
  /*<thisrel this+0x168>*/ /*|0x4|*/ unsigned long lastlocation;
  /*<thisrel this+0x16c>*/ /*|0x4|*/ unsigned long sectors;
  /*<thisrel this+0x170>*/ /*|0x4|*/ unsigned long* sectoroffsettable;
  /*<thisrel this+0x174>*/ /*|0x4|*/ int sectoroffsettablevalid;
  /*<thisrel this+0x178>*/ /*|0x4|*/ int dda;
  /*<thisrel this+0x17c>*/ /*|0x4|*/ void* readaheadbuffer;
  /*<thisrel this+0x180>*/ /*|0x4|*/ unsigned long readaheadoffset;
  /*<thisrel this+0x184>*/ /*|0x4|*/ unsigned long readaheadbytes;
  /*<thisrel this+0x188>*/ /*|0x4|*/ unsigned long crc;
  /*<thisrel this+0x18c>*/ /*|0x4|*/ int crcavail;
  /*<thisrel this+0x190>*/ /*|0x4|*/ unsigned long crcstate;
  /*<thisrel this+0x194>*/ /*|0x4|*/ unsigned long crcexpected;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<Storm::SFile::FILEREC>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall FILEREC(struct Storm::SFile::FILEREC&);
  void __thiscall Storm::SFile::FILEREC::FILEREC();
  void __thiscall Storm::SFile::FILEREC::~FILEREC();
  struct Storm::SFile::FILEREC& __thiscall operator=(struct Storm::SFile::FILEREC&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x198>

struct Storm::SFile::StormGlobals {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long s_ioerrormode;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int  (s_ioerrorproc*)(char*, unsigned long, unsigned long);
  /*<thisrel this+0x8>*/ /*|0x2|*/ unsigned short s_languageId;
  /*<thisrel this+0xa>*/ /*|0x1|*/ unsigned char s_platformId;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long s_dataChunkSize;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int s_seekOptimize;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long WAVECHUNKSIZE;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned int s_asyncBudget;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned long s_directaccess;
  /*<thisrel this+0x20>*/ /*|0x104|*/ char s_basepath[260];
  /*<thisrel this+0x124>*/ /*|0x4|*/ void  (s_loadNotifyProc*)(char*, void*);
  /*<thisrel this+0x128>*/ /*|0x4|*/ void* s_loadNotifyData;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x12c>

struct HSARCHIVE__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct Storm::SFile::ArchivePtr {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct Storm::SFile::ARCHIVEREC* archive;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int locked;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall Storm::SFile::ArchivePtr::ArchivePtr(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct HSARCHIVE__* hArchive);
  void __thiscall Storm::SFile::ArchivePtr::~ArchivePtr();
  void __thiscall Storm::SFile::ArchivePtr::Enter();
  void __thiscall Storm::SFile::ArchivePtr::Leave();
  struct Storm::SFile::ARCHIVEREC* __thiscall operator struct Storm::SFile::ARCHIVEREC *();
  struct Storm::SFile::ARCHIVEREC* __thiscall Storm::SFile::ArchivePtr::operator->();
  struct Storm::SFile::ARCHIVEREC& __thiscall operator*();
  void __thiscall __dflt_ctor_closure();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x8>

struct HSFILE__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct Storm::SFile::ArchivePtrLocked : struct Storm::SFile::ArchivePtr  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct Storm::SFile::ArchivePtr
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall Storm::SFile::ArchivePtrLocked::ArchivePtrLocked(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct HSARCHIVE__* hArchive);
  void __thiscall Storm::SFile::ArchivePtrLocked::~ArchivePtrLocked();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x8>

struct Storm::SFile::FilePtr {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct Storm::SFile::FILEREC* file;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int locked;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall Storm::SFile::FilePtr::FilePtr(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct HSFILE__* hFile);
  void __thiscall Storm::SFile::FilePtr::~FilePtr();
  void __thiscall Storm::SFile::FilePtr::Enter();
  void __thiscall Storm::SFile::FilePtr::Leave();
  struct Storm::SFile::FILEREC* __thiscall operator struct Storm::SFile::FILEREC *();
  struct Storm::SFile::FILEREC* __thiscall Storm::SFile::FilePtr::operator->();
  struct Storm::SFile::FILEREC& __thiscall operator*();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x8>

struct Storm::SFile::FilePtrLocked : struct Storm::SFile::FilePtr  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct Storm::SFile::FilePtr
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall Storm::SFile::FilePtrLocked::FilePtrLocked(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct HSFILE__* hFile);
  void __thiscall Storm::SFile::FilePtrLocked::~FilePtrLocked();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x8>

struct Storm::SFile::UseGlob {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct Storm::SFile::StormGlobals* globptr;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall Storm::SFile::UseGlob::UseGlob();
  void __thiscall Storm::SFile::UseGlob::~UseGlob();
  struct Storm::SFile::StormGlobals* __thiscall Storm::SFile::UseGlob::operator->();
  struct Storm::SFile::StormGlobals& __thiscall operator*();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x4>

struct _TASYNCPARAMBLOCK {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ void* pvCallback;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct _DECOMPRESSIONINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ void* sourcebuffer;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long sourceoffset;
  /*<thisrel this+0x8>*/ /*|0x4|*/ void* destbuffer;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long destoffset;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long bytes;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct IDirectSoundBuffer : struct IUnknown  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IUnknown
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirectSoundBuffer(struct IDirectSoundBuffer&);
  void __thiscall IDirectSoundBuffer();
  struct IDirectSoundBuffer& __thiscall operator=(struct IDirectSoundBuffer&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0xc>*/ long __stdcall GetCaps(struct _DSBCAPS*) = 0;
  virtual /*<vtableoff 0x10>*/ long __stdcall GetCurrentPosition(unsigned long*, unsigned long*) = 0;
  virtual /*<vtableoff 0x14>*/ long __stdcall GetFormat(struct tWAVEFORMATEX*, unsigned long, unsigned long*) = 0;
  virtual /*<vtableoff 0x18>*/ long __stdcall GetVolume(long*) = 0;
  virtual /*<vtableoff 0x1c>*/ long __stdcall GetPan(long*) = 0;
  virtual /*<vtableoff 0x20>*/ long __stdcall GetFrequency(unsigned long*) = 0;
  virtual /*<vtableoff 0x24>*/ long __stdcall GetStatus(unsigned long*) = 0;
  virtual /*<vtableoff 0x28>*/ long __stdcall Initialize(struct IDirectSound*, struct _DSBUFFERDESC*) = 0;
  virtual /*<vtableoff 0x2c>*/ long __stdcall Lock(unsigned long, unsigned long, void**, unsigned long*, void**, unsigned long*, unsigned long) = 0;
  virtual /*<vtableoff 0x30>*/ long __stdcall Play(unsigned long, unsigned long, unsigned long) = 0;
  virtual /*<vtableoff 0x34>*/ long __stdcall SetCurrentPosition(unsigned long) = 0;
  virtual /*<vtableoff 0x38>*/ long __stdcall SetFormat(struct tWAVEFORMATEX*) = 0;
  virtual /*<vtableoff 0x3c>*/ long __stdcall SetVolume(long) = 0;
  virtual /*<vtableoff 0x40>*/ long __stdcall SetPan(long) = 0;
  virtual /*<vtableoff 0x44>*/ long __stdcall SetFrequency(unsigned long) = 0;
  virtual /*<vtableoff 0x48>*/ long __stdcall Stop() = 0;
  virtual /*<vtableoff 0x4c>*/ long __stdcall Unlock(void*, unsigned long, void*, unsigned long) = 0;
  virtual /*<vtableoff 0x50>*/ long __stdcall Restore() = 0;
};
// <size 0x4>

struct _BLOCKENTRY {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long offset;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long sizealloc;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long sizefile;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long flags;
  /*<thisrel this+0x10>*/ /*|0x8|*/ struct _FILETIME time;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long crc;
  /*<thisrel this+0x1c>*/ /*|0x10|*/ class MD5 md5;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall _BLOCKENTRY(struct _BLOCKENTRY&);
  void __thiscall _BLOCKENTRY::_BLOCKENTRY();
  struct _BLOCKENTRY& __thiscall operator=(struct _BLOCKENTRY&);

  // virtual functions ------------------------------
};
// <size 0x2c>

struct tWAVEFORMATEX {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short wFormatTag;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short nChannels;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long nSamplesPerSec;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long nAvgBytesPerSec;
  /*<thisrel this+0xc>*/ /*|0x2|*/ unsigned short nBlockAlign;
  /*<thisrel this+0xe>*/ /*|0x2|*/ unsigned short wBitsPerSample;
  /*<thisrel this+0x10>*/ /*|0x2|*/ unsigned short cbSize;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x12>

struct CKINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long size;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long offset;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct waveformat_tag {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short wFormatTag;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short nChannels;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long nSamplesPerSec;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long nAvgBytesPerSec;
  /*<thisrel this+0xc>*/ /*|0x2|*/ unsigned short nBlockAlign;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xe>

struct pcmwaveformat_tag {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xe|*/ struct waveformat_tag wf;
  /*<thisrel this+0xe>*/ /*|0x2|*/ unsigned short wBitsPerSample;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct _MMCKINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long ckid;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long cksize;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long fccType;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long dwDataOffset;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long dwFlags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct _DSBUFFERDESC {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long dwBufferBytes;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long dwReserved;
  /*<thisrel this+0x10>*/ /*|0x4|*/ struct tWAVEFORMATEX* lpwfxFormat;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct FindChunk::__unnamed_ff_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long ckid;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long size;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct SpecifierRange {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ char* begin;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int length;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int argument;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct _RTL_CRITICAL_SECTION_DEBUG {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short Type;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short CreatorBackTraceIndex;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct _RTL_CRITICAL_SECTION* CriticalSection;
  /*<thisrel this+0x8>*/ /*|0x8|*/ struct _LIST_ENTRY ProcessLocksList;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long EntryCount;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long ContentionCount;
  /*<thisrel this+0x18>*/ /*|0x8|*/ unsigned long Spare[2];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct _tagSTACKFRAME {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xc|*/ struct _tagADDRESS AddrPC;
  /*<thisrel this+0xc>*/ /*|0xc|*/ struct _tagADDRESS AddrReturn;
  /*<thisrel this+0x18>*/ /*|0xc|*/ struct _tagADDRESS AddrFrame;
  /*<thisrel this+0x24>*/ /*|0xc|*/ struct _tagADDRESS AddrStack;
  /*<thisrel this+0x30>*/ /*|0x4|*/ void* FuncTableEntry;
  /*<thisrel this+0x34>*/ /*|0x10|*/ unsigned long Params[4];
  /*<thisrel this+0x44>*/ /*|0x4|*/ int Far;
  /*<thisrel this+0x48>*/ /*|0x4|*/ int Virtual;
  /*<thisrel this+0x4c>*/ /*|0xc|*/ unsigned long Reserved[3];
  /*<thisrel this+0x58>*/ /*|0x40|*/ struct _KDHELP KdHelp;
  /*<thisrel this+0x98>*/ /*|0xc|*/ struct _tagADDRESS AddrBStore;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xa4>

struct _tagADDRESS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long Offset;
  /*<thisrel this+0x4>*/ /*|0x2|*/ unsigned short Segment;
  /*<thisrel this+0x8>*/ /*|0x4|*/ enum ADDRESS_MODE Mode;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct _IMAGEHLP_LINE {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long SizeOfStruct;
  /*<thisrel this+0x4>*/ /*|0x4|*/ void* Key;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long LineNumber;
  /*<thisrel this+0xc>*/ /*|0x4|*/ char* FileName;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long Address;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct _IMAGEHLP_MODULE {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long SizeOfStruct;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long BaseOfImage;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long ImageSize;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long TimeDateStamp;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long CheckSum;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long NumSyms;
  /*<thisrel this+0x18>*/ /*|0x4|*/ enum SYM_TYPE SymType;
  /*<thisrel this+0x1c>*/ /*|0x20|*/ char ModuleName[32];
  /*<thisrel this+0x3c>*/ /*|0x100|*/ char ImageName[256];
  /*<thisrel this+0x13c>*/ /*|0x100|*/ char LoadedImageName[256];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x23c>

struct _IMAGEHLP_SYMBOL {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long SizeOfStruct;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long Address;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long Size;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long Flags;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long MaxNameLength;
  /*<thisrel this+0x14>*/ /*|0x1|*/ char Name[1];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct _MINIDUMP_EXCEPTION_INFORMATION {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long ThreadId;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct _EXCEPTION_POINTERS* ExceptionPointers;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int ClientPointers;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct _MINIDUMP_USER_STREAM_INFORMATION {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long UserStreamCount;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct _MINIDUMP_USER_STREAM* UserStreamArray;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct _MINIDUMP_CALLBACK_INFORMATION {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int  (CallbackRoutine*)(void*, struct _MINIDUMP_CALLBACK_INPUT*, struct _MINIDUMP_CALLBACK_OUTPUT*);
  /*<thisrel this+0x4>*/ /*|0x4|*/ void* CallbackParam;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct _KDHELP {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long Thread;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long ThCallbackStack;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long NextCallback;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long FramePointer;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long KiCallUserMode;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long KeUserCallbackDispatcher;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long SystemRangeStart;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned long ThCallbackBStore;
  /*<thisrel this+0x20>*/ /*|0x20|*/ unsigned long Reserved[8];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x40>

struct _CONTEXT {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long ContextFlags;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long Dr0;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long Dr1;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long Dr2;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long Dr3;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long Dr6;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long Dr7;
  /*<thisrel this+0x1c>*/ /*|0x70|*/ struct _FLOATING_SAVE_AREA FloatSave;
  /*<thisrel this+0x8c>*/ /*|0x4|*/ unsigned long SegGs;
  /*<thisrel this+0x90>*/ /*|0x4|*/ unsigned long SegFs;
  /*<thisrel this+0x94>*/ /*|0x4|*/ unsigned long SegEs;
  /*<thisrel this+0x98>*/ /*|0x4|*/ unsigned long SegDs;
  /*<thisrel this+0x9c>*/ /*|0x4|*/ unsigned long Edi;
  /*<thisrel this+0xa0>*/ /*|0x4|*/ unsigned long Esi;
  /*<thisrel this+0xa4>*/ /*|0x4|*/ unsigned long Ebx;
  /*<thisrel this+0xa8>*/ /*|0x4|*/ unsigned long Edx;
  /*<thisrel this+0xac>*/ /*|0x4|*/ unsigned long Ecx;
  /*<thisrel this+0xb0>*/ /*|0x4|*/ unsigned long Eax;
  /*<thisrel this+0xb4>*/ /*|0x4|*/ unsigned long Ebp;
  /*<thisrel this+0xb8>*/ /*|0x4|*/ unsigned long Eip;
  /*<thisrel this+0xbc>*/ /*|0x4|*/ unsigned long SegCs;
  /*<thisrel this+0xc0>*/ /*|0x4|*/ unsigned long EFlags;
  /*<thisrel this+0xc4>*/ /*|0x4|*/ unsigned long Esp;
  /*<thisrel this+0xc8>*/ /*|0x4|*/ unsigned long SegSs;
  /*<thisrel this+0xcc>*/ /*|0x200|*/ unsigned char ExtendedRegisters[512];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x2cc>

struct MEMDUMP {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ void  (logLineProc*)(void*, char*, ...);
  /*<thisrel this+0x4>*/ /*|0x4|*/ void* logLineProcParam;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct ModuleData {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x100|*/ char name[256];
  /*<thisrel this+0x100>*/ /*|0x4|*/ unsigned long baseAddress;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x104>

struct EnumModuleData {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int count;
  /*<thisrel this+0x4>*/ /*|0x10400|*/ struct ModuleData modules[256];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10404>

struct LogLineParams {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ void  (logLineProc*)(void*, char*, ...);
  /*<thisrel this+0x4>*/ /*|0x4|*/ void* logLineProcParam;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct _EXCEPTION_POINTERS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct _EXCEPTION_RECORD* ExceptionRecord;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct _CONTEXT* ContextRecord;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct MiniDumpParam {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ void* logfile;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct _EXCEPTION_POINTERS* exceptionPointers;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long threadId;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int result;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int userStringCount;
  /*<thisrel this+0x14>*/ /*|0x4|*/ char** userStrings;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct _MINIDUMP_USER_STREAM {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int Type;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long BufferSize;
  /*<thisrel this+0x8>*/ /*|0x4|*/ void* Buffer;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct WNDREC : class TSLinkedNode<WNDREC>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct HWND__* window;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<WNDREC>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall WNDREC(struct WNDREC&);
  void __thiscall WNDREC::WNDREC();
  struct WNDREC& __thiscall operator=(struct WNDREC&);
  void __thiscall WNDREC::~WNDREC();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xc>

struct _PARAMS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ void* window;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int message;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int wparam;
  /*<thisrel this+0xc>*/ /*|0x4|*/ long lparam;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int notifycode;
  /*<thisrel this+0x14>*/ /*|0x4|*/ void* extra;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int useresult;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ long result;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct _COMPRESSALGORITHM {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long id;
  /*<thisrel this+0x4>*/ /*|0x4|*/ void  (func*)(void*, unsigned long*, void*, unsigned long, unsigned long*, unsigned long);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct _DECOMPRESSALGORITHM {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long id;
  /*<thisrel this+0x4>*/ /*|0x4|*/ void  (func*)(void*, unsigned long*, void*, unsigned long, char*);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct HUFFNODE : class TSLinkedNode<HUFFNODE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ int symbol;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long weight;
  /*<thisrel this+0x10>*/ /*|0x4|*/ struct HUFFNODE* parent;
  /*<thisrel this+0x14>*/ /*|0x4|*/ struct HUFFNODE* child;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<HUFFNODE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall HUFFNODE(struct HUFFNODE&);
  void __thiscall HUFFNODE::HUFFNODE();
  struct HUFFNODE& __thiscall operator=(struct HUFFNODE&);
  void __thiscall HUFFNODE::~HUFFNODE();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x18>

struct _CACHEREC {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long sequence;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long bits;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int symbol;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct HUFFNODE* nodeptr;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct _PKWAREINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ void* dest;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long destpos;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long destsize;
  /*<thisrel this+0xc>*/ /*|0x4|*/ void* source;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long sourcepos;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long sourcesize;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct ZlibAllocBufferHeader {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned char* nextPtr;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long bufSize;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned char* bufStart;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct ZlibCompressAllocBuffer : struct ZlibAllocBufferHeader  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0xc>*/ /*|0x493e0|*/ unsigned char buf[300000];

  // base classes -----------------------------------
  // baseclass struct ZlibAllocBufferHeader
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x493ec>

struct ZlibUncompressAllocBuffer : struct ZlibAllocBufferHeader  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0xc>*/ /*|0xb798|*/ unsigned char buf[47000];

  // base classes -----------------------------------
  // baseclass struct ZlibAllocBufferHeader
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xb7a4>

struct anonymous_namespace::_IMAHEADER {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char reserved;
  /*<thisrel this+0x1>*/ /*|0x1|*/ unsigned char roundshift;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x2>

struct HLOCKEDRGN__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct RGN : class TSHashObject<RGN,HASHKEY_NONE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x14|*/ class TSGrowableArray<_SOURCE> source;
  /*<thisrel this+0x2c>*/ /*|0x14|*/ class TSGrowableArray<RECTF> combined;
  /*<thisrel this+0x40>*/ /*|0x14|*/ class TSGrowableArray<_FOUNDPARAM> foundparams;
  /*<thisrel this+0x54>*/ /*|0x10|*/ struct RECTF foundparamsrect;
  /*<thisrel this+0x64>*/ /*|0x4|*/ int sequence;
  /*<thisrel this+0x68>*/ /*|0x4|*/ int dirty;

  // base classes -----------------------------------
  // baseclass class TSHashObject<RGN,HASHKEY_NONE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall RGN::RGN(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct RGN& __that);
  void __thiscall RGN::RGN();
  struct RGN& __thiscall RGN::operator=(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct RGN& __that);
  void __thiscall RGN::~RGN();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x6c>

struct _SOURCE {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x10|*/ struct RECTF rect;
  /*<thisrel this+0x10>*/ /*|0x4|*/ void* param;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int sequence;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long flags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c>

struct _FOUNDPARAM {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ void* param;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int sequence;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct _LOG {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct HSLOG__* log;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct _LOG* next;
  /*<thisrel this+0x8>*/ /*|0x104|*/ char filename[260];
  /*<thisrel this+0x10c>*/ /*|0x4|*/ void* file;
  /*<thisrel this+0x110>*/ /*|0x4|*/ unsigned long flags;
  /*<thisrel this+0x114>*/ /*|0x4|*/ unsigned long bufferused;
  /*<thisrel this+0x118>*/ /*|0x4|*/ unsigned long pendpoint;
  /*<thisrel this+0x11c>*/ /*|0x4|*/ long indent;
  /*<thisrel this+0x120>*/ /*|0x4|*/ int timeStamp;
  /*<thisrel this+0x124>*/ /*|0x10000|*/ char buffer[65536];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10124>

struct HLOCKEDLOG__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct CDebugLockData {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long m_entries;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct CDebugLockData* m_prevLock;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct CDebugLockData* m_nextLock;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct CDebugLockEntry {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long m_time;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long m_threadId;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long m_next;
  /*<thisrel this+0xc>*/ /*|0x4|*/ char* m_fileName;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long m_line;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct SRWLock::SURWLOCK {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ struct SRWLock::SUNNLOCK m_mutex;
  /*<thisrel this+0x8>*/ /*|0x4|*/ long m_readerEvent;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct SRWLock::SUNNLOCK {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long m_state;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long m_event;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct S_Thread::SThreadTrack {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int suspended;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int live;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long threadId;
  /*<thisrel this+0xc>*/ /*|0x4|*/ void* threadH;
  /*<thisrel this+0x10>*/ /*|0x10|*/ char name[16];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct SCreateThread::__unnamed_100_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long cdThreadId;
  /*<thisrel this+0x4>*/ /*|0x4|*/ void* cdThreadH;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct CMDDEF : class TSLinkedNode<CMDDEF>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long flags;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long id;
  /*<thisrel this+0x10>*/ /*|0x10|*/ char name[16];
  /*<thisrel this+0x20>*/ /*|0x4|*/ int namelength;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned long setvalue;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned long setmask;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ void* variableptr;
  /*<thisrel this+0x30>*/ /*|0x4|*/ unsigned long variablebytes;
  /*<thisrel this+0x34>*/ /*|0x4|*/ int  (callback*)(struct _CMDPARAMS*, char*);
  /*<thisrel this+0x38>*/ /*|0x4|*/ int found;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ unsigned long currvalue;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ char* currvaluestr;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<CMDDEF>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CMDDEF(struct CMDDEF&);
  void __thiscall CMDDEF::CMDDEF();
  struct CMDDEF& __thiscall operator=(struct CMDDEF&);
  void __thiscall CMDDEF::~CMDDEF();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x40>

struct _CMDERROR {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long errorcode;
  /*<thisrel this+0x4>*/ /*|0x4|*/ char* itemstr;
  /*<thisrel this+0x8>*/ /*|0x4|*/ char* errorstr;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct _PROCESSING {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct CMDDEF* ptr;
  /*<thisrel this+0x4>*/ /*|0x10|*/ char name[16];
  /*<thisrel this+0x14>*/ /*|0x4|*/ int namelength;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct _CMDPARAMS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long flags;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long id;
  /*<thisrel this+0x8>*/ /*|0x4|*/ char* name;
  /*<thisrel this+0xc>*/ /*|0x4|*/ void* variable;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long setvalue;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long setmask;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int boolvalue;
  /*<thisrel this+0x18>*/ /*|0x4|*/ long signedvalue;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long unsignedvalue;
  /*<thisrel this+0x18>*/ /*|0x4|*/ char* stringvalue;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c>

struct FILEMAP : class TSHashObject<FILEMAP,HASHKEY_STRI>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x4|*/ char* realname;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ enum SFILE_TYPE type;

  // base classes -----------------------------------
  // baseclass class TSHashObject<FILEMAP,HASHKEY_STRI>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall FILEMAP(struct FILEMAP&);
  void __thiscall FILEMAP::FILEMAP();
  void __thiscall FILEMAP::~FILEMAP();
  struct FILEMAP& __thiscall operator=(struct FILEMAP&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x20>

struct SOVERLAPPED {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int Offset;
  /*<thisrel this+0x4>*/ /*|0x4|*/ class SEvent* hEvent;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct NoPaqCompHdr {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int uncompressedSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ char signature[4];
  /*<thisrel this+0x8>*/ /*|0x10|*/ class MD5 md5;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall NoPaqCompHdr(struct NoPaqCompHdr&);
  void __thiscall NoPaqCompHdr::NoPaqCompHdr();
  struct NoPaqCompHdr& __thiscall operator=(struct NoPaqCompHdr&);

  // virtual functions ------------------------------
};
// <size 0x18>

struct APPFATINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ char* filename;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int linenumber;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long threadId;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct HANDLER : class TSLinkedNode<HANDLER>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ int  (handler*)(unsigned long, char*, char*, int, char*);

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<HANDLER>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall HANDLER(struct HANDLER&);
  void __thiscall HANDLER::HANDLER();
  struct HANDLER& __thiscall operator=(struct HANDLER&);
  void __thiscall HANDLER::~HANDLER();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xc>

struct _MSGSRC {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short facility;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short reserved;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct HINSTANCE__* module;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct _MSGSRC* next;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct _WIN32_FIND_DATAA {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwFileAttributes;
  /*<thisrel this+0x4>*/ /*|0x8|*/ struct _FILETIME ftCreationTime;
  /*<thisrel this+0xc>*/ /*|0x8|*/ struct _FILETIME ftLastAccessTime;
  /*<thisrel this+0x14>*/ /*|0x8|*/ struct _FILETIME ftLastWriteTime;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned long nFileSizeHigh;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned long nFileSizeLow;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned long dwReserved0;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned long dwReserved1;
  /*<thisrel this+0x2c>*/ /*|0x104|*/ char cFileName[260];
  /*<thisrel this+0x130>*/ /*|0xe|*/ char cAlternateFileName[14];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x140>

struct _FLOATING_SAVE_AREA {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long ControlWord;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long StatusWord;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long TagWord;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long ErrorOffset;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long ErrorSelector;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long DataOffset;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long DataSelector;
  /*<thisrel this+0x1c>*/ /*|0x50|*/ unsigned char RegisterArea[80];
  /*<thisrel this+0x6c>*/ /*|0x4|*/ unsigned long Cr0NpxState;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x70>

struct _HEAP {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct _HEAP* next;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct HSHEAP__* handle;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long slot;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long addrsig;
  /*<thisrel this+0x10>*/ /*|0x4|*/ int active;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long allocatedblocks;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long allocatedbytes;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ struct _BLOCK* firstblock;
  /*<thisrel this+0x20>*/ /*|0x4|*/ struct _BLOCK* termblock;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned long uncombinedfree;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned long chunksize;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ unsigned long committedbytes;
  /*<thisrel this+0x30>*/ /*|0x4|*/ unsigned long reservedbytes;
  /*<thisrel this+0x34>*/ /*|0x4|*/ unsigned long externalbytes;
  /*<thisrel this+0x38>*/ /*|0x4|*/ unsigned long cumulativeAllocs;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ unsigned long cumulativeFrees;
  /*<thisrel this+0x40>*/ /*|0x4|*/ unsigned long cumulativeReallocs;
  /*<thisrel this+0x44>*/ /*|0x4|*/ unsigned long mark_externalbytes;
  /*<thisrel this+0x48>*/ /*|0x4|*/ unsigned long mark_allocatedblocks;
  /*<thisrel this+0x4c>*/ /*|0x4|*/ unsigned long mark_allocatedbytes;
  /*<thisrel this+0x50>*/ /*|0x4|*/ unsigned long mark_committedbytes;
  /*<thisrel this+0x54>*/ /*|0x4|*/ unsigned long mark_cumulativeAllocs;
  /*<thisrel this+0x58>*/ /*|0x4|*/ unsigned long mark_cumulativeFrees;
  /*<thisrel this+0x5c>*/ /*|0x4|*/ unsigned long mark_cumulativeReallocs;
  /*<thisrel this+0x60>*/ /*|0x24|*/ struct _FREEBLOCK* firstfreeblock[9];
  /*<thisrel this+0x84>*/ /*|0x4|*/ int linenumber;
  /*<thisrel this+0x88>*/ /*|0x1|*/ char filename[1];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8c>

struct HLOCKEDHEAP__ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct _BASEBLOCK {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short bytes;
  /*<thisrel this+0x2>*/ /*|0x1|*/ unsigned char padding;
  /*<thisrel this+0x3>*/ /*|0x1|*/ unsigned char flags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct _BLOCK : struct _BASEBLOCK  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x4>*/ /*|0x2|*/ unsigned short heapaddr;
  /*<thisrel this+0x6>*/ /*|0x2|*/ unsigned short signature1;

  // base classes -----------------------------------
  // baseclass struct _BASEBLOCK
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct _FREEBLOCK : struct _BASEBLOCK  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct _FREEBLOCK* next;

  // base classes -----------------------------------
  // baseclass struct _BASEBLOCK
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct _SMEMHEAPDETAILS2 {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long size;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct HSHEAP__* handle;
  /*<thisrel this+0x8>*/ /*|0x104|*/ char filename[260];
  /*<thisrel this+0x10c>*/ /*|0x4|*/ int linenumber;
  /*<thisrel this+0x110>*/ /*|0x4|*/ unsigned long regions;
  /*<thisrel this+0x114>*/ /*|0x4|*/ unsigned long committedbytes;
  /*<thisrel this+0x118>*/ /*|0x4|*/ unsigned long reservedbytes;
  /*<thisrel this+0x11c>*/ /*|0x4|*/ unsigned long maximumsize;
  /*<thisrel this+0x120>*/ /*|0x4|*/ unsigned long cumulativeAllocs;
  /*<thisrel this+0x124>*/ /*|0x4|*/ unsigned long cumulativeFrees;
  /*<thisrel this+0x128>*/ /*|0x4|*/ unsigned long cumulativeReallocs;
  /*<thisrel this+0x12c>*/ /*|0x4|*/ unsigned long allocatedblocks;
  /*<thisrel this+0x130>*/ /*|0x4|*/ unsigned long allocatedbytes;
  /*<thisrel this+0x134>*/ /*|0x4|*/ unsigned long mark_allocatedblocks;
  /*<thisrel this+0x138>*/ /*|0x4|*/ unsigned long mark_allocatedbytes;
  /*<thisrel this+0x13c>*/ /*|0x4|*/ unsigned long mark_committedbytes;
  /*<thisrel this+0x140>*/ /*|0x4|*/ unsigned long mark_cumulativeAllocs;
  /*<thisrel this+0x144>*/ /*|0x4|*/ unsigned long mark_cumulativeFrees;
  /*<thisrel this+0x148>*/ /*|0x4|*/ unsigned long mark_cumulativeReallocs;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14c>

struct SMemReportByCallerInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long numSubHeaps;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long cumulativeAllocs;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long cumulativeFrees;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long cumulativeReallocs;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long allocatedBlocks;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long allocatedBytes;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long committedBytes;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned long reservedBytes;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned long mark_allocatedBlocks;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned long mark_allocatedBytes;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned long mark_committedBytes;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ unsigned long mark_cumulativeAllocs;
  /*<thisrel this+0x30>*/ /*|0x4|*/ unsigned long mark_cumulativeFrees;
  /*<thisrel this+0x34>*/ /*|0x4|*/ unsigned long mark_cumulativeReallocs;
  /*<thisrel this+0x38>*/ /*|0x4|*/ int lineNumber;
  /*<thisrel this+0x3c>*/ /*|0x100|*/ char fileName[256];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x13c>

struct _SMEMBLOCKDETAILS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long size;
  /*<thisrel this+0x4>*/ /*|0x4|*/ void* ptr;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int allocated;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int valid;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long bytes;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long overhead;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long flags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c>

struct SIffChunk {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long token;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long size;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall SIffChunk(unsigned long, unsigned long);
  void __thiscall SIffChunk();

  // virtual functions ------------------------------
};
// <size 0x8>

struct SMOGroupInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long offset;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long size;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long flags;
  /*<thisrel this+0xc>*/ /*|0x18|*/ class NTempest::CAaBox aaBox;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned long nameIndex;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall SMOGroupInfo();
  void __thiscall ~SMOGroupInfo();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x28>

struct SMAreaInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long offset;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long size;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long flags;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned char pad[4];
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long asyncId;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct SMMapObjDef {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long nameId;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long uniqueId;
  /*<thisrel this+0x8>*/ /*|0xc|*/ class NTempest::C3Vector pos;
  /*<thisrel this+0x14>*/ /*|0xc|*/ class NTempest::C3Vector rot;
  /*<thisrel this+0x20>*/ /*|0x18|*/ class NTempest::CAaBox extents;
  /*<thisrel this+0x38>*/ /*|0x2|*/ unsigned short flags;
  /*<thisrel this+0x3a>*/ /*|0x2|*/ unsigned short doodadSet;
  /*<thisrel this+0x3c>*/ /*|0x2|*/ unsigned short nameSet;
  /*<thisrel this+0x3e>*/ /*|0x2|*/ unsigned short pad;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall SMMapObjDef();
  void __thiscall SMMapObjDef::~SMMapObjDef();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x40>

struct SMDoodadDef {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long nameId;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long uniqueId;
  /*<thisrel this+0x8>*/ /*|0xc|*/ class NTempest::C3Vector pos;
  /*<thisrel this+0x14>*/ /*|0xc|*/ class NTempest::C3Vector rot;
  /*<thisrel this+0x20>*/ /*|0x2|*/ unsigned short scale;
  /*<thisrel this+0x22>*/ /*|0x2|*/ unsigned short flags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall SMDoodadDef();
  void __thiscall SMDoodadDef::~SMDoodadDef();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x24>

struct CSimpleDoodad : class TSHashObject<CSimpleDoodad,HASHKEY_NONE>  {

  // static data ------------------------------------
  static /*<rva 0xae2844>*/ /*|0x2c|*/ class TSHashTable<CSimpleDoodad,HASHKEY_NONE> simpleDoodadHash;
  static /*<rva 0xae2894>*/ /*|0x1|*/ class HASHKEY_NONE nullHashKey;
  static /*<rva 0xae287c>*/ /*|0x4|*/ struct CGxBuf* gxBufDyn;

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x10|*/ struct HTEXTURE__* textures[4];
  /*<thisrel this+0x28>*/ /*|0x60|*/ class CSimpleDoodadMat materials[4];
  /*<thisrel this+0x88>*/ /*|0x150|*/ class CSimpleDoodadGeoset geosets[4];
  /*<thisrel this+0x1d8>*/ /*|0x14|*/ class TSGrowableArray<NTempest::C44Matrix> matrixList;
  /*<thisrel this+0x1ec>*/ /*|0x14|*/ class TSGrowableArray<CMapDoodadDef *> doodadDefList;
  /*<thisrel this+0x200>*/ /*|0x4|*/ unsigned int nTextures;
  /*<thisrel this+0x204>*/ /*|0x4|*/ unsigned int nMaterials;
  /*<thisrel this+0x208>*/ /*|0x4|*/ unsigned int nGeosets;
  /*<thisrel this+0x20c>*/ /*|0x4|*/ int refCount;
  /*<thisrel this+0x210>*/ /*|0x4|*/ float flushTime;
  /*<thisrel this+0x214>*/ /*|0x4|*/ struct CGxBuf* gxBuf;
  /*<thisrel this+0x218>*/ /*|0x8|*/ class TSLink<CSimpleDoodad> sceneLink;
  /*<thisrel this+0x220>*/ /*|0x18|*/ class NTempest::CAaBox extents;
  /*<thisrel this+0x238>*/ /*|0x10|*/ class NTempest::CAaSphere bounds;

  // base classes -----------------------------------
  // baseclass class TSHashObject<CSimpleDoodad,HASHKEY_NONE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------
  static int __fastcall CSimpleDoodad::Read(/*<register ecx>*/ /*|0x4|*/ char* fileName, /*<register edx>*/ /*|0x4|*/ struct CSimpleDoodad* simpleDoodad);
  static int __fastcall CSimpleDoodad::MdlReadCallback(/*<register ecx>*/ /*|0x4|*/ struct MDLDATA& data, /*<register edx>*/ /*|0x4|*/ struct CSimpleDoodad* simpleDoodad);
  static void __fastcall CSimpleDoodad::MdlReadCallback(/*<register ecx>*/ /*|0x4|*/ unsigned char* fileData, /*<register edx>*/ /*|0x4|*/ unsigned int fileBytes, /*<regrel ebp+0x8>*/ /*|0x4|*/ struct CSimpleDoodad* simpleDoodad);
  static void __fastcall CSimpleDoodad::GxBufDynCallback(/*<register ecx>*/ /*|0x4|*/ struct CGxBufCommand& cmd, /*<register edx>*/ /*|0x4|*/ struct CGxBuf* buf);
  static void __fastcall CSimpleDoodad::CreateVertices(/*<register ecx>*/ /*|0x4|*/ class CSimpleDoodadGeoset* geoset, /*<register edx>*/ /*|0x4|*/ struct CGxBufCommand& cmd, /*<regrel ebp+0x8>*/ /*|0x4|*/ struct CGxBuf* buf);
  static void __fastcall CSimpleDoodad::CreateIndices(/*<register ecx>*/ /*|0x4|*/ class CSimpleDoodadGeoset* geoset, /*<register edx>*/ /*|0x4|*/ struct CGxBufCommand& cmd, /*<regrel ebp+0x8>*/ /*|0x4|*/ struct CGxBuf* buf);
  static struct CSimpleDoodad* __fastcall Get(unsigned int);
  static void __fastcall CSimpleDoodad::Initialize();
  static void __fastcall CSimpleDoodad::Destroy();
  static void __fastcall CSimpleDoodad::ClearCache();
  static struct CSimpleDoodad* __fastcall CSimpleDoodad::Create(/*<register ecx>*/ /*|0x4|*/ char* fileName);
  static void __fastcall CSimpleDoodad::Delete(/*<register ecx>*/ /*|0x4|*/ struct CSimpleDoodad* simpleDoodad);
  static void __fastcall CSimpleDoodad::PrepareUpdate();
  static void __fastcall CSimpleDoodad::AddToScene(/*<register ecx>*/ /*|0x4|*/ struct CSimpleDoodad* simpleDoodad, /*<register edx>*/ /*|0x4|*/ class NTempest::C44Matrix& mat, /*<regrel ebp+0x8>*/ /*|0x4|*/ class CMapDoodadDef* doodadDef);
  static void __fastcall CSimpleDoodad::RenderScene();

  // non-virtual functions --------------------------
  void __thiscall CSimpleDoodad(struct CSimpleDoodad&);
  void __thiscall CSimpleDoodad();
  void __thiscall ~CSimpleDoodad();
  unsigned int __thiscall GetId();
  void __thiscall GetBounds(class NTempest::CAaSphere&);
  void __thiscall GetExtents(class NTempest::CAaBox&);
  int __thiscall TestExtents(class NTempest::CAaBox&);
  int __thiscall TestBounds(class NTempest::CAaSphere&);
  struct CSimpleDoodad& __thiscall operator=(struct CSimpleDoodad&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x248>

struct CGxVertexPNT0 {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xc|*/ class NTempest::C3Vector p;
  /*<thisrel this+0xc>*/ /*|0xc|*/ class NTempest::C3Vector n;
  /*<thisrel this+0x18>*/ /*|0x8|*/ class NTempest::C2Vector tc[1];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CGxVertexPNT0();
  void __thiscall ~CGxVertexPNT0();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x20>

struct STPrimRemap {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short nIndicies;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned short* indicies;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct STPrimGroup {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short nIndicies;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short primType;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned short* indicies;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct CGxVertexPN {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xc|*/ class NTempest::C3Vector p;
  /*<thisrel this+0xc>*/ /*|0xc|*/ class NTempest::C3Vector n;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CGxVertexPN();
  void __thiscall ~CGxVertexPN();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x18>

struct SGroupPtr {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ class CMapObjDef* mapObjDef;
  /*<thisrel this+0x4>*/ /*|0x4|*/ class CMapObjDefGroup* mapObjDefGroup;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct CGxVertexPC {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xc|*/ class NTempest::C3Vector p;
  /*<thisrel this+0xc>*/ /*|0x4|*/ class NTempest::CImVector c;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CGxVertexPC(struct CGxVertexPC&);
  void __thiscall CGxVertexPC::CGxVertexPC();
  struct CGxVertexPC& __thiscall operator=(struct CGxVertexPC&);
  void __thiscall CGxVertexPC::~CGxVertexPC();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x10>

struct SPortalExt {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short flags;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short rLevel;
  /*<thisrel this+0x4>*/ /*|0x10|*/ class NTempest::CRect sRect;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned int xformTag;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned int visitedTag;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall SPortalExt();
  void __thiscall ~SPortalExt();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x1c>

struct SMOGxBatch {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short vertStart;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short vertCount;
  /*<thisrel this+0x4>*/ /*|0x2|*/ unsigned short batchStart;
  /*<thisrel this+0x6>*/ /*|0x2|*/ unsigned short batchCount;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct SMOPortalRef {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short portalIndex;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short groupIndex;
  /*<thisrel this+0x4>*/ /*|0x2|*/ short side;
  /*<thisrel this+0x6>*/ /*|0x2|*/ unsigned short filler;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct SMOPortal {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short startVertex;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short count;
  /*<thisrel this+0x4>*/ /*|0x10|*/ class NTempest::C4Plane plane;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall SMOPortal();
  void __thiscall ~SMOPortal();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x14>

struct SMOBatch {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char lightMap;
  /*<thisrel this+0x1>*/ /*|0x1|*/ unsigned char texture;
  /*<thisrel this+0x2>*/ /*|0x2|*/ short bx;
  /*<thisrel this+0x4>*/ /*|0x2|*/ short by;
  /*<thisrel this+0x6>*/ /*|0x2|*/ short bz;
  /*<thisrel this+0x8>*/ /*|0x2|*/ short tx;
  /*<thisrel this+0xa>*/ /*|0x2|*/ short ty;
  /*<thisrel this+0xc>*/ /*|0x2|*/ short tz;
  /*<thisrel this+0xe>*/ /*|0x2|*/ unsigned short startIndex;
  /*<thisrel this+0x10>*/ /*|0x2|*/ unsigned short count;
  /*<thisrel this+0x12>*/ /*|0x2|*/ unsigned short minIndex;
  /*<thisrel this+0x14>*/ /*|0x2|*/ unsigned short maxIndex;
  /*<thisrel this+0x16>*/ /*|0x1|*/ unsigned char flags;
  /*<thisrel this+0x17>*/ /*|0x1|*/ unsigned char pad[1];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct CGxVertexPNT0T1 {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xc|*/ class NTempest::C3Vector p;
  /*<thisrel this+0xc>*/ /*|0xc|*/ class NTempest::C3Vector n;
  /*<thisrel this+0x18>*/ /*|0x10|*/ class NTempest::C2Vector tc[2];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CGxVertexPNT0T1();
  void __thiscall ~CGxVertexPNT0T1();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x28>

struct SMOPoly {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char flags;
  /*<thisrel this+0x1>*/ /*|0x1|*/ unsigned char lightmapTex;
  /*<thisrel this+0x2>*/ /*|0x1|*/ unsigned char mtlId;
  /*<thisrel this+0x3>*/ /*|0x1|*/ unsigned char pad[1];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct SMOLTile {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char liquid;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  unsigned int __thiscall GetLiquid();
  int __thiscall GetShared();
  int __thiscall GetFishable();
  void __thiscall SetLiquid(unsigned int);
  void __thiscall SetShared(int);
  void __thiscall SetFishable(int);
  int __thiscall IsLiquid();

  // virtual functions ------------------------------
};
// <size 0x1>

struct CGxVertexPCT0 {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xc|*/ class NTempest::C3Vector p;
  /*<thisrel this+0xc>*/ /*|0x4|*/ class NTempest::CImVector c;
  /*<thisrel this+0x10>*/ /*|0x8|*/ class NTempest::C2Vector tc[1];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CGxVertexPCT0(struct CGxVertexPCT0&);
  void __thiscall CGxVertexPCT0();
  struct CGxVertexPCT0& __thiscall operator=(struct CGxVertexPCT0&);
  void __thiscall ~CGxVertexPCT0();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x18>

struct CChunkTex : class TSLinkedNode<CChunkTex>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4000|*/ unsigned long pixels[4096];

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<CChunkTex>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CChunkTex(struct CChunkTex&);
  void __thiscall CChunkTex::CChunkTex();
  void __thiscall CChunkTex::~CChunkTex();
  struct CChunkTex& __thiscall operator=(struct CChunkTex&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x4008>

struct CChunkLayer : class TSLinkedNode<CChunkLayer>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x2|*/ unsigned short props;
  /*<thisrel this+0xa>*/ /*|0x2|*/ unsigned short effectId;
  /*<thisrel this+0xc>*/ /*|0x4|*/ struct HTEXTURE__* texId;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned char* offsAlpha;
  /*<thisrel this+0x14>*/ /*|0x4|*/ struct CChunkTex* tex;
  /*<thisrel this+0x18>*/ /*|0x4|*/ class CGxTex* gxTexture;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ class CMapChunk* chunk;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<CChunkLayer>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CChunkLayer(struct CChunkLayer&);
  void __thiscall CChunkLayer::CChunkLayer();
  void __thiscall CChunkLayer::~CChunkLayer();
  struct CChunkLayer& __thiscall operator=(struct CChunkLayer&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x20>

struct SMChunkInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long offset;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long size;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long flags;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned char pad[4];
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long asyncId;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct SMChunk {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long flags;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long indexX;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long indexY;
  /*<thisrel this+0xc>*/ /*|0x4|*/ float radius;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long nLayers;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long nDoodadRefs;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long offsHeight;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned long offsNormal;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned long offsLayer;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned long offsRefs;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned long offsAlpha;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ unsigned long sizeAlpha;
  /*<thisrel this+0x30>*/ /*|0x4|*/ unsigned long offsShadow;
  /*<thisrel this+0x34>*/ /*|0x4|*/ unsigned long sizeShadow;
  /*<thisrel this+0x38>*/ /*|0x4|*/ unsigned long areaid;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ unsigned long nMapObjRefs;
  /*<thisrel this+0x40>*/ /*|0x2|*/ unsigned short holes;
  /*<thisrel this+0x42>*/ /*|0x2|*/ unsigned short pad0;
  /*<thisrel this+0x44>*/ /*|0x10|*/ unsigned short predTex[8];
  /*<thisrel this+0x54>*/ /*|0x8|*/ unsigned char noEffectDoodad[8];
  /*<thisrel this+0x5c>*/ /*|0x4|*/ unsigned long offsSndEmitters;
  /*<thisrel this+0x60>*/ /*|0x4|*/ unsigned long nSndEmitters;
  /*<thisrel this+0x64>*/ /*|0x4|*/ unsigned long offsLiquid;
  /*<thisrel this+0x68>*/ /*|0x18|*/ unsigned char pad1[24];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x80>

struct SMLayer {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long textureId;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long props;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long offsAlpha;
  /*<thisrel this+0xc>*/ /*|0x2|*/ unsigned short effectId;
  /*<thisrel this+0xe>*/ /*|0x2|*/ unsigned char pad[2];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct SMNormal {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1b3|*/ char n[145][3];
  /*<thisrel this+0x1b3>*/ /*|0xd|*/ char pad[13];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c0>

struct CWorld::MinimapQuad {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int groupNum;
  /*<thisrel this+0x4>*/ /*|0x8|*/ class NTempest::C2iVector quad;
  /*<thisrel this+0xc>*/ /*|0x18|*/ class NTempest::CAaBox aaBox;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CWorld::MinimapQuad::MinimapQuad();
  void __thiscall ~MinimapQuad();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x24>

struct CMapEntity : class CMapStaticEntity  {

  // static data ------------------------------------
  static /*<rva 0x411010>*/ /*|0x4|*/ float ambLightScaleRate;
  static /*<rva 0x411014>*/ /*|0x4|*/ float dirLightScaleRate;

  // non-static data --------------------------------
  /*<thisrel this+0x98>*/ /*|0x4|*/ int  (handler*)(void*, unsigned long, unsigned __int64, unsigned long);
  /*<thisrel this+0xa0>*/ /*|0x8|*/ unsigned __int64 param64;
  /*<thisrel this+0xa8>*/ /*|0x4|*/ unsigned long param32;
  /*<thisrel this+0xac>*/ /*|0xc|*/ class NTempest::C3Vector oldPos;
  /*<thisrel this+0xb8>*/ /*|0x4|*/ unsigned int rFrameCount;
  /*<thisrel this+0xbc>*/ /*|0xc|*/ class NTempest::C3Vector lqDirection;
  /*<thisrel this+0xc8>*/ /*|0x4|*/ float lqSurface;
  /*<thisrel this+0xcc>*/ /*|0x4|*/ unsigned int lqWhich;
  /*<thisrel this+0xd0>*/ /*|0x4|*/ class NTempest::CImVector ambientTarget;
  /*<thisrel this+0xd4>*/ /*|0x4|*/ float dirLightScaleTarget;
  /*<thisrel this+0xd8>*/ /*|0x8|*/ class TSLink<CMapDoodadDef> sceneLink;

  // base classes -----------------------------------
  // baseclass class CMapStaticEntity
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------
  static int __fastcall CMapEntity::QueryCameraFog(/*<register ecx>*/ /*|0x4|*/ class SMOFog::Fogs& oFog, /*<register edx>*/ /*|0x4|*/ float& oPct);

  // non-virtual functions --------------------------
  void __thiscall CMapEntity(struct CMapEntity&);
  void __thiscall CMapEntity::CMapEntity();
  void __thiscall CMapEntity::~CMapEntity();
  int __thiscall CMapEntity::QueryMapObjZoneName(/*<regrel ebp+0x8>*/ /*|0x4|*/ char*& zoneName);
  int __thiscall CMapEntity::QueryMapObjSubzoneName(/*<regrel ebp+0x8>*/ /*|0x4|*/ char*& subzoneName, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int& subzoneId);
  int __thiscall CMapEntity::QueryMapObjFileName(/*<regrel ebp+0x8>*/ /*|0x4|*/ char*& fileName);
  int __thiscall CMapEntity::QueryMapObjListenerId(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int& listenerId);
  int __thiscall CMapEntity::QueryMapObjFog(/*<regrel ebp+0x8>*/ /*|0x4|*/ class SMOFog::Fogs& oFog, /*<regrel ebp+0xc>*/ /*|0x4|*/ float& oPct);
  void __thiscall CMapEntity::QueryLiquidSounds(/*<regrel ebp+0x8>*/ /*|0x4|*/ int* lbool, /*<regrel ebp+0xc>*/ /*|0x4|*/ class NTempest::C3Vector* ldelta, /*<regrel ebp+0x10>*/ /*|0x4|*/ float* ldsquared, /*<regrel ebp+0x14>*/ /*|0x4|*/ unsigned int& closestExtLevel);
  int __thiscall QueryMapGroundType(unsigned int&);
  unsigned char __thiscall CMapEntity::QueryMapObjMinimap(/*<regrel ebp+0x8>*/ /*|0x4|*/ class NTempest::CAaBox& aaBox, /*<regrel ebp+0xc>*/ /*|0x4|*/ class TSStackArray<CWorld::MinimapQuad>& quads);
  unsigned char __thiscall CMapEntity::QueryMapObjIDs(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int& wmoID, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int& instanceID, /*<regrel ebp+0x10>*/ /*|0x4|*/ unsigned int& groupID);
  unsigned char __thiscall CMapEntity::QueryMapObjMatrix(/*<regrel ebp+0x8>*/ /*|0x4|*/ class NTempest::C44Matrix* mtx, /*<regrel ebp+0xc>*/ /*|0x4|*/ class NTempest::C44Matrix* invMtx);
  unsigned char __thiscall CMapEntity::QueryMapObjAreaTable(/*<regrel ebp+0x8>*/ /*|0x4|*/ class WMOAreaTableRec*& subzoneRec, /*<regrel ebp+0xc>*/ /*|0x4|*/ class WMOAreaTableRec*& globalRec);
  void __thiscall CMapEntity::UpdateMapObjLiquid();
  void __thiscall CMapEntity::Tick();
  struct CMapEntity& __thiscall operator=(struct CMapEntity&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ void __thiscall CMapEntity::QueryLightmap(/*<regrel ebp+0x8>*/ /*|0x4|*/ class CMapObjDef* mapObjDef, /*<regrel ebp+0xc>*/ /*|0x4|*/ class CMapObjGroup* mapObjGroup);
};
// <size 0xe0>

struct SWFlowv {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x10|*/ class NTempest::CAaSphere sphere;
  /*<thisrel this+0x10>*/ /*|0xc|*/ class NTempest::C3Vector dir;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ float velocity;
  /*<thisrel this+0x20>*/ /*|0x4|*/ float amplitude;
  /*<thisrel this+0x24>*/ /*|0x4|*/ float frequency;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall SWFlowv::SWFlowv();
  void __thiscall ~SWFlowv();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x28>

struct SMOLightmapTex {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8000|*/ unsigned char texels[32768];
  /*<thisrel this+0x8000>*/ /*|0x4|*/ unsigned char inMemPad[4];
  /*<thisrel this+0x8000>*/ /*|0x4|*/ class CGxTex* gxTexture;
  /*<thisrel this+0x8000>*/ /*|0x4|*/ struct HTEXTURE__* hTexture;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8004>

struct SMOFog {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int flags;
  /*<thisrel this+0x4>*/ /*|0xc|*/ class NTempest::C3Vector pos;
  /*<thisrel this+0x10>*/ /*|0x4|*/ float start;
  /*<thisrel this+0x14>*/ /*|0x4|*/ float end;
  /*<thisrel this+0x18>*/ /*|0x18|*/ class SMOFog::Fogs fogs;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall SMOFog(struct SMOFog&);
  void __thiscall SMOFog();
  struct SMOFog& __thiscall operator=(struct SMOFog&);
  void __thiscall ~SMOFog();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x30>

struct SMOFog::Fog {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ float end;
  /*<thisrel this+0x4>*/ /*|0x4|*/ float startScalar;
  /*<thisrel this+0x8>*/ /*|0x4|*/ class NTempest::CImVector color;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall Blend(struct SMOFog::Fog&, float);
  void __thiscall Fog(struct SMOFog::Fog&);
  void __thiscall Fog();
  struct SMOFog::Fog& __thiscall SMOFog::Fog::operator=(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct SMOFog::Fog& __that);
  void __thiscall ~Fog();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xc>

struct WaterRadWave : class TSLinkedNode<WaterRadWave>  {

  // static data ------------------------------------
  static /*<rva 0x410cf0>*/ /*|0x4|*/ float PERTURB;

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ float decay;
  /*<thisrel this+0xc>*/ /*|0x4|*/ float curTime;
  /*<thisrel this+0x10>*/ /*|0x4|*/ float ra;
  /*<thisrel this+0x14>*/ /*|0x4|*/ float rb;
  /*<thisrel this+0x18>*/ /*|0x4|*/ float ooLength;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ float ooTimeLength;
  /*<thisrel this+0x20>*/ /*|0xc|*/ class NTempest::C3Vector pos;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ float length;
  /*<thisrel this+0x30>*/ /*|0x4|*/ float timeLength;
  /*<thisrel this+0x34>*/ /*|0x4|*/ float amplitude;
  /*<thisrel this+0x38>*/ /*|0x4|*/ float velocity;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ float frequency;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<WaterRadWave>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall WaterRadWave::Init(/*<regrel ebp+0x8>*/ /*|0x4|*/ class NTempest::C3Vector& p_pos, /*<regrel ebp+0xc>*/ /*|0x4|*/ float len, /*<regrel ebp+0x10>*/ /*|0x4|*/ float time, /*<regrel ebp+0x14>*/ /*|0x4|*/ float amp, /*<regrel ebp+0x18>*/ /*|0x4|*/ float vel, /*<regrel ebp+0x1c>*/ /*|0x4|*/ float freq);
  int __thiscall WaterRadWave::Update(/*<regrel ebp+0x8>*/ /*|0x4|*/ float deltat);
  void __thiscall WaterRadWave(struct WaterRadWave&);
  void __thiscall WaterRadWave();
  struct WaterRadWave& __thiscall operator=(struct WaterRadWave&);
  void __thiscall ~WaterRadWave();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x40>

struct SMOLight {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char type;
  /*<thisrel this+0x1>*/ /*|0x1|*/ unsigned char useAtten;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned char pad[2];
  /*<thisrel this+0x4>*/ /*|0x4|*/ class NTempest::CImVector color;
  /*<thisrel this+0x8>*/ /*|0xc|*/ class NTempest::C3Vector position;
  /*<thisrel this+0x14>*/ /*|0x4|*/ float intensity;
  /*<thisrel this+0x18>*/ /*|0x4|*/ float attenStart;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ float attenEnd;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall SMOLight(struct SMOLight&);
  void __thiscall SMOLight();
  struct SMOLight& __thiscall operator=(struct SMOLight&);
  void __thiscall ~SMOLight();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x20>

struct SMMapHeader {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long nDoodadNames;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long offsDoodadNames;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long nMapObjNames;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long offsMapObjNames;
  /*<thisrel this+0x10>*/ /*|0x70|*/ unsigned char pad[112];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x80>

struct SMODoodadDef {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long nameIndex;
  /*<thisrel this+0x4>*/ /*|0xc|*/ class NTempest::C3Vector pos;
  /*<thisrel this+0x10>*/ /*|0x10|*/ class NTempest::C4Quaternion rot;
  /*<thisrel this+0x20>*/ /*|0x4|*/ float scale;
  /*<thisrel this+0x24>*/ /*|0x4|*/ class NTempest::CImVector color;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall SMODoodadDef(struct SMODoodadDef&);
  void __thiscall SMODoodadDef();
  struct SMODoodadDef& __thiscall operator=(struct SMODoodadDef&);
  void __thiscall ~SMODoodadDef();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x28>

struct WaterVert {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xc|*/ class NTempest::C3Vector direction;
  /*<thisrel this+0xc>*/ /*|0x4|*/ float magnitude;
  /*<thisrel this+0x10>*/ /*|0x4|*/ float amplitude;
  /*<thisrel this+0x14>*/ /*|0x4|*/ float height;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall WaterVert(class NTempest::C3Vector&, float, float, float);
  void __thiscall WaterVert();
  void __thiscall ~WaterVert();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x18>

struct LODArrays {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x14|*/ class TSGrowableArray<NTempest::C2Vector> geov;
  /*<thisrel this+0x14>*/ /*|0x14|*/ class TSGrowableArray<NTempest::C2Vector> texv;
  /*<thisrel this+0x28>*/ /*|0x14|*/ class TSGrowableArray<unsigned short> idx;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ unsigned int nFixes;
  /*<thisrel this+0x40>*/ /*|0x14|*/ class TSGrowableArray<LODIndexFix> fixes;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall LODArrays::GenFixes(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int p_nFixes, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int vertsPerSide, /*<regrel ebp+0x10>*/ /*|0x4|*/ unsigned int tilesPerSide);
  void __thiscall LODArrays::GenVerts(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int lod);
  void __thiscall LODArrays(struct LODArrays&);
  void __thiscall LODArrays();
  struct LODArrays& __thiscall operator=(struct LODArrays&);
  void __thiscall ~LODArrays();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x54>

struct SMOLVert {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ struct SMOWVert waterVert;
  /*<thisrel this+0x0>*/ /*|0x8|*/ struct SMOMVert magmaVert;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct ChunkLodIdx {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x14|*/ class TSGrowableArray<unsigned short> indices;
  /*<thisrel this+0x14>*/ /*|0x10|*/ struct ChunkLodIdx::StartCount edges[4];
  /*<thisrel this+0x24>*/ /*|0x10|*/ struct ChunkLodIdx::StartCount links[4];
  /*<thisrel this+0x34>*/ /*|0x4|*/ struct ChunkLodIdx::StartCount center;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  unsigned int __thiscall ComputeIndexCount(unsigned int);
  void __thiscall ChunkLodIdx::GenEdgeIndices(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int edgeTris, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int r1, /*<regrel ebp+0x10>*/ /*|0x4|*/ unsigned int r1Delta, /*<regrel ebp+0x14>*/ /*|0x4|*/ unsigned int r2, /*<regrel ebp+0x18>*/ /*|0x4|*/ unsigned int r2Delta, /*<regrel ebp+0x1c>*/ /*|0x4|*/ unsigned short* idx);
  void __thiscall ChunkLodIdx::GenLinkIndices(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int numQuads, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int r1, /*<regrel ebp+0x10>*/ /*|0x4|*/ unsigned int r1Delta, /*<regrel ebp+0x14>*/ /*|0x4|*/ unsigned int r2, /*<regrel ebp+0x18>*/ /*|0x4|*/ unsigned int r2Delta, /*<regrel ebp+0x1c>*/ /*|0x4|*/ unsigned short* idx);
  void __thiscall ChunkLodIdx::GenCenterIndices(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int centerQuads, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int rowVerts, /*<regrel ebp+0x10>*/ /*|0x4|*/ unsigned short* idx);
  void __thiscall ChunkLodIdx::GenCenterIndicesRow(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int nQuads, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int* r, /*<regrel ebp+0x10>*/ /*|0x4|*/ unsigned int i0, /*<regrel ebp+0x14>*/ /*|0x4|*/ unsigned int i1, /*<regrel ebp+0x18>*/ /*|0x4|*/ unsigned short*& idx);
  void __thiscall ChunkLodIdx::GenIndices(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int lod);
  void __thiscall ChunkLodIdx(struct ChunkLodIdx&);
  void __thiscall ChunkLodIdx();
  struct ChunkLodIdx& __thiscall operator=(struct ChunkLodIdx&);
  void __thiscall ~ChunkLodIdx();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x38>

struct SWVert {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char depth;
  /*<thisrel this+0x1>*/ /*|0x1|*/ unsigned char flow0Pct;
  /*<thisrel this+0x2>*/ /*|0x1|*/ unsigned char flow1Pct;
  /*<thisrel this+0x3>*/ /*|0x1|*/ unsigned char filler;
  /*<thisrel this+0x4>*/ /*|0x4|*/ float height;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct SMVert {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short s;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short t;
  /*<thisrel this+0x4>*/ /*|0x4|*/ float height;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct CChunkLiquid::UserArg {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ class CChunkLiquid* liquid;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int liquidType;
  /*<thisrel this+0x8>*/ /*|0x2|*/ unsigned short indexCount;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall UserArg(class CChunkLiquid*, unsigned int);

  // virtual functions ------------------------------
};
// <size 0xc>

struct ClipInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x18|*/ float bc[6];
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned int mask;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned int filler;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ClipInfo::Set(/*<regrel ebp+0x8>*/ /*|0x4|*/ class NTempest::C3Vector* v);

  // virtual functions ------------------------------
};
// <size 0x20>

struct ClipFrame {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ class NTempest::C3Vector** points;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct ClipInfo** info;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int count;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ClipFrame(class NTempest::C3Vector**, struct ClipInfo**, unsigned int);

  // virtual functions ------------------------------
};
// <size 0xc>

struct AREAHASHOBJECT : class TSHashObject<AREAHASHOBJECT,AREAHASHKEY>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x20>*/ /*|0x4|*/ class AreaTableRec* rec;
  /*<thisrel this+0x24>*/ /*|0x4|*/ int midi;
  /*<thisrel this+0x28>*/ /*|0x4|*/ int midiUnderwater;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ int zoneMusic;
  /*<thisrel this+0x30>*/ /*|0x4|*/ int reverb;
  /*<thisrel this+0x34>*/ /*|0x4|*/ int reverbUnderwater;
  /*<thisrel this+0x38>*/ /*|0x4|*/ int zoneIntroID;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ int zoneIntroIDPriority;
  /*<thisrel this+0x40>*/ /*|0x4|*/ unsigned int continent;
  /*<thisrel this+0x44>*/ /*|0x4|*/ unsigned int area;
  /*<thisrel this+0x48>*/ /*|0x4|*/ unsigned int subArea;

  // base classes -----------------------------------
  // baseclass class TSHashObject<AREAHASHOBJECT,AREAHASHKEY>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall AREAHASHOBJECT(struct AREAHASHOBJECT&);
  void __thiscall AREAHASHOBJECT();
  struct AREAHASHOBJECT* __thiscall AREAHASHOBJECT::GetParent();
  struct AREAHASHOBJECT& __thiscall operator=(struct AREAHASHOBJECT&);
  void __thiscall ~AREAHASHOBJECT();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x4c>

struct LightGroup {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x10|*/ class TSFixedArray<LightData> m_lightData;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall LightGroup(struct LightGroup&);
  void __thiscall LightGroup();
  struct LightGroup& __thiscall operator=(struct LightGroup&);
  void __thiscall ~LightGroup();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x10>

struct LightDataItem {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x120|*/ class TSFixedArray<LightMarker> m_highlightMarker[18];
  /*<thisrel this+0x120>*/ /*|0x10|*/ class TSFixedArray<LightDataSky> m_skyData;
  /*<thisrel this+0x130>*/ /*|0x10|*/ class TSFixedArray<LightDataFog> m_fogData;
  /*<thisrel this+0x140>*/ /*|0x4|*/ int m_highlightSky;
  /*<thisrel this+0x144>*/ /*|0x4|*/ int m_cloudMask;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall LightDataItem::LightDataItem(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct LightDataItem& __that);
  void __thiscall LightDataItem();
  struct LightDataItem& __thiscall operator=(struct LightDataItem&);
  void __thiscall LightDataItem::~LightDataItem();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x148>

struct LightMarker {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int time;
  /*<thisrel this+0x4>*/ /*|0x4|*/ class NTempest::CImVector color;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall LightMarker::LightMarker(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct LightMarker& __that);
  void __thiscall LightMarker::LightMarker();
  struct LightMarker& __thiscall operator=(struct LightMarker&);
  void __thiscall ~LightMarker();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x8>

struct DiskLightDataItem {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x48|*/ int m_highlightCount[18];
  /*<thisrel this+0x48>*/ /*|0x1200|*/ struct LightMarker m_highlightMarker[18][32];
  /*<thisrel this+0x1248>*/ /*|0x80|*/ float m_fogEnd[32];
  /*<thisrel this+0x12c8>*/ /*|0x80|*/ float m_fogStartScaler[32];
  /*<thisrel this+0x1348>*/ /*|0x4|*/ int m_highlightSky;
  /*<thisrel this+0x134c>*/ /*|0x200|*/ float m_skyData[4][32];
  /*<thisrel this+0x154c>*/ /*|0x4|*/ int m_cloudMask;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall DiskLightDataItem(struct DiskLightDataItem&);
  void __thiscall DiskLightDataItem();
  struct DiskLightDataItem& __thiscall operator=(struct DiskLightDataItem&);
  void __thiscall ~DiskLightDataItem();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x1550>

struct CurrentLight {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ class NTempest::CImVector DirectColor;
  /*<thisrel this+0x4>*/ /*|0x4|*/ class NTempest::CImVector AmbientColor;
  /*<thisrel this+0x8>*/ /*|0x18|*/ class NTempest::CImVector SkyArray[6];
  /*<thisrel this+0x20>*/ /*|0x14|*/ class NTempest::CImVector CloudArray[5];
  /*<thisrel this+0x34>*/ /*|0x10|*/ class NTempest::CImVector WaterArray[4];
  /*<thisrel this+0x44>*/ /*|0x4|*/ float FogEnd;
  /*<thisrel this+0x48>*/ /*|0x4|*/ float FogStartScalar;
  /*<thisrel this+0x4c>*/ /*|0x4|*/ class NTempest::CImVector ShadowOpacity;
  /*<thisrel this+0x50>*/ /*|0x4|*/ float Darkness;
  /*<thisrel this+0x54>*/ /*|0x10|*/ float CloudData[4];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CurrentLight(struct CurrentLight&);
  void __thiscall CurrentLight::CurrentLight();
  struct CurrentLight& __thiscall operator=(struct CurrentLight&);
  void __thiscall ~CurrentLight();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x64>

struct LightData {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x40|*/ struct LightListData m_lightlist;
  /*<thisrel this+0x40>*/ /*|0x148|*/ struct LightDataItem m_lightdata;
  /*<thisrel this+0x188>*/ /*|0x148|*/ struct LightDataItem m_stormdata;
  /*<thisrel this+0x2d0>*/ /*|0x148|*/ struct LightDataItem m_lightdataWater;
  /*<thisrel this+0x418>*/ /*|0x148|*/ struct LightDataItem m_stormdataWater;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall LightData(struct LightData&);
  void __thiscall LightData::LightData();
  struct LightData& __thiscall operator=(struct LightData&);
  void __thiscall ~LightData();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x560>

struct LightDataSky {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x10|*/ float m_skyData[4];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct SetupTextureHandles::__unnamed_101_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int xIncrement;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int yIncrement;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct MINIMAPMD5NAME : class TSHashObject<MINIMAPMD5NAME,HASHKEY_STRI>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x28|*/ char filename[40];

  // base classes -----------------------------------
  // baseclass class TSHashObject<MINIMAPMD5NAME,HASHKEY_STRI>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MINIMAPMD5NAME(struct MINIMAPMD5NAME&);
  void __thiscall MINIMAPMD5NAME();
  struct MINIMAPMD5NAME& __thiscall operator=(struct MINIMAPMD5NAME&);
  void __thiscall ~MINIMAPMD5NAME();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x40>

struct DNFogInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ class NTempest::CImVector color;
  /*<thisrel this+0x4>*/ /*|0x4|*/ float start;
  /*<thisrel this+0x8>*/ /*|0x4|*/ float end;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall DNFogInfo(struct DNFogInfo&);
  void __thiscall DNFogInfo();
  struct DNFogInfo& __thiscall operator=(struct DNFogInfo&);
  void __thiscall ~DNFogInfo();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0xc>

struct DNLightInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xc|*/ class NTempest::C3Vector dir;
  /*<thisrel this+0xc>*/ /*|0x4|*/ class NTempest::CImVector dirColor;
  /*<thisrel this+0x10>*/ /*|0x4|*/ class NTempest::CImVector ambColor;
  /*<thisrel this+0x14>*/ /*|0x4|*/ class NTempest::CImVector windowDirColor;
  /*<thisrel this+0x18>*/ /*|0x4|*/ class NTempest::CImVector windowAmbColor;
  /*<thisrel this+0x1c>*/ /*|0x10|*/ class NTempest::C4Vector shaderShadowColor;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall DNLightInfo(struct DNLightInfo&);
  void __thiscall DNLightInfo();
  struct DNLightInfo& __thiscall operator=(struct DNLightInfo&);
  void __thiscall ~DNLightInfo();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x2c>

struct DNClouds::Vector3us {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short x;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short y;
  /*<thisrel this+0x4>*/ /*|0x2|*/ unsigned short z;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x6>

struct DNClouds::Octave {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x6|*/ struct DNClouds::Vector3us value;
  /*<thisrel this+0x6>*/ /*|0x6|*/ struct DNClouds::Vector3us delta;
  /*<thisrel this+0xc>*/ /*|0x6|*/ struct DNClouds::Vector3us min;
  /*<thisrel this+0x12>*/ /*|0x6|*/ struct DNClouds::Vector3us max;
  /*<thisrel this+0x18>*/ /*|0x4|*/ float amplitude;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned int permy00;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned int permy10;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned int permy01;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned int permy11;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ float x000;
  /*<thisrel this+0x30>*/ /*|0x4|*/ float x100;
  /*<thisrel this+0x34>*/ /*|0x4|*/ float x010;
  /*<thisrel this+0x38>*/ /*|0x4|*/ float x110;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ float x001;
  /*<thisrel this+0x40>*/ /*|0x4|*/ float x101;
  /*<thisrel this+0x44>*/ /*|0x4|*/ float x011;
  /*<thisrel this+0x48>*/ /*|0x4|*/ float x111;
  /*<thisrel this+0x4c>*/ /*|0x4|*/ unsigned int iv;
  /*<thisrel this+0x50>*/ /*|0x4|*/ unsigned int lastiv;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x54>

struct LightListData {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ class NTempest::C2iVector m_chunk;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int m_chunkRadius;
  /*<thisrel this+0xc>*/ /*|0xc|*/ class NTempest::C3Vector m_lightLocation;
  /*<thisrel this+0x18>*/ /*|0x4|*/ float m_lightRadius;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ float m_lightDropoff;
  /*<thisrel this+0x20>*/ /*|0x20|*/ char m_lightName[32];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall LightListData();
  void __thiscall LightListData::~LightListData();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x40>

struct __unnamed_102_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ float startProgress;
  /*<thisrel this+0x4>*/ /*|0x4|*/ float endProgress;
  /*<thisrel this+0x8>*/ /*|0x4|*/ float heightScale;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct __unnamed_103_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ float startProgress;
  /*<thisrel this+0x4>*/ /*|0x4|*/ float endProgress;
  /*<thisrel this+0x8>*/ /*|0x4|*/ float startHeightScale;
  /*<thisrel this+0xc>*/ /*|0x4|*/ float endHeightScaleScale;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct __unnamed_104_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ float startProgress;
  /*<thisrel this+0x4>*/ /*|0x4|*/ float endProgress;
  /*<thisrel this+0x8>*/ /*|0x4|*/ float startAlpha;
  /*<thisrel this+0xc>*/ /*|0x4|*/ float endAlpha;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct __unnamed_105_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int r;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int g;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int b;
  /*<thisrel this+0xc>*/ /*|0x4|*/ float startProgress;
  /*<thisrel this+0x10>*/ /*|0x4|*/ float endProgress;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct WORLDTEXTCREATEPARAMS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ float ascendDistance;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int totalTime;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int fadeInTime;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int fadeOutTime;
  /*<thisrel this+0x10>*/ /*|0x4|*/ class NTempest::CImVector fontColor;
  /*<thisrel this+0x14>*/ /*|0x8|*/ class NTempest::C2Vector shadowOffset;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ class NTempest::CImVector shadowColor;
  /*<thisrel this+0x20>*/ /*|0x4|*/ float charSpacing;
  /*<thisrel this+0x24>*/ /*|0x4|*/ float heightScale;
  /*<thisrel this+0x28>*/ /*|0x4|*/ float zOffset;
  /*<thisrel this+0x2c>*/ /*|0x8|*/ class NTempest::C2Vector border;
  /*<thisrel this+0x34>*/ /*|0x4|*/ float startFontHeight;
  /*<thisrel this+0x38>*/ /*|0x4|*/ float endFontHeight;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ unsigned int enlargeTime;
  /*<thisrel this+0x40>*/ /*|0x4|*/ unsigned int shrinkTime;
  /*<thisrel this+0x44>*/ /*|0x4|*/ unsigned int flags;
  /*<thisrel this+0x48>*/ /*|0x104|*/ char fontName[260];
  /*<thisrel this+0x14c>*/ /*|0x4|*/ float fontHeight;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall WORLDTEXTCREATEPARAMS::Defaults();
  void __thiscall Clear();
  void __thiscall WORLDTEXTCREATEPARAMS(struct WORLDTEXTCREATEPARAMS&);
  void __thiscall WORLDTEXTCREATEPARAMS::WORLDTEXTCREATEPARAMS();
  void __thiscall ~WORLDTEXTCREATEPARAMS();
  struct WORLDTEXTCREATEPARAMS& __thiscall operator=(struct WORLDTEXTCREATEPARAMS&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x150>

struct WORLDTEXTSTRING : class CHandleObject  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ enum WORLDTEXTTYPE worldTextType;
  /*<thisrel this+0xc>*/ /*|0x150|*/ struct WORLDTEXTCREATEPARAMS params;
  /*<thisrel this+0x15c>*/ /*|0x4|*/ unsigned int elapsedTime;
  /*<thisrel this+0x160>*/ /*|0x4|*/ unsigned int totalTime;
  /*<thisrel this+0x168>*/ /*|0x8|*/ unsigned __int64 object;
  /*<thisrel this+0x170>*/ /*|0x4|*/ float textWidth;
  /*<thisrel this+0x174>*/ /*|0x4|*/ float textHeight;
  /*<thisrel this+0x178>*/ /*|0x4|*/ float heightScale;
  /*<thisrel this+0x17c>*/ /*|0x4|*/ float zOffset;
  /*<thisrel this+0x180>*/ /*|0x8|*/ class TSLink<WORLDTEXTSTRING> link;
  /*<thisrel this+0x188>*/ /*|0x4|*/ int hidden;
  /*<thisrel this+0x18c>*/ /*|0x4|*/ unsigned int m_flags;
  /*<thisrel this+0x190>*/ /*|0x4|*/ struct CGxString* string;
  /*<thisrel this+0x194>*/ /*|0x4|*/ float savedStringHeight;
  /*<thisrel this+0x198>*/ /*|0x40|*/ char savedStringText[64];

  // base classes -----------------------------------
  // baseclass class CHandleObject
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall WORLDTEXTSTRING(struct WORLDTEXTSTRING&);
  void __thiscall WORLDTEXTSTRING();
  void __thiscall WORLDTEXTSTRING::Update(/*<regrel ebp+0x8>*/ /*|0x4|*/ float elapsed, /*<regrel ebp+0xc>*/ /*|0x4|*/ class NTempest::C44Matrix& matrix, /*<regrel ebp+0x10>*/ /*|0x4|*/ class NTempest::C3Vector* basePosition);
  void __thiscall WORLDTEXTSTRING::Reset();
  void __thiscall WORLDTEXTSTRING::CalculateNewColor(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int elapsed);
  void __thiscall WORLDTEXTSTRING::CalculateTextHeight(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int elapsedTime);
  void __thiscall WORLDTEXTSTRING::CalculateNewPosition(/*<regrel ebp+0x8>*/ /*|0x4|*/ class NTempest::C4Vector& worldPosition, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int elapsedTime, /*<regrel ebp+0x10>*/ /*|0x4|*/ class NTempest::C4Vector& textPos, /*<regrel ebp+0x14>*/ /*|0x4|*/ class NTempest::C44Matrix& matrix, /*<regrel ebp+0x18>*/ /*|0x4|*/ int worldPositionSpecified);
  void __thiscall WORLDTEXTSTRING::UpdatePosition(/*<regrel ebp+0x8>*/ /*|0x4|*/ class NTempest::C4Vector& worldPosition, /*<regrel ebp+0xc>*/ /*|0x4|*/ unsigned int elapsedTime, /*<regrel ebp+0x10>*/ /*|0x4|*/ class NTempest::C4Vector& textPos);
  void __thiscall WORLDTEXTSTRING::UpdateStringHeight(/*<regrel ebp+0x8>*/ /*|0x4|*/ float height);
  void __thiscall WORLDTEXTSTRING::RecreateString();
  void __thiscall WORLDTEXTSTRING::Hide(/*<regrel ebp+0x8>*/ /*|0x4|*/ int hide);
  void __thiscall WORLDTEXTSTRING::Render();
  void __thiscall WORLDTEXTSTRING::InitTextFrame(/*<regrel ebp+0x8>*/ /*|0x4|*/ char* text);
  struct WORLDTEXTSTRING& __thiscall operator=(struct WORLDTEXTSTRING&);
  void __thiscall __local_vftable_ctor_closure();

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ void __thiscall ~WORLDTEXTSTRING();
  virtual /*<vtableoff 0x0>*/ void* __thiscall __vecDelDtor(unsigned int);
};
// <size 0x1d8>

struct WorldTextInitialize::__unnamed_106_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int fadeInTime;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int fadeOutTime;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int totalTime;
  /*<thisrel this+0xc>*/ /*|0x4|*/ float ascendDist;
  /*<thisrel this+0x10>*/ /*|0x4|*/ float smallFontHeight;
  /*<thisrel this+0x14>*/ /*|0x4|*/ float largeFontontHeight;
  /*<thisrel this+0x18>*/ /*|0x4|*/ float heightScale;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ float heightOffset;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned int enlargeTime;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned int shrinkTime;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x28>

struct HWORLDTEXT__ : struct HOBJECT__  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x4>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------
  // baseclass struct HOBJECT__
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct CVARINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ enum UNITNAME_SHOWTYPE_GROUPS group;
  /*<thisrel this+0x4>*/ /*|0x4|*/ enum UNIT_UNITNAME_SHOWTYPE showType;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct UNITNAMESTRINGS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ char* cvarName;
  /*<thisrel this+0x4>*/ /*|0x4|*/ char* cvarDefaultValue;
  /*<thisrel this+0x8>*/ /*|0x4|*/ char* cvarHelp;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct HPLAYERNAME__ : struct HOBJECT__  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x4>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------
  // baseclass struct HOBJECT__
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct SWING : class TSLinkedNode<SWING>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x14|*/ class TSGrowableArray<VERTEX> m_trail;
  /*<thisrel this+0x1c>*/ /*|0x14|*/ class TSGrowableArray<unsigned short> m_vertexIndices;
  /*<thisrel this+0x30>*/ /*|0x4|*/ unsigned int m_flags;
  /*<thisrel this+0x34>*/ /*|0x40|*/ class NTempest::C44Matrix m_lastMatrix;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<SWING>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall SWING(struct SWING&);
  void __thiscall SWING::SWING();
  void __thiscall SWING::~SWING();
  void __thiscall SWING::Recycle();
  void __thiscall SWING::Render();
  void __thiscall SWING::AddVerts(/*<regrel ebp+0x8>*/ /*|0x4|*/ class NTempest::C44Matrix& basisMatrix, /*<regrel ebp+0xc>*/ /*|0x4|*/ class NTempest::C3Vector& bottom, /*<regrel ebp+0x10>*/ /*|0x4|*/ class NTempest::C3Vector& top, /*<regrel ebp+0x14>*/ /*|0x4|*/ class NTempest::CImVector& color, /*<regrel ebp+0x18>*/ /*|0x1|*/ unsigned char currentAlpha, /*<regrel ebp+0x1c>*/ /*|0x4|*/ class NTempest::C3Vector& cameraPos);
  struct SWING& __thiscall operator=(struct SWING&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x74>

struct VERTEX {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xc|*/ class NTempest::C3Vector v;
  /*<thisrel this+0xc>*/ /*|0x4|*/ class NTempest::CImVector c;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall VERTEX::VERTEX(/*<regrel ebp+0x8>*/ /*|0x4|*/ struct VERTEX& __that);
  void __thiscall VERTEX::VERTEX();
  struct VERTEX& __thiscall operator=(struct VERTEX&);
  void __thiscall VERTEX::~VERTEX();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x10>

struct TAXILINE {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ class NTempest::C2Vector src;
  /*<thisrel this+0x8>*/ /*|0x8|*/ class NTempest::C2Vector dst;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall TAXILINE();
  void __thiscall TAXILINE::~TAXILINE();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x10>

struct ITEMCOOLDOWNHASHNODE : class TSHashObject<ITEMCOOLDOWNHASHNODE,HASHKEY_NONE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x4|*/ int spellID;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned long startTime;
  /*<thisrel this+0x20>*/ /*|0x1|*/ unsigned char needsEvent;

  // base classes -----------------------------------
  // baseclass class TSHashObject<ITEMCOOLDOWNHASHNODE,HASHKEY_NONE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ITEMCOOLDOWNHASHNODE(struct ITEMCOOLDOWNHASHNODE&);
  void __thiscall ITEMCOOLDOWNHASHNODE();
  struct ITEMCOOLDOWNHASHNODE& __thiscall operator=(struct ITEMCOOLDOWNHASHNODE&);
  void __thiscall ~ITEMCOOLDOWNHASHNODE();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x24>

struct FindAmmoData {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int ammoType;
  /*<thisrel this+0x4>*/ /*|0x1|*/ unsigned char exoticAmmo;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct SPELLHISTORY : class TSLinkedNode<SPELLHISTORY>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ int spellID;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int itemID;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long recoveryStart;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned int recoveryTime;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int category;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned long categoryRecoveryStart;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned int categoryRecoveryTime;
  /*<thisrel this+0x24>*/ /*|0x1|*/ unsigned char onHold;
  /*<thisrel this+0x28>*/ /*|0x4|*/ int startRecoveryCategory;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ unsigned int startRecoveryTime;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<SPELLHISTORY>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall SPELLHISTORY(struct SPELLHISTORY&);
  void __thiscall SPELLHISTORY();
  struct SPELLHISTORY& __thiscall operator=(struct SPELLHISTORY&);
  void __thiscall ~SPELLHISTORY();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x30>

struct BlizzardObject : class TSLinkedNode<BlizzardObject>  {

  // static data ------------------------------------
  static /*<rva 0xcb31e4>*/ /*|0xc|*/ class TSList<BlizzardObject::Shard,TSGetLink<BlizzardObject::Shard> > shardPool;

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct HMODEL__* shardModel;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long hWorldObject;
  /*<thisrel this+0x10>*/ /*|0xc|*/ class NTempest::C3Vector groundPos;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ float radius;
  /*<thisrel this+0x20>*/ /*|0x4|*/ float numEmitted;
  /*<thisrel this+0x24>*/ /*|0x4|*/ float emissionRate;
  /*<thisrel this+0x28>*/ /*|0x1|*/ unsigned char dead;
  /*<thisrel this+0x2c>*/ /*|0x10|*/ class NTempest::CAaSphere boundSphere;
  /*<thisrel this+0x3c>*/ /*|0xc|*/ class TSList<BlizzardObject::Shard,TSGetLink<BlizzardObject::Shard> > shards;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<BlizzardObject>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------
  static struct BlizzardObject::Shard* __fastcall BlizzardObject::AllocShard();
  static void __fastcall BlizzardObject::FreeShard(/*<register ecx>*/ /*|0x4|*/ struct BlizzardObject::Shard*& shard);
  static int __fastcall BlizzardObject::ShardSeqFinished(/*<register ecx>*/ /*|0x4|*/ void* param);
  static void __fastcall BlizzardObject::WorldObjectRender(/*<register ecx>*/ /*|0x4|*/ void* param, /*<register edx>*/ /*|0x4|*/ class NTempest::C44Matrix& mtx);

  // non-virtual functions --------------------------
  void __thiscall UpdateBounds();
  void __thiscall BlizzardObject::Init(/*<regrel ebp+0x8>*/ /*|0x4|*/ class NTempest::C3Vector& pos, /*<regrel ebp+0xc>*/ /*|0x4|*/ char* modelName, /*<regrel ebp+0x10>*/ /*|0x4|*/ float pRadius, /*<regrel ebp+0x14>*/ /*|0x4|*/ float pEmissionRate);
  void __thiscall BlizzardObject::Destroy();
  void __thiscall BlizzardObject::Update();
  void __thiscall BlizzardObject::Render(/*<regrel ebp+0x8>*/ /*|0x4|*/ class NTempest::C44Matrix& mtx);
  void __thiscall BlizzardObject(struct BlizzardObject&);
  void __thiscall BlizzardObject();
  struct BlizzardObject& __thiscall operator=(struct BlizzardObject&);
  void __thiscall ~BlizzardObject();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x48>

struct BlizzardObject::Shard : class TSLinkedNode<BlizzardObject::Shard>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0xc|*/ class NTempest::C3Vector pos;
  /*<thisrel this+0x14>*/ /*|0x4|*/ struct HMODEL__* hModel;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long startTime;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<BlizzardObject::Shard>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall Init();
  void __thiscall Shard(struct BlizzardObject::Shard&);
  void __thiscall Shard();
  struct BlizzardObject::Shard& __thiscall operator=(struct BlizzardObject::Shard&);
  void __thiscall ~Shard();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x1c>

struct FishingLineObject : class TSLinkedNode<FishingLineObject>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x8|*/ unsigned __int64 object;
  /*<thisrel this+0x10>*/ /*|0x8|*/ unsigned __int64 caster;
  /*<thisrel this+0x18>*/ /*|0x4|*/ class NTempest::CImVector color;
  /*<thisrel this+0x1c>*/ /*|0x1|*/ unsigned char visible;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<FishingLineObject>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall FishingLineObject::Render();
  void __thiscall FishingLineObject::RenderLine(/*<regrel ebp+0x8>*/ /*|0x4|*/ class NTempest::C3Vector& p0, /*<regrel ebp+0xc>*/ /*|0x4|*/ class NTempest::C3Vector& p1, /*<regrel ebp+0x10>*/ /*|0x4|*/ class NTempest::CImVector& color);
  void __thiscall FishingLineObject(struct FishingLineObject&);
  void __thiscall FishingLineObject();
  struct FishingLineObject& __thiscall operator=(struct FishingLineObject&);
  void __thiscall ~FishingLineObject();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x20>

struct EclipseObject {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ class NTempest::CImVector color;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int startTime;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int fadeInTime;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int fadeOutTime;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int endTime;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall EclipseObject::Update(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int currentTime);
  void __thiscall EclipseObject(struct EclipseObject&);
  void __thiscall EclipseObject();
  struct EclipseObject& __thiscall operator=(struct EclipseObject&);
  void __thiscall ~EclipseObject();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x14>

struct LightningObject : class TSLinkedNode<LightningObject>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x14|*/ class TSGrowableArray<unsigned __int64> guids;
  /*<thisrel this+0x1c>*/ /*|0x14|*/ class TSGrowableArray<LightningObject::Bolt> bolts;
  /*<thisrel this+0x30>*/ /*|0x4|*/ unsigned int deathTime;
  /*<thisrel this+0x34>*/ /*|0x4|*/ float avgSegLen;
  /*<thisrel this+0x38>*/ /*|0x4|*/ float width;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ float noiseScale;
  /*<thisrel this+0x40>*/ /*|0x4|*/ float texCoordScale;
  /*<thisrel this+0x44>*/ /*|0x4|*/ float duration;
  /*<thisrel this+0x48>*/ /*|0x4|*/ struct HTEXTURE__* texture;
  /*<thisrel this+0x4c>*/ /*|0x4|*/ int spellID;
  /*<thisrel this+0x50>*/ /*|0x1|*/ unsigned char forever;
  /*<thisrel this+0x54>*/ /*|0x4|*/ int refCount;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<LightningObject>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall LightningObject(struct LightningObject&);
  void __thiscall LightningObject::LightningObject();
  void __thiscall LightningObject::~LightningObject();
  unsigned char __thiscall LightningObject::Tick(/*<regrel ebp+0x8>*/ /*|0x4|*/ unsigned int currentTime);
  void __thiscall LightningObject::AddRef();
  void __thiscall LightningObject::DelRef();
  struct LightningObject& __thiscall operator=(struct LightningObject&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x58>

struct SPELLVISUALNODE : class TSHashObject<SPELLVISUALNODE,HASHKEY_NONE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x18>*/ /*|0x3c|*/ unsigned int m_effects[15];
  /*<thisrel this+0x54>*/ /*|0x8|*/ enum ANIMENUMERATION m_anims[2];

  // base classes -----------------------------------
  // baseclass class TSHashObject<SPELLVISUALNODE,HASHKEY_NONE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall SPELLVISUALNODE(struct SPELLVISUALNODE&);
  void __thiscall SPELLVISUALNODE::SPELLVISUALNODE();
  struct SPELLVISUALNODE& __thiscall operator=(struct SPELLVISUALNODE&);
  void __thiscall ~SPELLVISUALNODE();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x5c>

struct cclass {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ char* name;
  /*<thisrel this+0x4>*/ /*|0x4|*/ char* chars;
  /*<thisrel this+0x8>*/ /*|0x4|*/ char* multis;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct cname {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ char* name;
  /*<thisrel this+0x4>*/ /*|0x1|*/ char code;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct re_guts {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int magic;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long* strip;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int csetsize;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int ncsets;
  /*<thisrel this+0x10>*/ /*|0x4|*/ struct cset* sets;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned char* setbits;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int cflags;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ long nstates;
  /*<thisrel this+0x20>*/ /*|0x4|*/ long firststate;
  /*<thisrel this+0x24>*/ /*|0x4|*/ long laststate;
  /*<thisrel this+0x28>*/ /*|0x4|*/ int iflags;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ int nbol;
  /*<thisrel this+0x30>*/ /*|0x4|*/ int neol;
  /*<thisrel this+0x34>*/ /*|0x4|*/ int ncategories;
  /*<thisrel this+0x38>*/ /*|0x4|*/ unsigned char* categories;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ char* must;
  /*<thisrel this+0x40>*/ /*|0x4|*/ int mlen;
  /*<thisrel this+0x44>*/ /*|0x4|*/ unsigned int nsub;
  /*<thisrel this+0x48>*/ /*|0x4|*/ int backrefs;
  /*<thisrel this+0x4c>*/ /*|0x4|*/ long nplus;
  /*<thisrel this+0x50>*/ /*|0x1|*/ unsigned char catspace[1];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x54>

struct parse {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ char* next;
  /*<thisrel this+0x4>*/ /*|0x4|*/ char* end;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int error;
  /*<thisrel this+0xc>*/ /*|0x4|*/ long* strip;
  /*<thisrel this+0x10>*/ /*|0x4|*/ long ssize;
  /*<thisrel this+0x14>*/ /*|0x4|*/ long slen;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int ncsalloc;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ struct re_guts* g;
  /*<thisrel this+0x20>*/ /*|0x28|*/ long pbegin[10];
  /*<thisrel this+0x48>*/ /*|0x28|*/ long pend[10];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x70>

struct cset {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned char* ptr;
  /*<thisrel this+0x4>*/ /*|0x1|*/ unsigned char mask;
  /*<thisrel this+0x5>*/ /*|0x1|*/ unsigned char hash;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int smultis;
  /*<thisrel this+0xc>*/ /*|0x4|*/ char* multis;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct smat {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct re_guts* g;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int eflags;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct regmatch_t* pmatch;
  /*<thisrel this+0xc>*/ /*|0x4|*/ char* offp;
  /*<thisrel this+0x10>*/ /*|0x4|*/ char* beginp;
  /*<thisrel this+0x14>*/ /*|0x4|*/ char* endp;
  /*<thisrel this+0x18>*/ /*|0x4|*/ char* coldp;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ char** lastpos;
  /*<thisrel this+0x20>*/ /*|0x4|*/ int dummy;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned int st;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned int fresh;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ unsigned int tmp;
  /*<thisrel this+0x30>*/ /*|0x4|*/ unsigned int empty;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x34>

struct lmat {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct re_guts* g;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int eflags;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct regmatch_t* pmatch;
  /*<thisrel this+0xc>*/ /*|0x4|*/ char* offp;
  /*<thisrel this+0x10>*/ /*|0x4|*/ char* beginp;
  /*<thisrel this+0x14>*/ /*|0x4|*/ char* endp;
  /*<thisrel this+0x18>*/ /*|0x4|*/ char* coldp;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ char** lastpos;
  /*<thisrel this+0x20>*/ /*|0x4|*/ int vn;
  /*<thisrel this+0x24>*/ /*|0x4|*/ char* space;
  /*<thisrel this+0x28>*/ /*|0x4|*/ char* st;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ char* fresh;
  /*<thisrel this+0x30>*/ /*|0x4|*/ char* tmp;
  /*<thisrel this+0x34>*/ /*|0x4|*/ char* empty;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x38>

struct CDataAllocator::Block {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct CDataAllocator::Block* m_next;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct CDataAllocator::Data {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct CDataAllocator::Data* m_next;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct CGCamera::__unnamed_107_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ float dist;
  /*<thisrel this+0x4>*/ /*|0x4|*/ float pitch;
  /*<thisrel this+0x8>*/ /*|0x4|*/ float yaw;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct DEBUGHITROLLINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x110|*/ struct ATTACKROUNDINFO attackInfo;
  /*<thisrel this+0x110>*/ /*|0x4|*/ unsigned int attackFlags;
  /*<thisrel this+0x114>*/ /*|0x4|*/ float range;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall DEBUGHITROLLINFO(struct DEBUGHITROLLINFO&);
  void __thiscall DEBUGHITROLLINFO();
  struct DEBUGHITROLLINFO& __thiscall operator=(struct DEBUGHITROLLINFO&);
  void __thiscall ~DEBUGHITROLLINFO();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x118>

struct LightningObject::Bolt {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short srcGuidSub;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short dstGuidSub;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int birthTime;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int deathTime;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int boltID;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct RENDERCALLBACKNODE : class TSLinkedNode<RENDERCALLBACKNODE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ void  (callback*)(void*);
  /*<thisrel this+0xc>*/ /*|0x4|*/ void* param;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<RENDERCALLBACKNODE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall RENDERCALLBACKNODE(struct RENDERCALLBACKNODE&);
  void __thiscall RENDERCALLBACKNODE();
  struct RENDERCALLBACKNODE& __thiscall operator=(struct RENDERCALLBACKNODE&);
  void __thiscall ~RENDERCALLBACKNODE();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x10>

struct CSimpleTop::frame_layout {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int enabled;
  /*<thisrel this+0x4>*/ /*|0x4|*/ class CSimpleFrame* frame;
  /*<thisrel this+0x8>*/ /*|0x4|*/ enum FRAMEPOINT anchor;
  /*<thisrel this+0xc>*/ /*|0x8|*/ class NTempest::C2Vector last;
  /*<thisrel this+0x14>*/ /*|0x10|*/ class NTempest::CRect final;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall frame_layout();
  void __thiscall ~frame_layout();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x24>

struct TexComponentInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int m_displayID;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int m_inventoryType;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct CGGameObjectData {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int m_displayID;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int m_flags;
  /*<thisrel this+0x8>*/ /*|0x10|*/ class NTempest::C4Quaternion m_rotation;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int m_state;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned int m_timestamp;
  /*<thisrel this+0x20>*/ /*|0xc|*/ class NTempest::C3Vector m_position;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ float m_facing;
  /*<thisrel this+0x30>*/ /*|0x4|*/ unsigned int m_dynamicFlags;
  /*<thisrel this+0x34>*/ /*|0x4|*/ int m_factionTemplate;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CGGameObjectData();
  void __thiscall ~CGGameObjectData();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x38>

struct CGItemData {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ unsigned __int64 m_owner;
  /*<thisrel this+0x8>*/ /*|0x8|*/ unsigned __int64 m_containedIn;
  /*<thisrel this+0x10>*/ /*|0x8|*/ unsigned __int64 m_creator;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned int m_stackCount;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int m_expiration;
  /*<thisrel this+0x20>*/ /*|0x14|*/ int m_spellCharges[5];
  /*<thisrel this+0x34>*/ /*|0x2|*/ short m_staticFlags;
  /*<thisrel this+0x36>*/ /*|0x2|*/ short m_dynamicFlags;
  /*<thisrel this+0x38>*/ /*|0x3c|*/ struct ItemEnchantment m_enchantment[5];
  /*<thisrel this+0x74>*/ /*|0x4|*/ int pad;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CGItemData();
  struct CGItemData& __thiscall operator=(struct CGItemData&);

  // virtual functions ------------------------------
};
// <size 0x78>

struct CGContainerData {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int m_numSlots;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int m_pad;
  /*<thisrel this+0x8>*/ /*|0xa0|*/ unsigned __int64 m_slots[20];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xa8>

struct CGUnitData {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ unsigned __int64 charm;
  /*<thisrel this+0x8>*/ /*|0x8|*/ unsigned __int64 summon;
  /*<thisrel this+0x10>*/ /*|0x8|*/ unsigned __int64 charmedBy;
  /*<thisrel this+0x18>*/ /*|0x8|*/ unsigned __int64 summonedBy;
  /*<thisrel this+0x20>*/ /*|0x8|*/ unsigned __int64 createdBy;
  /*<thisrel this+0x28>*/ /*|0x8|*/ unsigned __int64 target;
  /*<thisrel this+0x30>*/ /*|0x8|*/ unsigned __int64 comboTarget;
  /*<thisrel this+0x38>*/ /*|0x8|*/ unsigned __int64 channelObject;
  /*<thisrel this+0x40>*/ /*|0x4|*/ int health;
  /*<thisrel this+0x44>*/ /*|0x10|*/ int power[4];
  /*<thisrel this+0x54>*/ /*|0x4|*/ int maxHealth;
  /*<thisrel this+0x58>*/ /*|0x10|*/ int maxPower[4];
  /*<thisrel this+0x68>*/ /*|0x4|*/ int level;
  /*<thisrel this+0x6c>*/ /*|0x4|*/ int factionTemplate;
  /*<thisrel this+0x70>*/ /*|0x1|*/ unsigned char race;
  /*<thisrel this+0x71>*/ /*|0x1|*/ unsigned char classId;
  /*<thisrel this+0x72>*/ /*|0x1|*/ unsigned char sex;
  /*<thisrel this+0x73>*/ /*|0x1|*/ unsigned char displayPower;
  /*<thisrel this+0x74>*/ /*|0x14|*/ int stats[5];
  /*<thisrel this+0x88>*/ /*|0x14|*/ int baseStats[5];
  /*<thisrel this+0x9c>*/ /*|0xc|*/ unsigned int virtualItemDisplay[3];
  /*<thisrel this+0xa8>*/ /*|0x18|*/ struct VirtualItemInfo virtualItemInfo[3];
  /*<thisrel this+0xc0>*/ /*|0x4|*/ unsigned int flags;
  /*<thisrel this+0xc4>*/ /*|0x4|*/ unsigned int coinage;
  /*<thisrel this+0xc8>*/ /*|0xe0|*/ int auras[56];
  /*<thisrel this+0x1a8>*/ /*|0x1c|*/ unsigned char auraFlags[28];
  /*<thisrel this+0x1c4>*/ /*|0x4|*/ unsigned int auraState;
  /*<thisrel this+0x1c8>*/ /*|0x18|*/ int modDamageDone[6];
  /*<thisrel this+0x1e0>*/ /*|0x18|*/ int modDamageTaken[6];
  /*<thisrel this+0x1f8>*/ /*|0x20|*/ int modCreatureDamageDone[8];
  /*<thisrel this+0x218>*/ /*|0x8|*/ unsigned int attackRoundBaseTime[2];
  /*<thisrel this+0x220>*/ /*|0x18|*/ int resistances[6];
  /*<thisrel this+0x238>*/ /*|0x4|*/ float boundingRadius;
  /*<thisrel this+0x23c>*/ /*|0x4|*/ float combatReach;
  /*<thisrel this+0x240>*/ /*|0x4|*/ float weaponReach;
  /*<thisrel this+0x244>*/ /*|0x4|*/ int displayID;
  /*<thisrel this+0x248>*/ /*|0x4|*/ int mountDisplayID;
  /*<thisrel this+0x24c>*/ /*|0x2|*/ unsigned short minDamage;
  /*<thisrel this+0x24e>*/ /*|0x2|*/ unsigned short maxDamage;
  /*<thisrel this+0x250>*/ /*|0x18|*/ int resistanceBuffModsPositive[6];
  /*<thisrel this+0x268>*/ /*|0x18|*/ int resistanceBuffModsNegative[6];
  /*<thisrel this+0x280>*/ /*|0x18|*/ int resistanceItemMods[6];
  /*<thisrel this+0x298>*/ /*|0x1|*/ unsigned char standState;
  /*<thisrel this+0x299>*/ /*|0x1|*/ unsigned char npcFlags;
  /*<thisrel this+0x29a>*/ /*|0x1|*/ unsigned char shapeshiftForm;
  /*<thisrel this+0x29b>*/ /*|0x1|*/ unsigned char weaponMode;
  /*<thisrel this+0x29c>*/ /*|0x4|*/ unsigned int petNumber;
  /*<thisrel this+0x2a0>*/ /*|0x4|*/ unsigned int petNameTimestamp;
  /*<thisrel this+0x2a4>*/ /*|0x4|*/ unsigned int petExperience;
  /*<thisrel this+0x2a8>*/ /*|0x4|*/ unsigned int petNextLevelExperience;
  /*<thisrel this+0x2ac>*/ /*|0x4|*/ unsigned int dynamicFlags;
  /*<thisrel this+0x2b0>*/ /*|0x4|*/ unsigned int emoteState;
  /*<thisrel this+0x2b4>*/ /*|0x4|*/ int channelSpell;
  /*<thisrel this+0x2b8>*/ /*|0x4|*/ int modCastingSpeed;
  /*<thisrel this+0x2bc>*/ /*|0x4|*/ int createdBySpell;
  /*<thisrel this+0x2c0>*/ /*|0x1|*/ unsigned char comboPoints;
  /*<thisrel this+0x2c1>*/ /*|0x1|*/ unsigned char bytepad1;
  /*<thisrel this+0x2c2>*/ /*|0x1|*/ unsigned char bytepad2;
  /*<thisrel this+0x2c3>*/ /*|0x1|*/ unsigned char bytepad3;
  /*<thisrel this+0x2c4>*/ /*|0x4|*/ unsigned int pad;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x2c8>

struct CLayoutFrame::__unnamed_108_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<bitfield this+0x0>*/ /*|0x4|*/ unsigned int left:0:1;
  /*<bitfield this+0x0>*/ /*|0x4|*/ unsigned int top:1:1;
  /*<bitfield this+0x0>*/ /*|0x4|*/ unsigned int right:2:1;
  /*<bitfield this+0x0>*/ /*|0x4|*/ unsigned int bottom:3:1;
  /*<bitfield this+0x0>*/ /*|0x4|*/ unsigned int centerX:4:1;
  /*<bitfield this+0x0>*/ /*|0x4|*/ unsigned int centerY:5:1;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct XMLNode::XMLAttribute {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ char* name;
  /*<thisrel this+0x4>*/ /*|0x4|*/ char* value;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct CGPlayerData {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x228|*/ unsigned __int64 invSlots[69];
  /*<thisrel this+0x228>*/ /*|0x8|*/ unsigned __int64 selection;
  /*<thisrel this+0x230>*/ /*|0x8|*/ unsigned __int64 farsightObject;
  /*<thisrel this+0x238>*/ /*|0x8|*/ unsigned __int64 duelArbiter;
  /*<thisrel this+0x240>*/ /*|0x4|*/ unsigned int numInvSlots;
  /*<thisrel this+0x244>*/ /*|0x4|*/ unsigned int guildID;
  /*<thisrel this+0x248>*/ /*|0x4|*/ unsigned int guildRank;
  /*<thisrel this+0x24c>*/ /*|0x1|*/ unsigned char skinID;
  /*<thisrel this+0x24d>*/ /*|0x1|*/ unsigned char faceID;
  /*<thisrel this+0x24e>*/ /*|0x1|*/ unsigned char hairStyleID;
  /*<thisrel this+0x24f>*/ /*|0x1|*/ unsigned char hairColorID;
  /*<thisrel this+0x250>*/ /*|0x4|*/ int XP;
  /*<thisrel this+0x254>*/ /*|0x4|*/ int nextLevelXP;
  /*<thisrel this+0x258>*/ /*|0x300|*/ struct MirrorSkillInfo skillInfo[64];
  /*<thisrel this+0x558>*/ /*|0x1|*/ unsigned char playerFlags;
  /*<thisrel this+0x559>*/ /*|0x1|*/ unsigned char facialHairStyleID;
  /*<thisrel this+0x55a>*/ /*|0x1|*/ unsigned char numBankSlots;
  /*<thisrel this+0x55b>*/ /*|0x1|*/ unsigned char padByte;
  /*<thisrel this+0x55c>*/ /*|0x180|*/ struct CQuestLogData questLog[16];
  /*<thisrel this+0x6dc>*/ /*|0x8|*/ int characterPoints[2];
  /*<thisrel this+0x6e4>*/ /*|0x4|*/ unsigned int trackCreatureMask;
  /*<thisrel this+0x6e8>*/ /*|0x4|*/ unsigned int trackResourceMask;
  /*<thisrel this+0x6ec>*/ /*|0x4|*/ unsigned int chatFilters;
  /*<thisrel this+0x6f0>*/ /*|0x4|*/ unsigned int duelTeam;
  /*<thisrel this+0x6f4>*/ /*|0x4|*/ float blockPercentage;
  /*<thisrel this+0x6f8>*/ /*|0x4|*/ float dodgePercentage;
  /*<thisrel this+0x6fc>*/ /*|0x4|*/ float parryPercentage;
  /*<thisrel this+0x700>*/ /*|0x4|*/ int baseMana;
  /*<thisrel this+0x704>*/ /*|0x4|*/ int guildTimeStamp;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x708>

struct MirrorSkillInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short m_skillLineID;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short m_skillRank;
  /*<thisrel this+0x4>*/ /*|0x2|*/ unsigned short m_skillMaxRank;
  /*<thisrel this+0x6>*/ /*|0x2|*/ short m_skillModifier;
  /*<thisrel this+0x8>*/ /*|0x2|*/ unsigned short m_skillStep;
  /*<thisrel this+0xa>*/ /*|0x2|*/ unsigned short m_padding;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct LightningCoordUpdateData {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ void  (callback*)(void*, unsigned int, class NTempest::C3Vector*, class NTempest::C3Vector*);
  /*<thisrel this+0x4>*/ /*|0x4|*/ void* context;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct LightDataFog {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ float m_fogEnd;
  /*<thisrel this+0x4>*/ /*|0x4|*/ float m_fogStartScaler;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct SMOLightmap {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char x;
  /*<thisrel this+0x1>*/ /*|0x1|*/ unsigned char y;
  /*<thisrel this+0x2>*/ /*|0x1|*/ char width;
  /*<thisrel this+0x3>*/ /*|0x1|*/ char height;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct SMOWVert {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char flow1;
  /*<thisrel this+0x1>*/ /*|0x1|*/ unsigned char flow2;
  /*<thisrel this+0x2>*/ /*|0x1|*/ unsigned char flow1Pct;
  /*<thisrel this+0x3>*/ /*|0x1|*/ unsigned char filler;
  /*<thisrel this+0x4>*/ /*|0x4|*/ float height;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct SMOMVert {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ short s;
  /*<thisrel this+0x2>*/ /*|0x2|*/ short t;
  /*<thisrel this+0x4>*/ /*|0x4|*/ float height;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct SMOHeader {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long nTextures;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long nGroups;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long nPortals;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long nLights;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long nDoodadNames;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long nDoodadDefs;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long nDoodadSets;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ class NTempest::CImVector ambColor;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned long wmoID;
  /*<thisrel this+0x24>*/ /*|0x1c|*/ unsigned char pad[28];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall SMOHeader(struct SMOHeader&);
  void __thiscall SMOHeader();
  struct SMOHeader& __thiscall operator=(struct SMOHeader&);
  void __thiscall ~SMOHeader();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x40>

struct SMODoodadSet {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x14|*/ char name[20];
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long startIndex;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long count;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned char pad[4];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct CMapObjHeader {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ struct SIffChunk iffChunkVersion;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long version;
  /*<thisrel this+0xc>*/ /*|0x8|*/ struct SIffChunk iffChunkHeader;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CMapObjHeader();

  // virtual functions ------------------------------
};
// <size 0x14>

struct SMOMaterial {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long version;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long flags;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long blendMode;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long diffuseNameIndex;
  /*<thisrel this+0x10>*/ /*|0x4|*/ class NTempest::CImVector sidnColor;
  /*<thisrel this+0x14>*/ /*|0x4|*/ class NTempest::CImVector frameSidnColor;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long envNameIndex;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ class NTempest::CImVector diffColor;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned long groundType;
  /*<thisrel this+0x24>*/ /*|0x8|*/ unsigned char inMemPad[8];
  /*<thisrel this+0x24>*/ /*|0x8|*/ struct HTEXTURE__* hMaps[2];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall SMOMaterial(struct SMOMaterial&);
  void __thiscall SMOMaterial();
  struct SMOMaterial& __thiscall operator=(struct SMOMaterial&);
  void __thiscall ~SMOMaterial();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x2c>

struct SLVert {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ struct SWVert waterVert;
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct SOVert oceanVert;
  /*<thisrel this+0x0>*/ /*|0x8|*/ struct SMVert magmaVert;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct SLTiles {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x40|*/ unsigned char tiles[8][8];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  int __thiscall GetLiquid(class NTempest::C2iVector&, unsigned int&, int&, int&);
  void __thiscall SetLiquid(class NTempest::C2iVector&, unsigned int, int, int);

  // virtual functions ------------------------------
};
// <size 0x40>

struct SOVert {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char depth;
  /*<thisrel this+0x1>*/ /*|0x1|*/ unsigned char foam;
  /*<thisrel this+0x2>*/ /*|0x1|*/ unsigned char wet;
  /*<thisrel this+0x3>*/ /*|0x1|*/ unsigned char filler;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct Particulate::Particle {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xc|*/ class NTempest::C3Vector pos;
  /*<thisrel this+0xc>*/ /*|0x4|*/ float scale;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall Particle();
  void __thiscall ~Particle();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x10>

struct Particulate::Movement {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xc|*/ class NTempest::C3Vector dir;
  /*<thisrel this+0xc>*/ /*|0x4|*/ float freq;
  /*<thisrel this+0x10>*/ /*|0x4|*/ float time;
  /*<thisrel this+0x14>*/ /*|0x4|*/ float amplitude;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall Movement();
  void __thiscall ~Movement();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x18>

struct SMAreaHeader {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long offsInfo;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long offsTex;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long sizeTex;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long offsDoo;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long sizeDoo;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long offsMob;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long sizeMob;
  /*<thisrel this+0x1c>*/ /*|0x24|*/ unsigned char pad[36];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x40>

struct MDLHEADERSECTION {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x101|*/ class CMdlString<257> userName;
  /*<thisrel this+0x101>*/ /*|0x104|*/ class CMdlString<260> sourceFilename;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall MDLHEADERSECTION(struct MDLHEADERSECTION&);
  void __thiscall MDLHEADERSECTION();
  struct MDLHEADERSECTION& __thiscall operator=(struct MDLHEADERSECTION&);

  // virtual functions ------------------------------
};
// <size 0x205>

struct LODIndexFix {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short from;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short to;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall Set(unsigned short, unsigned short);

  // virtual functions ------------------------------
};
// <size 0x4>

struct ChunkLodIdx::StartCount {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short start;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short count;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct MDLBOX {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xc|*/ struct Vector3 minimum;
  /*<thisrel this+0xc>*/ /*|0xc|*/ struct Vector3 maximum;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct MDLCYLINDER {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xc|*/ struct Vector3 base;
  /*<thisrel this+0xc>*/ /*|0x4|*/ float height;
  /*<thisrel this+0x10>*/ /*|0x4|*/ float radius;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct MDLSPHERE {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xc|*/ struct Vector3 center;
  /*<thisrel this+0xc>*/ /*|0x4|*/ float radius;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct MDLPLANE {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ float length;
  /*<thisrel this+0x4>*/ /*|0x4|*/ float width;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct _EXCEPTION_RECORD {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long ExceptionCode;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long ExceptionFlags;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct _EXCEPTION_RECORD* ExceptionRecord;
  /*<thisrel this+0xc>*/ /*|0x4|*/ void* ExceptionAddress;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long NumberParameters;
  /*<thisrel this+0x14>*/ /*|0x3c|*/ unsigned long ExceptionInformation[15];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x50>

struct _MINIDUMP_CALLBACK_INPUT {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long ProcessId;
  /*<thisrel this+0x4>*/ /*|0x4|*/ void* ProcessHandle;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long CallbackType;
  /*<thisrel this+0xc>*/ /*|0x2e8|*/ struct _MINIDUMP_THREAD_CALLBACK Thread;
  /*<thisrel this+0xc>*/ /*|0x2f8|*/ struct _MINIDUMP_THREAD_EX_CALLBACK ThreadEx;
  /*<thisrel this+0xc>*/ /*|0x5c|*/ struct _MINIDUMP_MODULE_CALLBACK Module;
  /*<thisrel this+0xc>*/ /*|0x4|*/ struct _MINIDUMP_INCLUDE_THREAD_CALLBACK IncludeThread;
  /*<thisrel this+0xc>*/ /*|0x8|*/ struct _MINIDUMP_INCLUDE_MODULE_CALLBACK IncludeModule;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x304>

struct _MINIDUMP_CALLBACK_OUTPUT {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long ModuleWriteFlags;
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long ThreadWriteFlags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct _MINIDUMP_THREAD_CALLBACK {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long ThreadId;
  /*<thisrel this+0x4>*/ /*|0x4|*/ void* ThreadHandle;
  /*<thisrel this+0x8>*/ /*|0x2cc|*/ struct _CONTEXT Context;
  /*<thisrel this+0x2d4>*/ /*|0x4|*/ unsigned long SizeOfContext;
  /*<thisrel this+0x2d8>*/ /*|0x8|*/ unsigned __int64 StackBase;
  /*<thisrel this+0x2e0>*/ /*|0x8|*/ unsigned __int64 StackEnd;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x2e8>

struct _MINIDUMP_THREAD_EX_CALLBACK {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long ThreadId;
  /*<thisrel this+0x4>*/ /*|0x4|*/ void* ThreadHandle;
  /*<thisrel this+0x8>*/ /*|0x2cc|*/ struct _CONTEXT Context;
  /*<thisrel this+0x2d4>*/ /*|0x4|*/ unsigned long SizeOfContext;
  /*<thisrel this+0x2d8>*/ /*|0x8|*/ unsigned __int64 StackBase;
  /*<thisrel this+0x2e0>*/ /*|0x8|*/ unsigned __int64 StackEnd;
  /*<thisrel this+0x2e8>*/ /*|0x8|*/ unsigned __int64 BackingStoreBase;
  /*<thisrel this+0x2f0>*/ /*|0x8|*/ unsigned __int64 BackingStoreEnd;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x2f8>

struct _MINIDUMP_MODULE_CALLBACK {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned short* FullPath;
  /*<thisrel this+0x4>*/ /*|0x8|*/ unsigned __int64 BaseOfImage;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long SizeOfImage;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long CheckSum;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long TimeDateStamp;
  /*<thisrel this+0x18>*/ /*|0x34|*/ struct tagVS_FIXEDFILEINFO VersionInfo;
  /*<thisrel this+0x4c>*/ /*|0x4|*/ void* CvRecord;
  /*<thisrel this+0x50>*/ /*|0x4|*/ unsigned long SizeOfCvRecord;
  /*<thisrel this+0x54>*/ /*|0x4|*/ void* MiscRecord;
  /*<thisrel this+0x58>*/ /*|0x4|*/ unsigned long SizeOfMiscRecord;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x5c>

struct _MINIDUMP_INCLUDE_THREAD_CALLBACK {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long ThreadId;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct _MINIDUMP_INCLUDE_MODULE_CALLBACK {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ unsigned __int64 BaseOfImage;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct tagVS_FIXEDFILEINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwSignature;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwStrucVersion;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long dwFileVersionMS;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long dwFileVersionLS;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long dwProductVersionMS;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long dwProductVersionLS;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long dwFileFlagsMask;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned long dwFileFlags;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned long dwFileOS;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned long dwFileType;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned long dwFileSubtype;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ unsigned long dwFileDateMS;
  /*<thisrel this+0x30>*/ /*|0x4|*/ unsigned long dwFileDateLS;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x34>

struct _ARCHIVEHEADER {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long signature;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long headersize;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long archivesize;
  /*<thisrel this+0xc>*/ /*|0x2|*/ unsigned short version;
  /*<thisrel this+0xe>*/ /*|0x2|*/ unsigned short sectorsizeid;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long hashoffset;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long blockoffset;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long hashcount;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned long blockcount;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct _HASHENTRY {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ unsigned long hashcheck[2];
  /*<thisrel this+0x8>*/ /*|0x2|*/ unsigned short languageId;
  /*<thisrel this+0xa>*/ /*|0x1|*/ unsigned char platformId;
  /*<thisrel this+0xb>*/ /*|0x1|*/ unsigned char reserved;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long block;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct _DSBCAPS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long dwBufferBytes;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long dwUnlockTransferRate;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long dwPlayCpuOverhead;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct _DSCAPS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long dwMinSecondarySampleRate;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long dwMaxSecondarySampleRate;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long dwPrimaryBuffers;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long dwMaxHwMixingAllBuffers;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long dwMaxHwMixingStaticBuffers;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned long dwMaxHwMixingStreamingBuffers;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned long dwFreeHwMixingAllBuffers;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned long dwFreeHwMixingStaticBuffers;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned long dwFreeHwMixingStreamingBuffers;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ unsigned long dwMaxHw3DAllBuffers;
  /*<thisrel this+0x30>*/ /*|0x4|*/ unsigned long dwMaxHw3DStaticBuffers;
  /*<thisrel this+0x34>*/ /*|0x4|*/ unsigned long dwMaxHw3DStreamingBuffers;
  /*<thisrel this+0x38>*/ /*|0x4|*/ unsigned long dwFreeHw3DAllBuffers;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ unsigned long dwFreeHw3DStaticBuffers;
  /*<thisrel this+0x40>*/ /*|0x4|*/ unsigned long dwFreeHw3DStreamingBuffers;
  /*<thisrel this+0x44>*/ /*|0x4|*/ unsigned long dwTotalHwMemBytes;
  /*<thisrel this+0x48>*/ /*|0x4|*/ unsigned long dwFreeHwMemBytes;
  /*<thisrel this+0x4c>*/ /*|0x4|*/ unsigned long dwMaxContigFreeHwMemBytes;
  /*<thisrel this+0x50>*/ /*|0x4|*/ unsigned long dwUnlockTransferRateHwBuffers;
  /*<thisrel this+0x54>*/ /*|0x4|*/ unsigned long dwPlayCpuOverheadSwBuffers;
  /*<thisrel this+0x58>*/ /*|0x4|*/ unsigned long dwReserved1;
  /*<thisrel this+0x5c>*/ /*|0x4|*/ unsigned long dwReserved2;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x60>

struct CGxDevice::TextureTarget {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ class CGxTex* m_texture;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int m_plane;
  /*<thisrel this+0x8>*/ /*|0x4|*/ void* m_apiSpecific;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct CGameObjectDef::StringValue {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ char* defaultValue;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct CHANCES {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int seq;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int frequency;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct DEATTHUDSOUNDINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int landSound;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int waterSound;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall DEATTHUDSOUNDINFO();

  // virtual functions ------------------------------
};
// <size 0x8>

struct CGDynamicObjectData {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ unsigned __int64 m_caster;
  /*<thisrel this+0x8>*/ /*|0x1|*/ unsigned char m_type;
  /*<thisrel this+0x9>*/ /*|0x1|*/ unsigned char m_typeFlags;
  /*<thisrel this+0xa>*/ /*|0x2|*/ unsigned char m_padding[2];
  /*<thisrel this+0xc>*/ /*|0x4|*/ int m_spellID;
  /*<thisrel this+0x10>*/ /*|0x4|*/ float m_radius;
  /*<thisrel this+0x14>*/ /*|0xc|*/ class NTempest::C3Vector m_position;
  /*<thisrel this+0x20>*/ /*|0x4|*/ float m_facing;
  /*<thisrel this+0x24>*/ /*|0x4|*/ int m_morePadding;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CGDynamicObjectData();
  void __thiscall ~CGDynamicObjectData();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x28>

struct CGCorpseData {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ unsigned __int64 m_owner;
  /*<thisrel this+0x8>*/ /*|0x4|*/ float m_facing;
  /*<thisrel this+0xc>*/ /*|0xc|*/ class NTempest::C3Vector m_position;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned int m_displayID;
  /*<thisrel this+0x1c>*/ /*|0x4c|*/ unsigned int m_items[19];
  /*<thisrel this+0x68>*/ /*|0x1|*/ unsigned char m_unused;
  /*<thisrel this+0x69>*/ /*|0x1|*/ unsigned char m_raceID;
  /*<thisrel this+0x6a>*/ /*|0x1|*/ unsigned char m_sex;
  /*<thisrel this+0x6b>*/ /*|0x1|*/ unsigned char m_skinID;
  /*<thisrel this+0x6c>*/ /*|0x1|*/ unsigned char m_faceID;
  /*<thisrel this+0x6d>*/ /*|0x1|*/ unsigned char m_hairStyleID;
  /*<thisrel this+0x6e>*/ /*|0x1|*/ unsigned char m_hairColorID;
  /*<thisrel this+0x6f>*/ /*|0x1|*/ unsigned char m_facialHairStyleID;
  /*<thisrel this+0x70>*/ /*|0x4|*/ unsigned int m_guildID;
  /*<thisrel this+0x74>*/ /*|0x4|*/ unsigned int m_level;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CGCorpseData();
  void __thiscall ~CGCorpseData();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x78>

struct FT_Bitmap_Size_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ short height;
  /*<thisrel this+0x2>*/ /*|0x2|*/ short width;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct FT_Generic_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ void* data;
  /*<thisrel this+0x4>*/ /*|0x4|*/ void  (finalizer*)(void*);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct FT_Glyph_Metrics_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long width;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long height;
  /*<thisrel this+0x8>*/ /*|0x4|*/ long horiBearingX;
  /*<thisrel this+0xc>*/ /*|0x4|*/ long horiBearingY;
  /*<thisrel this+0x10>*/ /*|0x4|*/ long horiAdvance;
  /*<thisrel this+0x14>*/ /*|0x4|*/ long vertBearingX;
  /*<thisrel this+0x18>*/ /*|0x4|*/ long vertBearingY;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ long vertAdvance;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct FT_Size_InternalRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x0>

struct WowConnectionStats {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int m_bytesReceived;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int m_bytesSent;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int m_messagesReceived;
  /*<thisrel this+0xc>*/ /*|0x4|*/ int m_messagesSent;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long m_connectTime;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long m_lastDataReceived;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct in_addr::__unnamed::__unnamed_109_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char s_b1;
  /*<thisrel this+0x1>*/ /*|0x1|*/ unsigned char s_b2;
  /*<thisrel this+0x2>*/ /*|0x1|*/ unsigned char s_b3;
  /*<thisrel this+0x3>*/ /*|0x1|*/ unsigned char s_b4;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct in_addr::__unnamed::__unnamed_10a_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short s_w1;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short s_w2;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct WowConnectionNet::Worker {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ class WowConnectionNet* owner;
  /*<thisrel this+0x4>*/ /*|0x4|*/ class SThread thread;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int id;
  /*<thisrel this+0xc>*/ /*|0x4|*/ class WowConnection* serviceConn;
  /*<thisrel this+0x10>*/ /*|0x4|*/ class SEvent event;
  /*<thisrel this+0x14>*/ /*|0x1|*/ unsigned char quit;
  /*<thisrel this+0x15>*/ /*|0x18|*/ class SCritSect lock;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall Worker(struct WowConnectionNet::Worker&);
  void __thiscall Worker();
  struct WowConnectionNet::Worker& __thiscall operator=(struct WowConnectionNet::Worker&);
  void __thiscall ~Worker();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x30>


struct BLPHeader::__unnamed::__unnamed_10b_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long headerSize;
  /*<thisrel this+0x4>*/ /*|0x3fc|*/ unsigned char headerData[1020];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x400>

struct FT_Glyph_Class_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int glyph_size;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int glyph_format;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int  (glyph_init*)(struct FT_GlyphRec_*, struct FT_GlyphSlotRec_*);
  /*<thisrel this+0xc>*/ /*|0x4|*/ void  (glyph_done*)(struct FT_GlyphRec_*);
  /*<thisrel this+0x10>*/ /*|0x4|*/ int  (glyph_copy*)(struct FT_GlyphRec_*, struct FT_GlyphRec_*);
  /*<thisrel this+0x14>*/ /*|0x4|*/ void  (glyph_transform*)(struct FT_GlyphRec_*, struct FT_Matrix_*, struct FT_Vector_*);
  /*<thisrel this+0x18>*/ /*|0x4|*/ void  (glyph_bbox*)(struct FT_GlyphRec_*, struct FT_BBox_*);
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int  (glyph_prepare*)(struct FT_GlyphRec_*, struct FT_GlyphSlotRec_*);

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct FT_GlyphRec_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct FT_LibraryRec_* library;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct FT_Glyph_Class_* clazz;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int format;
  /*<thisrel this+0xc>*/ /*|0x8|*/ struct FT_Vector_ advance;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct TTC_Header_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long tag;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long version;
  /*<thisrel this+0x8>*/ /*|0x4|*/ long count;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long* offsets;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct TT_Header_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long Table_Version;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long Font_Revision;
  /*<thisrel this+0x8>*/ /*|0x4|*/ long CheckSum_Adjust;
  /*<thisrel this+0xc>*/ /*|0x4|*/ long Magic_Number;
  /*<thisrel this+0x10>*/ /*|0x2|*/ unsigned short Flags;
  /*<thisrel this+0x12>*/ /*|0x2|*/ unsigned short Units_Per_EM;
  /*<thisrel this+0x14>*/ /*|0x8|*/ long Created[2];
  /*<thisrel this+0x1c>*/ /*|0x8|*/ long Modified[2];
  /*<thisrel this+0x24>*/ /*|0x2|*/ short xMin;
  /*<thisrel this+0x26>*/ /*|0x2|*/ short yMin;
  /*<thisrel this+0x28>*/ /*|0x2|*/ short xMax;
  /*<thisrel this+0x2a>*/ /*|0x2|*/ short yMax;
  /*<thisrel this+0x2c>*/ /*|0x2|*/ unsigned short Mac_Style;
  /*<thisrel this+0x2e>*/ /*|0x2|*/ unsigned short Lowest_Rec_PPEM;
  /*<thisrel this+0x30>*/ /*|0x2|*/ short Font_Direction;
  /*<thisrel this+0x32>*/ /*|0x2|*/ short Index_To_Loc_Format;
  /*<thisrel this+0x34>*/ /*|0x2|*/ short Glyph_Data_Format;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x38>

struct TT_MaxProfile_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long version;
  /*<thisrel this+0x4>*/ /*|0x2|*/ unsigned short numGlyphs;
  /*<thisrel this+0x6>*/ /*|0x2|*/ unsigned short maxPoints;
  /*<thisrel this+0x8>*/ /*|0x2|*/ unsigned short maxContours;
  /*<thisrel this+0xa>*/ /*|0x2|*/ unsigned short maxCompositePoints;
  /*<thisrel this+0xc>*/ /*|0x2|*/ unsigned short maxCompositeContours;
  /*<thisrel this+0xe>*/ /*|0x2|*/ unsigned short maxZones;
  /*<thisrel this+0x10>*/ /*|0x2|*/ unsigned short maxTwilightPoints;
  /*<thisrel this+0x12>*/ /*|0x2|*/ unsigned short maxStorage;
  /*<thisrel this+0x14>*/ /*|0x2|*/ unsigned short maxFunctionDefs;
  /*<thisrel this+0x16>*/ /*|0x2|*/ unsigned short maxInstructionDefs;
  /*<thisrel this+0x18>*/ /*|0x2|*/ unsigned short maxStackElements;
  /*<thisrel this+0x1a>*/ /*|0x2|*/ unsigned short maxSizeOfInstructions;
  /*<thisrel this+0x1c>*/ /*|0x2|*/ unsigned short maxComponentElements;
  /*<thisrel this+0x1e>*/ /*|0x2|*/ unsigned short maxComponentDepth;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct TT_VertHeader_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long Version;
  /*<thisrel this+0x4>*/ /*|0x2|*/ short Ascender;
  /*<thisrel this+0x6>*/ /*|0x2|*/ short Descender;
  /*<thisrel this+0x8>*/ /*|0x2|*/ short Line_Gap;
  /*<thisrel this+0xa>*/ /*|0x2|*/ unsigned short advance_Height_Max;
  /*<thisrel this+0xc>*/ /*|0x2|*/ short min_Top_Side_Bearing;
  /*<thisrel this+0xe>*/ /*|0x2|*/ short min_Bottom_Side_Bearing;
  /*<thisrel this+0x10>*/ /*|0x2|*/ short yMax_Extent;
  /*<thisrel this+0x12>*/ /*|0x2|*/ short caret_Slope_Rise;
  /*<thisrel this+0x14>*/ /*|0x2|*/ short caret_Slope_Run;
  /*<thisrel this+0x16>*/ /*|0x2|*/ short caret_Offset;
  /*<thisrel this+0x18>*/ /*|0x8|*/ short Reserved[4];
  /*<thisrel this+0x20>*/ /*|0x2|*/ short metric_Data_Format;
  /*<thisrel this+0x22>*/ /*|0x2|*/ unsigned short number_Of_VMetrics;
  /*<thisrel this+0x24>*/ /*|0x4|*/ void* long_metrics;
  /*<thisrel this+0x28>*/ /*|0x4|*/ void* short_metrics;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x2c>

struct TT_NameTable_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short format;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short numNameRecords;
  /*<thisrel this+0x4>*/ /*|0x2|*/ unsigned short storageOffset;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct TT_NameRec_* names;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned char* storage;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct TT_OS2_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short version;
  /*<thisrel this+0x2>*/ /*|0x2|*/ short xAvgCharWidth;
  /*<thisrel this+0x4>*/ /*|0x2|*/ unsigned short usWeightClass;
  /*<thisrel this+0x6>*/ /*|0x2|*/ unsigned short usWidthClass;
  /*<thisrel this+0x8>*/ /*|0x2|*/ short fsType;
  /*<thisrel this+0xa>*/ /*|0x2|*/ short ySubscriptXSize;
  /*<thisrel this+0xc>*/ /*|0x2|*/ short ySubscriptYSize;
  /*<thisrel this+0xe>*/ /*|0x2|*/ short ySubscriptXOffset;
  /*<thisrel this+0x10>*/ /*|0x2|*/ short ySubscriptYOffset;
  /*<thisrel this+0x12>*/ /*|0x2|*/ short ySuperscriptXSize;
  /*<thisrel this+0x14>*/ /*|0x2|*/ short ySuperscriptYSize;
  /*<thisrel this+0x16>*/ /*|0x2|*/ short ySuperscriptXOffset;
  /*<thisrel this+0x18>*/ /*|0x2|*/ short ySuperscriptYOffset;
  /*<thisrel this+0x1a>*/ /*|0x2|*/ short yStrikeoutSize;
  /*<thisrel this+0x1c>*/ /*|0x2|*/ short yStrikeoutPosition;
  /*<thisrel this+0x1e>*/ /*|0x2|*/ short sFamilyClass;
  /*<thisrel this+0x20>*/ /*|0xa|*/ unsigned char panose[10];
  /*<thisrel this+0x2c>*/ /*|0x4|*/ unsigned long ulUnicodeRange1;
  /*<thisrel this+0x30>*/ /*|0x4|*/ unsigned long ulUnicodeRange2;
  /*<thisrel this+0x34>*/ /*|0x4|*/ unsigned long ulUnicodeRange3;
  /*<thisrel this+0x38>*/ /*|0x4|*/ unsigned long ulUnicodeRange4;
  /*<thisrel this+0x3c>*/ /*|0x4|*/ char achVendID[4];
  /*<thisrel this+0x40>*/ /*|0x2|*/ unsigned short fsSelection;
  /*<thisrel this+0x42>*/ /*|0x2|*/ unsigned short usFirstCharIndex;
  /*<thisrel this+0x44>*/ /*|0x2|*/ unsigned short usLastCharIndex;
  /*<thisrel this+0x46>*/ /*|0x2|*/ short sTypoAscender;
  /*<thisrel this+0x48>*/ /*|0x2|*/ short sTypoDescender;
  /*<thisrel this+0x4a>*/ /*|0x2|*/ short sTypoLineGap;
  /*<thisrel this+0x4c>*/ /*|0x2|*/ unsigned short usWinAscent;
  /*<thisrel this+0x4e>*/ /*|0x2|*/ unsigned short usWinDescent;
  /*<thisrel this+0x50>*/ /*|0x4|*/ unsigned long ulCodePageRange1;
  /*<thisrel this+0x54>*/ /*|0x4|*/ unsigned long ulCodePageRange2;
  /*<thisrel this+0x58>*/ /*|0x2|*/ short sxHeight;
  /*<thisrel this+0x5a>*/ /*|0x2|*/ short sCapHeight;
  /*<thisrel this+0x5c>*/ /*|0x2|*/ unsigned short usDefaultChar;
  /*<thisrel this+0x5e>*/ /*|0x2|*/ unsigned short usBreakChar;
  /*<thisrel this+0x60>*/ /*|0x2|*/ unsigned short usMaxContext;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x64>

struct TT_Postscript_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long FormatType;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long italicAngle;
  /*<thisrel this+0x8>*/ /*|0x2|*/ short underlinePosition;
  /*<thisrel this+0xa>*/ /*|0x2|*/ short underlineThickness;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long isFixedPitch;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long minMemType42;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long maxMemType42;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long minMemType1;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned long maxMemType1;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct TT_Hdmx_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short version;
  /*<thisrel this+0x2>*/ /*|0x2|*/ short num_records;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct TT_HdmxRec_* records;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct TT_Gasp_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short version;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short numRanges;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct TT_GaspRange_* gaspRanges;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct TT_PCLT_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long Version;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long FontNumber;
  /*<thisrel this+0x8>*/ /*|0x2|*/ unsigned short Pitch;
  /*<thisrel this+0xa>*/ /*|0x2|*/ unsigned short xHeight;
  /*<thisrel this+0xc>*/ /*|0x2|*/ unsigned short Style;
  /*<thisrel this+0xe>*/ /*|0x2|*/ unsigned short TypeFamily;
  /*<thisrel this+0x10>*/ /*|0x2|*/ unsigned short CapHeight;
  /*<thisrel this+0x12>*/ /*|0x2|*/ unsigned short SymbolSet;
  /*<thisrel this+0x14>*/ /*|0x10|*/ char TypeFace[16];
  /*<thisrel this+0x24>*/ /*|0x8|*/ char CharacterComplement[8];
  /*<thisrel this+0x2c>*/ /*|0x6|*/ char FileName[6];
  /*<thisrel this+0x32>*/ /*|0x1|*/ char StrokeWeight;
  /*<thisrel this+0x33>*/ /*|0x1|*/ char WidthType;
  /*<thisrel this+0x34>*/ /*|0x1|*/ unsigned char SerifStyle;
  /*<thisrel this+0x35>*/ /*|0x1|*/ unsigned char Reserved;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x38>

struct TT_SBit_Scale_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xc|*/ struct TT_SBit_Line_Metrics_ hori;
  /*<thisrel this+0xc>*/ /*|0xc|*/ struct TT_SBit_Line_Metrics_ vert;
  /*<thisrel this+0x18>*/ /*|0x1|*/ unsigned char x_ppem;
  /*<thisrel this+0x19>*/ /*|0x1|*/ unsigned char y_ppem;
  /*<thisrel this+0x1a>*/ /*|0x1|*/ unsigned char x_ppem_substitute;
  /*<thisrel this+0x1b>*/ /*|0x1|*/ unsigned char y_ppem_substitute;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c>

struct TT_Post_Names_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char loaded;
  /*<thisrel this+0x4>*/ /*|0xc|*/ union __unnamed_10c_ names;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct TT_SBit_Line_Metrics_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ char ascender;
  /*<thisrel this+0x1>*/ /*|0x1|*/ char descender;
  /*<thisrel this+0x2>*/ /*|0x1|*/ unsigned char max_width;
  /*<thisrel this+0x3>*/ /*|0x1|*/ char caret_slope_numerator;
  /*<thisrel this+0x4>*/ /*|0x1|*/ char caret_slope_denominator;
  /*<thisrel this+0x5>*/ /*|0x1|*/ char caret_offset;
  /*<thisrel this+0x6>*/ /*|0x1|*/ char min_origin_SB;
  /*<thisrel this+0x7>*/ /*|0x1|*/ char min_advance_SB;
  /*<thisrel this+0x8>*/ /*|0x1|*/ char max_before_BL;
  /*<thisrel this+0x9>*/ /*|0x1|*/ char min_after_BL;
  /*<thisrel this+0xa>*/ /*|0x2|*/ char pads[2];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct TT_Post_20_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short num_glyphs;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short num_names;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned short* glyph_indices;
  /*<thisrel this+0x8>*/ /*|0x4|*/ char** glyph_names;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct TT_Post_25_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short num_glyphs;
  /*<thisrel this+0x4>*/ /*|0x4|*/ char* offsets;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct TT_CMap0_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned char* glyphIdArray;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct TT_CMap2_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned short* subHeaderKeys;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct TT_CMap2SubHeader_* subHeaders;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned short* glyphIdArray;
  /*<thisrel this+0xc>*/ /*|0x2|*/ unsigned short numGlyphId;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct TT_CMap4_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short segCountX2;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short searchRange;
  /*<thisrel this+0x4>*/ /*|0x2|*/ unsigned short entrySelector;
  /*<thisrel this+0x6>*/ /*|0x2|*/ unsigned short rangeShift;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct TT_CMap4Segment_* segments;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned short* glyphIdArray;
  /*<thisrel this+0x10>*/ /*|0x2|*/ unsigned short numGlyphId;
  /*<thisrel this+0x14>*/ /*|0x4|*/ struct TT_CMap4Segment_* last_segment;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct TT_CMap6_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short firstCode;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short entryCount;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned short* glyphIdArray;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct TT_CMap2SubHeader_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short firstCode;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short entryCount;
  /*<thisrel this+0x4>*/ /*|0x2|*/ short idDelta;
  /*<thisrel this+0x6>*/ /*|0x2|*/ unsigned short idRangeOffset;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct FT_MM_Axis_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ char* name;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long minimum;
  /*<thisrel this+0x8>*/ /*|0x4|*/ long maximum;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct PS_UniMap_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int unicode;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int glyph_index;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct CFF_Font_Dict_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int version;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int notice;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int copyright;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int full_name;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int family_name;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned int weight;
  /*<thisrel this+0x18>*/ /*|0x1|*/ unsigned char is_fixed_pitch;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ long italic_angle;
  /*<thisrel this+0x20>*/ /*|0x4|*/ long underline_position;
  /*<thisrel this+0x24>*/ /*|0x4|*/ long underline_thickness;
  /*<thisrel this+0x28>*/ /*|0x4|*/ int paint_type;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ int charstring_type;
  /*<thisrel this+0x30>*/ /*|0x10|*/ struct FT_Matrix_ font_matrix;
  /*<thisrel this+0x40>*/ /*|0x4|*/ unsigned long unique_id;
  /*<thisrel this+0x44>*/ /*|0x10|*/ struct FT_BBox_ font_bbox;
  /*<thisrel this+0x54>*/ /*|0x4|*/ long stroke_width;
  /*<thisrel this+0x58>*/ /*|0x4|*/ unsigned long charset_offset;
  /*<thisrel this+0x5c>*/ /*|0x4|*/ unsigned long encoding_offset;
  /*<thisrel this+0x60>*/ /*|0x4|*/ unsigned long charstrings_offset;
  /*<thisrel this+0x64>*/ /*|0x4|*/ unsigned long private_offset;
  /*<thisrel this+0x68>*/ /*|0x4|*/ unsigned long private_size;
  /*<thisrel this+0x6c>*/ /*|0x4|*/ long synthetic_base;
  /*<thisrel this+0x70>*/ /*|0x4|*/ unsigned int embedded_postscript;
  /*<thisrel this+0x74>*/ /*|0x4|*/ unsigned int base_font_name;
  /*<thisrel this+0x78>*/ /*|0x4|*/ unsigned int postscript;
  /*<thisrel this+0x7c>*/ /*|0x4|*/ unsigned int cid_registry;
  /*<thisrel this+0x80>*/ /*|0x4|*/ unsigned int cid_ordering;
  /*<thisrel this+0x84>*/ /*|0x4|*/ unsigned long cid_supplement;
  /*<thisrel this+0x88>*/ /*|0x4|*/ long cid_font_version;
  /*<thisrel this+0x8c>*/ /*|0x4|*/ long cid_font_revision;
  /*<thisrel this+0x90>*/ /*|0x4|*/ long cid_font_type;
  /*<thisrel this+0x94>*/ /*|0x4|*/ long cid_count;
  /*<thisrel this+0x98>*/ /*|0x4|*/ unsigned long cid_uid_base;
  /*<thisrel this+0x9c>*/ /*|0x4|*/ unsigned long cid_fd_array_offset;
  /*<thisrel this+0xa0>*/ /*|0x4|*/ unsigned long cid_fd_select_offset;
  /*<thisrel this+0xa4>*/ /*|0x4|*/ unsigned int cid_font_name;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xa8>

struct CFF_Private_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char num_blue_values;
  /*<thisrel this+0x1>*/ /*|0x1|*/ unsigned char num_other_blues;
  /*<thisrel this+0x2>*/ /*|0x1|*/ unsigned char num_family_blues;
  /*<thisrel this+0x3>*/ /*|0x1|*/ unsigned char num_family_other_blues;
  /*<thisrel this+0x4>*/ /*|0x38|*/ long blue_values[14];
  /*<thisrel this+0x3c>*/ /*|0x28|*/ long other_blues[10];
  /*<thisrel this+0x64>*/ /*|0x38|*/ long family_blues[14];
  /*<thisrel this+0x9c>*/ /*|0x28|*/ long family_other_blues[10];
  /*<thisrel this+0xc4>*/ /*|0x4|*/ long blue_scale;
  /*<thisrel this+0xc8>*/ /*|0x4|*/ long blue_shift;
  /*<thisrel this+0xcc>*/ /*|0x4|*/ long blue_fuzz;
  /*<thisrel this+0xd0>*/ /*|0x4|*/ long standard_width;
  /*<thisrel this+0xd4>*/ /*|0x4|*/ long standard_height;
  /*<thisrel this+0xd8>*/ /*|0x1|*/ unsigned char num_snap_widths;
  /*<thisrel this+0xd9>*/ /*|0x1|*/ unsigned char num_snap_heights;
  /*<thisrel this+0xdc>*/ /*|0x34|*/ long snap_widths[13];
  /*<thisrel this+0x110>*/ /*|0x34|*/ long snap_heights[13];
  /*<thisrel this+0x144>*/ /*|0x1|*/ unsigned char force_bold;
  /*<thisrel this+0x148>*/ /*|0x4|*/ long force_bold_threshold;
  /*<thisrel this+0x14c>*/ /*|0x4|*/ int lenIV;
  /*<thisrel this+0x150>*/ /*|0x4|*/ int language_group;
  /*<thisrel this+0x154>*/ /*|0x4|*/ long expansion_factor;
  /*<thisrel this+0x158>*/ /*|0x4|*/ long initial_random_seed;
  /*<thisrel this+0x15c>*/ /*|0x4|*/ unsigned long local_subrs_offset;
  /*<thisrel this+0x160>*/ /*|0x4|*/ long default_width;
  /*<thisrel this+0x164>*/ /*|0x4|*/ long nominal_width;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x168>

struct CID_Info_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ char* cid_font_name;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long cid_version;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int cid_font_type;
  /*<thisrel this+0xc>*/ /*|0x4|*/ char* registry;
  /*<thisrel this+0x10>*/ /*|0x4|*/ char* ordering;
  /*<thisrel this+0x14>*/ /*|0x4|*/ int supplement;
  /*<thisrel this+0x18>*/ /*|0x20|*/ struct T1_FontInfo font_info;
  /*<thisrel this+0x38>*/ /*|0x10|*/ struct FT_BBox_ font_bbox;
  /*<thisrel this+0x48>*/ /*|0x4|*/ unsigned long uid_base;
  /*<thisrel this+0x4c>*/ /*|0x4|*/ int num_xuid;
  /*<thisrel this+0x50>*/ /*|0x40|*/ unsigned long xuid[16];
  /*<thisrel this+0x90>*/ /*|0x4|*/ unsigned long cidmap_offset;
  /*<thisrel this+0x94>*/ /*|0x4|*/ int fd_bytes;
  /*<thisrel this+0x98>*/ /*|0x4|*/ int gd_bytes;
  /*<thisrel this+0x9c>*/ /*|0x4|*/ unsigned long cid_count;
  /*<thisrel this+0xa0>*/ /*|0x4|*/ int num_dicts;
  /*<thisrel this+0xa4>*/ /*|0x4|*/ struct CID_FontDict_* font_dicts;
  /*<thisrel this+0xa8>*/ /*|0x4|*/ unsigned long data_offset;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xac>

struct T1_FontInfo {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ char* version;
  /*<thisrel this+0x4>*/ /*|0x4|*/ char* notice;
  /*<thisrel this+0x8>*/ /*|0x4|*/ char* full_name;
  /*<thisrel this+0xc>*/ /*|0x4|*/ char* family_name;
  /*<thisrel this+0x10>*/ /*|0x4|*/ char* weight;
  /*<thisrel this+0x14>*/ /*|0x4|*/ long italic_angle;
  /*<thisrel this+0x18>*/ /*|0x1|*/ unsigned char is_fixed_pitch;
  /*<thisrel this+0x1a>*/ /*|0x2|*/ short underline_position;
  /*<thisrel this+0x1c>*/ /*|0x2|*/ unsigned short underline_thickness;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct CID_FontDict_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0xc0|*/ struct T1_Private private_dict;
  /*<thisrel this+0xc0>*/ /*|0x4|*/ unsigned int len_buildchar;
  /*<thisrel this+0xc4>*/ /*|0x4|*/ long forcebold_threshold;
  /*<thisrel this+0xc8>*/ /*|0x4|*/ long stroke_width;
  /*<thisrel this+0xcc>*/ /*|0x4|*/ long expansion_factor;
  /*<thisrel this+0xd0>*/ /*|0x1|*/ unsigned char paint_type;
  /*<thisrel this+0xd1>*/ /*|0x1|*/ unsigned char font_type;
  /*<thisrel this+0xd4>*/ /*|0x10|*/ struct FT_Matrix_ font_matrix;
  /*<thisrel this+0xe4>*/ /*|0x8|*/ struct FT_Vector_ font_offset;
  /*<thisrel this+0xec>*/ /*|0x4|*/ unsigned int num_subrs;
  /*<thisrel this+0xf0>*/ /*|0x4|*/ unsigned long subrmap_offset;
  /*<thisrel this+0xf4>*/ /*|0x4|*/ int sd_bytes;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xf8>

struct T1_Private {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int unique_id;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int lenIV;
  /*<thisrel this+0x8>*/ /*|0x1|*/ unsigned char num_blue_values;
  /*<thisrel this+0x9>*/ /*|0x1|*/ unsigned char num_other_blues;
  /*<thisrel this+0xa>*/ /*|0x1|*/ unsigned char num_family_blues;
  /*<thisrel this+0xb>*/ /*|0x1|*/ unsigned char num_family_other_blues;
  /*<thisrel this+0xc>*/ /*|0x1c|*/ short blue_values[14];
  /*<thisrel this+0x28>*/ /*|0x14|*/ short other_blues[10];
  /*<thisrel this+0x3c>*/ /*|0x1c|*/ short family_blues[14];
  /*<thisrel this+0x58>*/ /*|0x14|*/ short family_other_blues[10];
  /*<thisrel this+0x6c>*/ /*|0x4|*/ long blue_scale;
  /*<thisrel this+0x70>*/ /*|0x4|*/ int blue_shift;
  /*<thisrel this+0x74>*/ /*|0x4|*/ int blue_fuzz;
  /*<thisrel this+0x78>*/ /*|0x2|*/ unsigned short standard_width[1];
  /*<thisrel this+0x7a>*/ /*|0x2|*/ unsigned short standard_height[1];
  /*<thisrel this+0x7c>*/ /*|0x1|*/ unsigned char num_snap_widths;
  /*<thisrel this+0x7d>*/ /*|0x1|*/ unsigned char num_snap_heights;
  /*<thisrel this+0x7e>*/ /*|0x1|*/ unsigned char force_bold;
  /*<thisrel this+0x7f>*/ /*|0x1|*/ unsigned char round_stem_up;
  /*<thisrel this+0x80>*/ /*|0x1a|*/ short snap_widths[13];
  /*<thisrel this+0x9a>*/ /*|0x1a|*/ short snap_heights[13];
  /*<thisrel this+0xb4>*/ /*|0x4|*/ long language_group;
  /*<thisrel this+0xb8>*/ /*|0x4|*/ long password;
  /*<thisrel this+0xbc>*/ /*|0x4|*/ short min_feature[2];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc0>

struct T1_Encoding_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int num_chars;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int code_first;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int code_last;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned short* char_index;
  /*<thisrel this+0x10>*/ /*|0x4|*/ char** char_name;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct T1_DesignMap_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char num_points;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long* design_points;
  /*<thisrel this+0x8>*/ /*|0x4|*/ long* blend_points;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct TT_Size_Metrics_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long x_ratio;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long y_ratio;
  /*<thisrel this+0x8>*/ /*|0x2|*/ unsigned short ppem;
  /*<thisrel this+0xc>*/ /*|0x4|*/ long ratio;
  /*<thisrel this+0x10>*/ /*|0x4|*/ long scale;
  /*<thisrel this+0x14>*/ /*|0x10|*/ long compensations[4];
  /*<thisrel this+0x24>*/ /*|0x1|*/ unsigned char valid;
  /*<thisrel this+0x25>*/ /*|0x1|*/ unsigned char rotated;
  /*<thisrel this+0x26>*/ /*|0x1|*/ unsigned char stretched;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x28>

struct T1_Kern_Pair_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int glyph1;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int glyph2;
  /*<thisrel this+0x8>*/ /*|0x8|*/ struct FT_Vector_ kerning;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct T1_Size_Hints_ {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x0>

struct T1_Glyph_Hints_ {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x0>

struct WinFNT_Header_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short version;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long file_size;
  /*<thisrel this+0x8>*/ /*|0x3c|*/ unsigned char copyright[60];
  /*<thisrel this+0x44>*/ /*|0x2|*/ unsigned short file_type;
  /*<thisrel this+0x46>*/ /*|0x2|*/ unsigned short nominal_point_size;
  /*<thisrel this+0x48>*/ /*|0x2|*/ unsigned short vertical_resolution;
  /*<thisrel this+0x4a>*/ /*|0x2|*/ unsigned short horizontal_resolution;
  /*<thisrel this+0x4c>*/ /*|0x2|*/ unsigned short ascent;
  /*<thisrel this+0x4e>*/ /*|0x2|*/ unsigned short internal_leading;
  /*<thisrel this+0x50>*/ /*|0x2|*/ unsigned short external_leading;
  /*<thisrel this+0x52>*/ /*|0x1|*/ unsigned char italic;
  /*<thisrel this+0x53>*/ /*|0x1|*/ unsigned char underline;
  /*<thisrel this+0x54>*/ /*|0x1|*/ unsigned char strike_out;
  /*<thisrel this+0x56>*/ /*|0x2|*/ unsigned short weight;
  /*<thisrel this+0x58>*/ /*|0x1|*/ unsigned char charset;
  /*<thisrel this+0x5a>*/ /*|0x2|*/ unsigned short pixel_width;
  /*<thisrel this+0x5c>*/ /*|0x2|*/ unsigned short pixel_height;
  /*<thisrel this+0x5e>*/ /*|0x1|*/ unsigned char pitch_and_family;
  /*<thisrel this+0x60>*/ /*|0x2|*/ unsigned short avg_width;
  /*<thisrel this+0x62>*/ /*|0x2|*/ unsigned short max_width;
  /*<thisrel this+0x64>*/ /*|0x1|*/ unsigned char first_char;
  /*<thisrel this+0x65>*/ /*|0x1|*/ unsigned char last_char;
  /*<thisrel this+0x66>*/ /*|0x1|*/ unsigned char default_char;
  /*<thisrel this+0x67>*/ /*|0x1|*/ unsigned char break_char;
  /*<thisrel this+0x68>*/ /*|0x2|*/ unsigned short bytes_per_row;
  /*<thisrel this+0x6c>*/ /*|0x4|*/ unsigned long device_offset;
  /*<thisrel this+0x70>*/ /*|0x4|*/ unsigned long face_name_offset;
  /*<thisrel this+0x74>*/ /*|0x4|*/ unsigned long bits_pointer;
  /*<thisrel this+0x78>*/ /*|0x4|*/ unsigned long bits_offset;
  /*<thisrel this+0x7c>*/ /*|0x1|*/ unsigned char reserved;
  /*<thisrel this+0x80>*/ /*|0x4|*/ unsigned long flags;
  /*<thisrel this+0x84>*/ /*|0x2|*/ unsigned short A_space;
  /*<thisrel this+0x86>*/ /*|0x2|*/ unsigned short B_space;
  /*<thisrel this+0x88>*/ /*|0x2|*/ unsigned short C_space;
  /*<thisrel this+0x8a>*/ /*|0x2|*/ unsigned short color_table_offset;
  /*<thisrel this+0x8c>*/ /*|0x4|*/ unsigned char reserved2[4];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x90>

struct DxtBlock {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1>

struct Dxt3AlphaBlock : struct DxtBlock  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x8|*/ unsigned short row[4];

  // base classes -----------------------------------
  // baseclass struct DxtBlock
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct TGAHeader::__unnamed::__unnamed_eb_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<bitfield this+0x0>*/ /*|0x1|*/ unsigned char bAlphaChannelBits:0:4;
  /*<bitfield this+0x0>*/ /*|0x1|*/ unsigned char bLeftRightOrder:4:1;
  /*<bitfield this+0x0>*/ /*|0x1|*/ unsigned char bTopBottomOrder:5:1;
  /*<bitfield this+0x0>*/ /*|0x1|*/ unsigned char bReserved:6:2;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1>

struct CGxDeviceOpenGl::ColorSourceColor {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ class NTempest::CImVector m_color;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int m_dirty;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ColorSourceColor(struct CGxDeviceOpenGl::ColorSourceColor&);
  void __thiscall ColorSourceColor();
  struct CGxDeviceOpenGl::ColorSourceColor& __thiscall operator=(struct CGxDeviceOpenGl::ColorSourceColor&);
  void __thiscall ~ColorSourceColor();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x8>

struct CGxDeviceOpenGl::PixelFormatAttribute {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x0>

struct CGxDeviceOpenGl::PixelFormatAttribute<T> {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int attribute;
  /*<thisrel this+0x0>*/ /*|0x0|*/ ... value;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall PixelFormatAttribute<T>(int, ...);
  void __thiscall PixelFormatAttribute<T>();

  // virtual functions ------------------------------
};
// <size 0x4>

struct CGxDeviceOpenGl::PixelFormatAttribute<float> {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x0>

struct IDirect3DDevice9 : struct IUnknown  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IUnknown
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirect3DDevice9(struct IDirect3DDevice9&);
  void __thiscall IDirect3DDevice9();
  struct IDirect3DDevice9& __thiscall operator=(struct IDirect3DDevice9&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0xc>*/ long __stdcall TestCooperativeLevel() = 0;
  virtual /*<vtableoff 0x10>*/ unsigned int __stdcall GetAvailableTextureMem() = 0;
  virtual /*<vtableoff 0x14>*/ long __stdcall EvictManagedResources() = 0;
  virtual /*<vtableoff 0x18>*/ long __stdcall GetDirect3D(struct IDirect3D9**) = 0;
  virtual /*<vtableoff 0x1c>*/ long __stdcall GetDeviceCaps(struct _D3DCAPS9*) = 0;
  virtual /*<vtableoff 0x20>*/ long __stdcall GetDisplayMode(unsigned int, struct _D3DDISPLAYMODE*) = 0;
  virtual /*<vtableoff 0x24>*/ long __stdcall GetCreationParameters(struct _D3DDEVICE_CREATION_PARAMETERS*) = 0;
  virtual /*<vtableoff 0x28>*/ long __stdcall SetCursorProperties(unsigned int, unsigned int, struct IDirect3DSurface9*) = 0;
  virtual /*<vtableoff 0x2c>*/ void __stdcall SetCursorPosition(int, int, unsigned long) = 0;
  virtual /*<vtableoff 0x30>*/ int __stdcall ShowCursor(int) = 0;
  virtual /*<vtableoff 0x34>*/ long __stdcall CreateAdditionalSwapChain(struct _D3DPRESENT_PARAMETERS_*, struct IDirect3DSwapChain9**) = 0;
  virtual /*<vtableoff 0x38>*/ long __stdcall GetSwapChain(unsigned int, struct IDirect3DSwapChain9**) = 0;
  virtual /*<vtableoff 0x3c>*/ unsigned int __stdcall GetNumberOfSwapChains() = 0;
  virtual /*<vtableoff 0x40>*/ long __stdcall Reset(struct _D3DPRESENT_PARAMETERS_*) = 0;
  virtual /*<vtableoff 0x44>*/ long __stdcall Present(struct tagRECT*, struct tagRECT*, struct HWND__*, struct _RGNDATA*) = 0;
  virtual /*<vtableoff 0x48>*/ long __stdcall GetBackBuffer(unsigned int, unsigned int, enum _D3DBACKBUFFER_TYPE, struct IDirect3DSurface9**) = 0;
  virtual /*<vtableoff 0x4c>*/ long __stdcall GetRasterStatus(unsigned int, struct _D3DRASTER_STATUS*) = 0;
  virtual /*<vtableoff 0x50>*/ long __stdcall SetDialogBoxMode(int) = 0;
  virtual /*<vtableoff 0x54>*/ void __stdcall SetGammaRamp(unsigned int, unsigned long, struct _D3DGAMMARAMP*) = 0;
  virtual /*<vtableoff 0x58>*/ void __stdcall GetGammaRamp(unsigned int, struct _D3DGAMMARAMP*) = 0;
  virtual /*<vtableoff 0x5c>*/ long __stdcall CreateTexture(unsigned int, unsigned int, unsigned int, unsigned long, enum _D3DFORMAT, enum _D3DPOOL, struct IDirect3DTexture9**, void**) = 0;
  virtual /*<vtableoff 0x60>*/ long __stdcall CreateVolumeTexture(unsigned int, unsigned int, unsigned int, unsigned int, unsigned long, enum _D3DFORMAT, enum _D3DPOOL, struct IDirect3DVolumeTexture9**, void**) = 0;
  virtual /*<vtableoff 0x64>*/ long __stdcall CreateCubeTexture(unsigned int, unsigned int, unsigned long, enum _D3DFORMAT, enum _D3DPOOL, struct IDirect3DCubeTexture9**, void**) = 0;
  virtual /*<vtableoff 0x68>*/ long __stdcall CreateVertexBuffer(unsigned int, unsigned long, unsigned long, enum _D3DPOOL, struct IDirect3DVertexBuffer9**, void**) = 0;
  virtual /*<vtableoff 0x6c>*/ long __stdcall CreateIndexBuffer(unsigned int, unsigned long, enum _D3DFORMAT, enum _D3DPOOL, struct IDirect3DIndexBuffer9**, void**) = 0;
  virtual /*<vtableoff 0x70>*/ long __stdcall CreateRenderTarget(unsigned int, unsigned int, enum _D3DFORMAT, enum _D3DMULTISAMPLE_TYPE, unsigned long, int, struct IDirect3DSurface9**, void**) = 0;
  virtual /*<vtableoff 0x74>*/ long __stdcall CreateDepthStencilSurface(unsigned int, unsigned int, enum _D3DFORMAT, enum _D3DMULTISAMPLE_TYPE, unsigned long, int, struct IDirect3DSurface9**, void**) = 0;
  virtual /*<vtableoff 0x78>*/ long __stdcall UpdateSurface(struct IDirect3DSurface9*, struct tagRECT*, struct IDirect3DSurface9*, struct tagPOINT*) = 0;
  virtual /*<vtableoff 0x7c>*/ long __stdcall UpdateTexture(struct IDirect3DBaseTexture9*, struct IDirect3DBaseTexture9*) = 0;
  virtual /*<vtableoff 0x80>*/ long __stdcall GetRenderTargetData(struct IDirect3DSurface9*, struct IDirect3DSurface9*) = 0;
  virtual /*<vtableoff 0x84>*/ long __stdcall GetFrontBufferData(unsigned int, struct IDirect3DSurface9*) = 0;
  virtual /*<vtableoff 0x88>*/ long __stdcall StretchRect(struct IDirect3DSurface9*, struct tagRECT*, struct IDirect3DSurface9*, struct tagRECT*, enum _D3DTEXTUREFILTERTYPE) = 0;
  virtual /*<vtableoff 0x8c>*/ long __stdcall ColorFill(struct IDirect3DSurface9*, struct tagRECT*, unsigned long) = 0;
  virtual /*<vtableoff 0x90>*/ long __stdcall CreateOffscreenPlainSurface(unsigned int, unsigned int, enum _D3DFORMAT, enum _D3DPOOL, struct IDirect3DSurface9**, void**) = 0;
  virtual /*<vtableoff 0x94>*/ long __stdcall SetRenderTarget(unsigned long, struct IDirect3DSurface9*) = 0;
  virtual /*<vtableoff 0x98>*/ long __stdcall GetRenderTarget(unsigned long, struct IDirect3DSurface9**) = 0;
  virtual /*<vtableoff 0x9c>*/ long __stdcall SetDepthStencilSurface(struct IDirect3DSurface9*) = 0;
  virtual /*<vtableoff 0xa0>*/ long __stdcall GetDepthStencilSurface(struct IDirect3DSurface9**) = 0;
  virtual /*<vtableoff 0xa4>*/ long __stdcall BeginScene() = 0;
  virtual /*<vtableoff 0xa8>*/ long __stdcall EndScene() = 0;
  virtual /*<vtableoff 0xac>*/ long __stdcall Clear(unsigned long, struct _D3DRECT*, unsigned long, unsigned long, float, unsigned long) = 0;
  virtual /*<vtableoff 0xb0>*/ long __stdcall SetTransform(enum _D3DTRANSFORMSTATETYPE, struct _D3DMATRIX*) = 0;
  virtual /*<vtableoff 0xb4>*/ long __stdcall GetTransform(enum _D3DTRANSFORMSTATETYPE, struct _D3DMATRIX*) = 0;
  virtual /*<vtableoff 0xb8>*/ long __stdcall MultiplyTransform(enum _D3DTRANSFORMSTATETYPE, struct _D3DMATRIX*) = 0;
  virtual /*<vtableoff 0xbc>*/ long __stdcall SetViewport(struct _D3DVIEWPORT9*) = 0;
  virtual /*<vtableoff 0xc0>*/ long __stdcall GetViewport(struct _D3DVIEWPORT9*) = 0;
  virtual /*<vtableoff 0xc4>*/ long __stdcall SetMaterial(struct _D3DMATERIAL9*) = 0;
  virtual /*<vtableoff 0xc8>*/ long __stdcall GetMaterial(struct _D3DMATERIAL9*) = 0;
  virtual /*<vtableoff 0xcc>*/ long __stdcall SetLight(unsigned long, struct _D3DLIGHT9*) = 0;
  virtual /*<vtableoff 0xd0>*/ long __stdcall GetLight(unsigned long, struct _D3DLIGHT9*) = 0;
  virtual /*<vtableoff 0xd4>*/ long __stdcall LightEnable(unsigned long, int) = 0;
  virtual /*<vtableoff 0xd8>*/ long __stdcall GetLightEnable(unsigned long, int*) = 0;
  virtual /*<vtableoff 0xdc>*/ long __stdcall SetClipPlane(unsigned long, float*) = 0;
  virtual /*<vtableoff 0xe0>*/ long __stdcall GetClipPlane(unsigned long, float*) = 0;
  virtual /*<vtableoff 0xe4>*/ long __stdcall SetRenderState(enum _D3DRENDERSTATETYPE, unsigned long) = 0;
  virtual /*<vtableoff 0xe8>*/ long __stdcall GetRenderState(enum _D3DRENDERSTATETYPE, unsigned long*) = 0;
  virtual /*<vtableoff 0xec>*/ long __stdcall CreateStateBlock(enum _D3DSTATEBLOCKTYPE, struct IDirect3DStateBlock9**) = 0;
  virtual /*<vtableoff 0xf0>*/ long __stdcall BeginStateBlock() = 0;
  virtual /*<vtableoff 0xf4>*/ long __stdcall EndStateBlock(struct IDirect3DStateBlock9**) = 0;
  virtual /*<vtableoff 0xf8>*/ long __stdcall SetClipStatus(struct _D3DCLIPSTATUS9*) = 0;
  virtual /*<vtableoff 0xfc>*/ long __stdcall GetClipStatus(struct _D3DCLIPSTATUS9*) = 0;
  virtual /*<vtableoff 0x100>*/ long __stdcall GetTexture(unsigned long, struct IDirect3DBaseTexture9**) = 0;
  virtual /*<vtableoff 0x104>*/ long __stdcall SetTexture(unsigned long, struct IDirect3DBaseTexture9*) = 0;
  virtual /*<vtableoff 0x108>*/ long __stdcall GetTextureStageState(unsigned long, enum _D3DTEXTURESTAGESTATETYPE, unsigned long*) = 0;
  virtual /*<vtableoff 0x10c>*/ long __stdcall SetTextureStageState(unsigned long, enum _D3DTEXTURESTAGESTATETYPE, unsigned long) = 0;
  virtual /*<vtableoff 0x110>*/ long __stdcall GetSamplerState(unsigned long, enum _D3DSAMPLERSTATETYPE, unsigned long*) = 0;
  virtual /*<vtableoff 0x114>*/ long __stdcall SetSamplerState(unsigned long, enum _D3DSAMPLERSTATETYPE, unsigned long) = 0;
  virtual /*<vtableoff 0x118>*/ long __stdcall ValidateDevice(unsigned long*) = 0;
  virtual /*<vtableoff 0x11c>*/ long __stdcall SetPaletteEntries(unsigned int, struct tagPALETTEENTRY*) = 0;
  virtual /*<vtableoff 0x120>*/ long __stdcall GetPaletteEntries(unsigned int, struct tagPALETTEENTRY*) = 0;
  virtual /*<vtableoff 0x124>*/ long __stdcall SetCurrentTexturePalette(unsigned int) = 0;
  virtual /*<vtableoff 0x128>*/ long __stdcall GetCurrentTexturePalette(unsigned int*) = 0;
  virtual /*<vtableoff 0x12c>*/ long __stdcall SetScissorRect(struct tagRECT*) = 0;
  virtual /*<vtableoff 0x130>*/ long __stdcall GetScissorRect(struct tagRECT*) = 0;
  virtual /*<vtableoff 0x134>*/ long __stdcall SetSoftwareVertexProcessing(int) = 0;
  virtual /*<vtableoff 0x138>*/ int __stdcall GetSoftwareVertexProcessing() = 0;
  virtual /*<vtableoff 0x13c>*/ long __stdcall SetNPatchMode(float) = 0;
  virtual /*<vtableoff 0x140>*/ float __stdcall GetNPatchMode() = 0;
  virtual /*<vtableoff 0x144>*/ long __stdcall DrawPrimitive(enum _D3DPRIMITIVETYPE, unsigned int, unsigned int) = 0;
  virtual /*<vtableoff 0x148>*/ long __stdcall DrawIndexedPrimitive(enum _D3DPRIMITIVETYPE, int, unsigned int, unsigned int, unsigned int, unsigned int) = 0;
  virtual /*<vtableoff 0x14c>*/ long __stdcall DrawPrimitiveUP(enum _D3DPRIMITIVETYPE, unsigned int, void*, unsigned int) = 0;
  virtual /*<vtableoff 0x150>*/ long __stdcall DrawIndexedPrimitiveUP(enum _D3DPRIMITIVETYPE, unsigned int, unsigned int, unsigned int, void*, enum _D3DFORMAT, void*, unsigned int) = 0;
  virtual /*<vtableoff 0x154>*/ long __stdcall ProcessVertices(unsigned int, unsigned int, unsigned int, struct IDirect3DVertexBuffer9*, struct IDirect3DVertexDeclaration9*, unsigned long) = 0;
  virtual /*<vtableoff 0x158>*/ long __stdcall CreateVertexDeclaration(struct _D3DVERTEXELEMENT9*, struct IDirect3DVertexDeclaration9**) = 0;
  virtual /*<vtableoff 0x15c>*/ long __stdcall SetVertexDeclaration(struct IDirect3DVertexDeclaration9*) = 0;
  virtual /*<vtableoff 0x160>*/ long __stdcall GetVertexDeclaration(struct IDirect3DVertexDeclaration9**) = 0;
  virtual /*<vtableoff 0x164>*/ long __stdcall SetFVF(unsigned long) = 0;
  virtual /*<vtableoff 0x168>*/ long __stdcall GetFVF(unsigned long*) = 0;
  virtual /*<vtableoff 0x16c>*/ long __stdcall CreateVertexShader(unsigned long*, struct IDirect3DVertexShader9**) = 0;
  virtual /*<vtableoff 0x170>*/ long __stdcall SetVertexShader(struct IDirect3DVertexShader9*) = 0;
  virtual /*<vtableoff 0x174>*/ long __stdcall GetVertexShader(struct IDirect3DVertexShader9**) = 0;
  virtual /*<vtableoff 0x178>*/ long __stdcall SetVertexShaderConstantF(unsigned int, float*, unsigned int) = 0;
  virtual /*<vtableoff 0x17c>*/ long __stdcall GetVertexShaderConstantF(unsigned int, float*, unsigned int) = 0;
  virtual /*<vtableoff 0x180>*/ long __stdcall SetVertexShaderConstantI(unsigned int, int*, unsigned int) = 0;
  virtual /*<vtableoff 0x184>*/ long __stdcall GetVertexShaderConstantI(unsigned int, int*, unsigned int) = 0;
  virtual /*<vtableoff 0x188>*/ long __stdcall SetVertexShaderConstantB(unsigned int, int*, unsigned int) = 0;
  virtual /*<vtableoff 0x18c>*/ long __stdcall GetVertexShaderConstantB(unsigned int, int*, unsigned int) = 0;
  virtual /*<vtableoff 0x190>*/ long __stdcall SetStreamSource(unsigned int, struct IDirect3DVertexBuffer9*, unsigned int, unsigned int) = 0;
  virtual /*<vtableoff 0x194>*/ long __stdcall GetStreamSource(unsigned int, struct IDirect3DVertexBuffer9**, unsigned int*, unsigned int*) = 0;
  virtual /*<vtableoff 0x198>*/ long __stdcall SetStreamSourceFreq(unsigned int, unsigned int) = 0;
  virtual /*<vtableoff 0x19c>*/ long __stdcall GetStreamSourceFreq(unsigned int, unsigned int*) = 0;
  virtual /*<vtableoff 0x1a0>*/ long __stdcall SetIndices(struct IDirect3DIndexBuffer9*) = 0;
  virtual /*<vtableoff 0x1a4>*/ long __stdcall GetIndices(struct IDirect3DIndexBuffer9**) = 0;
  virtual /*<vtableoff 0x1a8>*/ long __stdcall CreatePixelShader(unsigned long*, struct IDirect3DPixelShader9**) = 0;
  virtual /*<vtableoff 0x1ac>*/ long __stdcall SetPixelShader(struct IDirect3DPixelShader9*) = 0;
  virtual /*<vtableoff 0x1b0>*/ long __stdcall GetPixelShader(struct IDirect3DPixelShader9**) = 0;
  virtual /*<vtableoff 0x1b4>*/ long __stdcall SetPixelShaderConstantF(unsigned int, float*, unsigned int) = 0;
  virtual /*<vtableoff 0x1b8>*/ long __stdcall GetPixelShaderConstantF(unsigned int, float*, unsigned int) = 0;
  virtual /*<vtableoff 0x1bc>*/ long __stdcall SetPixelShaderConstantI(unsigned int, int*, unsigned int) = 0;
  virtual /*<vtableoff 0x1c0>*/ long __stdcall GetPixelShaderConstantI(unsigned int, int*, unsigned int) = 0;
  virtual /*<vtableoff 0x1c4>*/ long __stdcall SetPixelShaderConstantB(unsigned int, int*, unsigned int) = 0;
  virtual /*<vtableoff 0x1c8>*/ long __stdcall GetPixelShaderConstantB(unsigned int, int*, unsigned int) = 0;
  virtual /*<vtableoff 0x1cc>*/ long __stdcall DrawRectPatch(unsigned int, float*, struct _D3DRECTPATCH_INFO*) = 0;
  virtual /*<vtableoff 0x1d0>*/ long __stdcall DrawTriPatch(unsigned int, float*, struct _D3DTRIPATCH_INFO*) = 0;
  virtual /*<vtableoff 0x1d4>*/ long __stdcall DeletePatch(unsigned int) = 0;
  virtual /*<vtableoff 0x1d8>*/ long __stdcall CreateQuery(enum _D3DQUERYTYPE, struct IDirect3DQuery9**) = 0;
};
// <size 0x4>

struct CGxDeviceD3d::StateD3dLight {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long which;
  /*<thisrel this+0x4>*/ /*|0x68|*/ struct _D3DLIGHT9 val;
  /*<thisrel this+0x6c>*/ /*|0x4|*/ int enabled;
  /*<thisrel this+0x70>*/ /*|0x4|*/ unsigned int chkSum;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall StateD3dLight();
  int __thiscall InUse();
  int __thiscall operator!=(struct _D3DLIGHT9&);
  unsigned int __thiscall CalcChkSum(struct _D3DLIGHT9&);

  // virtual functions ------------------------------
};
// <size 0x74>

struct IDirect3DResource9 : struct IUnknown  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IUnknown
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirect3DResource9(struct IDirect3DResource9&);
  void __thiscall IDirect3DResource9();
  struct IDirect3DResource9& __thiscall operator=(struct IDirect3DResource9&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0xc>*/ long __stdcall GetDevice(struct IDirect3DDevice9**) = 0;
  virtual /*<vtableoff 0x10>*/ long __stdcall SetPrivateData(struct _GUID&, void*, unsigned long, unsigned long) = 0;
  virtual /*<vtableoff 0x14>*/ long __stdcall GetPrivateData(struct _GUID&, void*, unsigned long*) = 0;
  virtual /*<vtableoff 0x18>*/ long __stdcall FreePrivateData(struct _GUID&) = 0;
  virtual /*<vtableoff 0x1c>*/ unsigned long __stdcall SetPriority(unsigned long) = 0;
  virtual /*<vtableoff 0x20>*/ unsigned long __stdcall GetPriority() = 0;
  virtual /*<vtableoff 0x24>*/ void __stdcall PreLoad() = 0;
  virtual /*<vtableoff 0x28>*/ enum _D3DRESOURCETYPE __stdcall GetType() = 0;
};
// <size 0x4>

struct _D3DVERTEXBUFFER_DESC {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ enum _D3DFORMAT Format;
  /*<thisrel this+0x4>*/ /*|0x4|*/ enum _D3DRESOURCETYPE Type;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long Usage;
  /*<thisrel this+0xc>*/ /*|0x4|*/ enum _D3DPOOL Pool;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int Size;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long FVF;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct _D3DINDEXBUFFER_DESC {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ enum _D3DFORMAT Format;
  /*<thisrel this+0x4>*/ /*|0x4|*/ enum _D3DRESOURCETYPE Type;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long Usage;
  /*<thisrel this+0xc>*/ /*|0x4|*/ enum _D3DPOOL Pool;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int Size;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct _D3DDEVICE_CREATION_PARAMETERS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int AdapterOrdinal;
  /*<thisrel this+0x4>*/ /*|0x4|*/ enum _D3DDEVTYPE DeviceType;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct HWND__* hFocusWindow;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long BehaviorFlags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct IDirect3DSwapChain9 : struct IUnknown  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IUnknown
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirect3DSwapChain9(struct IDirect3DSwapChain9&);
  void __thiscall IDirect3DSwapChain9();
  struct IDirect3DSwapChain9& __thiscall operator=(struct IDirect3DSwapChain9&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0xc>*/ long __stdcall Present(struct tagRECT*, struct tagRECT*, struct HWND__*, struct _RGNDATA*, unsigned long) = 0;
  virtual /*<vtableoff 0x10>*/ long __stdcall GetFrontBufferData(struct IDirect3DSurface9*) = 0;
  virtual /*<vtableoff 0x14>*/ long __stdcall GetBackBuffer(unsigned int, enum _D3DBACKBUFFER_TYPE, struct IDirect3DSurface9**) = 0;
  virtual /*<vtableoff 0x18>*/ long __stdcall GetRasterStatus(struct _D3DRASTER_STATUS*) = 0;
  virtual /*<vtableoff 0x1c>*/ long __stdcall GetDisplayMode(struct _D3DDISPLAYMODE*) = 0;
  virtual /*<vtableoff 0x20>*/ long __stdcall GetDevice(struct IDirect3DDevice9**) = 0;
  virtual /*<vtableoff 0x24>*/ long __stdcall GetPresentParameters(struct _D3DPRESENT_PARAMETERS_*) = 0;
};
// <size 0x4>

struct _RGNDATA {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x20|*/ struct _RGNDATAHEADER rdh;
  /*<thisrel this+0x20>*/ /*|0x1|*/ char Buffer[1];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x24>

struct _D3DRASTER_STATUS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int InVBlank;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int ScanLine;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct _D3DGAMMARAMP {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x200|*/ unsigned short red[256];
  /*<thisrel this+0x200>*/ /*|0x200|*/ unsigned short green[256];
  /*<thisrel this+0x400>*/ /*|0x200|*/ unsigned short blue[256];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x600>

struct IDirect3DVolumeTexture9 : struct IDirect3DBaseTexture9  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IDirect3DBaseTexture9
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirect3DVolumeTexture9(struct IDirect3DVolumeTexture9&);
  void __thiscall IDirect3DVolumeTexture9();
  struct IDirect3DVolumeTexture9& __thiscall operator=(struct IDirect3DVolumeTexture9&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetDevice(struct IDirect3DDevice9**) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall SetPrivateData(struct _GUID&, void*, unsigned long, unsigned long) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetPrivateData(struct _GUID&, void*, unsigned long*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall FreePrivateData(struct _GUID&) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall SetPriority(unsigned long) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall GetPriority() = 0;
  virtual /*<vtableoff 0x0>*/ void __stdcall PreLoad() = 0;
  virtual /*<vtableoff 0x0>*/ enum _D3DRESOURCETYPE __stdcall GetType() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall SetLOD(unsigned long) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall GetLOD() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall GetLevelCount() = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall SetAutoGenFilterType(enum _D3DTEXTUREFILTERTYPE) = 0;
  virtual /*<vtableoff 0x0>*/ enum _D3DTEXTUREFILTERTYPE __stdcall GetAutoGenFilterType() = 0;
  virtual /*<vtableoff 0x0>*/ void __stdcall GenerateMipSubLevels() = 0;
  virtual /*<vtableoff 0x44>*/ long __stdcall GetLevelDesc(unsigned int, struct _D3DVOLUME_DESC*) = 0;
  virtual /*<vtableoff 0x48>*/ long __stdcall GetVolumeLevel(unsigned int, struct IDirect3DVolume9**) = 0;
  virtual /*<vtableoff 0x4c>*/ long __stdcall LockBox(unsigned int, struct _D3DLOCKED_BOX*, struct _D3DBOX*, unsigned long) = 0;
  virtual /*<vtableoff 0x50>*/ long __stdcall UnlockBox(unsigned int) = 0;
  virtual /*<vtableoff 0x54>*/ long __stdcall AddDirtyBox(struct _D3DBOX*) = 0;
};
// <size 0x4>

struct IDirect3DCubeTexture9 : struct IDirect3DBaseTexture9  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IDirect3DBaseTexture9
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirect3DCubeTexture9(struct IDirect3DCubeTexture9&);
  void __thiscall IDirect3DCubeTexture9();
  struct IDirect3DCubeTexture9& __thiscall operator=(struct IDirect3DCubeTexture9&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetDevice(struct IDirect3DDevice9**) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall SetPrivateData(struct _GUID&, void*, unsigned long, unsigned long) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetPrivateData(struct _GUID&, void*, unsigned long*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall FreePrivateData(struct _GUID&) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall SetPriority(unsigned long) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall GetPriority() = 0;
  virtual /*<vtableoff 0x0>*/ void __stdcall PreLoad() = 0;
  virtual /*<vtableoff 0x0>*/ enum _D3DRESOURCETYPE __stdcall GetType() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall SetLOD(unsigned long) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall GetLOD() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall GetLevelCount() = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall SetAutoGenFilterType(enum _D3DTEXTUREFILTERTYPE) = 0;
  virtual /*<vtableoff 0x0>*/ enum _D3DTEXTUREFILTERTYPE __stdcall GetAutoGenFilterType() = 0;
  virtual /*<vtableoff 0x0>*/ void __stdcall GenerateMipSubLevels() = 0;
  virtual /*<vtableoff 0x44>*/ long __stdcall GetLevelDesc(unsigned int, struct _D3DSURFACE_DESC*) = 0;
  virtual /*<vtableoff 0x48>*/ long __stdcall GetCubeMapSurface(enum _D3DCUBEMAP_FACES, unsigned int, struct IDirect3DSurface9**) = 0;
  virtual /*<vtableoff 0x4c>*/ long __stdcall LockRect(enum _D3DCUBEMAP_FACES, unsigned int, struct _D3DLOCKED_RECT*, struct tagRECT*, unsigned long) = 0;
  virtual /*<vtableoff 0x50>*/ long __stdcall UnlockRect(enum _D3DCUBEMAP_FACES, unsigned int) = 0;
  virtual /*<vtableoff 0x54>*/ long __stdcall AddDirtyRect(enum _D3DCUBEMAP_FACES, struct tagRECT*) = 0;
};
// <size 0x4>

struct IDirect3DBaseTexture9 : struct IDirect3DResource9  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IDirect3DResource9
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirect3DBaseTexture9(struct IDirect3DBaseTexture9&);
  void __thiscall IDirect3DBaseTexture9();
  struct IDirect3DBaseTexture9& __thiscall operator=(struct IDirect3DBaseTexture9&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetDevice(struct IDirect3DDevice9**) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall SetPrivateData(struct _GUID&, void*, unsigned long, unsigned long) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall GetPrivateData(struct _GUID&, void*, unsigned long*) = 0;
  virtual /*<vtableoff 0x0>*/ long __stdcall FreePrivateData(struct _GUID&) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall SetPriority(unsigned long) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall GetPriority() = 0;
  virtual /*<vtableoff 0x0>*/ void __stdcall PreLoad() = 0;
  virtual /*<vtableoff 0x0>*/ enum _D3DRESOURCETYPE __stdcall GetType() = 0;
  virtual /*<vtableoff 0x2c>*/ unsigned long __stdcall SetLOD(unsigned long) = 0;
  virtual /*<vtableoff 0x30>*/ unsigned long __stdcall GetLOD() = 0;
  virtual /*<vtableoff 0x34>*/ unsigned long __stdcall GetLevelCount() = 0;
  virtual /*<vtableoff 0x38>*/ long __stdcall SetAutoGenFilterType(enum _D3DTEXTUREFILTERTYPE) = 0;
  virtual /*<vtableoff 0x3c>*/ enum _D3DTEXTUREFILTERTYPE __stdcall GetAutoGenFilterType() = 0;
  virtual /*<vtableoff 0x40>*/ void __stdcall GenerateMipSubLevels() = 0;
};
// <size 0x4>

struct _D3DRECT {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long x1;
  /*<thisrel this+0x4>*/ /*|0x4|*/ long y1;
  /*<thisrel this+0x8>*/ /*|0x4|*/ long x2;
  /*<thisrel this+0xc>*/ /*|0x4|*/ long y2;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct IDirect3DStateBlock9 : struct IUnknown  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IUnknown
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirect3DStateBlock9(struct IDirect3DStateBlock9&);
  void __thiscall IDirect3DStateBlock9();
  struct IDirect3DStateBlock9& __thiscall operator=(struct IDirect3DStateBlock9&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0xc>*/ long __stdcall GetDevice(struct IDirect3DDevice9**) = 0;
  virtual /*<vtableoff 0x10>*/ long __stdcall Capture() = 0;
  virtual /*<vtableoff 0x14>*/ long __stdcall Apply() = 0;
};
// <size 0x4>

struct _D3DCLIPSTATUS9 {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long ClipUnion;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long ClipIntersection;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct IDirect3DVertexDeclaration9 : struct IUnknown  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IUnknown
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirect3DVertexDeclaration9(struct IDirect3DVertexDeclaration9&);
  void __thiscall IDirect3DVertexDeclaration9();
  struct IDirect3DVertexDeclaration9& __thiscall operator=(struct IDirect3DVertexDeclaration9&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0xc>*/ long __stdcall GetDevice(struct IDirect3DDevice9**) = 0;
  virtual /*<vtableoff 0x10>*/ long __stdcall GetDeclaration(struct _D3DVERTEXELEMENT9*, unsigned int*) = 0;
};
// <size 0x4>

struct _D3DVERTEXELEMENT9 {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x2|*/ unsigned short Stream;
  /*<thisrel this+0x2>*/ /*|0x2|*/ unsigned short Offset;
  /*<thisrel this+0x4>*/ /*|0x1|*/ unsigned char Type;
  /*<thisrel this+0x5>*/ /*|0x1|*/ unsigned char Method;
  /*<thisrel this+0x6>*/ /*|0x1|*/ unsigned char Usage;
  /*<thisrel this+0x7>*/ /*|0x1|*/ unsigned char UsageIndex;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct IDirect3DVertexShader9 : struct IUnknown  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IUnknown
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirect3DVertexShader9(struct IDirect3DVertexShader9&);
  void __thiscall IDirect3DVertexShader9();
  struct IDirect3DVertexShader9& __thiscall operator=(struct IDirect3DVertexShader9&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0xc>*/ long __stdcall GetDevice(struct IDirect3DDevice9**) = 0;
  virtual /*<vtableoff 0x10>*/ long __stdcall GetFunction(void*, unsigned int*) = 0;
};
// <size 0x4>

struct _D3DRECTPATCH_INFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int StartVertexOffsetWidth;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int StartVertexOffsetHeight;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int Width;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int Height;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int Stride;
  /*<thisrel this+0x14>*/ /*|0x4|*/ enum _D3DBASISTYPE Basis;
  /*<thisrel this+0x18>*/ /*|0x4|*/ enum _D3DDEGREETYPE Degree;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c>

struct _D3DTRIPATCH_INFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int StartVertexOffset;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int NumVertices;
  /*<thisrel this+0x8>*/ /*|0x4|*/ enum _D3DBASISTYPE Basis;
  /*<thisrel this+0xc>*/ /*|0x4|*/ enum _D3DDEGREETYPE Degree;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x10>

struct IDirect3DQuery9 : struct IUnknown  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IUnknown
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirect3DQuery9(struct IDirect3DQuery9&);
  void __thiscall IDirect3DQuery9();
  struct IDirect3DQuery9& __thiscall operator=(struct IDirect3DQuery9&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0xc>*/ long __stdcall GetDevice(struct IDirect3DDevice9**) = 0;
  virtual /*<vtableoff 0x10>*/ enum _D3DQUERYTYPE __stdcall GetType() = 0;
  virtual /*<vtableoff 0x14>*/ unsigned long __stdcall GetDataSize() = 0;
  virtual /*<vtableoff 0x18>*/ long __stdcall Issue(unsigned long) = 0;
  virtual /*<vtableoff 0x1c>*/ long __stdcall GetData(void*, unsigned long, unsigned long) = 0;
};
// <size 0x4>

struct _D3DVOLUME_DESC {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ enum _D3DFORMAT Format;
  /*<thisrel this+0x4>*/ /*|0x4|*/ enum _D3DRESOURCETYPE Type;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long Usage;
  /*<thisrel this+0xc>*/ /*|0x4|*/ enum _D3DPOOL Pool;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int Width;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned int Height;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned int Depth;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c>

struct IDirect3DVolume9 : struct IUnknown  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IUnknown
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirect3DVolume9(struct IDirect3DVolume9&);
  void __thiscall IDirect3DVolume9();
  struct IDirect3DVolume9& __thiscall operator=(struct IDirect3DVolume9&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0xc>*/ long __stdcall GetDevice(struct IDirect3DDevice9**) = 0;
  virtual /*<vtableoff 0x10>*/ long __stdcall SetPrivateData(struct _GUID&, void*, unsigned long, unsigned long) = 0;
  virtual /*<vtableoff 0x14>*/ long __stdcall GetPrivateData(struct _GUID&, void*, unsigned long*) = 0;
  virtual /*<vtableoff 0x18>*/ long __stdcall FreePrivateData(struct _GUID&) = 0;
  virtual /*<vtableoff 0x1c>*/ long __stdcall GetContainer(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x20>*/ long __stdcall GetDesc(struct _D3DVOLUME_DESC*) = 0;
  virtual /*<vtableoff 0x24>*/ long __stdcall LockBox(struct _D3DLOCKED_BOX*, struct _D3DBOX*, unsigned long) = 0;
  virtual /*<vtableoff 0x28>*/ long __stdcall UnlockBox() = 0;
};
// <size 0x4>

struct _D3DLOCKED_BOX {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int RowPitch;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int SlicePitch;
  /*<thisrel this+0x8>*/ /*|0x4|*/ void* pBits;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct _D3DBOX {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int Left;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int Top;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int Right;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int Bottom;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int Front;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned int Back;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct RegisterCombiners::CombinerVariable {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int input;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int mapping;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int component;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct RegisterCombiners::CombinerOutput {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int abOutput;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned int cdOutput;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned int sumOutput;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned int scale;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned int bias;
  /*<thisrel this+0x14>*/ /*|0x1|*/ unsigned char abDotProduct;
  /*<thisrel this+0x15>*/ /*|0x1|*/ unsigned char cdDotProduct;
  /*<thisrel this+0x16>*/ /*|0x1|*/ unsigned char muxSum;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x18>

struct _RGNDATAHEADER {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long iType;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long nCount;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long nRgnSize;
  /*<thisrel this+0x10>*/ /*|0x10|*/ struct tagRECT rcBound;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct NETEVENTQUEUENODE : class TSLinkedNode<NETEVENTQUEUENODE>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ enum EVENTID m_eventId;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long m_timeReceived;
  /*<thisrel this+0x10>*/ /*|0x4|*/ void* m_data;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long m_dataSize;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<NETEVENTQUEUENODE>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ~NETEVENTQUEUENODE();
  void __thiscall NETEVENTQUEUENODE(struct NETEVENTQUEUENODE&);
  void __thiscall NETEVENTQUEUENODE();
  struct NETEVENTQUEUENODE& __thiscall operator=(struct NETEVENTQUEUENODE&);
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x18>

struct INTDATA {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int theInt;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall INTDATA();
  int& __thiscall operator int &();

  // virtual functions ------------------------------
};
// <size 0x4>

struct HOLDINFO {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ enum CHARACTER_ITEM_GEOSETS geosetGroup;
  /*<thisrel this+0x4>*/ /*|0x4|*/ enum TEXCOMPONENT_SECTIONS holdSection;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct FILENAMEENTRY {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x104|*/ char fileName[260];
  /*<thisrel this+0x104>*/ /*|0x4|*/ unsigned int accumulatedFreq;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall FILENAMEENTRY(struct FILENAMEENTRY&);
  void __thiscall FILENAMEENTRY();
  struct FILENAMEENTRY& __thiscall operator=(struct FILENAMEENTRY&);
  void __thiscall SetName(char*, unsigned int);

  // virtual functions ------------------------------
};
// <size 0x108>

struct ISequentialStream : struct IUnknown  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IUnknown
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ISequentialStream(struct ISequentialStream&);
  void __thiscall ISequentialStream();
  struct ISequentialStream& __thiscall operator=(struct ISequentialStream&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0xc>*/ long __stdcall Read(void*, unsigned long, unsigned long*) = 0;
  virtual /*<vtableoff 0x10>*/ long __stdcall Write(void*, unsigned long, unsigned long*) = 0;
};
// <size 0x4>

struct ThreadStack {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long m_retAddr;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long m_funcAddr;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int m_logExit;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct ContextTurn : class TSLinkedNode<ContextTurn>  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long m_turnId;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long m_callBufferHead;

  // base classes -----------------------------------
  // baseclass class TSLinkedNode<ContextTurn>
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall ContextTurn(struct ContextTurn&);
  void __thiscall ContextTurn();
  struct ContextTurn& __thiscall operator=(struct ContextTurn&);
  void __thiscall ~ContextTurn();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x10>

struct ContextCall {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long m_funcAddr;
  /*<thisrel this+0x4>*/ /*|0x1|*/ unsigned char m_depth;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x5>

struct W32Joystick::_transaxis {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int offset;
  /*<thisrel this+0x4>*/ /*|0x4|*/ float scale;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct OsNet::OUTPUT::__unnamed::__unnamed_e1_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ void* m_operationId;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct OsNet::OUTPUT::__unnamed::__unnamed_e2_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long m_time;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct OsNet::INPUT::__unnamed::__unnamed_e3_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ void* m_operationId;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct OsNet::INPUT::__unnamed::__unnamed_e4_ {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1>

struct SoundFileInstance {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x1|*/ unsigned char inUse;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int currentOffset;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct IDirectMusicGetLoader : struct IUnknown  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IUnknown
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirectMusicGetLoader(struct IDirectMusicGetLoader&);
  void __thiscall IDirectMusicGetLoader();
  struct IDirectMusicGetLoader& __thiscall operator=(struct IDirectMusicGetLoader&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0xc>*/ long __stdcall GetLoader(struct IDirectMusicLoader**) = 0;
};
// <size 0x4>

struct IPersist : struct IUnknown  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IUnknown
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IPersist(struct IPersist&);
  void __thiscall IPersist();
  struct IPersist& __thiscall operator=(struct IPersist&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0xc>*/ long __stdcall GetClassID(struct _GUID*) = 0;
};
// <size 0x4>

struct IDirectMusicInstrument : struct IUnknown  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IUnknown
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirectMusicInstrument(struct IDirectMusicInstrument&);
  void __thiscall IDirectMusicInstrument();
  struct IDirectMusicInstrument& __thiscall operator=(struct IDirectMusicInstrument&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0xc>*/ long __stdcall GetPatch(unsigned long*) = 0;
  virtual /*<vtableoff 0x10>*/ long __stdcall SetPatch(unsigned long) = 0;
};
// <size 0x4>

struct IDirectMusicPerformance : struct IUnknown  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IUnknown
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirectMusicPerformance(struct IDirectMusicPerformance&);
  void __thiscall IDirectMusicPerformance();
  struct IDirectMusicPerformance& __thiscall operator=(struct IDirectMusicPerformance&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0xc>*/ long __stdcall Init(struct IDirectMusic**, struct IDirectSound*, struct HWND__*) = 0;
  virtual /*<vtableoff 0x10>*/ long __stdcall PlaySegment(struct IDirectMusicSegment*, unsigned long, __int64, struct IDirectMusicSegmentState**) = 0;
  virtual /*<vtableoff 0x14>*/ long __stdcall Stop(struct IDirectMusicSegment*, struct IDirectMusicSegmentState*, long, unsigned long) = 0;
  virtual /*<vtableoff 0x18>*/ long __stdcall GetSegmentState(struct IDirectMusicSegmentState**, long) = 0;
  virtual /*<vtableoff 0x1c>*/ long __stdcall SetPrepareTime(unsigned long) = 0;
  virtual /*<vtableoff 0x20>*/ long __stdcall GetPrepareTime(unsigned long*) = 0;
  virtual /*<vtableoff 0x24>*/ long __stdcall SetBumperLength(unsigned long) = 0;
  virtual /*<vtableoff 0x28>*/ long __stdcall GetBumperLength(unsigned long*) = 0;
  virtual /*<vtableoff 0x2c>*/ long __stdcall SendPMsg(struct _DMUS_PMSG*) = 0;
  virtual /*<vtableoff 0x30>*/ long __stdcall MusicToReferenceTime(long, __int64*) = 0;
  virtual /*<vtableoff 0x34>*/ long __stdcall ReferenceToMusicTime(__int64, long*) = 0;
  virtual /*<vtableoff 0x38>*/ long __stdcall IsPlaying(struct IDirectMusicSegment*, struct IDirectMusicSegmentState*) = 0;
  virtual /*<vtableoff 0x3c>*/ long __stdcall GetTime(__int64*, long*) = 0;
  virtual /*<vtableoff 0x40>*/ long __stdcall AllocPMsg(unsigned long, struct _DMUS_PMSG**) = 0;
  virtual /*<vtableoff 0x44>*/ long __stdcall FreePMsg(struct _DMUS_PMSG*) = 0;
  virtual /*<vtableoff 0x48>*/ long __stdcall GetGraph(struct IDirectMusicGraph**) = 0;
  virtual /*<vtableoff 0x4c>*/ long __stdcall SetGraph(struct IDirectMusicGraph*) = 0;
  virtual /*<vtableoff 0x50>*/ long __stdcall SetNotificationHandle(void*, __int64) = 0;
  virtual /*<vtableoff 0x54>*/ long __stdcall GetNotificationPMsg(struct _DMUS_NOTIFICATION_PMSG**) = 0;
  virtual /*<vtableoff 0x58>*/ long __stdcall AddNotificationType(struct _GUID&) = 0;
  virtual /*<vtableoff 0x5c>*/ long __stdcall RemoveNotificationType(struct _GUID&) = 0;
  virtual /*<vtableoff 0x60>*/ long __stdcall AddPortA(struct IDirectMusicPort*) = 0;
  virtual /*<vtableoff 0x64>*/ long __stdcall RemovePort(struct IDirectMusicPort*) = 0;
  virtual /*<vtableoff 0x68>*/ long __stdcall AssignPChannelBlock(unsigned long, struct IDirectMusicPort*, unsigned long) = 0;
  virtual /*<vtableoff 0x6c>*/ long __stdcall AssignPChannel(unsigned long, struct IDirectMusicPort*, unsigned long, unsigned long) = 0;
  virtual /*<vtableoff 0x70>*/ long __stdcall PChannelInfo(unsigned long, struct IDirectMusicPort**, unsigned long*, unsigned long*) = 0;
  virtual /*<vtableoff 0x74>*/ long __stdcall DownloadInstrument(struct IDirectMusicInstrument*, unsigned long, struct IDirectMusicDownloadedInstrument**, struct _DMUS_NOTERANGE*, unsigned long, struct IDirectMusicPort**, unsigned long*, unsigned long*) = 0;
  virtual /*<vtableoff 0x78>*/ long __stdcall Invalidate(long, unsigned long) = 0;
  virtual /*<vtableoff 0x7c>*/ long __stdcall GetParam(struct _GUID&, unsigned long, unsigned long, long, long*, void*) = 0;
  virtual /*<vtableoff 0x80>*/ long __stdcall SetParam(struct _GUID&, unsigned long, unsigned long, long, void*) = 0;
  virtual /*<vtableoff 0x84>*/ long __stdcall GetGlobalParam(struct _GUID&, void*, unsigned long) = 0;
  virtual /*<vtableoff 0x88>*/ long __stdcall SetGlobalParam(struct _GUID&, void*, unsigned long) = 0;
  virtual /*<vtableoff 0x8c>*/ long __stdcall GetLatencyTime(__int64*) = 0;
  virtual /*<vtableoff 0x90>*/ long __stdcall GetQueueTime(__int64*) = 0;
  virtual /*<vtableoff 0x94>*/ long __stdcall AdjustTime(__int64) = 0;
  virtual /*<vtableoff 0x98>*/ long __stdcall CloseDown() = 0;
  virtual /*<vtableoff 0x9c>*/ long __stdcall GetResolvedTime(__int64, __int64*, unsigned long) = 0;
  virtual /*<vtableoff 0xa0>*/ long __stdcall MIDIToMusic(unsigned char, struct _DMUS_CHORD_KEY*, unsigned char, unsigned char, unsigned short*) = 0;
  virtual /*<vtableoff 0xa4>*/ long __stdcall MusicToMIDI(unsigned short, struct _DMUS_CHORD_KEY*, unsigned char, unsigned char, unsigned char*) = 0;
  virtual /*<vtableoff 0xa8>*/ long __stdcall TimeToRhythm(long, struct _DMUS_TIMESIGNATURE*, unsigned short*, unsigned char*, unsigned char*, short*) = 0;
  virtual /*<vtableoff 0xac>*/ long __stdcall RhythmToTime(unsigned short, unsigned char, unsigned char, short, struct _DMUS_TIMESIGNATURE*, long*) = 0;
};
// <size 0x4>

struct IDirectMusic : struct IUnknown  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IUnknown
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirectMusic(struct IDirectMusic&);
  void __thiscall IDirectMusic();
  struct IDirectMusic& __thiscall operator=(struct IDirectMusic&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0xc>*/ long __stdcall EnumPort(unsigned long, struct _DMUS_PORTCAPS*) = 0;
  virtual /*<vtableoff 0x10>*/ long __stdcall CreateMusicBuffer(struct _DMUS_BUFFERDESC*, struct IDirectMusicBuffer**, struct IUnknown*) = 0;
  virtual /*<vtableoff 0x14>*/ long __stdcall CreatePort(struct _GUID&, struct _DMUS_PORTPARAMS8*, struct IDirectMusicPort**, struct IUnknown*) = 0;
  virtual /*<vtableoff 0x18>*/ long __stdcall EnumMasterClock(unsigned long, struct _DMUS_CLOCKINFO8*) = 0;
  virtual /*<vtableoff 0x1c>*/ long __stdcall GetMasterClock(struct _GUID*, struct IReferenceClock**) = 0;
  virtual /*<vtableoff 0x20>*/ long __stdcall SetMasterClock(struct _GUID&) = 0;
  virtual /*<vtableoff 0x24>*/ long __stdcall Activate(int) = 0;
  virtual /*<vtableoff 0x28>*/ long __stdcall GetDefaultPort(struct _GUID*) = 0;
  virtual /*<vtableoff 0x2c>*/ long __stdcall SetDirectSound(struct IDirectSound*, struct HWND__*) = 0;
};
// <size 0x4>

struct IDirectMusicSegment : struct IUnknown  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IUnknown
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirectMusicSegment(struct IDirectMusicSegment&);
  void __thiscall IDirectMusicSegment();
  struct IDirectMusicSegment& __thiscall operator=(struct IDirectMusicSegment&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0xc>*/ long __stdcall GetLength(long*) = 0;
  virtual /*<vtableoff 0x10>*/ long __stdcall SetLength(long) = 0;
  virtual /*<vtableoff 0x14>*/ long __stdcall GetRepeats(unsigned long*) = 0;
  virtual /*<vtableoff 0x18>*/ long __stdcall SetRepeats(unsigned long) = 0;
  virtual /*<vtableoff 0x1c>*/ long __stdcall GetDefaultResolution(unsigned long*) = 0;
  virtual /*<vtableoff 0x20>*/ long __stdcall SetDefaultResolution(unsigned long) = 0;
  virtual /*<vtableoff 0x24>*/ long __stdcall GetTrack(struct _GUID&, unsigned long, unsigned long, struct IDirectMusicTrack**) = 0;
  virtual /*<vtableoff 0x28>*/ long __stdcall GetTrackGroup(struct IDirectMusicTrack*, unsigned long*) = 0;
  virtual /*<vtableoff 0x2c>*/ long __stdcall InsertTrack(struct IDirectMusicTrack*, unsigned long) = 0;
  virtual /*<vtableoff 0x30>*/ long __stdcall RemoveTrack(struct IDirectMusicTrack*) = 0;
  virtual /*<vtableoff 0x34>*/ long __stdcall InitPlay(struct IDirectMusicSegmentState**, struct IDirectMusicPerformance*, unsigned long) = 0;
  virtual /*<vtableoff 0x38>*/ long __stdcall GetGraph(struct IDirectMusicGraph**) = 0;
  virtual /*<vtableoff 0x3c>*/ long __stdcall SetGraph(struct IDirectMusicGraph*) = 0;
  virtual /*<vtableoff 0x40>*/ long __stdcall AddNotificationType(struct _GUID&) = 0;
  virtual /*<vtableoff 0x44>*/ long __stdcall RemoveNotificationType(struct _GUID&) = 0;
  virtual /*<vtableoff 0x48>*/ long __stdcall GetParam(struct _GUID&, unsigned long, unsigned long, long, long*, void*) = 0;
  virtual /*<vtableoff 0x4c>*/ long __stdcall SetParam(struct _GUID&, unsigned long, unsigned long, long, void*) = 0;
  virtual /*<vtableoff 0x50>*/ long __stdcall Clone(long, long, struct IDirectMusicSegment**) = 0;
  virtual /*<vtableoff 0x54>*/ long __stdcall SetStartPoint(long) = 0;
  virtual /*<vtableoff 0x58>*/ long __stdcall GetStartPoint(long*) = 0;
  virtual /*<vtableoff 0x5c>*/ long __stdcall SetLoopPoints(long, long) = 0;
  virtual /*<vtableoff 0x60>*/ long __stdcall GetLoopPoints(long*, long*) = 0;
  virtual /*<vtableoff 0x64>*/ long __stdcall SetPChannelsUsed(unsigned long, unsigned long*) = 0;
};
// <size 0x4>

struct IDirectMusicSegmentState : struct IUnknown  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IUnknown
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirectMusicSegmentState(struct IDirectMusicSegmentState&);
  void __thiscall IDirectMusicSegmentState();
  struct IDirectMusicSegmentState& __thiscall operator=(struct IDirectMusicSegmentState&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0xc>*/ long __stdcall GetRepeats(unsigned long*) = 0;
  virtual /*<vtableoff 0x10>*/ long __stdcall GetSegment(struct IDirectMusicSegment**) = 0;
  virtual /*<vtableoff 0x14>*/ long __stdcall GetStartTime(long*) = 0;
  virtual /*<vtableoff 0x18>*/ long __stdcall GetSeek(long*) = 0;
  virtual /*<vtableoff 0x1c>*/ long __stdcall GetStartPoint(long*) = 0;
};
// <size 0x4>

struct _DMUS_PMSG {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwSize;
  /*<thisrel this+0x8>*/ /*|0x8|*/ __int64 rtTime;
  /*<thisrel this+0x10>*/ /*|0x4|*/ long mtTime;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long dwPChannel;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned long dwVirtualTrackID;
  /*<thisrel this+0x20>*/ /*|0x4|*/ struct IDirectMusicTool* pTool;
  /*<thisrel this+0x24>*/ /*|0x4|*/ struct IDirectMusicGraph* pGraph;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned long dwType;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ unsigned long dwVoiceID;
  /*<thisrel this+0x30>*/ /*|0x4|*/ unsigned long dwGroupID;
  /*<thisrel this+0x34>*/ /*|0x4|*/ struct IUnknown* punkUser;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x38>

struct IDirectMusicGraph : struct IUnknown  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IUnknown
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirectMusicGraph(struct IDirectMusicGraph&);
  void __thiscall IDirectMusicGraph();
  struct IDirectMusicGraph& __thiscall operator=(struct IDirectMusicGraph&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0xc>*/ long __stdcall StampPMsg(struct _DMUS_PMSG*) = 0;
  virtual /*<vtableoff 0x10>*/ long __stdcall InsertTool(struct IDirectMusicTool*, unsigned long*, unsigned long, long) = 0;
  virtual /*<vtableoff 0x14>*/ long __stdcall GetTool(unsigned long, struct IDirectMusicTool**) = 0;
  virtual /*<vtableoff 0x18>*/ long __stdcall RemoveTool(struct IDirectMusicTool*) = 0;
};
// <size 0x4>

struct _DMUS_NOTIFICATION_PMSG {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwSize;
  /*<thisrel this+0x8>*/ /*|0x8|*/ __int64 rtTime;
  /*<thisrel this+0x10>*/ /*|0x4|*/ long mtTime;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long dwPChannel;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned long dwVirtualTrackID;
  /*<thisrel this+0x20>*/ /*|0x4|*/ struct IDirectMusicTool* pTool;
  /*<thisrel this+0x24>*/ /*|0x4|*/ struct IDirectMusicGraph* pGraph;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned long dwType;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ unsigned long dwVoiceID;
  /*<thisrel this+0x30>*/ /*|0x4|*/ unsigned long dwGroupID;
  /*<thisrel this+0x34>*/ /*|0x4|*/ struct IUnknown* punkUser;
  /*<thisrel this+0x38>*/ /*|0x10|*/ struct _GUID guidNotificationType;
  /*<thisrel this+0x48>*/ /*|0x4|*/ unsigned long dwNotificationOption;
  /*<thisrel this+0x4c>*/ /*|0x4|*/ unsigned long dwField1;
  /*<thisrel this+0x50>*/ /*|0x4|*/ unsigned long dwField2;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x58>

struct IDirectMusicPort : struct IUnknown  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IUnknown
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirectMusicPort(struct IDirectMusicPort&);
  void __thiscall IDirectMusicPort();
  struct IDirectMusicPort& __thiscall operator=(struct IDirectMusicPort&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0xc>*/ long __stdcall PlayBuffer(struct IDirectMusicBuffer*) = 0;
  virtual /*<vtableoff 0x10>*/ long __stdcall SetReadNotificationHandle(void*) = 0;
  virtual /*<vtableoff 0x14>*/ long __stdcall Read(struct IDirectMusicBuffer*) = 0;
  virtual /*<vtableoff 0x18>*/ long __stdcall DownloadInstrument(struct IDirectMusicInstrument*, struct IDirectMusicDownloadedInstrument**, struct _DMUS_NOTERANGE*, unsigned long) = 0;
  virtual /*<vtableoff 0x1c>*/ long __stdcall UnloadInstrument(struct IDirectMusicDownloadedInstrument*) = 0;
  virtual /*<vtableoff 0x20>*/ long __stdcall GetLatencyClock(struct IReferenceClock**) = 0;
  virtual /*<vtableoff 0x24>*/ long __stdcall GetRunningStats(struct _DMUS_SYNTHSTATS*) = 0;
  virtual /*<vtableoff 0x28>*/ long __stdcall Compact() = 0;
  virtual /*<vtableoff 0x2c>*/ long __stdcall GetCaps(struct _DMUS_PORTCAPS*) = 0;
  virtual /*<vtableoff 0x30>*/ long __stdcall DeviceIoControl(unsigned long, void*, unsigned long, void*, unsigned long, unsigned long*, struct _OVERLAPPED*) = 0;
  virtual /*<vtableoff 0x34>*/ long __stdcall SetNumChannelGroups(unsigned long) = 0;
  virtual /*<vtableoff 0x38>*/ long __stdcall GetNumChannelGroups(unsigned long*) = 0;
  virtual /*<vtableoff 0x3c>*/ long __stdcall Activate(int) = 0;
  virtual /*<vtableoff 0x40>*/ long __stdcall SetChannelPriority(unsigned long, unsigned long, unsigned long) = 0;
  virtual /*<vtableoff 0x44>*/ long __stdcall GetChannelPriority(unsigned long, unsigned long, unsigned long*) = 0;
  virtual /*<vtableoff 0x48>*/ long __stdcall SetDirectSound(struct IDirectSound*, struct IDirectSoundBuffer*) = 0;
  virtual /*<vtableoff 0x4c>*/ long __stdcall GetFormat(struct tWAVEFORMATEX*, unsigned long*, unsigned long*) = 0;
};
// <size 0x4>

struct IDirectMusicDownloadedInstrument : struct IUnknown  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IUnknown
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirectMusicDownloadedInstrument(struct IDirectMusicDownloadedInstrument&);
  void __thiscall IDirectMusicDownloadedInstrument();
  struct IDirectMusicDownloadedInstrument& __thiscall operator=(struct IDirectMusicDownloadedInstrument&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
};
// <size 0x4>

struct _DMUS_NOTERANGE {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwLowNote;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwHighNote;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct _DMUS_CHORD_KEY {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x20|*/ unsigned short wszName[16];
  /*<thisrel this+0x20>*/ /*|0x2|*/ unsigned short wMeasure;
  /*<thisrel this+0x22>*/ /*|0x1|*/ unsigned char bBeat;
  /*<thisrel this+0x23>*/ /*|0x1|*/ unsigned char bSubChordCount;
  /*<thisrel this+0x24>*/ /*|0xa0|*/ struct _DMUS_SUBCHORD SubChordList[8];
  /*<thisrel this+0xc4>*/ /*|0x4|*/ unsigned long dwScale;
  /*<thisrel this+0xc8>*/ /*|0x1|*/ unsigned char bKey;
  /*<thisrel this+0xc9>*/ /*|0x1|*/ unsigned char bFlags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xcc>

struct _DMUS_TIMESIGNATURE {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ long mtTime;
  /*<thisrel this+0x4>*/ /*|0x1|*/ unsigned char bBeatsPerMeasure;
  /*<thisrel this+0x5>*/ /*|0x1|*/ unsigned char bBeat;
  /*<thisrel this+0x6>*/ /*|0x2|*/ unsigned short wGridsPerBeat;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct _DMUS_AUDIOPARAMS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ int fInitNow;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long dwValidData;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long dwFeatures;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long dwVoices;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long dwSampleRate;
  /*<thisrel this+0x18>*/ /*|0x10|*/ struct _GUID clsidDefaultSynth;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x28>

struct _DMUS_PORTCAPS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x8>*/ /*|0x10|*/ struct _GUID guidPort;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long dwClass;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ unsigned long dwType;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned long dwMemorySize;
  /*<thisrel this+0x24>*/ /*|0x4|*/ unsigned long dwMaxChannelGroups;
  /*<thisrel this+0x28>*/ /*|0x4|*/ unsigned long dwMaxVoices;
  /*<thisrel this+0x2c>*/ /*|0x4|*/ unsigned long dwMaxAudioChannels;
  /*<thisrel this+0x30>*/ /*|0x4|*/ unsigned long dwEffectFlags;
  /*<thisrel this+0x34>*/ /*|0x100|*/ unsigned short wszDescription[128];

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x134>

struct _DMUS_BUFFERDESC {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwFlags;
  /*<thisrel this+0x8>*/ /*|0x10|*/ struct _GUID guidBufferFormat;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long cbBuffer;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x1c>

struct IDirectMusicBuffer : struct IUnknown  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IUnknown
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirectMusicBuffer(struct IDirectMusicBuffer&);
  void __thiscall IDirectMusicBuffer();
  struct IDirectMusicBuffer& __thiscall operator=(struct IDirectMusicBuffer&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0xc>*/ long __stdcall Flush() = 0;
  virtual /*<vtableoff 0x10>*/ long __stdcall TotalTime(__int64*) = 0;
  virtual /*<vtableoff 0x14>*/ long __stdcall PackStructured(__int64, unsigned long, unsigned long) = 0;
  virtual /*<vtableoff 0x18>*/ long __stdcall PackUnstructured(__int64, unsigned long, unsigned long, unsigned char*) = 0;
  virtual /*<vtableoff 0x1c>*/ long __stdcall ResetReadPtr() = 0;
  virtual /*<vtableoff 0x20>*/ long __stdcall GetNextEvent(__int64*, unsigned long*, unsigned long*, unsigned char**) = 0;
  virtual /*<vtableoff 0x24>*/ long __stdcall GetRawBufferPtr(unsigned char**) = 0;
  virtual /*<vtableoff 0x28>*/ long __stdcall GetStartTime(__int64*) = 0;
  virtual /*<vtableoff 0x2c>*/ long __stdcall GetUsedBytes(unsigned long*) = 0;
  virtual /*<vtableoff 0x30>*/ long __stdcall GetMaxBytes(unsigned long*) = 0;
  virtual /*<vtableoff 0x34>*/ long __stdcall GetBufferFormat(struct _GUID*) = 0;
  virtual /*<vtableoff 0x38>*/ long __stdcall SetStartTime(__int64) = 0;
  virtual /*<vtableoff 0x3c>*/ long __stdcall SetUsedBytes(unsigned long) = 0;
};
// <size 0x4>

struct _DMUS_PORTPARAMS8 {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwValidParams;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long dwVoices;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long dwChannelGroups;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long dwAudioChannels;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long dwSampleRate;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long dwEffectFlags;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ int fShare;
  /*<thisrel this+0x20>*/ /*|0x4|*/ unsigned long dwFeatures;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x24>

struct _DMUS_CLOCKINFO8 {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ enum DMUS_CLOCKTYPE ctType;
  /*<thisrel this+0x8>*/ /*|0x10|*/ struct _GUID guidClock;
  /*<thisrel this+0x18>*/ /*|0x100|*/ unsigned short wszDescription[128];
  /*<thisrel this+0x118>*/ /*|0x4|*/ unsigned long dwFlags;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x11c>

struct IReferenceClock : struct IUnknown  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IUnknown
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IReferenceClock(struct IReferenceClock&);
  void __thiscall IReferenceClock();
  struct IReferenceClock& __thiscall operator=(struct IReferenceClock&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0xc>*/ long __stdcall GetTime(__int64*) = 0;
  virtual /*<vtableoff 0x10>*/ long __stdcall AdviseTime(__int64, __int64, void*, unsigned long*) = 0;
  virtual /*<vtableoff 0x14>*/ long __stdcall AdvisePeriodic(__int64, __int64, void*, unsigned long*) = 0;
  virtual /*<vtableoff 0x18>*/ long __stdcall Unadvise(unsigned long) = 0;
};
// <size 0x4>

struct IDirectMusicTrack : struct IUnknown  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IUnknown
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirectMusicTrack(struct IDirectMusicTrack&);
  void __thiscall IDirectMusicTrack();
  struct IDirectMusicTrack& __thiscall operator=(struct IDirectMusicTrack&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0xc>*/ long __stdcall Init(struct IDirectMusicSegment*) = 0;
  virtual /*<vtableoff 0x10>*/ long __stdcall InitPlay(struct IDirectMusicSegmentState*, struct IDirectMusicPerformance*, void**, unsigned long, unsigned long) = 0;
  virtual /*<vtableoff 0x14>*/ long __stdcall EndPlay(void*) = 0;
  virtual /*<vtableoff 0x18>*/ long __stdcall Play(void*, long, long, long, unsigned long, struct IDirectMusicPerformance*, struct IDirectMusicSegmentState*, unsigned long) = 0;
  virtual /*<vtableoff 0x1c>*/ long __stdcall GetParam(struct _GUID&, long, long*, void*) = 0;
  virtual /*<vtableoff 0x20>*/ long __stdcall SetParam(struct _GUID&, long, void*) = 0;
  virtual /*<vtableoff 0x24>*/ long __stdcall IsParamSupported(struct _GUID&) = 0;
  virtual /*<vtableoff 0x28>*/ long __stdcall AddNotificationType(struct _GUID&) = 0;
  virtual /*<vtableoff 0x2c>*/ long __stdcall RemoveNotificationType(struct _GUID&) = 0;
  virtual /*<vtableoff 0x30>*/ long __stdcall Clone(long, long, struct IDirectMusicTrack**) = 0;
};
// <size 0x4>

struct IDirectMusicTool : struct IUnknown  {

  // static data ------------------------------------

  // non-static data --------------------------------

  // base classes -----------------------------------
  // baseclass struct IUnknown
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall IDirectMusicTool(struct IDirectMusicTool&);
  void __thiscall IDirectMusicTool();
  struct IDirectMusicTool& __thiscall operator=(struct IDirectMusicTool&);

  // virtual functions ------------------------------
  virtual /*<vtableoff 0x0>*/ long __stdcall QueryInterface(struct _GUID&, void**) = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall AddRef() = 0;
  virtual /*<vtableoff 0x0>*/ unsigned long __stdcall Release() = 0;
  virtual /*<vtableoff 0xc>*/ long __stdcall Init(struct IDirectMusicGraph*) = 0;
  virtual /*<vtableoff 0x10>*/ long __stdcall GetMsgDeliveryType(unsigned long*) = 0;
  virtual /*<vtableoff 0x14>*/ long __stdcall GetMediaTypeArraySize(unsigned long*) = 0;
  virtual /*<vtableoff 0x18>*/ long __stdcall GetMediaTypes(unsigned long**, unsigned long) = 0;
  virtual /*<vtableoff 0x1c>*/ long __stdcall ProcessPMsg(struct IDirectMusicPerformance*, struct _DMUS_PMSG*) = 0;
  virtual /*<vtableoff 0x20>*/ long __stdcall Flush(struct IDirectMusicPerformance*, struct _DMUS_PMSG*, __int64) = 0;
};
// <size 0x4>

struct _DMUS_SYNTHSTATS {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwSize;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwValidStats;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long dwVoices;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long dwTotalCPU;
  /*<thisrel this+0x10>*/ /*|0x4|*/ unsigned long dwCPUPerVoice;
  /*<thisrel this+0x14>*/ /*|0x4|*/ unsigned long dwLostNotes;
  /*<thisrel this+0x18>*/ /*|0x4|*/ unsigned long dwFreeMemory;
  /*<thisrel this+0x1c>*/ /*|0x4|*/ long lPeakVolume;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x20>

struct _DMUS_SUBCHORD {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned long dwChordPattern;
  /*<thisrel this+0x4>*/ /*|0x4|*/ unsigned long dwScalePattern;
  /*<thisrel this+0x8>*/ /*|0x4|*/ unsigned long dwInversionPoints;
  /*<thisrel this+0xc>*/ /*|0x4|*/ unsigned long dwLevels;
  /*<thisrel this+0x10>*/ /*|0x1|*/ unsigned char bChordRoot;
  /*<thisrel this+0x11>*/ /*|0x1|*/ unsigned char bScaleRoot;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x14>

struct CTexLayer::__unnamed::__unnamed_d9_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<bitfield this+0x0>*/ /*|0x4|*/ unsigned long lighting:0:1;
  /*<bitfield this+0x0>*/ /*|0x4|*/ unsigned long fog:1:1;
  /*<bitfield this+0x0>*/ /*|0x4|*/ unsigned long depthTest:2:1;
  /*<bitfield this+0x0>*/ /*|0x4|*/ unsigned long depthWrite:3:1;
  /*<bitfield this+0x0>*/ /*|0x4|*/ unsigned long culling:4:1;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x4>

struct HMATERIALSHARED__ : struct HOBJECT__  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x4>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------
  // baseclass struct HOBJECT__
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct HMODELSHARED__ : struct HOBJECT__  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x4>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------
  // baseclass struct HOBJECT__
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct CTransparentObject::__unnamed::__unnamed_da_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct HMODEL__* model;
  /*<thisrel this+0x4>*/ /*|0x4|*/ struct CGeoset* geoUnique;
  /*<thisrel this+0x8>*/ /*|0x4|*/ struct CGeosetShared* geoShared;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct CTransparentObject::__unnamed::__unnamed_db_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ struct HMODEL__* model;
  /*<thisrel this+0x4>*/ /*|0x4|*/ void* object;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct CTransparentObject::__unnamed::__unnamed_dc_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ void  (callback*)(void*, int);
  /*<thisrel this+0x4>*/ /*|0x4|*/ void* param1;
  /*<thisrel this+0x8>*/ /*|0x4|*/ int param2;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0xc>

struct CSimpleEditBox::__unnamed_10d_ {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int id;
  /*<thisrel this+0x4>*/ /*|0x4|*/ class CObserver* obj;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>

struct EvtTimer {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ unsigned int id;
  /*<thisrel this+0x4>*/ /*|0x10|*/ class TSTimerPriority<unsigned long> targetTime;
  /*<thisrel this+0x14>*/ /*|0x4|*/ float timeout;
  /*<thisrel this+0x18>*/ /*|0x4|*/ int  (handler*)(void*, void*);
  /*<thisrel this+0x1c>*/ /*|0x4|*/ void* param;
  /*<thisrel this+0x20>*/ /*|0x4|*/ int  (guidHandler*)(void*, unsigned __int64, void*);
  /*<thisrel this+0x28>*/ /*|0x8|*/ unsigned __int64 guidParam;
  /*<thisrel this+0x30>*/ /*|0x4|*/ void* guidParam2;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall EvtTimer(struct EvtTimer&);
  void __thiscall EvtTimer();
  struct EvtTimer& __thiscall operator=(struct EvtTimer&);
  void __thiscall ~EvtTimer();
  void* __thiscall __vecDelDtor(unsigned int);

  // virtual functions ------------------------------
};
// <size 0x38>

struct CCallbackFcn<int (__fastcall*)(void *)> {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ int  (callback*)(void*);
  /*<thisrel this+0x4>*/ /*|0x4|*/ void* param;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CCallbackFcn<int (__fastcall*)(void *)>();

  // virtual functions ------------------------------
};
// <size 0x8>

struct CCallbackFcn<void (__fastcall*)(char const *,NTempest::C3Vector const &,void *)> {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x0>*/ /*|0x4|*/ void  (callback*)(char*, class NTempest::C3Vector&, void*);
  /*<thisrel this+0x4>*/ /*|0x4|*/ void* param;

  // base classes -----------------------------------

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------
  void __thiscall CCallbackFcn<void (__fastcall*)(char const *,NTempest::C3Vector const &,void *)>();

  // virtual functions ------------------------------
};
// <size 0x8>

struct HANIMDATA__ : struct HOBJECT__  {

  // static data ------------------------------------

  // non-static data --------------------------------
  /*<thisrel this+0x4>*/ /*|0x4|*/ int unused;

  // base classes -----------------------------------
  // baseclass struct HOBJECT__
  // <base data offset+0x0>

  // friends ----------------------------------------

  // static functions -------------------------------

  // non-virtual functions --------------------------

  // virtual functions ------------------------------
};
// <size 0x8>
