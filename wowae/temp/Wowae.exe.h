/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'Wowae.exe'
*/

#define __int8 char
#define __int16 short
#define __int32 int
#define __int64 long long

struct tagMENUITEMINFOA;	// win32
struct HMENU__;				// win32
struct HBITMAP__;			// win32
struct HWND__;				// win32
struct tagBITMAPINFOHEADER;	// win32
struct tagSCROLLINFO;		// win32
union _LARGE_INTEGER;		// win32		
struct _RTL_CRITICAL_SECTION_DEBUG;	// win32
struct _devicemodeA;		// win32
struct HDC__;				// win32
struct tagWNDCLASSEXA;		// win32
struct HINSTANCE__;			// win32
struct HICON__;				// win32
struct HBRUSH__;			// win32
struct _CONTEXT;			// win32
struct _GUID;				// win32
struct CDataStore_vtbl;
struct FrameScript_Object_vtbl;
struct CLayoutFrame;
struct XMLNode;
struct XMLNode::XMLAttribute;
struct CStatus;
struct CStatus_vtbl;
struct CStatus::STATUSENTRY;
struct CLayoutFrame_vtbl;
struct TSBaseArray<CFramePoint *>_vtbl;
struct CFramePoint;
struct CFramePoint_vtbl;
struct CLayoutFrame::FRAMENODE;
struct CLayoutFrame::FRAMENODE_vtbl;
struct CSimpleFrame;
struct TRefCnt_vtbl;
struct CMouseEvent;
struct CRenderBatch;
struct CRenderBatch_vtbl;
struct TSBaseArray<CSimpleBatchedTexture>_vtbl;
struct CSimpleBatchedTexture;
struct CGxStringBatch;
struct BATCHEDRENDERFONTDESC;
struct CGxFont;
struct TSBaseArray<IGXUTEXTLINE *>_vtbl;
struct IGXUTEXTLINE;
struct TSBaseArray<TEXTLINETEXTURE *>_vtbl;
struct TEXTLINETEXTURE;
struct TSBaseArray<VERT>_vtbl;
struct VERT;
struct TSBaseArray<NTempest::CImVector>_vtbl;
struct TSBaseArray<unsigned short>_vtbl;
struct TSBaseArray<GXUFONTHYPERLINKINFO>_vtbl;
struct GXUFONTHYPERLINKINFO;
struct TSBaseArray<NTempest::CImVector *>_vtbl;
struct CGxString;
struct GLYPHBITMAPDATA;
struct TSHashTable<GLYPHBITMAPDATA,HASHKEY_NONE>_vtbl;
struct TSBaseArray<TSExplicitList<GLYPHBITMAPDATA,-572662307> >_vtbl;
struct CHARCODEDESC;
struct TSHashTable<CHARCODEDESC,HASHKEY_NONE>_vtbl;
struct TSBaseArray<TSExplicitList<CHARCODEDESC,-572662307> >_vtbl;
struct KERNNODE;
struct TSHashTable<KERNNODE,KERNINGHASHKEY>_vtbl;
struct TSBaseArray<TSExplicitList<KERNNODE,-572662307> >_vtbl;
struct HFACE__;
struct TSBaseArray<TEXTURECACHEROW>_vtbl;
struct TEXTURECACHEROW;
struct TSHashTable<BATCHEDRENDERFONTDESC,HASHKEY_PTR>_vtbl;
struct TSBaseArray<TSExplicitList<BATCHEDRENDERFONTDESC,-572662307> >_vtbl;
struct RENDERCALLBACKNODE;
struct CSimpleTop;
struct HMODEL__;
struct SIMPLEFRAMENODE;
struct TSBaseArray<CFrameStrataNode *>_vtbl;
struct CFrameStrataNode;
struct CFrameStrata;
struct TSBaseArray<FRAMEPRIORITY *>_vtbl;
struct FRAMEPRIORITY;
struct CSizeEvent;
struct CSimpleTitleRegion;
struct CSimpleRegion;
struct CSimpleTexture;
struct HTEXTURE__;
struct CStringRep;
struct CBackdropGenerator;
struct REGIONNODE;
struct CModelRecord;
struct CSimpleCamera_vtbl;
struct HCAMERA__;
struct CameraShake;
struct CGCamera;
struct TSBaseArray<CMemCmdItem>_vtbl;
struct TSFixedArray<CMemCmdItem>;
struct TSGrowableArray<CMemCmdItem>;
struct CVar;
struct NETCONNADDR;
struct WowConnection;
struct WowConnection::SENDNODE;
struct WowConnectionResponse_vtbl;
struct NETEVENTQUEUENODE;
struct NETEVENTQUEUE;
struct C_OBJECTHASH;
struct TSBaseArray<unsigned char>_vtbl;
struct CMirrorHandler;
struct TSHashTable<C_OBJECTHASH,CHashKeyGUID>_vtbl;
struct TSBaseArray<TSExplicitList<C_OBJECTHASH,-572662307> >_vtbl;
struct OBJHANDLERREQUEST;
struct ClientConnection;
struct ClntObjMgr;
struct NetClientRedirect;
struct TSBaseArray<CHARACTER_INFO>_vtbl;
struct CHARACTER_INFO;
struct TSBaseArray<REALM_INFO>_vtbl;
struct REALM_INFO;
struct TSBaseArray<CSimpleFontString *>_vtbl;
struct CSimpleFontString;
struct HTEXTFONT__;
struct HTEXTBLOCK__;
struct TSBaseArray<int>_vtbl;
struct CSimpleStatusBar;
struct CGBag_C;
struct CGObject_C_vtbl;
struct CGUnit_vtbl;
struct CGUnitData;
struct CMovementData;
struct NTempest::C3Spline_vtbl;
struct TSBaseArray<NTempest::C3Vector>_vtbl;
struct TSBaseArray<float>_vtbl;
struct CMoveSpline;
struct CGUnit_C;
struct LOGBASE_vtbl;
struct ANIMQUEUENODE;
struct TSBaseArray<ANIMENDDATA>_vtbl;
struct ANIMENDDATA;
struct CreatureStats_C;
struct CreatureDisplayInfoRec;
struct CreatureDisplayInfoExtraRec;
struct CreatureModelDataRec;
struct CreatureSoundDataRec;
struct UnitBloodLevelsRec;
struct SpellVisualKitRec;
struct ACTIVEAURAINFO;
struct TSBaseArray<char>_vtbl;
struct TSBaseArray<unsigned int>_vtbl;
struct TSBaseArray<QUESTGIVEREMOTENODE>_vtbl;
struct QUESTGIVEREMOTENODE;
struct BLOODSPLATNODE;
struct HPLAYERNAME__;
struct Sound;
struct NPCSoundsRec;
struct HCHARGEOSET__;
struct HTEXCOMPONENT__;
struct IMPACTEFFECTDESC;
struct LightningObject;
struct TSBaseArray<unsigned __int64>_vtbl;
struct TSBaseArray<LightningObject::Bolt>_vtbl;
struct LightningObject::Bolt;
struct SPELLEFFECTDESC;
struct ItemGroupSoundsRec;
struct ItemDisplayInfoRec;
struct ItemVisualsRec;
struct ACTIVEATTACHMENTINFO;
struct SpellRec;
struct FishingLineObject;
struct TRADESKILLLINE;
struct TSHashTable<TRADESKILLLINE,HASHKEY_NONE>_vtbl;
struct TSBaseArray<TSExplicitList<TRADESKILLLINE,-572662307> >_vtbl;
struct IUnknown;				// win32
struct IUnknown_vtbl;			// win32
struct IMoniker;				// win32
union _ULARGE_INTEGER;			// win32
struct IStream;					// win32
struct IBindCtx;				// win32
struct tagBIND_OPTS;			// win32
struct IEnumString;				// win32
struct IEnumStringVtbl;			// win32
struct IBindCtxVtbl;			// win32
struct IEnumMoniker;			// win32
struct IEnumMonikerVtbl;		// win32
struct IMonikerVtbl;			// win32
struct IRunningObjectTableVtbl;	// win32
struct IEnumSTATSTGVtbl;		// win32
struct tagDVTARGETDEVICE;		// win32
struct tagFORMATETC;			// win32
struct IEnumFORMATETCVtbl;		// win32
struct IEnumUnknownVtbl;		// win32
struct IStorageVtbl;			// win32
struct IAdviseSink;				// win32
struct IAdviseSinkVtbl;			// win32
struct IEnumSTATDATA;			// win32
struct tagSTATDATA;				// win32
struct IEnumSTATDATAVtbl;		// win32
struct IDataObjectVtbl;			// win32
struct IOleUILinkInfoWVtbl;		// win32
struct IOleUILinkContainerWVtbl;// win32
struct IOleContainerVtbl;		// win32
struct IOleUIObjInfoWVtbl;		// win32
struct tagOLEUIOBJECTPROPSW;	// win32
struct tagOLEUIVIEWPROPSW;		// win32
struct tagOLEUILINKPROPSW;		// win32
struct IOleClientSiteVtbl;		// win32
struct IEnumOLEVERB;			// win32
struct IEnumOLEVERBVtbl;		// win32
struct IOleObjectVtbl;			// win32
struct CHandleObject_vtbl;
struct CSeqInfo;
struct CAnimObjStatus;
struct CAnimGeosetObjStatus;
struct CAnimModelObjStatus;
struct CAnimObjBlendStatus;
struct CAnimLightObjStatus;
struct CAnimEmitter2ObjStatus;
struct CAnimRibbonObjStatus;
struct CAnimCameraObjStatus;
struct CAnimEventObjStatus;
struct CAnimLayerStatus;
struct HANIMDATA__;
struct TSBaseArray<CSeqOrdering>_vtbl;
struct CVariations;
struct CSeqOrdering;
struct TSFixedArray<CSeqOrdering>;
struct TSGrowableArray<CSeqOrdering>;
struct TSBaseArray<CAnimObj *>_vtbl;
struct CAnimObj;
struct TSBaseArray<MDLEVENTKEY>_vtbl;
struct MDLEVENTKEY;
struct TSFixedArray<MDLEVENTKEY>;
struct TSGrowableArray<MDLEVENTKEY>;
struct TSBaseArray<MDLKEYFRAME<NTempest::C3Vector> >_vtbl;
struct MDLKEYFRAME<NTempest::C3Vector>;
struct TSFixedArray<MDLKEYFRAME<NTempest::C3Vector> >;
struct TSGrowableArray<MDLKEYFRAME<NTempest::C3Vector> >;
struct TSBaseArray<MDLKEYFRAME<NTempest::C4Quaternion> >_vtbl;
struct MDLKEYFRAME<NTempest::C4Quaternion>;
struct TSFixedArray<MDLKEYFRAME<NTempest::C4Quaternion> >;
struct TSGrowableArray<MDLKEYFRAME<NTempest::C4Quaternion> >;
struct TSBaseArray<MDLKEYFRAME<float> >_vtbl;
struct MDLKEYFRAME<float>;
struct TSFixedArray<MDLKEYFRAME<float> >;
struct TSGrowableArray<MDLKEYFRAME<float> >;
struct TSBaseArray<MDLKEYFRAME<C3Color> >_vtbl;
struct MDLKEYFRAME<C3Color>;
struct TSFixedArray<MDLKEYFRAME<C3Color> >;
struct TSGrowableArray<MDLKEYFRAME<C3Color> >;
struct TSBaseArray<MDLINTKEY>_vtbl;
struct MDLINTKEY;
struct TSFixedArray<MDLINTKEY>;
struct TSGrowableArray<MDLINTKEY>;
struct TSBaseArray<MDLSEQUENCESSECTION>_vtbl;
struct MDLSEQUENCESSECTION;
struct TSFixedArray<MDLSEQUENCESSECTION>;
struct TSGrowableArray<MDLSEQUENCESSECTION>;
struct TSBaseArray<MDLGLOBALSEQSECTION>_vtbl;
struct MDLGLOBALSEQSECTION;
struct TSFixedArray<MDLGLOBALSEQSECTION>;
struct TSGrowableArray<MDLGLOBALSEQSECTION>;
struct TSBaseArray<MDLTEXANIMSECTION>_vtbl;
struct MDLTEXANIMSECTION;
struct TSFixedArray<MDLTEXANIMSECTION>;
struct TSGrowableArray<MDLTEXANIMSECTION>;
struct TSBaseArray<HCAMERA__ *>_vtbl;
struct TSFixedArray<HCAMERA__ *>;
struct TSBaseArray<unsigned long>_vtbl;
struct TSFixedArray<unsigned long>;
struct TSBaseArray<CParticleEmitter2 *>_vtbl;
struct CParticleEmitter2;
struct CParticle2;
struct CParticle2_Model;
struct CParticleEmitter2_vtbl;
struct TSBaseArray<CParticle2>_vtbl;
struct TSBaseArray<CParticle2_Model>_vtbl;
struct TSFixedArray<CParticleEmitter2 *>;
struct TSBaseArray<CRibbonEmitter *>_vtbl;
struct TSBaseArray<CRibbonVertex>_vtbl;
struct CRibbonVertex;
struct TSBaseArray<CRibbonMat>_vtbl;
struct CRibbonMat;
struct TSBaseArray<HTEXTURE__ *>_vtbl;
struct CRibbonEmitter;
struct TSFixedArray<CRibbonEmitter *>;
struct TSBaseArray<NTempest::C34Matrix>_vtbl;
struct TSFixedArray<NTempest::C34Matrix>;
struct TSGrowableArray<NTempest::C34Matrix>;
struct CAnimNameHash;
struct TSBaseArray<TSExplicitList<CAnimNameHash,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<CAnimNameHash,-572662307> >;
struct TSGrowableArray<TSExplicitList<CAnimNameHash,-572662307> >;
struct TSHashTable<CAnimNameHash,HASHKEY_CONSTSTRI>_vtbl;
struct ANIMHASH;
struct TSBaseArray<TSExplicitList<ANIMHASH,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<ANIMHASH,-572662307> >;
struct TSGrowableArray<TSExplicitList<ANIMHASH,-572662307> >;
struct TSHashTable<ANIMHASH,HASHKEY_STRI>_vtbl;
struct TSBaseArray<MDLMATERIALSECTION>_vtbl;
struct TSBaseArray<MDLTEXLAYER>_vtbl;
struct MDLMATERIALSECTION;
struct TSFixedArray<MDLMATERIALSECTION>;
struct TSGrowableArray<MDLMATERIALSECTION>;
struct TSBaseArray<MDLTEXTURESECTION>_vtbl;
struct MDLTEXTURESECTION;
struct TSFixedArray<MDLTEXTURESECTION>;
struct TSGrowableArray<MDLTEXTURESECTION>;
struct TSBaseArray<MDLGEOSETSECTION>_vtbl;
struct TSBaseArray<TSGrowableArray<NTempest::C2Vector> >_vtbl;
struct TSBaseArray<NTempest::C2Vector>_vtbl;
struct TSGrowableArray<NTempest::C2Vector>;
struct TSBaseArray<CMdlBounds>_vtbl;
struct MDLGEOSETSECTION;
struct TSFixedArray<MDLGEOSETSECTION>;
struct TSGrowableArray<MDLGEOSETSECTION>;
struct TSBaseArray<MDLGEOSETANIMSECTION>_vtbl;
struct TSFixedArray<MDLGEOSETANIMSECTION>;
struct TSGrowableArray<MDLGEOSETANIMSECTION>;
struct TSBaseArray<MDLGENOBJECT *>_vtbl;
struct MDLGENOBJECT;
struct TSFixedArray<MDLGENOBJECT *>;
struct TSGrowableArray<MDLGENOBJECT *>;
struct TSBaseArray<MDLBONESECTION>_vtbl;
struct MDLBONESECTION;
struct TSFixedArray<MDLBONESECTION>;
struct TSGrowableArray<MDLBONESECTION>;
struct TSBaseArray<MDLLIGHTSECTION>_vtbl;
struct MDLLIGHTSECTION;
struct TSFixedArray<MDLLIGHTSECTION>;
struct TSGrowableArray<MDLLIGHTSECTION>;
struct TSBaseArray<MDLGENOBJECT>_vtbl;
struct TSFixedArray<MDLGENOBJECT>;
struct TSGrowableArray<MDLGENOBJECT>;
struct TSBaseArray<MDLATTACHMENTSECTION>_vtbl;
struct MDLATTACHMENTSECTION;
struct TSFixedArray<MDLATTACHMENTSECTION>;
struct TSGrowableArray<MDLATTACHMENTSECTION>;
struct TSBaseArray<MDLPARTICLEEMITTER>_vtbl;
struct MDLPARTICLEEMITTER;
struct TSFixedArray<MDLPARTICLEEMITTER>;
struct TSGrowableArray<MDLPARTICLEEMITTER>;
struct TSBaseArray<MDLCAMERASECTION>_vtbl;
struct TSFixedArray<MDLCAMERASECTION>;
struct TSGrowableArray<MDLCAMERASECTION>;
struct TSBaseArray<MDLEVENTSECTION>_vtbl;
struct MDLEVENTSECTION;
struct TSFixedArray<MDLEVENTSECTION>;
struct TSGrowableArray<MDLEVENTSECTION>;
struct TSBaseArray<MDLPARTICLEEMITTER2>_vtbl;
struct MDLPARTICLEEMITTER2;
struct TSFixedArray<MDLPARTICLEEMITTER2>;
struct TSGrowableArray<MDLPARTICLEEMITTER2>;
struct TSBaseArray<MDLHITTESTSHAPE>_vtbl;
struct MDLHITTESTSHAPE;
struct TSFixedArray<MDLHITTESTSHAPE>;
struct TSGrowableArray<MDLHITTESTSHAPE>;
struct TSBaseArray<MDLRIBBONEMITTER>_vtbl;
struct MDLRIBBONEMITTER;
struct TSFixedArray<MDLRIBBONEMITTER>;
struct TSGrowableArray<MDLRIBBONEMITTER>;
struct TSBaseArray<enum ACTIVITY>_vtbl;
struct TSFixedArray<enum ACTIVITY>;
struct TSGrowableArray<enum ACTIVITY>;
struct CDataRecycler_vtbl;
struct CDataRecycler::NodeBlock;
struct CDataRecycler::Node;
struct TSHashTable<CStringRep,HASHKEY_STR>_vtbl;
struct TSBaseArray<TSExplicitList<CStringRep,-572662307> >_vtbl;
struct SEvent;
struct PrefetchNode;
struct TSBaseArray<TSExplicitList<PrefetchNode,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<PrefetchNode,-572662307> >;
struct TSGrowableArray<TSExplicitList<PrefetchNode,-572662307> >;
struct TSHashTable<PrefetchNode,HASHKEY_STRI>_vtbl;
struct UncachableNode;
struct TSBaseArray<TSExplicitList<UncachableNode,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<UncachableNode,-572662307> >;
struct TSGrowableArray<TSExplicitList<UncachableNode,-572662307> >;
struct TSHashTable<UncachableNode,HASHKEY_STRI>_vtbl;
struct EvtContext;
struct TInstanceId<EvtContext>_vtbl;
struct CSBasePriority_vtbl;
struct TSBaseArray<void *>_vtbl;
struct CSBasePriorityQueue;
struct EvtHandler;
struct EvtMessage;
struct EvtKeyDown;
struct TSBaseArray<EvtTimer *>_vtbl;
struct EvtTimer;
struct EventReg;
struct EventReg::EVENTCALLBACKREG;
struct TSHashTable<EventReg,HASHKEY_NONE>_vtbl;
struct TSBaseArray<TSExplicitList<EventReg,-572662307> >_vtbl;
struct EventRegistry;
struct CObserver;
struct EventReg::EVENTDISPATCHREG;
struct EvtThread;
struct TSBaseArray<SThread *>_vtbl;
struct SThread;
struct TSFixedArray<SThread *>;
struct TSGrowableArray<SThread *>;
struct TSBaseArray<EvtContext *>_vtbl;
struct TSFixedArray<EvtContext *>;
struct TSGrowableArray<EvtContext *>;
struct CSimpleHyperlinkButton;
struct FrameScriptObject_Variable;
struct TSBaseArray<TSExplicitList<FrameScriptObject_Variable,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<FrameScriptObject_Variable,-572662307> >;
struct TSGrowableArray<TSExplicitList<FrameScriptObject_Variable,-572662307> >;
struct TSHashTable<FrameScriptObject_Variable,HASHKEY_STR>_vtbl;
struct TSBaseArray<char *>_vtbl;
struct CSimpleMessageFrame;
struct TSBaseArray<MessageData>_vtbl;
struct MessageData;
struct TSBaseArray<CSimpleMessageFrameLine>_vtbl;
struct CSimpleMessageFrameLineNode;
struct CSimpleMessageFrameLine;
struct TSBaseArray<CSimpleMessageScrollFrameLine>_vtbl;
struct CSimpleMessageScrollFrameLine;
struct TSBaseArray<CSimpleMessageScrollFrameDisplayNode>_vtbl;
struct CSimpleMessageScrollFrameDisplayNode;
struct CSimpleFontStringRecord;
struct TSBaseArray<OsIMECandidate>_vtbl;
struct OsIMECandidate;
struct TSFixedArray<OsIMECandidate>;
struct TSGrowableArray<OsIMECandidate>;
struct SIMPLEFRAMEREGHASH;
struct TSHashTable<SIMPLEFRAMEREGHASH,HASHKEY_STR>_vtbl;
struct TSBaseArray<TSExplicitList<SIMPLEFRAMEREGHASH,-572662307> >_vtbl;
struct SIMPLETEXTUREREGHASH;
struct TSHashTable<SIMPLETEXTUREREGHASH,HASHKEY_STR>_vtbl;
struct TSBaseArray<TSExplicitList<SIMPLETEXTUREREGHASH,-572662307> >_vtbl;
struct SIMPLEFONTSTRINGREGHASH;
struct TSHashTable<SIMPLEFONTSTRINGREGHASH,HASHKEY_STR>_vtbl;
struct TSBaseArray<TSExplicitList<SIMPLEFONTSTRINGREGHASH,-572662307> >_vtbl;
struct SIMPLECONTEXTHASHOBJ;
struct TSBaseArray<TSExplicitList<SIMPLECONTEXTHASHOBJ,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<SIMPLECONTEXTHASHOBJ,-572662307> >;
struct TSGrowableArray<TSExplicitList<SIMPLECONTEXTHASHOBJ,-572662307> >;
struct TSHashTable<SIMPLECONTEXTHASHOBJ,HASHKEY_NONE>_vtbl;
struct mdl_scan_vtbl;
struct _iobuf;
struct ZipFileDirEntry;
struct ZipFileArchive;
struct TSBaseArray<CBoundsData>_vtbl;
struct CBoundsData;
struct TSBaseArray<CHitTest>_vtbl;
struct CHitTest;
struct TSBaseArray<CGeosetShared>_vtbl;
struct TSBaseArray<TSFixedArray_<NTempest::C2Vector,1229811556,266> >_vtbl;
struct TSFixedArray_<NTempest::C2Vector,1229811556,266>;
struct TSBaseArray<CPrimitive>_vtbl;
struct CPrimitive;
struct CGeosetShared;
struct TSBaseArray<CGeoset>_vtbl;
struct CGeoset;
struct TSFixedArray<CGeoset>;
struct TSGrowableArray<CGeoset>;
struct TSGrowableArray<CGeosetShared>;
struct TSBaseArray<CGeosetColor>_vtbl;
struct TSFixedArray<CGeosetColor>;
struct TSGrowableArray<CGeosetColor>;
struct TSBaseArray<CCustomGeoset>_vtbl;
struct CCustomGeoset;
struct TSFixedArray<CCustomGeoset>;
struct TSGrowableArray<CCustomGeoset>;
struct TSBaseArray<HMATERIAL__ *>_vtbl;
struct HMATERIAL__;
struct TSFixedArray<HMATERIAL__ *>;
struct TSGrowableArray<HMATERIAL__ *>;
struct TSBaseArray<CModelTexture>_vtbl;
struct CModelTexture;
struct TSFixedArray<CModelTexture>;
struct TSGrowableArray<CModelTexture>;
struct TSBaseArray<TSList<LINKUNIQUE,TSGetLink<LINKUNIQUE> > >_vtbl;
struct LINKUNIQUE;
struct TSList<LINKUNIQUE,TSGetLink<LINKUNIQUE> >;
struct TSFixedArray<TSList<LINKUNIQUE,TSGetLink<LINKUNIQUE> > >;
struct TSBaseArray<CTexLayer>_vtbl;
struct CTexLayer;
struct HMATERIALSHARED__;
struct TSBaseArray<CTexLayerShared>_vtbl;
struct CTexLayerShared;
struct TSFixedArray<CTexLayerShared>;
struct TSGrowableArray<CTexLayerShared>;
struct TSBaseArray<NTempest::CFacet>_vtbl;
struct NTempest::CFacet;
struct TSFixedArray<NTempest::CFacet>;
struct TSGrowableArray<NTempest::CFacet>;
struct CAsyncObject;
struct HMODELSHARED__;
struct CModelModItem;
struct TSBaseArray<CMatrixGroup>_vtbl;
struct CMatrixGroup;
struct TSFixedArray<CMatrixGroup>;
struct TSGrowableArray<CMatrixGroup>;
struct TSBaseArray<COpaqueLayer>_vtbl;
struct COpaqueLayer;
struct TSFixedArray<COpaqueLayer>;
struct TSGrowableArray<COpaqueLayer>;
struct TSBaseArray<CTransparentObject>_vtbl;
struct CTransparentObject;
struct TSFixedArray<CTransparentObject>;
struct TSGrowableArray<CTransparentObject>;
struct NTempest::CEntity_vtbl;
struct TSGrowableArray<CPrimitive>;
struct CModelHash;
struct TSHashTable<CModelHash,CHashKeyFilePath>_vtbl;
struct TSBaseArray<TSExplicitList<CModelHash,-572662307> >_vtbl;
struct TSBaseArray<CModelHash>_vtbl;
struct TSHashObjectChunk<CModelHash,CHashKeyFilePath>;
struct SoundFileObjectCacheNode;
struct SoundFileObject;
struct TSHashTable<SoundFileObjectCacheNode,HASHKEY_NONE>_vtbl;
struct TSBaseArray<TSExplicitList<SoundFileObjectCacheNode,-572662307> >_vtbl;
struct TSBaseArray<SoundFileObjectCacheNode>_vtbl;
struct TSHashObjectChunk<SoundFileObjectCacheNode,HASHKEY_NONE>;
struct TSBaseArray<SoundFileObject>_vtbl;
struct TSFixedArray<SoundFileObject>;
struct SoundFileDataCacheBlock;
struct TSHashTable<SoundFileDataCacheBlock,HASHKEY_LONGLONG>_vtbl;
struct TSBaseArray<TSExplicitList<SoundFileDataCacheBlock,-572662307> >_vtbl;
struct TSBaseArray<SoundFileDataCacheBlock>_vtbl;
struct TSHashObjectChunk<SoundFileDataCacheBlock,HASHKEY_LONGLONG>;
struct TSBaseArray<W32Joystick>_vtbl;
struct W32Joystick;
struct TSFixedArray<W32Joystick>;
struct TSGrowableArray<W32Joystick>;
struct OsNet::TCPNET;
struct OsNet::NETSELSOCKPTR;
struct TSHashTable<OsNet::NETSELSOCKPTR,HASHKEY_NONE>_vtbl;
struct TSBaseArray<TSExplicitList<OsNet::NETSELSOCKPTR,-572662307> >_vtbl;
struct TSBaseArray<OsNet::NETSELSOCKPTR>_vtbl;
struct TSHashObjectChunk<OsNet::NETSELSOCKPTR,HASHKEY_NONE>;
struct OsNet::NETSELECTSETS;
struct OsNet::NETSELSOCK_vtbl;
struct OsNet::NETCONN;
struct HNETCONN__;
struct OsNet::LOOPCONN;
struct TSLink<OsNet::LOOPCONN>;
struct OsNet::LOOPCONN::INPUT;
struct OsNet::TSSlottedListEx<OsNet::NETCONN,8,8>_vtbl;
struct OsNet::TSSlottedListEx<OsNet::TCPLISTEN,8,1>_vtbl;
struct OsNet::TCPLISTEN;
struct OsNet::TCPACCEPT;
struct OsNet::TSSlottedListEx<OsNet::NETCONNECT,8,1>_vtbl;
struct OsNet::NETCONNECT;
struct TSBaseArray<NETADDR>_vtbl;
struct OsNet::TCPHOSTADDRINFO;
struct OsNet::OUTPUT;
struct OsNet::INPUT;
struct ContextData;
struct ThreadData;
struct ContextTurn;
struct TSBaseArray<COsDialog *>_vtbl;
struct COsDialog;
struct COsDialog_vtbl;
struct OsGuiCallbackParams;
struct TSBaseArray<COsControl *>_vtbl;
struct COsControl;
struct COsControl_vtbl;
struct TSBaseArray<OsGuiMenuHotkey>_vtbl;
struct OsGuiMenuHotkey;
struct COsMenu;
struct TSFixedArray<COsDialog *>;
struct TSGrowableArray<COsDialog *>;
struct TSBaseArray<COsMenuBar *>_vtbl;
struct TSBaseArray<COsMenu *>_vtbl;
struct COsMenuBar;
struct TSFixedArray<COsMenuBar *>;
struct TSGrowableArray<COsMenuBar *>;
struct TSBaseArray<tagACCEL>_vtbl;
struct TSFixedArray<tagACCEL>;
struct TSGrowableArray<tagACCEL>;
struct COsTreeView;
struct TSBaseArray<OsGuiTreeItemParams>_vtbl;
struct OsGuiTreeItemParams;
struct TSBaseArray<NTempest::CiRect>_vtbl;
struct COsWindow_vtbl;
struct CILayer;
struct TSBaseArray<CLightning *>_vtbl;
struct TSFixedArray<CLightning *>;
struct TSGrowableArray<CLightning *>;
struct ProfileInternal::STRINGBLOCK;
struct ProfileInternal::SECTION;
struct ProfileInternal::KEYVALUE;
struct TSHashTable<ProfileInternal::KEYVALUE,HASHKEY_CONSTSTRI>_vtbl;
struct TSBaseArray<TSExplicitList<ProfileInternal::KEYVALUE,-572662307> >_vtbl;
struct TSHashTable<ProfileInternal::SECTION,HASHKEY_CONSTSTRI>_vtbl;
struct TSBaseArray<TSExplicitList<ProfileInternal::SECTION,-572662307> >_vtbl;
struct TSBaseArray<CParticle>_vtbl;
struct TSFixedArray<CParticle>;
struct TSGrowableArray<CParticle>;
struct FONTHASHOBJ;
struct TSBaseArray<TSExplicitList<FONTHASHOBJ,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<FONTHASHOBJ,-572662307> >;
struct TSGrowableArray<TSExplicitList<FONTHASHOBJ,-572662307> >;
struct TSHashTable<FONTHASHOBJ,HASHKEY_STR>_vtbl;
struct CBaseManaged;
struct CBaseManaged_vtbl;
struct TSBaseArray<CBaseManaged *>_vtbl;
struct TSFixedArray<CBaseManaged *>;
struct CGxBuf;
struct TSBaseArray<CParticleEmitter *>_vtbl;
struct TSFixedArray<CParticleEmitter *>;
struct TSGrowableArray<CParticleEmitter *>;
struct TSGrowableArray<CParticleEmitter2 *>;
struct TSGrowableArray<CRibbonEmitter *>;
struct TSBaseArray<void (__fastcall*)(void)>_vtbl;
struct TSFixedArray<void (__fastcall*)(void)>;
struct TSGrowableArray<void (__fastcall*)(void)>;
struct CTextureItem;
struct CTexture;
struct CGxTexCache;
struct CTextureHash;
struct TSHashTable<CTextureHash,HASHKEY_TEXTUREFILE>_vtbl;
struct TSBaseArray<TSExplicitList<CTextureHash,-572662307> >_vtbl;
struct TSBaseArray<CTextureHash>_vtbl;
struct TSHashObjectChunk<CTextureHash,HASHKEY_TEXTUREFILE>;
struct CSolidTextureHash;
struct TSHashTable<CSolidTextureHash,HASHKEY_NONE>_vtbl;
struct TSBaseArray<TSExplicitList<CSolidTextureHash,-572662307> >_vtbl;
struct TSBaseArray<CSolidTextureHash>_vtbl;
struct TSHashObjectChunk<CSolidTextureHash,HASHKEY_NONE>;
struct TSBaseArray<CTexture *>_vtbl;
struct TSFixedArray<CTexture *>;
struct TSGrowableArray<CTexture *>;
struct MSGBUFFER;
struct TSBaseArray<MACRODESC>_vtbl;
struct MACRODESC;
struct TSFixedArray<MACRODESC>;
struct TSGrowableArray<MACRODESC>;
struct CHUNKHASHOBJ;
struct TSBaseArray<TSExplicitList<CHUNKHASHOBJ,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<CHUNKHASHOBJ,-572662307> >;
struct TSGrowableArray<TSExplicitList<CHUNKHASHOBJ,-572662307> >;
struct TSHashTable<CHUNKHASHOBJ,HASHKEY_STRI>_vtbl;
struct TSBaseArray<CHUNKHASHOBJ *>_vtbl;
struct TSFixedArray<CHUNKHASHOBJ *>;
struct TSGrowableArray<CHUNKHASHOBJ *>;
struct OUTDOORSCHUNKHASHOBJ;
struct TSBaseArray<TSExplicitList<OUTDOORSCHUNKHASHOBJ,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<OUTDOORSCHUNKHASHOBJ,-572662307> >;
struct TSGrowableArray<TSExplicitList<OUTDOORSCHUNKHASHOBJ,-572662307> >;
struct TSHashTable<OUTDOORSCHUNKHASHOBJ,AREAHASHKEY>_vtbl;
struct TSBaseArray<OUTDOORSCHUNKHASHOBJ *>_vtbl;
struct TSFixedArray<OUTDOORSCHUNKHASHOBJ *>;
struct TSGrowableArray<OUTDOORSCHUNKHASHOBJ *>;
struct SOUNDDEFINITION;
struct UISOUNDLOOKUP;
struct TSBaseArray<TSExplicitList<UISOUNDLOOKUP,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<UISOUNDLOOKUP,-572662307> >;
struct TSGrowableArray<TSExplicitList<UISOUNDLOOKUP,-572662307> >;
struct TSHashTable<UISOUNDLOOKUP,HASHKEY_STRI>_vtbl;
struct TSBaseArray<TSExplicitList<SOUNDDEFINITION,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<SOUNDDEFINITION,-572662307> >;
struct TSGrowableArray<TSExplicitList<SOUNDDEFINITION,-572662307> >;
struct TSHashTable<SOUNDDEFINITION,HASHKEY_NONE>_vtbl;
struct TSBaseArray<IMPACTSOUNDARRAY>_vtbl;
struct IMPACTSOUNDARRAY;
struct TSFixedArray<IMPACTSOUNDARRAY>;
struct TSBaseArray<REVERBINFO>_vtbl;
struct REVERBINFO;
struct TSFixedArray<REVERBINFO>;
struct TSGrowableArray<REVERBINFO>;
struct SHEATHSOUNDHASH;
struct TSBaseArray<TSExplicitList<SHEATHSOUNDHASH,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<SHEATHSOUNDHASH,-572662307> >;
struct TSGrowableArray<TSExplicitList<SHEATHSOUNDHASH,-572662307> >;
struct TSHashTable<SHEATHSOUNDHASH,HASHKEY_NONE>_vtbl;
struct TIMESTAMPSTRUCT;
struct GAMETIMECBSTRUCT;
struct TSHashTable<TIMESTAMPSTRUCT,HASHKEY_NONE>_vtbl;
struct TSBaseArray<TSExplicitList<TIMESTAMPSTRUCT,-572662307> >_vtbl;
struct FOOTSTEPSNDCACHE;
struct TSBaseArray<TSExplicitList<FOOTSTEPSNDCACHE,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<FOOTSTEPSNDCACHE,-572662307> >;
struct TSGrowableArray<TSExplicitList<FOOTSTEPSNDCACHE,-572662307> >;
struct TSHashTable<FOOTSTEPSNDCACHE,HASHKEY_NONE>_vtbl;
struct TSBaseArray<CObjectHeapList>_vtbl;
struct TSBaseArray<CObjectHeap>_vtbl;
struct CObjectHeap;
struct CObjectHeapList;
struct TSFixedArray<CObjectHeapList>;
struct TSGrowableArray<CObjectHeapList>;
struct type_info_vtbl;
struct CGGameObject_C;
struct CGGameObject_C_TypeBase;
struct CGGameObject_C_TypeBase_vtbl;
struct GameObjectStats;
struct BlizzardObject;
struct BlizzardObject::Shard;
struct CORPSEANIMDATA;
struct DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH;
struct DBCACHECALLBACK;
struct TSHashTable<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>_vtbl;
struct TSBaseArray<TSExplicitList<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl;
struct TSBaseArray<CHARINFO>_vtbl;
struct CHARINFO;
struct TSFixedArray<CHARINFO>;
struct TSGrowableArray<CHARINFO>;
struct TSBaseArray<TSFixedArray<VARIATIONS> >_vtbl;
struct TSBaseArray<VARIATIONS>_vtbl;
struct TSBaseArray<FACIALGEOSETS>_vtbl;
struct FACIALGEOSETS;
struct TSBaseArray<INTDATA>_vtbl;
struct INTDATA;
struct VARIATIONS;
struct TSFixedArray<VARIATIONS>;
struct TSFixedArray<TSFixedArray<VARIATIONS> >;
struct TSBaseArray<CAMERAFILENAMES>_vtbl;
struct CAMERAFILENAMES;
struct TSFixedArray<CAMERAFILENAMES>;
struct TSBaseArray<CHARACTERRACEVARIATIONS>_vtbl;
struct TSBaseArray<CHARACTERVARIATIONS>_vtbl;
struct TSBaseArray<STRINGWANNABE>_vtbl;
struct STRINGWANNABE;
struct CHARACTERVARIATIONS;
struct CHARACTERRACEVARIATIONS;
struct TSFixedArray<CHARACTERRACEVARIATIONS>;
struct TSGrowableArray<CHARACTERRACEVARIATIONS>;
struct TSBaseArray<enum FACET_COLOR>_vtbl;
struct TSFixedArray<enum FACET_COLOR>;
struct TSGrowableArray<enum FACET_COLOR>;
struct TSBaseArray<CWalkableSurface>_vtbl;
struct CWalkableSurface;
struct TSFixedArray<CWalkableSurface>;
struct TSGrowableArray<CWalkableSurface>;
struct CPlayerMoveEvent;
struct CGSimpleHealthBar;
struct DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH;
struct TSHashTable<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,CHashKeyGUID>_vtbl;
struct TSBaseArray<TSExplicitList<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,-572662307> >_vtbl;
struct TSBaseArray<POIINFO>_vtbl;
struct POIINFO;
struct TSFixedArray<POIINFO>;
struct TSGrowableArray<POIINFO>;
struct TSBaseArray<POIDIRECTIONDATA>_vtbl;
struct POIDIRECTIONDATA;
struct TSFixedArray<POIDIRECTIONDATA>;
struct TSGrowableArray<POIDIRECTIONDATA>;
struct TSBaseArray<OBJINFO>_vtbl;
struct OBJINFO;
struct TSFixedArray<OBJINFO>;
struct TSGrowableArray<OBJINFO>;
struct TSBaseArray<AreaPOIRec const *>_vtbl;
struct AreaPOIRec;
struct TSFixedArray<AreaPOIRec const *>;
struct TSGrowableArray<AreaPOIRec const *>;
struct DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH;
struct TSHashTable<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>_vtbl;
struct TSBaseArray<TSExplicitList<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl;
struct TSBaseArray<TradeSkillInfo *>_vtbl;
struct TradeSkillInfo;
struct TSFixedArray<TradeSkillInfo *>;
struct TSGrowableArray<TradeSkillInfo *>;
struct TSBaseArray<TradeSkillSubClassInfo *>_vtbl;
struct TradeSkillSubClassInfo;
struct TSFixedArray<TradeSkillSubClassInfo *>;
struct TSGrowableArray<TradeSkillSubClassInfo *>;
struct TSBaseArray<CraftInfo *>_vtbl;
struct CraftInfo;
struct TSFixedArray<CraftInfo *>;
struct TSGrowableArray<CraftInfo *>;
struct TSBaseArray<CraftSkillLineInfo *>_vtbl;
struct CraftSkillLineInfo;
struct TSFixedArray<CraftSkillLineInfo *>;
struct TSGrowableArray<CraftSkillLineInfo *>;
struct TSBaseArray<PetitionSignerInfo>_vtbl;
struct PetitionSignerInfo;
struct TSFixedArray<PetitionSignerInfo>;
struct TSGrowableArray<PetitionSignerInfo>;
struct DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH;
struct TSHashTable<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>_vtbl;
struct TSBaseArray<TSExplicitList<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl;
struct KEYBINDING;
struct TSHashTable<KEYBINDING,HASHKEY_STRI>_vtbl;
struct TSBaseArray<TSExplicitList<KEYBINDING,-572662307> >_vtbl;
struct KEYCOMMAND;
struct TSHashTable<KEYCOMMAND,HASHKEY_STRI>_vtbl;
struct TSBaseArray<TSExplicitList<KEYCOMMAND,-572662307> >_vtbl;
struct DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH;
struct TSHashTable<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>_vtbl;
struct TSBaseArray<TSExplicitList<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl;
struct DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH;
struct TSHashTable<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>_vtbl;
struct TSBaseArray<TSExplicitList<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl;
struct DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH;
struct TSHashTable<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>_vtbl;
struct TSBaseArray<TSExplicitList<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl;
struct DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH;
struct TSHashTable<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>_vtbl;
struct TSBaseArray<TSExplicitList<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl;
struct TSBaseArray<TrainerServiceInfo *>_vtbl;
struct TrainerServiceInfo;
struct TSFixedArray<TrainerServiceInfo *>;
struct TSGrowableArray<TrainerServiceInfo *>;
struct TSBaseArray<TrainerSkillLineInfo *>_vtbl;
struct TrainerSkillLineInfo;
struct TSFixedArray<TrainerSkillLineInfo *>;
struct TSGrowableArray<TrainerSkillLineInfo *>;
struct TSBaseArray<WorldMapContinentInfo>_vtbl;
struct WorldMapContinentInfo;
struct TSFixedArray<WorldMapContinentInfo>;
struct TSBaseArray<WorldMapLandmarkInfo>_vtbl;
struct WorldMapLandmarkInfo;
struct TSFixedArray<WorldMapLandmarkInfo>;
struct FADEOUTHASHOBJ;
struct TSBaseArray<TSExplicitList<FADEOUTHASHOBJ,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<FADEOUTHASHOBJ,-572662307> >;
struct TSGrowableArray<TSExplicitList<FADEOUTHASHOBJ,-572662307> >;
struct TSHashTable<FADEOUTHASHOBJ,CHashKeyGUID>_vtbl;
struct PENDINGCHAT;
struct PENDINGTEXTEMOTE;
struct TSBaseArray<regex_t>_vtbl;
struct cset;
struct re_guts;
struct regex_t;
struct TSFixedArray<regex_t>;
struct TSBaseArray<LanguageWordsRec const *>_vtbl;
struct WORDLIST;
struct TSBaseArray<TSExplicitList<WORDLIST,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<WORDLIST,-572662307> >;
struct TSGrowableArray<TSExplicitList<WORDLIST,-572662307> >;
struct TSHashTable<WORDLIST,HASHKEY_LANGUAGE>_vtbl;
struct TSBaseArray<ChatChannel>_vtbl;
struct PENDINGUSERLIST;
struct ChatChannel;
struct TSFixedArray<ChatChannel>;
struct TSGrowableArray<ChatChannel>;
struct TSBaseArray<NearestEnemyData>_vtbl;
struct NearestEnemyData;
struct TSFixedArray<NearestEnemyData>;
struct TSGrowableArray<NearestEnemyData>;
struct ITEMPORTRAIT;
struct TSBaseArray<TSExplicitList<ITEMPORTRAIT,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<ITEMPORTRAIT,-572662307> >;
struct TSGrowableArray<TSExplicitList<ITEMPORTRAIT,-572662307> >;
struct TSHashTable<ITEMPORTRAIT,HASHKEY_STR>_vtbl;
struct PLAYERPORTRAIT;
struct TSBaseArray<TSExplicitList<PLAYERPORTRAIT,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<PLAYERPORTRAIT,-572662307> >;
struct TSGrowableArray<TSExplicitList<PLAYERPORTRAIT,-572662307> >;
struct TSHashTable<PLAYERPORTRAIT,CHashKeyGUID>_vtbl;
struct DIRTYFACE;
struct UNITPORTRAIT;
struct TSBaseArray<TSExplicitList<UNITPORTRAIT,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<UNITPORTRAIT,-572662307> >;
struct TSGrowableArray<TSExplicitList<UNITPORTRAIT,-572662307> >;
struct TSHashTable<UNITPORTRAIT,HASHKEY_NONE>_vtbl;
struct CACHEENTRY;
struct TSHashTable<CACHEENTRY,HASHKEY_STRI>_vtbl;
struct TSBaseArray<TSExplicitList<CACHEENTRY,-572662307> >_vtbl;
struct CWFrustum;
struct TSBaseArray<NTempest::CRect>_vtbl;
struct TSFixedArray<NTempest::CRect>;
struct TSGrowableArray<NTempest::CRect>;
struct BFSNODE;
struct NETCLIENTNODE;
struct TSBaseArray<ItemSubClassRec const *>_vtbl;
struct TSFixedArray<ItemSubClassRec const *>;
struct DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH;
struct TSHashTable<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>_vtbl;
struct TSBaseArray<TSExplicitList<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl;
struct DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH;
struct TSHashTable<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>_vtbl;
struct TSBaseArray<TSExplicitList<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl;
struct TSBaseArray<ResistancesRec const *>_vtbl;
struct TSFixedArray<ResistancesRec const *>;
struct CGxShaderParam;
struct TSExplicitList<CGxShaderParam,108>;
struct CGxPixelShader;
struct CGxVertexShader;
struct CGxDevice_vtbl;
struct TSBaseArray<CGxPushedRenderState>_vtbl;
struct CGxStateBom;
struct CGxPushedRenderState;
struct TSBaseArray<enum EGxRenderState>_vtbl;
struct TSHashTable<CGxPixelShader,HASHKEY_STRI>_vtbl;
struct TSBaseArray<TSExplicitList<CGxPixelShader,-572662307> >_vtbl;
struct TSBaseArray<CGxPixelShader>_vtbl;
struct TSHashObjectChunk<CGxPixelShader,HASHKEY_STRI>;
struct TSHashTable<CGxVertexShader,HASHKEY_STRI>_vtbl;
struct TSBaseArray<TSExplicitList<CGxVertexShader,-572662307> >_vtbl;
struct TSBaseArray<CGxVertexShader>_vtbl;
struct TSHashObjectChunk<CGxVertexShader,HASHKEY_STRI>;
struct TSBaseArray<CGxAppRenderState>_vtbl;
struct CGxAppRenderState;
struct TSBaseArray<CGxStateBom>_vtbl;
struct TSBaseArray<CGxTex *>_vtbl;
struct TSBaseArray<CGxVertexBuffer_D3d *>_vtbl;
struct CGxMemBuffer_vtbl;
struct CGxVertexBuffer_D3d;
struct TSFixedArray<CGxVertexBuffer_D3d *>;
struct TSGrowableArray<CGxVertexBuffer_D3d *>;
struct CGxBufD3d_vtbl;
struct HGLRC__;
struct HPBUFFERARB__;
struct TSBaseArray<CGxFormat>_vtbl;
struct TSFixedArray<CGxFormat>;
struct TSGrowableArray<CGxFormat>;
struct TSBaseArray<CGxMonitorMode>_vtbl;
struct CGxMonitorMode;
struct TSFixedArray<CGxMonitorMode>;
struct TSGrowableArray<CGxMonitorMode>;
struct FT_MemoryRec_;		// FreeType
struct FT_Module_Class_;	// FreeType
struct FT_ListNodeRec_;		// FreeType
struct FT_RendererRec_;		// FreeType
struct FT_LibraryRec_;		// FreeType
struct FT_Bitmap_Size_;		// FreeType
struct FT_FaceRec_;			// FreeType
struct FT_CharMapRec_;		// FreeType
struct FT_BBox_;			// FreeType
struct FT_GlyphSlotRec_;	// FreeType
struct FT_SizeRec_;			// FreeType
struct FT_Parameter_;		// FreeType
struct FT_Vector_;			// FreeType
struct FT_Driver_Class_;	// FreeType
struct FT_Matrix_;			// FreeType
struct FT_SubGlyph_;		// FreeType
struct FT_GlyphLoader_;		// FreeType
struct FT_DriverRec_;		// FreeType
struct FT_Face_InternalRec_;// FreeType
struct FT_Slot_InternalRec_;// FreeType
struct FT_Span_;			// FreeType
struct FT_Raster_Params_;	// FreeType
struct FT_Raster_Funcs_;	// FreeType
struct FT_Renderer_Class_;	// FreeType
struct FT_GlyphRec_;		// FreeType
struct AH_Segment;			// FreeType
struct TT_Loader_;			// FreeType
struct TT_HdmxRec_;			// FreeType
struct TT_GaspRange_;		// FreeType
struct TT_SBit_Range;		// FreeType
struct TT_SBit_Strike_;		// FreeType
struct TT_SBit_Scale_;		// FreeType
struct TT_Kern_0_Pair_;		// FreeType
struct T1_Parser_;			// FreeType
struct T1_Token_;			// FreeType
struct PS_Table_;			// FreeType
struct T1_Builder_;			// FreeType
struct T1_Decoder_;			// FreeType
struct WowConnectionNet;
struct TSBaseArray<WowConnection *>_vtbl;
struct TSFixedArray<WowConnection *>;
struct TSGrowableArray<WowConnection *>;
struct FACEDATA;
struct TSBaseArray<TSExplicitList<FACEDATA,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<FACEDATA,-572662307> >;
struct TSGrowableArray<TSExplicitList<FACEDATA,-572662307> >;
struct TSHashTable<FACEDATA,HASHKEY_STRI>_vtbl;
struct STRINGVIEWMATRICES;
struct TSBaseArray<TSExplicitList<STRINGVIEWMATRICES,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<STRINGVIEWMATRICES,-572662307> >;
struct TSGrowableArray<TSExplicitList<STRINGVIEWMATRICES,-572662307> >;
struct TSHashTable<STRINGVIEWMATRICES,HASHKEY_PTR>_vtbl;
struct TSBaseArray<CGxuLight *>_vtbl;
struct CGxuLight;
struct CLightList;
struct CGxuLightLink;
struct TSFixedArray<CGxuLight *>;
struct TSGrowableArray<CGxuLight *>;
struct TSHashTable<CLightList,HASHKEY_DWORD>_vtbl;
struct TSBaseArray<TSExplicitList<CLightList,-572662307> >_vtbl;
struct TSBaseArray<CLightList>_vtbl;
struct TSHashObjectChunk<CLightList,HASHKEY_DWORD>;
struct TSBaseArray<CHANCES>_vtbl;
struct CHANCES;
struct ANIMKIT;
struct TSBaseArray<TSExplicitList<ANIMKIT,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<ANIMKIT,-572662307> >;
struct TSGrowableArray<TSExplicitList<ANIMKIT,-572662307> >;
struct TSHashTable<ANIMKIT,HASHKEY_NONE>_vtbl;
struct HITSPRITE;
struct TSBaseArray<ENCHANTMENTLOGDESC>_vtbl;
struct ENCHANTMENTLOGDESC;
struct TSFixedArray<ENCHANTMENTLOGDESC>;
struct TSGrowableArray<ENCHANTMENTLOGDESC>;
struct UNITHASHOBJ;
struct TSHashTable<UNITHASHOBJ,CHashKeyGUID>_vtbl;
struct TSBaseArray<TSExplicitList<UNITHASHOBJ,-572662307> >_vtbl;
struct TSBaseArray<PERSISTENTTEXTURE>_vtbl;
struct LISTBASE_vtbl;
struct TSBaseArray<VERTDATA>_vtbl;
struct VERTDATA;
struct CHUNKDATA;
struct SPLATDATA;
struct PERSISTENTTEXTURE;
struct TSFixedArray<PERSISTENTTEXTURE>;
struct TSGrowableArray<PERSISTENTTEXTURE>;
struct TSBaseArray<TIMEDTEXTURE>_vtbl;
struct TIMEDTEXTURE;
struct TSFixedArray<TIMEDTEXTURE>;
struct TSGrowableArray<TIMEDTEXTURE>;
struct NODEBASE;
struct NODEBASE_vtbl;
struct ONESHOTEFFECTNODE;
struct UNITONESHOTEFFECTDESC;
struct TSBaseArray<TSExplicitList<UNITONESHOTEFFECTDESC,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<UNITONESHOTEFFECTDESC,-572662307> >;
struct TSGrowableArray<TSExplicitList<UNITONESHOTEFFECTDESC,-572662307> >;
struct TSHashTable<UNITONESHOTEFFECTDESC,CHashKeyGUID>_vtbl;
struct ONESHOTSTANDALONEEFFECTNODE;
struct MISSILENODE;
struct PERSISTENTUNITEFFECT;
struct TSBaseArray<DEATTHUDSOUNDINFO>_vtbl;
struct DEATTHUDSOUNDINFO;
struct TSFixedArray<DEATTHUDSOUNDINFO>;
struct NAMEPLATEDESC;
struct FREENAMEPLATE;
struct TSBaseArray<TSExplicitList<NAMEPLATEDESC,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<NAMEPLATEDESC,-572662307> >;
struct TSGrowableArray<TSExplicitList<NAMEPLATEDESC,-572662307> >;
struct TSHashTable<NAMEPLATEDESC,CHashKeyGUID>_vtbl;
struct AuraDecayNode;
struct TSBaseArray<NTempest::C4Plane>_vtbl;
struct TSBaseArray<InitialSpellStruct>_vtbl;
struct InitialSpellStruct;
struct TSFixedArray<InitialSpellStruct>;
struct TSGrowableArray<InitialSpellStruct>;
struct ITEMEXPIRATION;
struct TSBaseArray<TSExplicitList<ITEMEXPIRATION,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<ITEMEXPIRATION,-572662307> >;
struct TSGrowableArray<TSExplicitList<ITEMEXPIRATION,-572662307> >;
struct TSHashTable<ITEMEXPIRATION,CHashKeyGUID>_vtbl;
struct TSBaseArray<ITEMSWAP>_vtbl;
struct ITEMSWAP;
struct TSFixedArray<ITEMSWAP>;
struct TSGrowableArray<ITEMSWAP>;
struct DEFERREDDAMAGE;
struct DEFERREDSPELLMISS;
struct INVENTORYART;
struct TSBaseArray<TSExplicitList<INVENTORYART,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<INVENTORYART,-572662307> >;
struct TSGrowableArray<TSExplicitList<INVENTORYART,-572662307> >;
struct TSHashTable<INVENTORYART,HASHKEY_NONE>_vtbl;
struct CONSOLECOMMAND;
struct TSBaseArray<TSExplicitList<CONSOLECOMMAND,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<CONSOLECOMMAND,-572662307> >;
struct TSGrowableArray<TSExplicitList<CONSOLECOMMAND,-572662307> >;
struct TSHashTable<CONSOLECOMMAND,HASHKEY_CONSTSTRI>_vtbl;
struct TSBaseArray<TSExplicitList<CVar,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<CVar,-572662307> >;
struct TSGrowableArray<TSExplicitList<CVar,-572662307> >;
struct TSHashTable<CVar,HASHKEY_STRI>_vtbl;
struct CONSOLELINE;
struct TSBaseArray<TSExplicitList<ZipFileDirEntry,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<ZipFileDirEntry,-572662307> >;
struct TSGrowableArray<TSExplicitList<ZipFileDirEntry,-572662307> >;
struct TSHashTable<ZipFileDirEntry,HASHKEY_CONSTSTRI>_vtbl;
struct WowFile;
struct WowFileSystemProvider_vtbl;
struct BREAKCMD;
struct Storm::SFile::FILEREC;
struct Storm::SFile::ARCHIVEREC;
struct HSFILE__;
struct HSARCHIVE__;
struct _HASHENTRY;
struct Storm::SFile::AUDIOSTREAM;
struct _TASYNCPARAMBLOCK;
struct REQUEST;
struct EVENTREC;
struct WNDREC;
struct HUFFNODE;
struct RGN;
struct TSBaseArray<_SOURCE>_vtbl;
struct _SOURCE;
struct TSBaseArray<RECTF>_vtbl;
struct TSBaseArray<_FOUNDPARAM>_vtbl;
struct _FOUNDPARAM;
struct TSHashTable<RGN,HASHKEY_NONE>_vtbl;
struct TSBaseArray<TSExplicitList<RGN,-572662307> >_vtbl;
struct TSBaseArray<RGN>_vtbl;
struct TSHashObjectChunk<RGN,HASHKEY_NONE>;
struct CMDDEF;
struct FILEMAP;
struct TSBaseArray<TSExplicitList<FILEMAP,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<FILEMAP,-572662307> >;
struct TSGrowableArray<TSExplicitList<FILEMAP,-572662307> >;
struct TSHashTable<FILEMAP,HASHKEY_STRI>_vtbl;
struct ASYNCREAD;
struct HANDLER;
struct _BLOCK;
struct _FREEBLOCK;
struct CMapBaseObj;
struct CMapBaseObj_vtbl;
struct CMapBaseObjLink;
struct CDetailDoodadGeom;
struct TSLink<CMapChunk>;
struct CMapSoundEmitter;
struct CChunkLiquid;
struct CChunkLayer;
struct CChunkTex;
struct CMapObj;
struct SMOHeader;
struct SMOGroupInfo;
struct SMOPortal;
struct SMOPortalRef;
struct SMOLight;
struct SMODoodadSet;
struct SMODoodadDef;
struct SMOFog;
struct SMOMaterial;
struct CAaBspNode;
struct SMOPoly;
struct SMOBatch;
struct SMOLightmap;
struct SMOLightmapTex;
struct SMOLVert;
struct SMOLTile;
struct CMapObjGroup;
struct CMapLight;
struct CMapObjDefGroup;
struct CMapObjDef;
struct TSBaseArray<CMapLight *>_vtbl;
struct CMapCacheLight;
struct CMapStaticEntity;
struct TSBaseArray<SMDoodadDef>_vtbl;
struct SMDoodadDef;
struct TSFixedArray<SMDoodadDef>;
struct TSGrowableArray<SMDoodadDef>;
struct TSBaseArray<SMMapObjDef>_vtbl;
struct SMMapObjDef;
struct TSFixedArray<SMMapObjDef>;
struct TSGrowableArray<SMMapObjDef>;
struct CMapArea;
struct TSBaseArray<NTempest::C44Matrix>_vtbl;
struct TSBaseArray<CMapDoodadDef *>_vtbl;
struct CMapDoodadDef;
struct CSimpleDoodad;
struct TSBaseArray<TSExplicitList<CSimpleDoodad,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<CSimpleDoodad,-572662307> >;
struct TSGrowableArray<TSExplicitList<CSimpleDoodad,-572662307> >;
struct TSHashTable<CSimpleDoodad,HASHKEY_NONE>_vtbl;
struct TSBaseArray<CDetailDoodadData *>_vtbl;
struct CDetailDoodadData;
struct TSFixedArray<CDetailDoodadData *>;
struct TSGrowableArray<CDetailDoodadData *>;
struct TSBaseArray<CGxBuf *>_vtbl;
struct TSFixedArray<CGxBuf *>;
struct TSGrowableArray<CGxBuf *>;
struct TSBaseArray<SGroupPtr>_vtbl;
struct SGroupPtr;
struct TSFixedArray<SGroupPtr>;
struct TSGrowableArray<SGroupPtr>;
struct TSBaseArray<CGxVertexPC>_vtbl;
struct CGxVertexPC;
struct TSFixedArray<CGxVertexPC>;
struct TSGrowableArray<CGxVertexPC>;
struct CMapAreaLow;
struct GlareBase_vtbl;
struct TSBaseArray<TSExplicitList<CMapObj,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<CMapObj,-572662307> >;
struct TSGrowableArray<TSExplicitList<CMapObj,-572662307> >;
struct TSHashTable<CMapObj,HASHKEY_NONE>_vtbl;
struct TSBaseArray<TSExplicitList<CMapDoodadDef,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<CMapDoodadDef,-572662307> >;
struct TSGrowableArray<TSExplicitList<CMapDoodadDef,-572662307> >;
struct TSHashTable<CMapDoodadDef,HASHKEY_DWORD>_vtbl;
struct CMapEntity;
struct TSBaseArray<TSExplicitList<CMapObjDef,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<CMapObjDef,-572662307> >;
struct TSGrowableArray<TSExplicitList<CMapObjDef,-572662307> >;
struct TSHashTable<CMapObjDef,HASHKEY_NONE>_vtbl;
struct WaterRadWave;
struct TSBaseArray<LODArrays>_vtbl;
struct TSBaseArray<LODIndexFix>_vtbl;
struct LODIndexFix;
struct LODArrays;
struct TSFixedArray<LODArrays>;
struct TSGrowableArray<LODArrays>;
struct AREAHASHOBJECT;
struct TSBaseArray<TSExplicitList<AREAHASHOBJECT,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<AREAHASHOBJECT,-572662307> >;
struct TSGrowableArray<TSExplicitList<AREAHASHOBJECT,-572662307> >;
struct TSHashTable<AREAHASHOBJECT,AREAHASHKEY>_vtbl;
struct TSBaseArray<LightData>_vtbl;
struct TSBaseArray<LightMarker>_vtbl;
struct LightMarker;
struct TSBaseArray<LightDataSky>_vtbl;
struct LightDataSky;
struct TSBaseArray<LightDataFog>_vtbl;
struct LightDataFog;
struct LightData;
struct TSFixedArray<LightData>;
struct MINIMAPMD5NAME;
struct TSBaseArray<TSExplicitList<MINIMAPMD5NAME,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<MINIMAPMD5NAME,-572662307> >;
struct TSGrowableArray<TSExplicitList<MINIMAPMD5NAME,-572662307> >;
struct TSHashTable<MINIMAPMD5NAME,HASHKEY_STRI>_vtbl;
struct WORLDTEXTSTRING;
struct PLAYERNAMEDESC;
struct WTOBJECT;
struct TSBaseArray<VERTEX>_vtbl;
struct VERTEX;
struct SWING;
struct TSBaseArray<TAXILINE>_vtbl;
struct TAXILINE;
struct TSFixedArray<TAXILINE>;
struct TSGrowableArray<TAXILINE>;
struct ITEMCOOLDOWNHASHNODE;
struct TSBaseArray<TSExplicitList<ITEMCOOLDOWNHASHNODE,-572662307> >_vtbl;
struct TSFixedArray<TSExplicitList<ITEMCOOLDOWNHASHNODE,-572662307> >;
struct TSGrowableArray<TSExplicitList<ITEMCOOLDOWNHASHNODE,-572662307> >;
struct TSHashTable<ITEMCOOLDOWNHASHNODE,HASHKEY_NONE>_vtbl;
struct SPELLHISTORY;
struct TSBaseArray<SpellAuraNamesRec const *>_vtbl;
struct TSFixedArray<SpellAuraNamesRec const *>;
struct TSGrowableArray<SpellAuraNamesRec const *>;
struct TSBaseArray<enum ANIMENUMERATION>_vtbl;
struct TSFixedArray<enum ANIMENUMERATION>;
struct SPELLVISUALNODE;
struct TSBaseArray<TSFixedArray<SkillLineAbilityRec const *> >_vtbl;
struct TSBaseArray<SkillLineAbilityRec const *>_vtbl;
struct TSFixedArray<SkillLineAbilityRec const *>;
struct TSFixedArray<TSFixedArray<SkillLineAbilityRec const *> >;
struct TSBaseArray<CSeqInfo>_vtbl;
struct TSFixedArray<CSeqInfo>;
struct TSBaseArray<CAnimObjStatus *>_vtbl;
struct TSFixedArray<CAnimObjStatus *>;
struct TSBaseArray<CAnimObjStatus>_vtbl;
struct TSFixedArray<CAnimObjStatus>;
struct TSBaseArray<CAnimGeosetObjStatus>_vtbl;
struct TSFixedArray<CAnimGeosetObjStatus>;
struct TSBaseArray<CAnimModelObjStatus>_vtbl;
struct TSFixedArray<CAnimModelObjStatus>;
struct TSBaseArray<CAnimObjBlendStatus>_vtbl;
struct TSFixedArray<CAnimObjBlendStatus>;
struct TSBaseArray<CAnimLightObjStatus>_vtbl;
struct TSFixedArray<CAnimLightObjStatus>;
struct TSBaseArray<CAnimEmitter2ObjStatus>_vtbl;
struct TSFixedArray<CAnimEmitter2ObjStatus>;
struct TSBaseArray<CAnimRibbonObjStatus>_vtbl;
struct TSFixedArray<CAnimRibbonObjStatus>;
struct TSBaseArray<CAnimCameraObjStatus>_vtbl;
struct TSFixedArray<CAnimCameraObjStatus>;
struct TSBaseArray<CAnimEventObjStatus>_vtbl;
struct TSFixedArray<CAnimEventObjStatus>;
struct TSBaseArray<CAnimLayerStatus>_vtbl;
struct TSFixedArray<CAnimLayerStatus>;
struct IDispatch;
struct ITypeInfo;
struct ITypeInfoVtbl;
struct tagTYPEATTR;
struct tagTYPEDESC;
struct tagARRAYDESC;
struct ITypeComp;
struct ITypeCompVtbl;
union tagBINDPTR;
struct tagFUNCDESC;
struct tagELEMDESC;
struct tagPARAMDESCEX;
struct tagVARIANT;
struct tagSAFEARRAY;
struct tagDEC;
struct IRecordInfo;
struct IRecordInfoVtbl;
struct tagVARDESC;
struct tagDISPPARAMS;
struct tagEXCEPINFO;
struct ITypeLib;
struct ITypeLibVtbl;
struct tagTLIBATTR;
struct IServerSecurity;
struct IDirectMusicDownload;
struct IClientSecurity;
struct IFillLockBytes;
struct IMarshal;
struct IDirectMusicPortDownload;
struct ILockBytes;
struct IDirectSoundNotify;
struct _DSBPOSITIONNOTIFY;
struct IDirectSound3DBuffer;
struct _DS3DBUFFER;
struct AsyncIPipeLong;
struct ISurrogate;
struct IPersistFile;
struct IThumbnailExtractor;
struct IKsPropertySet;
struct IProgressNotify;
struct IDirectSound3DListener;
struct _DS3DLISTENER;
struct IDirectSoundCaptureBuffer8;
struct _DSCBCAPS;
struct IDirectSoundCapture;
struct IDirectSoundCaptureVtbl;
struct _DSCBUFFERDESC;
struct _DSCEFFECTDESC;
struct IDirectSoundCaptureBuffer;
struct IDirectSoundCaptureBufferVtbl;
struct _DSCCAPS;
struct IRootStorage;
struct IDirectSoundFXChorus;
struct _DSFXChorus;
struct AsyncIAdviseSink;
struct AsyncIAdviseSink2;
struct IBlockingLock;
struct IRpcStubBuffer;
struct tagRPCOLEMESSAGE;
struct IRpcChannelBuffer;
struct IRpcChannelBufferVtbl;
struct IClassActivator;
struct IDirectSoundFXI3DL2Reverb;
struct _DSFXI3DL2Reverb;
struct IDummyHICONIncluder;
struct IDirectSoundFXWavesReverb;
struct _DSFXWavesReverb;
struct IMessageFilter;
struct tagINTERFACEINFO;
struct ISynchronizeEvent;
struct ISynchronize;
struct IChannelHook;
struct IUrlMon;
struct IRunnableObject;
struct IPipeDouble;
struct AsyncIPipeByte;
struct IDirectSound8;
struct IPipeLong;
struct IDirectMusic8;
struct IPrintDialogCallback;
struct IDirectSoundFXFlanger;
struct _DSFXFlanger;
struct IPSFactoryBuffer;
struct IRpcProxyBuffer;
struct IRpcProxyBufferVtbl;
struct IRpcChannelBuffer2;
struct IStdMarshalInfo;
struct IAdviseSink2;
struct IExternalConnection;
struct IDirectSoundFXParamEq;
struct _DSFXParamEq;
struct ITimeAndNoticeControl;
struct IRpcChannelBuffer3;
struct IAsyncManager;
struct IAsyncManagerVtbl;
struct ILayoutStorage;
struct tagStorageLayout;
struct AsyncIPipeDouble;
struct IDirectWriterLock;
struct IMultiQI;
struct tagMULTI_QI;
struct IDirectSoundFXEcho;
struct _DSFXEcho;
struct IOplockStorage;
struct IDirectSoundFullDuplex;
struct IDirectSoundBuffer8;
struct IDirectSoundBuffer8Vtbl;
struct _DSEFFECTDESC;
struct ISynchronizeMutex;
struct IMalloc;
struct IDirectSoundCaptureFXNoiseSuppress;
struct _DSCFXNoiseSuppress;
struct IProcessInitControl;
struct IDirectSoundFXGargle;
struct _DSFXGargle;
struct IMallocSpy;
struct IPipeByte;
struct IDirectSoundCaptureFXAec;
struct _DSCFXAec;
struct IDirectSoundFXCompressor;
struct _DSFXCompressor;
struct IDirectMusicThru;
struct IDataAdviseHolder;
struct IPrintDialogServices;
struct IDirectSoundFXDistortion;
struct _DSFXDistortion;
struct IPersistStorage;
struct IROTData;

/* 1 */
struct _SCOPETABLE_ENTRY
{
  int EnclosingLevel;
  void *FilterFunc;
  void *HandlerFunc;
};

/* 2 */
typedef struct _SCOPETABLE_ENTRY *PSCOPETABLE_ENTRY;

/* 118 */
typedef void *PVOID;

/* 8 */
typedef unsigned int DWORD;

/* 3 */
struct _EH3_EXCEPTION_REGISTRATION
{
  struct _EH3_EXCEPTION_REGISTRATION *Next;
  PVOID ExceptionHandler;
  PSCOPETABLE_ENTRY ScopeTable;
  DWORD TryLevel;
};

/* 4 */
typedef struct _EH3_EXCEPTION_REGISTRATION EH3_EXCEPTION_REGISTRATION;

/* 5 */
typedef struct _EH3_EXCEPTION_REGISTRATION *PEH3_EXCEPTION_REGISTRATION;

/* 6 */
struct CPPEH_RECORD
{
  DWORD old_esp;
  EXCEPTION_POINTERS *exc_ptr;
  struct _EH3_EXCEPTION_REGISTRATION registration;
};

/* 10 */
typedef char CHAR;

/* 9 */
typedef CHAR *LPSTR;

/* 11 */
typedef unsigned __int16 WORD;

/* 13 */
typedef unsigned __int8 BYTE;

/* 12 */
typedef BYTE *LPBYTE;

/* 14 */
typedef void *HANDLE;

/* 7 */
struct _STARTUPINFOA
{
  DWORD cb;
  LPSTR lpReserved;
  LPSTR lpDesktop;
  LPSTR lpTitle;
  DWORD dwX;
  DWORD dwY;
  DWORD dwXSize;
  DWORD dwYSize;
  DWORD dwXCountChars;
  DWORD dwYCountChars;
  DWORD dwFillAttribute;
  DWORD dwFlags;
  WORD wShowWindow;
  WORD cbReserved2;
  LPBYTE lpReserved2;
  HANDLE hStdInput;
  HANDLE hStdOutput;
  HANDLE hStdError;
};

/* 15 */
typedef struct tagMENUITEMINFOA MENUITEMINFOA;

/* 17 */
typedef unsigned int UINT;

/* 18 */
typedef struct HMENU__ *HMENU;

/* 20 */
typedef struct HBITMAP__ *HBITMAP;

/* 22 */
typedef unsigned int ULONG_PTR;

/* 16 */
struct tagMENUITEMINFOA
{
  UINT cbSize;
  UINT fMask;
  UINT fType;
  UINT fState;
  UINT wID;
  HMENU hSubMenu;
  HBITMAP hbmpChecked;
  HBITMAP hbmpUnchecked;
  ULONG_PTR dwItemData;
  LPSTR dwTypeData;
  UINT cch;
  HBITMAP hbmpItem;
};

/* 19 */
struct HMENU__
{
  int unused;
};

/* 21 */
struct HBITMAP__
{
  int unused;
};

/* 24 */
typedef int LONG;

/* 23 */
struct tagPOINT
{
  LONG x;
  LONG y;
};

/* 25 */
struct tagRECT
{
  LONG left;
  LONG top;
  LONG right;
  LONG bottom;
};

/* 27 */
typedef struct tagRECT RECT;

/* 28 */
typedef WORD ATOM;

/* 26 */
struct tagWINDOWINFO
{
  DWORD cbSize;
  RECT rcWindow;
  RECT rcClient;
  DWORD dwStyle;
  DWORD dwExStyle;
  DWORD dwWindowStatus;
  UINT cxWindowBorders;
  UINT cyWindowBorders;
  ATOM atomWindowType;
  WORD wCreatorVersion;
};

/* 30 */
typedef struct HWND__ *HWND;

/* 29 */
struct tagTRACKMOUSEEVENT
{
  DWORD cbSize;
  DWORD dwFlags;
  HWND hwndTrack;
  DWORD dwHoverTime;
};

/* 31 */
struct HWND__
{
  int unused;
};

/* 32 */
struct tagSIZE
{
  LONG cx;
  LONG cy;
};

/* 33 */
typedef struct tagBITMAPINFOHEADER BITMAPINFOHEADER;

/* 34 */
struct tagBITMAPINFOHEADER
{
  DWORD biSize;
  LONG biWidth;
  LONG biHeight;
  WORD biPlanes;
  WORD biBitCount;
  DWORD biCompression;
  DWORD biSizeImage;
  LONG biXPelsPerMeter;
  LONG biYPelsPerMeter;
  DWORD biClrUsed;
  DWORD biClrImportant;
};

/* 35 */
typedef struct tagSCROLLINFO SCROLLINFO;

/* 36 */
struct tagSCROLLINFO
{
  UINT cbSize;
  UINT fMask;
  int nMin;
  int nMax;
  UINT nPage;
  int nPos;
  int nTrackPos;
};

/* 37 */
typedef union _LARGE_INTEGER LARGE_INTEGER;

/* 39 */
struct _LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E
{
  DWORD LowPart;
  LONG HighPart;
};

/* 40 */
typedef __int64 LONGLONG;

/* 38 */
union _LARGE_INTEGER
{
  struct
  {
    DWORD LowPart;
    LONG HighPart;
  };
  struct _LARGE_INTEGER::$837407842DC9087486FDFA5FEB63B74E u;
  LONGLONG QuadPart;
};

/* 42 */
typedef struct _RTL_CRITICAL_SECTION_DEBUG *PRTL_CRITICAL_SECTION_DEBUG;

/* 41 */
#pragma pack(push, 8)
struct _RTL_CRITICAL_SECTION
{
  PRTL_CRITICAL_SECTION_DEBUG DebugInfo;
  LONG LockCount;
  LONG RecursionCount;
  HANDLE OwningThread;
  HANDLE LockSemaphore;
  ULONG_PTR SpinCount;
};
#pragma pack(pop)

/* 45 */
struct _LIST_ENTRY
{
  struct _LIST_ENTRY *Flink;
  struct _LIST_ENTRY *Blink;
};

/* 44 */
typedef struct _LIST_ENTRY LIST_ENTRY;

/* 43 */
struct _RTL_CRITICAL_SECTION_DEBUG
{
  WORD Type;
  WORD CreatorBackTraceIndex;
  struct _RTL_CRITICAL_SECTION *CriticalSection;
  LIST_ENTRY ProcessLocksList;
  DWORD EntryCount;
  DWORD ContentionCount;
  DWORD Flags;
  WORD CreatorBackTraceIndexHigh;
  WORD SpareWORD;
};

/* 48 */
typedef unsigned __int16 USHORT;

/* 47 */
typedef USHORT ADDRESS_FAMILY;

/* 46 */
struct sockaddr
{
  ADDRESS_FAMILY sa_family;
  CHAR sa_data[14];
};

/* 51 */
struct _SYSTEM_INFO::$A707B71C060B6D10F73A71917EA8473F::$AA04DEB0C6383F89F13D312A174572A9
{
  WORD wProcessorArchitecture;
  WORD wReserved;
};

/* 50 */
union _SYSTEM_INFO::$A707B71C060B6D10F73A71917EA8473F
{
  DWORD dwOemId;
  struct
  {
    WORD wProcessorArchitecture;
    WORD wReserved;
  };
};

/* 52 */
typedef void *LPVOID;

/* 53 */
typedef ULONG_PTR DWORD_PTR;

/* 49 */
struct _SYSTEM_INFO
{
  union
  {
    DWORD dwOemId;
    struct
    {
      WORD wProcessorArchitecture;
      WORD wReserved;
    };
  };
  DWORD dwPageSize;
  LPVOID lpMinimumApplicationAddress;
  LPVOID lpMaximumApplicationAddress;
  DWORD_PTR dwActiveProcessorMask;
  DWORD dwNumberOfProcessors;
  DWORD dwProcessorType;
  DWORD dwAllocationGranularity;
  WORD wProcessorLevel;
  WORD wProcessorRevision;
};

/* 54 */
struct _OSVERSIONINFOA
{
  DWORD dwOSVersionInfoSize;
  DWORD dwMajorVersion;
  DWORD dwMinorVersion;
  DWORD dwBuildNumber;
  DWORD dwPlatformId;
  CHAR szCSDVersion[128];
};

/* 55 */
struct WSAData
{
  WORD wVersion;
  WORD wHighVersion;
  char szDescription[257];
  char szSystemStatus[129];
  unsigned __int16 iMaxSockets;
  unsigned __int16 iMaxUdpDg;
  char *lpVendorInfo;
};

/* 57 */
typedef ULONG_PTR SIZE_T;

/* 56 */
struct _MEMORYSTATUS
{
  DWORD dwLength;
  DWORD dwMemoryLoad;
  SIZE_T dwTotalPhys;
  SIZE_T dwAvailPhys;
  SIZE_T dwTotalPageFile;
  SIZE_T dwAvailPageFile;
  SIZE_T dwTotalVirtual;
  SIZE_T dwAvailVirtual;
};

/* 60 */
typedef unsigned int UINT_PTR;

/* 59 */
typedef UINT_PTR WPARAM;

/* 62 */
typedef int LONG_PTR;

/* 61 */
typedef LONG_PTR LPARAM;

/* 63 */
typedef struct tagPOINT POINT;

/* 58 */
struct tagMSG
{
  HWND hwnd;
  UINT message;
  WPARAM wParam;
  LPARAM lParam;
  DWORD time;
  POINT pt;
};

/* 67 */
struct tagMOUSEINPUT
{
  LONG dx;
  LONG dy;
  DWORD mouseData;
  DWORD dwFlags;
  DWORD time;
  ULONG_PTR dwExtraInfo;
};

/* 66 */
typedef struct tagMOUSEINPUT MOUSEINPUT;

/* 69 */
struct tagKEYBDINPUT
{
  WORD wVk;
  WORD wScan;
  DWORD dwFlags;
  DWORD time;
  ULONG_PTR dwExtraInfo;
};

/* 68 */
typedef struct tagKEYBDINPUT KEYBDINPUT;

/* 71 */
struct tagHARDWAREINPUT
{
  DWORD uMsg;
  WORD wParamL;
  WORD wParamH;
};

/* 70 */
typedef struct tagHARDWAREINPUT HARDWAREINPUT;

/* 65 */
union tagINPUT::$72687D791E298366090936F57062F9D6
{
  MOUSEINPUT mi;
  KEYBDINPUT ki;
  HARDWAREINPUT hi;
};

/* 64 */
struct tagINPUT
{
  DWORD type;
  union
  {
    MOUSEINPUT mi;
    KEYBDINPUT ki;
    HARDWAREINPUT hi;
  };
};

/* 72 */
struct _DISPLAY_DEVICEA
{
  DWORD cb;
  CHAR DeviceName[32];
  CHAR DeviceString[128];
  DWORD StateFlags;
  CHAR DeviceID[128];
  CHAR DeviceKey[128];
};

/* 73 */
typedef struct _devicemodeA DEVMODEA;

/* 76 */
struct _devicemodeA::$CB1E1A2E30D5738ACA9AADF670A603C7::$A4EE175A7532F35C00DA5CAD042934DF
{
  __int16 dmOrientation;
  __int16 dmPaperSize;
  __int16 dmPaperLength;
  __int16 dmPaperWidth;
  __int16 dmScale;
  __int16 dmCopies;
  __int16 dmDefaultSource;
  __int16 dmPrintQuality;
};

/* 79 */
struct _POINTL
{
  LONG x;
  LONG y;
};

/* 78 */
typedef struct _POINTL POINTL;

/* 77 */
struct _devicemodeA::$CB1E1A2E30D5738ACA9AADF670A603C7::$604F2BC6924E02F5722A52FC79BC44F9
{
  POINTL dmPosition;
  DWORD dmDisplayOrientation;
  DWORD dmDisplayFixedOutput;
};

/* 75 */
union _devicemodeA::$CB1E1A2E30D5738ACA9AADF670A603C7
{
  struct
  {
    __int16 dmOrientation;
    __int16 dmPaperSize;
    __int16 dmPaperLength;
    __int16 dmPaperWidth;
    __int16 dmScale;
    __int16 dmCopies;
    __int16 dmDefaultSource;
    __int16 dmPrintQuality;
  };
  struct
  {
    POINTL dmPosition;
    DWORD dmDisplayOrientation;
    DWORD dmDisplayFixedOutput;
  };
};

/* 80 */
union _devicemodeA::$4FBEBCCE69364E072421C9DF045BB77C
{
  DWORD dmDisplayFlags;
  DWORD dmNup;
};

/* 74 */
struct _devicemodeA
{
  BYTE dmDeviceName[32];
  WORD dmSpecVersion;
  WORD dmDriverVersion;
  WORD dmSize;
  WORD dmDriverExtra;
  DWORD dmFields;
  union
  {
    struct
    {
      __int16 dmOrientation;
      __int16 dmPaperSize;
      __int16 dmPaperLength;
      __int16 dmPaperWidth;
      __int16 dmScale;
      __int16 dmCopies;
      __int16 dmDefaultSource;
      __int16 dmPrintQuality;
    };
    struct
    {
      POINTL dmPosition;
      DWORD dmDisplayOrientation;
      DWORD dmDisplayFixedOutput;
    };
  };
  __int16 dmColor;
  __int16 dmDuplex;
  __int16 dmYResolution;
  __int16 dmTTOption;
  __int16 dmCollate;
  BYTE dmFormName[32];
  WORD dmLogPixels;
  DWORD dmBitsPerPel;
  DWORD dmPelsWidth;
  DWORD dmPelsHeight;
  union
  {
    DWORD dmDisplayFlags;
    DWORD dmNup;
  };
  DWORD dmDisplayFrequency;
  DWORD dmICMMethod;
  DWORD dmICMIntent;
  DWORD dmMediaType;
  DWORD dmDitherType;
  DWORD dmReserved1;
  DWORD dmReserved2;
  DWORD dmPanningWidth;
  DWORD dmPanningHeight;
};

/* 81 */
struct tagPIXELFORMATDESCRIPTOR
{
  WORD nSize;
  WORD nVersion;
  DWORD dwFlags;
  BYTE iPixelType;
  BYTE cColorBits;
  BYTE cRedBits;
  BYTE cRedShift;
  BYTE cGreenBits;
  BYTE cGreenShift;
  BYTE cBlueBits;
  BYTE cBlueShift;
  BYTE cAlphaBits;
  BYTE cAlphaShift;
  BYTE cAccumBits;
  BYTE cAccumRedBits;
  BYTE cAccumGreenBits;
  BYTE cAccumBlueBits;
  BYTE cAccumAlphaBits;
  BYTE cDepthBits;
  BYTE cStencilBits;
  BYTE cAuxBuffers;
  BYTE iLayerType;
  BYTE bReserved;
  DWORD dwLayerMask;
  DWORD dwVisibleMask;
  DWORD dwDamageMask;
};

/* 83 */
typedef struct HDC__ *HDC;

/* 85 */
typedef int BOOL;

/* 82 */
struct tagPAINTSTRUCT
{
  HDC hdc;
  BOOL fErase;
  RECT rcPaint;
  BOOL fRestore;
  BOOL fIncUpdate;
  BYTE rgbReserved[32];
};

/* 84 */
struct HDC__
{
  int unused;
};

/* 86 */
typedef struct tagWNDCLASSEXA WNDCLASSEXA;

/* 89 */
typedef LONG_PTR LRESULT;

/* 88 */
typedef LRESULT (__stdcall *WNDPROC)(HWND, UINT, WPARAM, LPARAM);

/* 90 */
typedef struct HINSTANCE__ *HINSTANCE;

/* 92 */
typedef struct HICON__ *HICON;

/* 94 */
typedef HICON HCURSOR;

/* 95 */
typedef struct HBRUSH__ *HBRUSH;

/* 97 */
typedef const CHAR *LPCSTR;

/* 87 */
struct tagWNDCLASSEXA
{
  UINT cbSize;
  UINT style;
  WNDPROC lpfnWndProc;
  int cbClsExtra;
  int cbWndExtra;
  HINSTANCE hInstance;
  HICON hIcon;
  HCURSOR hCursor;
  HBRUSH hbrBackground;
  LPCSTR lpszMenuName;
  LPCSTR lpszClassName;
  HICON hIconSm;
};

/* 91 */
struct HINSTANCE__
{
  int unused;
};

/* 93 */
struct HICON__
{
  int unused;
};

/* 96 */
struct HBRUSH__
{
  int unused;
};

/* 98 */
typedef struct tagPIXELFORMATDESCRIPTOR PIXELFORMATDESCRIPTOR;

/* 100 */
typedef unsigned int u_int;

/* 101 */
typedef UINT_PTR SOCKET;

/* 99 */
struct fd_set
{
  u_int fd_count;
  SOCKET fd_array[64];
};

/* 102 */
struct timeval
{
  int tv_sec;
  int tv_usec;
};

/* 103 */
#pragma pack(push, 8)
struct tm
{
  int tm_sec;
  int tm_min;
  int tm_hour;
  int tm_mday;
  int tm_mon;
  int tm_year;
  int tm_wday;
  int tm_yday;
  int tm_isdst;
};
#pragma pack(pop)

/* 106 */
struct _FILETIME
{
  DWORD dwLowDateTime;
  DWORD dwHighDateTime;
};

/* 105 */
typedef struct _FILETIME FILETIME;

/* 104 */
struct _WIN32_FIND_DATAA
{
  DWORD dwFileAttributes;
  FILETIME ftCreationTime;
  FILETIME ftLastAccessTime;
  FILETIME ftLastWriteTime;
  DWORD nFileSizeHigh;
  DWORD nFileSizeLow;
  DWORD dwReserved0;
  DWORD dwReserved1;
  CHAR cFileName[260];
  CHAR cAlternateFileName[14];
};

/* 107 */
struct _SYSTEMTIME
{
  WORD wYear;
  WORD wMonth;
  WORD wDayOfWeek;
  WORD wDay;
  WORD wHour;
  WORD wMinute;
  WORD wSecond;
  WORD wMilliseconds;
};

/* 108 */
typedef struct _CONTEXT CONTEXT;

/* 111 */
struct _FLOATING_SAVE_AREA
{
  DWORD ControlWord;
  DWORD StatusWord;
  DWORD TagWord;
  DWORD ErrorOffset;
  DWORD ErrorSelector;
  DWORD DataOffset;
  DWORD DataSelector;
  BYTE RegisterArea[80];
  DWORD Spare0;
};

/* 110 */
typedef struct _FLOATING_SAVE_AREA FLOATING_SAVE_AREA;

/* 109 */
#pragma pack(push, 4)
struct _CONTEXT
{
  DWORD ContextFlags;
  DWORD Dr0;
  DWORD Dr1;
  DWORD Dr2;
  DWORD Dr3;
  DWORD Dr6;
  DWORD Dr7;
  FLOATING_SAVE_AREA FloatSave;
  DWORD SegGs;
  DWORD SegFs;
  DWORD SegEs;
  DWORD SegDs;
  DWORD Edi;
  DWORD Esi;
  DWORD Ebx;
  DWORD Edx;
  DWORD Ecx;
  DWORD Eax;
  DWORD Ebp;
  DWORD Eip;
  DWORD SegCs;
  DWORD EFlags;
  DWORD Esp;
  DWORD SegSs;
  BYTE ExtendedRegisters[512];
};
#pragma pack(pop)

/* 113 */
typedef unsigned int _dev_t;

/* 114 */
typedef unsigned __int16 _ino_t;

/* 115 */
typedef int _off_t;

/* 116 */
typedef int __time32_t;

/* 112 */
#pragma pack(push, 8)
struct _stat32
{
  _dev_t st_dev;
  _ino_t st_ino;
  unsigned __int16 st_mode;
  __int16 st_nlink;
  __int16 st_uid;
  __int16 st_gid;
  _dev_t st_rdev;
  _off_t st_size;
  __time32_t st_atime;
  __time32_t st_mtime;
  __time32_t st_ctime;
};
#pragma pack(pop)

/* 117 */
struct _MEMORY_BASIC_INFORMATION
{
  PVOID BaseAddress;
  PVOID AllocationBase;
  DWORD AllocationProtect;
  SIZE_T RegionSize;
  DWORD State;
  DWORD Protect;
  DWORD Type;
};

/* 120 */
typedef struct _GUID GUID;

/* 119 */
typedef GUID IID;

/* 121 */
struct _GUID
{
  unsigned int Data1;
  unsigned __int16 Data2;
  unsigned __int16 Data3;
  unsigned __int8 Data4[8];
};

/* 122 */
#pragma pack(push, 1)
struct joyinfoex_tag
{
  DWORD dwSize;
  DWORD dwFlags;
  DWORD dwXpos;
  DWORD dwYpos;
  DWORD dwZpos;
  DWORD dwRpos;
  DWORD dwUpos;
  DWORD dwVpos;
  DWORD dwButtons;
  DWORD dwButtonNumber;
  DWORD dwPOV;
  DWORD dwReserved1;
  DWORD dwReserved2;
};
#pragma pack(pop)

/* 123 */
#pragma pack(push, 1)
struct tagJOYCAPSA
{
  WORD wMid;
  WORD wPid;
  CHAR szPname[32];
  UINT wXmin;
  UINT wXmax;
  UINT wYmin;
  UINT wYmax;
  UINT wZmin;
  UINT wZmax;
  UINT wNumButtons;
  UINT wPeriodMin;
  UINT wPeriodMax;
  UINT wRmin;
  UINT wRmax;
  UINT wUmin;
  UINT wUmax;
  UINT wVmin;
  UINT wVmax;
  UINT wCaps;
  UINT wMaxAxes;
  UINT wNumAxes;
  UINT wMaxButtons;
  CHAR szRegKey[32];
  CHAR szOEMVxD[260];
};
#pragma pack(pop)

/* 124 */
enum _crt_app_type
{
  _crt_unknown_app = 0x0,
  _crt_console_app = 0x1,
  _crt_gui_app = 0x2,
};

/* 128 */
typedef unsigned __int8 UCHAR;

/* 127 */
struct in_addr::$4F64C6817212FE4AF89030399F21EE2D::$F085A1F6735C7CEA9C650424FAF692B1
{
  UCHAR s_b1;
  UCHAR s_b2;
  UCHAR s_b3;
  UCHAR s_b4;
};

/* 129 */
struct in_addr::$4F64C6817212FE4AF89030399F21EE2D::$B9D7529FFD1842B2B059BD2E926FB2C5
{
  USHORT s_w1;
  USHORT s_w2;
};

/* 130 */
typedef unsigned int ULONG;

/* 126 */
union in_addr::$4F64C6817212FE4AF89030399F21EE2D
{
  struct in_addr::$4F64C6817212FE4AF89030399F21EE2D::$F085A1F6735C7CEA9C650424FAF692B1 S_un_b;
  struct in_addr::$4F64C6817212FE4AF89030399F21EE2D::$B9D7529FFD1842B2B059BD2E926FB2C5 S_un_w;
  ULONG S_addr;
};

/* 125 */
struct in_addr
{
  union in_addr::$4F64C6817212FE4AF89030399F21EE2D S_un;
};

/* 131 */
struct FuncInfoV1
{
  int magicNumber;
  int maxState;
  void *pUnwindMap;
  int nTryBlocks;
  void *pTryBlockMap;
  int nIPMapEntries;
  void *pIPtoStateMap;
};

/* 132 */
struct UnwindMapEntry
{
  int toState;
  void *action;
};

/* 133 */
struct __cppobj __declspec(align(4)) type_info
{
  type_info_vtbl *__vftable /*VFT*/;
  void *_m_data;
  char _m_d_name[1];
};

/* 3434 */
struct /*VFT*/ type_info_vtbl
{
  void *(__thiscall *__vecDelDtor)(type_info *this, unsigned int);
};

/* 134 */
enum $44FAA818BD3258B2BC63EC918B4A4D66 : __int32
{
  eComponents = 0x3,
};

/* 135 */
enum NTempest::C3Vector::EAxis : __int32
{
  C3AXIS_X = 0x0,
  C3AXIS_Y = 0x1,
  C3AXIS_Z = 0x2,
};

/* 136 */
enum VALIDATE_NAME_RESULT : __int32
{
  NAME_NO_NAME = 0x0,
  NAME_TOO_SHORT = 0x1,
  NAME_TOO_LONG = 0x2,
  NAME_STARTS_WITH_GRAVE = 0x3,
  NAME_TWO_GRAVES = 0x4,
  NAME_INVALID_CHARACTER = 0x5,
  NAME_MIXED_LANGUAGES = 0x6,
  NAME_PROFANE = 0x7,
  NAME_RESERVED = 0x8,
  NAME_FAILURE = 0x9,
  NAME_SUCCESS = 0xA,
  NUM_NAME_RESULTS = 0xB,
};

/* 137 */
enum PARAMID : __int32
{
  P_END = 0x0,
  P_VOID = 0x1,
  P_BOOL = 0x2,
  P_DWORD = 0x3,
  P_FLOAT = 0x4,
  P_INT = 0x5,
  P_METHOD = 0x6,
  P_SCRIPT = 0x7,
  P_STR = 0x8,
};

/* 138 */
enum SYSMSG_TYPE : __int32
{
  SYSMSG_INFO = 0x0,
  SYSMSG_WARNING = 0x1,
  SYSMSG_ERROR = 0x2,
  SYSMSG_FATAL = 0x3,
  SYSMSG_NUMTYPES = 0x4,
};

/* 139 */
enum $A538F828D33C2192CBC06AADB1C78638 : __int32
{
  REALM_LIST_IN_PROGRESS = 0x1C,
  REALM_LIST_SUCCESS = 0x1D,
  REALM_LIST_FAILED = 0x1E,
  REALM_LIST_INVALID = 0x1F,
  REALM_LIST_REALM_NOT_FOUND = 0x20,
  LAST_REALM_LIST_RESULT = 0x21,
};

/* 140 */
enum $E90709DC2CB0D839435A1FF65322A1AA : __int32
{
  ACCOUNT_CREATE_IN_PROGRESS = 0x21,
  ACCOUNT_CREATE_SUCCESS = 0x22,
  ACCOUNT_CREATE_FAILED = 0x23,
  LAST_ACCOUNT_CREATE_RESULT = 0x24,
};

/* 141 */
enum $89C28904E9818052C69A9F875B756471 : __int32
{
  CHAR_LIST_RETRIEVING = 0x24,
  CHAR_LIST_RETRIEVED = 0x25,
  CHAR_LIST_FAILED = 0x26,
  LAST_CHAR_LIST_RESULT = 0x27,
};

/* 142 */
enum $11400181FECB7531B0692B07AC2F3C6A : __int32
{
  CHAR_CREATE_IN_PROGRESS = 0x27,
  CHAR_CREATE_SUCCESS = 0x28,
  CHAR_CREATE_ERROR = 0x29,
  CHAR_CREATE_FAILED = 0x2A,
  CHAR_CREATE_NAME_IN_USE = 0x2B,
  CHAR_CREATE_DISABLED = 0x2C,
  LAST_CHAR_CREATE_RESULT = 0x2D,
};

/* 143 */
enum $9F3CD7BCBB6188E8552E8335A0C8C69D : __int32
{
  CHAR_DELETE_IN_PROGRESS = 0x2D,
  CHAR_DELETE_SUCCESS = 0x2E,
  CHAR_DELETE_FAILED = 0x2F,
  LAST_CHAR_DELETE_RESULT = 0x30,
};

/* 144 */
enum $01D8BD1CEA1006EA8FE39A3B1ECFB50E : __int32
{
  CHAR_LOGIN_IN_PROGRESS = 0x30,
  CHAR_LOGIN_SUCCESS = 0x31,
  CHAR_LOGIN_NO_WORLD = 0x32,
  CHAR_LOGIN_DUPLICATE_CHARACTER = 0x33,
  CHAR_LOGIN_NO_INSTANCES = 0x34,
  CHAR_LOGIN_FAILED = 0x35,
  CHAR_LOGIN_DISABLED = 0x36,
  LAST_CHAR_LOGIN_RESULT = 0x37,
};

/* 145 */
enum WOW_CONN_STATE : __int32
{
  WOWC_UNINITIALIZED = 0x0,
  WOWC_INITIALIZED = 0x1,
  WOWC_CONNECTING = 0x2,
  WOWC_LISTENING = 0x3,
  WOWC_ACCEPTED = 0x4,
  WOWC_CONNECTED = 0x5,
  WOWC_DISCONNECTED = 0x6,
  WOWC_DISCONNECTING = 0x7,
  WOWC_ERROR = 0x8,
};

/* 146 */
enum LOOT_ACQUIRE : __int32
{
  LOOT_ACQUIRE_FAILED = 0x0,
  LOOT_ACQUIRE_NORMAL = 0x1,
  LOOT_ACQUIRE_PICKPOCKET = 0x2,
  LOOT_ACQUIRE_FISHING = 0x3,
};

/* 147 */
enum WOWC_TYPE : __int32
{
  WOWC_TYPE_MESSAGES = 0x0,
  WOWC_TYPE_STREAM = 0x1,
};

/* 148 */
enum GAME_ERROR_TYPE : __int32
{
  GERR_INV_FULL = 0x0,
  GERR_CANT_EQUIP_LEVEL_I = 0x1,
  GERR_CANT_EQUIP_SKILL = 0x2,
  GERR_CANT_EQUIP_EVER = 0x3,
  GERR_PROFICIENCY_NEEDED = 0x4,
  GERR_WRONG_SLOT = 0x5,
  GERR_BAG_FULL = 0x6,
  GERR_DESTROY_NONEMPTY_BAG = 0x7,
  GERR_BAG_IN_BAG = 0x8,
  GERR_AMMO_ONLY = 0x9,
  GERR_NO_SLOT_AVAILABLE = 0xA,
  GERR_WRONG_BAG_TYPE = 0xB,
  GERR_ITEM_MAX_COUNT = 0xC,
  GERR_NOT_EQUIPPABLE = 0xD,
  GERR_CANT_STACK = 0xE,
  GERR_CANT_SWAP = 0xF,
  GERR_SLOT_EMPTY = 0x10,
  GERR_ITEM_NOT_FOUND = 0x11,
  GERR_TOO_FEW_TO_SPLIT = 0x12,
  GERR_SPLIT_FAILED = 0x13,
  GERR_NOT_ENOUGH_GOLD = 0x14,
  GERR_NOT_A_BAG = 0x15,
  GERR_NOT_OWNER = 0x16,
  GERR_ONLY_ONE_QUIVER = 0x17,
  GERR_NO_BANK_SLOT = 0x18,
  GERR_NO_BANK_HERE = 0x19,
  GERR_ITEM_LOCKED = 0x1A,
  GERR_2HANDED_EQUIPPED = 0x1B,
  GERR_VENDOR_NOT_INTERESTED = 0x1C,
  GERR_VENDOR_HATES_YOU = 0x1D,
  GERR_VENDOR_SOLD_OUT = 0x1E,
  GERR_VENDOR_TOO_FAR = 0x1F,
  GERR_NOT_ENOUGH_MONEY = 0x20,
  GERR_RECEIVE_ITEM_S = 0x21,
  GERR_DROP_BOUND_ITEM = 0x22,
  GERR_TRADE_BOUND_ITEM = 0x23,
  GERR_TRADE_QUEST_ITEM = 0x24,
  GERR_TRADE_GROUND_ITEM = 0x25,
  GERR_TRADE_BAG = 0x26,
  GERR_SPELL_FAILED_S = 0x27,
  GERR_ITEM_COOLDOWN = 0x28,
  GERR_POTION_COOLDOWN = 0x29,
  GERR_FOOD_COOLDOWN = 0x2A,
  GERR_SPELL_COOLDOWN = 0x2B,
  GERR_ABILITY_COOLDOWN = 0x2C,
  GERR_SPELL_ALREADY_KNOWN_S = 0x2D,
  GERR_SKILL_GAINED_S = 0x2E,
  GERR_SKILL_UP_SI = 0x2F,
  GERR_LEARN_SPELL_S = 0x30,
  GERR_LEARN_ABILITY_S = 0x31,
  GERR_LEARN_RECIPE_S = 0x32,
  GERR_INVITE_PLAYER_S = 0x33,
  GERR_INVITED_TO_GROUP_S = 0x34,
  GERR_ALREADY_IN_GROUP_S = 0x35,
  GERR_PLAYER_BUSY_S = 0x36,
  GERR_NEW_LEADER_S = 0x37,
  GERR_NEW_LEADER_YOU = 0x38,
  GERR_LEFT_GROUP_S = 0x39,
  GERR_LEFT_GROUP_YOU = 0x3A,
  GERR_GROUP_DISBANDED = 0x3B,
  GERR_DECLINE_GROUP_S = 0x3C,
  GERR_JOINED_GROUP_S = 0x3D,
  GERR_UNINVITE_YOU = 0x3E,
  GERR_BAD_PLAYER_NAME_S = 0x3F,
  GERR_NOT_IN_GROUP = 0x40,
  GERR_TARGET_NOT_IN_GROUP_S = 0x41,
  GERR_GROUP_FULL = 0x42,
  GERR_NOT_LEADER = 0x43,
  GERR_PLAYER_DIED_S = 0x44,
  GERR_GUILD_CREATE_S = 0x45,
  GERR_GUILD_INVITE_S = 0x46,
  GERR_INVITED_TO_GUILD_SS = 0x47,
  GERR_ALREADY_IN_GUILD_S = 0x48,
  GERR_ALREADY_INVITED_TO_GUILD_S = 0x49,
  GERR_INVITED_TO_GUILD = 0x4A,
  GERR_ALREADY_IN_GUILD = 0x4B,
  GERR_GUILD_ACCEPT = 0x4C,
  GERR_GUILD_DECLINE_S = 0x4D,
  GERR_GUILD_PERMISSIONS = 0x4E,
  GERR_GUILD_JOIN_S = 0x4F,
  GERR_GUILD_FOUNDER_S = 0x50,
  GERR_GUILD_PROMOTE_SS = 0x51,
  GERR_GUILD_DEMOTE_SS = 0x52,
  GERR_GUILD_QUIT_S = 0x53,
  GERR_GUILD_LEAVE_S = 0x54,
  GERR_GUILD_REMOVE_SS = 0x55,
  GERR_GUILD_REMOVE_SELF = 0x56,
  GERR_GUILD_DISBAND_S = 0x57,
  GERR_GUILD_DISBAND_SELF = 0x58,
  GERR_GUILD_LEADER_S = 0x59,
  GERR_GUILD_LEADER_SELF = 0x5A,
  GERR_GUILD_MOTD_S = 0x5B,
  GERR_GUILD_PLAYER_NOT_FOUND_S = 0x5C,
  GERR_GUILD_PLAYER_NOT_IN_GUILD_S = 0x5D,
  GERR_GUILD_PLAYER_NOT_IN_GUILD = 0x5E,
  GERR_GUILD_CANT_PROMOTE_S = 0x5F,
  GERR_GUILD_CANT_DEMOTE_S = 0x60,
  GERR_GUILD_NOT_IN_A_GUILD = 0x61,
  GERR_GUILD_INTERNAL = 0x62,
  GERR_GUILD_LEADER_IS_S = 0x63,
  GERR_GUILD_LEADER_CHANGED_SS = 0x64,
  GERR_GUILD_DISBANDED = 0x65,
  GERR_GUILD_NOT_ALLIED = 0x66,
  GERR_GUILD_LEADER_LEAVE = 0x67,
  GERR_GUILD_NAME_INVALID = 0x68,
  GERR_GUILD_NAME_EXISTS_S = 0x69,
  GERR_GUILD_ENTER_NAME = 0x6A,
  GERR_GUILD_NAME_TOO_SHORT = 0x6B,
  GERR_GUILD_NAME_MIXED_LANGUAGES = 0x6C,
  GERR_GUILD_NAME_PROFANE = 0x6D,
  GERR_GUILD_NAME_RESERVED = 0x6E,
  GERR_NO_GUILD_CHARTER = 0x6F,
  GERR_OUT_OF_RANGE = 0x70,
  GERR_PLAYER_DEAD = 0x71,
  GERR_CLIENT_LOCKED_OUT = 0x72,
  GERR_KILLED_BY_S = 0x73,
  GERR_LOOT_LOCKED = 0x74,
  GERR_LOOT_TOO_FAR = 0x75,
  GERR_LOOT_DIDNT_KILL = 0x76,
  GERR_LOOT_BAD_FACING = 0x77,
  GERR_LOOT_NOTSTANDING = 0x78,
  GERR_LOOT_STUNNED = 0x79,
  GERR_LOOT_NO_UI = 0x7A,
  GERR_QUEST_ACCEPTED_S = 0x7B,
  GERR_QUEST_COMPLETE_S = 0x7C,
  GERR_QUEST_FAILED_S = 0x7D,
  GERR_QUEST_FAILED_BAG_FULL_S = 0x7E,
  GERR_QUEST_FAILED_MAX_COUNT_S = 0x7F,
  GERR_QUEST_FAILED_LOW_LEVEL = 0x80,
  GERR_QUEST_FAILED_MISSING_ITEMS = 0x81,
  GERR_QUEST_REWARD_EXP_I = 0x82,
  GERR_QUEST_REWARD_ITEM_S = 0x83,
  GERR_QUEST_REWARD_MONEY_S = 0x84,
  GERR_QUEST_MUST_CHOOSE = 0x85,
  GERR_QUEST_LOG_FULL = 0x86,
  GERR_COMBAT_DAMAGE_SSI = 0x87,
  GERR_INSPECT_S = 0x88,
  GERR_CANT_USE_ITEM = 0x89,
  GERR_MUST_EQUIP_ITEM = 0x8A,
  GERR_PASSIVE_ABILITY = 0x8B,
  GERR_2HSKILLNOTFOUND = 0x8C,
  GERR_NO_ATTACK_TARGET = 0x8D,
  GERR_INVALID_ATTACK_TARGET = 0x8E,
  GERR_ATTACK_PACIFIED = 0x8F,
  GERR_ATTACK_DEAD = 0x90,
  GERR_HUNGER_VERY_LOW = 0x91,
  GERR_HUNGER_LOW = 0x92,
  GERR_HUNGER_MED = 0x93,
  GERR_HUNGER_HIGH = 0x94,
  GERR_HUNGER_SATIATED = 0x95,
  GERR_THIRST_VERY_LOW = 0x96,
  GERR_THIRST_LOW = 0x97,
  GERR_THIRST_MED = 0x98,
  GERR_THIRST_HIGH = 0x99,
  GERR_THIRST_SATIATED = 0x9A,
  GERR_TAXISAMENODE = 0x9B,
  GERR_TAXINOSUCHPATH = 0x9C,
  GERR_TAXIUNSPECIFIEDSERVERERROR = 0x9D,
  GERR_TAXINOTENOUGHMONEY = 0x9E,
  GERR_TAXITOOFARAWAY = 0x9F,
  GERR_TAXINOVENDORNEARBY = 0xA0,
  GERR_TAXINOTVISITED = 0xA1,
  GERR_TAXIPLAYERBUSY = 0xA2,
  GERR_TAXIPLAYERALREADYMOUNTED = 0xA3,
  GERR_TAXIPLAYERSHAPESHIFTED = 0xA4,
  GERR_TAXIPLAYERMOVING = 0xA5,
  GERR_TAXINOPATHS = 0xA6,
  GERR_NO_REPLY_TARGET = 0xA7,
  GERR_GENERIC_NO_TARGET = 0xA8,
  GERR_INITIATE_TRADE_S = 0xA9,
  GERR_TRADE_REQUEST_S = 0xAA,
  GERR_TRADE_TOO_FAR = 0xAB,
  GERR_TRADE_CANCELLED = 0xAC,
  GERR_TRADE_COMPLETE = 0xAD,
  GERR_TRADE_BAG_FULL = 0xAE,
  GERR_TRADE_TARGET_BAG_FULL = 0xAF,
  GERR_TRADE_MAX_COUNT_EXCEEDED = 0xB0,
  GERR_TRADE_TARGET_MAX_COUNT_EXCEEDED = 0xB1,
  GERR_MOUNT_INVALIDMOUNTEE = 0xB2,
  GERR_MOUNT_TOOFARAWAY = 0xB3,
  GERR_MOUNT_ALREADYMOUNTED = 0xB4,
  GERR_MOUNT_NOTMOUNTABLE = 0xB5,
  GERR_MOUNT_NOTYOURPET = 0xB6,
  GERR_MOUNT_OTHER = 0xB7,
  GERR_MOUNT_LOOTING = 0xB8,
  GERR_MOUNT_RACECANTMOUNT = 0xB9,
  GERR_MOUNT_SHAPESHIFTED = 0xBA,
  GERR_DISMOUNT_NOPET = 0xBB,
  GERR_DISMOUNT_NOTMOUNTED = 0xBC,
  GERR_DISMOUNT_NOTYOURPET = 0xBD,
  GERR_SPELL_FAILED_TOTEMS = 0xBE,
  GERR_SPELL_FAILED_REAGENTS = 0xBF,
  GERR_SPELL_FAILED_EQUIPPED_ITEM = 0xC0,
  GERR_SPELL_FAILED_EQUIPPED_ITEM_CLASS_S = 0xC1,
  GERR_SPELL_FAILED_SHAPESHIFT_FORM_S = 0xC2,
  GERR_BADATTACKFACING = 0xC3,
  GERR_BADATTACKPOS = 0xC4,
  GERR_CHEST_IN_USE = 0xC5,
  GERR_USE_CANT_OPEN = 0xC6,
  GERR_USE_LOCKED = 0xC7,
  GERR_USE_LOCKED_WITH_ITEM_S = 0xC8,
  GERR_USE_LOCKED_WITH_SPELL_S = 0xC9,
  GERR_USE_LOCKED_WITH_SPELL_KNOWN_SI = 0xCA,
  GERR_USE_TOO_FAR = 0xCB,
  GERR_USE_BAD_ANGLE = 0xCC,
  GERR_USE_OBJECT_MOVING = 0xCD,
  GERR_USE_SPELL_FOCUS = 0xCE,
  GERR_USE_DESTROYED = 0xCF,
  GERR_CANTATTACK_NOTSTANDING = 0xD0,
  GERR_SET_LOOT_FREEFORALL = 0xD1,
  GERR_SET_LOOT_ROUNDROBIN = 0xD2,
  GERR_SET_LOOT_MASTER = 0xD3,
  GERR_NEW_LOOT_MASTER_S = 0xD4,
  GERR_SPECIFY_MASTER_LOOTER = 0xD5,
  GERR_TAME_FAILED = 0xD6,
  GERR_CHAT_WHILE_DEAD = 0xD7,
  GERR_NEWTAXIPATH = 0xD8,
  GERR_NO_PET = 0xD9,
  GERR_NOTYOURPET = 0xDA,
  GERR_PET_NOT_RENAMEABLE = 0xDB,
  GERR_NULL_PETNAME = 0xDC,
  GERR_INVALID_PETNAME = 0xDD,
  GERR_QUEST_OBJECTIVE_COMPLETE_S = 0xDE,
  GERR_QUEST_UNKNOWN_COMPLETE = 0xDF,
  GERR_QUEST_ADD_KILL_SII = 0xE0,
  GERR_QUEST_ADD_FOUND_SII = 0xE1,
  GERR_QUEST_ADD_ITEM_SII = 0xE2,
  GERR_CANNOTCREATEDIRECTORY = 0xE3,
  GERR_CANNOTCREATEFILE = 0xE4,
  GERR_PLAYER_WRONG_FACTION = 0xE5,
  GERR_BANKSLOT_FAILED_TOO_MANY = 0xE6,
  GERR_BANKSLOT_INSUFFICIENT_FUNDS = 0xE7,
  GERR_BANKSLOT_NOTBANKER = 0xE8,
  GERR_FRIEND_DB_ERROR = 0xE9,
  GERR_FRIEND_LIST_FULL = 0xEA,
  GERR_FRIEND_ADDED_S = 0xEB,
  GERR_FRIEND_ONLINE_S = 0xEC,
  GERR_FRIEND_OFFLINE_S = 0xED,
  GERR_FRIEND_NOT_FOUND = 0xEE,
  GERR_FRIEND_WRONG_FACTION = 0xEF,
  GERR_FRIEND_REMOVED_S = 0xF0,
  GERR_FRIEND_ERROR = 0xF1,
  GERR_FRIEND_ALREADY_S = 0xF2,
  GERR_FRIEND_SELF = 0xF3,
  GERR_IGNORE_FULL = 0xF4,
  GERR_IGNORE_SELF = 0xF5,
  GERR_IGNORE_NOT_FOUND = 0xF6,
  GERR_IGNORE_ALREADY_S = 0xF7,
  GERR_IGNORE_ADDED_S = 0xF8,
  GERR_IGNORE_REMOVED_S = 0xF9,
  GERR_ONLY_ONE_BOLT = 0xFA,
  GERR_ONLY_ONE_AMMO = 0xFB,
  GERR_SPELL_FAILED_EQUIPPED_SPECIFIC_ITEM = 0xFC,
  GERR_WRONG_BAG_TYPE_SUBCLASS = 0xFD,
  GERR_CANT_WRAP_STACKABLE = 0xFE,
  GERR_CANT_WRAP_EQUIPPED = 0xFF,
  GERR_CANT_WRAP_WRAPPED = 0x100,
  GERR_CANT_WRAP_BOUND = 0x101,
  GERR_CANT_WRAP_UNIQUE = 0x102,
  GERR_CANT_WRAP_BAGS = 0x103,
  GERR_OUT_OF_MANA = 0x104,
  GERR_OUT_OF_RAGE = 0x105,
  GERR_OUT_OF_FOCUS = 0x106,
  GERR_OUT_OF_ENERGY = 0x107,
  GERR_OUT_OF_HEALTH = 0x108,
  GERR_LOOT_GONE = 0x109,
  GERR_MOUNT_FORCEDDISMOUNT = 0x10A,
  GERR_AUTOFOLLOW_TOO_FAR = 0x10B,
  GERR_UNIT_NOT_FOUND = 0x10C,
  GERR_INVALID_FOLLOW_TARGET = 0x10D,
  GERR_GUILDEMBLEM_SUCCESS = 0x10E,
  GERR_GUILDEMBLEM_INVALID_TABARD_COLORS = 0x10F,
  GERR_GUILDEMBLEM_NOGUILD = 0x110,
  GERR_GUILDEMBLEM_COLORSPRESENT = 0x111,
  GERR_GUILDEMBLEM_NOTGUILDMASTER = 0x112,
  GERR_GUILDEMBLEM_NOTENOUGHMONEY = 0x113,
  GERR_GUILDEMBLEM_INVALIDVENDOR = 0x114,
  GERR_SPELL_OUT_OF_RANGE = 0x115,
  GERR_COMMAND_NEEDS_TARGET = 0x116,
  GERR_NOAMMO_S = 0x117,
  GERR_TOOBUSYTOFOLLOW = 0x118,
  GERR_DUEL_REQUESTED = 0x119,
  GERR_DUEL_CANCELLED = 0x11A,
  GERR_DEATHBINDALREADYBOUND = 0x11B,
  GERR_NOEMOTEWHILERUNNING = 0x11C,
  GERR_ZONE_EXPLORED = 0x11D,
  GERR_ZONE_EXPLORED_XP = 0x11E,
  GERR_INVALID_ITEM_TARGET = 0x11F,
  GERR_IGNORING_YOU_S = 0x120,
  GERR_FISH_NOT_HOOKED = 0x121,
  GERR_FISH_ESCAPED = 0x122,
  GERR_SPELL_FAILED_NOTUNSHEATHED = 0x123,
  GERR_PETITION_SIGNED = 0x124,
  GERR_PETITION_ALREADY_SIGNED = 0x125,
  GERR_PETITION_IN_GUILD = 0x126,
  GERR_PETITION_CREATOR = 0x127,
  GERR_PETITION_NOT_ENOUGH_SIGNATURES = 0x128,
  GERR_NONE = 0x129,
  GERR_NUM_TYPES = 0x129,
};

/* 149 */
enum WC_SEND_RESULT : __int32
{
  WC_SEND_SENT = 0x0,
  WC_SEND_QUEUED = 0x1,
  WC_SEND_ERROR = 0x2,
};

/* 150 */
enum KEY : __int32
{
  KEY_NONE = 0xFFFFFFFF,
  KEY_SHIFT = 0x0,
  KEY_CONTROL = 0x1,
  KEY_ALT = 0x2,
  KEY_LASTMETAKEY = 0x2,
  KEY_0 = 0x30,
  KEY_1 = 0x31,
  KEY_2 = 0x32,
  KEY_3 = 0x33,
  KEY_4 = 0x34,
  KEY_5 = 0x35,
  KEY_6 = 0x36,
  KEY_7 = 0x37,
  KEY_8 = 0x38,
  KEY_9 = 0x39,
  KEY_A = 0x41,
  KEY_B = 0x42,
  KEY_C = 0x43,
  KEY_D = 0x44,
  KEY_E = 0x45,
  KEY_F = 0x46,
  KEY_G = 0x47,
  KEY_H = 0x48,
  KEY_I = 0x49,
  KEY_J = 0x4A,
  KEY_K = 0x4B,
  KEY_L = 0x4C,
  KEY_M = 0x4D,
  KEY_N = 0x4E,
  KEY_O = 0x4F,
  KEY_P = 0x50,
  KEY_Q = 0x51,
  KEY_R = 0x52,
  KEY_S = 0x53,
  KEY_T = 0x54,
  KEY_U = 0x55,
  KEY_V = 0x56,
  KEY_W = 0x57,
  KEY_X = 0x58,
  KEY_Y = 0x59,
  KEY_Z = 0x5A,
  KEY_SPACE = 0x20,
  KEY_TILDE = 0x100,
  KEY_NUMPAD0 = 0x101,
  KEY_NUMPAD1 = 0x102,
  KEY_NUMPAD2 = 0x103,
  KEY_NUMPAD3 = 0x104,
  KEY_NUMPAD4 = 0x105,
  KEY_NUMPAD5 = 0x106,
  KEY_NUMPAD6 = 0x107,
  KEY_NUMPAD7 = 0x108,
  KEY_NUMPAD8 = 0x109,
  KEY_NUMPAD9 = 0x10A,
  KEY_NUMPAD_PLUS = 0x10B,
  KEY_NUMPAD_MINUS = 0x10C,
  KEY_NUMPAD_MULTIPLY = 0x10D,
  KEY_NUMPAD_DIVIDE = 0x10E,
  KEY_NUMPAD_DECIMAL = 0x10F,
  KEY_PLUS = 0x110,
  KEY_MINUS = 0x111,
  KEY_BRACKET_OPEN = 0x112,
  KEY_BRACKET_CLOSE = 0x113,
  KEY_SLASH = 0x114,
  KEY_BACKSLASH = 0x115,
  KEY_SEMICOLON = 0x116,
  KEY_APOSTROPHE = 0x117,
  KEY_COMMA = 0x118,
  KEY_PERIOD = 0x119,
  KEY_ESCAPE = 0x200,
  KEY_ENTER = 0x201,
  KEY_BACKSPACE = 0x202,
  KEY_TAB = 0x203,
  KEY_LEFT = 0x204,
  KEY_UP = 0x205,
  KEY_RIGHT = 0x206,
  KEY_DOWN = 0x207,
  KEY_INSERT = 0x208,
  KEY_DELETE = 0x209,
  KEY_HOME = 0x20A,
  KEY_END = 0x20B,
  KEY_PAGEUP = 0x20C,
  KEY_PAGEDOWN = 0x20D,
  KEY_CAPSLOCK = 0x20E,
  KEY_NUMLOCK = 0x20F,
  KEY_SCROLLLOCK = 0x210,
  KEY_PAUSE = 0x211,
  KEY_PRINTSCREEN = 0x212,
  KEY_F1 = 0x300,
  KEY_F2 = 0x301,
  KEY_F3 = 0x302,
  KEY_F4 = 0x303,
  KEY_F5 = 0x304,
  KEY_F6 = 0x305,
  KEY_F7 = 0x306,
  KEY_F8 = 0x307,
  KEY_F9 = 0x308,
  KEY_F10 = 0x309,
  KEY_F11 = 0x30A,
  KEY_F12 = 0x30B,
  KEY_LAST = 0x30C,
};

/* 151 */
enum NETMESSAGE : __int32
{
  MSG_NULL_ACTION = 0x0,
  CMSG_BOOTME = 0x1,
  CMSG_DBLOOKUP = 0x2,
  SMSG_DBLOOKUP = 0x3,
  CMSG_QUERY_OBJECT_POSITION = 0x4,
  SMSG_QUERY_OBJECT_POSITION = 0x5,
  CMSG_QUERY_OBJECT_ROTATION = 0x6,
  SMSG_QUERY_OBJECT_ROTATION = 0x7,
  CMSG_WORLD_TELEPORT = 0x8,
  CMSG_TELEPORT_TO_PLAYER = 0x9,
  CMSG_ZONE_MAP = 0xA,
  SMSG_ZONE_MAP = 0xB,
  CMSG_DEBUG_CHANGECELLZONE = 0xC,
  CMSG_EMBLAZON_TABARD_OBSOLETE = 0xD,
  CMSG_UNEMBLAZON_TABARD_OBSOLETE = 0xE,
  CMSG_RECHARGE = 0xF,
  CMSG_LEARN_SPELL = 0x10,
  CMSG_CREATEMONSTER = 0x11,
  CMSG_DESTROYMONSTER = 0x12,
  CMSG_CREATEITEM = 0x13,
  CMSG_CREATEGAMEOBJECT = 0x14,
  CMSG_MAKEMONSTERATTACKME = 0x15,
  CMSG_MAKEMONSTERATTACKGUID = 0x16,
  CMSG_ENABLEDEBUGCOMBATLOGGING = 0x17,
  CMSG_FORCEACTION = 0x18,
  CMSG_FORCEACTIONONOTHER = 0x19,
  CMSG_FORCEACTIONSHOW = 0x1A,
  SMSG_FORCEACTIONSHOW = 0x1B,
  SMSG_ATTACKERSTATEUPDATEDEBUGINFO = 0x1C,
  SMSG_ATTACKERSTATEUPDATEDEBUGINFOSPELL = 0x1D,
  SMSG_ATTACKERSTATEUPDATEDEBUGINFOSPELLMISS = 0x1E,
  SMSG_DEBUG_PLAYER_RANGE = 0x1F,
  CMSG_UNDRESSPLAYER = 0x20,
  CMSG_BEASTMASTER = 0x21,
  CMSG_GODMODE = 0x22,
  SMSG_GODMODE = 0x23,
  CMSG_CHEAT_SETMONEY = 0x24,
  CMSG_LEVEL_CHEAT = 0x25,
  CMSG_PET_LEVEL_CHEAT = 0x26,
  CMSG_LEVELUP_CHEAT = 0x27,
  CMSG_COOLDOWN_CHEAT = 0x28,
  CMSG_USE_SKILL_CHEAT = 0x29,
  CMSG_FLAG_QUEST = 0x2A,
  CMSG_FLAG_QUEST_FINISH = 0x2B,
  CMSG_CLEAR_QUEST = 0x2C,
  CMSG_SEND_EVENT = 0x2D,
  CMSG_DEBUG_AISTATE = 0x2E,
  SMSG_DEBUG_AISTATE = 0x2F,
  CMSG_ENABLE_PVP = 0x30,
  CMSG_ADVANCE_SPAWN_TIME = 0x31,
  CMSG_PVP_PORT = 0x32,
  CMSG_AUTH_SRP6_BEGIN = 0x33,
  CMSG_AUTH_SRP6_PROOF = 0x34,
  CMSG_AUTH_SRP6_RECODE = 0x35,
  CMSG_CHAR_CREATE = 0x36,
  CMSG_CHAR_ENUM = 0x37,
  CMSG_CHAR_DELETE = 0x38,
  SMSG_AUTH_SRP6_RESPONSE = 0x39,
  SMSG_CHAR_CREATE = 0x3A,
  SMSG_CHAR_ENUM = 0x3B,
  SMSG_CHAR_DELETE = 0x3C,
  CMSG_PLAYER_LOGIN = 0x3D,
  SMSG_NEW_WORLD = 0x3E,
  SMSG_TRANSFER_PENDING = 0x3F,
  SMSG_TRANSFER_ABORTED = 0x40,
  SMSG_CHARACTER_LOGIN_FAILED = 0x41,
  SMSG_LOGIN_SETTIMESPEED = 0x42,
  SMSG_GAMETIME_UPDATE = 0x43,
  CMSG_GAMETIME_SET = 0x44,
  SMSG_GAMETIME_SET = 0x45,
  CMSG_GAMESPEED_SET = 0x46,
  SMSG_GAMESPEED_SET = 0x47,
  CMSG_SERVERTIME = 0x48,
  SMSG_SERVERTIME = 0x49,
  CMSG_PLAYER_LOGOUT = 0x4A,
  CMSG_LOGOUT_REQUEST = 0x4B,
  SMSG_LOGOUT_RESPONSE = 0x4C,
  SMSG_LOGOUT_COMPLETE = 0x4D,
  CMSG_LOGOUT_CANCEL = 0x4E,
  SMSG_LOGOUT_CANCEL_ACK = 0x4F,
  CMSG_NAME_QUERY = 0x50,
  SMSG_NAME_QUERY_RESPONSE = 0x51,
  CMSG_PET_NAME_QUERY = 0x52,
  SMSG_PET_NAME_QUERY_RESPONSE = 0x53,
  CMSG_GUILD_QUERY = 0x54,
  SMSG_GUILD_QUERY_RESPONSE = 0x55,
  CMSG_ITEM_QUERY_SINGLE = 0x56,
  CMSG_ITEM_QUERY_MULTIPLE = 0x57,
  SMSG_ITEM_QUERY_SINGLE_RESPONSE = 0x58,
  SMSG_ITEM_QUERY_MULTIPLE_RESPONSE = 0x59,
  CMSG_PAGE_TEXT_QUERY = 0x5A,
  SMSG_PAGE_TEXT_QUERY_RESPONSE = 0x5B,
  CMSG_QUEST_QUERY = 0x5C,
  SMSG_QUEST_QUERY_RESPONSE = 0x5D,
  CMSG_GAMEOBJECT_QUERY = 0x5E,
  SMSG_GAMEOBJECT_QUERY_RESPONSE = 0x5F,
  CMSG_CREATURE_QUERY = 0x60,
  SMSG_CREATURE_QUERY_RESPONSE = 0x61,
  CMSG_WHO = 0x62,
  SMSG_WHO = 0x63,
  CMSG_WHOIS = 0x64,
  SMSG_WHOIS = 0x65,
  CMSG_FRIEND_LIST = 0x66,
  SMSG_FRIEND_LIST = 0x67,
  SMSG_FRIEND_STATUS = 0x68,
  CMSG_ADD_FRIEND = 0x69,
  CMSG_DEL_FRIEND = 0x6A,
  SMSG_IGNORE_LIST = 0x6B,
  CMSG_ADD_IGNORE = 0x6C,
  CMSG_DEL_IGNORE = 0x6D,
  CMSG_GROUP_INVITE = 0x6E,
  SMSG_GROUP_INVITE = 0x6F,
  CMSG_GROUP_CANCEL = 0x70,
  SMSG_GROUP_CANCEL = 0x71,
  CMSG_GROUP_ACCEPT = 0x72,
  CMSG_GROUP_DECLINE = 0x73,
  SMSG_GROUP_DECLINE = 0x74,
  CMSG_GROUP_UNINVITE = 0x75,
  CMSG_GROUP_UNINVITE_GUID = 0x76,
  SMSG_GROUP_UNINVITE = 0x77,
  CMSG_GROUP_SET_LEADER = 0x78,
  SMSG_GROUP_SET_LEADER = 0x79,
  CMSG_LOOT_METHOD = 0x7A,
  CMSG_GROUP_DISBAND = 0x7B,
  SMSG_GROUP_DESTROYED = 0x7C,
  SMSG_GROUP_LIST = 0x7D,
  SMSG_PARTY_MEMBER_STATS = 0x7E,
  SMSG_PARTY_COMMAND_RESULT = 0x7F,
  UMSG_UPDATE_GROUP_MEMBERS = 0x80,
  CMSG_GUILD_CREATE = 0x81,
  CMSG_GUILD_INVITE = 0x82,
  SMSG_GUILD_INVITE = 0x83,
  CMSG_GUILD_ACCEPT = 0x84,
  CMSG_GUILD_DECLINE = 0x85,
  SMSG_GUILD_DECLINE = 0x86,
  CMSG_GUILD_INFO = 0x87,
  SMSG_GUILD_INFO = 0x88,
  CMSG_GUILD_ROSTER = 0x89,
  SMSG_GUILD_ROSTER = 0x8A,
  CMSG_GUILD_PROMOTE = 0x8B,
  CMSG_GUILD_DEMOTE = 0x8C,
  CMSG_GUILD_LEAVE = 0x8D,
  CMSG_GUILD_REMOVE = 0x8E,
  CMSG_GUILD_DISBAND = 0x8F,
  CMSG_GUILD_LEADER = 0x90,
  CMSG_GUILD_MOTD = 0x91,
  SMSG_GUILD_EVENT = 0x92,
  SMSG_GUILD_COMMAND_RESULT = 0x93,
  UMSG_UPDATE_GUILD = 0x94,
  CMSG_MESSAGECHAT = 0x95,
  SMSG_MESSAGECHAT = 0x96,
  CMSG_JOIN_CHANNEL = 0x97,
  CMSG_LEAVE_CHANNEL = 0x98,
  SMSG_CHANNEL_NOTIFY = 0x99,
  CMSG_CHANNEL_LIST = 0x9A,
  SMSG_CHANNEL_LIST = 0x9B,
  CMSG_CHANNEL_PASSWORD = 0x9C,
  CMSG_CHANNEL_SET_OWNER = 0x9D,
  CMSG_CHANNEL_OWNER = 0x9E,
  CMSG_CHANNEL_MODERATOR = 0x9F,
  CMSG_CHANNEL_UNMODERATOR = 0xA0,
  CMSG_CHANNEL_MUTE = 0xA1,
  CMSG_CHANNEL_UNMUTE = 0xA2,
  CMSG_CHANNEL_INVITE = 0xA3,
  CMSG_CHANNEL_KICK = 0xA4,
  CMSG_CHANNEL_BAN = 0xA5,
  CMSG_CHANNEL_UNBAN = 0xA6,
  CMSG_CHANNEL_ANNOUNCEMENTS = 0xA7,
  CMSG_CHANNEL_MODERATE = 0xA8,
  SMSG_UPDATE_OBJECT = 0xA9,
  SMSG_DESTROY_OBJECT = 0xAA,
  CMSG_USE_ITEM = 0xAB,
  CMSG_OPEN_ITEM = 0xAC,
  CMSG_READ_ITEM = 0xAD,
  SMSG_READ_ITEM_OK = 0xAE,
  SMSG_READ_ITEM_FAILED = 0xAF,
  SMSG_ITEM_COOLDOWN = 0xB0,
  CMSG_GAMEOBJ_USE = 0xB1,
  CMSG_GAMEOBJ_CHAIR_USE_OBSOLETE = 0xB2,
  SMSG_GAMEOBJECT_CUSTOM_ANIM = 0xB3,
  CMSG_AREATRIGGER = 0xB4,
  MSG_MOVE_START_FORWARD = 0xB5,
  MSG_MOVE_START_BACKWARD = 0xB6,
  MSG_MOVE_STOP = 0xB7,
  MSG_MOVE_START_STRAFE_LEFT = 0xB8,
  MSG_MOVE_START_STRAFE_RIGHT = 0xB9,
  MSG_MOVE_STOP_STRAFE = 0xBA,
  MSG_MOVE_JUMP = 0xBB,
  MSG_MOVE_START_TURN_LEFT = 0xBC,
  MSG_MOVE_START_TURN_RIGHT = 0xBD,
  MSG_MOVE_STOP_TURN = 0xBE,
  MSG_MOVE_START_PITCH_UP = 0xBF,
  MSG_MOVE_START_PITCH_DOWN = 0xC0,
  MSG_MOVE_STOP_PITCH = 0xC1,
  MSG_MOVE_SET_RUN_MODE = 0xC2,
  MSG_MOVE_SET_WALK_MODE = 0xC3,
  MSG_MOVE_TOGGLE_LOGGING = 0xC4,
  MSG_MOVE_TELEPORT = 0xC5,
  MSG_MOVE_TELEPORT_CHEAT = 0xC6,
  MSG_MOVE_TELEPORT_ACK = 0xC7,
  MSG_MOVE_TOGGLE_FALL_LOGGING = 0xC8,
  MSG_MOVE_COLLIDE_REDIRECT = 0xC9,
  MSG_MOVE_COLLIDE_STUCK = 0xCA,
  MSG_MOVE_START_SWIM = 0xCB,
  MSG_MOVE_STOP_SWIM = 0xCC,
  MSG_MOVE_SET_RUN_SPEED_CHEAT = 0xCD,
  MSG_MOVE_SET_RUN_SPEED = 0xCE,
  MSG_MOVE_SET_WALK_SPEED_CHEAT = 0xCF,
  MSG_MOVE_SET_WALK_SPEED = 0xD0,
  MSG_MOVE_SET_SWIM_SPEED_CHEAT = 0xD1,
  MSG_MOVE_SET_SWIM_SPEED = 0xD2,
  MSG_MOVE_SET_ALL_SPEED_CHEAT = 0xD3,
  MSG_MOVE_SET_TURN_RATE_CHEAT = 0xD4,
  MSG_MOVE_SET_TURN_RATE = 0xD5,
  MSG_MOVE_TOGGLE_COLLISION_CHEAT = 0xD6,
  MSG_MOVE_SET_FACING = 0xD7,
  MSG_MOVE_SET_PITCH = 0xD8,
  MSG_MOVE_WORLDPORT_ACK = 0xD9,
  SMSG_MONSTER_MOVE = 0xDA,
  MSG_MOVE_RESERVED_0 = 0xDB,
  MSG_MOVE_RESERVED_1 = 0xDC,
  MSG_MOVE_RESERVED_2 = 0xDD,
  MSG_MOVE_RESERVED_3 = 0xDE,
  SMSG_FORCE_SPEED_CHANGE = 0xDF,
  CMSG_FORCE_SPEED_CHANGE_ACK = 0xE0,
  SMSG_FORCE_SWIM_SPEED_CHANGE = 0xE1,
  CMSG_FORCE_SWIM_SPEED_CHANGE_ACK = 0xE2,
  SMSG_FORCE_MOVE_ROOT = 0xE3,
  CMSG_FORCE_MOVE_ROOT_ACK = 0xE4,
  SMSG_FORCE_MOVE_UNROOT = 0xE5,
  CMSG_FORCE_MOVE_UNROOT_ACK = 0xE6,
  MSG_MOVE_ROOT = 0xE7,
  MSG_MOVE_UNROOT = 0xE8,
  MSG_MOVE_HEARTBEAT = 0xE9,
  CMSG_STUCK_OBSOLETE = 0xEA,
  CMSG_TRIGGER_CINEMATIC_CHEAT = 0xEB,
  CMSG_OPENING_CINEMATIC = 0xEC,
  SMSG_TRIGGER_CINEMATIC = 0xED,
  CMSG_NEXT_CINEMATIC_CAMERA = 0xEE,
  CMSG_COMPLETE_CINEMATIC = 0xEF,
  SMSG_TUTORIAL_FLAGS = 0xF0,
  CMSG_TUTORIAL_SHOWN = 0xF1,
  CMSG_TUTORIAL_CLEAR = 0xF2,
  CMSG_TUTORIAL_RESET = 0xF3,
  CMSG_STANDSTATECHANGE = 0xF4,
  CMSG_EMOTE = 0xF5,
  SMSG_EMOTE = 0xF6,
  CMSG_TEXT_EMOTE = 0xF7,
  SMSG_TEXT_EMOTE = 0xF8,
  CMSG_AUTOEQUIP_GROUND_ITEM = 0xF9,
  CMSG_AUTOSTORE_GROUND_ITEM = 0xFA,
  CMSG_AUTOSTORE_LOOT_ITEM = 0xFB,
  CMSG_STORE_LOOT_IN_SLOT = 0xFC,
  CMSG_AUTOEQUIP_ITEM = 0xFD,
  CMSG_AUTOSTORE_BAG_ITEM = 0xFE,
  CMSG_SWAP_ITEM = 0xFF,
  CMSG_SWAP_INV_ITEM = 0x100,
  CMSG_SPLIT_ITEM = 0x101,
  CMSG_PICKUP_ITEM = 0x102,
  CMSG_DROP_ITEM = 0x103,
  CMSG_DESTROYITEM = 0x104,
  SMSG_INVENTORY_CHANGE_FAILURE = 0x105,
  SMSG_OPEN_CONTAINER = 0x106,
  CMSG_INSPECT = 0x107,
  SMSG_INSPECT = 0x108,
  CMSG_INITIATE_TRADE = 0x109,
  CMSG_BEGIN_TRADE = 0x10A,
  CMSG_BUSY_TRADE = 0x10B,
  CMSG_IGNORE_TRADE = 0x10C,
  CMSG_ACCEPT_TRADE = 0x10D,
  CMSG_UNACCEPT_TRADE = 0x10E,
  CMSG_CANCEL_TRADE = 0x10F,
  CMSG_SET_TRADE_ITEM = 0x110,
  CMSG_CLEAR_TRADE_ITEM = 0x111,
  CMSG_SET_TRADE_GOLD = 0x112,
  SMSG_TRADE_STATUS = 0x113,
  SMSG_TRADE_STATUS_EXTENDED = 0x114,
  SMSG_INITIALIZE_FACTIONS = 0x115,
  SMSG_SET_FACTION_VISIBLE = 0x116,
  SMSG_SET_FACTION_STANDING = 0x117,
  CMSG_SET_FACTION_ATWAR = 0x118,
  CMSG_SET_FACTION_CHEAT = 0x119,
  SMSG_SET_PROFICIENCY = 0x11A,
  CMSG_SET_ACTION_BUTTON = 0x11B,
  SMSG_ACTION_BUTTONS = 0x11C,
  SMSG_INITIAL_SPELLS = 0x11D,
  SMSG_LEARNED_SPELL = 0x11E,
  SMSG_SUPERCEDED_SPELL = 0x11F,
  CMSG_NEW_SPELL_SLOT = 0x120,
  CMSG_CAST_SPELL = 0x121,
  CMSG_CANCEL_CAST = 0x122,
  SMSG_CAST_RESULT = 0x123,
  SMSG_SPELL_START = 0x124,
  SMSG_SPELL_GO = 0x125,
  SMSG_SPELL_FAILURE = 0x126,
  SMSG_SPELL_COOLDOWN = 0x127,
  SMSG_COOLDOWN_EVENT = 0x128,
  CMSG_CANCEL_AURA = 0x129,
  SMSG_UPDATE_AURA_DURATION = 0x12A,
  SMSG_PET_CAST_FAILED = 0x12B,
  MSG_CHANNEL_START = 0x12C,
  MSG_CHANNEL_UPDATE = 0x12D,
  CMSG_CANCEL_CHANNELLING = 0x12E,
  SMSG_AI_REACTION = 0x12F,
  CMSG_SET_SELECTION = 0x130,
  CMSG_SET_TARGET = 0x131,
  CMSG_START_USING_RANGED_WEAPON = 0x132,
  CMSG_STOP_USING_RANGED_WEAPON = 0x133,
  CMSG_ATTACKSWING = 0x134,
  CMSG_ATTACKSTOP = 0x135,
  SMSG_ATTACKSTART = 0x136,
  SMSG_ATTACKSTOP = 0x137,
  SMSG_ATTACKSWING_NOTINRANGE = 0x138,
  SMSG_ATTACKSWING_BADFACING = 0x139,
  SMSG_ATTACKSWING_NOTSTANDING = 0x13A,
  SMSG_ATTACKSWING_DEADTARGET = 0x13B,
  SMSG_ATTACKSWING_CANT_ATTACK = 0x13C,
  SMSG_ATTACKERSTATEUPDATE = 0x13D,
  SMSG_VICTIMSTATEUPDATE_OBSOLETE = 0x13E,
  SMSG_DAMAGE_DONE = 0x13F,
  SMSG_DAMAGE_TAKEN = 0x140,
  SMSG_CANCEL_COMBAT = 0x141,
  SMSG_PLAYER_COMBAT_XP_GAIN_OBSOLETE = 0x142,
  SMSG_HEALSPELL_ON_PLAYER = 0x143,
  SMSG_HEALSPELL_ON_PLAYERS_PET = 0x144,
  CMSG_SHEATHE = 0x145,
  CMSG_SAVE_PLAYER = 0x146,
  CMSG_SETDEATHBINDPOINT = 0x147,
  SMSG_BINDPOINTUPDATE = 0x148,
  CMSG_GETDEATHBINDZONE = 0x149,
  SMSG_BINDZONEREPLY = 0x14A,
  SMSG_PLAYERBOUND = 0x14B,
  SMSG_DEATH_NOTIFY = 0x14C,
  CMSG_REPOP_REQUEST = 0x14D,
  SMSG_RESURRECT_REQUEST = 0x14E,
  CMSG_RESURRECT_RESPONSE = 0x14F,
  CMSG_LOOT = 0x150,
  CMSG_LOOT_MONEY = 0x151,
  CMSG_LOOT_RELEASE = 0x152,
  SMSG_LOOT_RESPONSE = 0x153,
  SMSG_LOOT_RELEASE_RESPONSE = 0x154,
  SMSG_LOOT_REMOVED = 0x155,
  SMSG_LOOT_MONEY_NOTIFY = 0x156,
  SMSG_LOOT_ITEM_NOTIFY = 0x157,
  SMSG_LOOT_CLEAR_MONEY = 0x158,
  SMSG_ITEM_PUSH_RESULT = 0x159,
  SMSG_DUEL_REQUESTED = 0x15A,
  SMSG_DUEL_OUTOFBOUNDS = 0x15B,
  SMSG_DUEL_INBOUNDS = 0x15C,
  SMSG_DUEL_COMPLETE = 0x15D,
  SMSG_DUEL_WINNER = 0x15E,
  CMSG_DUEL_ACCEPTED = 0x15F,
  CMSG_DUEL_CANCELLED = 0x160,
  SMSG_MOUNTRESULT = 0x161,
  SMSG_DISMOUNTRESULT = 0x162,
  SMSG_PUREMOUNT_CANCELLED = 0x163,
  CMSG_MOUNTSPECIAL_ANIM = 0x164,
  SMSG_MOUNTSPECIAL_ANIM = 0x165,
  SMSG_PET_TAME_FAILURE = 0x166,
  CMSG_PET_SET_ACTION = 0x167,
  CMSG_PET_ACTION = 0x168,
  CMSG_PET_ABANDON = 0x169,
  CMSG_PET_RENAME = 0x16A,
  SMSG_PET_NAME_INVALID = 0x16B,
  SMSG_PET_SPELLS = 0x16C,
  CMSG_PET_CAST_SPELL_OBSOLETE = 0x16D,
  CMSG_LIST_INVENTORY = 0x16E,
  SMSG_LIST_INVENTORY = 0x16F,
  CMSG_SELL_ITEM = 0x170,
  SMSG_SELL_ITEM = 0x171,
  CMSG_BUY_ITEM = 0x172,
  CMSG_BUY_ITEM_IN_SLOT = 0x173,
  SMSG_BUY_ITEM = 0x174,
  SMSG_BUY_FAILED = 0x175,
  CMSG_NPC_HELLO = 0x176,
  SMSG_NPC_HYPERTEXT = 0x177,
  CMSG_NPC_TEXT_QUERY = 0x178,
  SMSG_NPC_TEXT_UPDATE = 0x179,
  CMSG_NPC_OFFER_ITEM = 0x17A,
  SMSG_NPC_ACCEPT_ITEM = 0x17B,
  SMSG_NPC_DECLINE_ITEM = 0x17C,
  SMSG_NPC_WONT_TALK = 0x17D,
  CMSG_QUESTGIVER_STATUS_QUERY = 0x17E,
  SMSG_QUESTGIVER_STATUS = 0x17F,
  CMSG_QUESTGIVER_HELLO = 0x180,
  SMSG_QUESTGIVER_QUEST_LIST = 0x181,
  CMSG_QUESTGIVER_QUERY_QUEST = 0x182,
  CMSG_QUESTGIVER_QUEST_AUTOLAUNCH = 0x183,
  SMSG_QUESTGIVER_QUEST_DETAILS = 0x184,
  CMSG_QUESTGIVER_ACCEPT_QUEST = 0x185,
  CMSG_QUESTGIVER_COMPLETE_QUEST = 0x186,
  SMSG_QUESTGIVER_REQUEST_ITEMS = 0x187,
  CMSG_QUESTGIVER_REQUEST_REWARD = 0x188,
  SMSG_QUESTGIVER_OFFER_REWARD = 0x189,
  CMSG_QUESTGIVER_CHOOSE_REWARD = 0x18A,
  SMSG_QUESTGIVER_QUEST_INVALID = 0x18B,
  CMSG_QUESTGIVER_CANCEL = 0x18C,
  SMSG_QUESTGIVER_QUEST_COMPLETE = 0x18D,
  SMSG_QUESTGIVER_QUEST_FAILED = 0x18E,
  CMSG_QUESTLOG_SWAP_QUEST = 0x18F,
  CMSG_QUESTLOG_REMOVE_QUEST = 0x190,
  SMSG_QUESTLOG_FULL = 0x191,
  SMSG_QUESTUPDATE_FAILED = 0x192,
  SMSG_QUESTUPDATE_COMPLETE = 0x193,
  SMSG_QUESTUPDATE_ADD_KILL = 0x194,
  SMSG_QUESTUPDATE_ADD_ITEM = 0x195,
  CMSG_QUEST_CONFIRM_ACCEPT = 0x196,
  SMSG_QUEST_CONFIRM_ACCEPT = 0x197,
  CMSG_TAXICLEARALLNODES = 0x198,
  CMSG_TAXIENABLEALLNODES = 0x199,
  CMSG_TAXISHOWNODES = 0x19A,
  SMSG_SHOWTAXINODES = 0x19B,
  CMSG_TAXINODE_STATUS_QUERY = 0x19C,
  SMSG_TAXINODE_STATUS = 0x19D,
  CMSG_TAXIQUERYAVAILABLENODES = 0x19E,
  CMSG_ACTIVATETAXI = 0x19F,
  SMSG_ACTIVATETAXIREPLY = 0x1A0,
  SMSG_NEW_TAXI_PATH = 0x1A1,
  CMSG_TRAINER_LIST = 0x1A2,
  SMSG_TRAINER_LIST = 0x1A3,
  CMSG_TRAINER_BUY_SPELL = 0x1A4,
  SMSG_TRAINER_BUY_SUCCEEDED = 0x1A5,
  SMSG_TRAINER_BUY_FAILED = 0x1A6,
  CMSG_BINDER_ACTIVATE = 0x1A7,
  SMSG_PLAYERBINDERROR = 0x1A8,
  CMSG_BANKER_ACTIVATE = 0x1A9,
  SMSG_SHOW_BANK = 0x1AA,
  CMSG_BUY_BANK_SLOT = 0x1AB,
  SMSG_BUY_BANK_SLOT_RESULT = 0x1AC,
  CMSG_PETITION_SHOWLIST = 0x1AD,
  SMSG_PETITION_SHOWLIST = 0x1AE,
  CMSG_PETITION_BUY = 0x1AF,
  CMSG_PETITION_SHOW_SIGNATURES = 0x1B0,
  SMSG_PETITION_SHOW_SIGNATURES = 0x1B1,
  CMSG_PETITION_SIGN = 0x1B2,
  SMSG_PETITION_SIGN_RESULTS = 0x1B3,
  CMSG_OFFER_PETITION = 0x1B4,
  CMSG_TURN_IN_PETITION = 0x1B5,
  SMSG_TURN_IN_PETITION_RESULTS = 0x1B6,
  CMSG_PETITION_QUERY = 0x1B7,
  SMSG_PETITION_QUERY_RESPONSE = 0x1B8,
  SMSG_FISH_NOT_HOOKED = 0x1B9,
  SMSG_FISH_ESCAPED = 0x1BA,
  CMSG_BUG = 0x1BB,
  SMSG_NOTIFICATION = 0x1BC,
  CMSG_PLAYED_TIME = 0x1BD,
  SMSG_PLAYED_TIME = 0x1BE,
  CMSG_QUERY_TIME = 0x1BF,
  SMSG_QUERY_TIME_RESPONSE = 0x1C0,
  SMSG_LOG_XPGAIN = 0x1C1,
  MSG_SPLIT_MONEY = 0x1C2,
  CMSG_RECLAIM_CORPSE = 0x1C3,
  CMSG_WRAP_ITEM = 0x1C4,
  SMSG_LEVELUP_INFO = 0x1C5,
  MSG_MINIMAP_PING = 0x1C6,
  SMSG_RESISTLOG = 0x1C7,
  SMSG_ENCHANTMENTLOG = 0x1C8,
  CMSG_SET_SKILL_CHEAT = 0x1C9,
  SMSG_START_MIRROR_TIMER = 0x1CA,
  SMSG_PAUSE_MIRROR_TIMER = 0x1CB,
  SMSG_STOP_MIRROR_TIMER = 0x1CC,
  CMSG_PING = 0x1CD,
  SMSG_PONG = 0x1CE,
  SMSG_CLEAR_COOLDOWN = 0x1CF,
  SMSG_GAMEOBJECT_PAGETEXT = 0x1D0,
  CMSG_SETWEAPONMODE = 0x1D1,
  SMSG_COOLDOWN_CHEAT = 0x1D2,
  SMSG_SPELL_DELAYED = 0x1D3,
  CMSG_PLAYER_MACRO = 0x1D4,
  SMSG_PLAYER_MACRO = 0x1D5,
  CMSG_GHOST = 0x1D6,
  CMSG_GM_INVIS = 0x1D7,
  CMSG_SCREENSHOT = 0x1D8,
  MSG_GM_BIND_OTHER = 0x1D9,
  MSG_GM_SUMMON = 0x1DA,
  SMSG_ITEM_TIME_UPDATE = 0x1DB,
  SMSG_ITEM_ENCHANT_TIME_UPDATE = 0x1DC,
  SMSG_AUTH_CHALLENGE = 0x1DD,
  CMSG_AUTH_SESSION = 0x1DE,
  SMSG_AUTH_RESPONSE = 0x1DF,
  MSG_GM_SHOWLABEL = 0x1E0,
  MSG_ADD_DYNAMIC_TARGET = 0x1E1,
  MSG_SAVE_GUILD_EMBLEM = 0x1E2,
  MSG_TABARDVENDOR_ACTIVATE = 0x1E3,
  SMSG_PLAY_SPELL_VISUAL = 0x1E4,
  CMSG_ZONEUPDATE = 0x1E5,
  SMSG_PARTYKILLLOG = 0x1E6,
  SMSG_COMPRESSED_UPDATE_OBJECT = 0x1E7,
  SMSG_MIRRORTIMERDAMAGELOG = 0x1E8,
  SMSG_EXPLORATION_EXPERIENCE = 0x1E9,
  CMSG_GM_SET_SECURITY_GROUP = 0x1EA,
  CMSG_GM_NUKE = 0x1EB,
  MSG_RANDOM_ROLL = 0x1EC,
  SMSG_ENVIRONMENTALDAMAGELOG = 0x1ED,
  CMSG_RWHOIS = 0x1EE,
  SMSG_RWHOIS = 0x1EF,
  MSG_LOOKING_FOR_GROUP = 0x1F0,
  CMSG_SET_LOOKING_FOR_GROUP = 0x1F1,
  NUM_MSG_TYPES = 0x1F2,
};

/* 152 */
enum LOGIN_RESULT : __int32
{
  LOGIN_OK = 0x0,
  LOGIN_INVALID_CHALLENGE_MESSAGE = 0x1,
  LOGIN_SRP_ERROR = 0x2,
  LOGIN_INVALID_PROOF_MESSAGE = 0x3,
  LOGIN_BAD_SERVER_PROOF = 0x4,
  LOGIN_INVALID_RECODE_MESSAGE = 0x5,
  LOGIN_BAD_SERVER_RECODE_PROOF = 0x6,
  LOGIN_UNKNOWN_ACCOUNT = 0x7,
  LOGIN_INCORRECT_PASSWORD = 0x8,
  LOGIN_FAILED = 0x9,
  LOGIN_SERVER_DOWN = 0xA,
  LOGIN_BANNED = 0xB,
  LOGIN_RESULT_MAX = 0xC,
};

/* 153 */
enum LOGIN_STATE : __int32
{
  LOGIN_STATE_INITIALIZED = 0x0,
  LOGIN_STATE_CONNECTING = 0x1,
  LOGIN_STATE_HANDSHAKING = 0x2,
  LOGIN_STATE_AUTHENTICATING = 0x3,
  LOGIN_STATE_AUTHENTICATED = 0x4,
  LOGIN_STATE_FAILED = 0x5,
  LOGIN_STATE_MAX = 0x6,
};

/* 154 */
enum MOUSEBUTTON : __int32
{
  MOUSE_BUTTON_NONE = 0x0,
  MOUSE_BUTTON_LEFT = 0x1,
  MOUSE_BUTTON_MIDDLE = 0x2,
  MOUSE_BUTTON_RIGHT = 0x4,
  MOUSE_BUTTON_XBUTTON1 = 0x8,
  MOUSE_BUTTON_XBUTTON2 = 0x10,
  MOUSE_BUTTON_ALL = 0xFFFFFFFF,
};

/* 155 */
enum WOW_LOCALE : __int32
{
  LOCALE_en_US = 0x0,
  LOCALE_ko_KR = 0x1,
  LOCALE_ja_JP = 0x2,
  LOCALE_zh_CN = 0x3,
  LOCALE_zh_TW = 0x4,
  LOCALE_es_ES = 0x5,
  LOCALE_fr_FR = 0x6,
  LOCALE_de_DE = 0x7,
  NUM_LOCALES = 0x8,
  DEFAULT_LANGUAGE = 0x0,
};

/* 156 */
enum MOUSEMODE : __int32
{
  MOUSE_MODE_NORMAL = 0x0,
  MOUSE_MODE_RELATIVE = 0x1,
  MOUSE_MODES = 0x2,
};

/* 157 */
enum STATUS_TYPE : __int32
{
  STATUS_INFO = 0x0,
  STATUS_WARNING = 0x1,
  STATUS_ERROR = 0x2,
  STATUS_FATAL = 0x3,
  STATUS_NUMTYPES = 0x4,
};

/* 158 */
enum EGxVertexBufferFormat : __int32
{
  GxVBF_PN = 0x0,
  GxVBF_PNC = 0x1,
  GxVBF_PNT0 = 0x2,
  GxVBF_PNCT0 = 0x3,
  GxVBF_PNT0T1 = 0x4,
  GxVBF_PNCT0T1 = 0x5,
  GxVBF_PCT0 = 0x6,
  GxVBF_PC = 0x7,
  GxVBF_PT0T1 = 0x8,
  GxVertexBufferFormats_Last = 0x9,
};

/* 159 */
enum WOWCS_OPS : __int32
{
  COP_NONE = 0x0,
  COP_INIT = 0x1,
  COP_CONNECT = 0x2,
  COP_AUTHENTICATE = 0x3,
  COP_CREATE_ACCOUNT = 0x4,
  COP_CREATE_CHARACTER = 0x5,
  COP_GET_CHARACTERS = 0x6,
  COP_DELETE_CHARACTER = 0x7,
  COP_LOGIN_CHARACTER = 0x8,
  COP_GET_REALMS = 0x9,
  COP_WAIT_QUEUE = 0xA,
};

/* 160 */
enum EGxVertexMember : __int32
{
  GxVM_Indices = 0x0,
  GxVM_Vertex = 0x0,
  GxVM_Position = 0x0,
  GxVM_Normal = 0x1,
  GxVM_Color = 0x2,
  GxVM_Texture0 = 0x3,
  GxVM_Texture1 = 0x4,
  GxVM_Texture2 = 0x5,
  GxVM_Texture3 = 0x6,
  GxVertexMembers_Last = 0x7,
};

/* 161 */
enum UICURSORTYPE : __int32
{
  UICURSOR_EMPTY = 0x0,
  UICURSOR_ITEM = 0x1,
  UICURSOR_MONEY = 0x2,
  UICURSOR_SPELL = 0x3,
  UICURSOR_PET_SPELL = 0x4,
  UICURSOR_PET_ACTION = 0x5,
  UICURSOR_MERCHANT = 0x6,
  UICURSOR_LOOT = 0x7,
  UICURSOR_ACTIONBAR = 0x8,
};

/* 162 */
enum $D869F3DB32028B75FE16AD915E9FAEB7 : __int32
{
  OS_PROCESSOR_VENDOR_UNKNOWN = 0x0,
  OS_PROCESSOR_VENDOR_INTEL = 0x1,
  OS_PROCESSOR_VENDOR_AMD = 0x2,
  OS_PROCESSOR_VENDOR_PPC = 0x3,
};

/* 163 */
enum EVENTID : __int32
{
  EVENT_ID_CAPTURECHANGED = 0x0,
  EVENT_ID_CHAR = 0x1,
  EVENT_ID_FOCUS = 0x2,
  EVENT_ID_CLOSE = 0x3,
  EVENT_ID_DESTROY = 0x4,
  EVENT_ID_IDLE = 0x5,
  EVENT_ID_POLL = 0x6,
  EVENT_ID_INITIALIZE = 0x7,
  EVENT_ID_KEYDOWN = 0x8,
  EVENT_ID_KEYUP = 0x9,
  EVENT_ID_KEYDOWN_REPEATING = 0xA,
  EVENT_ID_MOUSEDOWN = 0xB,
  EVENT_ID_MOUSEMOVE = 0xC,
  EVENT_ID_MOUSEMOVE_RELATIVE = 0xD,
  EVENT_ID_MOUSEUP = 0xE,
  EVENT_ID_MOUSEMODE_CHANGED = 0xF,
  EVENT_ID_MOUSEWHEEL = 0x10,
  EVENT_ID_PAINT = 0x11,
  EVENT_ID_NET_DATA = 0x12,
  EVENT_ID_NET_CONNECT = 0x13,
  EVENT_ID_NET_DISCONNECT = 0x14,
  EVENT_ID_NET_CANTCONNECT = 0x15,
  EVENT_ID_NET_DESTROY = 0x16,
  EVENT_ID_CONSOLE_INPUT = 0x17,
  EVENT_ID_ENGINENET = 0x18,
  EVENT_ID_BATTLENET = 0x19,
  EVENT_ID_WOW_Q_IDLE = 0x1A,
  EVENT_ID_IME = 0x1B,
  EVENT_ID_SIZE = 0x1C,
  EVENTIDS = 0x1D,
};

/* 164 */
enum FIELDTYPE : __int32
{
  FT_INVALID = 0x0,
  FT_BYTE = 0x1,
  FT_SHORT = 0x2,
  FT_INT = 0x3,
  FT_BIGINT = 0x4,
  FT_FLOAT = 0x5,
  FT_STRING = 0x6,
  FT_WSTRING = 0x7,
  FT_BINARY = 0x8,
  FT_VARBINARY = 0x9,
  FT_DATE = 0xA,
  NUM_FIELDTYPES = 0xB,
};

/* 165 */
enum EGxPrim : __int32
{
  GxPrim_Points = 0x0,
  GxPrim_Lines = 0x1,
  GxPrim_LineStrip = 0x2,
  GxPrim_Triangles = 0x3,
  GxPrim_TriangleStrip = 0x4,
  GxPrim_TriangleFan = 0x5,
  GxPrims_Last = 0x6,
};

/* 166 */
enum $56298E52453EED3E2FF36BA93E3304A1 : __int32
{
  SOUND_FAC = 0x1,
  MP3_FAC = 0x2,
  TIMER_EVENT_FAC = 0x3,
  WINDOW_EVENT_FAC = 0x4,
  MOUSE_EVENT_FAC = 0x5,
  KEY_EVENT_FAC = 0x6,
  LAYER_EVENT_FAC = 0x7,
  FRAME_EVENT_FAC = 0x8,
  CONTROL_EVENT_FAC = 0x9,
  BUTTON_EVENT_FAC = 0xA,
  EDITBOX_EVENT_FAC = 0xB,
  CHECKBOX_EVENT_FAC = 0xC,
  RADIOGROUP_EVENT_FAC = 0xD,
  LISTBOXITEM_EVENT_FAC = 0xE,
  LISTBOX_EVENT_FAC = 0xF,
  SLIDER_EVENT_FAC = 0x10,
  SCROLLBAR_EVENT_FAC = 0x11,
  DIALOG_EVENT_FAC = 0x12,
  MENU_EVENT_FAC = 0x13,
  CHATDISPLAY_EVENT_FAC = 0x14,
  SPINNER_EVENT_FAC = 0x15,
  SCREEN_FRAME_EVENT_FAC = 0x16,
  CONTAINER_FRAME_EVENT_FAC = 0x17,
  DBCODE_FAC = 0x18,
  AGILE_EVENT_FAC = 0x19,
  WORLD_FRAME_EVENT_FAC = 0x1A,
  BASE_FACILITY_LAST = 0x1B,
};

/* 167 */
enum EGxBufWriteFreq : __int32
{
  GxBWF_Static = 0x0,
  GxBWF_Low = 0x1,
  GxBWF_Medium = 0x2,
  GxBWF_Dynamic = 0x3,
  GxBufWriteFreqs_Last = 0x4,
};

/* 168 */
enum EGxBufOp : __int32
{
  GxBufOp_Nop = 0x0,
  GxBufOp_Fill = 0x1,
  GxBufOp_Assign = 0x2,
  GxBufOps_Last = 0x3,
};

/* 169 */
enum $36A8F7B212347B5E3E30445EFD2DA8F0 : __int32
{
  eMinPValue = 0x10,
};

/* 170 */
enum $6A89750DD727F68473DD47726BFA07B3 : __int32
{
  eMaxPValue = 0x7FFFFFEE,
};

/* 171 */
enum $E67A563091C6886CF8BC29654F1E19FC : __int32
{
  eDefPValue = 0x3FFFFFFF,
};

/* 172 */
enum $34096F43A0EEBD98A2227F67B631B13E : __int32
{
  eLowSystemPValue = 0x0,
};

/* 173 */
enum $56BF5A4CFC6550AAA0EA9B5D80BA7C6D : __int32
{
  eHighSystemPValue = 0x7FFFFFFF,
};

/* 174 */
enum OBJECT_TYPE : __int32
{
  TYPE_OBJECT = 0x1,
  TYPE_ITEM = 0x2,
  TYPE_CONTAINER = 0x4,
  TYPE_UNIT = 0x8,
  TYPE_PLAYER = 0x10,
  TYPE_GAMEOBJECT = 0x20,
  TYPE_DYNAMICOBJECT = 0x40,
  TYPE_CORPSE = 0x80,
  TYPE_AIGROUP = 0x100,
  TYPE_AREATRIGGER = 0x200,
  HIER_TYPE_OBJECT = 0x1,
  HIER_TYPE_ITEM = 0x3,
  HIER_TYPE_CONTAINER = 0x7,
  HIER_TYPE_UNIT = 0x9,
  HIER_TYPE_PLAYER = 0x19,
  HIER_TYPE_GAMEOBJECT = 0x21,
  HIER_TYPE_DYNAMICOBJECT = 0x41,
  HIER_TYPE_CORPSE = 0x81,
  HIER_TYPE_AIGROUP = 0x101,
  HIER_TYPE_AREATRIGGER = 0x201,
};

/* 175 */
enum SFILE_TYPE : __int32
{
  SFILE_PLAIN = 0x0,
  SFILE_COMPRESSED = 0x1,
  SFILE_PAQ = 0x2,
  SFILE_OLD_SFILE = 0x3,
  SFILE_ZIP_FILE = 0x4,
};

/* 176 */
enum SARCHIVE_TYPE : __int32
{
  SARCHIVE_MPQ = 0x0,
  SARCHIVE_ZIP = 0x1,
};

/* 177 */
enum $9B9050916E78E642E75F280E0EBA3430 : __int32
{
  EVENT_KEY_DOWN = 0x40060064,
  EVENT_KEY_REPEAT = 0x40060065,
  EVENT_KEY_UP = 0x40060066,
  EVENT_CHAR = 0x40060067,
  EVENT_IME = 0x40060068,
};

/* 178 */
enum LOOT_METHOD : __int32
{
  LOOT_METHOD_FREEFORALL = 0x0,
  LOOT_METHOD_ROUNDROBIN = 0x1,
  LOOT_METHOD_MASTERLOOTER = 0x2,
  LOOT_METHOD_MAX = 0x3,
};

/* 179 */
enum TEXTURETYPE : __int32
{
  TEXTURE_BACKGROUND = 0x0,
  TEXTURE_STATUSBAR = 0x1,
  TEXTURE_PROGRESSBARFRAME = 0x2,
  TEXTURETYPE_NUMTEXTURETYPES = 0x3,
};

/* 180 */
enum EGxTexFormat : __int32
{
  GxTex_Unknown = 0x0,
  GxTex_Argb8888 = 0x1,
  GxTex_Argb4444 = 0x2,
  GxTex_Argb1555 = 0x3,
  GxTex_Rgb565 = 0x4,
  GxTex_Dxt1 = 0x5,
  GxTex_Dxt3 = 0x6,
  GxTex_Dxt5 = 0x7,
  GxTexFormats_Last = 0x8,
};

/* 181 */
enum $FACDDFA20985E30138D194DE643AEFA8 : __int32
{
  REPORT_TYPE_BUG = 0x0,
  REPORT_TYPE_SUGGESTION = 0x1,
  REPORT_TYPE_NOTE = 0x2,
};

/* 182 */
enum EGxTexFilter : __int32
{
  GxTex_Nearest = 0x0,
  GxTex_Linear = 0x1,
  GxTex_LinearMipNearest = 0x2,
  GxTex_LinearMipLinear = 0x3,
  GxTex_Anisotropic = 0x4,
  GxTexFilters_Last = 0x5,
};

/* 183 */
enum OBJECT_TYPE_ID : __int32
{
  ID_OBJECT = 0x0,
  ID_ITEM = 0x1,
  ID_CONTAINER = 0x2,
  ID_UNIT = 0x3,
  ID_PLAYER = 0x4,
  ID_GAMEOBJECT = 0x5,
  ID_DYNAMICOBJECT = 0x6,
  ID_CORPSE = 0x7,
  NUM_CLIENT_OBJECT_TYPES = 0x8,
  ID_AIGROUP = 0x8,
  ID_AREATRIGGER = 0x9,
  NUM_OBJECT_TYPES = 0xA,
};

/* 184 */
enum EGxTexCommand : __int32
{
  GxTex_Lock = 0x0,
  GxTex_Latch = 0x1,
  GxTex_Unlock = 0x2,
  GxTexCommands_Last = 0x3,
};

/* 185 */
enum $75FA17FB2D039FA2AE5F68921078FF73 : __int32
{
  EVENT_MOUSE_DOWN = 0x400500C8,
  EVENT_MOUSE_UP = 0x400500C9,
  EVENT_MOUSE_MOVE = 0x400500CA,
  EVENT_MOUSE_MOVE_RELATIVE = 0x400500CB,
  EVENT_MOUSE_MODE_CHANGED = 0x400500CC,
  EVENT_MOUSE_WHEEL = 0x400500CD,
};

/* 186 */
enum INPUT_CONTROL : __int32
{
  INPUT_TURN_PLAYER = 0x1,
  INPUT_TURN_CAMERA = 0x2,
  INPUT_MOVE_PLAYER_OR_TURN_CAMERA = 0x4,
  INPUT_MOVE_PLAYER_FORWARD_KEY = 0x8,
  INPUT_MOVE_PLAYER_BACKWARD_KEY = 0x10,
  INPUT_STRAFE_PLAYER_LEFT_KEY = 0x20,
  INPUT_STRAFE_PLAYER_RIGHT_KEY = 0x40,
  INPUT_TURN_PLAYER_LEFT_KEY = 0x80,
  INPUT_TURN_PLAYER_RIGHT_KEY = 0x100,
  INPUT_PITCH_PLAYER_UP_KEY = 0x200,
  INPUT_PITCH_PLAYER_DOWN_KEY = 0x400,
  INPUT_MOVE_PLAYER_AUTORUN = 0x800,
  INPUT_MOVE_PLAYER_SENT = 0x1000,
  INPUT_STRAFE_PLAYER_SENT = 0x2000,
  INPUT_TURN_PLAYER_SENT = 0x4000,
  INPUT_PITCH_PLAYER_SENT = 0x8000,
  INPUT_PLAYER_MOVED = 0x10000000,
  INPUT_CAMERA_MOVED = 0x20000000,
  INPUT_FREE_LOOK_MASK = 0x7,
  INPUT_MOVE_PLAYER_MASK = 0x18,
  INPUT_STRAFE_PLAYER_MASK = 0x60,
  INPUT_TURN_PLAYER_MASK = 0x180,
  INPUT_PITCH_PLAYER_MASK = 0x600,
  INPUT_MOVE_AND_TURN_PLAYER = 0x5,
};

/* 187 */
enum NETSTATE : __int32
{
  NS_UNINITIALIZED = 0x0,
  NS_INITIALIZING = 0x1,
  NS_INITIALIZED = 0x2,
  NS_REDIRECT_CONNECTING = 0x3,
  NS_GETTING_REALMS = 0x4,
  NS_CONNECTING = 0x5,
  NS_CONNECTED = 0x6,
  NS_DISCONNECTING = 0x7,
};

/* 188 */
enum CGInputReleaseAction : __int32
{
  INPUT_RELEASE_NONE = 0x0,
  INPUT_RELEASE_SELECT = 0x1,
  INPUT_RELEASE_ACTION = 0x2,
};

/* 189 */
enum NETNOTE : __int32
{
  NETNOTE_CONNECT = 0x0,
  NETNOTE_DATA = 0x1,
  NETNOTE_DISCONNECT = 0x2,
  NETNOTE_CANTCONNECT = 0x3,
  NETNOTE_FILEWRITE = 0x4,
  NETNOTE_FILEREAD = 0x5,
};

/* 190 */
enum $B544A6EEF9F46798C9F65C8309A5EA68 : __int32
{
  EVENT_WINDOW_SIZE = 0x40040064,
  EVENT_WINDOW_FOCUS = 0x40040065,
};

/* 191 */
enum EGxBlend : __int32
{
  GxBlend_Opaque = 0x0,
  GxBlend_AlphaKey = 0x1,
  GxBlend_Alpha = 0x2,
  GxBlend_Add = 0x3,
  GxBlend_Mod = 0x4,
  GxBlend_Mod2x = 0x5,
  GxBlend_ModAdd = 0x6,
  GxBlend_InvSrcAlphaAdd = 0x7,
  GxBlends_Last = 0x8,
};

/* 192 */
typedef $44FAA818BD3258B2BC63EC918B4A4D66 $AD01BE2250CD728B44E10844291C325D;

/* 193 */
enum QUEST_GIVER_STATUS : __int32
{
  QUEST_GIVER_NONE = 0x0,
  QUEST_GIVER_TRIVIAL = 0x1,
  QUEST_GIVER_FUTURE = 0x2,
  QUEST_GIVER_REWARD = 0x3,
  QUEST_GIVER_QUEST = 0x4,
  QUEST_GIVER_NUMITEMS = 0x5,
};

/* 194 */
enum ANIMENUMERATION : __int32
{
  ANIM_STAND = 0x0,
  ANIM_DEATH = 0x1,
  ANIM_SPELL = 0x2,
  ANIM_STOP = 0x3,
  ANIM_WALK = 0x4,
  ANIM_RUN = 0x5,
  ANIM_DEAD = 0x6,
  ANIM_RISE = 0x7,
  ANIM_STANDWOUND = 0x8,
  ANIM_COMBATWOUND = 0x9,
  ANIM_COMBATCRITICAL = 0xA,
  ANIM_SHUFFLE_LEFT = 0xB,
  ANIM_SHUFFLE_RIGHT = 0xC,
  ANIM_WALK_BACKWARDS = 0xD,
  ANIM_STUN = 0xE,
  ANIM_HANDS_CLOSED = 0xF,
  ANIM_ATTACKUNARMED = 0x10,
  ANIM_ATTACK1H = 0x11,
  ANIM_ATTACK2HTIGHT = 0x12,
  ANIM_ATTACK2HLOOSE = 0x13,
  ANIM_PARRYUNARMED = 0x14,
  ANIM_PARRY1H = 0x15,
  ANIM_PARRY2HTIGHT = 0x16,
  ANIM_PARRY2HLOOSE = 0x17,
  ANIM_PARRYSHIELD = 0x18,
  ANIM_READYUNARMED = 0x19,
  ANIM_READY1H = 0x1A,
  ANIM_READY2HTIGHT = 0x1B,
  ANIM_READY2HLOOSE = 0x1C,
  ANIM_READYBOW = 0x1D,
  ANIM_DODGE = 0x1E,
  ANIM_SPELLPRECAST = 0x1F,
  ANIM_SPELLCAST = 0x20,
  ANIM_SPELLCASTAREA = 0x21,
  ANIM_NPCWELCOME = 0x22,
  ANIM_NPCGOODBYE = 0x23,
  ANIM_BLOCK = 0x24,
  ANIM_JUMPSTART = 0x25,
  ANIM_JUMP = 0x26,
  ANIM_JUMPEND = 0x27,
  ANIM_FALL = 0x28,
  ANIM_SWIMIDLE = 0x29,
  ANIM_SWIM = 0x2A,
  ANIM_SWIM_LEFT = 0x2B,
  ANIM_SWIM_RIGHT = 0x2C,
  ANIM_SWIM_BACKWARDS = 0x2D,
  ANIM_ATTACKBOW = 0x2E,
  ANIM_FIREBOW = 0x2F,
  ANIM_READYRIFLE = 0x30,
  ANIM_ATTACKRIFLE = 0x31,
  ANIM_LOOT = 0x32,
  ANIM_SPELL_PRECAST_DIRECTED = 0x33,
  ANIM_SPELL_PRECAST_OMNI = 0x34,
  ANIM_SPELL_CAST_DIRECTED = 0x35,
  ANIM_SPELL_CAST_OMNI = 0x36,
  ANIM_SPELL_BATTLEROAR = 0x37,
  ANIM_SPELL_READYABILITY = 0x38,
  ANIM_SPELL_SPECIAL1H = 0x39,
  ANIM_SPELL_SPECIAL2H = 0x3A,
  ANIM_SPELL_SHIELDBASH = 0x3B,
  ANIM_EMOTE_TALK = 0x3C,
  ANIM_EMOTE_EAT = 0x3D,
  ANIM_EMOTE_WORK = 0x3E,
  ANIM_EMOTE_USE_STANDING = 0x3F,
  ANIM_EMOTE_EXCLAMATION = 0x40,
  ANIM_EMOTE_QUESTION = 0x41,
  ANIM_EMOTE_BOW = 0x42,
  ANIM_EMOTE_WAVE = 0x43,
  ANIM_EMOTE_CHEER = 0x44,
  ANIM_EMOTE_DANCE = 0x45,
  ANIM_EMOTE_LAUGH = 0x46,
  ANIM_EMOTE_SLEEP = 0x47,
  ANIM_EMOTE_SIT_GROUND = 0x48,
  ANIM_EMOTE_RUDE = 0x49,
  ANIM_EMOTE_ROAR = 0x4A,
  ANIM_EMOTE_KNEEL = 0x4B,
  ANIM_EMOTE_KISS = 0x4C,
  ANIM_EMOTE_CRY = 0x4D,
  ANIM_EMOTE_CHICKEN = 0x4E,
  ANIM_EMOTE_BEG = 0x4F,
  ANIM_EMOTE_APPLAUD = 0x50,
  ANIM_EMOTE_SHOUT = 0x51,
  ANIM_EMOTE_FLEX = 0x52,
  ANIM_EMOTE_SHY = 0x53,
  ANIM_EMOTE_POINT = 0x54,
  ANIM_ATTACK1HPIERCE = 0x55,
  ANIM_ATTACK2HLOOSEPIERCE = 0x56,
  ANIM_ATTACKOFF = 0x57,
  ANIM_ATTACKOFFPIERCE = 0x58,
  ANIM_SHEATHE = 0x59,
  ANIM_HIPSHEATHE = 0x5A,
  ANIM_MOUNT = 0x5B,
  ANIM_RUN_LEANRIGHT = 0x5C,
  ANIM_RUN_LEANLEFT = 0x5D,
  ANIM_MOUNT_SPECIAL = 0x5E,
  ANIM_KICK = 0x5F,
  ANIM_SITDOWN = 0x60,
  ANIM_SITTING = 0x61,
  ANIM_SITUP = 0x62,
  ANIM_SLEEPDOWN = 0x63,
  ANIM_SLEEPING = 0x64,
  ANIM_SLEEPUP = 0x65,
  ANIM_SITCHAIRLOW = 0x66,
  ANIM_SITCHAIRMEDIUM = 0x67,
  ANIM_SITCHAIRHIGH = 0x68,
  ANIM_LOADBOW = 0x69,
  ANIM_LOADRIFLE = 0x6A,
  ANIM_ATTACKTHROWN = 0x6B,
  ANIM_READYTHROWN = 0x6C,
  ANIM_HOLDBOW = 0x6D,
  ANIM_HOLDRIFLE = 0x6E,
  ANIM_HOLDTHROWN = 0x6F,
  ANIM_LOADTHROWN = 0x70,
  ANIM_EMOTE_SALUTE = 0x71,
  ANIM_KNEELDOWN = 0x72,
  ANIM_KNEELING = 0x73,
  ANIM_KNEELUP = 0x74,
  ANIM_ATTACKUNARMEDOFF = 0x75,
  ANIM_SPECIALUNARMED = 0x76,
  ANIM_STEALTHWALK = 0x77,
  ANIM_STEALTHSTAND = 0x78,
  ANIM_KNOCKDOWN = 0x79,
  ANIM_EATING = 0x7A,
  ANIM_USESTANDINGLOOP = 0x7B,
  ANIM_CHANNELCASTDIRECTED = 0x7C,
  ANIM_CHANNELCASTOMNI = 0x7D,
  ANIM_WHIRLWIND = 0x7E,
  ANIM_BIRTH = 0x7F,
  ANIM_USESTANDINGSTART = 0x80,
  ANIM_USESTANDINGEND = 0x81,
  ANIM_HOWL = 0x82,
  ANIM_DROWN = 0x83,
  ANIM_DROWNED = 0x84,
  ANIM_FISHINGCAST = 0x85,
  ANIM_FISHINGLOOP = 0x86,
  NUM_OBJECTANIMATIONS = 0x87,
  RESET_ANIMATION_INDICES0 = 0xFFFFFFFF,
  ANIM_GAMEOBJ_STAND = 0x0,
  ANIM_GAMEOBJ_CLOSED = 0x1,
  ANIM_GAMEOBJ_OPEN = 0x2,
  ANIM_GAMEOBJ_OPENED = 0x3,
  ANIM_GAMEOBJ_CLOSE = 0x4,
  ANIM_GAMEOBJ_DESTROY = 0x5,
  ANIM_GAMEOBJ_DESTROYED = 0x6,
  ANIM_GAMEOBJ_REBUILD = 0x7,
  ANIM_GAMEOBJ_CUSTOM0 = 0x8,
  ANIM_GAMEOBJ_CUSTOM1 = 0x9,
  ANIM_GAMEOBJ_CUSTOM2 = 0xA,
  ANIM_GAMEOBJ_CUSTOM3 = 0xB,
  NUM_GAMEOBJECTANIMATIONS = 0xC,
  FIRST_GAMEOBJECTANIMATION = 0x87,
  RESET_ANIMATION_INDICES1 = 0xFFFFFFFF,
  ANIM_EFFECT_STAND = 0x0,
  ANIM_EFFECT_HOLD = 0x1,
  ANIM_EFFECT_DECAY = 0x2,
  NUM_EFFECTANIMATIONS = 0x3,
  FIRST_EFFECTANIMATION = 0x93,
  RESET_ANIMATION_INDICES2 = 0xFFFFFFFF,
  ANIM_ITEM_STAND = 0x0,
  ANIM_ITEM_INFLIGHT = 0x1,
  ANIM_ITEM_BOWPULL = 0x2,
  ANIM_ITEM_BOWRELEASE = 0x3,
  NUM_ITEMANIMATIONS = 0x4,
  FIRST_ITEMANIMATION = 0x96,
  RESET_ANIMATION_INDICES3 = 0xFFFFFFFF,
  INVALID_ANIMATION = 0xFFFFFFFF,
};

/* 195 */
enum NPCSOUNDS : __int32
{
  NPCSOUND_HELLO = 0x0,
  NPCSOUND_GOODBYE = 0x1,
  NPCSOUND_PISSED = 0x2,
  NPCSOUND_ACK = 0x3,
  NUM_NPCSOUNDS = 0x4,
};

/* 196 */
enum SPELL_CAST_UI_TYPE : __int32
{
  SPELL_CAST_UI_NONE = 0x0,
  SPELL_CAST_UI_PET_TRAINING = 0x1,
  SPELL_CAST_UI_DISGUISES = 0x2,
  SPELL_CAST_UI_INSCRIBING = 0x3,
  NUM_SPELL_CAST_UI_TYPES = 0x4,
};

/* 197 */
enum BLOODSPURTLOCATION : __int32
{
  BLOODSPURT_FRONT = 0x0,
  BLOODSPURT_BACK = 0x1,
  NUM_BLOODSPURTLOCATIONS = 0x2,
};

/* 198 */
enum UNITSOUNDTYPE : __int32
{
  UNITSOUNDTYPE_EXERTION = 0x0,
  UNITSOUNDTYPE_EXERTIONCRITICAL = 0x1,
  UNITSOUNDTYPE_INJURY = 0x2,
  UNITSOUNDTYPE_INJURYCRITICAL = 0x3,
  UNITSOUNDTYPE_DEATH = 0x4,
  UNITSOUNDTYPE_STUN = 0x5,
  UNITSOUNDTYPE_STAND = 0x6,
  UNITSOUNDTYPE_DEATHTHUD = 0x7,
  UNITSOUNDTYPE_FOOTFALL = 0x8,
  UNITSOUNDTYPE_AGGRO = 0x9,
  UNITSOUNDTYPE_WINGFLAP = 0xA,
  UNITSOUNDTYPE_ALERT = 0xB,
  UNITSOUNDTYPE_INJURYCRUSHINGBLOW = 0xC,
  UNITSOUNDTYPE_WINGGLIDE = 0xD,
  UNITSOUNDTYPE_JUMPSTART = 0xE,
  UNITSOUNDTYPE_JUMPEND = 0xF,
  NUM_UNITSOUNDTYPES = 0x10,
};

/* 199 */
enum EMOTESPECPROCS : __int32
{
  EMOTESPECPROC_NONE = 0x0,
  EMOTESPECPROC_STANDSTATEHANDLER = 0x1,
  EMOTESPECPROC_EMOTESTATEHANDLER = 0x2,
  EMOTESPECPROC_NUMSPECPROCS = 0x3,
};

/* 200 */
enum PUREMOUNTFADEMODE : __int32
{
  PUREMOUNTFADE_IN = 0x0,
  PUREMOUNTFADE_OUT = 0x1,
};

/* 201 */
enum TALKANIMATION : __int32
{
  TALKANIM_TALK = 0x0,
  TALKANIM_QUESTION = 0x1,
  TALKANIM_EXCLAMATION = 0x2,
  TALKANIM_SHOUT = 0x3,
  TALKANIM_LAUGH = 0x4,
  TALKANIM_NUMTALKANIMS = 0x5,
};

/* 202 */
enum SPELLPROC_ACTION : __int32
{
  SPELLPROCADD = 0x0,
  SPELLPROCREMOVE = 0x1,
  SPELLPROCREFRESH = 0x2,
  SPELLPROCUPDATE = 0x3,
};

/* 203 */
enum CGCameraShakeType : __int32
{
  CAMSHAKE_SINE = 0x0,
  CAMSHAKE_DECAYED_SINE = 0x1,
  NUM_CAMERA_SHAKETYPES = 0x2,
};

/* 204 */
enum CGCameraDir : __int32
{
  CAMERA_FORWARD = 0x0,
  CAMERA_RIGHT = 0x1,
  CAMERA_UP = 0x2,
  NUM_CAMERA_DIRECTIONS = 0x3,
};

/* 205 */
enum TRACKTYPE : __int32
{
  TRACKTYPE_SPELLPRECAST = 0x0,
  TRACKTYPE_SPELLCHANNEL = 0x1,
  TRACKTYPE_FOLLOW = 0x2,
  TRACKTYPE_NUMTRACKTYPES = 0x3,
};

/* 206 */
enum UNIT_SEX : __int32
{
  UNITSEX_MALE = 0x0,
  UNITSEX_FEMALE = 0x1,
  UNITSEX_NONE = 0x2,
  UNITSEX_LAST = 0x3,
  UNITSEX_BOTH = 0x3,
};

/* 207 */
enum WORLDTEXTMISSTYPE : __int32
{
  WORLDTEXTMISS_EVADED = 0x0,
  WORLDTEXTMISS_DODGED = 0x1,
  WORLDTEXTMISS_PARRIED = 0x2,
  WORLDTEXTMISS_BLOCKED = 0x3,
  WORLDTEXTMISS_DEFLECTED = 0x4,
  WORLDTEXTMISS_IMMUNE = 0x5,
  WORLDTEXTMISS_TEMPIMMUNE = 0x6,
  WORLDTEXTMISS_PHYSICAL = 0x7,
  WORLDTEXTMISS_RESIST = 0x8,
  WORLDTEXTMISS_ABSORBED = 0x9,
  WORLDTEXTMISS_NUMTYPES = 0xA,
};

/* 208 */
enum SHEATHEREASONS : __int32
{
  SHEATHE_PLAYEREXPLICIT = 0x0,
  SHEATHE_SPELLS = 0x1,
  SHEATHE_STANDSTATE = 0x2,
  SHEATHE_BASEANIM = 0x3,
  SHEATHE_TORSOANIM = 0x4,
  SHEATHE_RANGED = 0x5,
  SHEATHE_TALKEMOTE = 0x6,
  SHEATHE_PRECAST = 0x7,
  SHEATHE_CHANNELLING = 0x8,
  SHEATHE_NUMREASONS = 0x9,
};

/* 209 */
enum $68F5012167123D56FEF5250CCA30E8AD : __int32
{
  BONE_ARM_LEFT = 0x0,
  BONE_ARM_RIGHT = 0x1,
  BONE_SHOULDER_LEFT = 0x2,
  BONE_SHOULDER_RIGHT = 0x3,
  BONE_LOWER_SPINE = 0x4,
  BONE_WAIST = 0x5,
  BONE_HEAD = 0x6,
  BONE_JAW = 0x7,
  BONE_FINGER_FIRST = 0x8,
  BONE_FINGER_FIRSTR = 0x8,
  BONE_FINGER_INDEXR = 0x8,
  BONE_FINGER_MIDDLER = 0x9,
  BONE_FINGER_PINKYR = 0xA,
  BONE_FINGER_RINGR = 0xB,
  BONE_THUMBR = 0xC,
  BONE_FINGER_LASTR = 0xC,
  BONE_FINGER_FIRSTL = 0xD,
  BONE_FINGER_INDEXL = 0xD,
  BONE_FINGER_MIDDLEL = 0xE,
  BONE_FINGER_PINKYL = 0xF,
  BONE_FINGER_RINGL = 0x10,
  BONE_THUMBL = 0x11,
  BONE_FINGER_LASTL = 0x11,
  BONE_FINGER_LAST = 0x11,
  EMITTER_BREATH = 0x12,
  RIGHTHANDCAST = 0x13,
  LEFTHANDCAST = 0x14,
  OBJ_ATTACH_BREATH = 0x15,
  OBJ_ATTACH_PLAYERNAME = 0x16,
  OBJ_ATTACH_PLAYERNAMEMOUNTED = 0x17,
  EMITTER_HEAD_TARGET = 0x18,
  EMITTER_CHEST_TARGET = 0x19,
};

/* 210 */
enum POWER_TYPE : __int32
{
  POWER_TYPE_MANA = 0x0,
  POWER_TYPE_RAGE = 0x1,
  POWER_TYPE_FOCUS = 0x2,
  POWER_TYPE_ENERGY = 0x3,
  NUM_POWER_TYPES = 0x4,
};

/* 211 */
enum $034175B1E7A5D0D2044EAAE66C861327 : __int32
{
  CAMERA_PORTRAIT = 0x0,
  CAMERA_PAPERDOLL = 0x1,
  NUM_OBJECT_CAMERAS = 0x2,
};

/* 212 */
enum HIGHLIGHTTYPE : __int32
{
  HT_OBJSELECTION = 0x0,
  HT_MOUSEOVER = 0x1,
  NUM_HIGHLIGHTTYPES = 0x2,
};

/* 213 */
enum INVENTORY_SLOTS : __int32
{
  INVSLOT_HEAD = 0x0,
  INVSLOT_FIRST = 0x0,
  EQUIPPED_FIRST = 0x0,
  INVSLOT_NECK = 0x1,
  INVSLOT_SHOULDER = 0x2,
  INVSLOT_BODY = 0x3,
  INVSLOT_CHEST = 0x4,
  INVSLOT_WAIST = 0x5,
  INVSLOT_LEGS = 0x6,
  INVSLOT_FEET = 0x7,
  INVSLOT_WRIST = 0x8,
  INVSLOT_HAND = 0x9,
  INVSLOT_FINGER1 = 0xA,
  INVSLOT_FINGER2 = 0xB,
  INVSLOT_TRINKET1 = 0xC,
  INVSLOT_TRINKET2 = 0xD,
  INVSLOT_BACK = 0xE,
  INVSLOT_MAINHAND = 0xF,
  INVSLOT_OFFHAND = 0x10,
  INVSLOT_RANGED = 0x11,
  INVSLOT_TABARD = 0x12,
  EQUIPPED_LAST = 0x12,
  INVSLOT_BAG0 = 0x13,
  INVSLOT_BAGFIRST = 0x13,
  INVSLOT_BAG1 = 0x14,
  INVSLOT_BAG2 = 0x15,
  INVSLOT_BAG3 = 0x16,
  INVSLOT_BAGLAST = 0x16,
  INVSLOT_LAST = 0x16,
  BACKPACK_SLOT00 = 0x17,
  BACKPACK_FIRST = 0x17,
  BACKPACK_SLOT01 = 0x18,
  BACKPACK_SLOT02 = 0x19,
  BACKPACK_SLOT03 = 0x1A,
  BACKPACK_SLOT04 = 0x1B,
  BACKPACK_SLOT05 = 0x1C,
  BACKPACK_SLOT06 = 0x1D,
  BACKPACK_SLOT07 = 0x1E,
  BACKPACK_SLOT08 = 0x1F,
  BACKPACK_SLOT09 = 0x20,
  BACKPACK_SLOT10 = 0x21,
  BACKPACK_SLOT11 = 0x22,
  BACKPACK_SLOT12 = 0x23,
  BACKPACK_SLOT13 = 0x24,
  BACKPACK_SLOT14 = 0x25,
  BACKPACK_SLOT15 = 0x26,
  BACKPACK_LAST = 0x26,
  BANKGENERIC_SLOT00 = 0x27,
  BANKGENERIC_FIRST = 0x27,
  BANKGENERIC_SLOT01 = 0x28,
  BANKGENERIC_SLOT02 = 0x29,
  BANKGENERIC_SLOT03 = 0x2A,
  BANKGENERIC_SLOT04 = 0x2B,
  BANKGENERIC_SLOT05 = 0x2C,
  BANKGENERIC_SLOT06 = 0x2D,
  BANKGENERIC_SLOT07 = 0x2E,
  BANKGENERIC_SLOT08 = 0x2F,
  BANKGENERIC_SLOT09 = 0x30,
  BANKGENERIC_SLOT10 = 0x31,
  BANKGENERIC_SLOT11 = 0x32,
  BANKGENERIC_SLOT12 = 0x33,
  BANKGENERIC_SLOT13 = 0x34,
  BANKGENERIC_SLOT14 = 0x35,
  BANKGENERIC_SLOT15 = 0x36,
  BANKGENERIC_SLOT16 = 0x37,
  BANKGENERIC_SLOT17 = 0x38,
  BANKGENERIC_SLOT18 = 0x39,
  BANKGENERIC_SLOT19 = 0x3A,
  BANKGENERIC_SLOT20 = 0x3B,
  BANKGENERIC_SLOT21 = 0x3C,
  BANKGENERIC_SLOT22 = 0x3D,
  BANKGENERIC_SLOT23 = 0x3E,
  BANKGENERIC_LAST = 0x3E,
  BANKBAG_0 = 0x3F,
  BANKBAG_FIRST = 0x3F,
  BANKBAG_1 = 0x40,
  BANKBAG_2 = 0x41,
  BANKBAG_3 = 0x42,
  BANKBAG_4 = 0x43,
  BANKBAG_5 = 0x44,
  BANKBAG_LAST = 0x44,
  PLAYER_INVENTORY_SLOTS = 0x45,
  NUM_INVENTORY_SLOTS = 0x17,
  NUM_BAG_SLOTS = 0x4,
  MIN_BACKPACK_SLOTS = 0x10,
  BANK_NUM_GEMERIC_SLOTS = 0x18,
  NUM_BANKBAG_SLOTS = 0x6,
  TOTAL_BAG_SLOTS = 0xA,
  INVENTORY_NONE = 0xFFFFFFFF,
};

/* 214 */
enum UNITAFFILIATION : __int32
{
  AFFILIATION_YOURSELF = 0x0,
  AFFILIATION_YOURPET = 0x1,
  AFFILIATION_PARTYMEMBER = 0x2,
  AFFILIATION_OTHER = 0x3,
  AFFILIATION_YOURCONTROLLER = 0x4,
  AFFILIATION_NUMAFFILIATIONS = 0x5,
};

/* 215 */
enum UNIT_MIRROR_TIMER : __int32
{
  UNIT_MIRROR_TIMER_EXHAUSTION = 0x0,
  UNIT_MIRROR_TIMER_BREATH = 0x1,
  UNIT_MIRROR_TIMER_FEIGNDEATH = 0x2,
  NUM_UNIT_MIRROR_TIMERS = 0x3,
};

/* 216 */
enum VICTIMSTATES : __int32
{
  VS_NONE = 0x0,
  VS_WOUND = 0x1,
  VS_DODGE = 0x2,
  VS_PARRY = 0x3,
  VS_INTERRUPT = 0x4,
  VS_BLOCK = 0x5,
  VS_EVADE = 0x6,
  VS_IMMUNE = 0x7,
  VS_DEFLECT = 0x8,
  NUM_VICTIMSTATES = 0x9,
};

/* 217 */
enum $010EBF101356615B937DACB5F4DFED3E : __int32
{
  SOUNDFLAG_NODUPLICATES = 0x1,
  SOUNDFLAG_ISMUSIC = 0x2,
  SOUNDFLAG_KEEPALIVE = 0x4,
  SOUNDFLAG_PUBLIC = 0xFF,
};

/* 218 */
enum SOUNDCATEGORIES : __int32
{
  SOUNDCATEGORY_NONE = 0x0,
  SOUNDCATEGORY_VOCALUI = 0x1,
  SOUNDCATEGORY_SPLASHES = 0x2,
  SOUNDCATEGORIES_NUMCATEGORIES = 0x3,
};

/* 219 */
enum WEAPONMODE : __int32
{
  WEAPONMODE_NORMALMODE = 0x0,
  WEAPONMODE_SHEATHEDMODE = 0x1,
  WEAPONMODE_RANGEDMODE = 0x2,
  WEAPONMODE_NUMMODES = 0x3,
};

/* 220 */
enum COMBATHAND : __int32
{
  COMBAT_MAINHAND = 0x0,
  COMBAT_OFFHAND = 0x1,
  NUMHANDS = 0x2,
};

/* 221 */
enum $18283276956D72A927C54BF8647DB8CF : __int32
{
  MOVEFLAG_FORWARD = 0x1,
  MOVEFLAG_BACKWARD = 0x2,
  MOVEFLAG_STRAFE_LEFT = 0x4,
  MOVEFLAG_STRAFE_RIGHT = 0x8,
  MOVEFLAG_LEFT = 0x10,
  MOVEFLAG_RIGHT = 0x20,
  MOVEFLAG_PITCH_UP = 0x40,
  MOVEFLAG_PITCH_DOWN = 0x80,
  MOVEFLAG_WALK = 0x100,
  MOVEFLAG_TIME_VALID = 0x200,
  MOVEFLAG_IMMOBILIZED = 0x400,
  MOVEFLAG_DONTCOLLIDE = 0x800,
  MOVEFLAG_REDIRECTED = 0x1000,
  MOVEFLAG_ROOTED = 0x2000,
  MOVEFLAG_FALLING = 0x4000,
  MOVEFLAG_FALLEN_FAR = 0x8000,
  MOVEFLAG_PENDING_STOP = 0x10000,
  MOVEFLAG_PENDING_UNSTRAFE = 0x20000,
  MOVEFLAG_PENDING_FALL = 0x40000,
  MOVEFLAG_PENDING_FORWARD = 0x80000,
  MOVEFLAG_PENDING_BACKWARD = 0x100000,
  MOVEFLAG_PENDING_STR_LEFT = 0x200000,
  MOVEFLAG_PENDING_STR_RGHT = 0x400000,
  MOVEFLAG_PEND_MOVE_MASK = 0x180000,
  MOVEFLAG_PEND_STRAFE_MASK = 0x600000,
  MOVEFLAG_PENDING_MASK = 0x7F0000,
  MOVEFLAG_MOVED = 0x800000,
  MOVEFLAG_SLIDING = 0x1000000,
  MOVEFLAG_SWIMMING = 0x2000000,
  MOVEFLAG_SPLINE_MOVER = 0x4000000,
  MOVEFLAG_SPEED_DIRTY = 0x8000000,
  MOVEFLAG_HALTED = 0x10000000,
  MOVEFLAG_NUDGE = 0x20000000,
  MOVEFLAG_FALL_MASK = 0x100C000,
  MOVEFLAG_LOCAL = 0x500F400,
  MOVEFLAG_MOVE_MASK = 0x3,
  MOVEFLAG_TURN_MASK = 0x30,
  MOVEFLAG_PITCH_MASK = 0xC0,
  MOVEFLAG_STRAFE_MASK = 0xC,
  MOVEFLAG_MOTION_MASK = 0xFF,
  MOVEFLAG_STOPPED_MASK = 0x3100F,
};

/* 222 */
enum UNITSTANDSTATE : __int32
{
  UNIT_STANDING = 0x0,
  UNIT_SITTING = 0x1,
  UNIT_SITTINGCHAIR = 0x2,
  UNIT_SLEEPING = 0x3,
  UNIT_SITTINGCHAIRLOW = 0x4,
  UNIT_FIRSTCHAIRSIT = 0x4,
  UNIT_SITTINGCHAIRMEDIUM = 0x5,
  UNIT_SITTINGCHAIRHIGH = 0x6,
  UNIT_LASTCHAIRSIT = 0x6,
  UNIT_DEAD = 0x7,
  UNIT_KNEEL = 0x8,
  UNIT_NUMSTANDSTATES = 0x9,
  UNIT_NUMCHAIRSTATES = 0x3,
};

/* 223 */
enum ITEM_STATIC_FLAGS : __int32
{
  ITEM_FLAG_NO_PICKUP = 0x1,
  ITEM_FLAG_CONJURED = 0x2,
  ITEM_FLAG_HAS_LOOT = 0x4,
  ITEM_FLAG_EXOTIC = 0x8,
  ITEM_FLAG_DEPRECATED = 0x10,
  ITEM_FLAG_OBSOLETE = 0x20,
  ITEM_FLAG_PLAYERCAST = 0x40,
  ITEM_FLAG_NO_EQUIPCOOLDOWN = 0x80,
  ITEM_FLAG_INTBONUSINSTEAD = 0x100,
  ITEM_FLAG_IS_WRAPPER = 0x200,
  ITEM_FLAG_USES_RESOURCES = 0x400,
  ITEM_FLAG_MULTI_DROP = 0x800,
  ITEM_FLAG_BRIEFSPELLEFFECTS = 0x1000,
  ITEM_FLAG_PETITION = 0x2000,
  MAX_ITEM_FLAG = 0x8000,
  ITEM_FLAG_NUM = 0xE,
};

/* 224 */
enum WEAPONSWING_SOUNDTYPES : __int32
{
  WEAPONSWING_LIGHT = 0x0,
  WEAPONSWING_MEDIUM = 0x1,
  WEAPONSWING_HEAVY = 0x2,
  NUM_WEAPONSWINGSOUNDTYPES = 0x3,
  WEAPONSWING_UNUSED = 0xFFFFFFFF,
};

/* 225 */
enum UNITEFFECTATTACHPPOINT : __int32
{
  UNITEFFECT_ATTACHBASE = 0x0,
  UNITEFFECT_ATTACHHEAD = 0x1,
  UNITEFFECT_ATTACHLEFTHAND = 0x2,
  UNITEFFECT_ATTACHRIGHTHAND = 0x3,
  UNITEFFECT_ATTACHNONE = 0x4,
  UNITEFFECT_ATTACHBREATH = 0x5,
  UNITEFFECT_ATTACHCHEST = 0x6,
  UNITEFFECT_ATTACHSPECIAL1 = 0x7,
  UNITEFFECT_ATTACHSPECIAL2 = 0x8,
  UNITEFFECT_ATTACHSPECIAL3 = 0x9,
  UNITEFFECT_ATTACHCHESTBLOODBACK = 0xA,
  UNITEFFECT_ATTACHCHESTBLOODFRONT = 0xB,
  NUM_UNITEFFECTATTACHPOINTS = 0xC,
  UNITEFFECT_INVALID = 0xFFFFFFFF,
};

/* 226 */
enum INTERACTICONTYPE : __int32
{
  INTERACTICON_NONE = 0x0,
  INTERACTICON_NORMAL = 0x1,
  INTERACTICON_COMPLETION = 0x2,
  INTERACTICON_FUTURE = 0x3,
  INTERACTICON_TAXINODE = 0x4,
  INTERACTICON_BINDER = 0x5,
  INTERACTICON_NUMITEMS = 0x6,
};

/* 227 */
enum UNITEFFECTSPECIALS : __int32
{
  SPECIALEFFECT_LOOTART = 0x0,
  SPECIALEFFECT_LEVELUP = 0x1,
  SPECIALEFFECT_FOOTSTEPSPRAYSNOW = 0x2,
  SPECIALEFFECT_FOOTSTEPSPRAYSNOWWALK = 0x3,
  SPECIALEFFECT_FOOTSTEPDIRT = 0x4,
  SPECIALEFFECT_FOOTSTEPDIRTWALK = 0x5,
  SPECIALEFFECT_COLDBREATH = 0x6,
  SPECIALEFFECT_UNDERWATERBUBBLES = 0x7,
  SPECIALEFFECT_COMBATBLOODSPURTFRONT = 0x8,
  SPECIALEFFECT_UNUSED = 0x9,
  SPECIALEFFECT_COMBATBLOODSPURTBACK = 0xA,
  SPECIALEFFECT_HITSPLATPHYSICALSMALL = 0xB,
  SPECIALEFFECT_HITSPLATPHYSICALBIG = 0xC,
  SPECIALEFFECT_HITSPLATHOLYSMALL = 0xD,
  SPECIALEFFECT_HITSPLATHOLYBIG = 0xE,
  SPECIALEFFECT_HITSPLATFIRESMALL = 0xF,
  SPECIALEFFECT_HITSPLATFIREBIG = 0x10,
  SPECIALEFFECT_HITSPLATNATURESMALL = 0x11,
  SPECIALEFFECT_HITSPLATNATUREBIG = 0x12,
  SPECIALEFFECT_HITSPLATFROSTSMALL = 0x13,
  SPECIALEFFECT_HITSPLATFROSTBIG = 0x14,
  SPECIALEFFECT_HITSPLATSHADOWSMALL = 0x15,
  SPECIALEFFECT_HITSPLATSHADOWBIG = 0x16,
  SPECIALEFFECT_COMBATBLOODSPURTFRONTLARGE = 0x17,
  SPECIALEFFECT_COMBATBLOODSPURTBACKLARGE = 0x18,
  SPECIALEFFECT_FIZZLEPHYSICAL = 0x19,
  SPECIALEFFECT_FIZZLEHOLY = 0x1A,
  SPECIALEFFECT_FIZZLEFIRE = 0x1B,
  SPECIALEFFECT_FIZZLENATURE = 0x1C,
  SPECIALEFFECT_FIZZLEFROST = 0x1D,
  SPECIALEFFECT_FIZZLESHADOW = 0x1E,
  SPECIALEFFECT_COMBATBLOODSPURTGREENFRONT = 0x1F,
  SPECIALEFFECT_COMBATBLOODSPURTGREENFRONTLARGE = 0x20,
  SPECIALEFFECT_COMBATBLOODSPURTGREENBACK = 0x21,
  SPECIALEFFECT_COMBATBLOODSPURTGREENBACKLARGE = 0x22,
  SPECIALEFFECT_FOOTSTEPSPRAYWATER = 0x23,
  SPECIALEFFECT_FOOTSTEPSPRAYWATERWALK = 0x24,
  SPECIALEFFECT_CHARACTERSHAPESHIFT = 0x25,
  SPECIALEFFECT_COMBATBLOODSPURTBLACKFRONT = 0x26,
  SPECIALEFFECT_COMBATBLOODSPURTBLACKFRONTLARGE = 0x27,
  SPECIALEFFECT_COMBATBLOODSPURTBLACKBACK = 0x28,
  SPECIALEFFECT_COMBATBLOODSPURTBLACKBACKLARGE = 0x29,
  SPECIALEFFECT_RES_EFFECT = 0x2A,
  NUM_UNITEFFECTSPECIALS = 0x2B,
  SPECIALEFFECT_NONE = 0xFFFFFFFF,
};

/* 228 */
enum ITEM_DYNAMIC_FLAGS : __int32
{
  ITEM_DFLAG_BOUND = 0x1,
  ITEM_DFLAG_TRANSLATED = 0x2,
  ITEM_DFLAG_UNLOCKED = 0x4,
  ITEM_DFLAG_WRAPPED = 0x8,
};

/* 229 */
enum ANIMQUEUETYPE : __int32
{
  ANIMQUEUE_NONE = 0x0,
  ANIMQUEUE_ATTACK = 0x1,
  ANIMQUEUE_WOUND = 0x2,
  ANIMQUEUE_SITDOWN = 0x3,
  ANIMQUEUE_SITUP = 0x4,
  ANIMQUEUE_SLEEPDOWN = 0x5,
  ANIMQUEUE_SLEEPUP = 0x6,
  ANIMQUEUE_SITCHAIR = 0x7,
  ANIMQUEUE_SITCHAIRUP = 0x8,
  ANIMQUEUE_SITCHAIRLOW = 0x9,
  ANIMQUEUE_SITCHAIRMEDIUM = 0xA,
  ANIMQUEUE_SITCHAIRHIGH = 0xB,
  ANIMQUEUE_DEAD = 0xC,
  ANIMQUEUE_KNEELDOWN = 0xD,
  ANIMQUEUE_KNEELUP = 0xE,
  ANIMQUEUE_NUMTYPES = 0xF,
};

/* 230 */
enum AI_REACTION : __int32
{
  AI_REACT_ALERT = 0x0,
  AI_REACT_FRIENDLY = 0x1,
  AI_REACT_HOSTILE = 0x2,
  AI_REACT_AFRAID = 0x3,
  NUM_AI_REACTIONS = 0x4,
};

/* 231 */
enum UNIT_REACTION : __int32
{
  UNIT_REACTION_HATED = 0x0,
  UNIT_REACTION_HOSTILE = 0x1,
  UNIT_REACTION_UNFRIENDLY = 0x2,
  UNIT_REACTION_NEUTRAL = 0x3,
  UNIT_REACTION_AMIABLE = 0x4,
  UNIT_REACTION_FRIENDLY = 0x5,
  UNIT_REACTION_REVERED = 0x6,
  NUM_UNIT_REACTIONS = 0x7,
};

/* 232 */
enum CGCameraMotion : __int32
{
  CAMERA_MOVE_IN = 0x0,
  CAMERA_MOVE_OUT = 0x1,
  CAMERA_MOVE_RIGHT = 0x2,
  CAMERA_MOVE_LEFT = 0x3,
  CAMERA_MOVE_UP = 0x4,
  CAMERA_MOVE_DOWN = 0x5,
  NUM_CAMERA_MOTIONS = 0x6,
};

/* 233 */
enum MISS_REASON : __int32
{
  MISS_NONE = 0x0,
  MISS_PHYSICAL = 0x1,
  MISS_RESIST = 0x2,
  MISS_IMMUNE = 0x3,
  MISS_EVADED = 0x4,
  MISS_DODGED = 0x5,
  MISS_PARRIED = 0x6,
  MISS_BLOCKED = 0x7,
  MISS_TEMPIMMUNE = 0x8,
  MISS_DEFLECTED = 0x9,
  MISS_NUMMISSTYPES = 0xA,
};

/* 234 */
enum BAG_RESULT : __int32
{
  BAG_OK = 0x0,
  BAG_LEVEL_MISMATCH = 0x1,
  BAG_SKILL_MISMATCH = 0x2,
  BAG_SLOT_MISMATCH = 0x3,
  BAG_FULL = 0x4,
  BAG_NO_BAGS_IN_BAGS = 0x5,
  BAG_AMMO_ONLY = 0x6,
  BAG_PROFICIENCY_NEEDED = 0x7,
  BAG_NO_SLOTS_AVAILABLE = 0x8,
  BAG_CLASS_NOTALLOWED = 0x9,
  BAG_RACE_NOTALLOWED = 0xA,
  BAG_2HWEAPON_ITEMEXISTSINOFFHAND = 0xB,
  BAG_2HWEAPONBEINGWIELDED = 0xC,
  BAG_2HWEAPON_SKILLNOTFOUND = 0xD,
  BAG_ITEM_CLASS_MISMATCH = 0xE,
  BAG_ITEM_SUBTYPE_MISMATCH = 0xF,
  BAG_ITEM_MAX_COUNT_EXCEEDED = 0x10,
  BAG_SLOT_NOT_EMPTY = 0x11,
  BAG_CANT_STACK = 0x12,
  BAG_NOT_EQUIPPABLE = 0x13,
  BAG_CANT_SWAP = 0x14,
  BAG_SLOT_EMPTY = 0x15,
  BAG_ITEM_NOT_FOUND = 0x16,
  BAG_ITEM_ALREADY_BOUND = 0x17,
  BAG_DROP_TOO_FAR_AWAY = 0x18,
  BAG_ITEM_TOO_FEW_TO_SPLIT = 0x19,
  BAG_ITEM_SPLIT_FAILED = 0x1A,
  BAG_CANT_CAST_ENCHANTMENT = 0x1B,
  BAG_NOT_ENOUGH_GOLD = 0x1C,
  BAG_NOT_A_CONTAINER = 0x1D,
  BAG_NOT_EMPTY = 0x1E,
  BAG_NOT_OWNER = 0x1F,
  BAG_ONLY_ONE_QUIVER = 0x20,
  BAG_NOBANKSLOT = 0x21,
  BAG_NOBANKHERE = 0x22,
  BAG_ITEM_LOCKED = 0x23,
  BAG_NOT_WHILE_DEAD = 0x24,
  BAG_CLIENT_LOCKED_OUT = 0x25,
  BAG_ERROR = 0x26,
  BAG_ONLY_ONE_BOLT = 0x27,
  BAG_ONLY_ONE_AMMO = 0x28,
  BAG_CANT_WRAP_STACKABLE = 0x29,
  BAG_CANT_WRAP_EQUIPPED = 0x2A,
  BAG_CANT_WRAP_WRAPPED = 0x2B,
  BAG_CANT_WRAP_BOUND = 0x2C,
  BAG_CANT_WRAP_UNIQUE = 0x2D,
  BAG_CANT_WRAP_BAGS = 0x2E,
  BAG_LOOT_GONE = 0x2F,
  BAG_INV_FULL = 0x30,
  BAG_SOLD_OUT = 0x31,
  BAG_DONT_LIKE_YOU = 0x32,
  BAG_UNKNOWN_ITEM = 0x33,
  BAG_STACK_COUNT_EXCEEDED = 0x34,
  BAG_QUANTITY_ZERO = 0x35,
  BAG_DONT_HAVE_THAT_MANY = 0x36,
};

/* 235 */
enum $4252CA05D7D5FB1CD8B819CA4FD5F451 : __int32
{
  OSGUI_MESSAGE_STYLE_OK = 0x0,
  OSGUI_MESSAGE_STYLE_OKCANCEL = 0x1,
  OSGUI_MESSAGE_STYLE_YESNO = 0x2,
  OSGUI_MESSAGE_STYLE_YESNOCANCEL = 0x3,
};

/* 236 */
enum $30D03471C9E2C285B715337ABA7452D2 : __int32
{
  DRAWLAYER_BACKGROUND = 0x0,
  DRAWLAYER_BACKGROUND_BORDER = 0x1,
  DRAWLAYER_ARTWORK = 0x2,
  DRAWLAYER_ARTWORK_OVERLAY = 0x3,
  DRAWLAYER_HIGHLIGHT = 0x4,
  NUM_SIMPLEFRAME_DRAWLAYERS = 0x5,
};

/* 237 */
enum $7C252D7BACCBCA7BC102428E3CB83EED : __int32
{
  OSGUI_MESSAGE_RESULT_YESOK = 0x0,
  OSGUI_MESSAGE_RESULT_NO = 0x1,
  OSGUI_MESSAGE_RESULT_CANCEL = 0x2,
};

/* 238 */
enum $987DA2F40057EFBEAD2696D6C54B899C : __int32
{
  OSGUI_KEY_CONTROL = 0x0,
  OSGUI_KEY_SHIFT = 0x1,
  OSGUI_KEY_ALT = 0x2,
  OSGUI_NUM_MOD_KEYS = 0x3,
};

/* 239 */
enum $621BBF7623A8F450FE315AF3F0F7D5C2 : __int32
{
  OSGUI_COLOR_DIALOG_BACKGROUND = 0x0,
  OSGUI_COLOR_CONTROL_BACKGROUND = 0x1,
  NUM_OSGUI_COLORS = 0x2,
};

/* 240 */
enum $D79A68A4ED339769BAF084E945F2734D : __int32
{
  OS_INPUT_IME_NOTIFYLANGUAGE = 0x0,
  OS_INPUT_IME_STARTCOMPOSITION = 0x1,
  OS_INPUT_IME_COMPOSITION = 0x2,
  OS_INPUT_IME_OPENCANDIDATES = 0x3,
  OS_INPUT_IME_CHANGECANDIDATES = 0x4,
  OS_INPUT_IME_CLOSECANDIDATES = 0x5,
  OS_INPUT_IME_ENDCOMPOSITION = 0x6,
};

/* 241 */
enum $8E8DB83206B429DBC2C4B91FC8DF562A : __int32
{
  FRAME_STRATA_BACKGROUND = 0x0,
  FRAME_STRATA_LOW = 0x1,
  FRAME_STRATA_MEDIUM = 0x2,
  FRAME_STRATA_HIGH = 0x3,
  FRAME_STRATA_DIALOG = 0x4,
  FRAME_STRATA_TOOLTIP = 0x5,
  NUM_FRAME_STRATA = 0x6,
};

/* 242 */
enum CSimpleEventType : __int32
{
  SIMPLE_EVENT_CHAR = 0x0,
  SIMPLE_EVENT_KEY = 0x1,
  SIMPLE_EVENT_MOUSE = 0x2,
  SIMPLE_EVENT_MOUSEWHEEL = 0x3,
  NUM_SIMPLE_EVENTS = 0x4,
};

/* 243 */
enum TOOLTIP_ANCHORPOINT : __int32
{
  TOOLTIP_ANCHOR_LEFT = 0x0,
  TOOLTIP_ANCHOR_RIGHT = 0x1,
  TOOLTIP_ANCHOR_BOTTOMLEFT = 0x2,
  TOOLTIP_ANCHOR_BOTTOMRIGHT = 0x3,
  TOOLTIP_ANCHOR_FIXED = 0x4,
  TOOLTIP_ANCHOR_CURSOR = 0x5,
  TOOLTIP_ANCHOR_NONE = 0x6,
};

/* 244 */
enum TOOLTIP_DETAIL : __int32
{
  TOOLTIP_DETAIL_GENERIC = 0x0,
  TOOLTIP_DETAIL_NORMAL = 0x1,
  TOOLTIP_DETAIL_VERBOSE = 0x2,
};

/* 245 */
enum FRAMEPOINT : __int32
{
  FRAMEPOINT_TOPLEFT = 0x0,
  FRAMEPOINT_TOP = 0x1,
  FRAMEPOINT_TOPRIGHT = 0x2,
  FRAMEPOINT_LEFT = 0x3,
  FRAMEPOINT_CENTER = 0x4,
  FRAMEPOINT_RIGHT = 0x5,
  FRAMEPOINT_BOTTOMLEFT = 0x6,
  FRAMEPOINT_BOTTOM = 0x7,
  FRAMEPOINT_BOTTOMRIGHT = 0x8,
  FRAMEPOINT_NUMPOINTS = 0x9,
};

/* 246 */
enum $58F98874D8E12171491895DB251C8FB9 : __int32
{
  OSGUI_CONTROL_BUTTON = 0x0,
  OSGUI_CONTROL_IMAGEBUTTON = 0x1,
  OSGUI_CONTROL_STATICTEXT = 0x2,
  OSGUI_CONTROL_STATICIMAGE = 0x3,
  OSGUI_CONTROL_EDITBOX = 0x4,
  OSGUI_CONTROL_POPUPMENU = 0x5,
  OSGUI_CONTROL_LISTBOX = 0x6,
  OSGUI_CONTROL_CHECKBOX = 0x7,
  OSGUI_CONTROL_PROGRESSBAR = 0x8,
  OSGUI_CONTROL_SLIDER = 0x9,
  OSGUI_CONTROL_TREEVIEW = 0xA,
  OSGUI_CONTROL_TEXTBUTTON = 0xB,
  OSGUI_CONTROL_STATICBOX = 0xC,
  OSGUI_CONTROL_SPINBUTTON = 0xD,
  OSGUI_CONTROL_RADIOBUTTON = 0xE,
  OSGUI_CONTROL_TABCONTROL = 0xF,
  OSGUI_CONTROL_LISTVIEW = 0x10,
  OSGUI_CONTROL_TOOLBAR = 0x11,
  OSGUI_CONTROL_SCROLLBAR = 0x12,
  OSGUI_CONTROL_DIVIDER = 0x13,
  NUM_OSGUI_CONTROL_TYPES = 0x14,
};

/* 247 */
enum WorldCullStatus : __int32
{
  WorldCull_outside = 0x0,
  WorldCull_inside = 0x1,
  WorldCull_intersect = 0x2,
  WorldCull_notOutside = 0x3,
  WorldCull_count = 0x4,
};

/* 248 */
enum $8D38A44AA6FB4C3BAA50161B72289F50 : __int32
{
  OSGUI_JUSTIFY_LEFT = 0x0,
  OSGUI_JUSTIFY_CENTER = 0x1,
  OSGUI_JUSTIFY_RIGHT = 0x2,
};

/* 249 */
enum FRAMESCRIPT_GENDER : __int32
{
  GENDER_NOT_APPLICABLE = 0x0,
  GENDER_NONE = 0x1,
  GENDER_MALE = 0x2,
  GENDER_FEMALE = 0x3,
  GENDER_MALE_PLURAL = 0x4,
  GENDER_FEMALE_PLURAL = 0x5,
  GENDER_MIXED_PLURAL = 0x6,
};

/* 250 */
enum $308929173AA7A6BC37070C888F2F018D : __int32
{
  OSGUI_ITEM_DIALOG = 0xFFFFFFFF,
  OSGUI_ITEM_MENU = 0xFFFFFFFE,
  OSGUI_ITEM_CONTEXTMENU = 0xFFFFFFFD,
};

/* 251 */
enum $B77EDDA5D6A14B38F38DD6823FD864AA : __int32
{
  OSGUI_EVENT_CLICKED = 0x0,
  OSGUI_EVENT_DOUBLECLICKED = 0x1,
  OSGUI_EVENT_VALCHANGED = 0x2,
  OSGUI_EVENT_MOUSEENTER = 0x3,
  OSGUI_EVENT_MOUSELEAVE = 0x4,
  OSGUI_EVENT_MOUSEUP = 0x5,
  OSGUI_EVENT_CLOSE = 0x6,
  OSGUI_EVENT_RESIZE = 0x7,
  OSGUI_EVENT_TVEDITDONE = 0x8,
  OSGUI_EVENT_RETURN = 0x9,
  OSGUI_EVENT_DELETE = 0xA,
  OSGUI_EVENT_TAB = 0xB,
  OSGUI_EVENT_EDITRETURN = 0xC,
  OSGUI_EVENT_LOSEFOCUS = 0xD,
  OSGUI_EVENT_GAINFOCUS = 0xE,
  OSGUI_EVENT_LVCOLUMNCLICK = 0xF,
  OSGUI_EVENT_LVCOLUMNCHANGE = 0x10,
  OSGUI_EVENT_ENTERCONTEXTMENU = 0x11,
  OSGUI_EVENT_ACTIVATED = 0x12,
  OSGUI_EVENT_EDITSELCHANGED = 0x13,
  OSGUI_NUM_EVENTS = 0x14,
};

/* 252 */
enum $8440C69F3F8C17E54FE4C8FDA6211D4B : __int32
{
  OSGUI_FONT_SMALL = 0x0,
  OSGUI_FONT_LARGE = 0x1,
  OSGUI_FONT_MONO = 0x2,
  OSGUI_NUM_FONTS = 0x3,
};

/* 253 */
enum $5D51E2D207D31E6F1798D58B49FF7DBF : __int32
{
  OSGUI_CBACTION_CUT = 0x0,
  OSGUI_CBACTION_COPY = 0x1,
  OSGUI_CBACTION_PASTE = 0x2,
  OSGUI_CBACTION_CLEAR = 0x3,
  OSGUI_CBACTION_SELECTALL = 0x4,
  OSGUI_CBACTION_UNDO = 0x5,
  OSGUI_NUM_CBACTIONS = 0x6,
};

/* 254 */
enum $8F1FAB53B180AB8EC2B9AAE6545FE46D : __int32
{
  ENV_EFFECT_SKY = 0x1,
  ENV_EFFECT_TERRAIN = 0x2,
  ENV_EFFECT_UNITS = 0x4,
};

/* 255 */
enum FRIEND_RESULT : __int32
{
  FRIEND_DB_ERROR = 0x0,
  FRIEND_LIST_FULL = 0x1,
  FRIEND_ONLINE = 0x2,
  FRIEND_OFFLINE = 0x3,
  FRIEND_NOT_FOUND = 0x4,
  FRIEND_REMOVED = 0x5,
  FRIEND_ADDED_ONLINE = 0x6,
  FRIEND_ADDED_OFFLINE = 0x7,
  FRIEND_ALREADY = 0x8,
  FRIEND_SELF = 0x9,
  FRIEND_ENEMY = 0xA,
  FRIEND_IGNORE_FULL = 0xB,
  FRIEND_IGNORE_SELF = 0xC,
  FRIEND_IGNORE_NOT_FOUND = 0xD,
  FRIEND_IGNORE_ALREADY = 0xE,
  FRIEND_IGNORE_ADDED = 0xF,
  FRIEND_IGNORE_REMOVED = 0x10,
};

/* 256 */
enum $6944710F295C164BBFF9A4F2E5482B4A : __int32
{
  OSGUI_SCROLL_THUMBPOS = 0x0,
  OSGUI_SCROLL_THUMBTRACK = 0x1,
  OSGUI_SCROLL_LINEDOWN = 0x2,
  OSGUI_SCROLL_LINEUP = 0x3,
  OSGUI_SCROLL_PAGEDOWN = 0x4,
  OSGUI_SCROLL_PAGEUP = 0x5,
  OSGUI_SCROLL_BOTTOM = 0x6,
  OSGUI_SCROLL_TOP = 0x7,
};

/* 257 */
enum $DAA8B1CEE62C3BCE9521BAC10E7104CE : __int32
{
  OSGUI_TVDD_BEGIN = 0x0,
  OSGUI_TVDD_TARGET = 0x1,
  OSGUI_TVDD_END = 0x2,
};

/* 258 */
enum SLASH_COMMAND_ID : __int32
{
  SLASH_CMD_SAY = 0x0,
  SLASH_CMD_PARTY = 0x1,
  SLASH_CMD_GUILD = 0x2,
  SLASH_CMD_OFFICER = 0x3,
  SLASH_CMD_YELL = 0x4,
  SLASH_CMD_WHISPER = 0x5,
  SLASH_CMD_WHISPER_INFORM = 0x6,
  SLASH_CMD_EMOTE = 0x7,
  SLASH_CMD_TEXT_EMOTE = 0x8,
  SLASH_CMD_SYSTEM = 0x9,
  SLASH_CMD_MONSTER_SAY = 0xA,
  SLASH_CMD_MONSTER_YELL = 0xB,
  SLASH_CMD_MONSTER_EMOTE = 0xC,
  SLASH_CMD_SEND_CHANNEL = 0xD,
  SLASH_CMD_JOIN_CHANNEL = 0xE,
  SLASH_CMD_LEAVE_CHANNEL = 0xF,
  SLASH_CMD_LIST_CHANNEL = 0x10,
  SLASH_CMD_CHANNEL_NOTICE = 0x11,
  SLASH_CMD_CHANNEL_NOTICE_USER = 0x12,
  SLASH_CMD_SEND_AFK = 0x13,
  SLASH_CMD_SEND_DND = 0x14,
  SLASH_CMD_COMBAT_LOG = 0x15,
  SLASH_CMD_IGNORED = 0x16,
  SLASH_CMD_SKILL = 0x17,
  SLASH_CMD_LOOT = 0x18,
  SLASH_CMD_COMBAT_LOG_ENEMY = 0x19,
  SLASH_CMD_COMBAT_LOG_SELF = 0x1A,
  SLASH_CMD_COMBAT_LOG_PARTY = 0x1B,
  SLASH_CMD_COMBAT_LOG_ERROR = 0x1C,
  SLASH_CMD_COMBAT_LOG_MISC_INFO = 0x1D,
  NUM_SLASH_CMDS = 0x1E,
};

/* 259 */
enum $51E0FF058BBCFADCA9F771702D491ED2 : __int32
{
  MODEL_GEO_UNSHADED = 0x1,
  MODEL_GEO_TWOSIDED = 0x10,
  MODEL_GEO_UNFOGGED = 0x20,
  MODEL_GEO_NO_DEPTH_TEST = 0x40,
  MODEL_GEO_NO_DEPTH_SET = 0x80,
};

/* 260 */
enum $38C40DB9281124935A9A773B79768590 : __int32
{
  OSGUI_CURSOR_ARROW = 0x0,
  OSGUI_CURSOR_BUSY = 0x1,
  OSGUI_CURSOR_SIZE_HORIZONTAL = 0x2,
  OSGUI_CURSOR_SIZE_VERTICAL = 0x3,
  OSGUI_NUM_CURSORS = 0x4,
};

/* 261 */
enum $866C9466DA41339987A10CC885461D28 : __int32
{
  OSGUI_WINDOW_TYPE_GX = 0x0,
  OSGUI_WINDOW_TYPE_ACTIVE = 0x1,
  OSGUI_WINDOW_TYPE_FRONT = 0x2,
  NUM_OSGUI_WINDOW_TYPES = 0x3,
};

/* 262 */
enum $96B7F382980F87AE479D48EBFBA0F655 : __int32
{
  OSFILE_ASSOC_DESCRIPTION = 0x0,
  OSFILE_ASSOC_OPENCOMMAND = 0x1,
  NUM_OSFILE_ASSOC = 0x2,
};

/* 263 */
enum $4A79836F2B7BF16E6E9428364D2F1131 : __int32
{
  OS_FILE_DIALOG_OPEN = 0x0,
  OS_FILE_DIALOG_SAVE = 0x1,
};

/* 264 */
enum CGlueMgr::GLUE_IDLE_STATE : __int32
{
  IDLE_NONE = 0x0,
  IDLE_ACCOUNT_LOGIN = 0x1,
  IDLE_CHARACTER_LIST = 0x2,
  IDLE_REALM_LIST = 0x3,
  IDLE_CREATE_CHARACTER = 0x4,
  IDLE_DELETE_CHARACTER = 0x5,
  IDLE_ENTER_WORLD = 0x6,
  IDLE_WORLD_LOGIN = 0x7,
};

/* 265 */
enum $E48B3441710179CA145E894A78B99A4B : __int32
{
  SMEM_OPEN_NEW = 0x0,
  SMEM_OPEN_EXISTING = 0x1,
  SMEM_OPEN_ALWAYS = 0x2,
  SMEM_OPEN_READONLY = 0x3,
};

/* 266 */
enum $5B6442B3196A0306A89647C15DA940A8 : __int32
{
  SMEM_ACCESS_READ = 0x0,
  SMEM_ACCESS_WRITE = 0x1,
};

/* 267 */
enum $F5DBD288D0814CC20FC38629810A7EDC : __int32
{
  ENTRIES = 0x100,
};

/* 268 */
enum tagTYSPEC : __int32
{
  TYSPEC_CLSID = 0x0,
  TYSPEC_FILEEXT = 0x1,
  TYSPEC_MIMETYPE = 0x2,
  TYSPEC_FILENAME = 0x3,
  TYSPEC_PROGID = 0x4,
  TYSPEC_PACKAGENAME = 0x5,
  TYSPEC_OBJECTID = 0x6,
};

/* 269 */
enum tagDOMNodeType : __int32
{
  NODE_INVALID = 0x0,
  NODE_ELEMENT = 0x1,
  NODE_ATTRIBUTE = 0x2,
  NODE_TEXT = 0x3,
  NODE_CDATA_SECTION = 0x4,
  NODE_ENTITY_REFERENCE = 0x5,
  NODE_ENTITY = 0x6,
  NODE_PROCESSING_INSTRUCTION = 0x7,
  NODE_COMMENT = 0x8,
  NODE_DOCUMENT = 0x9,
  NODE_DOCUMENT_TYPE = 0xA,
  NODE_DOCUMENT_FRAGMENT = 0xB,
  NODE_NOTATION = 0xC,
};

/* 270 */
enum tagXMLEMEM_TYPE : __int32
{
  XMLELEMTYPE_ELEMENT = 0x0,
  XMLELEMTYPE_TEXT = 0x1,
  XMLELEMTYPE_COMMENT = 0x2,
  XMLELEMTYPE_DOCUMENT = 0x3,
  XMLELEMTYPE_DTD = 0x4,
  XMLELEMTYPE_PI = 0x5,
  XMLELEMTYPE_OTHER = 0x6,
};

/* 271 */
enum tagCALLCONV : __int32
{
  CC_FASTCALL = 0x0,
  CC_CDECL = 0x1,
  CC_MSCPASCAL = 0x2,
  CC_PASCAL = 0x2,
  CC_MACPASCAL = 0x3,
  CC_STDCALL = 0x4,
  CC_FPFASTCALL = 0x5,
  CC_SYSCALL = 0x6,
  CC_MPWCDECL = 0x7,
  CC_MPWPASCAL = 0x8,
  CC_MAX = 0x9,
};

/* 272 */
enum tagVARKIND : __int32
{
  VAR_PERINSTANCE = 0x0,
  VAR_STATIC = 0x1,
  VAR_CONST = 0x2,
  VAR_DISPATCH = 0x3,
};

/* 273 */
enum __MIDL_ICodeInstall_0001 : __int32
{
  CIP_DISK_FULL = 0x0,
  CIP_ACCESS_DENIED = 0x1,
  CIP_NEWER_VERSION_EXISTS = 0x2,
  CIP_OLDER_VERSION_EXISTS = 0x3,
  CIP_NAME_CONFLICT = 0x4,
  CIP_TRUST_VERIFICATION_COMPONENT_MISSING = 0x5,
  CIP_EXE_SELF_REGISTERATION_TIMEOUT = 0x6,
  CIP_UNSAFE_TO_ABORT = 0x7,
  CIP_NEED_REBOOT = 0x8,
};

/* 274 */
enum tagURLZONE : __int32
{
  URLZONE_PREDEFINED_MIN = 0x0,
  URLZONE_LOCAL_MACHINE = 0x0,
  URLZONE_INTRANET = 0x1,
  URLZONE_TRUSTED = 0x2,
  URLZONE_INTERNET = 0x3,
  URLZONE_UNTRUSTED = 0x4,
  URLZONE_PREDEFINED_MAX = 0x3E7,
  URLZONE_USER_MIN = 0x3E8,
  URLZONE_USER_MAX = 0x2710,
};

/* 275 */
enum _URLZONEREG : __int32
{
  URLZONEREG_DEFAULT = 0x0,
  URLZONEREG_HKLM = 0x1,
  URLZONEREG_HKCU = 0x2,
};

/* 276 */
enum _SPACTION : __int32
{
  SPACTION_NONE = 0x0,
  SPACTION_MOVING = 0x1,
  SPACTION_COPYING = 0x2,
  SPACTION_RECYCLING = 0x3,
  SPACTION_APPLYINGATTRIBS = 0x4,
  SPACTION_DOWNLOADING = 0x5,
  SPACTION_SEARCHING_INTERNET = 0x6,
  SPACTION_CALCULATING = 0x7,
  SPACTION_UPLOADING = 0x8,
  SPACTION_SEARCHING_FILES = 0x9,
};

/* 277 */
enum tagCHANGEKIND : __int32
{
  CHANGEKIND_ADDMEMBER = 0x0,
  CHANGEKIND_DELETEMEMBER = 0x1,
  CHANGEKIND_SETNAMES = 0x2,
  CHANGEKIND_SETDOCUMENTATION = 0x3,
  CHANGEKIND_GENERAL = 0x4,
  CHANGEKIND_INVALIDATE = 0x5,
  CHANGEKIND_CHANGEFAILED = 0x6,
  CHANGEKIND_MAX = 0x7,
};

/* 278 */
enum ReplacesCorHdrNumericDefines : __int32
{
  COMIMAGE_FLAGS_ILONLY = 0x1,
  COMIMAGE_FLAGS_32BITREQUIRED = 0x2,
  COMIMAGE_FLAGS_IL_LIBRARY = 0x4,
  COMIMAGE_FLAGS_TRACKDEBUGDATA = 0x10000,
  COR_VERSION_MAJOR_V2 = 0x2,
  COR_VERSION_MAJOR = 0x2,
  COR_VERSION_MINOR = 0x0,
  COR_DELETED_NAME_LENGTH = 0x8,
  COR_VTABLEGAP_NAME_LENGTH = 0x8,
  NATIVE_TYPE_MAX_CB = 0x1,
  COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE = 0xFF,
  IMAGE_COR_MIH_METHODRVA = 0x1,
  IMAGE_COR_MIH_EHRVA = 0x2,
  IMAGE_COR_MIH_BASICBLOCK = 0x8,
  COR_VTABLE_32BIT = 0x1,
  COR_VTABLE_64BIT = 0x2,
  COR_VTABLE_FROM_UNMANAGED = 0x4,
  COR_VTABLE_CALL_MOST_DERIVED = 0x10,
  IMAGE_COR_EATJ_THUNK_SIZE = 0x20,
  MAX_CLASS_NAME = 0x400,
  MAX_PACKAGE_NAME = 0x400,
};

/* 279 */
enum LSA_FOREST_TRUST_RECORD_TYPE : __int32
{
  ForestTrustTopLevelName = 0x0,
  ForestTrustTopLevelNameEx = 0x1,
  ForestTrustDomainInfo = 0x2,
  ForestTrustRecordTypeLast = 0x2,
};

/* 280 */
enum SearchCommandExecuteErrors : __int32
{
  SCEE_PATHNOTFOUND = 0x1,
  SCEE_MAXFILESFOUND = 0x2,
  SCEE_INDEXSEARCH = 0x3,
  SCEE_CONSTRAINT = 0x4,
  SCEE_SCOPEMISMATCH = 0x5,
  SCEE_CASESENINDEX = 0x6,
  SCEE_INDEXNOTCOMPLETE = 0x7,
};

/* 281 */
enum tagExtentMode : __int32
{
  DVEXTENT_CONTENT = 0x0,
  DVEXTENT_INTEGRAL = 0x1,
};

/* 282 */
enum OfflineFolderStatus : __int32
{
  OFS_INACTIVE = 0xFFFFFFFF,
  OFS_ONLINE = 0x0,
  OFS_OFFLINE = 0x1,
  OFS_SERVERBACK = 0x2,
  OFS_DIRTYCACHE = 0x3,
};

/* 283 */
enum _tagPARSEACTION : __int32
{
  PARSE_CANONICALIZE = 0x1,
  PARSE_FRIENDLY = 0x2,
  PARSE_SECURITY_URL = 0x3,
  PARSE_ROOTDOCUMENT = 0x4,
  PARSE_DOCUMENT = 0x5,
  PARSE_ANCHOR = 0x6,
  PARSE_ENCODE = 0x7,
  PARSE_DECODE = 0x8,
  PARSE_PATH_FROM_URL = 0x9,
  PARSE_URL_FROM_PATH = 0xA,
  PARSE_MIME = 0xB,
  PARSE_SERVER = 0xC,
  PARSE_SCHEMA = 0xD,
  PARSE_SITE = 0xE,
  PARSE_DOMAIN = 0xF,
  PARSE_LOCATION = 0x10,
  PARSE_SECURITY_DOMAIN = 0x11,
  PARSE_ESCAPE = 0x12,
  PARSE_UNESCAPE = 0x13,
};

/* 284 */
enum _tagPSUACTION : __int32
{
  PSU_DEFAULT = 0x1,
  PSU_SECURITY_URL_ONLY = 0x2,
};

/* 285 */
enum _tagQUERYOPTION : __int32
{
  QUERY_EXPIRATION_DATE = 0x1,
  QUERY_TIME_OF_LAST_CHANGE = 0x2,
  QUERY_CONTENT_ENCODING = 0x3,
  QUERY_CONTENT_TYPE = 0x4,
  QUERY_REFRESH = 0x5,
  QUERY_RECOMBINE = 0x6,
  QUERY_CAN_NAVIGATE = 0x7,
  QUERY_USES_NETWORK = 0x8,
  QUERY_IS_CACHED = 0x9,
  QUERY_IS_INSTALLEDENTRY = 0xA,
  QUERY_IS_CACHED_OR_MAPPED = 0xB,
  QUERY_USES_CACHE = 0xC,
  QUERY_IS_SECURE = 0xD,
  QUERY_IS_SAFE = 0xE,
};

/* 286 */
enum tagBINDSTRING : __int32
{
  BINDSTRING_HEADERS = 0x1,
  BINDSTRING_ACCEPT_MIMES = 0x2,
  BINDSTRING_EXTRA_URL = 0x3,
  BINDSTRING_LANGUAGE = 0x4,
  BINDSTRING_USERNAME = 0x5,
  BINDSTRING_PASSWORD = 0x6,
  BINDSTRING_UA_PIXELS = 0x7,
  BINDSTRING_UA_COLOR = 0x8,
  BINDSTRING_OS = 0x9,
  BINDSTRING_USER_AGENT = 0xA,
  BINDSTRING_ACCEPT_ENCODINGS = 0xB,
  BINDSTRING_POST_COOKIE = 0xC,
  BINDSTRING_POST_DATA_MIME = 0xD,
  BINDSTRING_URL = 0xE,
  BINDSTRING_IID = 0xF,
  BINDSTRING_FLAG_BIND_TO_OBJECT = 0x10,
  BINDSTRING_PTR_BIND_CONTEXT = 0x11,
};

/* 287 */
enum tagBINDSTATUS : __int32
{
  BINDSTATUS_FINDINGRESOURCE = 0x1,
  BINDSTATUS_CONNECTING = 0x2,
  BINDSTATUS_REDIRECTING = 0x3,
  BINDSTATUS_BEGINDOWNLOADDATA = 0x4,
  BINDSTATUS_DOWNLOADINGDATA = 0x5,
  BINDSTATUS_ENDDOWNLOADDATA = 0x6,
  BINDSTATUS_BEGINDOWNLOADCOMPONENTS = 0x7,
  BINDSTATUS_INSTALLINGCOMPONENTS = 0x8,
  BINDSTATUS_ENDDOWNLOADCOMPONENTS = 0x9,
  BINDSTATUS_USINGCACHEDCOPY = 0xA,
  BINDSTATUS_SENDINGREQUEST = 0xB,
  BINDSTATUS_CLASSIDAVAILABLE = 0xC,
  BINDSTATUS_MIMETYPEAVAILABLE = 0xD,
  BINDSTATUS_CACHEFILENAMEAVAILABLE = 0xE,
  BINDSTATUS_BEGINSYNCOPERATION = 0xF,
  BINDSTATUS_ENDSYNCOPERATION = 0x10,
  BINDSTATUS_BEGINUPLOADDATA = 0x11,
  BINDSTATUS_UPLOADINGDATA = 0x12,
  BINDSTATUS_ENDUPLOADDATA = 0x13,
  BINDSTATUS_PROTOCOLCLASSID = 0x14,
  BINDSTATUS_ENCODING = 0x15,
  BINDSTATUS_VERIFIEDMIMETYPEAVAILABLE = 0x16,
  BINDSTATUS_CLASSINSTALLLOCATION = 0x17,
  BINDSTATUS_DECODING = 0x18,
  BINDSTATUS_LOADINGMIMEHANDLER = 0x19,
  BINDSTATUS_CONTENTDISPOSITIONATTACH = 0x1A,
  BINDSTATUS_FILTERREPORTMIMETYPE = 0x1B,
  BINDSTATUS_CLSIDCANINSTANTIATE = 0x1C,
  BINDSTATUS_IUNKNOWNAVAILABLE = 0x1D,
  BINDSTATUS_DIRECTBIND = 0x1E,
  BINDSTATUS_RAWMIMETYPE = 0x1F,
  BINDSTATUS_PROXYDETECTING = 0x20,
  BINDSTATUS_ACCEPTRANGES = 0x21,
  BINDSTATUS_COOKIE_SENT = 0x22,
  BINDSTATUS_COMPACT_POLICY_RECEIVED = 0x23,
  BINDSTATUS_COOKIE_SUPPRESSED = 0x24,
  BINDSTATUS_COOKIE_STATE_UNKNOWN = 0x25,
  BINDSTATUS_COOKIE_STATE_ACCEPT = 0x26,
  BINDSTATUS_COOKIE_STATE_REJECT = 0x27,
  BINDSTATUS_COOKIE_STATE_PROMPT = 0x28,
  BINDSTATUS_COOKIE_STATE_LEASH = 0x29,
  BINDSTATUS_COOKIE_STATE_DOWNGRADE = 0x2A,
  BINDSTATUS_POLICY_HREF = 0x2B,
  BINDSTATUS_P3P_HEADER = 0x2C,
  BINDSTATUS_SESSION_COOKIE_RECEIVED = 0x2D,
  BINDSTATUS_PERSISTENT_COOKIE_RECEIVED = 0x2E,
  BINDSTATUS_SESSION_COOKIES_ALLOWED = 0x2F,
};

/* 288 */
enum VARENUM : __int32
{
  VT_EMPTY = 0x0,
  VT_NULL = 0x1,
  VT_I2 = 0x2,
  VT_I4 = 0x3,
  VT_R4 = 0x4,
  VT_R8 = 0x5,
  VT_CY = 0x6,
  VT_DATE = 0x7,
  VT_BSTR = 0x8,
  VT_DISPATCH = 0x9,
  VT_ERROR = 0xA,
  VT_BOOL = 0xB,
  VT_VARIANT = 0xC,
  VT_UNKNOWN = 0xD,
  VT_DECIMAL = 0xE,
  VT_I1 = 0x10,
  VT_UI1 = 0x11,
  VT_UI2 = 0x12,
  VT_UI4 = 0x13,
  VT_I8 = 0x14,
  VT_UI8 = 0x15,
  VT_INT = 0x16,
  VT_UINT = 0x17,
  VT_VOID = 0x18,
  VT_HRESULT = 0x19,
  VT_PTR = 0x1A,
  VT_SAFEARRAY = 0x1B,
  VT_CARRAY = 0x1C,
  VT_USERDEFINED = 0x1D,
  VT_LPSTR = 0x1E,
  VT_LPWSTR = 0x1F,
  VT_RECORD = 0x24,
  VT_INT_PTR = 0x25,
  VT_UINT_PTR = 0x26,
  VT_FILETIME = 0x40,
  VT_BLOB = 0x41,
  VT_STREAM = 0x42,
  VT_STORAGE = 0x43,
  VT_STREAMED_OBJECT = 0x44,
  VT_STORED_OBJECT = 0x45,
  VT_BLOB_OBJECT = 0x46,
  VT_CF = 0x47,
  VT_CLSID = 0x48,
  VT_VERSIONED_STREAM = 0x49,
  VT_BSTR_BLOB = 0xFFF,
  VT_VECTOR = 0x1000,
  VT_ARRAY = 0x2000,
  VT_BYREF = 0x4000,
  VT_RESERVED = 0x8000,
  VT_ILLEGAL = 0xFFFF,
  VT_ILLEGALMASKED = 0xFFF,
  VT_TYPEMASK = 0xFFF,
};

/* 289 */
enum PIDMSI_STATUS_VALUE : __int32
{
  PIDMSI_STATUS_NORMAL = 0x0,
  PIDMSI_STATUS_NEW = 0x1,
  PIDMSI_STATUS_PRELIM = 0x2,
  PIDMSI_STATUS_DRAFT = 0x3,
  PIDMSI_STATUS_INPROGRESS = 0x4,
  PIDMSI_STATUS_EDIT = 0x5,
  PIDMSI_STATUS_REVIEW = 0x6,
  PIDMSI_STATUS_PROOF = 0x7,
  PIDMSI_STATUS_FINAL = 0x8,
  PIDMSI_STATUS_OTHER = 0x7FFF,
};

/* 290 */
enum tagTYPEKIND : __int32
{
  TKIND_ENUM = 0x0,
  TKIND_RECORD = 0x1,
  TKIND_MODULE = 0x2,
  TKIND_INTERFACE = 0x3,
  TKIND_DISPATCH = 0x4,
  TKIND_COCLASS = 0x5,
  TKIND_ALIAS = 0x6,
  TKIND_UNION = 0x7,
  TKIND_MAX = 0x8,
};

/* 291 */
enum tagDESCKIND : __int32
{
  DESCKIND_NONE = 0x0,
  DESCKIND_FUNCDESC = 0x1,
  DESCKIND_VARDESC = 0x2,
  DESCKIND_TYPECOMP = 0x3,
  DESCKIND_IMPLICITAPPOBJ = 0x4,
  DESCKIND_MAX = 0x5,
};

/* 292 */
enum _SECURITY_IMPERSONATION_LEVEL : __int32
{
  SecurityAnonymous = 0x0,
  SecurityIdentification = 0x1,
  SecurityImpersonation = 0x2,
  SecurityDelegation = 0x3,
};

/* 293 */
enum tagSYSKIND : __int32
{
  SYS_WIN16 = 0x0,
  SYS_WIN32 = 0x1,
  SYS_MAC = 0x2,
  SYS_WIN64 = 0x3,
};

/* 294 */
enum tagFUNCKIND : __int32
{
  FUNC_VIRTUAL = 0x0,
  FUNC_PUREVIRTUAL = 0x1,
  FUNC_NONVIRTUAL = 0x2,
  FUNC_STATIC = 0x3,
  FUNC_DISPATCH = 0x4,
};

/* 295 */
enum _GET_FILEEX_INFO_LEVELS : __int32
{
  GetFileExInfoStandard = 0x0,
  GetFileExMaxInfoLevel = 0x1,
};

/* 296 */
enum _SPTEXT : __int32
{
  SPTEXT_ACTIONDESCRIPTION = 0x1,
  SPTEXT_ACTIONDETAIL = 0x2,
};

/* 297 */
enum tagRASCONNSTATE : __int32
{
};

/* 298 */
enum GODOTUNICODE : __int32
{
  PlatformUntested = 0x0,
  PlatformUnicode = 0x1,
  PlatformNotUnicode = 0x2,
};

/* 299 */
enum OBJECTTYPE : __int32
{
  OBJ_TYPE_HELPER = 0x0,
  OBJ_TYPE_LIGHT = 0x1,
  OBJ_TYPE_MODEL = 0x2,
  OBJ_TYPE_BONE = 0x3,
  OBJ_TYPE_EMITTER2 = 0x4,
  OBJ_TYPE_RIBBON = 0x5,
  OBJ_TYPE_EVENT = 0x6,
  NUM_OBJ_TYPES = 0x7,
};

/* 300 */
enum KEYTYPE : __int32
{
  KEYTYPE_NOINTERP = 0x0,
  KEYTYPE_LINEAR = 0x1,
  KEYTYPE_HERMITE = 0x2,
  KEYTYPE_BEZIER = 0x3,
};

/* 301 */
enum MDLTRACKTYPE : __int32
{
  TRACK_NO_INTERP = 0x0,
  TRACK_LINEAR = 0x1,
  TRACK_HERMITE = 0x2,
  TRACK_BEZIER = 0x3,
  NUM_TRACK_TYPES = 0x4,
};

/* 302 */
enum MDLTEXOP : __int32
{
  TEXOP_LOAD = 0x0,
  TEXOP_TRANSPARENT = 0x1,
  TEXOP_BLEND = 0x2,
  TEXOP_ADD = 0x3,
  TEXOP_ADD_ALPHA = 0x4,
  TEXOP_MODULATE = 0x5,
  TEXOP_MODULATE2X = 0x6,
  NUMTEXOPS = 0x7,
};

/* 303 */
enum LIGHT_TYPE : __int32
{
  LIGHTTYPE_OMNI = 0x0,
  LIGHTTYPE_DIRECT = 0x1,
  LIGHTTYPE_AMBIENT = 0x2,
  NUM_MDL_LIGHT_TYPES = 0x3,
};

/* 304 */
enum GEOM_SHAPE : __int32
{
  SHAPE_BOX = 0x0,
  SHAPE_CYLINDER = 0x1,
  SHAPE_SPHERE = 0x2,
  SHAPE_PLANE = 0x3,
  NUM_SHAPES = 0x4,
};

/* 305 */
enum ACTIVITY : __int32
{
  ACTIVITY_ANIMATE = 0x0,
  ACTIVITY_ANIMEVENTS = 0x1,
  ACTIVITY_ANIMSEQEND = 0x2,
  ACTIVITY_EVENTHANDLERS = 0x3,
  ACTIVITY_EVENTIDLE = 0x4,
  ACTIVITY_EVENTKEYANDCHAR = 0x5,
  ACTIVITY_EVENTMOUSE = 0x6,
  ACTIVITY_EVENTNET = 0x7,
  ACTIVITY_EVENTPAINT = 0x8,
  ACTIVITY_EVENTPOLL = 0x9,
  ACTIVITY_FRAMEMANAGER = 0xA,
  ACTIVITY_OBJMGR = 0xB,
  ACTIVITY_LIGHTING = 0xC,
  ACTIVITY_MODEL = 0xD,
  ACTIVITY_PARTICLE = 0xE,
  ACTIVITY_RENDER = 0xF,
  ACTIVITY_SOUND = 0x10,
  ACTIVITY_WORLD = 0x11,
  ACTIVITY_PERFDISPLAY = 0x12,
  ACTIVITY_PROG0 = 0x13,
  ACTIVITY_PROG1 = 0x14,
  ACTIVITY_PROG2 = 0x15,
  ACTIVITY_PROG3 = 0x16,
  ACTIVITY_OTHER = 0x17,
  ACTIVITIES = 0x18,
};

/* 306 */
enum PROPERTY : __int32
{
  PROP_EVENTCONTEXT = 0x0,
  PROP_HANDLETABLE = 0x1,
  PROP_EVENTSTATE = 0x2,
  PROP_TIMERS = 0x3,
  PROP_STRINGSTATE = 0x4,
  PROP_JASS = 0x5,
  PROP_JVM = 0x6,
  PROP_TEXTURES = 0x7,
  PROP_MODELS = 0x8,
  PROP_AGILE = 0x9,
  PROP_TEMPEST = 0xA,
  PROP_RAIN = 0xB,
  PROP_IPSE = 0xC,
  PROP_APPLICATION = 0xD,
  PROP_NET = 0xE,
  PROP_WORLD = 0xF,
  PROP_BATTLENET = 0x10,
  PROP_COLLISION = 0x11,
  PROP_AUTHENTICATION = 0x12,
  PROPERTIES = 0x13,
};

/* 307 */
enum CMDOPT : __int32
{
  CMD_D3D = 0x0,
  CMD_DATA_DIR = 0x1,
  CMD_NO_LAG_FIX = 0x2,
  CMD_LOADFILE = 0x3,
  CMD_GAMETYPE = 0x4,
  CMD_OPENGL = 0x5,
  CMD_SW_TNL = 0x6,
  CMD_TIMEDEMO = 0x7,
  CMD_DEMOREZ = 0x8,
  CMD_DEMODEPTH = 0x9,
  CMD_DEMODETAIL = 0xA,
  CMD_DEMOSOUND = 0xB,
  CMD_FULL_SCREEN = 0xC,
  CMD_22050HZ = 0xD,
  CMD_NO_WARNINGS = 0xE,
  CMDOPTS = 0xF,
};

/* 308 */
enum $602CD5A10F0EBF5F7DF5C047D6874175 : __int32
{
  eDefaultMaxBytesPerInstance = 0xFFFFFFFF,
};

/* 309 */
enum OSINPUT : __int32
{
  OS_INPUT_CAPTURE_CHANGED = 0x0,
  OS_INPUT_CHAR = 0x1,
  OS_INPUT_STRING = 0x2,
  OS_INPUT_IME = 0x3,
  OS_INPUT_SIZE = 0x4,
  OS_INPUT_CLOSE = 0x5,
  OS_INPUT_FOCUS = 0x6,
  OS_INPUT_KEY_DOWN = 0x7,
  OS_INPUT_KEY_UP = 0x8,
  OS_INPUT_MOUSE_DOWN = 0x9,
  OS_INPUT_MOUSE_MOVE = 0xA,
  OS_INPUT_MOUSE_WHEEL = 0xB,
  OS_INPUT_MOUSE_MOVE_RELATIVE = 0xC,
  OS_INPUT_MOUSE_UP = 0xD,
  OS_INPUT_SHUTDOWN = 0xE,
};

/* 310 */
enum OS_MOUSE_MODE : __int32
{
  OS_MOUSE_MODE_NORMAL = 0x0,
  OS_MOUSE_MODE_RELATIVE = 0x1,
  OS_MOUSE_MODES = 0x2,
};

/* 311 */
enum CSimpleButtonState : __int32
{
  BUTTONSTATE_DISABLED = 0x0,
  BUTTONSTATE_NORMAL = 0x1,
  BUTTONSTATE_PUSHED = 0x2,
  NUM_BUTTONSTATES = 0x3,
};

/* 312 */
enum $FD0EBB43E5CD2A0315A3E089BBBD1E6B : __int32
{
  CLICK_ON_LEFTDOWN = 0x1,
  CLICK_ON_LEFTUP = 0x100,
  CLICK_ON_MIDDLEDOWN = 0x2,
  CLICK_ON_MIDDLEUP = 0x200,
  CLICK_ON_RIGHTDOWN = 0x4,
  CLICK_ON_RIGHTUP = 0x400,
  CLICK_ON_X1DOWN = 0x8,
  CLICK_ON_X1UP = 0x800,
  CLICK_ON_X2DOWN = 0x10,
  CLICK_ON_X2UP = 0x1000,
};

/* 313 */
enum $26CFE4098B19EB1CAAD31B24AEA18334 : __int32
{
  eTransparent = 0x0,
  eOpaque = 0x100,
  eOpaque8bit = 0xFF,
};

/* 314 */
enum $F6C1FBD3B5964231758239DC0F7D826C : __int32
{
  eAlphaMask = 0xFF000000,
  eNotAlphaMask = 0xFFFFFF,
  eRedMask = 0xFF0000,
  eNotRedMask = 0xFF00FFFF,
  eGreenMask = 0xFF00,
  eNotGreenMask = 0xFFFF00FF,
  eBlueMask = 0xFF,
  eNotBlueMask = 0xFFFFFF00,
};

/* 315 */
enum $E8647BD006F413D4ED4CB40BF4079BE4 : __int32
{
  eAlphaS = 0x18,
  eRedS = 0x10,
  eGreenS = 0x8,
  eBlueS = 0x0,
};

/* 316 */
enum HTML_TEXT_TYPE : __int32
{
  HTML_TEXT_NORMAL = 0x0,
  HTML_TEXT_HEADER1 = 0x1,
  HTML_TEXT_HEADER2 = 0x2,
  HTML_TEXT_HEADER3 = 0x3,
  NUM_HTML_TEXT_TYPES = 0x4,
};

/* 317 */
enum $8E1360E3A52501ABEC802E5C70A3A7F4 : __int32
{
  FLAG_FONT_UPDATE = 0x1,
  FLAG_STYLE_UPDATE = 0x2,
  FLAG_COLOR_UPDATE = 0x4,
  FLAG_SHADOW_UPDATE = 0x8,
  FLAG_SPACING_UPDATE = 0x10,
  FLAG_COMPLETE_UPDATE = 0x1F,
};

/* 318 */
enum SLIDER_ORIENTATION : __int32
{
  SLIDER_HORIZONTAL = 0x0,
  SLIDER_VERTICAL = 0x1,
};

/* 319 */
enum CSimpleMessageFrame::SimpleMessageFrameInsertMode : __int32
{
  INSERT_AT_TOP = 0x0,
  INSERT_AT_BOTTOM = 0x1,
};

/* 320 */
enum QUOTEDCODE : __int32
{
  CODE_COLORON = 0x0,
  CODE_COLORRESTORE = 0x1,
  CODE_NEWLINE = 0x2,
  CODE_PIPE = 0x3,
  CODE_HYPERLINKSTART = 0x4,
  CODE_HYPERLINKSTOP = 0x5,
  CODE_INVALIDCODE = 0x6,
  NUM_QUOTEDCODES = 0x7,
};

/* 321 */
enum $660B0E4240CC9D7FBDD7D8BD7C96B9EC : __int32
{
  MDLTOK_EOF = 0x0,
  MDLTOK_FIRST_TOKEN = 0x100,
  MDLTOK_LONG = 0x100,
  MDLTOK_FLOAT = 0x101,
  MDLTOK_STRING = 0x102,
  MDLTOK_VERSION = 0x103,
  MDLTOK_MODEL = 0x104,
  MDLTOK_SEQUENCES = 0x105,
  MDLTOK_GLOBALSEQUENCES = 0x106,
  MDLTOK_TEXTUREANIMS = 0x107,
  MDLTOK_TEXTURES = 0x108,
  MDLTOK_MATERIALS = 0x109,
  MDLTOK_GEOSET = 0x10A,
  MDLTOK_GEOSETANIM = 0x10B,
  MDLTOK_BONE = 0x10C,
  MDLTOK_MESH = 0x10D,
  MDLTOK_LIGHT = 0x10E,
  MDLTOK_HELPER = 0x10F,
  MDLTOK_ATTACHMENT = 0x110,
  MDLTOK_PIVOTPOINTS = 0x111,
  MDLTOK_PARTICLEEMITTER = 0x112,
  MDLTOK_PARTICLEEMITTER2 = 0x113,
  MDLTOK_CAMERA = 0x114,
  MDLTOK_EVENTOBJECT = 0x115,
  MDLTOK_HITTESTSHAPE = 0x116,
  MDLTOK_COLLISIONSHAPE = 0x117,
  MDLTOK_RIBBONEMITTER = 0x118,
  MDLTOK_COLLISION = 0x119,
  MDLTOK_ADDITIVE = 0x11A,
  MDLTOK_ADD_ALPHA = 0x11B,
  MDLTOK_ALPHA = 0x11C,
  MDLTOK_ALPHA_KEY = 0x11D,
  MDLTOK_ALWAYS_ANIMATE = 0x11E,
  MDLTOK_AMB_COLOR = 0x11F,
  MDLTOK_AMB_INTENSITY = 0x120,
  MDLTOK_AMBIENT = 0x121,
  MDLTOK_ANIM = 0x122,
  MDLTOK_ANIMATIONFILE = 0x123,
  MDLTOK_ATTACHMENTID = 0x124,
  MDLTOK_ATTENUATION = 0x125,
  MDLTOK_ATTENUATIONSTART = 0x126,
  MDLTOK_ATTENUATIONEND = 0x127,
  MDLTOK_BEZIER = 0x128,
  MDLTOK_BILLBOARD = 0x129,
  MDLTOK_BILLBOARD_LOCK_X = 0x12A,
  MDLTOK_BILLBOARD_LOCK_Y = 0x12B,
  MDLTOK_BILLBOARD_LOCK_Z = 0x12C,
  MDLTOK_BITMAP = 0x12D,
  MDLTOK_BLEND = 0x12E,
  MDLTOK_BLEND_COLORS = 0x12F,
  MDLTOK_BLEND_TIME = 0x130,
  MDLTOK_BONE_INDICES = 0x131,
  MDLTOK_BONE_WEIGHTS = 0x132,
  MDLTOK_BOTH = 0x133,
  MDLTOK_BOUNDS_RADIUS = 0x134,
  MDLTOK_BOX = 0x135,
  MDLTOK_COLOR = 0x136,
  MDLTOK_COLS = 0x137,
  MDLTOK_COMPONENT_SKIN = 0x138,
  MDLTOK_CONNECT = 0x139,
  MDLTOK_CONSTANTCOLOR = 0x13A,
  MDLTOK_COORD_ID = 0x13B,
  MDLTOK_CYLINDER = 0x13C,
  MDLTOK_DECAY_UV = 0x13D,
  MDLTOK_DIRECTIONAL = 0x13E,
  MDLTOK_DONTINHERIT = 0x13F,
  MDLTOK_DONTINTERP = 0x140,
  MDLTOK_DRAG = 0x141,
  MDLTOK_DUPLICATES = 0x142,
  MDLTOK_DURATION = 0x143,
  MDLTOK_EMISSION_RATE = 0x144,
  MDLTOK_EMITTER_USES_MDL = 0x145,
  MDLTOK_EMITTER_USES_TGA = 0x146,
  MDLTOK_EVENT_TRACK = 0x147,
  MDLTOK_FACES = 0x148,
  MDLTOK_FAR_CLIP = 0x149,
  MDLTOK_FIELDOFVIEW = 0x14A,
  MDLTOK_FILTERMODE = 0x14B,
  MDLTOK_FORMATVERSION = 0x14C,
  MDLTOK_FPS = 0x14D,
  MDLTOK_FREQUENCY = 0x14E,
  MDLTOK_FULLRESOLUTION = 0x14F,
  MDLTOK_GEOSETID = 0x150,
  MDLTOK_GEOSETANIMID = 0x151,
  MDLTOK_GLOBALSEQID = 0x152,
  MDLTOK_GRAVITY = 0x153,
  MDLTOK_GROUNDTRACK = 0x154,
  MDLTOK_GROUP = 0x155,
  MDLTOK_GROUPS = 0x156,
  MDLTOK_HEAD = 0x157,
  MDLTOK_HEIGHT = 0x158,
  MDLTOK_HEIGHT_ABOVE = 0x159,
  MDLTOK_HEIGHT_BELOW = 0x15A,
  MDLTOK_HERMITE = 0x15B,
  MDLTOK_IMAGE = 0x15C,
  MDLTOK_INIT_VELOCITY = 0x15D,
  MDLTOK_INTAN = 0x15E,
  MDLTOK_INTENSITY = 0x15F,
  MDLTOK_INTERVAL = 0x160,
  MDLTOK_LATITUDE = 0x161,
  MDLTOK_LONGITUDE = 0x162,
  MDLTOK_LAYER = 0x163,
  MDLTOK_LENGTH = 0x164,
  MDLTOK_LIFESPAN = 0x165,
  MDLTOK_LIFESPAN_UV = 0x166,
  MDLTOK_LINEAR = 0x167,
  MDLTOK_LINES = 0x168,
  MDLTOK_LINE_EMITTER = 0x169,
  MDLTOK_LINE_LOOP = 0x16A,
  MDLTOK_LINE_STRIP = 0x16B,
  MDLTOK_MATERIAL = 0x16C,
  MDLTOK_MATERIAL_ID = 0x16D,
  MDLTOK_MATRICES = 0x16E,
  MDLTOK_MAXIMUMEXTENT = 0x16F,
  MDLTOK_MINIMUMEXTENT = 0x170,
  MDLTOK_MODEL_SPACE = 0x171,
  MDLTOK_MODULATE = 0x172,
  MDLTOK_MODULATE2X = 0x173,
  MDLTOK_MOVESPEED = 0x174,
  MDLTOK_MULTIPLE = 0x175,
  MDLTOK_NEAR_CLIP = 0x176,
  MDLTOK_NO_DEPTH_TEST = 0x177,
  MDLTOK_NO_DEPTH_SET = 0x178,
  MDLTOK_CAPNONE = 0x179,
  MDLTOK_NONLOOPING = 0x17A,
  MDLTOK_NORMALS = 0x17B,
  MDLTOK_NUMATTACHMENTS = 0x17C,
  MDLTOK_NUMBONES = 0x17D,
  MDLTOK_NUMEVENTS = 0x17E,
  MDLTOK_NUMGEOSETS = 0x17F,
  MDLTOK_NUMGEOSETANIMS = 0x180,
  MDLTOK_NUMHELPERS = 0x181,
  MDLTOK_NUMLIGHTS = 0x182,
  MDLTOK_NUMMESHES = 0x183,
  MDLTOK_NUMPARTICLEEMITTERS = 0x184,
  MDLTOK_NUMPARTICLEEMITTERS2 = 0x185,
  MDLTOK_NUMRIBBONEMITTERS = 0x186,
  MDLTOK_OBJECTID = 0x187,
  MDLTOK_OMNIDIRECTIONAL = 0x188,
  MDLTOK_OPACITY = 0x189,
  MDLTOK_OUTTAN = 0x18A,
  MDLTOK_PARENT = 0x18B,
  MDLTOK_PARTICLE = 0x18C,
  MDLTOK_PARTICLE_0XKILL = 0x18D,
  MDLTOK_PARTICLE_EXTRUDE = 0x18E,
  MDLTOK_PARTICLE_FOLLOW = 0x18F,
  MDLTOK_PARTICLE_FOLLOW_PARAMS = 0x190,
  MDLTOK_PARTICLE_INHERIT_SCALE = 0x191,
  MDLTOK_PARTICLE_IVEL_LIN = 0x192,
  MDLTOK_PARTICLE_IVEL_SCALE = 0x193,
  MDLTOK_PARTICLE_GEOMETRY_MDL = 0x194,
  MDLTOK_PARTICLE_PROJECT = 0x195,
  MDLTOK_PARTICLE_RECURSION_MDL = 0x196,
  MDLTOK_PARTICLE_ROTATION = 0x197,
  MDLTOK_PARTICLE_SCALING = 0x198,
  MDLTOK_PARTICLE_TUMBLE = 0x199,
  MDLTOK_PARTICLE_TUMBLER = 0x19A,
  MDLTOK_PARTICLE_TWINKLE_ONOFF = 0x19B,
  MDLTOK_PARTICLE_TWINKLE_SCALE = 0x19C,
  MDLTOK_PARTICLE_XYQUADS = 0x19D,
  MDLTOK_PARTICLE_ZSOURCE = 0x19E,
  MDLTOK_PARTICLE_ZVEL_ONLY = 0x19F,
  MDLTOK_PATH = 0x1A0,
  MDLTOK_PITCH = 0x1A1,
  MDLTOK_PLANE = 0x1A2,
  MDLTOK_POINTS = 0x1A3,
  MDLTOK_POLYGON = 0x1A4,
  MDLTOK_POSITION = 0x1A5,
  MDLTOK_PRIORITYPLANE = 0x1A6,
  MDLTOK_PROJECT = 0x1A7,
  MDLTOK_QUADS = 0x1A8,
  MDLTOK_QUAD_STRIP = 0x1A9,
  MDLTOK_REPLACEABLE_ID = 0x1AA,
  MDLTOK_REPLAY = 0x1AB,
  MDLTOK_ROLL = 0x1AC,
  MDLTOK_ROTATION = 0x1AD,
  MDLTOK_ROWS = 0x1AE,
  MDLTOK_SCALING = 0x1AF,
  MDLTOK_SEGMENT_COLOR = 0x1B0,
  MDLTOK_SELECTION_GROUP = 0x1B1,
  MDLTOK_SNDMAXDIST = 0x1B2,
  MDLTOK_SNDMINDIST = 0x1B3,
  MDLTOK_SPHERE = 0x1B4,
  MDLTOK_SPHERE_ENV_MAP = 0x1B5,
  MDLTOK_SPLINE = 0x1B6,
  MDLTOK_SORTPRIMSFARZ = 0x1B7,
  MDLTOK_SORTPRIMSNEARZ = 0x1B8,
  MDLTOK_SPEED = 0x1B9,
  MDLTOK_SQUIRT = 0x1BA,
  MDLTOK_STATIC = 0x1BB,
  MDLTOK_TAIL = 0x1BC,
  MDLTOK_TAIL_GROWS = 0x1BD,
  MDLTOK_TAIL_LENGTH = 0x1BE,
  MDLTOK_TAIL_DECAY_UV = 0x1BF,
  MDLTOK_TAIL_UV = 0x1C0,
  MDLTOK_TARGET = 0x1C1,
  MDLTOK_TEAM_COLOR = 0x1C2,
  MDLTOK_TEXTURE_ID = 0x1C3,
  MDLTOK_TEXTURE_SLOT = 0x1C4,
  MDLTOK_TFACES = 0x1C5,
  MDLTOK_TIME = 0x1C6,
  MDLTOK_TRANSLATION = 0x1C7,
  MDLTOK_TRANSPARENT = 0x1C8,
  MDLTOK_TRIANGLES = 0x1C9,
  MDLTOK_TRIANGLE_FAN = 0x1CA,
  MDLTOK_TRIANGLE_STRIP = 0x1CB,
  MDLTOK_TVERTEXANIM = 0x1CC,
  MDLTOK_TVERTEXANIMID = 0x1CD,
  MDLTOK_TVERTICES = 0x1CE,
  MDLTOK_TWO_SIDED = 0x1CF,
  MDLTOK_TYPE = 0x1D0,
  MDLTOK_UNFOGGED = 0x1D1,
  MDLTOK_UNSELECTABLE = 0x1D2,
  MDLTOK_UNSHADED = 0x1D3,
  MDLTOK_VARIATION = 0x1D4,
  MDLTOK_VERTEX = 0x1D5,
  MDLTOK_VERTEXCOUNT = 0x1D6,
  MDLTOK_VERTEX_GROUP = 0x1D7,
  MDLTOK_VERTICES = 0x1D8,
  MDLTOK_VISIBILITY = 0x1D9,
  MDLTOK_WIDTH = 0x1DA,
  MDLTOK_WIND = 0x1DB,
  MDLTOK_WRAPHEIGHT = 0x1DC,
  MDLTOK_WRAPWIDTH = 0x1DD,
  MDLTOK_YAW = 0x1DE,
  MDLTOK_UNKNOWN = 0x1DF,
  MDLTOK_LAST_TOKEN = 0x1E0,
  MDLTOK_LEX_FATAL = 0xFFFFFFFE,
};

/* 322 */
enum GROUND_TRACK : __int32
{
  TRACK_YAW_ONLY = 0x0,
  TRACK_PITCH_YAW = 0x1,
  TRACK_PITCH_YAW_ROLL = 0x2,
  GROUND_TRACK_MASK = 0x3,
};

/* 323 */
enum $538277D0FDBCB40A91A915000BFA7200 : __int32
{
  MDLFILE_TEXT = 0x0,
  MDLFILE_BIN = 0x1,
  NUM_MDLFILE_TYPES = 0x2,
};

/* 324 */
enum EGxVertexShader : __int32
{
  GxVS_PassThru = 0x0,
  GxVS_Skin = 0x1,
  GxVertexShaders_Last = 0x2,
};

/* 325 */
enum EGxTextureShader : __int32
{
  GxTS_PassThru = 0x0,
  GxTS_Affine = 0x1,
  GxTS_Proj = 0x2,
  GxTextureShaders_Last = 0x3,
};

/* 326 */
enum EGxTexBlend : __int32
{
  GxTexBlend_Opaque = 0x0,
  GxTexBlend_Mod = 0x1,
  GxTexBlend_Decal = 0x2,
  GxTexBlend_Add = 0x3,
  GxTexBlend_Mod2x = 0x4,
  GxTexBlends_Last = 0x5,
};

/* 327 */
enum EModelModQ : __int32
{
  MODEL_ADD_LINK = 0x0,
  MODEL_APPLY_OBJECT_FACE_DIR = 0x1,
  MODEL_APPLY_OBJECT_LOOK_AT = 0x2,
  MODEL_CLEAR_ALL_LINKS = 0x3,
  MODEL_CLEAR_LINK = 0x4,
  MODEL_ENABLE_ANIM_BLENDING = 0x5,
  MODEL_ENABLE_FULL_ALPHA = 0x6,
  MODEL_FINISH_DUPLICATION = 0x7,
  MODEL_FORCE_CURRENT_SEQUENCE_TIME = 0x8,
  MODEL_FORCE_SEQUENCE_TIME = 0x9,
  MODEL_HIDE_BOUNDS = 0xA,
  MODEL_HIDE_GEOSETS = 0xB,
  MODEL_HIDE_GEOSETS_RANGE = 0xC,
  MODEL_LOCK_OBJECT_SEQUENCE = 0xD,
  MODEL_MARK_FOOTSTEP_SEQUENCE = 0xE,
  MODEL_MATCH_SEQUENCE = 0xF,
  MODEL_OPTIMIZE_VISIBLE_GEOSETS = 0x10,
  MODEL_REMOVE_LINK = 0x11,
  MODEL_REMOVE_OBJECT_FACE_DIR = 0x12,
  MODEL_REMOVE_OBJECT_LOOK_AT = 0x13,
  MODEL_REPLACE_TEXTURE = 0x14,
  MODEL_SET_EMISSIVE_COLOR = 0x15,
  MODEL_SET_EVENT_CALLBACK = 0x16,
  MODEL_SET_LIGHT_SELECT_CALLBACK = 0x17,
  MODEL_SET_OBJECT_TIME_SCALE = 0x18,
  MODEL_SET_RANDOM_SEQUENCE_FIDGET1 = 0x19,
  MODEL_SET_RANDOM_SEQUENCE_FIDGET2 = 0x1A,
  MODEL_SET_SEQ_FINISHED_HANDLER1 = 0x1B,
  MODEL_SET_SEQ_FINISHED_HANDLER2 = 0x1C,
  MODEL_SET_SEQUENCE1 = 0x1D,
  MODEL_SET_SEQUENCE2 = 0x1E,
  MODEL_SET_SEQUENCE_FIDGET1 = 0x1F,
  MODEL_SET_SEQUENCE_FIDGET2 = 0x20,
  MODEL_SET_TIME_SCALE = 0x21,
  MODEL_SET_VERTEX_ALPHA = 0x22,
  MODEL_SET_VERTEX_COLOR = 0x23,
  MODEL_SHOW_BOUNDING_SPHERE = 0x24,
  MODEL_SHOW_COLLISION = 0x25,
  MODEL_SHOW_COLLISION_AABOX = 0x26,
  MODEL_SHOW_MODEL = 0x27,
  MODEL_NUM_COMMANDS = 0x28,
  MODEL_COMMAND_NOT_QUEUED = 0x28,
};

/* 328 */
enum EModelLoad : __int32
{
  CMODEL_UNINITIALIZED = 0x0,
  CMODEL_LOADED = 0x1,
  CMODEL_ASYNC_WAIT = 0x2,
  CMODEL_DUPE_WAIT = 0x3,
  CMODEL_DUPE_WAIT_PRSRV_ANIM = 0x4,
};

/* 329 */
enum COLLIDE_TYPE : __int32
{
  COLLIDE_BOX = 0x0,
  COLLIDE_CYLINDER = 0x1,
  COLLIDE_SPHERE = 0x2,
  COLLIDE_PLANE = 0x3,
};

/* 330 */
enum SORTABLES : __int32
{
  SORTOBJ_GEOSET = 0x0,
  SORTOBJ_EMITTER2 = 0x1,
  SORTOBJ_RIBBON = 0x2,
  SORTOBJ_CUSTOM_GEO = 0x3,
  SORTOBJ_CUSTOM_MODEL = 0x4,
};

/* 331 */
enum ModelIntersectResult : __int32
{
  MODEL_INTERSECT_NO_HIT = 0x0,
  MODEL_INTERSECT_HIT_BOUNDING_SPHERE = 0x1,
  MODEL_INTERSECT_HIT_COLLISION_VOLUMES = 0x2,
  MODEL_INTERSECT_HIT_MODEL = 0x3,
};

/* 332 */
enum $16A9960E908A107082911B2B4CB9BEF0 : __int32
{
  eRootIndex = 0x1,
};

/* 333 */
typedef $16A9960E908A107082911B2B4CB9BEF0 $DA4F8CBFB6F636AB9D338D739CD0B998;

/* 334 */
enum EModelParamType : __int32
{
  MPARAM_UINT = 0x0,
  MPARAM_HANDLE = 0x1,
  MPARAM_FLOAT = 0x2,
  MPARAM_C3VECTOR = 0x3,
  MPARAM_BOOL = 0x4,
  MPARAM_CARGB = 0x5,
  MPARAM_PTR = 0x6,
  MPARAM_BYTE = 0x7,
  MPARAM_NONE = 0x8,
};

/* 335 */
enum POWER_ACTION : __int32
{
  PowerActionNone = 0x0,
  PowerActionReserved = 0x1,
  PowerActionSleep = 0x2,
  PowerActionHibernate = 0x3,
  PowerActionShutdown = 0x4,
  PowerActionShutdownReset = 0x5,
  PowerActionShutdownOff = 0x6,
  PowerActionWarmEject = 0x7,
};

/* 336 */
enum LATENCY_TIME : __int32
{
  LT_DONT_CARE = 0x0,
  LT_LOWEST_LATENCY = 0x1,
};

/* 337 */
enum POWER_INFORMATION_LEVEL : __int32
{
  SystemPowerPolicyAc = 0x0,
  SystemPowerPolicyDc = 0x1,
  VerifySystemPolicyAc = 0x2,
  VerifySystemPolicyDc = 0x3,
  SystemPowerCapabilities = 0x4,
  SystemBatteryState = 0x5,
  SystemPowerStateHandler = 0x6,
  ProcessorStateHandler = 0x7,
  SystemPowerPolicyCurrent = 0x8,
  AdministratorPowerPolicy = 0x9,
  SystemReserveHiberFile = 0xA,
  ProcessorInformation = 0xB,
  SystemPowerInformation = 0xC,
  ProcessorStateHandler2 = 0xD,
  LastWakeTime = 0xE,
  LastSleepTime = 0xF,
  SystemExecutionState = 0x10,
  SystemPowerStateNotifyHandler = 0x11,
  ProcessorPowerPolicyAc = 0x12,
  ProcessorPowerPolicyDc = 0x13,
  VerifyProcessorPowerPolicyAc = 0x14,
  VerifyProcessorPowerPolicyDc = 0x15,
  ProcessorPowerPolicyCurrent = 0x16,
};

/* 338 */
enum STUB_PHASE : __int32
{
  STUB_UNMARSHAL = 0x0,
  STUB_CALL_SERVER = 0x1,
  STUB_MARSHAL = 0x2,
  STUB_CALL_SERVER_NO_HRESULT = 0x3,
};

/* 339 */
enum PROXY_PHASE : __int32
{
  PROXY_CALCSIZE = 0x0,
  PROXY_GETBUFFER = 0x1,
  PROXY_MARSHAL = 0x2,
  PROXY_SENDRECEIVE = 0x3,
  PROXY_UNMARSHAL = 0x4,
};

/* 340 */
enum BIDI_TYPE : __int32
{
  BIDI_NULL = 0x0,
  BIDI_INT = 0x1,
  BIDI_FLOAT = 0x2,
  BIDI_BOOL = 0x3,
  BIDI_STRING = 0x4,
  BIDI_TEXT = 0x5,
  BIDI_ENUM = 0x6,
  BIDI_BLOB = 0x7,
};

/* 341 */
enum tagINVOKEKIND : __int32
{
  INVOKE_FUNC = 0x1,
  INVOKE_PROPERTYGET = 0x2,
  INVOKE_PROPERTYPUT = 0x4,
  INVOKE_PROPERTYPUTREF = 0x8,
};

/* 342 */
enum _IDL_CS_CONVERT : __int32
{
  IDL_CS_NO_CONVERT = 0x0,
  IDL_CS_IN_PLACE_CONVERT = 0x1,
  IDL_CS_NEW_BUFFER_CONVERT = 0x2,
};

/* 343 */
enum _RPC_NOTIFICATION_TYPES : __int32
{
  RpcNotificationTypeNone = 0x0,
  RpcNotificationTypeEvent = 0x1,
  RpcNotificationTypeApc = 0x2,
  RpcNotificationTypeIoc = 0x3,
  RpcNotificationTypeHwnd = 0x4,
  RpcNotificationTypeCallback = 0x5,
};

/* 344 */
enum _RPC_ASYNC_EVENT : __int32
{
  RpcCallComplete = 0x0,
  RpcSendComplete = 0x1,
  RpcReceiveComplete = 0x2,
};

/* 345 */
enum XLAT_SIDE : __int32
{
  XLAT_SERVER = 0x1,
  XLAT_CLIENT = 0x2,
};

/* 346 */
enum $8567B5B62F6975397BBBC8CBBAFD2E29 : __int32
{
  DMUS_CURVES_LINEAR = 0x0,
  DMUS_CURVES_INSTANT = 0x1,
  DMUS_CURVES_EXP = 0x2,
  DMUS_CURVES_LOG = 0x3,
  DMUS_CURVES_SINE = 0x4,
};

/* 347 */
enum $E256E07D953E798151818792E84ED7A9 : __int32
{
  DSFXR_PRESENT = 0x0,
  DSFXR_LOCHARDWARE = 0x1,
  DSFXR_LOCSOFTWARE = 0x2,
  DSFXR_UNALLOCATED = 0x3,
  DSFXR_FAILED = 0x4,
  DSFXR_UNKNOWN = 0x5,
  DSFXR_SENDLOOP = 0x6,
};

/* 348 */
enum $59F518E2036F4E92D5784E95957177F0 : __int32
{
  DSFX_I3DL2_MATERIAL_PRESET_SINGLEWINDOW = 0x0,
  DSFX_I3DL2_MATERIAL_PRESET_DOUBLEWINDOW = 0x1,
  DSFX_I3DL2_MATERIAL_PRESET_THINDOOR = 0x2,
  DSFX_I3DL2_MATERIAL_PRESET_THICKDOOR = 0x3,
  DSFX_I3DL2_MATERIAL_PRESET_WOODWALL = 0x4,
  DSFX_I3DL2_MATERIAL_PRESET_BRICKWALL = 0x5,
  DSFX_I3DL2_MATERIAL_PRESET_STONEWALL = 0x6,
  DSFX_I3DL2_MATERIAL_PRESET_CURTAIN = 0x7,
};

/* 349 */
enum $60B5E3C0CF7FA9C8CA377813CCB1B245 : __int32
{
  DSFX_I3DL2_ENVIRONMENT_PRESET_DEFAULT = 0x0,
  DSFX_I3DL2_ENVIRONMENT_PRESET_GENERIC = 0x1,
  DSFX_I3DL2_ENVIRONMENT_PRESET_PADDEDCELL = 0x2,
  DSFX_I3DL2_ENVIRONMENT_PRESET_ROOM = 0x3,
  DSFX_I3DL2_ENVIRONMENT_PRESET_BATHROOM = 0x4,
  DSFX_I3DL2_ENVIRONMENT_PRESET_LIVINGROOM = 0x5,
  DSFX_I3DL2_ENVIRONMENT_PRESET_STONEROOM = 0x6,
  DSFX_I3DL2_ENVIRONMENT_PRESET_AUDITORIUM = 0x7,
  DSFX_I3DL2_ENVIRONMENT_PRESET_CONCERTHALL = 0x8,
  DSFX_I3DL2_ENVIRONMENT_PRESET_CAVE = 0x9,
  DSFX_I3DL2_ENVIRONMENT_PRESET_ARENA = 0xA,
  DSFX_I3DL2_ENVIRONMENT_PRESET_HANGAR = 0xB,
  DSFX_I3DL2_ENVIRONMENT_PRESET_CARPETEDHALLWAY = 0xC,
  DSFX_I3DL2_ENVIRONMENT_PRESET_HALLWAY = 0xD,
  DSFX_I3DL2_ENVIRONMENT_PRESET_STONECORRIDOR = 0xE,
  DSFX_I3DL2_ENVIRONMENT_PRESET_ALLEY = 0xF,
  DSFX_I3DL2_ENVIRONMENT_PRESET_FOREST = 0x10,
  DSFX_I3DL2_ENVIRONMENT_PRESET_CITY = 0x11,
  DSFX_I3DL2_ENVIRONMENT_PRESET_MOUNTAINS = 0x12,
  DSFX_I3DL2_ENVIRONMENT_PRESET_QUARRY = 0x13,
  DSFX_I3DL2_ENVIRONMENT_PRESET_PLAIN = 0x14,
  DSFX_I3DL2_ENVIRONMENT_PRESET_PARKINGLOT = 0x15,
  DSFX_I3DL2_ENVIRONMENT_PRESET_SEWERPIPE = 0x16,
  DSFX_I3DL2_ENVIRONMENT_PRESET_UNDERWATER = 0x17,
  DSFX_I3DL2_ENVIRONMENT_PRESET_SMALLROOM = 0x18,
  DSFX_I3DL2_ENVIRONMENT_PRESET_MEDIUMROOM = 0x19,
  DSFX_I3DL2_ENVIRONMENT_PRESET_LARGEROOM = 0x1A,
  DSFX_I3DL2_ENVIRONMENT_PRESET_MEDIUMHALL = 0x1B,
  DSFX_I3DL2_ENVIRONMENT_PRESET_LARGEHALL = 0x1C,
  DSFX_I3DL2_ENVIRONMENT_PRESET_PLATE = 0x1D,
};

/* 350 */
enum DMUS_CLOCKTYPE : __int32
{
  DMUS_CLOCK_SYSTEM = 0x0,
  DMUS_CLOCK_WAVE = 0x1,
};

/* 351 */
enum $ABFA8BEB3EA851464AB240352BC08105 : __int32
{
  ISOUNDFLAG_ONFADELIST = 0x80000000,
  ISOUNDFLAG_ONUPDATELIST = 0x40000000,
  ISOUNDFLAG_ONPANNINGLIST = 0x20000000,
  ISOUNDFLAG_ONCUTOFFLIST = 0x10000000,
  ISOUNDFLAG_3D = 0x8000000,
  ISOUNDFLAG_LOOPING = 0x4000000,
  ISOUNDFLAG_FREQSET = 0x2000000,
  ISOUNDFLAG_OUTOFRANGE = 0x1000000,
  ISOUNDFLAG_SUSPENDED = 0x800000,
  ISOUNDFLAG_VELOCITYSET = 0x400000,
  ISOUNDFLAG_MINMAXSET = 0x200000,
  ISOUNDFLAG_CATEGORYCOUNTED = 0x100000,
  ISOUNDFLAG_SETVOLUME = 0x80000,
  ISOUNDFLAG_POSITIONSET = 0x40000,
};

/* 352 */
enum OsType : __int32
{
  OsType_Unknown = 0x0,
  OsType_Win95 = 0x1,
  OsType_Win95OSR2 = 0x2,
  OsType_Win98 = 0x3,
  OsType_Win98SE = 0x4,
  OsType_WinME = 0x5,
  OsType_WinNT4 = 0x6,
  OsType_Win2000 = 0x7,
  OsType_WinXP = 0x8,
  OsType_MacOS9 = 0x9,
  OsType_MacOSX = 0xA,
  OsType_Linux = 0xB,
  OsType_Last = 0xC,
};

/* 353 */
enum OsNet::SELECTSET : __int32
{
  SELECTSET_FIRST = 0x0,
  SELECTSET_R = 0x0,
  SELECTSET_W = 0x1,
  SELECTSET_E = 0x2,
  SELECT_MAX = 0x3,
};

/* 354 */
enum NETADDRDIFF : __int32
{
  NETADDR_DIFF_EQUAL = 0x0,
  NETADDR_DIFF_NODE = 0x1,
  NETADDR_DIFF_NETWORK = 0x2,
  NETADDR_DIFF_PORT = 0x3,
  NETADDR_DIFF_PROTOCOL = 0x4,
};

/* 355 */
enum OS_SEND : __int32
{
  OS_SEND_OK = 0x0,
  OS_SEND_SOCKET_CLOSED = 0x1,
  OS_SEND_TIMEOUT = 0x2,
  OS_SEND_ERROR = 0x3,
};

/* 356 */
enum OsNet::OVERLAPTYPE : __int32
{
  OVERLAPTYPE_READ = 0x0,
  OVERLAPTYPE_WRITE = 0x1,
  OVERLAPTYPE_ACCEPT = 0x2,
};

/* 357 */
enum OsNet::OUTPUTSTATE : __int32
{
  OUTPUTSTATE_WAITING = 0x0,
  OUTPUTSTATE_WRITING = 0x1,
  OUTPUTSTATE_COMPLETED = 0x2,
  _UNIQUE_SYMBOL_OUTPUTSTATE_345 = 0xFFFFFFFF,
};

/* 358 */
enum OsNet::CONNLIST : __int32
{
  CONNLIST_LOOP_CONNECTED = 0x0,
  CONNLIST_TCP_CONNECTED = 0x1,
  CONNLIST_UDP_CONNECTED = 0x2,
  CONNLIST_FILE_CONNECTED = 0x3,
  CONNLISTS = 0x4,
  CONNLIST_NONE = 0x4,
  _UNIQUE_SYMBOL_CONNLIST_448 = 0xFFFFFFFF,
};

/* 359 */
enum OS_IME_LANGUAGEMODE : __int32
{
  OS_IME_MODE_ROMAN = 0x0,
  OS_IME_MODE_JAPANESE = 0x1,
  OS_IME_MODE_KOREAN = 0x2,
  OS_IME_MODE_CHINESE = 0x3,
};

/* 360 */
enum $A620A0DC35A40C0B5D0EB8150EE2E18A : __int32
{
  OSGUI_CALLBACK_MENU = 0x0,
  OSGUI_CALLBACK_IDLE = 0x1,
  NUM_OSGUI_CALLBACKS = 0x2,
};

/* 361 */
enum PERF_REMOTE_MODE : __int32
{
  PERF_REMOTE_MODE__ONPAINT = 0x0,
  PERF_REMOTE_MODE__ADVANCESYNCGAMETIME = 0x1,
  PERF_REMOTE_MODE_MAX = 0x2,
};

/* 362 */
enum $33D4EC91F117A66FC22B5B29BB73CF35 : __int32
{
  PERF_EVENTS = 0x0,
  PERF_EVENTIDLE = 0x1,
  PERF_EVENTPAINT = 0x2,
  PERF_ANIMATE = 0x3,
  PERF_ANIM_EVENTS = 0x4,
  PERF_ANIM_SEQ_END = 0x5,
  PERF_MODEL = 0x6,
  PERF_PARTICLE = 0x7,
  PERF_LIGHTING = 0x8,
  PERF_RENDER = 0x9,
  PERF_OBJ_MGR = 0xA,
  PERF_FRAMEMGR = 0xB,
  PERF_WORLD = 0xC,
  PERF_SOUND = 0xD,
  PERF_PERFDISPLAY = 0xE,
  PERF_PROG0 = 0xF,
  PERF_PROG1 = 0x10,
  PERF_PROG2 = 0x11,
  PERF_PROG3 = 0x12,
  PERF_OTHER = 0x13,
  PERF_MAX = 0x14,
};

/* 363 */
enum $158644B2CF836B9838A42759E83F9B29 : __int32
{
  MSG_OPEN = 0x0,
  MSG_DATA = 0x1,
  MSG_MAX = 0x2,
};

/* 364 */
enum $1109D45073A2878B17DEA2965F519CF4 : __int32
{
  PROF_PERFTIME_DATA = 0x1,
  PROF_PERFTIME_LABELS = 0x2,
  PROF_LOG_STRING = 0x3,
};

/* 365 */
enum SCRNSTOCK : __int32
{
  STOCK_SYSFONT = 0x0,
  STOCK_PERFFONT = 0x1,
  SCRNSTOCKOBJECTS = 0x2,
};

/* 366 */
enum $6B5E7DAB893938F18EC10550088787B9 : __int32
{
  TGA_NO_IMAGE_DATA = 0x0,
  TGA_COLOR_MAPPED = 0x1,
  TGA_TRUE_COLOR = 0x2,
  TGA_BLACK_N_WHITE = 0x3,
  TGA_RLE_COLOR_MAPPED = 0x9,
  TGA_RLE_TRUE_COLOR = 0xA,
  TGA_RLE_BLACK_N_WHITE = 0xB,
};

/* 367 */
enum PIXEL_FORMAT : __int32
{
  PIXEL_DXT1 = 0x0,
  PIXEL_DXT3 = 0x1,
  PIXEL_ARGB8888 = 0x2,
  PIXEL_ARGB1555 = 0x3,
  PIXEL_ARGB4444 = 0x4,
  PIXEL_RGB565 = 0x5,
  PIXEL_A8 = 0x6,
  PIXEL_DXT5 = 0x7,
  PIXEL_UNSPECIFIED = 0x8,
  NUM_PIXEL_FORMATS = 0x9,
};

/* 368 */
enum EGxColorFormat : __int32
{
  GxCF_argb = 0x0,
  GxCF_rgba = 0x1,
  GxColorFormats_Last = 0x2,
};

/* 369 */
enum COLOR_FILE_FORMAT : __int32
{
  COLOR_JPEG = 0x0,
  COLOR_PAL = 0x1,
  COLOR_DXT = 0x2,
};

/* 370 */
enum $5CB2873B6D15CA18D8063517AEA3CCDE : __int32
{
  ALPHA_0 = 0x0,
  ALPHA_1 = 0x1,
  ALPHA_4 = 0x4,
  ALPHA_8 = 0x8,
};

/* 371 */
enum MipMapAlgorithm : __int32
{
  MMA_BOX = 0x0,
  MMA_CUBIC = 0x1,
  MMA_FULLDFT = 0x2,
  MMA_KAISER = 0x3,
  MMA_LINEARLIGHTKAISER = 0x4,
};

/* 372 */
enum MIPS_TYPE : __int32
{
  MIPS_NONE = 0x0,
  MIPS_GENERATED = 0x1,
  MIPS_HANDMADE = 0x2,
};

/* 373 */
enum $BDA07ACE56A188D886D89CF2E65D0678 : __int32
{
  STATE_NEWLINE = 0x0,
  STATE_COMMENT = 0x1,
  STATE_SECTION = 0x2,
  STATE_STRIP_TRAILING = 0x3,
  STATE_KEY = 0x4,
  STATE_VALUE = 0x5,
};

/* 374 */
enum $45D20C033EF6FA305F9C66E82F3EC133 : __int32
{
  PART_ANIM_STAND = 0x0,
};

/* 375 */
enum EGxFontVJusts : __int32
{
  GxVJ_Top = 0x0,
  GxVJ_Middle = 0x1,
  GxVJ_Bottom = 0x2,
  GxVJ_Last = 0x3,
};

/* 376 */
enum EGxFontHJusts : __int32
{
  GxHJ_Left = 0x0,
  GxHJ_Center = 0x1,
  GxHJ_Right = 0x2,
  GxHJ_Last = 0x3,
};

/* 377 */
enum EImageFormat : __int32
{
  IMAGE_FORMAT_TGA = 0x0,
  IMAGE_FORMAT_BLP = 0x1,
  NUM_IMAGE_FORMATS = 0x2,
};

/* 378 */
enum EGxTexTarget : __int32
{
  GxTex_2d = 0x0,
  GxTex_CubeMap = 0x1,
  GxTexTargets_Last = 0x2,
};

/* 379 */
enum $46637A2AAEB7E82258E8618E821AF5C5 : __int32
{
  TextureLog_Character = 0x0,
  TextureLog_Creature = 0x1,
  TextureLog_Dungeon = 0x2,
  TextureLog_Interface = 0x3,
  TextureLog_World = 0x4,
  TextureLog_Tileset = 0x5,
  TextureLog_Item = 0x6,
  TextureLog_Num = 0x7,
};

/* 380 */
enum TEXFILETYPE : __int32
{
  TEXFILETYPE_UNKNOWN = 0x0,
  TEXFILETYPE_TGA = 0x1,
  TEXFILETYPE_BLP = 0x2,
  NUM_TEXFILETYPES = 0x3,
};

/* 381 */
enum $00FC39611E931783AD981FAEF35B79B1 : __int32
{
  m_firstBuildIndex = 0x0,
  m_numColorsToBuild = 0x100,
  m_noColorTrimming = 0x0,
  m_firstMapIndex = 0x0,
  m_lastMapIndex = 0xFF,
  m_versionMagic = 0x32504C42,
};

/* 382 */
enum CGxPixelShader::Target : __int32
{
  Target_default = 0xFFFFFFFE,
  Target_gx = 0xFFFFFFFF,
  Target_ps_1_1 = 0x0,
  Target_ps_1_2 = 0x1,
  Target_ps_1_3 = 0x2,
  Target_ps_1_4 = 0x3,
  Target_ps_2_0 = 0x4,
  Target_nvrc = 0x5,
  Target_nvts = 0x6,
  Target_nvts2 = 0x7,
  Target_nvts3 = 0x8,
  Target_atifs = 0x9,
  Target_arbfp1 = 0xA,
  Targets_Last = 0xB,
};

/* 383 */
typedef CGxPixelShader::Target CGxVertexShader::Target;

/* 384 */
enum NTempest::SolidIntersect : __int32
{
  SI_HollowHollow = 0x0,
  SI_HollowSolid = 0x1,
  SI_SolidHollow = 0x2,
  SI_SolidSolid = 0x3,
};

/* 385 */
enum NTempest::C3Spline::EvalType : __int32
{
  EVAL_PARAMETRIC = 0x0,
  EVAL_ARCLENGTH = 0x1,
  EVAL_COUNT = 0x2,
};

/* 386 */
enum AMBIENCE : __int32
{
  AMB_DAY = 0x0,
  AMB_NIGHT = 0x1,
  NUM_AMBIENCES = 0x2,
};

/* 387 */
enum $BB91F6559416F8956312D6D26AB9BC86 : __int32
{
  FLAG_PAUSED = 0x1,
  FLAG_INITIALIZED = 0x2,
  FLAG_IMMEDIATEPLAY = 0x4,
};

/* 388 */
enum WEAPONSWINGTYPES : __int32
{
  SWING_NORMAL = 0x0,
  SWING_CRITICAL = 0x1,
  NUM_SWINGTYPES = 0x2,
};

/* 389 */
enum SNDROOMTYPE : __int32
{
  SNDROOMTYPE_GENERIC = 0x0,
  SNDROOMTYPE_PADDEDCELL = 0x1,
  SNDROOMTYPE_ROOM = 0x2,
  SNDROOMTYPE_BATHROOM = 0x3,
  SNDROOMTYPE_LIVINGROOM = 0x4,
  SNDROOMTYPE_STONEROOM = 0x5,
  SNDROOMTYPE_AUDITORIUM = 0x6,
  SNDROOMTYPE_CONCERTHALL = 0x7,
  SNDROOMTYPE_CAVE = 0x8,
  SNDROOMTYPE_ARENA = 0x9,
  SNDROOMTYPE_HANGAR = 0xA,
  SNDROOMTYPE_CARPETEDHALLWAY = 0xB,
  SNDROOMTYPE_HALLWAY = 0xC,
  SNDROOMTYPE_STONECORRIDOR = 0xD,
  SNDROOMTYPE_ALLEY = 0xE,
  SNDROOMTYPE_FOREST = 0xF,
  SNDROOMTYPE_CITY = 0x10,
  SNDROOMTYPE_MOUNTAINS = 0x11,
  SNDROOMTYPE_QUARRY = 0x12,
  SNDROOMTYPE_PLAIN = 0x13,
  SNDROOMTYPE_PARKINGLOT = 0x14,
  SNDROOMTYPE_SEWERPIPE = 0x15,
  SNDROOMTYPE_UNDERWATER = 0x16,
  SNDROOMTYPE_DRUGGED = 0x17,
  SNDROOMTYPE_DIZZY = 0x18,
  SNDROOMTYPE_PSYCHOTIC = 0x19,
  NUM_SNDROOMTYPES = 0x1A,
};

/* 390 */
enum VOCALUISOUNDS : __int32
{
  VUI_INVENTORYFULL = 0x0,
  VUI_OUTOFAMMO = 0x1,
  VUI_NOEQUIP_LEVEL = 0x2,
  VUI_NOEQUIP_EVER = 0x3,
  VUI_BOUND_NODROP = 0x4,
  VUI_ITEMCOOLING = 0x5,
  VUI_CANTDRINKMORE = 0x6,
  VUI_CANTEATMORE = 0x7,
  VUI_CANTINVITE = 0x8,
  VUI_INVITEEBUSY = 0x9,
  VUI_TARGETTOOFAR = 0xA,
  VUI_INVALIDTARGET = 0xB,
  VUI_SPELLCOOLING = 0xC,
  VUI_CANTLEARN_LEVEL = 0xD,
  VUI_LOCKED = 0xE,
  VUI_NOMANA = 0xF,
  VUI_NOTWHILEDEAD = 0x10,
  VUI_CANTLOOT = 0x11,
  VUI_CANTCREATE = 0x12,
  VUI_DECLINEGROUP = 0x13,
  VUI_ALREADYINGROUP = 0x14,
  VUI_ALREADYINGUILD = 0x15,
  VUI_CANTAFFORDBANKSLOT = 0x16,
  VUI_TOOMANYBANKSLOTS = 0x17,
  VUI_CANTEAT_MOVING = 0x18,
  VUI_NOTABAG = 0x19,
  VUI_CANTPUTBAG = 0x1A,
  VUI_WRONGSLOT = 0x1B,
  VUI_AMMOONLYINBAG = 0x1C,
  VUI_BAGFULL = 0x1D,
  VUI_ITEMMAXCOUNT = 0x1E,
  VUI_CANTLOOT_DIDNTKILL = 0x1F,
  VUI_CANTLOOT_WRONGFACING = 0x20,
  VUI_CANTLOOT_LOCKED = 0x21,
  VUI_CANTLOOT_NOTSTANDING = 0x22,
  VUI_CANTLOOT_TOOFAR = 0x23,
  VUI_CANTATTACKRONGDIRECTION = 0x24,
  VUI_CANTATTACK_NOTSTANDING = 0x25,
  VUI_CANTATTACK_NOTARGET = 0x26,
  VUI_NOTENOUGHGOLD = 0x27,
  VUI_NOTENOUGHMONEY = 0x28,
  VUI_CANTEQUIP2H_SKILL = 0x29,
  VUI_CANTEQUIP_2HEQUIPPED = 0x2A,
  VUI_CANTEQUIP2H_NOSKILL = 0x2B,
  VUI_NOTEQUIPPABLE = 0x2C,
  VUI_GENERICNOTARGET = 0x2D,
  VUI_CANTCAST_OUTOFRANGE = 0x2E,
  VUI_POTIONCOOLING = 0x2F,
  VUI_PROFICIENCYNEEDED = 0x30,
  VUI_MUSTEQUIPPITEM = 0x31,
  VUI_ABILITYCOOLING = 0x32,
  VUI_CANTUSEITEM = 0x33,
  VUI_CHESTINUSE = 0x34,
  VUI_FOODCOOLING = 0x35,
  VUI_CANTTAXI_NOMONEY = 0x36,
  VUI_CANTUSELOCKED = 0x37,
  VUI_NOEQUIPSLOTAVAILABLE = 0x38,
  VUI_CANTUSETOOFAR = 0x39,
  VUI_CANTSWAP = 0x3A,
  VUI_CANTTRADE_SOULBOUND = 0x3B,
  VUI_NOTOWNER = 0x3C,
  VUI_ITEMLOCKED = 0x3D,
  VUI_GUILDPERMISSIONS = 0x3E,
  VUI_NORAGE = 0x3F,
  VUI_NOENERGY = 0x40,
  VUI_NOFOCUS = 0x41,
  NUM_VOCALUISOUNDS = 0x42,
  VUI_NONE = 0x42,
};

/* 391 */
enum VOCALUISOUNDTYPE : __int32
{
  VUISOUNDTYPE_NORMAL = 0x0,
  VUISOUNDTYPE_PISSED = 0x1,
  NUM_SOUNDTYPES = 0x2,
};

/* 392 */
enum ITEMSOUNDTYPE : __int32
{
  ITEMSOUND_PICKUP = 0x0,
  ITEMSOUND_DROP = 0x1,
  ITEMSOUND_USE = 0x2,
  ITEMSOUND_CLOSE = 0x3,
  NUM_ITEMSOUNDS = 0x4,
};

/* 393 */
enum PARRYMATERIALS : __int32
{
  PARRYMATERIAL_WOOD = 0x0,
  PARRYMATERIAL_METAL = 0x1,
  NUM_PARRYMATERIALS = 0x2,
};

/* 394 */
enum DYNAMIC_OBJECT_TYPE : __int32
{
  DYNAMIC_OBJECT_PORTAL = 0x0,
  DYNAMIC_OBJECT_AREA_SPELL = 0x1,
  DYNAMIC_OBJECT_FARSIGHT_FOCUS = 0x2,
};

/* 395 */
enum HANDLER_PRIORITY : __int32
{
  HANDLER_PRIORITY_NORMAL = 0x0,
  HANDLER_PRIORITY_HIGH = 0x1,
};

/* 396 */
enum PLAYER_TYPE : __int32
{
  PLAYER_NORMAL = 0x0,
  PLAYER_BOT = 0x1,
};

/* 397 */
enum $8B04BFBCF10B19B5637B920B28A57CD9 : __int32
{
  UPDATE_PARTIAL = 0x0,
  UPDATE_MOVEMENT = 0x1,
  UPDATE_FULL = 0x2,
  UPDATE_OUT_OF_RANGE = 0x3,
  UPDATE_IN_RANGE = 0x4,
};

/* 398 */
enum TEXCOMPONENT_SECTIONS : __int32
{
  TCS_UPPERARM = 0x0,
  TCS_LOWERARM = 0x1,
  TCS_HAND = 0x2,
  TCS_UPPERHEAD = 0x3,
  TCS_LOWERHEAD = 0x4,
  TCS_UPPERTORSO = 0x5,
  TCS_LOWERTORSO = 0x6,
  TCS_LEGUPPER = 0x7,
  TCS_LEGLOWER = 0x8,
  TCS_FEET = 0x9,
  NUM_TEXCOMPONENT_SECTIONS = 0xA,
  TCS_INVALIDSECTION = 0xB,
};

/* 399 */
enum CHAR_NAME_RESULT : __int32
{
  CHAR_NAME_RESULT_START = 0x37,
  CHAR_NAME_NO_NAME = 0x37,
  CHAR_NAME_SUCCESS = 0x41,
  LAST_CHAR_NAME_RESULT = 0x42,
};

/* 400 */
enum TEXCOMPONENT_LAYERS : __int32
{
  TEXLAYER_SKIN = 0x0,
  TEXLAYER_CLOTH = 0x1,
  TEXLAYER_ARMOR = 0x2,
  TEXLAYER_OVERLAY = 0x3,
  NUM_TEXLAYERS = 0x4,
  TEXLAYER_NONE = 0xFFFFFFFF,
};

/* 401 */
enum LAYERPRIORITY : __int32
{
  LAYERPRIORITY_0 = 0x0,
  LAYERPRIORITY_1 = 0x1,
  LAYERPRIORITY_2 = 0x2,
  LAYERPRIORITY_3 = 0x3,
  NUM_LAYERPRIORITIES = 0x4,
};

/* 402 */
enum INVENTORY_TYPES : __int32
{
  INDEX_NON_EQUIP_TYPE = 0x0,
  INDEX_HEAD_TYPE = 0x1,
  INDEX_NECK_TYPE = 0x2,
  INDEX_SHOULDER_TYPE = 0x3,
  INDEX_BODY_TYPE = 0x4,
  INDEX_CHEST_TYPE = 0x5,
  INDEX_WAIST_TYPE = 0x6,
  INDEX_LEGS_TYPE = 0x7,
  INDEX_FEET_TYPE = 0x8,
  INDEX_WRIST_TYPE = 0x9,
  INDEX_HAND_TYPE = 0xA,
  INDEX_FINGER_TYPE = 0xB,
  INDEX_TRINKET_TYPE = 0xC,
  INDEX_WEAPON_TYPE = 0xD,
  INDEX_SHIELD_TYPE = 0xE,
  INDEX_RANGED_TYPE = 0xF,
  INDEX_CLOAK_TYPE = 0x10,
  INDEX_2HWEAPON_TYPE = 0x11,
  INDEX_BAG_TYPE = 0x12,
  INDEX_TABARD_TYPE = 0x13,
  INDEX_ROBE_TYPE = 0x14,
  INDEX_WEAPONMAINHAND_TYPE = 0x15,
  INDEX_WEAPONOFFHAND_TYPE = 0x16,
  INDEX_HOLDABLE_TYPE = 0x17,
  INDEX_AMMO_TYPE = 0x18,
  INDEX_THROWN_TYPE = 0x19,
  INDEX_RANGEDRIGHT_TYPE = 0x1A,
  INDEX_NUMSLOTS = 0x1B,
  INDEX_INVALID_INVENTORYTYPE = 0x1C,
};

/* 403 */
enum CHARACTER_GEOSET_SECTIONS : __int32
{
  CHARGEOSET_HAIR = 0x0,
  CHARGEOSET_BEARD = 0x1,
  CHARGEOSET_SIDEBURN = 0x2,
  CHARGEOSET_MOUSTACHE = 0x3,
  CHARGEOSET_GLOVE = 0x4,
  CHARGEOSET_BOOT = 0x5,
  CHARGEOSET_OBSOLETEDONTUSEME = 0x6,
  CHARGEOSET_EAR = 0x7,
  CHARGEOSET_SLEEVES = 0x8,
  CHARGEOSET_PANTS = 0x9,
  CHARGEOSET_DOUBLET = 0xA,
  CHARGEOSET_PANTDOUBLET = 0xB,
  CHARGEOSET_TABARD = 0xC,
  CHARGEOSET_ROBE = 0xD,
  CHARGEOSET_LOINCLOTH = 0xE,
  NUM_CHARGEOSETS = 0xF,
  CHARGEOSET_NONE = 0xFFFFFFFF,
};

/* 404 */
enum CHARTEXTURESECTIONID : __int32
{
  CHARTEXTURESECTION_SKIN = 0x0,
  CHARTEXTURESECTION_NAKEDSKINPELVIS = 0x1,
  CHARTEXTURESECTION_NAKEDSKINTORSO = 0x2,
  CHARTEXTURESECTION_SKINEXTRA = 0x3,
  CHARTEXTURESECTION_FACELOWER = 0x4,
  CHARTEXTURESECTION_FACEUPPER = 0x5,
  CHARTEXTURESECTION_HAIR = 0x6,
  CHARTEXTURESECTION_SCALPLOWERHAIR = 0x7,
  CHARTEXTURESECTION_SCALPUPPERHAIR = 0x8,
  CHARTEXTURESECTION_FACIALLOWERHAIR = 0x9,
  CHARTEXTURESECTION_FACIALUPPERHAIR = 0xA,
  CHARTEXTURESECTION_NUM = 0xB,
};

/* 405 */
enum CHARTEXTUREVARIATIONS : __int32
{
  CHARTEXTUREVAR_SKIN = 0x0,
  CHARTEXTUREVAR_FACE = 0x1,
  CHARTEXTUREVAR_HAIR = 0x2,
  CHARTEXTUREVAR_FACIALHAIR = 0x3,
  CHARTEXTUREVARIATIONS_NUM = 0x4,
};

/* 406 */
enum CHARACTER_ITEM_GEOSETS : __int32
{
  CHARITEMGEOSETS_GLOVES = 0x0,
  CHARITEMGEOSETS_BOOTS = 0x1,
  CHARITEMGEOSETS_SLEEVES = 0x2,
  CHARITEMGEOSETS_PANTS = 0x3,
  CHARITEMGEOSETS_DOUBLET = 0x4,
  CHARITEMGEOSETS_PANTDOUBLET = 0x5,
  CHARITEMGEOSETS_TABARD = 0x6,
  CHARITEMGEOSETS_ROBE = 0x7,
  CHARITEMGEOSETS_LOINCLOTH = 0x8,
  NUM_CHARITEMGEOSETS = 0x9,
  INVALID_CHARITEMGEOSET = 0xFFFFFFFF,
};

/* 407 */
enum $F6AA658F478A8D9BBEFF35F03725BD23 : __int32
{
  CHAR_TEXID_HAIR = 0x0,
  CHAR_TEXID_SCALP_UPPER = 0x1,
  CHAR_TEXID_SCALP_LOWER = 0x2,
  CHAR_TEXID_FACIAL_HAIR = 0x3,
  CHAR_TEXID_FACIAL_UPPER = 0x4,
  CHAR_TEXID_FACIAL_LOWER = 0x5,
  NUM_CHAR_TEXIDS = 0x6,
};

/* 408 */
enum FACET_COLOR : __int32
{
  FACET_UNTESTED = 0x0,
  FACET_TESTED_UNTOUCHED = 0x1,
  FACET_TESTED_TOUCHED = 0x2,
  FACET_BLOCKING = 0x3,
  NUM_FACET_COLORS = 0x4,
};

/* 409 */
enum PLAYER_MOVE_EVT : __int32
{
  PMOVE_MOVE_START_FWD = 0x0,
  PMOVE_MOVE_START_BWD = 0x1,
  PMOVE_MOVE_STOP = 0x2,
  PMOVE_STRAFE_START_LFT = 0x3,
  PMOVE_STRAFE_START_RGT = 0x4,
  PMOVE_STRAFE_STOP = 0x5,
  PMOVE_FALL = 0x6,
  PMOVE_JUMP = 0x7,
  PMOVE_TURN_START_LFT = 0x8,
  PMOVE_TURN_START_RGT = 0x9,
  PMOVE_TURN_STOP = 0xA,
  PMOVE_PITCH_START_UP = 0xB,
  PMOVE_PITCH_START_DOWN = 0xC,
  PMOVE_PITCH_STOP = 0xD,
  PMOVE_SET_RUN_MODE = 0xE,
  PMOVE_SET_WALK_MODE = 0xF,
  PMOVE_SET_FACING = 0x10,
  PMOVE_SET_PITCH = 0x11,
  PMOVE_MOVE_START_SWIM = 0x12,
  PMOVE_MOVE_STOP_SWIM = 0x13,
  NUM_PMOVE_EVTS = 0x14,
};

/* 410 */
enum $F84480956F12118231C69E6DCB4EAB41 : __int32
{
  IS_MOVING = 0x1,
  IS_TURNING = 0x2,
  IS_STRAFING = 0x4,
  IS_PITCHING = 0x8,
};

/* 411 */
enum $6697F94D60C2F719779372311FD43E2B : __int32
{
  EVENTID_CHAR_EVT_ID = 0x80010000,
  EVENTID_KEYDOWN_EVT_ID = 0x80010001,
  EVENTID_KEYUP_EVT_ID = 0x80010002,
  EVENTID_MOUSEDOWN_EVT_ID = 0x80010003,
  EVENTID_MOUSEUP_EVT_ID = 0x80010004,
  EVENTID_MOUSEMOVE_EVT_ID = 0x80010005,
  EVENTID_MOUSEMOVEREL_EVT_ID = 0x80010006,
  EVENTID_UPDATE_EVT_ID = 0x80010007,
  EVENTID_TRACK_EVT_ID = 0x80010008,
  EVENTID_SPRITE_CLICK_EVT_ID = 0x8001000A,
  EVENTID_TERRAIN_CLICK_EVT_ID = 0x8001000B,
  EVENTID_WORLD_CLICK_EVT_ID = 0x8001000C,
  EVENTID_SPELLTRAP_CLICK_EVT_ID = 0x8001000D,
  EVENTID_GLOBAL_CLICK_EVT_ID = 0x8001000E,
  EVENTID_RESIZE_EVT_ID = 0x40400000,
  EVENTID_CLOSE_EVT_ID = 0x40400001,
  EVENTID_DESTROY_EVT_ID = 0x40400002,
  EVENTID_FIRST_MERCHANTSLOT = 0x40410000,
  EVENTID_LAST_MERCHANTSLOT = 0x4041007F,
  EVENTID_MERCHANTUNDO_SLOT = 0x40420000,
  EVENTID_BUTTONCLICK_EVT_ID = 0x60200000,
  EVENTID_BUTTONTRACK_EVT_ID = 0x60200001,
  EVENTID_PAPERDOLL_BTN_EVT_ID = 0x60200002,
  EVENTID_SPELLBOOK_BTN_EVT_ID = 0x60200003,
  EVENTID_OPTIONS_BTN_EVT_ID = 0x60200004,
  EVENTID_ATTACK_BTN_EVT_ID = 0x60200005,
  EVENTID_INVITE_BTN_EVT_ID = 0x60200006,
  EVENTID_DISMISS_BTN_EVT_ID = 0x60200007,
  EVENTID_SHOP_BTN_EVT_ID = 0x60200008,
  EVENTID_INSPECT_BTN_EVT_ID = 0x60200009,
  EVENTID_TRADE_BTN_EVT_ID = 0x6020000A,
  EVENTID_LOOT_BTN_EVT_ID = 0x6020000B,
  EVENTID_MOUNT_BTN_EVT_ID = 0x6020000C,
  EVENTID_DISMOUNT_BTN_EVT_ID = 0x6020000D,
  EVENTID_TAME_BTN_EVT_ID = 0x6020000E,
  EVENTID_CHARACTER_BTN_EVT_ID = 0x6020000F,
  EVENTID_SKILLBOOK_BTN_EVT_ID = 0x60200010,
  EVENTID_ALLYBOOK_BTN_EVT_ID = 0x60200011,
  EVENTID_MAPBOOK_BTN_EVT_ID = 0x60200012,
  EVENTID_QUESTLOG_BTN_EVT_ID = 0x60200013,
  EVENTID_ABILITYBOOK_BTN_EVT_ID = 0x60200014,
  EVENTID_NEWTARGET_BTN_EVT_ID = 0x60200015,
  EVENTID_BACKGROUND_CLICK_EVT_ID = 0x6020001C,
  EVENTID_MENU_BTN_EVT_ID = 0x6020001D,
  EVENTID_QUEST_BTN_EVT_ID = 0x6020001E,
  EVENTID_SOCIAL_BTN_EVT_ID = 0x6020001F,
  EVENTID_HELP_BTN_EVT_ID = 0x60200020,
  EVENTID_ACCEPT_BTN_EVT_ID = 0x60200021,
  EVENTID_DECLINE_BTN_EVT_ID = 0x60200022,
  EVENTID_BACK_BTN_EVT_ID = 0x60200023,
  EVENTID_OFFER_BTN_EVT_ID = 0x60200024,
  EVENTID_PREV_PAGE_BTN_EVT_ID = 0x60200025,
  EVENTID_NEXT_PAGE_BTN_EVT_ID = 0x60200026,
  EVENTID_BACKPACK_BTN_EVT_ID = 0x60200027,
  EVENTID_BAG0_BTN_EVT_ID = 0x60200028,
  EVENTID_BAG1_BTN_EVT_ID = 0x60200029,
  EVENTID_BAG2_BTN_EVT_ID = 0x6020002A,
  EVENTID_BAG3_BTN_EVT_ID = 0x6020002B,
  EVENTID_LEFT_BTN_EVT_ID = 0x6020002C,
  EVENTID_RIGHT_BTN_EVT_ID = 0x6020002D,
  EVENTID_COPPER_BTN_EVT_ID = 0x6020002E,
  EVENTID_SILVER_BTN_EVT_ID = 0x6020002F,
  EVENTID_GOLD_BTN_EVT_ID = 0x60200030,
  EVENTID_AUTOEQUIP_EVT_ID = 0x60200031,
  EVENTID_SWAPEQUIP_EVT_ID = 0x60200032,
  EVENTID_PAPERDOLL_LEFT_EVT_ID = 0x60200100,
  EVENTID_PAPERDOLL_RIGHT_EVT_ID = 0x60200101,
  EVENTID_PAPERDOLL_BTNUP_EVT_ID = 0x60200102,
  EVENTID_CHAT_UP_BTN_EVT_ID = 0x60200200,
  EVENTID_CHAT_DOWN_BTN_EVT_ID = 0x60200201,
  EVENTID_CHAT_BOTTOM_BTN_EVT_ID = 0x60200202,
  EVENTID_CHAT_MENU_BTN_EVT_ID = 0x60200203,
  EVENTID_CHAT_ENTER_EVT_ID = 0x60200204,
  EVENTID_CHAT_ESC_EVT_ID = 0x60200205,
  EVENTID_CHAT_SPACE_EVT_ID = 0x60200206,
  EVENTID_CHAT_MENU_SAY_EVT_ID = 0x60200300,
  EVENTID_CHAT_MENU_PARTY_EVT_ID = 0x60200301,
  EVENTID_CHAT_MENU_GUILD_EVT_ID = 0x60200302,
  EVENTID_CHAT_MENU_YELL_EVT_ID = 0x60200303,
  EVENTID_CHAT_MENU_WHISPER_EVT_ID = 0x60200304,
  EVENTID_CHAT_MENU_EMOTE_EVT_ID = 0x60200305,
  EVENTID_CHAT_MENU_EMOTEMENU_EVT_ID = 0x60200306,
  EVENTID_CHAT_MENU_LANGUAGEMENU_EVT_ID = 0x60200307,
  EVENTID_CHAT_MENU_REPLY_EVT_ID = 0x60200308,
  EVENTID_EMOTE_MENU_EVT_ID = 0x60200400,
  EVENTID_LANGUAGE_MENU_EVT_ID0 = 0x60200500,
  EVENTID_LANGUAGE_MENU_EVT_ID1 = 0x60200501,
  EVENTID_LANGUAGE_MENU_EVT_ID2 = 0x60200502,
  EVENTID_LANGUAGE_MENU_EVT_ID3 = 0x60200503,
  EVENTID_LANGUAGE_MENU_EVT_ID4 = 0x60200504,
  EVENTID_LANGUAGE_MENU_EVT_ID5 = 0x60200505,
  EVENTID_LANGUAGE_MENU_EVT_ID6 = 0x60200506,
  EVENTID_LANGUAGE_MENU_EVT_ID7 = 0x60200507,
  EVENTID_LANGUAGE_MENU_EVT_ID8 = 0x60200508,
  EVENTID_LANGUAGE_MENU_EVT_ID9 = 0x60200509,
  EVENTID_TRAINER_BUTTON_EVT_ID = 0x60200600,
  EVENTID_ATTRIBUTE_BUTTON_EVT_ID = 0x60200700,
  EVENTID_INFOFRAME_CHARACTER_TAB_EVT_ID = 0x60300000,
  EVENTID_INFOFRAME_CLASS_SKILL_TAB_EVT_ID = 0x60300001,
  EVENTID_INFOFRAME_SECONDARY_SKILL_TAB_EVT_ID = 0x60300002,
  EVENTID_INFOFRAME_REPUTATION_TAB_EVT_ID = 0x60300003,
  EVENTID_INFOFRAME_TRADE_SKILL_TAB_EVT_ID = 0x60300004,
  EVENTID_ORDER_EVT_ID = 0x10000,
  EVENTID_SELECTED_EVT_ID = 0x10001,
  EVENTID_DESELECTED_EVT_ID = 0x10002,
  EVENTID_ATTACK_SND_EVT_ID = 0x10003,
  EVENTID_BEHAVIOR_EVT_ID = 0x10004,
  EVENTID_ARRIVAL_EVT_ID = 0x20000,
  EVENTID_MOVE_STOP_EVT_ID = 0x20002,
  EVENTID_GUARD_EVT_ID = 0x20003,
  EVENTID_DEATH_EVT_ID = 0x20004,
  EVENTID_ATTACKED_EVT_ID = 0x20005,
  EVENTID_MONEY_EVT_ID = 0x20006,
  EVENTID_LOOT_EVT_ID = 0x20007,
  EVENTID_DECAY_EVT_ID = 0x20008,
  EVENTID_RESPAWN_EVT_ID = 0x20009,
  EVENTID_SWING_EVT_ID = 0x2000A,
  EVENTID_FOLLOW_EVT_ID = 0x2000B,
  EVENTID_SHOP_EVT_ID = 0x2000C,
  EVENTID_LEVEL_UP_EVT_ID = 0x2000D,
  EVENTID_TURN_THRESHOLD_ID = 0x2000E,
  EVENTID_PET_EVT_ID = 0x2000F,
  EVENTID_REQ_PICKUP_ITEM_EVT_ID = 0x21000,
  EVENTID_REQ_SWAP_SLOT_EVT_ID = 0x21001,
  EVENTID_REQ_SWAP_ITEM_EVT_ID = 0x21002,
  EVENTID_REQ_DROP_SLOT_EVT_ID = 0x21003,
  EVENTID_REQ_LOOT_EVT_ID = 0x21004,
  EVENTID_REQ_STOP_LOOTING_EVT_ID = 0x21005,
  EVENTID_REQ_PICKUP_SLOT_EVT_ID = 0x21006,
  EVENTID_REQ_BUY_SLOT_EVT_ID = 0x21007,
  EVENTID_REQ_SELL_SLOT_EVT_ID = 0x21008,
  EVENTID_REQ_CONSUME_SLOT_EVT_ID = 0x21009,
  EVENTID_REQ_ = 0x2100A,
  EVENTID_REQ_ATTACK_EVT_ID = 0x2100B,
  EVENTID_REQ_SHOP_EVT_ID = 0x2100C,
  EVENTID_REQ_STOP_SHOPPING_EVT_ID = 0x2100D,
  EVENTID_REQ_MOVE_EVT_ID = 0x2100E,
  EVENTID_REQ_TAME_PET_EVT_ID = 0x2100F,
  EVENTID_REQ_DISMISS_PET_EVT_ID = 0x21010,
  EVENTID_CURSOR_EVT_ID = 0x22000,
  EVENTID_EQUIP_HEAD_EVT_ID = 0x22001,
  EVENTID_EQUIP_SHIRT_EVT_ID = 0x22002,
  EVENTID_EQUIP_CHEST_EVT_ID = 0x22003,
  EVENTID_EQUIP_BACK_EVT_ID = 0x22004,
  EVENTID_EQUIP_HANDS_EVT_ID = 0x22005,
  EVENTID_EQUIP_WAIST_EVT_ID = 0x22006,
  EVENTID_EQUIP_LEGS_EVT_ID = 0x22007,
  EVENTID_EQUIP_FEET_EVT_ID = 0x22008,
  EVENTID_EQUIP_MAIN_HAND_EVT_ID = 0x22009,
  EVENTID_EQUIP_OFF_HAND_EVT_ID = 0x2200A,
  EVENTID_RECIPE0_EVT_ID = 0x23000,
  EVENTID_RECIPE1_EVT_ID = 0x23001,
  EVENTID_RECIPE2_EVT_ID = 0x23002,
  EVENTID_RECIPE3_EVT_ID = 0x23003,
  EVENTID_RECIPE4_EVT_ID = 0x23004,
  EVENTID_RECIPE5_EVT_ID = 0x23005,
  EVENTID_RECIPE6_EVT_ID = 0x23006,
  EVENTID_RECIPE7_EVT_ID = 0x23007,
  EVENTID_RECIPE8_EVT_ID = 0x23008,
  EVENTID_RECIPE9_EVT_ID = 0x23009,
  EVENTID_RECIPE10_EVT_ID = 0x2300A,
  EVENTID_RECIPE11_EVT_ID = 0x2300B,
  EVENTID_SPELL0_CLK_EVT_ID = 0x24000,
  EVENTID_SPELL1_CLK_EVT_ID = 0x24001,
  EVENTID_SPELL2_CLK_EVT_ID = 0x24002,
  EVENTID_SPELL3_CLK_EVT_ID = 0x24003,
  EVENTID_SPELL4_CLK_EVT_ID = 0x24004,
  EVENTID_SPELL5_CLK_EVT_ID = 0x24005,
  EVENTID_SPELL6_CLK_EVT_ID = 0x24006,
  EVENTID_SPELL7_CLK_EVT_ID = 0x24007,
  EVENTID_SPELL8_CLK_EVT_ID = 0x24008,
  EVENTID_SPELL9_CLK_EVT_ID = 0x24009,
  EVENTID_QUICKSLOT0_CLK_EVT_ID = 0x25000,
  EVENTID_QUICKSLOT1_CLK_EVT_ID = 0x25001,
  EVENTID_QUICKSLOT2_CLK_EVT_ID = 0x25002,
  EVENTID_QUICKSLOT3_CLK_EVT_ID = 0x25003,
  EVENTID_QUICKSLOT4_CLK_EVT_ID = 0x25004,
  EVENTID_QUICKSLOT5_CLK_EVT_ID = 0x25005,
  EVENTID_QUICKSLOT6_CLK_EVT_ID = 0x25006,
  EVENTID_QUICKSLOT7_CLK_EVT_ID = 0x25007,
  EVENTID_QUICKSLOT8_CLK_EVT_ID = 0x25008,
  EVENTID_QUICKSLOT9_CLK_EVT_ID = 0x25009,
  EVENTID_QUICKSLOT10_CLK_EVT_ID = 0x2500A,
  EVENTID_QUICKSLOT11_CLK_EVT_ID = 0x2500B,
  EVENTID_QUEST0_CLK_EVT_ID = 0x26000,
  EVENTID_QUEST1_CLK_EVT_ID = 0x26001,
  EVENTID_QUEST2_CLK_EVT_ID = 0x26002,
  EVENTID_QUEST3_CLK_EVT_ID = 0x26003,
  EVENTID_QUEST4_CLK_EVT_ID = 0x26004,
  EVENTID_QUEST5_CLK_EVT_ID = 0x26005,
  EVENTID_QUEST6_CLK_EVT_ID = 0x26006,
  EVENTID_QUEST7_CLK_EVT_ID = 0x26007,
  EVENTID_QUEST8_CLK_EVT_ID = 0x26008,
  EVENTID_QUEST9_CLK_EVT_ID = 0x26009,
  EVENTID_GUARD_ORDER = 0x30000,
  EVENTID_MOVE_ORDER = 0x30001,
  EVENTID_ATTACK_ORDER = 0x30002,
  EVENTID_DEATH_ORDER = 0x30003,
  EVENTID_LOOT_UNIT_ORDER = 0x30004,
  EVENTID_PICKUP_ORDER = 0x30005,
  EVENTID_RISE_ORDER = 0x30006,
  EVENTID_LOOT_CONTAINER_ORDER = 0x30007,
  EVENTID_OPEN_ORDER = 0x30008,
  EVENTID_CLOSE_ORDER = 0x30009,
  EVENTID_SHOP_ORDER = 0x3000A,
  EVENTID_DEFAULT_BEHAVIOR = 0x0,
  EVENTID_CHASE_BEHAVIOR = 0x31000,
  EVENTID_SWING_BEHAVIOR = 0x31001,
  EVENTID_MOVE_FORWARD_BEHAVIOR = 0x31002,
  EVENTID_MOVE_BACKWARD_BEHAVIOR = 0x31003,
  EVENTID_TURN_LEFT_BEHAVIOR = 0x31004,
  EVENTID_TURN_RIGHT_BEHAVIOR = 0x31005,
};

/* 412 */
enum CURSORANIMATIONS : __int32
{
  POINT_CURSOR = 0x0,
  CAST_CURSOR = 0x1,
  BUY_CURSOR = 0x2,
  ATTACK_CURSOR = 0x3,
  INTERACT_CURSOR = 0x4,
  SPEAK_CURSOR = 0x5,
  RANGED_CURSOR = 0x6,
  PICKUP_CURSOR = 0x7,
  TAXI_CURSOR = 0x8,
  ERROR_CURSORS = 0x9,
  POINT_ERROR_CURSOR = 0x9,
  CAST_ERROR_CURSOR = 0xA,
  BUY_ERROR_CURSOR = 0xB,
  ATTACK_ERROR_CURSOR = 0xC,
  INTERACT_ERROR_CURSOR = 0xD,
  SPEAK_ERROR_CURSOR = 0xE,
  RANGED_ERROR_CURSOR = 0xF,
  PICKUP_ERROR_CURSOR = 0x10,
  TAXI_ERROR_CURSOR = 0x11,
  NUM_CURSOR_ANIMS = 0x12,
  NO_CURSOR = 0x13,
};

/* 413 */
enum CURSORITEMTYPE : __int32
{
  CURSOR_EMPTY = 0x0,
  CURSOR_ITEM = 0x1,
  CURSOR_MONEY = 0x2,
  CURSOR_SPELL = 0x3,
  NUM_CURSOR_ITEM_TYPES = 0x4,
};

/* 414 */
enum MINIMAP_OBJECT_TYPES : __int32
{
  MINIMAP_OBJECT = 0x0,
  MINIMAP_MONSTER = 0x1,
  MINIMAP_PET = 0x2,
  MINIMAP_PLAYER = 0x3,
  MINIMAP_PARTY = 0x4,
  MINIMAP_NUM_TYPES = 0x5,
};

/* 415 */
enum QUEST_STATE : __int32
{
  QUEST_GREETING = 0x0,
  QUEST_OFFER = 0x1,
  QUEST_ACCEPTED = 0x2,
  QUEST_REWARD = 0x3,
  QUEST_STATE_NUM_TYPES = 0x4,
};

/* 416 */
enum TRADESKILL_CATEGORY : __int32
{
  TRADESKILL_OPTIMAL = 0x0,
  TRADESKILL_MEDIUM = 0x1,
  TRADESKILL_EASY = 0x2,
  TRADESKILL_TRIVIAL = 0x3,
  NUM_TRADESKILL_CATEGORIES = 0x4,
};

/* 417 */
enum TRADE_STATUS : __int32
{
  TRADE_STATUS_PLAYER_BUSY = 0x0,
  TRADE_STATUS_PROPOSED = 0x1,
  TRADE_STATUS_INITIATED = 0x2,
  TRADE_STATUS_CANCELLED = 0x3,
  TRADE_STATUS_ACCEPTED = 0x4,
  TRADE_STATUS_ALREADY_TRADING = 0x5,
  TRADE_STATUS_PLAYER_NOT_FOUND = 0x6,
  TRADE_STATUS_STATE_CHANGED = 0x7,
  TRADE_STATUS_COMPLETE = 0x8,
  TRADE_STATUS_UNACCEPTED = 0x9,
  TRADE_STATUS_TOO_FAR_AWAY = 0xA,
  TRADE_STATUS_WRONG_FACTION = 0xB,
  TRADE_STATUS_FAILED = 0xC,
  TRADE_STATUS_DEAD = 0xD,
  TRADE_STATUS_PETITION = 0xE,
  TRADE_STATUS_PLAYER_IGNORED = 0xF,
};

/* 418 */
enum CRAFT_LEVEL_CATEGORY : __int32
{
  CRAFT_NONE = 0x0,
  CRAFT_OPTIMAL = 0x1,
  CRAFT_MEDIUM = 0x2,
  CRAFT_EASY = 0x3,
  CRAFT_TRIVIAL = 0x4,
  NUM_CRAFT_CATEGORIES = 0x5,
};

/* 419 */
enum TUTORIAL : __int32
{
  TUTORIAL_QUESTGIVERS = 0x0,
  TUTORIAL_MOVEMENT = 0x1,
  TUTORIAL_CAMERA = 0x2,
  TUTORIAL_TARGETING = 0x3,
  TUTORIAL_TARGETING_ENEMY = 0x4,
  TUTORIAL_COMBAT = 0x5,
  TUTORIAL_LOOTING = 0x6,
  TUTORIAL_ITEMS = 0x7,
  TUTORIAL_USABLE_ITEMS = 0x8,
  TUTORIAL_BAGS = 0x9,
  TUTORIAL_FOOD = 0xA,
  TUTORIAL_DRINK = 0xB,
  TUTORIAL_TALENTS = 0xC,
  TUTORIAL_SKILLS = 0xD,
  TUTORIAL_ABILITIES = 0xE,
  TUTORIAL_REPUTATION = 0xF,
  TUTORIAL_TELLS = 0x10,
  TUTORIAL_GROUPING = 0x11,
  NUM_TUTORIALS = 0x12,
};

/* 420 */
enum UI_SPELL_TYPE : __int32
{
  PLAYER_SPELL = 0x0,
  PLAYER_ABILITY = 0x1,
  PET_SPELL = 0x2,
  NUM_SPELL_TYPES = 0x3,
};

/* 421 */
enum $B5DFC7F7AA6BE0D20292CE219F5042F3 : __int32
{
  BUFF_FILTER_HELPFUL = 0x1,
  BUFF_FILTER_HARMFUL = 0x2,
  BUFF_FILTER_PASSIVE = 0x4,
  BUFF_FILTER_CANCELABLE = 0x10,
  BUFF_FILTER_NOT_CANCELABLE = 0x20,
  BUFF_FILTER_ALL = 0x7,
};

/* 422 */
enum TRAINER_SERVICE : __int32
{
  TRAINER_SERVICE_AVAILABLE = 0x0,
  TRAINER_SERVICE_UNAVAILABLE = 0x1,
  TRAINER_SERVICE_USED = 0x2,
  TRAINER_SERVICE_NOT_SHOWN = 0x3,
  TRAINER_SERVICE_NEVER = 0x4,
  TRAINER_SERVICE_NO_PET = 0x5,
  NUM_TRAINER_SERVICE_TYPES = 0x6,
};

/* 423 */
enum TRAINER_TYPE : __int32
{
  TRAINER_TYPE_GENERAL = 0x0,
  TRAINER_TYPE_TALENTS = 0x1,
  TRAINER_TYPE_TRADESKILLS = 0x2,
  TRAINER_TYPE_PET = 0x3,
  NUM_TRAINER_TYPES = 0x4,
};

/* 424 */
enum $3419A078635AE65E637C24F9586A0835 : __int32
{
  FADING_NONE = 0x0,
  FADING_OUT = 0x1,
  FADING_IN = 0x2,
};

/* 425 */
enum SPELLSHADOWSTYLE : __int32
{
  SPELL_GOOD = 0x0,
  SPELL_BAD = 0x1,
  NUM_SPELL_SHADOWS = 0x2,
  SPELL_NONE = 0x3,
};

/* 426 */
enum $9E6BBA5EDC016188E114C3FF45D5BCD7 : __int32
{
  PRIORITY_NON_INTERACTABLE = 0x0,
  PRIORITY_INTERACTABLE = 0x1,
  PRIORITY_LIVING = 0x2,
};

/* 427 */
enum CGWorldFrame::HIT_TYPE : __int32
{
  HIT_NONE = 0x0,
  HIT_GROUND = 0x1,
  HIT_OBJECT = 0x2,
};

/* 428 */
enum ERROR_TEXT_PLACEMENT : __int32
{
  ERRORTEXT_CHAT = 0x0,
  ERRORTEXT_UIINFO = 0x1,
  ERRORTEXT_UIERROR = 0x2,
  ERRORTEXT_CONSOLE = 0x3,
};

/* 429 */
enum SCRIPTEVENT : __int32
{
  SCRIPT_UNIT_COMBAT = 0xB2,
  SCRIPT_UNIT_SPELLMISS = 0xB3,
  SCRIPT_UNIT_NAME_UPDATE = 0xB4,
  SCRIPT_UNIT_PORTRAIT_UPDATE = 0xB5,
  SCRIPT_UNIT_MODEL_CHANGED = 0xB6,
  SCRIPT_UNIT_INVENTORY_CHANGED = 0xB7,
  SCRIPT_ITEM_LOCK_CHANGED = 0xB8,
  SCRIPT_PLAYER_XP_UPDATE = 0xB9,
  SCRIPT_PLAYER_REGEN_DISABLED = 0xBA,
  SCRIPT_PLAYER_REGEN_ENABLED = 0xBB,
  SCRIPT_PLAYER_AURAS_CHANGED = 0xBC,
  SCRIPT_PLAYER_ENTER_COMBAT = 0xBD,
  SCRIPT_PLAYER_LEAVE_COMBAT = 0xBE,
  SCRIPT_PLAYER_TARGET_CHANGED = 0xBF,
  SCRIPT_PLAYER_PET_CHANGED = 0xC0,
  SCRIPT_PLAYER_CONTROL_LOST = 0xC1,
  SCRIPT_PLAYER_CONTROL_GAINED = 0xC2,
  SCRIPT_PLAYER_LEVEL_UP = 0xC3,
  SCRIPT_ZONE_CHANGED = 0xC4,
  SCRIPT_MINIMAP_ZONE_CHANGED = 0xC5,
  SCRIPT_MINIMAP_UPDATE_ZOOM = 0xC6,
  SCRIPT_SCREENSHOT_SUCCEEDED = 0xC7,
  SCRIPT_SCREENSHOT_FAILED = 0xC8,
  SCRIPT_ACTIONBAR_SHOWGRID = 0xC9,
  SCRIPT_ACTIONBAR_HIDEGRID = 0xCA,
  SCRIPT_ACTIONBAR_PAGE_CHANGED = 0xCB,
  SCRIPT_ACTIONBAR_SLOT_CHANGED = 0xCC,
  SCRIPT_ACTIONBAR_UPDATE_STATE = 0xCD,
  SCRIPT_ACTIONBAR_UPDATE_USABLE = 0xCE,
  SCRIPT_ACTIONBAR_UPDATE_COOLDOWN = 0xCF,
  SCRIPT_UPDATE_BONUS_ACTIONBAR = 0xD0,
  SCRIPT_PARTY_MEMBERS_CHANGED = 0xD1,
  SCRIPT_PARTY_LEADER_CHANGED = 0xD2,
  SCRIPT_PARTY_MEMBER_ENABLE = 0xD3,
  SCRIPT_PARTY_MEMBER_DISABLE = 0xD4,
  SCRIPT_PARTY_LOOT_METHOD_CHANGED = 0xD5,
  SCRIPT_SYSMSG = 0xD6,
  SCRIPT_UI_ERROR_MESSAGE = 0xD7,
  SCRIPT_UI_INFO_MESSAGE = 0xD8,
  SCRIPT_CHAT_MSG_SAY = 0xD9,
  SCRIPT_CHAT_MSG_PARTY = 0xDA,
  SCRIPT_CHAT_MSG_GUILD = 0xDB,
  SCRIPT_CHAT_MSG_OFFICER = 0xDC,
  SCRIPT_CHAT_MSG_YELL = 0xDD,
  SCRIPT_CHAT_MSG_WHISPER = 0xDE,
  SCRIPT_CHAT_MSG_WHISPER_INFORM = 0xDF,
  SCRIPT_CHAT_MSG_EMOTE = 0xE0,
  SCRIPT_CHAT_MSG_TEXT_EMOTE = 0xE1,
  SCRIPT_CHAT_MSG_SYSTEM = 0xE2,
  SCRIPT_CHAT_MSG_MONSTER_SAY = 0xE3,
  SCRIPT_CHAT_MSG_MONSTER_YELL = 0xE4,
  SCRIPT_CHAT_MSG_MONSTER_EMOTE = 0xE5,
  SCRIPT_CHAT_MSG_CHANNEL = 0xE6,
  SCRIPT_CHAT_MSG_CHANNEL_JOIN = 0xE7,
  SCRIPT_CHAT_MSG_CHANNEL_LEAVE = 0xE8,
  SCRIPT_CHAT_MSG_CHANNEL_LIST = 0xE9,
  SCRIPT_CHAT_MSG_CHANNEL_NOTICE = 0xEA,
  SCRIPT_CHAT_MSG_CHANNEL_NOTICE_USER = 0xEB,
  SCRIPT_CHAT_MSG_AFK = 0xEC,
  SCRIPT_CHAT_MSG_DND = 0xED,
  SCRIPT_CHAT_MSG_COMBAT_LOG = 0xEE,
  SCRIPT_CHAT_MSG_IGNORED = 0xEF,
  SCRIPT_CHAT_MSG_SKILL = 0xF0,
  SCRIPT_CHAT_MSG_LOOT = 0xF1,
  SCRIPT_LANGUAGE_LIST_CHANGED = 0xF2,
  SCRIPT_TIME_PLAYED_MSG = 0xF3,
  SCRIPT_SPELLS_CHANGED = 0xF4,
  SCRIPT_CURRENT_SPELL_CAST_CHANGED = 0xF5,
  SCRIPT_SPELL_UPDATE_COOLDOWN = 0xF6,
  SCRIPT_CHARACTER_POINTS_CHANGED = 0xF7,
  SCRIPT_SKILL_LINES_CHANGED = 0xF8,
  SCRIPT_ITEM_PUSH = 0xF9,
  SCRIPT_LOOT_OPENED = 0xFA,
  SCRIPT_LOOT_SLOT_CLEARED = 0xFB,
  SCRIPT_LOOT_CLOSED = 0xFC,
  SCRIPT_PLAYER_ENTERING_WORLD = 0xFD,
  SCRIPT_PLAYER_LEAVING_WORLD = 0xFE,
  SCRIPT_PLAYER_ALIVE = 0xFF,
  SCRIPT_PLAYER_DEAD = 0x100,
  SCRIPT_PLAYER_CAMPING = 0x101,
  SCRIPT_PLAYER_QUITING = 0x102,
  SCRIPT_PLAYER_STAND = 0x103,
  SCRIPT_PLAYER_SIT = 0x104,
  SCRIPT_RESURRECT_REQUEST = 0x105,
  SCRIPT_PARTY_INVITE_REQUEST = 0x106,
  SCRIPT_PARTY_INVITE_CANCEL = 0x107,
  SCRIPT_GUILD_INVITE_REQUEST = 0x108,
  SCRIPT_GUILD_INVITE_CANCEL = 0x109,
  SCRIPT_TRADE_REQUEST = 0x10A,
  SCRIPT_TRADE_REQUEST_CANCEL = 0x10B,
  SCRIPT_LOOT_BIND_CONFIRM = 0x10C,
  SCRIPT_EQUIP_BIND_CONFIRM = 0x10D,
  SCRIPT_AUTOEQUIP_BIND_CONFIRM = 0x10E,
  SCRIPT_DELETE_ITEM_CONFIRM = 0x10F,
  SCRIPT_CURSOR_UPDATE = 0x110,
  SCRIPT_ITEM_TEXT_BEGIN = 0x111,
  SCRIPT_ITEM_TEXT_TRANSLATION = 0x112,
  SCRIPT_ITEM_TEXT_READY = 0x113,
  SCRIPT_ITEM_TEXT_CLOSED = 0x114,
  SCRIPT_QUEST_GREETING = 0x115,
  SCRIPT_QUEST_DETAIL = 0x116,
  SCRIPT_QUEST_PROGRESS = 0x117,
  SCRIPT_QUEST_COMPLETE = 0x118,
  SCRIPT_QUEST_FINISHED = 0x119,
  SCRIPT_QUEST_ITEM_UPDATE = 0x11A,
  SCRIPT_TAXIMAP_OPENED = 0x11B,
  SCRIPT_TAXIMAP_CLOSED = 0x11C,
  SCRIPT_QUEST_LOG_UPDATE = 0x11D,
  SCRIPT_TRAINER_SHOW = 0x11E,
  SCRIPT_TRAINER_UPDATE = 0x11F,
  SCRIPT_TRAINER_CLOSED = 0x120,
  SCRIPT_CVAR_UPDATE = 0x121,
  SCRIPT_TRADE_SKILL_SHOW = 0x122,
  SCRIPT_TRADE_SKILL_UPDATE = 0x123,
  SCRIPT_TRADE_SKILL_CLOSE = 0x124,
  SCRIPT_MERCHANT_SHOW = 0x125,
  SCRIPT_MERCHANT_UPDATE = 0x126,
  SCRIPT_MERCHANT_CLOSED = 0x127,
  SCRIPT_TRADE_SHOW = 0x128,
  SCRIPT_TRADE_CLOSED = 0x129,
  SCRIPT_TRADE_UPDATE = 0x12A,
  SCRIPT_TRADE_ACCEPT_UPDATE = 0x12B,
  SCRIPT_TRADE_TARGET_ITEM_CHANGED = 0x12C,
  SCRIPT_TRADE_PLAYER_ITEM_CHANGED = 0x12D,
  SCRIPT_TRADE_MONEY_CHANGED = 0x12E,
  SCRIPT_PLAYER_TRADE_MONEY = 0x12F,
  SCRIPT_BAG_OPEN = 0x130,
  SCRIPT_BAG_UPDATE = 0x131,
  SCRIPT_BAG_CLOSED = 0x132,
  SCRIPT_BAG_UPDATE_COOLDOWN = 0x133,
  SCRIPT_SOULSTONE_RECEIVED = 0x134,
  SCRIPT_LOCALPLAYER_PET_RENAMED = 0x135,
  SCRIPT_UNIT_ATTACK = 0x136,
  SCRIPT_UNIT_DEFENSE = 0x137,
  SCRIPT_PET_ATTACK_START = 0x138,
  SCRIPT_PET_ATTACK_STOP = 0x139,
  SCRIPT_UPDATE_MOUSEOVER_UNIT = 0x13A,
  SCRIPT_SPELLCAST_START = 0x13B,
  SCRIPT_SPELLCAST_STOP = 0x13C,
  SCRIPT_SPELLCAST_FAILED = 0x13D,
  SCRIPT_SPELLCAST_INTERRUPTED = 0x13E,
  SCRIPT_SPELLCAST_DELAYED = 0x13F,
  SCRIPT_SPELLCAST_CHANNEL_START = 0x140,
  SCRIPT_SPELLCAST_CHANNEL_UPDATE = 0x141,
  SCRIPT_CLEAR_TOOLTIP = 0x142,
  SCRIPT_TOOLTIP_ADD_MONEY = 0x143,
  SCRIPT_PLAYER_GUILD_UPDATE = 0x144,
  SCRIPT_QUEST_ACCEPT_CONFIRM = 0x145,
  SCRIPT_PLAYERBANKSLOTS_CHANGED = 0x146,
  SCRIPT_BANKFRAME_OPENED = 0x147,
  SCRIPT_BANKFRAME_CLOSED = 0x148,
  SCRIPT_PLAYERBANKBAGSLOTS_CHANGED = 0x149,
  SCRIPT_FRIENDLIST_UPDATE = 0x14A,
  SCRIPT_IGNORELIST_UPDATE = 0x14B,
  SCRIPT_PLAYER_LOGOUT_FAILED = 0x14C,
  SCRIPT_PET_BAR_UPDATE = 0x14D,
  SCRIPT_PET_BAR_UPDATE_COOLDOWN = 0x14E,
  SCRIPT_PET_BAR_SHOWGRID = 0x14F,
  SCRIPT_PET_BAR_HIDEGRID = 0x150,
  SCRIPT_MINIMAP_PING = 0x151,
  SCRIPT_CHAT_MSG_COMBAT_LOG_ENEMY = 0x152,
  SCRIPT_CHAT_MSG_COMBAT_LOG_SELF = 0x153,
  SCRIPT_CHAT_MSG_COMBAT_LOG_PARTY = 0x154,
  SCRIPT_CHAT_MSG_COMBAT_LOG_ERROR = 0x155,
  SCRIPT_CHAT_MSG_COMBAT_LOG_MISC_INFO = 0x156,
  SCRIPT_CRAFT_SHOW = 0x157,
  SCRIPT_CRAFT_UPDATE = 0x158,
  SCRIPT_CRAFT_CLOSE = 0x159,
  SCRIPT_MIRROR_TIMER_START = 0x15A,
  SCRIPT_MIRROR_TIMER_PAUSE = 0x15B,
  SCRIPT_MIRROR_TIMER_STOP = 0x15C,
  SCRIPT_WORLD_MAP_UPDATE = 0x15D,
  SCRIPT_AUTOFOLLOW_BEGIN = 0x15E,
  SCRIPT_AUTOFOLLOW_END = 0x15F,
  SCRIPT_CINEMATIC_FADE = 0x160,
  SCRIPT_CINEMATIC_START = 0x161,
  SCRIPT_CINEMATIC_STOP = 0x162,
  SCRIPT_UPDATE_FACTION = 0x163,
  SCRIPT_CLOSE_WORLD_MAP = 0x164,
  SCRIPT_OPEN_TABARD_FRAME = 0x165,
  SCRIPT_CLOSE_TABARD_FRAME = 0x166,
  SCRIPT_TABARD_CANSAVE_CHANGED = 0x167,
  SCRIPT_SHOW_COMPARE_TOOLTIP = 0x168,
  SCRIPT_GUILD_REGISTRAR_SHOW = 0x169,
  SCRIPT_GUILD_REGISTRAR_CLOSED = 0x16A,
  SCRIPT_DUEL_REQUESTED = 0x16B,
  SCRIPT_DUEL_OUTOFBOUNDS = 0x16C,
  SCRIPT_DUEL_INBOUNDS = 0x16D,
  SCRIPT_DUEL_FINISHED = 0x16E,
  SCRIPT_TUTORIAL_TRIGGER = 0x16F,
  SCRIPT_PET_DISMISS_START = 0x170,
  SCRIPT_UPDATE_BINDINGS = 0x171,
  SCRIPT_UPDATE_SHAPESHIFT_FORMS = 0x172,
  SCRIPT_WHO_LIST_UPDATE = 0x173,
  SCRIPT_UPDATE_LFG = 0x174,
  SCRIPT_PETITION_SHOW = 0x175,
  SCRIPT_PETITION_CLOSED = 0x176,
  NUM_SCRIPTEVENTS = 0x177,
};

/* 430 */
enum $AEA09517993149BE8E11503A2DE10F4D : __int32
{
  UPDATE_AFTER_PARENT = 0xFFFFFFFF,
  UPDATE_WITH_PARENT = 0x0,
  UPDATE_BEFORE_PARENT = 0x1,
};

/* 431 */
enum CACHEMODE : __int32
{
  CACHEMODE_NONE = 0x0,
  CACHEMODE_SIZE = 0x1,
  CACHEMODE_ENTRIES = 0x2,
  CACHEMODE_TIME = 0x3,
  NUM_CACHEMODES = 0x4,
};

/* 432 */
enum $336CD8A7CD5F5EA1C85FD1E7BC5F119A : __int32
{
  NEAR_LL = 0x0,
  NEAR_UL = 0x1,
  NEAR_UR = 0x2,
  NEAR_LR = 0x3,
  FAR_LL = 0x4,
  FAR_UL = 0x5,
  FAR_UR = 0x6,
  FAR_LR = 0x7,
  NUM_CORNERS = 0x8,
};

/* 433 */
enum $EF6AE780DD0296E5B0A3F6DC67A0B0FA : __int32
{
  P_TOP = 0x0,
  P_BOTTOM = 0x1,
  P_LEFT = 0x2,
  P_RIGHT = 0x3,
  P_FAR = 0x4,
  P_NEAR = 0x5,
  NUM_PLANES = 0x6,
};

/* 434 */
enum SPELL_TARGET_TYPE : __int32
{
  TARGET_TYPE_CASTER = 0x0,
  TARGET_TYPE_UNIT = 0x1,
  TARGET_TYPE_FRIENDLY = 0x2,
  TARGET_TYPE_ENEMY = 0x3,
  TARGET_TYPE_PARTY_MEMBER = 0x4,
  TARGET_TYPE_ITEM = 0x5,
  TARGET_TYPE_LOCATION = 0x6,
  TARGET_TYPE_OBJECT = 0x7,
  TARGET_TYPE_PET = 0x8,
  TARGET_TYPE_MAINHAND_ITEM = 0x9,
  TARGET_TYPE_OFFHAND_ITEM = 0xA,
  TARGET_TYPE_PARTY = 0xB,
  TARGET_TYPE_MULTIPLE_UNITS = 0xC,
  TARGET_TYPE_MULTIPLE_ENEMIES = 0xD,
  TARGET_TYPE_MULTIPLE_PARTY_MEMBERS = 0xE,
  TARGET_TYPE_MASTER = 0xF,
  NUM_SPELL_TARGET_TYPES = 0x10,
};

/* 435 */
enum UNIT_SUMMON_TYPE : __int32
{
  UNIT_SUMMON_PET = 0x0,
  UNIT_SUMMON_MINION = 0x1,
  UNIT_SUMMON_CHARM = 0x2,
  UNIT_SUMMON_GUARDIAN = 0x3,
  UNIT_SUMMON_CREATION = 0x4,
  NUM_UNIT_SUMMON_TYPES = 0x5,
};

/* 436 */
enum SCREENRECTGRIDS : __int32
{
  SRECTGRID_NAMEPLATES = 0x0,
  SRECTGRID_WORLDTEXT = 0x1,
  NUM_SRECTGRIDS = 0x2,
};

/* 437 */
enum TEST_DIRECTION : __int32
{
  TEST_UP = 0x0,
  TEST_LEFT = 0x1,
  TEST_RIGHT = 0x2,
  TEST_DOWN = 0x3,
  NUM_TESTDIRECTIONS = 0x4,
  TEST_INVALID = 0xFFFFFFFF,
};

/* 438 */
enum AI_GROUP_ACTION : __int32
{
  AI_GROUP_SPAWN = 0x0,
  AI_GROUP_IDLE = 0x1,
  AI_GROUP_MOVETO = 0x2,
  AI_GROUP_TELEPORT = 0x3,
  AI_GROUP_WANDER = 0x4,
  AI_GROUP_WANDER_SPAWNRELATIVE_OBSOLETE = 0x5,
  AI_GROUP_WANDER_AREA = 0x6,
  AI_GROUP_FOLLOW_GUID = 0x7,
  AI_GROUP_FOLLOW_PATH = 0x8,
  AI_GROUP_PATROL_LINE = 0x9,
  AI_GROUP_PATROL_CIRCLE = 0xA,
  AI_GROUP_GUARD_GUID = 0xB,
  AI_GROUP_GUARD_AREA = 0xC,
  AI_GROUP_SET_FORMATION = 0xD,
  AI_GROUP_UNIT_CHANGE_MODE_OBSOLETE = 0xE,
  AI_GROUP_UNIT_SAY = 0xF,
  AI_GROUP_UNIT_CAST = 0x10,
  AI_GROUP_UNIT_ACTIVATE_OBJECT = 0x11,
  AI_GROUP_GENERATE_EVENT = 0x12,
  AI_GROUP_DESPAWN = 0x13,
  AI_GROUP_SET_RADIUS_OBSOLETE = 0x14,
  AI_GROUP_SET_FACTION_OBSOLETE = 0x15,
  AI_GROUP_UNIT_SET_FACING = 0x16,
  AI_GROUP_UNIT_FACE_GUID = 0x17,
  AI_GROUP_UNIT_EMOTE = 0x18,
  AI_GROUP_MOVETO_GUID = 0x19,
  AI_GROUP_ATTACK_GUID = 0x1A,
  AI_GROUP_UNIT_MOUNT = 0x1B,
  AI_GROUP_UNIT_DISMOUNT = 0x1C,
  AI_GROUP_BEASTMASTER_ON = 0x1D,
  AI_GROUP_BEASTMASTER_OFF = 0x1E,
  AI_GROUP_UNIT_MODE = 0x1F,
  AI_GROUP_UNIT_MODE_RESET = 0x20,
  AI_GROUP_UNIT_FACTION = 0x21,
  AI_GROUP_UNIT_FACTION_RESET = 0x22,
  AI_GROUP_UNIT_RADIUS = 0x23,
  AI_GROUP_UNIT_RADIUS_RESET = 0x24,
  AI_GROUP_QUEST_COMPLETE = 0x25,
  AI_GROUP_UNIT_QUESTGIVER = 0x26,
  AI_GROUP_UNIT_TRAINER = 0x27,
  AI_GROUP_SPLINE_PATH = 0x28,
  AI_GROUP_PLAYER_ACTION = 0x29,
  AI_GROUP_RETURN_HOME = 0x2A,
  AI_GROUP_UNIT_SAY_RANDOM = 0x2B,
  AI_GROUP_UNIT_YELL = 0x2C,
  AI_GROUP_UNIT_YELL_RANDOM = 0x2D,
  AI_GROUP_UNIT_SET_ITEM_MAINHAND = 0x2E,
  AI_GROUP_UNIT_RESET_ITEM_MAINHAND = 0x2F,
  AI_GROUP_UNIT_CHAT_EMOTE = 0x30,
  AI_GROUP_UNIT_CHAT_EMOTE_RANDOM = 0x31,
  AI_GROUP_UNIT_GENERATE_EVENT = 0x32,
  AI_GROUP_VENDOR_IDLE_OBSOLETE = 0x33,
  AI_GROUP_QUEST_FAILED = 0x34,
  AI_GROUP_UNIT_TRIGGERS = 0x35,
  AI_GROUP_UNIT_TRIGGERS_RESET = 0x36,
  AI_GROUP_UNIT_LEAVE_COMBAT = 0x37,
  AI_GROUP_IDLE_COMBAT_START = 0x38,
  AI_GROUP_IDLE_COMBAT_STOP = 0x39,
  AI_GROUP_UNIT_IMMUNEPC = 0x3A,
  AI_GROUP_UNIT_IMMUNEPC_RESET = 0x3B,
  AI_GROUP_UNIT_IMMUNENPC = 0x3C,
  AI_GROUP_UNIT_IMMUNENPC_RESET = 0x3D,
  AI_GROUP_UNIT_UNKILLABLE = 0x3E,
  AI_GROUP_UNIT_UNKILLABLE_RESET = 0x3F,
  AI_GROUP_UNIT_SPELLS = 0x40,
  AI_GROUP_UNIT_SPELLS_RESET = 0x41,
  AI_GROUP_REUSEME = 0x42,
  AI_GROUP_UNIT_SEND_LOCAL_EVENT = 0x43,
  AI_GROUP_UNIT_BROADCAST_LOCAL_EVENT = 0x44,
  AI_GROUP_UNIT_FLEE = 0x45,
  AI_GROUP_UNIT_RETREAT = 0x46,
  AI_GROUP_OBJECT_CHAT_EMOTE = 0x47,
  AI_GROUP_OBJECT_CHAT_EMOTE_RANDOM = 0x48,
  AI_GROUP_AVOID = 0x49,
  AI_GROUP_AVOID_GUID = 0x4A,
  AI_GROUP_OBJECT_ACTIVATE = 0x4B,
  AI_GROUP_UNIT_ACTIVATE_OBJECTS = 0x4C,
  AI_GROUP_UNIT_STRINGID = 0x4D,
  AI_GROUP_UNIT_STRINGID_RESET = 0x4E,
  AI_GROUP_PERIODIC_EVENT = 0x4F,
  AI_GROUP_UNIT_SET_ITEM_OFFHAND = 0x50,
  AI_GROUP_UNIT_RESET_ITEM_OFFHAND = 0x51,
  AI_GROUP_UNIT_SET_ITEM_RANGED = 0x52,
  AI_GROUP_UNIT_RESET_ITEM_RANGED = 0x53,
  AI_GROUP_UNIT_SHEATHE = 0x54,
  AI_GROUP_UNIT_UNSHEATHE = 0x55,
  AI_GROUP_UNIT_CANCEL_CAST = 0x56,
  AI_GROUP_UNIT_CANCEL_AURA = 0x57,
  AI_GROUP_UNIT_FINISH_CAST = 0x58,
  AI_GROUP_EMOTE_STATE = 0x59,
  AI_GROUP_UNIT_CALL_FOR_HELP = 0x5A,
  AI_GROUP_FLIGHT_PATH = 0x5B,
  AI_GROUP_UNIT_COMBAT_TRIGGER = 0x5C,
  NUM_AI_GROUP_ACTIONS = 0x5D,
};

/* 439 */
enum STRINGLOOKUP : __int32
{
  SLOOKUP_UNUSED = 0x0,
  SLOOKUP_DEFAULTCURSOR = 0x1,
  SLOOKUP_INVENTORYICONBUTTONGEOMETRY = 0x2,
  SLOOKUP_INVENTORYICONPATH = 0x3,
  SLOOKUP_QUESTGIVERINDICATORTEXTURE = 0x4,
  SLOOKUP_QUESTGIVERINDICATORMODEL = 0x5,
  SLOOKUP_QUESTGIVERINDICATORMODELFUTURE = 0x6,
  SLOOKUP_TAXINODEINDICATORMODEL = 0x7,
  SLOOKUP_BINDERINDICATORMODEL = 0x8,
  SLOOKUP_QUESTGIVERINDICATORMODELCOMPLETION = 0x9,
  NUM_STRINGLOOKUPS = 0xA,
};

/* 440 */
enum WEAPONPARRYSEQ : __int32
{
  WEAPONPARRYSEQ_2HTIGHT = 0x0,
  WEAPONPARRYSEQ_2HLOOSE = 0x1,
  WEAPONPARRYSEQ_1H = 0x2,
  WEAPONPARRYSEQ_STAND = 0x3,
  NUM_WEAPONPARRYSEQS = 0x4,
};

/* 441 */
enum WEAPONREADYSEQ : __int32
{
  WEAPONREADYSEQ_2HTIGHT = 0x0,
  WEAPONREADYSEQ_2HLOOSE = 0x1,
  WEAPONREADYSEQ_1H = 0x2,
  WEAPONREADYSEQ_BOW = 0x3,
  WEAPONREADYSEQ_RIFLE = 0x4,
  WEAPONREADYSEQ_THROWN = 0x5,
  NUM_WEAPONREADYSEQS = 0x6,
};

/* 442 */
enum WEAPONATTACKSEQ : __int32
{
  WEAPONATTACKSEQ_2HTIGHT = 0x0,
  WEAPONATTACKSEQ_2HLOOSE = 0x1,
  WEAPONATTACKSEQ_BOW = 0x2,
  WEAPONATTACKSEQ_1H = 0x3,
  WEAPONATTACKSEQ_RIFLE = 0x4,
  WEAPONATTACKSEQ_THROWN = 0x5,
  NUM_WEAPONATTACKSEQS = 0x6,
};

/* 443 */
enum _D3DLIGHTTYPE : __int32
{
  D3DLIGHT_POINT = 0x1,
  D3DLIGHT_SPOT = 0x2,
  D3DLIGHT_DIRECTIONAL = 0x3,
  D3DLIGHT_FORCE_DWORD = 0x7FFFFFFF,
};

/* 444 */
enum _D3DBLEND : __int32
{
  D3DBLEND_ZERO = 0x1,
  D3DBLEND_ONE = 0x2,
  D3DBLEND_SRCCOLOR = 0x3,
  D3DBLEND_INVSRCCOLOR = 0x4,
  D3DBLEND_SRCALPHA = 0x5,
  D3DBLEND_INVSRCALPHA = 0x6,
  D3DBLEND_DESTALPHA = 0x7,
  D3DBLEND_INVDESTALPHA = 0x8,
  D3DBLEND_DESTCOLOR = 0x9,
  D3DBLEND_INVDESTCOLOR = 0xA,
  D3DBLEND_SRCALPHASAT = 0xB,
  D3DBLEND_BOTHSRCALPHA = 0xC,
  D3DBLEND_BOTHINVSRCALPHA = 0xD,
  D3DBLEND_BLENDFACTOR = 0xE,
  D3DBLEND_INVBLENDFACTOR = 0xF,
  D3DBLEND_FORCE_DWORD = 0x7FFFFFFF,
};

/* 445 */
enum _D3DTEXTUREFILTERTYPE : __int32
{
  D3DTEXF_NONE = 0x0,
  D3DTEXF_POINT = 0x1,
  D3DTEXF_LINEAR = 0x2,
  D3DTEXF_ANISOTROPIC = 0x3,
  D3DTEXF_PYRAMIDALQUAD = 0x6,
  D3DTEXF_GAUSSIANQUAD = 0x7,
  D3DTEXF_FORCE_DWORD = 0x7FFFFFFF,
};

/* 446 */
enum _D3DTEXTUREADDRESS : __int32
{
  D3DTADDRESS_WRAP = 0x1,
  D3DTADDRESS_MIRROR = 0x2,
  D3DTADDRESS_CLAMP = 0x3,
  D3DTADDRESS_BORDER = 0x4,
  D3DTADDRESS_MIRRORONCE = 0x5,
  D3DTADDRESS_FORCE_DWORD = 0x7FFFFFFF,
};

/* 447 */
enum _D3DTEXTUREOP : __int32
{
  D3DTOP_DISABLE = 0x1,
  D3DTOP_SELECTARG1 = 0x2,
  D3DTOP_SELECTARG2 = 0x3,
  D3DTOP_MODULATE = 0x4,
  D3DTOP_MODULATE2X = 0x5,
  D3DTOP_MODULATE4X = 0x6,
  D3DTOP_ADD = 0x7,
  D3DTOP_ADDSIGNED = 0x8,
  D3DTOP_ADDSIGNED2X = 0x9,
  D3DTOP_SUBTRACT = 0xA,
  D3DTOP_ADDSMOOTH = 0xB,
  D3DTOP_BLENDDIFFUSEALPHA = 0xC,
  D3DTOP_BLENDTEXTUREALPHA = 0xD,
  D3DTOP_BLENDFACTORALPHA = 0xE,
  D3DTOP_BLENDTEXTUREALPHAPM = 0xF,
  D3DTOP_BLENDCURRENTALPHA = 0x10,
  D3DTOP_PREMODULATE = 0x11,
  D3DTOP_MODULATEALPHA_ADDCOLOR = 0x12,
  D3DTOP_MODULATECOLOR_ADDALPHA = 0x13,
  D3DTOP_MODULATEINVALPHA_ADDCOLOR = 0x14,
  D3DTOP_MODULATEINVCOLOR_ADDALPHA = 0x15,
  D3DTOP_BUMPENVMAP = 0x16,
  D3DTOP_BUMPENVMAPLUMINANCE = 0x17,
  D3DTOP_DOTPRODUCT3 = 0x18,
  D3DTOP_MULTIPLYADD = 0x19,
  D3DTOP_LERP = 0x1A,
  D3DTOP_FORCE_DWORD = 0x7FFFFFFF,
};

/* 448 */
enum _D3DFOGMODE : __int32
{
  D3DFOG_NONE = 0x0,
  D3DFOG_EXP = 0x1,
  D3DFOG_EXP2 = 0x2,
  D3DFOG_LINEAR = 0x3,
  D3DFOG_FORCE_DWORD = 0x7FFFFFFF,
};

/* 449 */
enum _D3DCMPFUNC : __int32
{
  D3DCMP_NEVER = 0x1,
  D3DCMP_LESS = 0x2,
  D3DCMP_EQUAL = 0x3,
  D3DCMP_LESSEQUAL = 0x4,
  D3DCMP_GREATER = 0x5,
  D3DCMP_NOTEQUAL = 0x6,
  D3DCMP_GREATEREQUAL = 0x7,
  D3DCMP_ALWAYS = 0x8,
  D3DCMP_FORCE_DWORD = 0x7FFFFFFF,
};

/* 450 */
enum _D3DCULL : __int32
{
  D3DCULL_NONE = 0x1,
  D3DCULL_CW = 0x2,
  D3DCULL_CCW = 0x3,
  D3DCULL_FORCE_DWORD = 0x7FFFFFFF,
};

/* 451 */
enum CGxDeviceD3d::EDeviceState : __int32
{
  Ds_SrcBlend = 0x0,
  Ds_DstBlend = 0x1,
  Ds_TssMagFilter0 = 0x2,
  Ds_TssMagFilter1 = 0x3,
  Ds_TssMagFilter2 = 0x4,
  Ds_TssMagFilter3 = 0x5,
  Ds_TssMinFilter0 = 0x6,
  Ds_TssMinFilter1 = 0x7,
  Ds_TssMinFilter2 = 0x8,
  Ds_TssMinFilter3 = 0x9,
  Ds_TssMipFilter0 = 0xA,
  Ds_TssMipFilter1 = 0xB,
  Ds_TssMipFilter2 = 0xC,
  Ds_TssMipFilter3 = 0xD,
  Ds_TssWrapU0 = 0xE,
  Ds_TssWrapU1 = 0xF,
  Ds_TssWrapU2 = 0x10,
  Ds_TssWrapU3 = 0x11,
  Ds_TssWrapV0 = 0x12,
  Ds_TssWrapV1 = 0x13,
  Ds_TssWrapV2 = 0x14,
  Ds_TssWrapV3 = 0x15,
  Ds_TssTTF0 = 0x16,
  Ds_TssTTF1 = 0x17,
  Ds_TssTTF2 = 0x18,
  Ds_TssTTF3 = 0x19,
  Ds_TssMaxAnisotropy0 = 0x1A,
  Ds_TssMaxAnisotropy1 = 0x1B,
  Ds_TssMaxAnisotropy2 = 0x1C,
  Ds_TssMaxAnisotropy3 = 0x1D,
  Ds_DiffuseMaterialSource = 0x1E,
  Ds_AmbientMaterialSource = 0x1F,
  Ds_AlphaBlendEnable = 0x20,
  Ds_AlphaTestEnable = 0x21,
  DeviceStates_Last = 0x22,
};

/* 452 */
enum EGxTexGen : __int32
{
  GxTexGen_Disable = 0x0,
  GxTexGen_Object = 0x1,
  GxTexGen_World = 0x2,
  GxTexGen_View = 0x3,
  GxTexGen_ViewReflection = 0x4,
  GxTexGen_ViewNormal = 0x5,
  GxTexGen_SphereMap = 0x6,
  GxTexGens_Last = 0x7,
};

/* 453 */
enum EGxRenderState : __int32
{
  GxRs_PolygonOffset = 0x0,
  GxRs_MatDiffuse = 0x1,
  GxRs_MatEmissive = 0x2,
  GxRs_MatSpecular = 0x3,
  GxRs_MatSpecularExp = 0x4,
  GxRs_NormalizeNormals = 0x5,
  GxRs_SceneAmbient = 0x6,
  GxRs_Blend = 0x7,
  GxRs_AlphaRef = 0x8,
  GxRs_FogStyle = 0x9,
  GxRs_FogStart = 0xA,
  GxRs_FogEnd = 0xB,
  GxRs_FogDensity = 0xC,
  GxRs_FogColor = 0xD,
  GxRs_Lighting = 0xE,
  GxRs_Fog = 0xF,
  GxRs_DepthTest = 0x10,
  GxRs_DepthFunc = 0x11,
  GxRs_DepthWrite = 0x12,
  GxRs_Culling = 0x13,
  GxRs_Texture0 = 0x14,
  GxRs_Texture1 = 0x15,
  GxRs_Texture2 = 0x16,
  GxRs_Texture3 = 0x17,
  GxRs_TexBlend0 = 0x18,
  GxRs_TexBlend1 = 0x19,
  GxRs_TexBlend2 = 0x1A,
  GxRs_TexBlend3 = 0x1B,
  GxRs_TexLodBias0 = 0x1C,
  GxRs_TexLodBias1 = 0x1D,
  GxRs_TexLodBias2 = 0x1E,
  GxRs_TexLodBias3 = 0x1F,
  GxRs_TexGen0 = 0x20,
  GxRs_TexGen1 = 0x21,
  GxRs_TexGen2 = 0x22,
  GxRs_TexGen3 = 0x23,
  GxRs_TextureShader0 = 0x24,
  GxRs_TextureShader1 = 0x25,
  GxRs_TextureShader2 = 0x26,
  GxRs_TextureShader3 = 0x27,
  GxRs_PixelShader = 0x28,
  GxRs_VertexShader = 0x29,
  GxRenderStates_Last = 0x2A,
};

/* 454 */
enum _D3DFORMAT : __int32
{
  D3DFMT_UNKNOWN = 0x0,
  D3DFMT_R8G8B8 = 0x14,
  D3DFMT_A8R8G8B8 = 0x15,
  D3DFMT_X8R8G8B8 = 0x16,
  D3DFMT_R5G6B5 = 0x17,
  D3DFMT_X1R5G5B5 = 0x18,
  D3DFMT_A1R5G5B5 = 0x19,
  D3DFMT_A4R4G4B4 = 0x1A,
  D3DFMT_R3G3B2 = 0x1B,
  D3DFMT_A8 = 0x1C,
  D3DFMT_A8R3G3B2 = 0x1D,
  D3DFMT_X4R4G4B4 = 0x1E,
  D3DFMT_A2B10G10R10 = 0x1F,
  D3DFMT_A8B8G8R8 = 0x20,
  D3DFMT_X8B8G8R8 = 0x21,
  D3DFMT_G16R16 = 0x22,
  D3DFMT_A2R10G10B10 = 0x23,
  D3DFMT_A16B16G16R16 = 0x24,
  D3DFMT_A8P8 = 0x28,
  D3DFMT_P8 = 0x29,
  D3DFMT_L8 = 0x32,
  D3DFMT_A8L8 = 0x33,
  D3DFMT_A4L4 = 0x34,
  D3DFMT_V8U8 = 0x3C,
  D3DFMT_L6V5U5 = 0x3D,
  D3DFMT_X8L8V8U8 = 0x3E,
  D3DFMT_Q8W8V8U8 = 0x3F,
  D3DFMT_V16U16 = 0x40,
  D3DFMT_A2W10V10U10 = 0x43,
  D3DFMT_UYVY = 0x59565955,
  D3DFMT_R8G8_B8G8 = 0x47424752,
  D3DFMT_YUY2 = 0x32595559,
  D3DFMT_G8R8_G8B8 = 0x42475247,
  D3DFMT_DXT1 = 0x31545844,
  D3DFMT_DXT2 = 0x32545844,
  D3DFMT_DXT3 = 0x33545844,
  D3DFMT_DXT4 = 0x34545844,
  D3DFMT_DXT5 = 0x35545844,
  D3DFMT_D16_LOCKABLE = 0x46,
  D3DFMT_D32 = 0x47,
  D3DFMT_D15S1 = 0x49,
  D3DFMT_D24S8 = 0x4B,
  D3DFMT_D24X8 = 0x4D,
  D3DFMT_D24X4S4 = 0x4F,
  D3DFMT_D16 = 0x50,
  D3DFMT_D32F_LOCKABLE = 0x52,
  D3DFMT_D24FS8 = 0x53,
  D3DFMT_L16 = 0x51,
  D3DFMT_VERTEXDATA = 0x64,
  D3DFMT_INDEX16 = 0x65,
  D3DFMT_INDEX32 = 0x66,
  D3DFMT_Q16W16V16U16 = 0x6E,
  D3DFMT_MULTI2_ARGB8 = 0x3154454D,
  D3DFMT_R16F = 0x6F,
  D3DFMT_G16R16F = 0x70,
  D3DFMT_A16B16G16R16F = 0x71,
  D3DFMT_R32F = 0x72,
  D3DFMT_G32R32F = 0x73,
  D3DFMT_A32B32G32R32F = 0x74,
  D3DFMT_CxV8U8 = 0x75,
  D3DFMT_FORCE_DWORD = 0x7FFFFFFF,
};

/* 455 */
enum _D3DMULTISAMPLE_TYPE : __int32
{
  D3DMULTISAMPLE_NONE = 0x0,
  D3DMULTISAMPLE_NONMASKABLE = 0x1,
  D3DMULTISAMPLE_2_SAMPLES = 0x2,
  D3DMULTISAMPLE_3_SAMPLES = 0x3,
  D3DMULTISAMPLE_4_SAMPLES = 0x4,
  D3DMULTISAMPLE_5_SAMPLES = 0x5,
  D3DMULTISAMPLE_6_SAMPLES = 0x6,
  D3DMULTISAMPLE_7_SAMPLES = 0x7,
  D3DMULTISAMPLE_8_SAMPLES = 0x8,
  D3DMULTISAMPLE_9_SAMPLES = 0x9,
  D3DMULTISAMPLE_10_SAMPLES = 0xA,
  D3DMULTISAMPLE_11_SAMPLES = 0xB,
  D3DMULTISAMPLE_12_SAMPLES = 0xC,
  D3DMULTISAMPLE_13_SAMPLES = 0xD,
  D3DMULTISAMPLE_14_SAMPLES = 0xE,
  D3DMULTISAMPLE_15_SAMPLES = 0xF,
  D3DMULTISAMPLE_16_SAMPLES = 0x10,
  D3DMULTISAMPLE_FORCE_DWORD = 0x7FFFFFFF,
};

/* 456 */
enum _D3DSWAPEFFECT : __int32
{
  D3DSWAPEFFECT_DISCARD = 0x1,
  D3DSWAPEFFECT_FLIP = 0x2,
  D3DSWAPEFFECT_COPY = 0x3,
  D3DSWAPEFFECT_FORCE_DWORD = 0x7FFFFFFF,
};

/* 457 */
enum _D3DRESOURCETYPE : __int32
{
  D3DRTYPE_SURFACE = 0x1,
  D3DRTYPE_VOLUME = 0x2,
  D3DRTYPE_TEXTURE = 0x3,
  D3DRTYPE_VOLUMETEXTURE = 0x4,
  D3DRTYPE_CUBETEXTURE = 0x5,
  D3DRTYPE_VERTEXBUFFER = 0x6,
  D3DRTYPE_INDEXBUFFER = 0x7,
  D3DRTYPE_FORCE_DWORD = 0x7FFFFFFF,
};

/* 458 */
enum _D3DPOOL : __int32
{
  D3DPOOL_DEFAULT = 0x0,
  D3DPOOL_MANAGED = 0x1,
  D3DPOOL_SYSTEMMEM = 0x2,
  D3DPOOL_SCRATCH = 0x3,
  D3DPOOL_FORCE_DWORD = 0x7FFFFFFF,
};

/* 459 */
enum _D3DPRIMITIVETYPE : __int32
{
  D3DPT_POINTLIST = 0x1,
  D3DPT_LINELIST = 0x2,
  D3DPT_LINESTRIP = 0x3,
  D3DPT_TRIANGLELIST = 0x4,
  D3DPT_TRIANGLESTRIP = 0x5,
  D3DPT_TRIANGLEFAN = 0x6,
  D3DPT_FORCE_DWORD = 0x7FFFFFFF,
};

/* 460 */
enum _D3DCUBEMAP_FACES : __int32
{
  D3DCUBEMAP_FACE_POSITIVE_X = 0x0,
  D3DCUBEMAP_FACE_NEGATIVE_X = 0x1,
  D3DCUBEMAP_FACE_POSITIVE_Y = 0x2,
  D3DCUBEMAP_FACE_NEGATIVE_Y = 0x3,
  D3DCUBEMAP_FACE_POSITIVE_Z = 0x4,
  D3DCUBEMAP_FACE_NEGATIVE_Z = 0x5,
  D3DCUBEMAP_FACE_FORCE_DWORD = 0x7FFFFFFF,
};

/* 461 */
typedef CGxDeviceD3d::EDeviceState CGxDeviceOpenGl::EDeviceState;

/* 462 */
enum CGxDeviceOpenGl::EColorSource : __int32
{
  Cs_Material = 0x0,
  Cs_Constant = 0x1,
  Cs_Array = 0x2,
  ColorSources_Last = 0x3,
};

/* 463 */
enum CGxFormat::Format : __int32
{
  Fmt_Rgb565 = 0x0,
  Fmt_ArgbX888 = 0x1,
  Fmt_Argb8888 = 0x2,
  Fmt_Argb2101010 = 0x3,
  Fmt_Ds160 = 0x4,
  Fmt_Ds24X = 0x5,
  Fmt_Ds248 = 0x6,
  Fmt_Ds320 = 0x7,
  Formats_Last = 0x8,
};

/* 464 */
enum EGxWM : __int32
{
  GxWM_Size = 0x0,
  GxWM_DisplayChange = 0x1,
  GxWM_Destroy = 0x2,
  GxWM_SetFocus = 0x3,
  GxWM_KillFocus = 0x4,
};

/* 465 */
enum EGxBuffer : __int32
{
  GxBuffers_Color = 0x0,
  GxBuffers_Depth = 0x1,
  GxBuffers_Last = 0x2,
};

/* 466 */
enum EGxOverride : __int32
{
  GxOverride_PixelShader = 0x0,
  GxOverrides_Last = 0x1,
};

/* 467 */
enum _D3DDEVTYPE : __int32
{
  D3DDEVTYPE_HAL = 0x1,
  D3DDEVTYPE_REF = 0x2,
  D3DDEVTYPE_SW = 0x3,
  D3DDEVTYPE_FORCE_DWORD = 0x7FFFFFFF,
};

/* 468 */
enum CGxBuf::Status : __int32
{
  S_VALID = 0x0,
  S_INVALID_DISCARD = 0x1,
  S_INVALID_RELOAD = 0x2,
};

/* 469 */
enum EGxApi : __int32
{
  GxApi_OpenGl = 0x0,
  GxApi_Direct3d = 0x1,
  GxApis_Last = 0x2,
};

/* 470 */
enum EGxXform : __int32
{
  GxXform_Tex0 = 0x0,
  GxXform_Tex1 = 0x1,
  GxXform_Tex2 = 0x2,
  GxXform_Tex3 = 0x3,
  GxXform_World = 0x4,
  GxXform_Projection = 0x5,
  GxXform_View = 0x6,
  GxXforms_Last = 0x7,
};

/* 471 */
enum EGxMasterEnables : __int32
{
  GxMasterEnable_Lighting = 0x0,
  GxMasterEnable_Fog = 0x1,
  GxMasterEnable_DepthTest = 0x2,
  GxMasterEnable_DepthWrite = 0x3,
  GxMasterEnable_Culling = 0x4,
  GxMasterEnable_ClearOnPresent = 0x5,
  GxMasterEnable_DoubleBuffering = 0x6,
  GxMasterEnable_NormalProjection = 0x7,
  GxMasterEnable_PolygonFill = 0x8,
  GxMasterEnables_Last = 0x9,
};

/* 472 */
enum EGxPerfCounter : __int32
{
  GxPerf_FrameRate = 0x0,
  GxPerf_FrameNum = 0x1,
  GxPerf_Vertices = 0x2,
  GxPerf_Primitives = 0x3,
  GxPerf_Batches = 0x4,
  GxPerf_Textures = 0x5,
  GxPerf_TextureBytes = 0x6,
  GxPerf_TexUploads = 0x7,
  GxPerf_TexUploadBytes = 0x8,
  GxPerf_TexBinds = 0x9,
  GxPerf_TexBindBytes = 0xA,
  GxPerf_VertexBytes = 0xB,
  GxPerf_IndexBytes = 0xC,
  GxPerfCounters_Last = 0xD,
};

/* 473 */
enum BlitFormat : __int32
{
  BlitFormat_Unknown = 0x0,
  BlitFormat_Argb8888 = 0x1,
  BlitFormat_Argb4444 = 0x2,
  BlitFormat_Argb1555 = 0x3,
  BlitFormat_Rgb565 = 0x4,
  BlitFormat_Dxt1 = 0x5,
  BlitFormat_Dxt3 = 0x6,
  BlitFormat_Dxt5 = 0x7,
  BlitFormats_Last = 0x8,
};

/* 474 */
enum tagVARFLAGS : __int32
{
  VARFLAG_FREADONLY = 0x1,
  VARFLAG_FSOURCE = 0x2,
  VARFLAG_FBINDABLE = 0x4,
  VARFLAG_FREQUESTEDIT = 0x8,
  VARFLAG_FDISPLAYBIND = 0x10,
  VARFLAG_FDEFAULTBIND = 0x20,
  VARFLAG_FHIDDEN = 0x40,
  VARFLAG_FRESTRICTED = 0x80,
  VARFLAG_FDEFAULTCOLLELEM = 0x100,
  VARFLAG_FUIDEFAULT = 0x200,
  VARFLAG_FNONBROWSABLE = 0x400,
  VARFLAG_FREPLACEABLE = 0x800,
  VARFLAG_FIMMEDIATEBIND = 0x1000,
};

/* 475 */
enum NTempest::ETempestError : __int32
{
  eSuccess = 0x0,
  eFailure = 0x1,
  eFatalErr = 0x1,
  eIOErr = 0x64,
  eEndOfFileErr = 0x65,
  eFileNotFoundErr = 0x66,
  eDirNotFoundErr = 0x67,
  eDiskFullErr = 0x68,
  ePathErr = 0x69,
  ePermissionErr = 0x6A,
  eFormatErr = 0xC8,
  eVersionErr = 0xC9,
  eTagcodeErr = 0xCA,
  eKeycodeErr = 0xCB,
  eNotFoundErr = 0xCC,
  eDuplicatedErr = 0xCD,
  eDamagedErr = 0xCE,
  eMemoryErr = 0xCF,
  eMemManagErr = 0xD0,
  eExpansionErr = 0xD1,
  eCreationErr = 0xD2,
  eWrongTypeErr = 0xD3,
  eStatusErr = 0xD4,
  eParamErr = 0xD5,
  eInUseErr = 0xD6,
  eBusyErr = 0xD7,
  eTooManyErr = 0xD8,
  eNotEnoughErr = 0xD9,
  eBufferErr = 0xDA,
  eSizeErr = 0xDB,
  eNestingErr = 0xDC,
  eCanceledErr = 0x12C,
  eCompletedErr = 0x12D,
  eHandledErr = 0x12E,
  eUnimplemErr = 0x12F,
  eErrBaseU_ = 0xFFF,
};

/* 476 */
enum _BIN_TYPES : __int32
{
  RequestSize = 0x0,
  RequestLocation = 0x1,
};

/* 477 */
enum _JOBOBJECTINFOCLASS : __int32
{
  JobObjectBasicAccountingInformation = 0x1,
  JobObjectBasicLimitInformation = 0x2,
  JobObjectBasicProcessIdList = 0x3,
  JobObjectBasicUIRestrictions = 0x4,
  JobObjectSecurityLimitInformation = 0x5,
  JobObjectEndOfJobTimeInformation = 0x6,
  JobObjectAssociateCompletionPortInformation = 0x7,
  JobObjectBasicAndIoAccountingInformation = 0x8,
  JobObjectExtendedLimitInformation = 0x9,
  JobObjectJobSetInformation = 0xA,
  MaxJobObjectInfoClass = 0xB,
};

/* 478 */
enum tagOLEVERBATTRIB : __int32
{
  OLEVERBATTRIB_NEVERDIRTIES = 0x1,
  OLEVERBATTRIB_ONCONTAINERMENU = 0x2,
};

/* 479 */
enum _SC_STATUS_TYPE : __int32
{
  SC_STATUS_PROCESS_INFO = 0x0,
};

/* 480 */
enum _SC_ENUM_TYPE : __int32
{
  SC_ENUM_PROCESS_INFO = 0x0,
};

/* 481 */
enum _CM_SERVICE_NODE_TYPE : __int32
{
  DriverType = 0x1,
  FileSystemType = 0x2,
  Win32ServiceOwnProcess = 0x10,
  Win32ServiceShareProcess = 0x20,
  AdapterType = 0x4,
  RecognizerType = 0x8,
};

/* 482 */
enum _ELEMENT_TYPE : __int32
{
  AllElements = 0x0,
  ChangerTransport = 0x1,
  ChangerSlot = 0x2,
  ChangerIEPort = 0x3,
  ChangerDrive = 0x4,
  ChangerDoor = 0x5,
  ChangerKeypad = 0x6,
  ChangerMaxElement = 0x7,
};

/* 483 */
enum tagURLTEMPLATE : __int32
{
  URLTEMPLATE_CUSTOM = 0x0,
  URLTEMPLATE_PREDEFINED_MIN = 0x10000,
  URLTEMPLATE_LOW = 0x10000,
  URLTEMPLATE_MEDLOW = 0x10500,
  URLTEMPLATE_MEDIUM = 0x11000,
  URLTEMPLATE_HIGH = 0x12000,
  URLTEMPLATE_PREDEFINED_MAX = 0x20000,
};

/* 484 */
enum _CM_SERVICE_LOAD_TYPE : __int32
{
  BootLoad = 0x0,
  SystemLoad = 0x1,
  AutoLoad = 0x2,
  DemandLoad = 0x3,
  DisableLoad = 0x4,
};

/* 485 */
enum __MIDL_IInternetZoneManager_0001 : __int32
{
  MAX_ZONE_PATH = 0x104,
  MAX_ZONE_DESCRIPTION = 0xC8,
};

/* 486 */
enum _CM_ERROR_CONTROL_TYPE : __int32
{
  IgnoreError = 0x0,
  NormalError = 0x1,
  SevereError = 0x2,
  CriticalError = 0x3,
};

/* 487 */
enum __MIDL_IInternetZoneManager_0002 : __int32
{
  ZAFLAGS_CUSTOM_EDIT = 0x1,
  ZAFLAGS_ADD_SITES = 0x2,
  ZAFLAGS_REQUIRE_VERIFICATION = 0x4,
  ZAFLAGS_INCLUDE_PROXY_OVERRIDE = 0x8,
  ZAFLAGS_INCLUDE_INTRANET_SITES = 0x10,
  ZAFLAGS_NO_UI = 0x20,
  ZAFLAGS_SUPPORTS_VERIFICATION = 0x40,
  ZAFLAGS_UNC_AS_INTRANET = 0x80,
};

/* 488 */
enum tagCOINIT : __int32
{
  COINIT_APARTMENTTHREADED = 0x2,
};

/* 489 */
enum BlitAlpha : __int32
{
  BlitAlpha_0 = 0x0,
  BlitAlpha_1 = 0x1,
  BlitAlpha_8 = 0x2,
  BlitAlpha_Filler = 0x3,
  BlitAlphas_Last = 0x4,
};

/* 490 */
enum tagMKSYS : __int32
{
  MKSYS_NONE = 0x0,
  MKSYS_GENERICCOMPOSITE = 0x1,
  MKSYS_FILEMONIKER = 0x2,
  MKSYS_ANTIMONIKER = 0x3,
  MKSYS_ITEMMONIKER = 0x4,
  MKSYS_POINTERMONIKER = 0x5,
  MKSYS_CLASSMONIKER = 0x7,
  MKSYS_OBJREFMONIKER = 0x8,
  MKSYS_SESSIONMONIKER = 0x9,
};

/* 491 */
enum tagMKREDUCE : __int32
{
  MKRREDUCE_ONE = 0x30000,
  MKRREDUCE_TOUSER = 0x20000,
  MKRREDUCE_THROUGHUSER = 0x10000,
  MKRREDUCE_ALL = 0x0,
};

/* 492 */
enum tagOLERENDER : __int32
{
  OLERENDER_NONE = 0x0,
  OLERENDER_DRAW = 0x1,
  OLERENDER_FORMAT = 0x2,
  OLERENDER_ASIS = 0x3,
};

/* 493 */
enum _tagPI_FLAGS : __int32
{
  PI_PARSE_URL = 0x1,
  PI_FILTER_MODE = 0x2,
  PI_FORCE_ASYNC = 0x4,
  PI_USE_WORKERTHREAD = 0x8,
  PI_MIMEVERIFICATION = 0x10,
  PI_CLSIDLOOKUP = 0x20,
  PI_DATAPROGRESS = 0x40,
  PI_SYNCHRONOUS = 0x80,
  PI_APARTMENTTHREADED = 0x100,
  PI_CLASSINSTALL = 0x200,
  PI_PASSONBINDCTX = 0x2000,
  PI_NOMIMEHANDLER = 0x8000,
  PI_LOADAPPDIRECT = 0x4000,
  PD_FORCE_SWITCH = 0x10000,
  PI_PREFERDEFAULTHANDLER = 0x20000,
};

/* 494 */
enum EGx : __int32
{
  Gx_SizeMinimized = 0x1,
  Gx_SizeMaxHide = 0x2,
};

/* 495 */
enum _SYSTEM_POWER_STATE : __int32
{
  PowerSystemUnspecified = 0x0,
  PowerSystemWorking = 0x1,
  PowerSystemSleeping1 = 0x2,
  PowerSystemSleeping2 = 0x3,
  PowerSystemSleeping3 = 0x4,
  PowerSystemHibernate = 0x5,
  PowerSystemShutdown = 0x6,
  PowerSystemMaximum = 0x7,
};

/* 496 */
enum _DEVICE_POWER_STATE : __int32
{
  PowerDeviceUnspecified = 0x0,
  PowerDeviceD0 = 0x1,
  PowerDeviceD1 = 0x2,
  PowerDeviceD2 = 0x3,
  PowerDeviceD3 = 0x4,
  PowerDeviceMaximum = 0x5,
};

/* 497 */
enum tagOLEUPDATE : __int32
{
  OLEUPDATE_ALWAYS = 0x1,
  OLEUPDATE_ONCALL = 0x3,
};

/* 498 */
enum tagSTDMSHLFLAGS : __int32
{
  SMEXF_SERVER = 0x1,
  SMEXF_HANDLER = 0x2,
};

/* 499 */
enum tagOLELINKBIND : __int32
{
  OLELINKBIND_EVENIFCLASSDIFF = 0x1,
};

/* 500 */
enum _SID_NAME_USE : __int32
{
  SidTypeUser = 0x1,
  SidTypeGroup = 0x2,
  SidTypeDomain = 0x3,
  SidTypeAlias = 0x4,
  SidTypeWellKnownGroup = 0x5,
  SidTypeDeletedAccount = 0x6,
  SidTypeInvalid = 0x7,
  SidTypeUnknown = 0x8,
  SidTypeComputer = 0x9,
};

/* 501 */
enum tagADVF : __int32
{
  ADVF_NODATA = 0x1,
  ADVF_PRIMEFIRST = 0x2,
  ADVF_ONLYONCE = 0x4,
  ADVF_DATAONSTOP = 0x40,
  ADVFCACHE_NOHANDLER = 0x8,
  ADVFCACHE_FORCEBUILTIN = 0x10,
  ADVFCACHE_ONSAVE = 0x20,
};

/* 502 */
enum _TAPE_DRIVE_PROBLEM_TYPE : __int32
{
  TapeDriveProblemNone = 0x0,
  TapeDriveReadWriteWarning = 0x1,
  TapeDriveReadWriteError = 0x2,
  TapeDriveReadWarning = 0x3,
  TapeDriveWriteWarning = 0x4,
  TapeDriveReadError = 0x5,
  TapeDriveWriteError = 0x6,
  TapeDriveHardwareError = 0x7,
  TapeDriveUnsupportedMedia = 0x8,
  TapeDriveScsiConnectionError = 0x9,
  TapeDriveTimetoClean = 0xA,
  TapeDriveCleanDriveNow = 0xB,
  TapeDriveMediaLifeExpired = 0xC,
  TapeDriveSnappedTape = 0xD,
};

/* 503 */
enum _EXCEPTION_DISPOSITION : __int32
{
  ExceptionContinueExecution = 0x0,
  ExceptionContinueSearch = 0x1,
  ExceptionNestedException = 0x2,
  ExceptionCollidedUnwind = 0x3,
};

/* 504 */
enum EGxTexCubeFace : __int32
{
  GxTex_PositiveX = 0x0,
  GxTex_NegativeX = 0x1,
  GxTex_PositiveY = 0x2,
  GxTex_NegativeY = 0x3,
  GxTex_PositiveZ = 0x4,
  GxTex_NegativeZ = 0x5,
  GxTexCubeFaces_Last = 0x6,
};

/* 505 */
enum __MIDL_IMonikerProp_0001 : __int32
{
  MIMETYPEPROP = 0x0,
};

/* 506 */
enum _CHANGER_DEVICE_PROBLEM_TYPE : __int32
{
  DeviceProblemNone = 0x0,
  DeviceProblemHardware = 0x1,
  DeviceProblemCHMError = 0x2,
  DeviceProblemDoorOpen = 0x3,
  DeviceProblemCalibrationError = 0x4,
  DeviceProblemTargetFailure = 0x5,
  DeviceProblemCHMMoveError = 0x6,
  DeviceProblemCHMZeroError = 0x7,
  DeviceProblemCartridgeInsertError = 0x8,
  DeviceProblemPositionError = 0x9,
  DeviceProblemSensorError = 0xA,
  DeviceProblemCartridgeEjectError = 0xB,
  DeviceProblemGripperError = 0xC,
  DeviceProblemDriveError = 0xD,
};

/* 507 */
enum tagTYMED : __int32
{
  TYMED_HGLOBAL = 0x1,
  TYMED_FILE = 0x2,
  TYMED_ISTREAM = 0x4,
  TYMED_ISTORAGE = 0x8,
  TYMED_GDI = 0x10,
  TYMED_MFPICT = 0x20,
  TYMED_ENHMF = 0x40,
  TYMED_NULL = 0x0,
};

/* 508 */
enum tagLIBFLAGS : __int32
{
  LIBFLAG_FRESTRICTED = 0x1,
  LIBFLAG_FCONTROL = 0x2,
  LIBFLAG_FHIDDEN = 0x4,
  LIBFLAG_FHASDISKIMAGE = 0x8,
};

/* 509 */
enum tagBINDSPEED : __int32
{
  BINDSPEED_INDEFINITE = 0x1,
  BINDSPEED_MODERATE = 0x2,
  BINDSPEED_IMMEDIATE = 0x3,
};

/* 510 */
enum EGxBufferBit : __int32
{
  GxBufferBit_Color = 0x1,
  GxBufferBit_Depth = 0x2,
};

/* 511 */
enum tagOLECONTF : __int32
{
  OLECONTF_EMBEDDINGS = 0x1,
  OLECONTF_LINKS = 0x2,
  OLECONTF_OTHERS = 0x4,
  OLECONTF_ONLYUSER = 0x8,
  OLECONTF_ONLYIFRUNNING = 0x10,
};

/* 512 */
enum SFILE2_OPEN_FLAGS : __int32
{
  SFILE2_LOAD_MD5 = 0x10000,
};

/* 513 */
enum __MIDL_IBindStatusCallback_0001 : __int32
{
  BINDVERB_GET = 0x0,
  BINDVERB_POST = 0x1,
  BINDVERB_PUT = 0x2,
  BINDVERB_CUSTOM = 0x3,
};

/* 514 */
enum tagExtendedErrorParamTypes : __int32
{
  eeptAnsiString = 0x1,
  eeptUnicodeString = 0x2,
  eeptLongVal = 0x3,
  eeptShortVal = 0x4,
  eeptPointerVal = 0x5,
  eeptNone = 0x6,
  eeptBinary = 0x7,
};

/* 515 */
enum __MIDL_IBindStatusCallback_0002 : __int32
{
  BINDINFOF_URLENCODESTGMEDDATA = 0x1,
  BINDINFOF_URLENCODEDEXTRAINFO = 0x2,
};

/* 516 */
enum __MIDL_IBindStatusCallback_0003 : __int32
{
  BINDF_ASYNCHRONOUS = 0x1,
  BINDF_ASYNCSTORAGE = 0x2,
  BINDF_NOPROGRESSIVERENDERING = 0x4,
  BINDF_OFFLINEOPERATION = 0x8,
  BINDF_GETNEWESTVERSION = 0x10,
  BINDF_NOWRITECACHE = 0x20,
  BINDF_NEEDFILE = 0x40,
  BINDF_PULLDATA = 0x80,
  BINDF_IGNORESECURITYPROBLEM = 0x100,
  BINDF_RESYNCHRONIZE = 0x200,
  BINDF_HYPERLINK = 0x400,
  BINDF_NO_UI = 0x800,
  BINDF_SILENTOPERATION = 0x1000,
  BINDF_PRAGMA_NO_CACHE = 0x2000,
  BINDF_GETCLASSOBJECT = 0x4000,
  BINDF_RESERVED_1 = 0x8000,
  BINDF_FREE_THREADED = 0x10000,
  BINDF_DIRECT_READ = 0x20000,
  BINDF_FORMS_SUBMIT = 0x40000,
  BINDF_GETFROMCACHE_IF_NET_FAIL = 0x80000,
  BINDF_FROMURLMON = 0x100000,
  BINDF_FWD_BACK = 0x200000,
  BINDF_PREFERDEFAULTHANDLER = 0x400000,
  BINDF_ENFORCERESTRICTED = 0x800000,
};

/* 517 */
enum _tagOIBDG_FLAGS : __int32
{
  OIBDG_APARTMENTTHREADED = 0x100,
  OIBDG_DATAONLY = 0x1000,
};

/* 518 */
enum __MIDL_IBindStatusCallback_0004 : __int32
{
  URL_ENCODING_NONE = 0x0,
  URL_ENCODING_ENABLE_UTF8 = 0x10000000,
  URL_ENCODING_DISABLE_UTF8 = 0x20000000,
};

/* 519 */
enum EGxEnable : __int32
{
  Gx_Disable = 0x0,
  Gx_Enable = 0x1,
};

/* 520 */
enum EGxFogStyle : __int32
{
  GxFog_Linear = 0x0,
  GxFog_Exp = 0x1,
  GxFog_Exp2 = 0x2,
  GxFogStyles_Last = 0x3,
};

/* 521 */
enum tagSTGTY : __int32
{
  STGTY_STORAGE = 0x1,
  STGTY_STREAM = 0x2,
  STGTY_LOCKBYTES = 0x3,
  STGTY_PROPERTY = 0x4,
};

/* 522 */
enum tagSF_TYPE : __int32
{
  SF_ERROR = 0xA,
  SF_I1 = 0x10,
  SF_I2 = 0x2,
  SF_I4 = 0x3,
  SF_I8 = 0x14,
  SF_BSTR = 0x8,
  SF_UNKNOWN = 0xD,
  SF_DISPATCH = 0x9,
  SF_VARIANT = 0xC,
  SF_RECORD = 0x24,
  SF_HAVEIID = 0x800D,
};

/* 523 */
enum EGxCmp : __int32
{
  GxCmp_LEqual = 0x0,
  GxCmp_Equal = 0x1,
  GxCmp_GEqual = 0x2,
  GxCmps_Last = 0x3,
};

/* 524 */
enum tagSTREAM_SEEK : __int32
{
  STREAM_SEEK_SET = 0x0,
  STREAM_SEEK_CUR = 0x1,
  STREAM_SEEK_END = 0x2,
};

/* 525 */
enum tagLOCKTYPE : __int32
{
  LOCK_WRITE = 0x1,
  LOCK_EXCLUSIVE = 0x2,
  LOCK_ONLYONCE = 0x4,
};

/* 526 */
enum _APTTYPE : __int32
{
  APTTYPE_CURRENT = 0xFFFFFFFF,
  APTTYPE_STA = 0x0,
  APTTYPE_MTA = 0x1,
  APTTYPE_NA = 0x2,
  APTTYPE_MAINSTA = 0x3,
};

/* 527 */
enum _ACL_INFORMATION_CLASS : __int32
{
  AclRevisionInformation = 0x1,
  AclSizeInformation = 0x2,
};

/* 528 */
enum _THDTYPE : __int32
{
  THDTYPE_BLOCKMESSAGES = 0x0,
  THDTYPE_PROCESSMESSAGES = 0x1,
};

/* 529 */
enum tagEXTCONN : __int32
{
  EXTCONN_STRONG = 0x1,
  EXTCONN_WEAK = 0x2,
  EXTCONN_CALLABLE = 0x4,
};

/* 530 */
enum __MIDL_IBindStatusCallback_0005 : __int32
{
  BINDINFO_OPTIONS_WININETFLAG = 0x10000,
  BINDINFO_OPTIONS_ENABLE_UTF8 = 0x20000,
  BINDINFO_OPTIONS_DISABLE_UTF8 = 0x40000,
  BINDINFO_OPTIONS_USE_IE_ENCODING = 0x80000,
  BINDINFO_OPTIONS_BINDTOOBJECT = 0x100000,
};

/* 531 */
enum __MIDL_IBindStatusCallback_0006 : __int32
{
  BSCF_FIRSTDATANOTIFICATION = 0x1,
  BSCF_INTERMEDIATEDATANOTIFICATION = 0x2,
  BSCF_LASTDATANOTIFICATION = 0x4,
  BSCF_DATAFULLYAVAILABLE = 0x8,
  BSCF_AVAILABLEDATASIZEUNKNOWN = 0x10,
};

/* 532 */
enum _AUDIT_EVENT_TYPE : __int32
{
  AuditEventObjectAccess = 0x0,
  AuditEventDirectoryServiceAccess = 0x1,
};

/* 533 */
enum IMPORT_OBJECT_TYPE : __int32
{
  IMPORT_OBJECT_CODE = 0x0,
  IMPORT_OBJECT_DATA = 0x1,
  IMPORT_OBJECT_CONST = 0x2,
};

/* 534 */
enum IMPORT_OBJECT_NAME_TYPE : __int32
{
  IMPORT_OBJECT_ORDINAL = 0x0,
  IMPORT_OBJECT_NAME = 0x1,
  IMPORT_OBJECT_NAME_NO_PREFIX = 0x2,
  IMPORT_OBJECT_NAME_UNDECORATE = 0x3,
};

/* 535 */
enum _TOKEN_TYPE : __int32
{
  TokenPrimary = 0x1,
  TokenImpersonation = 0x2,
};

/* 536 */
enum _TOKEN_INFORMATION_CLASS : __int32
{
  TokenUser = 0x1,
  TokenGroups = 0x2,
  TokenPrivileges = 0x3,
  TokenOwner = 0x4,
  TokenPrimaryGroup = 0x5,
  TokenDefaultDacl = 0x6,
  TokenSource = 0x7,
  TokenType = 0x8,
  TokenImpersonationLevel = 0x9,
  TokenStatistics = 0xA,
  TokenRestrictedSids = 0xB,
  TokenSessionId = 0xC,
  TokenGroupsAndPrivileges = 0xD,
  TokenSessionReference = 0xE,
  TokenSandBoxInert = 0xF,
};

/* 537 */
enum _STORAGE_MEDIA_TYPE : __int32
{
  DDS_4mm = 0x20,
  MiniQic = 0x21,
  Travan = 0x22,
  QIC = 0x23,
  MP_8mm = 0x24,
  AME_8mm = 0x25,
  AIT1_8mm = 0x26,
  DLT = 0x27,
  NCTP = 0x28,
  IBM_3480 = 0x29,
  IBM_3490E = 0x2A,
  IBM_Magstar_3590 = 0x2B,
  IBM_Magstar_MP = 0x2C,
  STK_DATA_D3 = 0x2D,
  SONY_DTF = 0x2E,
  DV_6mm = 0x2F,
  DMI = 0x30,
  SONY_D2 = 0x31,
  CLEANER_CARTRIDGE = 0x32,
  CD_ROM = 0x33,
  CD_R = 0x34,
  CD_RW = 0x35,
  DVD_ROM = 0x36,
  DVD_R = 0x37,
  DVD_RW = 0x38,
  MO_3_RW = 0x39,
  MO_5_WO = 0x3A,
  MO_5_RW = 0x3B,
  MO_5_LIMDOW = 0x3C,
  PC_5_WO = 0x3D,
  PC_5_RW = 0x3E,
  PD_5_RW = 0x3F,
  ABL_5_WO = 0x40,
  PINNACLE_APEX_5_RW = 0x41,
  SONY_12_WO = 0x42,
  PHILIPS_12_WO = 0x43,
  HITACHI_12_WO = 0x44,
  CYGNET_12_WO = 0x45,
  KODAK_14_WO = 0x46,
  MO_NFR_525 = 0x47,
  NIKON_12_RW = 0x48,
  IOMEGA_ZIP = 0x49,
  IOMEGA_JAZ = 0x4A,
  SYQUEST_EZ135 = 0x4B,
  SYQUEST_EZFLYER = 0x4C,
  SYQUEST_SYJET = 0x4D,
  AVATAR_F2 = 0x4E,
  MP2_8mm = 0x4F,
  DST_S = 0x50,
  DST_M = 0x51,
  DST_L = 0x52,
  VXATape_1 = 0x53,
  VXATape_2 = 0x54,
  STK_9840 = 0x55,
  LTO_Ultrium = 0x56,
  LTO_Accelis = 0x57,
  DVD_RAM = 0x58,
  AIT_8mm = 0x59,
  ADR_1 = 0x5A,
  ADR_2 = 0x5B,
};

/* 538 */
enum tagDISCARDCACHE : __int32
{
  DISCARDCACHE_SAVEIFDIRTY = 0x0,
  DISCARDCACHE_NOSAVE = 0x1,
};

/* 539 */
enum _USER_MARSHAL_CB_TYPE : __int32
{
  USER_MARSHAL_CB_BUFFER_SIZE = 0x0,
  USER_MARSHAL_CB_MARSHALL = 0x1,
  USER_MARSHAL_CB_UNMARSHALL = 0x2,
  USER_MARSHAL_CB_FREE = 0x3,
};

/* 540 */
enum tagDATADIR : __int32
{
  DATADIR_GET = 0x1,
  DATADIR_SET = 0x2,
};

/* 541 */
enum _STORAGE_BUS_TYPE : __int32
{
  BusTypeUnknown = 0x0,
  BusTypeScsi = 0x1,
  BusTypeAtapi = 0x2,
  BusTypeAta = 0x3,
  BusType1394 = 0x4,
  BusTypeSsa = 0x5,
  BusTypeFibre = 0x6,
  BusTypeUsb = 0x7,
  BusTypeRAID = 0x8,
  BusTypeMaxReserved = 0x7F,
};

/* 542 */
enum tagBIND_FLAGS : __int32
{
  BIND_MAYBOTHERUSER = 0x1,
  BIND_JUSTTESTEXISTENCE = 0x2,
};

/* 543 */
enum RPC_ADDRESS_CHANGE_TYPE : __int32
{
  PROTOCOL_NOT_LOADED = 0x1,
  PROTOCOL_LOADED = 0x2,
  PROTOCOL_ADDRESS_CHANGE = 0x3,
};

/* 544 */
enum _MEDIA_TYPE : __int32
{
  Unknown = 0x0,
  F5_1Pt2_512 = 0x1,
  F3_1Pt44_512 = 0x2,
  F3_2Pt88_512 = 0x3,
  F3_20Pt8_512 = 0x4,
  F3_720_512 = 0x5,
  F5_360_512 = 0x6,
  F5_320_512 = 0x7,
  F5_320_1024 = 0x8,
  F5_180_512 = 0x9,
  F5_160_512 = 0xA,
  RemovableMedia = 0xB,
  FixedMedia = 0xC,
  F3_120M_512 = 0xD,
  F3_640_512 = 0xE,
  F5_640_512 = 0xF,
  F5_720_512 = 0x10,
  F3_1Pt2_512 = 0x11,
  F3_1Pt23_1024 = 0x12,
  F5_1Pt23_1024 = 0x13,
  F3_128Mb_512 = 0x14,
  F3_230Mb_512 = 0x15,
  F8_256_128 = 0x16,
  F3_200Mb_512 = 0x17,
  F3_240M_512 = 0x18,
  F3_32M_512 = 0x19,
};

/* 545 */
enum tagREGKIND : __int32
{
  REGKIND_DEFAULT = 0x0,
  REGKIND_REGISTER = 0x1,
  REGKIND_NONE = 0x2,
};

/* 546 */
enum tagOLEGETMONIKER : __int32
{
  OLEGETMONIKER_ONLYIFTHERE = 0x1,
  OLEGETMONIKER_FORCEASSIGN = 0x2,
  OLEGETMONIKER_UNASSIGN = 0x3,
  OLEGETMONIKER_TEMPFORUSER = 0x4,
};

/* 547 */
enum __MIDL_IInternetSecurityManager_0001 : __int32
{
  PUAF_DEFAULT = 0x0,
  PUAF_NOUI = 0x1,
  PUAF_ISFILE = 0x2,
  PUAF_WARN_IF_DENIED = 0x4,
  PUAF_FORCEUI_FOREGROUND = 0x8,
  PUAF_CHECK_TIFS = 0x10,
  PUAF_DONTCHECKBOXINDIALOG = 0x20,
  PUAF_TRUSTED = 0x40,
  PUAF_ACCEPT_WILDCARD_SCHEME = 0x80,
  PUAF_ENFORCERESTRICTED = 0x100,
};

/* 548 */
enum tagCALLTYPE : __int32
{
  CALLTYPE_TOPLEVEL = 0x1,
  CALLTYPE_NESTED = 0x2,
  CALLTYPE_ASYNC = 0x3,
  CALLTYPE_TOPLEVEL_CALLPENDING = 0x4,
  CALLTYPE_ASYNC_CALLPENDING = 0x5,
};

/* 549 */
enum tagOLEWHICHMK : __int32
{
  OLEWHICHMK_CONTAINER = 0x1,
  OLEWHICHMK_OBJREL = 0x2,
  OLEWHICHMK_OBJFULL = 0x3,
};

/* 550 */
enum tagSERVERCALL : __int32
{
  SERVERCALL_ISHANDLED = 0x0,
  SERVERCALL_REJECTED = 0x1,
  SERVERCALL_RETRYLATER = 0x2,
};

/* 551 */
enum tagUSERCLASSTYPE : __int32
{
  USERCLASSTYPE_FULL = 0x1,
  USERCLASSTYPE_SHORT = 0x2,
  USERCLASSTYPE_APPNAME = 0x3,
};

/* 552 */
enum __MIDL_IInternetSecurityManager_0002 : __int32
{
  SZM_CREATE = 0x0,
  SZM_DELETE = 0x1,
};

/* 553 */
enum tagOLEMISC : __int32
{
  OLEMISC_RECOMPOSEONRESIZE = 0x1,
  OLEMISC_ONLYICONIC = 0x2,
  OLEMISC_INSERTNOTREPLACE = 0x4,
  OLEMISC_STATIC = 0x8,
  OLEMISC_CANTLINKINSIDE = 0x10,
  OLEMISC_CANLINKBYOLE1 = 0x20,
  OLEMISC_ISLINKOBJECT = 0x40,
  OLEMISC_INSIDEOUT = 0x80,
  OLEMISC_ACTIVATEWHENVISIBLE = 0x100,
  OLEMISC_RENDERINGISDEVICEINDEPENDENT = 0x200,
  OLEMISC_INVISIBLEATRUNTIME = 0x400,
  OLEMISC_ALWAYSRUN = 0x800,
  OLEMISC_ACTSLIKEBUTTON = 0x1000,
  OLEMISC_ACTSLIKELABEL = 0x2000,
  OLEMISC_NOUIACTIVATE = 0x4000,
  OLEMISC_ALIGNABLE = 0x8000,
  OLEMISC_SIMPLEFRAME = 0x10000,
  OLEMISC_SETCLIENTSITEFIRST = 0x20000,
  OLEMISC_IMEMODE = 0x40000,
  OLEMISC_IGNOREACTIVATEWHENVISIBLE = 0x80000,
  OLEMISC_WANTSTOMENUMERGE = 0x100000,
  OLEMISC_SUPPORTSMULTILEVELUNDO = 0x200000,
};

/* 554 */
enum tagMEMCTX : __int32
{
  MEMCTX_TASK = 0x1,
  MEMCTX_SHARED = 0x2,
  MEMCTX_MACSYSTEM = 0x3,
  MEMCTX_UNKNOWN = 0xFFFFFFFF,
  MEMCTX_SAME = 0xFFFFFFFE,
};

/* 555 */
enum tagPENDINGTYPE : __int32
{
  PENDINGTYPE_TOPLEVEL = 0x1,
  PENDINGTYPE_NESTED = 0x2,
};

/* 556 */
enum tagPENDINGMSG : __int32
{
  PENDINGMSG_CANCELCALL = 0x0,
  PENDINGMSG_WAITNOPROCESS = 0x1,
  PENDINGMSG_WAITDEFPROCESS = 0x2,
};

/* 557 */
enum tagCLSCTX : __int32
{
  CLSCTX_INPROC_SERVER = 0x1,
  CLSCTX_INPROC_HANDLER = 0x2,
  CLSCTX_LOCAL_SERVER = 0x4,
  CLSCTX_INPROC_SERVER16 = 0x8,
  CLSCTX_REMOTE_SERVER = 0x10,
  CLSCTX_INPROC_HANDLER16 = 0x20,
  CLSCTX_INPROC_SERVERX86 = 0x40,
  CLSCTX_INPROC_HANDLERX86 = 0x80,
  CLSCTX_ESERVER_HANDLER = 0x100,
  CLSCTX_RESERVED = 0x200,
  CLSCTX_NO_CODE_DOWNLOAD = 0x400,
  CLSCTX_NO_WX86_TRANSLATION = 0x800,
  CLSCTX_NO_CUSTOM_MARSHAL = 0x1000,
  CLSCTX_ENABLE_CODE_DOWNLOAD = 0x2000,
  CLSCTX_NO_FAILURE_LOG = 0x4000,
  CLSCTX_DISABLE_AAA = 0x8000,
  CLSCTX_ENABLE_AAA = 0x10000,
  CLSCTX_FROM_DEFAULT_CONTEXT = 0x20000,
};

/* 558 */
enum tagREGCLS : __int32
{
  REGCLS_SINGLEUSE = 0x0,
  REGCLS_MULTIPLEUSE = 0x1,
  REGCLS_MULTI_SEPARATE = 0x2,
  REGCLS_SUSPENDED = 0x4,
  REGCLS_SURROGATE = 0x8,
};

/* 559 */
enum tagOLECLOSE : __int32
{
  OLECLOSE_SAVEIFDIRTY = 0x0,
  OLECLOSE_NOSAVE = 0x1,
  OLECLOSE_PROMPTSAVE = 0x2,
};

/* 560 */
enum tagMSHLFLAGS : __int32
{
  MSHLFLAGS_NORMAL = 0x0,
  MSHLFLAGS_TABLESTRONG = 0x1,
  MSHLFLAGS_TABLEWEAK = 0x2,
  MSHLFLAGS_NOPING = 0x4,
  MSHLFLAGS_RESERVED1 = 0x8,
  MSHLFLAGS_RESERVED2 = 0x10,
  MSHLFLAGS_RESERVED3 = 0x20,
  MSHLFLAGS_RESERVED4 = 0x40,
};

/* 561 */
enum tagDCOM_CALL_STATE : __int32
{
  DCOM_NONE = 0x0,
  DCOM_CALL_COMPLETE = 0x1,
  DCOM_CALL_CANCELED = 0x2,
};

/* 562 */
enum tagMSHCTX : __int32
{
  MSHCTX_LOCAL = 0x0,
  MSHCTX_NOSHAREDMEM = 0x1,
  MSHCTX_DIFFERENTMACHINE = 0x2,
  MSHCTX_INPROC = 0x3,
  MSHCTX_CROSSCTX = 0x4,
};

/* 563 */
enum tagDVASPECT : __int32
{
  DVASPECT_CONTENT = 0x1,
  DVASPECT_THUMBNAIL = 0x2,
  DVASPECT_ICON = 0x4,
  DVASPECT_DOCPRINT = 0x8,
};

/* 564 */
enum _HEAP_INFORMATION_CLASS : __int32
{
  HeapCompatibilityInformation = 0x0,
};

/* 565 */
enum tagSTGC : __int32
{
  STGC_DEFAULT = 0x0,
  STGC_OVERWRITE = 0x1,
  STGC_ONLYIFCURRENT = 0x2,
  STGC_DANGEROUSLYCOMMITMERELYTODISKCACHE = 0x4,
  STGC_CONSOLIDATE = 0x8,
};

/* 566 */
enum IMAGE_AUX_SYMBOL_TYPE : __int32
{
  IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF = 0x1,
};

/* 567 */
enum tagSTGMOVE : __int32
{
  STGMOVE_MOVE = 0x0,
  STGMOVE_COPY = 0x1,
  STGMOVE_SHALLOWCOPY = 0x2,
};

/* 568 */
enum tagSTATFLAG : __int32
{
  STATFLAG_DEFAULT = 0x0,
  STATFLAG_NONAME = 0x1,
  STATFLAG_NOOPEN = 0x2,
};

/* 569 */
enum _ACTIVATION_CONTEXT_INFO_CLASS : __int32
{
  ActivationContextBasicInformation = 0x1,
  ActivationContextDetailedInformation = 0x2,
  AssemblyDetailedInformationInActivationContext = 0x3,
  FileInformationInAssemblyOfAssemblyInActivationContext = 0x4,
  MaxActivationContextInfoClass = 0x5,
  AssemblyDetailedInformationInActivationContxt = 0x3,
  FileInformationInAssemblyOfAssemblyInActivationContxt = 0x4,
};

/* 570 */
enum SYSGEOTYPE : __int32
{
  GEO_NATION = 0x1,
  GEO_LATITUDE = 0x2,
  GEO_LONGITUDE = 0x3,
  GEO_ISO2 = 0x4,
  GEO_ISO3 = 0x5,
  GEO_RFC1766 = 0x6,
  GEO_LCID = 0x7,
  GEO_FRIENDLYNAME = 0x8,
  GEO_OFFICIALNAME = 0x9,
  GEO_TIMEZONES = 0xA,
  GEO_OFFICIALLANGUAGES = 0xB,
};

/* 571 */
enum SYSGEOCLASS : __int32
{
  GEOCLASS_NATION = 0x10,
  GEOCLASS_REGION = 0xE,
};

/* 572 */
enum tagTYPEFLAGS : __int32
{
  TYPEFLAG_FAPPOBJECT = 0x1,
  TYPEFLAG_FCANCREATE = 0x2,
  TYPEFLAG_FLICENSED = 0x4,
  TYPEFLAG_FPREDECLID = 0x8,
  TYPEFLAG_FHIDDEN = 0x10,
  TYPEFLAG_FCONTROL = 0x20,
  TYPEFLAG_FDUAL = 0x40,
  TYPEFLAG_FNONEXTENSIBLE = 0x80,
  TYPEFLAG_FOLEAUTOMATION = 0x100,
  TYPEFLAG_FRESTRICTED = 0x200,
  TYPEFLAG_FAGGREGATABLE = 0x400,
  TYPEFLAG_FREPLACEABLE = 0x800,
  TYPEFLAG_FDISPATCHABLE = 0x1000,
  TYPEFLAG_FREVERSEBIND = 0x2000,
  TYPEFLAG_FPROXY = 0x4000,
};

/* 573 */
enum tagFUNCFLAGS : __int32
{
  FUNCFLAG_FRESTRICTED = 0x1,
  FUNCFLAG_FSOURCE = 0x2,
  FUNCFLAG_FBINDABLE = 0x4,
  FUNCFLAG_FREQUESTEDIT = 0x8,
  FUNCFLAG_FDISPLAYBIND = 0x10,
  FUNCFLAG_FDEFAULTBIND = 0x20,
  FUNCFLAG_FHIDDEN = 0x40,
  FUNCFLAG_FUSESGETLASTERROR = 0x80,
  FUNCFLAG_FDEFAULTCOLLELEM = 0x100,
  FUNCFLAG_FUIDEFAULT = 0x200,
  FUNCFLAG_FNONBROWSABLE = 0x400,
  FUNCFLAG_FREPLACEABLE = 0x800,
  FUNCFLAG_FIMMEDIATEBIND = 0x1000,
};

/* 574 */
enum _SC_ACTION_TYPE : __int32
{
  SC_ACTION_NONE = 0x0,
  SC_ACTION_RESTART = 0x1,
  SC_ACTION_REBOOT = 0x2,
  SC_ACTION_RUN_COMMAND = 0x3,
};

/* 575 */
enum CompDecorateUndecorateObjName::STATES : __int32
{
  FINDING_PERIOD = 0x0,
  FINDING_DIRECTORYSEPARATOR = 0x1,
  FINDING_PURGEDIRECTORYSEPARATOR = 0x2,
};

/* 576 */
typedef CompDecorateUndecorateObjName::STATES CompDecorateUndecorateTexName::STATES;

/* 577 */
enum $076BA5BE99E75C549532E2D4C72243CB : __int32
{
  dSaveButton = 0x1,
  dCancelButton = 0x2,
  dDXT1 = 0xA,
  dTextureFormatFirst = 0xA,
  dDXT1a = 0xB,
  dDXT3 = 0xC,
  dDXT5 = 0xD,
  d4444 = 0xE,
  d1555 = 0xF,
  d565 = 0x10,
  d8888 = 0x11,
  d888 = 0x12,
  d555 = 0x13,
  d8 = 0x14,
  dNVHS = 0x15,
  dNVHU = 0x16,
  dTextureFormatLast = 0x16,
  d3DPreviewButton = 0x12C,
  dViewDXT1 = 0xC8,
  dViewDXT2 = 0xC9,
  dViewDXT3 = 0xCA,
  dViewDXT5 = 0xCB,
  dViewA4R4G4B4 = 0xCC,
  dViewA1R5G5B5 = 0xCD,
  dViewR5G6B5 = 0xCE,
  dViewA8R8G8B8 = 0xCF,
  dGenerateMipMaps = 0x1E,
  dMIPMapSourceFirst = 0x1E,
  dSpecifyMipMaps = 0x1F,
  dUseExistingMipMaps = 0x20,
  dNoMipMaps = 0x21,
  dMIPMapSourceLast = 0x21,
  dSpecifiedMipMaps = 0x27,
  dMIPFilterBox = 0x85,
  dMIPFilterFirst = 0x85,
  dMIPFilterCubic = 0x86,
  dMIPFilterFullDFT = 0x87,
  dMIPFilterKaiser = 0x88,
  dMIPFilterLinearLightKaiser = 0x89,
  dMIPFilterLast = 0x89,
  dShowDifferences = 0x28,
  dShowFiltering = 0x29,
  dShowMipMapping = 0x2A,
  dShowAnisotropic = 0x2B,
  dChangeClearColorButton = 0x32,
  dViewXBOX1c = 0x33,
  dViewXBOX1a = 0x34,
  dDitherColor = 0x35,
  dLoadBackgroundImageButton = 0x36,
  dUseBackgroundImage = 0x37,
  dBinaryAlpha = 0x38,
  dAlphaBlending = 0x39,
  dFadeColor = 0x3A,
  dFadeAlpha = 0x3B,
  dFadeToColorButton = 0x3C,
  dAlphaBorder = 0x3D,
  dBorder = 0x3E,
  dBorderColorButton = 0x3F,
  dNormalMap = 0x40,
  dDuDvMap = 0x41,
  dDitherEachMIPLevel = 0x42,
  dGreyScale = 0x43,
  dZoom = 0x46,
  dTextureType2D = 0x50,
  dTextureTypeFirst = 0x50,
  dTextureTypeCube = 0x51,
  dTextureTypeImage = 0x52,
  dTextureTypeLast = 0x52,
  dFadeAmount = 0x5A,
  dFadeToAlpha = 0x5B,
  dFadeToDelay = 0x5C,
  dAskToLoadMIPMaps = 0x190,
  dShowAlphaWarning = 0x191,
  dShowPower2Warning = 0x192,
  dAdvancedBlendingButton = 0x1F4,
  dUserSpecifiedFadingAmounts = 0x1F5,
};

/* 578 */
enum WHO_SORT_TYPE : __int32
{
  WHO_SORT_ZONE = 0x0,
  WHO_SORT_LEVEL = 0x1,
  WHO_SORT_CLASS = 0x2,
  WHO_SORT_GROUP = 0x3,
  WHO_SORT_NAME = 0x4,
  WHO_SORT_RACE = 0x5,
  WHO_SORT_GUILD = 0x6,
  NUM_WHO_SORT_TYPES = 0x7,
};

/* 579 */
enum PARTY_STATUS : __int32
{
  PARTY_STATUS_NOT_IN_PARTY = 0x0,
  PARTY_STATUS_IN_PARTY = 0x1,
  PARTY_STATUS_LFG = 0x2,
};

/* 580 */
enum BOT_AI_PLAN : __int32
{
  BOT_AI_PLAN_NONE = 0x0,
  BOT_AI_PLAN_INITIALIZE = 0x1,
  BOT_AI_PLAN_FOLLOW = 0x2,
  BOT_AI_PLAN_TARGET_HOSTILE = 0x3,
  BOT_AI_PLAN_TARGET_MONSTER = 0x4,
  BOT_AI_PLAN_TARGET_PLAYER = 0x5,
};

/* 581 */
enum BOT_AI_MOVE : __int32
{
  BOT_AI_MOVE_STOPPED = 0x0,
  BOT_AI_MOVE_WALKING = 0x1,
  BOT_AI_MOVE_RUNNING = 0x2,
};

/* 582 */
enum BOT_AI_TURN : __int32
{
  BOT_AI_TURN_STRAIGHT = 0x0,
  BOT_AI_TURN_LEFT = 0x1,
  BOT_AI_TURN_RIGHT = 0x2,
};

/* 583 */
enum BOT_AI_ATTACK : __int32
{
  BOT_AI_TARGET_NONE = 0x0,
  BOT_AI_TARGET_ACQUIRE = 0x1,
  BOT_AI_TARGET_ATTACK = 0x2,
  BOT_AI_TARGET_KILL = 0x3,
  BOT_AI_TARGET_MERCHANT = 0x4,
  BOT_AI_TARGET_LOOT = 0x5,
};

/* 584 */
enum BOT_STATE : __int32
{
  STATE_CONNECTING = 0x0,
  STATE_LOGGING_ON = 0x1,
  STATE_CREATING = 0x2,
  STATE_GETTING_LIST = 0x3,
  STATE_GOT_LIST = 0x4,
  STATE_RUNNING = 0x5,
  STATE_STOPPED = 0x6,
};

/* 585 */
enum BOT_EXTERNAL_STATE : __int32
{
  BOT_EXTERNAL_IDLE = 0x0,
  BOT_EXTERNAL_MOVE_TO = 0x1,
  BOT_EXTERNAL_ATTACKING = 0x2,
  BOT_EXTERNAL_LOOT = 0x3,
};

/* 586 */
enum FT_Encoding_ : __int32
{
  ft_encoding_none = 0x0,
  ft_encoding_symbol = 0x73796D62,
  ft_encoding_unicode = 0x756E6963,
  ft_encoding_latin_2 = 0x6C617432,
  ft_encoding_sjis = 0x736A6973,
  ft_encoding_gb2312 = 0x67622020,
  ft_encoding_big5 = 0x62696735,
  ft_encoding_wansung = 0x77616E73,
  ft_encoding_johab = 0x6A6F6861,
  ft_encoding_adobe_standard = 0x41444F42,
  ft_encoding_adobe_expert = 0x41444245,
  ft_encoding_adobe_custom = 0x41444243,
  ft_encoding_apple_roman = 0x61726D6E,
};

/* 587 */
enum HYPERLINKPARSEMODE : __int32
{
  HYPERLINKNONE = 0x0,
  HYPERLINKHREF = 0x1,
  HYPERLINKDISPLAY = 0x2,
};

/* 588 */
enum FT_Open_Flags : __int32
{
  ft_open_memory = 0x1,
  ft_open_stream = 0x2,
  ft_open_pathname = 0x4,
  ft_open_driver = 0x8,
  ft_open_params = 0x10,
};

/* 589 */
enum $443B43E687EC97AB84080B17E6AC64D0 : __int32
{
  FT_Err_Ok = 0x0,
  FT_Err_Cannot_Open_Resource = 0x1,
  FT_Err_Unknown_File_Format = 0x2,
  FT_Err_Invalid_File_Format = 0x3,
  FT_Err_Invalid_Version = 0x4,
  FT_Err_Lower_Module_Version = 0x5,
  FT_Err_Invalid_Argument = 0x6,
  FT_Err_Unimplemented_Feature = 0x7,
  FT_Err_Invalid_Glyph_Index = 0x10,
  FT_Err_Invalid_Character_Code = 0x11,
  FT_Err_Invalid_Glyph_Format = 0x12,
  FT_Err_Cannot_Render_Glyph = 0x13,
  FT_Err_Invalid_Outline = 0x14,
  FT_Err_Invalid_Composite = 0x15,
  FT_Err_Too_Many_Hints = 0x16,
  FT_Err_Invalid_Pixel_Size = 0x17,
  FT_Err_Invalid_Handle = 0x20,
  FT_Err_Invalid_Library_Handle = 0x21,
  FT_Err_Invalid_Driver_Handle = 0x22,
  FT_Err_Invalid_Face_Handle = 0x23,
  FT_Err_Invalid_Size_Handle = 0x24,
  FT_Err_Invalid_Slot_Handle = 0x25,
  FT_Err_Invalid_CharMap_Handle = 0x26,
  FT_Err_Invalid_Cache_Handle = 0x27,
  FT_Err_Invalid_Stream_Handle = 0x28,
  FT_Err_Too_Many_Drivers = 0x30,
  FT_Err_Too_Many_Extensions = 0x31,
  FT_Err_Out_Of_Memory = 0x40,
  FT_Err_Unlisted_Object = 0x41,
  FT_Err_Cannot_Open_Stream = 0x51,
  FT_Err_Invalid_Stream_Seek = 0x52,
  FT_Err_Invalid_Stream_Skip = 0x53,
  FT_Err_Invalid_Stream_Read = 0x54,
  FT_Err_Invalid_Stream_Operation = 0x55,
  FT_Err_Invalid_Frame_Operation = 0x56,
  FT_Err_Nested_Frame_Access = 0x57,
  FT_Err_Invalid_Frame_Read = 0x58,
  FT_Err_Raster_Uninitialized = 0x60,
  FT_Err_Raster_Corrupted = 0x61,
  FT_Err_Raster_Overflow = 0x62,
  FT_Err_Raster_Negative_Height = 0x63,
  FT_Err_Too_Many_Caches = 0x70,
  FT_Err_Max = 0x71,
};

/* 590 */
enum FT_Glyph_Format_ : __int32
{
  ft_glyph_format_none = 0x0,
  ft_glyph_format_composite = 0x636F6D70,
  ft_glyph_format_bitmap = 0x62697473,
  ft_glyph_format_outline = 0x6F75746C,
  ft_glyph_format_plotter = 0x706C6F74,
};

/* 591 */
enum FT_Raster_Flag : __int32
{
  ft_raster_flag_default = 0x0,
  ft_raster_flag_aa = 0x1,
  ft_raster_flag_direct = 0x2,
};

/* 592 */
enum GEOCOMPONENTLINKS : __int32
{
  ATTACH_SHIELD = 0x0,
  ATTACH_HANDR = 0x1,
  ATTACH_HANDL = 0x2,
  ATTACH_ELBOWR = 0x3,
  ATTACH_ELBOWL = 0x4,
  ATTACH_SHOULDERR = 0x5,
  ATTACH_SHOULDERL = 0x6,
  ATTACH_KNEER = 0x7,
  ATTACH_KNEEL = 0x8,
  ATTACH_HIPR = 0x9,
  ATTACH_HIPL = 0xA,
  ATTACH_HELM = 0xB,
  ATTACH_BACK = 0xC,
  ATTACH_SHOULDERFLAPR = 0xD,
  ATTACH_SHOULDERFLAPL = 0xE,
  ATTACH_TORSOBLOODFRONT = 0xF,
  ATTACH_TORSOBLOODBACK = 0x10,
  ATTACH_BREATH = 0x11,
  ATTACH_PLAYERNAME = 0x12,
  ATTACH_UNITEFFECT_BASE = 0x13,
  ATTACH_UNITEFFECT_HEAD = 0x14,
  ATTACH_UNITEFFECT_SPELLLEFTHAND = 0x15,
  ATTACH_UNITEFFECT_SPELLRIGHTHAND = 0x16,
  ATTACH_UNITEFFECT_SPECIAL1 = 0x17,
  ATTACH_UNITEFFECT_SPECIAL2 = 0x18,
  ATTACH_UNITEFFECT_SPECIAL3 = 0x19,
  ATTACH_SHEATH_MAINHAND = 0x1A,
  ATTACH_SHEATH_OFFHAND = 0x1B,
  ATTACH_SHEATH_SHIELD = 0x1C,
  ATTACH_PLAYERNAMEMOUNTED = 0x1D,
  ATTACH_LARGEWEAPONLEFT = 0x1E,
  ATTACH_LARGEWEAPONRIGHT = 0x1F,
  ATTACH_HIPWEAPONLEFT = 0x20,
  ATTACH_HIPWEAPONRIGHT = 0x21,
  ATTACH_TORSOSPELL = 0x22,
  ATTACH_HANDARROW = 0x23,
  NUM_ATTACH_SLOTS = 0x24,
  ATTACH_NONE = 0xFFFFFFFF,
};

/* 593 */
enum $F098780D81F8A84EF77E8330D1BCB3D5 : __int32
{
  GAMEOBJECT_NUM_TRIGGERS = 0x2,
};

/* 594 */
enum ANIM_STATE : __int32
{
  ANIM_STATE_NONE = 0x0,
  ANIM_STATE_DEAD = 0x1,
  ANIM_STATE_SPELL = 0x2,
  ANIM_STATE_IDLE = 0x3,
  ANIM_STATE_STOP = 0x4,
  ANIM_STATE_WALK = 0x5,
  ANIM_STATE_RUN = 0x6,
  ANIM_STATE_WALK_BACKWARDS = 0x7,
  ANIM_STATE_STRAFE_WALK_LEFT = 0x8,
  ANIM_STATE_STRAFE_WALK_RIGHT = 0x9,
  ANIM_STATE_STRAFE_RUN_LEFT = 0xA,
  ANIM_STATE_STRAFE_RUN_RIGHT = 0xB,
  ANIM_STATE_DIAG_WALK_LEFT = 0xC,
  ANIM_STATE_DIAG_WALK_RIGHT = 0xD,
  ANIM_STATE_DIAG_RUN_LEFT = 0xE,
  ANIM_STATE_DIAG_RUN_RIGHT = 0xF,
  ANIM_STATE_DIAG_BACKWARDS_LEFT = 0x10,
  ANIM_STATE_DIAG_BACKWARDS_RIGHT = 0x11,
  ANIM_STATE_TURNING_LEFT = 0x12,
  ANIM_STATE_TURNING_RIGHT = 0x13,
  ANIM_STATE_SWIM_IDLE = 0x14,
  ANIM_STATE_SWIM = 0x15,
  ANIM_STATE_SWIM_STRAFE_LEFT = 0x16,
  ANIM_STATE_SWIM_STRAFE_RIGHT = 0x17,
  ANIM_STATE_SWIM_BACKWARDS = 0x18,
  ANIM_STATE_KNEEL = 0x19,
  ANIM_STATE_RISE = 0x1A,
  ANIM_STATE_WOUND = 0x1B,
  ANIM_STATE_CRITICALWOUND = 0x1C,
  ANIM_STATE_STUN = 0x1D,
  ANIM_STATE_ATTACK_HIT = 0x1E,
  ANIM_STATE_ATTACK_READY = 0x1F,
  ANIM_STATE_ATTACK_MISS = 0x20,
  ANIM_STATE_ATTACKOFF_HIT = 0x21,
  ANIM_STATE_ATTACKOFF_MISS = 0x22,
  ANIM_STATE_PARRY = 0x23,
  ANIM_STATE_DODGE = 0x24,
  ANIM_STATE_SPELLPRECAST = 0x25,
  ANIM_STATE_SPELLCAST = 0x26,
  ANIM_STATE_NPC_OBSOLETE = 0x27,
  ANIM_STATE_BLOCK = 0x28,
  ANIM_STATE_JUMPING = 0x29,
  ANIM_STATE_JUMP_LANDING = 0x2A,
  ANIM_STATE_FALLING = 0x2B,
  ANIM_STATE_LOOTBEGIN = 0x2C,
  ANIM_STATE_LOOTEND = 0x2D,
  ANIM_STATE_EMOTE = 0x2E,
  ANIM_STATE_SPELLIMPACT = 0x2F,
  ANIM_STATE_MOUNTED = 0x30,
  ANIM_STATE_SPECIALMOUNTANIM = 0x31,
  ANIM_STATE_SITDOWN = 0x32,
  ANIM_STATE_SITTING = 0x33,
  ANIM_STATE_SITUP = 0x34,
  ANIM_STATE_SLEEPDOWN = 0x35,
  ANIM_STATE_SLEEPING = 0x36,
  ANIM_STATE_SLEEPUP = 0x37,
  ANIM_STATE_SITCHAIRLOW = 0x38,
  ANIM_STATE_SITCHAIRMEDIUM = 0x39,
  ANIM_STATE_SITCHAIRHIGH = 0x3A,
  ANIM_STATE_KNEELDOWN = 0x3B,
  ANIM_STATE_KNEELING = 0x3C,
  ANIM_STATE_KNEELUP = 0x3D,
  ANIM_STATE_CHANNELSPELL = 0x3E,
  ANIM_STATE_SPELLAURA = 0x3F,
  NUM_ANIMSTATES = 0x40,
  ANIM_STATE_FIRST_STRAFE = 0x8,
  ANIM_STATE_LAST_STRAFE = 0x11,
  INVALID_ANIM_STATE = 0xFFFFFFFF,
};

/* 595 */
enum BLOODSPURTSIZES : __int32
{
  BLOODSPURT_SMALL = 0x0,
  BLOODSPURT_LARGE = 0x1,
  NUM_BLOODSPURTSIZES = 0x2,
};

/* 596 */
enum VIRTUAL_MONSTER_SLOT : __int32
{
  VIRTUAL_MONSTER_SLOT_MAINHAND = 0x0,
  VIRTUAL_MONSTER_SLOT_OFFHAND = 0x1,
  VIRTUAL_MONSTER_SLOT_RANGED = 0x2,
  NUM_VIRTUAL_MONSTER_SLOTS = 0x3,
};

/* 597 */
enum COMBATMESSAGETYPE : __int32
{
  COMBATMESSAGETYPE_NORMALHIT = 0x0,
  COMBATMESSAGETYPE_NORMALMISS = 0x1,
  COMBATMESSAGETYPE_NORMALBLOCK = 0x2,
  COMBATMESSAGETYPE_NORMALPARRY = 0x3,
  COMBATMESSAGETYPE_NORMALDODGE = 0x4,
  COMBATMESSAGETYPE_NORMALEVADE = 0x5,
  COMBATMESSAGETYPE_NORMALIMMUNE = 0x6,
  NUM_COMBATMESSAGETYPES = 0x7,
  COMBATMESSAGETYPE_UNKNOWN = 0xFFFFFFFF,
};

/* 598 */
enum $D128E625C8BE53B4AB9D2CA8F35EA650 : __int32
{
  CHUNKFLAG_PERSISTENT = 0x1,
};

/* 599 */
enum $DF4AA45A643B18D57DE82F3F5A9593B8 : __int32
{
  MaxTriIndices = 0x1000,
  MaxVertexIndices = 0x3000,
  MaxBatches = 0x20,
};

/* 600 */
enum $7D2DE4E90337E74E8EAD9AAC5D1614AA : __int32
{
  EMITTER_DEATHIMPACT = 0x0,
  NUM_OBJECTS = 0x1,
};

/* 601 */
enum SPELL_VISUAL_ATTACHMENT : __int32
{
  SPELL_VISUAL_ATTACH_HEAD = 0x0,
  SPELL_VISUAL_ATTACH_CHEST = 0x1,
  SPELL_VISUAL_ATTACH_BASE = 0x2,
  SPELL_VISUAL_ATTACH_LEFT_HAND = 0x3,
  SPELL_VISUAL_ATTACH_RIGHT_HAND = 0x4,
  SPELL_VISUAL_ATTACH_BREATH = 0x5,
  SPELL_VISUAL_ATTACH_SPECIAL1 = 0x6,
  SPELL_VISUAL_ATTACH_SPECIAL2 = 0x7,
  SPELL_VISUAL_ATTACH_SPECIAL3 = 0x8,
  NUM_SPELL_VISUAL_ATTACH = 0x9,
};

/* 602 */
enum REPLACEABLE_MATERIAL_IDS : __int32
{
  TEX_COMPONENT_SKIN = 0x1,
  TEX_COMPONENT_OBJECT_SKIN = 0x2,
  TEX_COMPONENT_WEAPON_BLADE = 0x3,
  TEX_COMPONENT_WEAPON_HANDLE = 0x4,
  TEX_COMPONENT_ENVIRONMENT = 0x5,
  TEX_COMPONENT_CHAR_HAIR = 0x6,
  TEX_COMPONENT_CHAR_FACIAL_HAIR = 0x7,
  TEX_COMPONENT_SKIN_EXTRA = 0x8,
  TEX_COMPONENT_UI_SKIN = 0x9,
  TEX_COMPONENT_TAUREN_MANE = 0xA,
  TEX_COMPONENT_MONSTER_1 = 0xB,
  TEX_COMPONENT_MONSTER_2 = 0xC,
  TEX_COMPONENT_MONSTER_3 = 0xD,
  TEX_COMPONENT_ITEM_ICON = 0xE,
  NUM_REPLACEABLE_MATERIAL_IDS = 0xF,
};

/* 603 */
enum OBJATTACHMENTPOINTS : __int32
{
  OBJATTACH_HELMET = 0x0,
  OBJATTACH_SHOULDERPAD = 0x1,
  OBJATTACH_MAINHAND = 0x2,
  OBJATTACH_OFFHAND = 0x3,
  OBJATTACH_RANGED = 0x4,
  OBJATTACH_NUM = 0x5,
};

/* 604 */
enum SAVEDSHEATHATTACHPOINTS : __int32
{
  SHEATHATTACH_NONE = 0x0,
  SHEATHATTACH_MAINHAND = 0x1,
  SHEATHATTACH_OFFHAND = 0x2,
  SHEATHATTACH_LARGEWEAPONLEFT = 0x3,
  SHEATHATTACH_LARGEWEAPONRIGHT = 0x4,
  SHEATHATTACH_HIPWEAPONLEFT = 0x5,
  SHEATHATTACH_HIPWEAPONRIGHT = 0x6,
  SHEATHATTACH_SHIELD = 0x7,
  SHEATHATTACH_NUM_SAVESSHEATHATTACHPOINTS = 0x8,
};

/* 605 */
enum WORLDTEXTTYPE : __int32
{
  WT_DAMAGE = 0x0,
  WT_ABSORB = 0x1,
  WT_CRIT = 0x2,
  WT_HEALSPELL = 0x3,
  WT_MISS = 0x4,
  WT_XPGAIN = 0x5,
  WT_QUEST = 0x6,
  NUM_WORLDTEXTTYPES = 0x7,
};

/* 606 */
enum NTempest::C3Spline_CatmullRom::SPLINE_MODE : __int32
{
  MODE_LINEAR = 0x0,
  MODE_CATMULLROM = 0x1,
};

/* 607 */
enum ParseForcedAnimCommandLine::STATE : __int32
{
  FINDCOMMAND = 0x0,
  FINDFIDGET = 0x1,
  DONE = 0x2,
};

/* 608 */
enum $65F166511EF53BD17BD0FA534C085DF6 : __int32
{
  ANIMSTATE_CLOSED = 0x0,
  ANIMSTATE_OPENING = 0x1,
  ANIMSTATE_OPEN = 0x2,
  ANIMSTATE_CLOSING = 0x3,
  ANIMSTATE_DESTROYING = 0x4,
  ANIMSTATE_DESTROYED = 0x5,
  ANIMSTATE_REBUILDING = 0x6,
  ANIMSTATE_FIRSTCUSTOM = 0x7,
  ANIMSTATE_CUSTOM0 = 0x7,
  ANIMSTATE_CUSTOM1 = 0x8,
  ANIMSTATE_CUSTOM2 = 0x9,
  ANIMSTATE_CUSTOM3 = 0xA,
  NUM_GAMEOBJ_ANIMSTATES = 0xB,
};

/* 609 */
enum GUILD_EVENT : __int32
{
  GUILD_EVENT_PROMOTION = 0x0,
  GUILD_EVENT_DEMOTION = 0x1,
  GUILD_EVENT_MOTD = 0x2,
  GUILD_EVENT_JOINED = 0x3,
  GUILD_EVENT_LEFT = 0x4,
  GUILD_EVENT_REMOVED = 0x5,
  GUILD_EVENT_LEADER_IS = 0x6,
  GUILD_EVENT_LEADER_CHANGED = 0x7,
  GUILD_EVENT_DISBANDED = 0x8,
  GUILD_EVENT_TABARDCHANGE = 0x9,
};

/* 610 */
enum PETITION_ERROR : __int32
{
  PETITION_SUCCESS = 0x0,
  PETITION_ALREADY_SIGNED = 0x1,
  PETITION_ALREADY_IN_GUILD = 0x2,
  PETITION_CHARTER_CREATOR = 0x3,
  PETITION_NOT_ENOUGH_SIGNATURES = 0x4,
  PETITION_UNKNOWN_ERROR = 0x5,
};

/* 611 */
enum EXECMODE : __int32
{
  EM_PROMPTOVERWRITE = 0x0,
  EM_RECORDING = 0x1,
  EM_APPEND = 0x2,
  EM_WRITEFILE = 0x3,
  EM_NOTACTIVE = 0x4,
  EM_NUM_EXECMODES = 0x5,
};

/* 612 */
enum CATEGORY : __int32
{
  DEBUG = 0x0,
  GRAPHICS = 0x1,
  CONSOLE = 0x2,
  COMBAT = 0x3,
  GAME = 0x4,
  DEFAULT = 0x5,
  NET = 0x6,
  SOUND = 0x7,
  GM = 0x8,
  NONE = 0x9,
  LAST = 0xA,
};

/* 613 */
enum COLOR_T : __int32
{
  DEFAULT_COLOR = 0x0,
  INPUT_COLOR = 0x1,
  ECHO_COLOR = 0x2,
  ERROR_COLOR = 0x3,
  WARNING_COLOR = 0x4,
  GLOBAL_COLOR = 0x5,
  ADMIN_COLOR = 0x6,
  HIGHLIGHT_COLOR = 0x7,
  BACKGROUND_COLOR = 0x8,
  NUM_COLORTYPES = 0x9,
};

/* 614 */
enum HIGHLIGHTSTATE : __int32
{
  HS_NONE = 0x0,
  HS_HIGHLIGHTING = 0x1,
  HS_ENDHIGHLIGHT = 0x2,
  NUM_HIGHLIGHTSTATES = 0x3,
};

/* 615 */
enum CONSOLERESIZESTATE : __int32
{
  CS_NONE = 0x0,
  CS_STRETCH = 0x1,
  NUM_CONSOLERESIZESTATES = 0x2,
};

/* 616 */
enum $3E11FBA70728799863FAAE18616F507F : __int32
{
  DIGEST = 0x14,
  DATA_SIZE = 0x40,
  DATA_MASK = 0x3F,
};

/* 617 */
enum $B3E91823A85713CDD18158D7B5F23FD2 : __int32
{
  SMEM_ALLOCATOR_CLASSIC = 0x0,
  SMEM_ALLOCATOR_2 = 0x1,
  SMEM_ALLOCATOR_SYSTEM = 0x2,
};

/* 618 */
enum SMEMREPORTTYPE : __int32
{
  SMEM_REPORT_BY_CALLER = 0x0,
  SMEM_REPORT_HISTOGRAM = 0x1,
};

/* 619 */
enum ArgumentSize : __int32
{
  e_intSized = 0x0,
  e_pointerSized = 0x1,
  e_longLongSized = 0x2,
  e_doubleSized = 0x3,
  e_takesNoSpace = 0x4,
};

/* 620 */
enum SYM_TYPE : __int32
{
  SymNone = 0x0,
  SymCoff = 0x1,
  SymCv = 0x2,
  SymPdb = 0x3,
  SymExport = 0x4,
  SymDeferred = 0x5,
  SymSym = 0x6,
  SymDia = 0x7,
  NumSymTypes = 0x8,
};

/* 621 */
enum $583456D2BF8784912E5A7AC09C36A0A3 : __int32
{
  sevInfo = 0x0,
  sevProblem = 0x1,
  sevAttn = 0x2,
  sevFatal = 0x3,
  sevMax = 0x4,
};

/* 622 */
enum _MINIDUMP_TYPE : __int32
{
  MiniDumpNormal = 0x0,
  MiniDumpWithDataSegs = 0x1,
  MiniDumpWithFullMemory = 0x2,
  MiniDumpWithHandleData = 0x4,
  MiniDumpFilterMemory = 0x8,
  MiniDumpScanMemory = 0x10,
};

/* 623 */
enum $3CB313AE4EEBC849034727320C0D913F : __int32
{
  LOG_DEFAULT_OPTIONS_ONLY = 0x0,
  LOG_DEFAULT_OPTIONS = 0x1,
  LOG_CUSTOM_TITLE = 0x2,
  LOG_EXE_NAME = 0x4,
  LOG_DATE_TIME = 0x8,
  LOG_COMPUTER_NAME = 0x10,
  LOG_USER_NAME = 0x20,
  LOG_REGISTERS = 0x10000,
  LOG_DBGHELP_STACK_TRACE = 0x20000,
  LOG_DBGHELP_STACK_TRACE_PARAMETERS = 0x40000,
  LOG_MANUAL_STACK_TRACE = 0x80000,
  LOG_CODE_MEMORY = 0x100000,
  LOG_STACK_MEMORY = 0x200000,
  LOG_LOADED_MODULES = 0x400000,
  LOG_LOADED_MODULE_SYMBOLS = 0x800000,
  LOG_VERBOSE = 0x80000000,
};

/* 624 */
enum ADDRESS_MODE : __int32
{
  AddrMode1616 = 0x0,
  AddrMode1632 = 0x1,
  AddrModeReal = 0x2,
  AddrModeFlat = 0x3,
};

/* 625 */
enum $BC6A7E12579AB9C9C8B705AE029A2A7C : __int32
{
  SPRIM_TYPE_STRIP = 0x0,
  SPRIM_TYPE_TRI = 0x1,
};

/* 626 */
typedef $F6C1FBD3B5964231758239DC0F7D826C $FA60251DA6CA2AC4772641CF23781806;

/* 627 */
typedef $E8647BD006F413D4ED4CB40BF4079BE4 $5FD82962DA3FD3F15F8F673A74C671C2;

/* 628 */
enum $16B7530796AEE2CC2F7529CCCE6C4F5B : __int32
{
  PHASE_GRID_ARRAY_SIZE = 0x200,
};

/* 629 */
enum $BD8FE0B14587CDADCEFA5E40949BD46D : __int32
{
  FRUST_BL = 0x0,
  FRUST_TL = 0x1,
  FRUST_TR = 0x2,
  FRUST_BR = 0x3,
};

/* 630 */
enum $9D93F0A6C0DEA6844E82992B33766C7C : __int32
{
  SKY_NUMBANDS = 0x7,
};

/* 631 */
enum CHARSET : __int32
{
  CHARSET_UNKNOWN = 0x0,
  CHARSET_LATIN1 = 0x1,
  CHARSET_KOREAN = 0x2,
};

/* 632 */
enum TAXNODE_TYPE : __int32
{
  TAXINODE_NONE = 0x0,
  TAXINODE_CURRENT = 0x1,
  TAXINODE_REACHABLE = 0x2,
  TAXINODE_DISTANT = 0x3,
  TAXINODE_NUMTAXINODES = 0x4,
};

/* 633 */
enum VIOLENCELEVELS : __int32
{
  VIOLENCELEVEL_NONE = 0x0,
  VIOLENCELEVEL_MEDIUM = 0x1,
  VIOLENCELEVEL_HIGH = 0x2,
  VIOLENCELEVEL_NUMVIOLENCELEVELS = 0x3,
};

/* 634 */
enum SPELL_FAILED_REASON : __int32
{
  SPELL_FAILED_AFFECTING_COMBAT = 0x0,
  SPELL_FAILED_ALREADY_HAVE_CHARM = 0x1,
  SPELL_FAILED_ALREADY_HAVE_SUMMON = 0x2,
  SPELL_FAILED_ALREADY_OPEN = 0x3,
  SPELL_FAILED_AURA_BOUNCED = 0x4,
  SPELL_FAILED_BAD_IMPLICIT_TARGETS = 0x5,
  SPELL_FAILED_BAD_TARGETS = 0x6,
  SPELL_FAILED_CANT_BE_CHARMED = 0x7,
  SPELL_FAILED_CANT_STEALTH = 0x8,
  SPELL_FAILED_CASTER_AURASTATE = 0x9,
  SPELL_FAILED_CASTER_DEAD = 0xA,
  SPELL_FAILED_DONT_REPORT = 0xB,
  SPELL_FAILED_EQUIPPED_ITEM = 0xC,
  SPELL_FAILED_EQUIPPED_ITEM_CLASS = 0xD,
  SPELL_FAILED_ERROR = 0xE,
  SPELL_FAILED_FIZZLE = 0xF,
  SPELL_FAILED_HUNGER_SATIATED = 0x10,
  SPELL_FAILED_INTERRUPTED = 0x11,
  SPELL_FAILED_INTERRUPTED_COMBAT = 0x12,
  SPELL_FAILED_ITEM_ALREADY_ENCHANTED = 0x13,
  SPELL_FAILED_ITEM_NOT_FOUND = 0x14,
  SPELL_FAILED_ITEM_NOT_READY = 0x15,
  SPELL_FAILED_LEVEL_REQUIREMENT = 0x16,
  SPELL_FAILED_LINE_OF_SIGHT = 0x17,
  SPELL_FAILED_LOWLEVEL = 0x18,
  SPELL_FAILED_LOW_CASTLEVEL = 0x19,
  SPELL_FAILED_MOVING = 0x1A,
  SPELL_FAILED_NEED_AMMO = 0x1B,
  SPELL_FAILED_NEED_AMMO_POUCH = 0x1C,
  SPELL_FAILED_NEED_EXOTIC_AMMO = 0x1D,
  SPELL_FAILED_NOPATH = 0x1E,
  SPELL_FAILED_NOTSTANDING = 0x1F,
  SPELL_FAILED_NOT_BEHIND = 0x20,
  SPELL_FAILED_NOT_BEHIND_OR_SIDE = 0x21,
  SPELL_FAILED_NOT_HERE = 0x22,
  SPELL_FAILED_NOT_KNOWN = 0x23,
  SPELL_FAILED_NOT_MOUNTED = 0x24,
  SPELL_FAILED_NOT_READY = 0x25,
  SPELL_FAILED_NOT_SHAPESHIFT = 0x26,
  SPELL_FAILED_NOT_TRADING = 0x27,
  SPELL_FAILED_NO_AMMO = 0x28,
  SPELL_FAILED_NO_CHARGES_REMAIN = 0x29,
  SPELL_FAILED_NO_ENDURANCE = 0x2A,
  SPELL_FAILED_NO_PET = 0x2B,
  SPELL_FAILED_NO_POWER = 0x2C,
  SPELL_FAILED_ONLY_ABOVEWATER = 0x2D,
  SPELL_FAILED_ONLY_DAYTIME = 0x2E,
  SPELL_FAILED_ONLY_INDOORS = 0x2F,
  SPELL_FAILED_ONLY_MOUNTED = 0x30,
  SPELL_FAILED_ONLY_NIGHTTIME = 0x31,
  SPELL_FAILED_ONLY_OUTDOORS = 0x32,
  SPELL_FAILED_ONLY_SHAPESHIFT = 0x33,
  SPELL_FAILED_ONLY_STEALTHED = 0x34,
  SPELL_FAILED_ONLY_UNDERWATER = 0x35,
  SPELL_FAILED_OUT_OF_RANGE = 0x36,
  SPELL_FAILED_PACIFIED = 0x37,
  SPELL_FAILED_REAGENTS = 0x38,
  SPELL_FAILED_REQUIRES_SPELL_FOCUS = 0x39,
  SPELL_FAILED_SILENCED = 0x3A,
  SPELL_FAILED_SPELL_IN_PROGRESS = 0x3B,
  SPELL_FAILED_SPELL_LEARNED = 0x3C,
  SPELL_FAILED_SPELL_UNAVAILABLE = 0x3D,
  SPELL_FAILED_STUNNED = 0x3E,
  SPELL_FAILED_TARGETS_DEAD = 0x3F,
  SPELL_FAILED_TARGET_AFFECTING_COMBAT = 0x40,
  SPELL_FAILED_TARGET_AURASTATE = 0x41,
  SPELL_FAILED_TARGET_ENEMY = 0x42,
  SPELL_FAILED_TARGET_ENRAGED = 0x43,
  SPELL_FAILED_TARGET_FRIENDLY = 0x44,
  SPELL_FAILED_TARGET_IS_PLAYER = 0x45,
  SPELL_FAILED_TARGET_NOT_DEAD = 0x46,
  SPELL_FAILED_TARGET_NOT_IN_PARTY = 0x47,
  SPELL_FAILED_TARGET_NO_POCKETS = 0x48,
  SPELL_FAILED_THIRST_SATIATED = 0x49,
  SPELL_FAILED_TOO_CLOSE = 0x4A,
  SPELL_FAILED_TOTEMS = 0x4B,
  SPELL_FAILED_TRY_AGAIN = 0x4C,
  SPELL_FAILED_UNIT_NOT_ATSIDE = 0x4D,
  SPELL_FAILED_UNIT_NOT_BEHIND = 0x4E,
  SPELL_FAILED_UNIT_NOT_INFRONT = 0x4F,
  SPELL_FAILED_NO_MOUNTS_ALLOWED = 0x50,
  SPELL_FAILED_CHEST_IN_USE = 0x51,
  SPELL_FAILED_NO_COMBO_POINTS = 0x52,
  SPELL_FAILED_TARGET_NOT_PLAYER = 0x53,
  SPELL_FAILED_TARGET_DUELING = 0x54,
  SPELL_FAILED_NOTUNSHEATHED = 0x55,
  SPELL_FAILED_NOT_FISHABLE = 0x56,
  SPELL_FAILED_NUMREASONS = 0x57,
};

/* 635 */
enum $C79F1C0D249121458168E196294BBAEB : __int32
{
  eLessThan = 0xFFFFFFFF,
  eEqualTo = 0x0,
  eGreaterThan = 0x1,
};

/* 636 */
typedef $C79F1C0D249121458168E196294BBAEB $D1290D5B20FAF865C34400872A4C8665;

/* 637 */
enum CGWorldFrame::HIT_FILTER : __int32
{
  HIT_TEST_NOTHING = 0x0,
  HIT_TEST_GROUND = 0x1,
  HIT_TEST_OBJECTS = 0x2,
  HIT_TEST_UNITS = 0x4,
  HIT_TEST_PLAYERS = 0x8,
  HIT_TEST_ME = 0x10,
  HIT_TEST_PARTY = 0x10000,
  HIT_TEST_FRIENDS = 0x20000,
  HIT_TEST_ENEMIES = 0x40000,
  HIT_TEST_LIVE = 0x100000,
  HIT_TEST_DEAD = 0x200000,
  HIT_TEST_ALL_OBJS_EXCEPT_ME = 0xE,
  HIT_TEST_ALL_OBJS = 0x1E,
  HIT_TEST_ALL_EXCEPT_ME = 0xF,
  HIT_TEST_ALL = 0x1F,
};

/* 638 */
enum CGWorldFrame::PLAYERFADEMODE : __int32
{
  PLAYERFADE_NONE = 0x0,
  PLAYERFADE_OUT = 0x1,
  PLAYERFADE_IN = 0x2,
  NUM_PLAYERFADEMODES = 0x3,
};

/* 639 */
enum $EE87E85063ECC1C9F2B2FC24B08EDE12 : __int32
{
  NUM_SAVED_FACING_DELTAS = 0x4,
};

/* 640 */
enum $61096CCCC3DE15D2869587F37FA69EC9 : __int32
{
  STATE_UNKNOWN = 0x0,
  STATE_INITIALIZED = 0x1,
  STATE_DESTROYED = 0x2,
  STATE_DELETED = 0x3,
};

/* 641 */
enum CBackdropGenerator::BACKDROPPIECES : __int32
{
  LEFTSIDE = 0x1,
  RIGHTSIDE = 0x2,
  TOPSIDE = 0x4,
  BOTTOMSIDE = 0x8,
  TOPLEFTCORNER = 0x10,
  TOPRIGHTCORNER = 0x20,
  BOTTOMLEFTCORNER = 0x40,
  BOTTOMRIGHTCORNER = 0x80,
  BACKDROPONLY = 0x0,
  CORNERSONLY = 0xF0,
  SIDESONLY = 0xF,
  THEWORKS = 0xFF,
};

/* 642 */
typedef $61096CCCC3DE15D2869587F37FA69EC9 $22F6F1CA8CD3E9AA185574683DEB3A37;

/* 643 */
enum $5B982A0EF700AEE2D00C96CBD8F0BDE4 : __int32
{
  NULL_SUB = 0xFFFF,
};

/* 644 */
enum $3642FFB562545E3331B36CE880D3B25D : __int32
{
  DEFAULT_STEPS = 0x14,
};

/* 645 */
enum $34C5CCDD71F82959D34410CF8C01F194 : __int32
{
  SIDE_ON = 0x0,
  SIDE_POS = 0x1,
  SIDE_NEG = 0x2,
};

/* 646 */
enum $23AF06F73B188C0DC90D2608E04E3EA3 : __int32
{
  ARCHIVE = 0x1,
  LATCH = 0x2,
};

/* 647 */
enum $BD9BB2CD5330419B5EDA44CCDB09D344 : __int32
{
  SUN = 0x0,
  MOON = 0x1,
  MOON2 = 0x2,
};

/* 648 */
enum UNITNAME_SHOWTYPE_GROUPS : __int32
{
  SHOWTYPE_LOCALPLAYER = 0x0,
  SHOWTYPE_ALLOTHERUNITS = 0x1,
  NUM_UNITNAME_SHOWTYPE_CATEGORIES = 0x2,
};

/* 649 */
enum UNIT_UNITNAME_SHOWTYPE : __int32
{
  UNITNAMEINFO_NAME = 0x0,
  UNITNAMEINFO_GUILD = 0x1,
  UNITNAMEINFO_TITLE = 0x2,
  UNITNAMEINFO_SUMMONEDBY = 0x3,
  NUM_UNITNAME_SHOWTYPES = 0x4,
};

/* 650 */
enum $2EAB39B45516A81C02EB31451D750CBC : __int32
{
  Flag_XAxis = 0x0,
  Flag_YAxis = 0x1,
  Flag_ZAxis = 0x2,
  Flag_AxisMask = 0x3,
  Flag_Leaf = 0x4,
  Flag_NoChild = 0xFFFF,
};

/* 651 */
enum $0D856C9765E8F079828CCA6E3383463F : __int32
{
  Plane_Front = 0x0,
  Plane_Back = 0x1,
  Plane_On = 0x2,
};

/* 652 */
enum CGxShaderParam::Type : __int32
{
  Type_Vector4 = 0x0,
  Type_Matrix34 = 0x1,
  Type_Matrix44 = 0x2,
  Type_Force32Bit = 0xFFFFFFFF,
};

/* 653 */
enum $ABDCAAD4B56EC1BEAFB7E67463F74D3B : __int32
{
  NAME_LEN = 0x20,
};

/* 654 */
enum $BB3A1DFB12411D5D523B9918A0927CED : __int32
{
  SHARED_MASK = 0x80,
  SHARED_SHIFT = 0x7,
  FISHABLE_MASK = 0x40,
  FISHABLE_SHIFT = 0x6,
};

/* 655 */
enum SMOFog::EFogs : __int32
{
  FOG = 0x0,
  UWFOG = 0x1,
  NUM_FOGS = 0x2,
};

/* 656 */
enum SMOFog::EFlags : __int32
{
  F_IEBLEND = 0x1,
};

/* 657 */
enum $DE21D15256D7A66B0653F030A7E0AC06 : __int32
{
  F_NOCAMCOLLIDE = 0x2,
  F_DETAIL = 0x4,
  F_COLLISION = 0x8,
  F_HINT = 0x10,
  F_RENDER = 0x20,
  F_COLLIDE_HIT = 0x80,
};

/* 658 */
enum $B9EEF244BE8F0614504031333186B7C0 : __int32
{
  F_RENDERED = 0xF0,
};

/* 659 */
enum $161143B88C7A8814CC18BD932F205985 : __int32
{
  MAX_FACES = 0x1000,
};

/* 660 */
enum SMOLight::LightType : __int32
{
  OMNI_LGT = 0x0,
  SPOT_LGT = 0x1,
  DIRECT_LGT = 0x2,
  AMBIENT_LGT = 0x3,
};

/* 661 */
enum $4586C6BAA7AF1C78D72F7E1474ECFD78 : __int32
{
  MAPID_DIFFUSE = 0x0,
  MAPID_ENV = 0x1,
  MAPID_COUNT = 0x2,
};

/* 662 */
enum $07346F724110ADFF78628FC4FBD4304B : __int32
{
  F_UNLIT = 0x1,
  F_UNFOGGED = 0x2,
  F_UNCULLED = 0x4,
  F_EXTLIGHT = 0x8,
  F_SIDN = 0x10,
  F_WINDOW = 0x20,
  F_CLAMP_S = 0x40,
  F_CLAMP_T = 0x80,
};

/* 663 */
enum $77DAD22FB8A1EAB4E3719875988B96A2 : __int32
{
  F_SCREEN_CULLED = 0x1,
  F_INTERSECT_NEAR = 0x2,
};

/* 664 */
enum $52EB66FCD269880EB6340E08D1D5061C : __int32
{
  Flag_Shadowed = 0x1,
};

/* 665 */
enum $1228F1C14405A695AEE2BBB91E53A696 : __int32
{
  PROP_TWOSIDED = 0x1,
};

/* 666 */
enum $B7DA2689E79E8411E8DCB0289280BE72 : __int32
{
  Type_BaseObj = 0x1,
  Type_Area = 0x2,
  Type_Chunk = 0x4,
  Type_MapObjDef = 0x8,
  Type_MapObjDefGroup = 0x10,
  Type_Entity = 0x20,
  Type_DoodadDef = 0x40,
  Type_Light = 0x80,
};

/* 667 */
enum $E0E03B699F697FFE97315830E9E8F4C3 : __int32
{
  Flag_LightUpdate = 0x1,
  Flag_GameObj = 0x2,
  Flag_LoadFailed = 0x4,
  Flag_InteriorLit = 0x8,
  Flag_ExteriorLit = 0x10,
  Flag_HasDoodadRefs = 0x20,
  Flag_HasLights = 0x40,
  Flag_Enabled = 0x80,
  Flag_Impassable = 0x100,
  Flag_Loaded = 0x200,
  Flag_HasAllDoodads = 0x400,
  Flag_NoCollision = 0x800,
};

/* 668 */
enum $1474795A9A4D0F5ECE5897F45D6ACAB0 : __int32
{
  MAX_PARTICLES = 0xFA0,
  MAX_RENDER = 0x29A,
};

/* 669 */
enum CWorld::ObjStatus : __int32
{
  ObjStatus_Visible = 0x1,
  ObjStatus_Audible = 0x2,
};

/* 670 */
enum CWorld::ObjFlags : __int32
{
  ObjFlag_Collidable = 0x1,
  ObjFlag_NoShadow = 0x2,
  ObjFlag_AlwaysAnimate = 0x4,
};

/* 671 */
enum CWorld::WorldQueryFlags : __int32
{
  WQF_doodadCollision = 0x1,
  WQF_doodadRender = 0x2,
  WQF_doodadMask = 0xF,
  WQF_mapobjCollision = 0x10,
  WQF_mapobjRender = 0x20,
  WQF_mapobjNoCamCollide = 0x40,
  WQF_mapobjMask = 0xF0,
  WQF_terrain = 0x100,
  WQF_terrainMask = 0xF00,
  WQF_noForceLoad = 0x1000,
  WQF_noWmoDoodad = 0x2000,
  WQF_render = 0x122,
  WQF_collision = 0x111,
};

/* 672 */
enum CWorld::Enables : __int32
{
  Enable_Doodads = 0x1,
  Enable_Chunks = 0x2,
  Enable_Lod = 0x4,
  Enable_Texture = 0x8,
  Enable_Sky = 0x10,
  Enable_Culling = 0x20,
  Enable_Shadow = 0x40,
  Enable_Collision = 0x80,
  Enable_MapObjs = 0x100,
  Enable_MapObjLight = 0x200,
  Enable_VertexLight = 0x400,
  Enable_MapObjTex = 0x800,
  Enable_Portals = 0x1000,
  Enable_PortalVis = 0x2000,
  Enable_NoFullAlpha = 0x4000,
  Enable_NoAnimation = 0x8000,
  Enable_DebugBSP = 0x10000,
  Enable_CrappyBatches = 0x20000,
  Enable_ZoneBounds = 0x40000,
  Enable_MapObjBSP = 0x80000,
  Enable_DetailDoodads = 0x100000,
  Enable_ShowQuery = 0x200000,
  Enable_AABoxes = 0x400000,
  Enable_Trilinear = 0x800000,
  Enable_Water = 0x1000000,
  Enable_Particulates = 0x2000000,
  Enable_LowDetail = 0x4000000,
  Enable_Specular = 0x8000000,
  Enable_PixelShaders = 0x10000000,
  Enable_ShowTris = 0x20000000,
  Enable_ShowNormals = 0x40000000,
  Enable_Anisotropic = 0x80000000,
};

/* 673 */
enum $4DBC190F18B08D4E489064C8C20C137A : __int32
{
  Cnt_Area = 0x0,
  Cnt_DoodadDef = 0x1,
  Cnt_Chunk = 0x2,
  Cnt_ChunkLayer = 0x3,
  Cnt_ChunkTex = 0x4,
  Cnt_MapObjDef = 0x5,
  Cnt_MapObjDefGroup = 0x6,
  Cnt_Entity = 0x7,
  Cnt_Light = 0x8,
  Cnt_BaseObjLink = 0x9,
  Cnt_CacheLight = 0xA,
  Cnt_Num = 0xB,
};

/* 674 */
enum $6732EB83E758C6FBB7DBA5A8BACCB51E : __int32
{
  NUM_RIPPLES = 0x30,
  NUM_LIQUID_TEX_FRAMES = 0x1E,
};

/* 675 */
enum $D060DB4088FB4E806FBB4D58AD1CF7A2 : __int32
{
  OCEAN_DIFF_TEX = 0x0,
  RIVER_DIFF_TEX = 0x1,
};

/* 676 */
enum $5B93364BE9CBEFE508B3A90818FA22AF : __int32
{
  Magic = 0x47585053,
};

/* 677 */
enum $D536268A86D0F83BD76591C971D72973 : __int32
{
  Version = 0x10001,
};

/* 678 */
enum $8131F50240B83686F543B602996722F3 : __int32
{
  FLAG_LOADED = 0x1,
};

/* 679 */
typedef $8131F50240B83686F543B602996722F3 $88B91373B7E1C68E83C22A9D83F058CF;

/* 680 */
enum $C6EF6D9D60EB142EBC516406401DD342 : __int32
{
  FLAG_SHADOW = 0x1,
  FLAG_IMPASS = 0x2,
  FLAG_LQ_RIVER = 0x4,
  FLAG_LQ_OCEAN = 0x8,
  FLAG_LQ_MAGMA = 0x10,
};

/* 681 */
typedef $1228F1C14405A695AEE2BBB91E53A696 $0B07CCB077CF8921B53A81744634880B;

/* 682 */
enum MDLPARTICLEEMITTER2::PARTICLE_BLEND_MODE : __int32
{
  PBM_BLEND = 0x0,
  PBM_ADD = 0x1,
  PBM_MODULATE = 0x2,
  PBM_MODULATE_2X = 0x3,
  PBM_ALPHA_KEY = 0x4,
  NUM_PARTICLE_BLEND_MODES = 0x5,
};

/* 683 */
enum MDLPARTICLEEMITTER2::PARTICLE_TYPE : __int32
{
  PT_HEAD = 0x0,
  PT_TAIL = 0x1,
  PT_BOTH = 0x2,
  NUM_PARTICLE_TYPES = 0x3,
};

/* 684 */
enum MDLPARTICLEEMITTER2::PARTICLE_EMITTER_TYPE : __int32
{
  PET_BASE = 0x0,
  PET_PLANE = 0x1,
  PET_SPHERE = 0x2,
  PET_SPLINE = 0x3,
  NUM_PARTICLE_EMITTER_TYPES = 0x4,
};

/* 685 */
enum $2F209DDE6DEB013FFFA76D866D0B804D : __int32
{
  SIZE = 0x10,
};

/* 686 */
enum $01FB546329D89F5877AC5F5ECDF05078 : __int32
{
  MAX_ENTRIES = 0x100,
};

/* 687 */
enum $3F3AF60ECD4A9FB5B79A37F94DEAEDC4 : __int32
{
  LOCKENTERED = 0x80000000,
};

/* 688 */
enum $2F86F21D6B84A06795A65641638C7455 : __int32
{
  FORWRITING = 0x40000000,
};

/* 689 */
typedef $01FB546329D89F5877AC5F5ECDF05078 $F3C7419FDEF0F21CB49AC5806D9CA3FC;

/* 690 */
typedef $3F3AF60ECD4A9FB5B79A37F94DEAEDC4 $4841C867A2D9E0EB6D5F8EBEE50FAE20;

/* 691 */
typedef $2F86F21D6B84A06795A65641638C7455 $F17396327E27E4CD10DB39388668BA0E;

/* 692 */
enum $BD15272ABDBD8A561A82A2EBF0399CCB : __int32
{
  PrimMask_Vertex = 0x1,
  PrimMask_TexCoord = 0x2,
  PrimMask_Normal = 0x20,
  PrimMask_Color = 0x40,
};

/* 693 */
enum $9AA7F026031BA9031337D4BEC74FEA6B : __int32
{
  MinD3dBufVertices = 0x100,
  MinD3dBufIndices = 0x300,
};

/* 694 */
enum $3F02F3CC8B11EFFB869FC60E784E1DDA : __int32
{
  TYPE_DOOR = 0x0,
  TYPE_BUTTON = 0x1,
  TYPE_QUESTGIVER = 0x2,
  TYPE_CHEST = 0x3,
  TYPE_BINDER = 0x4,
  TYPE_GENERIC = 0x5,
  TYPE_TRAP = 0x6,
  TYPE_CHAIR = 0x7,
  TYPE_SPELL_FOCUS = 0x8,
  TYPE_TEXT = 0x9,
  TYPE_GOOBER = 0xA,
  TYPE_TRANSPORT = 0xB,
  TYPE_AREADAMAGE = 0xC,
  TYPE_CAMERA = 0xD,
  TYPE_MAP_OBJECT = 0xE,
  TYPE_MO_TRANSPORT = 0xF,
  TYPE_DUEL_ARBITER = 0x10,
  TYPE_FISHINGNODE = 0x11,
  TYPE_RITUAL = 0x12,
  NUM_GAMEOBJECT_TYPE = 0x13,
};

/* 695 */
enum $019AB2290716A11E3F16B88CAB21CBDF : __int32
{
  PROP_TYPE = 0x0,
  PROP_STARTOPEN = 0x1,
  PROP_STARTDESTROYED = 0x2,
  PROP_AUTOCLOSE = 0x3,
  PROP_LOCK = 0x4,
  PROP_QUESTLISTID = 0x5,
  PROP_CHESTLOOT = 0x6,
  PROP_CHESTLOOTTIME = 0x7,
  PROP_CONSUMABLE = 0x8,
  PROP_CHARGES = 0x9,
  PROP_SPELL = 0xA,
  PROP_CHAIRSLOTS = 0xB,
  PROP_CHAIRHEIGHT = 0xC,
  PROP_CHESTLOOTEDEVENT = 0xD,
  PROP_SPELLFOCUSTYPE = 0xE,
  PROP_TEXTID = 0xF,
  PROP_TEXTLANGUAGE = 0x10,
  PROP_TEXTMATERIAL = 0x11,
  PROP_HIGHLIGHT = 0x12,
  PROP_FLOATINGTOOLTIP = 0x13,
  PROP_QUESTID = 0x14,
  PROP_EVENTID = 0x15,
  PROP_CUSTOMANIM = 0x16,
  PROP_COOLDOWN = 0x17,
  PROP_RADIUS = 0x18,
  PROP_CHESTMINRESTOCK = 0x19,
  PROP_CHESTMAXRESTOCK = 0x1A,
  PROP_DAMAGE_MIN = 0x1B,
  PROP_DAMAGE_MAX = 0x1C,
  PROP_DAMAGE_SCHOOL = 0x1D,
  PROP_LINKED_TRAP = 0x1E,
  PROP_TRAP_LEVEL = 0x1F,
  PROP_STARTDELAY = 0x20,
  PROP_CAMERAID = 0x21,
  PROP_CASTERS = 0x22,
  PROP_TAXIPATHID1 = 0x23,
  PROP_TAXIPATHID2 = 0x24,
  PROP_MOVESPEED = 0x25,
  NUM_PROP = 0x26,
};

/* 696 */
enum $47ADC426F4A6C11E0CABF4A1C0EAB000 : __int32
{
  VALUE_TYPE_TYPE = 0x0,
  VALUE_TYPE_BOOL = 0x1,
  VALUE_TYPE_INT = 0x2,
  VALUE_TYPE_FLOAT = 0x3,
  VALUE_TYPE_NAME = 0x4,
  VALUE_TYPE_LOCK = 0x5,
  VALUE_TYPE_QUESTGIVER = 0x6,
  VALUE_TYPE_LOOTTABLE = 0x7,
  VALUE_TYPE_SPELL = 0x8,
  VALUE_TYPE_PAGETEXT = 0x9,
  VALUE_TYPE_PAGEMATERIAL = 0xA,
  VALUE_TYPE_TRAP = 0xB,
  VALUE_TYPE_CAMERA = 0xC,
  NUM_VALUE_TYPE = 0xD,
};

/* 697 */
enum $B853A72E7BCF9809AED515205C1A2D8F : __int32
{
  BASE_TYPE_NUMBER = 0x0,
  BASE_TYPE_ENUM = 0x1,
  BASE_TYPE_STRING = 0x2,
  NUM_BASE_TYPE = 0x3,
};

/* 698 */
enum $CB08915F305DBE43A3139FC6642D79DB : __int32
{
  OWNER_TYPE_TERRAIN = 0x0,
  OWNER_TYPE_MAPOBJ = 0x1,
  OWNER_TYPE_SPAWNER = 0x2,
  NUM_OWNER_TYPE = 0x3,
};

/* 699 */
enum $B9D8AB5DEDE002C27EFACE4BD0226D40 : __int32
{
  LOCKED = 0xFFFFFFF,
  CHANGED = 0x80000000,
};

/* 700 */
enum $85F0E639B28CFA99F10C65E5902C5416 : __int32
{
  ROWS = 0x4,
  COLS = 0x4,
};

/* 701 */
enum $89D0C5C2E44F52FE416D335CCEE5E41E : __int32
{
  BPP = 0x4,
  PIXEL_LSB_MASK = 0xF,
};

/* 702 */
typedef $89D0C5C2E44F52FE416D335CCEE5E41E $E36960DF5C7E0E77B81C4B37EEDB0D70;

/* 703 */
enum CGxMatrixStack::EMatrixFlags : __int32
{
  F_Identity = 0x1,
};

/* 704 */
typedef $5B93364BE9CBEFE508B3A90818FA22AF $4E35BFD6EBB12B424C98C723E519C8C7;

/* 705 */
typedef $D536268A86D0F83BD76591C971D72973 $D9075EDA37955E6DAAB0315570219E0A;

/* 706 */
enum _D3DBACKBUFFER_TYPE : __int32
{
  D3DBACKBUFFER_TYPE_MONO = 0x0,
  D3DBACKBUFFER_TYPE_LEFT = 0x1,
  D3DBACKBUFFER_TYPE_RIGHT = 0x2,
  D3DBACKBUFFER_TYPE_FORCE_DWORD = 0x7FFFFFFF,
};

/* 707 */
enum _D3DTRANSFORMSTATETYPE : __int32
{
  D3DTS_VIEW = 0x2,
  D3DTS_PROJECTION = 0x3,
  D3DTS_TEXTURE0 = 0x10,
  D3DTS_TEXTURE1 = 0x11,
  D3DTS_TEXTURE2 = 0x12,
  D3DTS_TEXTURE3 = 0x13,
  D3DTS_TEXTURE4 = 0x14,
  D3DTS_TEXTURE5 = 0x15,
  D3DTS_TEXTURE6 = 0x16,
  D3DTS_TEXTURE7 = 0x17,
  D3DTS_FORCE_DWORD = 0x7FFFFFFF,
};

/* 708 */
enum _D3DRENDERSTATETYPE : __int32
{
  D3DRS_ZENABLE = 0x7,
  D3DRS_FILLMODE = 0x8,
  D3DRS_SHADEMODE = 0x9,
  D3DRS_ZWRITEENABLE = 0xE,
  D3DRS_ALPHATESTENABLE = 0xF,
  D3DRS_LASTPIXEL = 0x10,
  D3DRS_SRCBLEND = 0x13,
  D3DRS_DESTBLEND = 0x14,
  D3DRS_CULLMODE = 0x16,
  D3DRS_ZFUNC = 0x17,
  D3DRS_ALPHAREF = 0x18,
  D3DRS_ALPHAFUNC = 0x19,
  D3DRS_DITHERENABLE = 0x1A,
  D3DRS_ALPHABLENDENABLE = 0x1B,
  D3DRS_FOGENABLE = 0x1C,
  D3DRS_SPECULARENABLE = 0x1D,
  D3DRS_FOGCOLOR = 0x22,
  D3DRS_FOGTABLEMODE = 0x23,
  D3DRS_FOGSTART = 0x24,
  D3DRS_FOGEND = 0x25,
  D3DRS_FOGDENSITY = 0x26,
  D3DRS_RANGEFOGENABLE = 0x30,
  D3DRS_STENCILENABLE = 0x34,
  D3DRS_STENCILFAIL = 0x35,
  D3DRS_STENCILZFAIL = 0x36,
  D3DRS_STENCILPASS = 0x37,
  D3DRS_STENCILFUNC = 0x38,
  D3DRS_STENCILREF = 0x39,
  D3DRS_STENCILMASK = 0x3A,
  D3DRS_STENCILWRITEMASK = 0x3B,
  D3DRS_TEXTUREFACTOR = 0x3C,
  D3DRS_WRAP0 = 0x80,
  D3DRS_WRAP1 = 0x81,
  D3DRS_WRAP2 = 0x82,
  D3DRS_WRAP3 = 0x83,
  D3DRS_WRAP4 = 0x84,
  D3DRS_WRAP5 = 0x85,
  D3DRS_WRAP6 = 0x86,
  D3DRS_WRAP7 = 0x87,
  D3DRS_CLIPPING = 0x88,
  D3DRS_LIGHTING = 0x89,
  D3DRS_AMBIENT = 0x8B,
  D3DRS_FOGVERTEXMODE = 0x8C,
  D3DRS_COLORVERTEX = 0x8D,
  D3DRS_LOCALVIEWER = 0x8E,
  D3DRS_NORMALIZENORMALS = 0x8F,
  D3DRS_DIFFUSEMATERIALSOURCE = 0x91,
  D3DRS_SPECULARMATERIALSOURCE = 0x92,
  D3DRS_AMBIENTMATERIALSOURCE = 0x93,
  D3DRS_EMISSIVEMATERIALSOURCE = 0x94,
  D3DRS_VERTEXBLEND = 0x97,
  D3DRS_CLIPPLANEENABLE = 0x98,
  D3DRS_POINTSIZE = 0x9A,
  D3DRS_POINTSIZE_MIN = 0x9B,
  D3DRS_POINTSPRITEENABLE = 0x9C,
  D3DRS_POINTSCALEENABLE = 0x9D,
  D3DRS_POINTSCALE_A = 0x9E,
  D3DRS_POINTSCALE_B = 0x9F,
  D3DRS_POINTSCALE_C = 0xA0,
  D3DRS_MULTISAMPLEANTIALIAS = 0xA1,
  D3DRS_MULTISAMPLEMASK = 0xA2,
  D3DRS_PATCHEDGESTYLE = 0xA3,
  D3DRS_DEBUGMONITORTOKEN = 0xA5,
  D3DRS_POINTSIZE_MAX = 0xA6,
  D3DRS_INDEXEDVERTEXBLENDENABLE = 0xA7,
  D3DRS_COLORWRITEENABLE = 0xA8,
  D3DRS_TWEENFACTOR = 0xAA,
  D3DRS_BLENDOP = 0xAB,
  D3DRS_POSITIONDEGREE = 0xAC,
  D3DRS_NORMALDEGREE = 0xAD,
  D3DRS_SCISSORTESTENABLE = 0xAE,
  D3DRS_SLOPESCALEDEPTHBIAS = 0xAF,
  D3DRS_ANTIALIASEDLINEENABLE = 0xB0,
  D3DRS_MINTESSELLATIONLEVEL = 0xB2,
  D3DRS_MAXTESSELLATIONLEVEL = 0xB3,
  D3DRS_ADAPTIVETESS_X = 0xB4,
  D3DRS_ADAPTIVETESS_Y = 0xB5,
  D3DRS_ADAPTIVETESS_Z = 0xB6,
  D3DRS_ADAPTIVETESS_W = 0xB7,
  D3DRS_ENABLEADAPTIVETESSELLATION = 0xB8,
  D3DRS_TWOSIDEDSTENCILMODE = 0xB9,
  D3DRS_CCW_STENCILFAIL = 0xBA,
  D3DRS_CCW_STENCILZFAIL = 0xBB,
  D3DRS_CCW_STENCILPASS = 0xBC,
  D3DRS_CCW_STENCILFUNC = 0xBD,
  D3DRS_COLORWRITEENABLE1 = 0xBE,
  D3DRS_COLORWRITEENABLE2 = 0xBF,
  D3DRS_COLORWRITEENABLE3 = 0xC0,
  D3DRS_BLENDFACTOR = 0xC1,
  D3DRS_SRGBWRITEENABLE = 0xC2,
  D3DRS_DEPTHBIAS = 0xC3,
  D3DRS_WRAP8 = 0xC6,
  D3DRS_WRAP9 = 0xC7,
  D3DRS_WRAP10 = 0xC8,
  D3DRS_WRAP11 = 0xC9,
  D3DRS_WRAP12 = 0xCA,
  D3DRS_WRAP13 = 0xCB,
  D3DRS_WRAP14 = 0xCC,
  D3DRS_WRAP15 = 0xCD,
  D3DRS_SEPARATEALPHABLENDENABLE = 0xCE,
  D3DRS_SRCBLENDALPHA = 0xCF,
  D3DRS_DESTBLENDALPHA = 0xD0,
  D3DRS_BLENDOPALPHA = 0xD1,
  D3DRS_FORCE_DWORD = 0x7FFFFFFF,
};

/* 709 */
enum _D3DSTATEBLOCKTYPE : __int32
{
  D3DSBT_ALL = 0x1,
  D3DSBT_PIXELSTATE = 0x2,
  D3DSBT_VERTEXSTATE = 0x3,
  D3DSBT_FORCE_DWORD = 0x7FFFFFFF,
};

/* 710 */
enum _D3DTEXTURESTAGESTATETYPE : __int32
{
  D3DTSS_COLOROP = 0x1,
  D3DTSS_COLORARG1 = 0x2,
  D3DTSS_COLORARG2 = 0x3,
  D3DTSS_ALPHAOP = 0x4,
  D3DTSS_ALPHAARG1 = 0x5,
  D3DTSS_ALPHAARG2 = 0x6,
  D3DTSS_BUMPENVMAT00 = 0x7,
  D3DTSS_BUMPENVMAT01 = 0x8,
  D3DTSS_BUMPENVMAT10 = 0x9,
  D3DTSS_BUMPENVMAT11 = 0xA,
  D3DTSS_TEXCOORDINDEX = 0xB,
  D3DTSS_BUMPENVLSCALE = 0x16,
  D3DTSS_BUMPENVLOFFSET = 0x17,
  D3DTSS_TEXTURETRANSFORMFLAGS = 0x18,
  D3DTSS_COLORARG0 = 0x1A,
  D3DTSS_ALPHAARG0 = 0x1B,
  D3DTSS_RESULTARG = 0x1C,
  D3DTSS_CONSTANT = 0x20,
  D3DTSS_FORCE_DWORD = 0x7FFFFFFF,
};

/* 711 */
enum _D3DSAMPLERSTATETYPE : __int32
{
  D3DSAMP_ADDRESSU = 0x1,
  D3DSAMP_ADDRESSV = 0x2,
  D3DSAMP_ADDRESSW = 0x3,
  D3DSAMP_BORDERCOLOR = 0x4,
  D3DSAMP_MAGFILTER = 0x5,
  D3DSAMP_MINFILTER = 0x6,
  D3DSAMP_MIPFILTER = 0x7,
  D3DSAMP_MIPMAPLODBIAS = 0x8,
  D3DSAMP_MAXMIPLEVEL = 0x9,
  D3DSAMP_MAXANISOTROPY = 0xA,
  D3DSAMP_SRGBTEXTURE = 0xB,
  D3DSAMP_ELEMENTINDEX = 0xC,
  D3DSAMP_DMAPOFFSET = 0xD,
  D3DSAMP_FORCE_DWORD = 0x7FFFFFFF,
};

/* 712 */
enum _D3DQUERYTYPE : __int32
{
  D3DQUERYTYPE_VCACHE = 0x4,
  D3DQUERYTYPE_RESOURCEMANAGER = 0x5,
  D3DQUERYTYPE_VERTEXSTATS = 0x6,
  D3DQUERYTYPE_EVENT = 0x8,
  D3DQUERYTYPE_OCCLUSION = 0x9,
};

/* 713 */
enum _D3DBASISTYPE : __int32
{
  D3DBASIS_BEZIER = 0x0,
  D3DBASIS_BSPLINE = 0x1,
  D3DBASIS_CATMULL_ROM = 0x2,
  D3DBASIS_FORCE_DWORD = 0x7FFFFFFF,
};

/* 714 */
enum _D3DDEGREETYPE : __int32
{
  D3DDEGREE_LINEAR = 0x1,
  D3DDEGREE_QUADRATIC = 0x2,
  D3DDEGREE_CUBIC = 0x3,
  D3DDEGREE_QUINTIC = 0x5,
  D3DDEGREE_FORCE_DWORD = 0x7FFFFFFF,
};

/* 715 */
enum $E2B50F5CED6A0A0DA2405D023CA5FC01 : __int32
{
  VarA = 0x0,
  VarB = 0x1,
  VarC = 0x2,
  VarD = 0x3,
  Var_Count = 0x4,
};

/* 716 */
enum $53FA58CA8EF017DC9B88C859A60BF470 : __int32
{
  Portion_Rgb = 0x0,
  Portion_Alpha = 0x1,
  Portion_Count = 0x2,
};

/* 717 */
typedef $E2B50F5CED6A0A0DA2405D023CA5FC01 $600357993412BA2557A498CFF450190C;

/* 718 */
enum $46ACFB348C7227E4AB50370A8C498502 : __int32
{
  MODEL_ARROW_LOADED = 0x8,
};

/* 719 */
enum $992A8CB7BF9710A886F566E3497E3D82 : __int32
{
  MODEL_LOADED = 0x1,
  MODEL_FOGGED = 0x2,
  MODEL_CAMERA_WAITING = 0x4,
  MODEL_USER_FLAG = 0x8,
};

/* 720 */
typedef $B9D8AB5DEDE002C27EFACE4BD0226D40 $D97222280789216F009F1DD77900FA88;

/* 721 */
enum $B08E943E084462EBD0820AAED9150085 : __int32
{
  rexp = 0x3F800000,
  rmant = 0x7FFFFF,
  lrexp = 0x3FF00000,
  lrmant = 0xFFFFF,
};

/* 722 */
enum CBaseManaged::ManagedTypeIds : __int32
{
  UNKNOWN = 0x0,
  ALPHACOLOR = 0x1,
  COLOR = 0x2,
  COORD = 0x3,
  C33MATRIX = 0x4,
  INT = 0x5,
  FLOAT = 0x6,
  DATATYPEIDS = 0x7,
};

/* 723 */
enum $99BC618A2FE751A9E96A4013497352CE : __int32
{
  ALWAYSUPDATE = 0x1,
  READONLY = 0x2,
  REQUIRESUPDATE = 0x4,
  UPDATED = 0x8,
};

/* 724 */
enum $037A4DF28F81EC2F7702E5E855F46CB1 : __int32
{
  F_BORN = 0x1,
};

/* 725 */
enum CParticleEmitter2::PARTICLE_EMITTER_TYPE : __int32
{
  PET_BASE_EMITTER = 0x0,
  PET_PLANE_EMITTER = 0x1,
  PET_SPHERE_EMITTER = 0x2,
  PET_SPLINE_EMITTER = 0x3,
  PET_NUMS_PETS = 0x4,
};

/* 726 */
enum $8F3A7DD15A9DF88F9025E28EAFB021ED : __int32
{
  NUM_PARTICLE_KEYS = 0x2,
  MAX_CHILD_EMITTERS = 0x4,
};

/* 727 */
enum $DB22895342A03C9345E7FA7E7D3B16DB : __int32
{
  MAX_RECURSIVE_PARTICLES = 0x1000,
  RND_TABLE_SIZE = 0x80,
  RND_TABLE_MASK = 0x7F,
};

/* 728 */
enum CParticleEmitter2::PARTICLE_TYPE : __int32
{
  PT_QUAD = 0x0,
  PT_MODEL = 0x1,
};

/* 729 */
enum OsNet::TCPNET::CONNECTLIST : __int32
{
  CONNECTLIST_LOOP_CONNECTED = 0x0,
  CONNECTLIST_TCP_CONNECTED = 0x1,
  CONNECTLIST_TCP_CONNECTING = 0x2,
  CONNECTLIST_FILE_CONNECTED = 0x3,
  CONNECTLISTS = 0x4,
};

/* 730 */
enum $D8FDF668097B013EF3652A891508D932 : __int32
{
  MAXSLOTS = 0x100,
};

/* 731 */
typedef $D8FDF668097B013EF3652A891508D932 $97CA6C5FB4A68B0952FED086873B3060;

/* 732 */
enum $14D7751E9CF3E789E47FE207E2280A77 : __int32
{
  DIRTY_NONE = 0x0,
  DIRTY_TEXT = 0x1,
  DIRTY_HIGHLIGHT = 0x2,
  DIRTY_CURSOR = 0x4,
};

/* 733 */
enum $A7204C18449C0BA40F8A548BB854AA04 : __int32
{
  EVENT_ENTER = 0x0,
  EVENT_ESCAPE = 0x1,
  EVENT_SPACE = 0x2,
  EVENT_TAB = 0x3,
  EVENT_CHANGED = 0x4,
  EVENT_SET = 0x5,
  NUM_EDITBOX_ACTIONS = 0x6,
};

/* 734 */
enum $11E0E872F505D1ABE929C70CA0A63527 : __int32
{
  ROOT_INDEX = 0x0,
};

/* 735 */
enum $1952D9A350D7FABF9DBB8F5C55AE6153 : __int32
{
  eDefaultNodesPerBlock = 0x10,
};

/* 736 */
enum $4B703E8240D702EE396A5CFEFD6A4FCB : __int32
{
  eDefaultMaxNodes = 0x7FFFFFFF,
};

/* 737 */
enum EvtContext::SCHEDSTATE : __int32
{
  SCHEDSTATE_ACTIVE = 0x0,
  SCHEDSTATE_CLOSED = 0x1,
  SCHEDSTATE_DESTROYED = 0x2,
  _UNIQUE_SYMBOL_SCHEDSTATE_96 = 0xFFFFFFFF,
};

/* 738 */
struct __cppobj NTempest::C3Vector
{
  float x;
  float y;
  float z;
};

/* 739 */
struct __cppobj NTempest::C3iVector
{
  int x;
  int y;
  int z;
};

/* 740 */
struct __cppobj NTempest::C2Vector
{
  float x;
  float y;
};

/* 741 */
struct HOBJECT__
{
  int unused;
};

/* 742 */
struct __cppobj HLAYER__ : HOBJECT__
{
  int unused;
};

/* 743 */
struct TEXTUREINFO
{
  const char *name;
  unsigned __int8 scaleWithProgress;
  float centerX;
  float centerY;
  float width;
  float height;
  EGxBlend blend;
};

/* 744 */
union $54098EDED06C12E3ABE0021ADF09A999
{
  int t;
  int miny;
};

/* 745 */
union $0752C96664DDE975D7CC99220B7E17A6
{
  int l;
  int minx;
};

/* 746 */
union $4A2A67BDB50D196EF21D2648DF191864
{
  int b;
  int maxy;
};

/* 747 */
union $E6A4DC4E492274A6474EAA51FA9E28BD
{
  int r;
  int maxx;
};

/* 748 */
struct __cppobj NTempest::CiRect
{
  $54098EDED06C12E3ABE0021ADF09A999 ___u0;
  $0752C96664DDE975D7CC99220B7E17A6 ___u1;
  $4A2A67BDB50D196EF21D2648DF191864 ___u2;
  $E6A4DC4E492274A6474EAA51FA9E28BD ___u3;
};

/* 749 */
struct __cppobj CGxTexFlags
{
  unsigned __int32 m_filter : 3;
  unsigned __int32 m_wrapU : 1;
  unsigned __int32 m_wrapV : 1;
  unsigned __int32 m_forceMipTracking : 1;
  unsigned __int32 m_generateMipMaps : 1;
  unsigned __int32 m_renderTarget : 1;
  unsigned __int32 m_maxAnisotropy : 5;
};

/* 750 */
struct __cppobj CGxTex
{
  unsigned __int8 m_needsUpdate;
  unsigned __int8 m_needsCreation;
  unsigned __int8 m_needsFlagUpdate;
  NTempest::CiRect m_updateRect;
  unsigned __int8 m_updateFaces[6];
  __int16 m_updatePlaneMin;
  __int16 m_updatePlaneMax;
  unsigned int m_frameTag;
  unsigned int m_width;
  unsigned int m_height;
  unsigned int m_depth;
  EGxTexTarget m_target;
  EGxTexFormat m_format;
  EGxTexFormat m_dataFormat;
  CGxTexFlags m_flags;
  void *m_userArg;
  void (__fastcall *m_userFunc)(EGxTexCommand, unsigned int, unsigned int, unsigned int, unsigned int, void *, unsigned int *, const void **);
  void *m_apiSpecificData;
};

/* 751 */
struct __cppobj C4Pixel
{
  unsigned __int8 b;
  unsigned __int8 g;
  unsigned __int8 r;
  unsigned __int8 a;
};

/* 752 */
struct MipBits
{
  C4Pixel *mip[1];
};

/* 753 */
struct RECTF
{
  float left;
  float bottom;
  float right;
  float top;
};

/* 754 */
struct __cppobj NTempest::C44Matrix
{
  float a0;
  float a1;
  float a2;
  float a3;
  float b0;
  float b1;
  float b2;
  float b3;
  float c0;
  float c1;
  float c2;
  float c3;
  float d0;
  float d1;
  float d2;
  float d3;
};

/* 755 */
struct __cppobj NTempest::C4Vector
{
  float x;
  float y;
  float z;
  float w;
};

/* 756 */
struct __cppobj NTempest::C34Matrix
{
  float a0;
  float a1;
  float a2;
  float b0;
  float b1;
  float b2;
  float c0;
  float c1;
  float c2;
  float d0;
  float d1;
  float d2;
};

/* 757 */
struct __cppobj NTempest::C33Matrix
{
  float a0;
  float a1;
  float a2;
  float b0;
  float b1;
  float b2;
  float c0;
  float c1;
  float c2;
};

/* 758 */
struct __cppobj NTempest::C4Quaternion : NTempest::C4Vector
{
};

/* 759 */
struct __cppobj CDataStore
{
  CDataStore_vtbl *__vftable /*VFT*/;
  unsigned __int8 *m_data;
  unsigned int m_base;
  unsigned int m_alloc;
  unsigned int m_size;
  unsigned int m_read;
};

/* 760 */
struct /*VFT*/ CDataStore_vtbl
{
  void (__thiscall *CDataStore::InternalInitialize)(CDataStore *this, unsigned __int8 **, unsigned int *, unsigned int *);
  void (__thiscall *CDataStore::InternalDestroy)(CDataStore *this, unsigned __int8 **, unsigned int *, unsigned int *);
  int (__thiscall *CDataStore::InternalFetchRead)(CDataStore *this, unsigned int, unsigned int, unsigned __int8 **, unsigned int *, unsigned int *);
  int (__thiscall *CDataStore::InternalFetchWrite)(CDataStore *this, unsigned int, unsigned int, unsigned __int8 **, unsigned int *, unsigned int *, const char *, int);
  void (__thiscall *~CDataStore)(CDataStore *this);
  int (__thiscall *CDataStore::IsRead)(CDataStore *this);
  void (__thiscall *CDataStore::Reset)(CDataStore *this);
  void (__thiscall *CDataStore::Finalize)(CDataStore *this);
  void (__thiscall *CDataStore::GetBufferParams)(CDataStore *this, const void **, unsigned int *, unsigned int *);
  void (__thiscall *CDataStore::DetachBuffer)(CDataStore *this, void **, unsigned int *, unsigned int *);
};

/* 761 */
struct __cppobj WDataStore : CDataStore
{
  void *m_bufferObj;
};

/* 762 */
struct /*VFT*/ WDataStore_vtbl
{
  void (__thiscall *WDataStore::InternalDestroy)(WDataStore *this, unsigned __int8 **, unsigned int *, unsigned int *);
  void (__thiscall *CDataStore::InternalDestroy)(struct WDataStore *this, unsigned __int8 **, unsigned int *, unsigned int *);
  int (__thiscall *CDataStore::InternalFetchRead)(struct WDataStore *this, unsigned int, unsigned int, unsigned __int8 **, unsigned int *, unsigned int *);
  int (__thiscall *CDataStore::InternalFetchWrite)(struct WDataStore *this, unsigned int, unsigned int, unsigned __int8 **, unsigned int *, unsigned int *, const char *, int);
  void (__thiscall *~WDataStore)(struct WDataStore *this);
  int (__thiscall *CDataStore::IsRead)(struct WDataStore *this);
  void (__thiscall *CDataStore::Reset)(struct WDataStore *this);
  void (__thiscall *CDataStore::Finalize)(struct WDataStore *this);
  void (__thiscall *CDataStore::GetBufferParams)(struct WDataStore *this, const void **, unsigned int *, unsigned int *);
  void (__thiscall *CDataStore::DetachBuffer)(struct WDataStore *this, void **, unsigned int *, unsigned int *);
};

/* 763 */
struct __cppobj FrameScript_Object
{
  FrameScript_Object_vtbl *__vftable /*VFT*/;
  int lua_registered;
  int lua_objectRef;
  int m_onEvent;
};

/* 764 */
struct /*VFT*/ FrameScript_Object_vtbl
{
  void (__thiscall *~FrameScript_Object)(FrameScript_Object *this);
  const char *(__thiscall *GetName)(FrameScript_Object *this);
};

/* 765 */
union $A633657AA72876B5266E6E3F97D990F3
{
  float t;
  float miny;
};

/* 766 */
union $755A772D25EDEAD1B5929873EECC26E0
{
  float l;
  float minx;
};

/* 767 */
union $DF304B5A556F6784132F21D47655AD54
{
  float b;
  float maxy;
};

/* 768 */
union $AB20B314E0FFA4411FFC239B4CEDF670
{
  float r;
  float maxx;
};

/* 769 */
const struct __cppobj NTempest::CRect
{
  $A633657AA72876B5266E6E3F97D990F3 ___u0;
  $755A772D25EDEAD1B5929873EECC26E0 ___u1;
  $DF304B5A556F6784132F21D47655AD54 ___u2;
  $AB20B314E0FFA4411FFC239B4CEDF670 ___u3;
};

/* 780 */
struct __cppobj TSBaseArray<CFramePoint *>
{
  TSBaseArray<CFramePoint *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CFramePoint **m_data;
};

/* 785 */
struct __cppobj TSFixedArray<CFramePoint *> : TSBaseArray<CFramePoint *>
{
};

/* 786 */
struct $4C880F1F25FA2A6B09D0638A67AF933B
{
  unsigned __int32 left : 1;
  unsigned __int32 top : 1;
  unsigned __int32 right : 1;
  unsigned __int32 bottom : 1;
  unsigned __int32 centerX : 1;
  unsigned __int32 centerY : 1;
};

/* 787 */
struct __cppobj TSLink<CLayoutFrame::FRAMENODE>
{
  TSLink<CLayoutFrame::FRAMENODE> *m_prevlink;
  CLayoutFrame::FRAMENODE *m_next;
};

/* 791 */
struct __cppobj TSList<CLayoutFrame::FRAMENODE,TSGetLink<CLayoutFrame::FRAMENODE> >
{
  int m_linkoffset;
  TSLink<CLayoutFrame::FRAMENODE> m_terminator;
};

/* 792 */
struct __cppobj TSLink<CLayoutFrame>
{
  TSLink<CLayoutFrame> *m_prevlink;
  CLayoutFrame *m_next;
};

/* 770 */
struct __cppobj CLayoutFrame
{
  CLayoutFrame_vtbl *__vftable /*VFT*/;
  TSFixedArray<CFramePoint *> m_points;
  $4C880F1F25FA2A6B09D0638A67AF933B m_guard;
  TSList<CLayoutFrame::FRAMENODE,TSGetLink<CLayoutFrame::FRAMENODE> > m_resizeList;
  unsigned __int8 m_resizeCounter;
  unsigned int m_flags;
  NTempest::CRect m_rect;
  float m_width;
  float m_height;
  float m_layoutScale;
  TSLink<CLayoutFrame> resizeLink;
};

/* 779 */
struct /*VFT*/ CLayoutFrame_vtbl
{
  void (__thiscall *CLayoutFrame::OnFrameSizeChanged)(CLayoutFrame *this, const NTempest::CRect *);
  int (__thiscall *CLayoutFrame::OnFrameResize)(CLayoutFrame *this);
  void (__thiscall *CLayoutFrame::~CLayoutFrame)(CLayoutFrame *this);
  void (__thiscall *CLayoutFrame::LoadXML)(CLayoutFrame *this, const XMLNode *, CStatus *);
  CLayoutFrame *(__thiscall *CLayoutFrame::GetLayoutParent)(CLayoutFrame *this);
  void (__thiscall *CLayoutFrame::SetDeferredResize)(CLayoutFrame *this, int);
  int (__thiscall *CLayoutFrame::SetRect)(CLayoutFrame *this, NTempest::CRect *);
  int (__thiscall *CLayoutFrame::GetRect)(CLayoutFrame *this, NTempest::CRect *);
  void (__thiscall *CLayoutFrame::SetLayoutScale)(CLayoutFrame *this, float, unsigned __int8);
  float (__thiscall *CLayoutFrame::GetWidth)(CLayoutFrame *this);
  float (__thiscall *CLayoutFrame::GetHeight)(CLayoutFrame *this);
  int (__thiscall *CLayoutFrame::IsAttachmentOrigin)(CLayoutFrame *this);
  CLayoutFrame *(__thiscall *CLayoutFrame::GetLayoutFrameByName)(CLayoutFrame *this, const char *);
};

/* 781 */
struct /*VFT*/ TSBaseArray<CFramePoint *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CFramePoint *>::MemFileName)(TSBaseArray<CFramePoint *> *this);
  int (__thiscall *TSBaseArray<CFramePoint *>::MemLineNo)(TSBaseArray<CFramePoint *> *this);
};

/* 782 */
struct __cppobj CFramePoint
{
  CFramePoint_vtbl *__vftable /*VFT*/;
};

/* 788 */
struct __cppobj TSLinkedNode<CLayoutFrame::FRAMENODE>
{
  TSLink<CLayoutFrame::FRAMENODE> m_link;
};

/* 789 */
struct __cppobj __unaligned __declspec(align(4)) CLayoutFrame::FRAMENODE : TSLinkedNode<CLayoutFrame::FRAMENODE>
{
  CLayoutFrame::FRAMENODE_vtbl *__vftable /*VFT*/;
  CLayoutFrame *frame;
  unsigned int dep;
};

/* 771 */
const struct __cppobj XMLNode
{
  XMLNode *m_parent;
  XMLNode *m_child;
  char *m_name;
  char *m_body;
  int m_num_attributes;
  XMLNode::XMLAttribute *m_attributes;
  int m_offset;
  XMLNode *m_next;
};

/* 775 */
struct __cppobj TSLink<CStatus::STATUSENTRY>
{
  TSLink<CStatus::STATUSENTRY> *m_prevlink;
  CStatus::STATUSENTRY *m_next;
};

/* 777 */
struct __cppobj TSList<CStatus::STATUSENTRY,TSGetExplicitLink<CStatus::STATUSENTRY> >
{
  int m_linkoffset;
  TSLink<CStatus::STATUSENTRY> m_terminator;
};

/* 778 */
struct __cppobj TSExplicitList<CStatus::STATUSENTRY,8> : TSList<CStatus::STATUSENTRY,TSGetExplicitLink<CStatus::STATUSENTRY> >
{
};

/* 773 */
struct __cppobj CStatus
{
  CStatus_vtbl *__vftable /*VFT*/;
  TSExplicitList<CStatus::STATUSENTRY,8> statusList;
};

/* 783 */
struct /*VFT*/ CFramePoint_vtbl
{
  void (__thiscall *~CFramePoint)(CFramePoint *this);
  float (__thiscall *X)(CFramePoint *this, float);
  float (__thiscall *Y)(CFramePoint *this, float);
  CLayoutFrame *(__thiscall *CFramePoint::GetRelative)(CFramePoint *this);
};

/* 790 */
struct /*VFT*/ CLayoutFrame::FRAMENODE_vtbl
{
  void (__thiscall *~CLayoutFrame::FRAMENODE)(CLayoutFrame::FRAMENODE *this);
};

/* 772 */
struct XMLNode::XMLAttribute
{
  char *name;
  char *value;
};

/* 774 */
struct /*VFT*/ CStatus_vtbl
{
  void (__thiscall *CStatus::~CStatus)(CStatus *this);
  void (__thiscall *CStatus::Display)(CStatus *this);
  _BYTE gap8[4];
  void (*CStatus::Add)(CStatus *this, STATUS_TYPE, const char *, ...);
  void (*CStatus::Prepend)(CStatus *this, STATUS_TYPE, const char *, ...);
};

/* 776 */
struct __cppobj CStatus::STATUSENTRY
{
  char *text;
  STATUS_TYPE severity;
  TSLink<CStatus::STATUSENTRY> link;
};

/* 784 */
struct /*VFT*/ TSFixedArray<CFramePoint *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CFramePoint *>::MemFileName)(struct TSFixedArray<CFramePoint *> *this);
  int (__thiscall *TSBaseArray<CFramePoint *>::MemLineNo)(struct TSFixedArray<CFramePoint *> *this);
};

/* 1008 */
struct __cppobj TSLink<REGIONNODE>
{
  TSLink<REGIONNODE> *m_prevlink;
  REGIONNODE *m_next;
};

/* 1011 */
struct __cppobj TSList<REGIONNODE,TSGetLink<REGIONNODE> >
{
  int m_linkoffset;
  TSLink<REGIONNODE> m_terminator;
};

/* 803 */
struct __cppobj TSBaseArray<CSimpleBatchedTexture>
{
  TSBaseArray<CSimpleBatchedTexture>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CSimpleBatchedTexture *m_data;
};

/* 808 */
struct __cppobj TSFixedArray<CSimpleBatchedTexture> : TSBaseArray<CSimpleBatchedTexture>
{
};

/* 810 */
struct __cppobj TSGrowableArray<CSimpleBatchedTexture> : TSFixedArray<CSimpleBatchedTexture>
{
  unsigned int m_chunk;
};

/* 946 */
struct __cppobj TSLink<RENDERCALLBACKNODE>
{
  TSLink<RENDERCALLBACKNODE> *m_prevlink;
  RENDERCALLBACKNODE *m_next;
};

/* 949 */
struct __cppobj TSList<RENDERCALLBACKNODE,TSGetLink<RENDERCALLBACKNODE> >
{
  int m_linkoffset;
  TSLink<RENDERCALLBACKNODE> m_terminator;
};

/* 950 */
struct __cppobj TSLink<CRenderBatch>
{
  TSLink<CRenderBatch> *m_prevlink;
  CRenderBatch *m_next;
};

/* 801 */
struct __cppobj CRenderBatch
{
  CRenderBatch_vtbl *__vftable /*VFT*/;
  unsigned int m_count;
  TSGrowableArray<CSimpleBatchedTexture> m_texturelist;
  CGxStringBatch *m_stringbatch;
  TSList<RENDERCALLBACKNODE,TSGetLink<RENDERCALLBACKNODE> > m_callbacks;
  TSLink<CRenderBatch> renderLink;
};

/* 971 */
struct __cppobj TSList<CRenderBatch,TSGetExplicitLink<CRenderBatch> >
{
  int m_linkoffset;
  TSLink<CRenderBatch> m_terminator;
};

/* 972 */
struct __cppobj TSExplicitList<CRenderBatch,44> : TSList<CRenderBatch,TSGetExplicitLink<CRenderBatch> >
{
};

/* 962 */
struct __cppobj TSLink<SIMPLEFRAMENODE>
{
  TSLink<SIMPLEFRAMENODE> *m_prevlink;
  SIMPLEFRAMENODE *m_next;
};

/* 965 */
struct __cppobj TSList<SIMPLEFRAMENODE,TSGetLink<SIMPLEFRAMENODE> >
{
  int m_linkoffset;
  TSLink<SIMPLEFRAMENODE> m_terminator;
};

/* 968 */
struct __cppobj TSLink<CSimpleFrame>
{
  TSLink<CSimpleFrame> *m_prevlink;
  CSimpleFrame *m_next;
};

/* 793 */
struct __cppobj CSimpleFrame : FrameScript_Object, CLayoutFrame
{
  CSimpleTop *m_top;
  CSimpleFrame *m_parent;
  CSimpleFrame *m_tooltip;
  CSimpleTitleRegion *m_titleRegion;
  $61096CCCC3DE15D2869587F37FA69EC9 m_initialized_state;
  int m_id;
  char *m_frameName;
  unsigned int m_frameRegContext;
  unsigned int m_flags;
  int m_strata;
  int m_level;
  unsigned __int8 m_alpha;
  unsigned int m_eventmask;
  int m_shown;
  int m_visible;
  NTempest::CRect m_hitRect;
  NTempest::CRect m_hitOffset;
  int m_highlightLocked;
  unsigned int m_lookForDrag;
  int m_mouseDown;
  int m_dragging;
  MOUSEBUTTON m_dragButton;
  NTempest::C2Vector m_clickPoint;
  int m_loading;
  int m_onLoad;
  int m_onSizeChanged;
  int m_onUpdate;
  int m_onShow;
  int m_onHide;
  int m_onEnter;
  int m_onLeave;
  int m_onMouseDown;
  int m_onMouseUp;
  int m_onMouseWheel;
  int m_onDragStart;
  int m_onDragStop;
  int m_onReceiveDrag;
  int m_onChar;
  int m_onKeyDown;
  int m_onKeyUp;
  int m_drawenabled[5];
  CBackdropGenerator *m_backdrop;
  TSList<REGIONNODE,TSGetLink<REGIONNODE> > m_regions;
  TSList<REGIONNODE,TSGetLink<REGIONNODE> > m_drawlayers[5];
  unsigned int m_batchDirty;
  CRenderBatch m_batch[5];
  TSExplicitList<CRenderBatch,44> m_renderList;
  TSList<SIMPLEFRAMENODE,TSGetLink<SIMPLEFRAMENODE> > m_children;
  TSLink<CSimpleFrame> topLink;
  TSLink<CSimpleFrame> drawLink;
};

/* 977 */
struct __cppobj CSimpleTop::frame_layout
{
  int enabled;
  CSimpleFrame *frame;
  FRAMEPOINT anchor;
  NTempest::C2Vector last;
  NTempest::CRect final;
};

/* 978 */
struct __cppobj TSBaseArray<FRAMEPRIORITY *>
{
  TSBaseArray<FRAMEPRIORITY *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  FRAMEPRIORITY **m_data;
};

/* 982 */
struct __cppobj TSFixedArray<FRAMEPRIORITY *> : TSBaseArray<FRAMEPRIORITY *>
{
};

/* 984 */
struct __cppobj TSGrowableArray<FRAMEPRIORITY *> : TSFixedArray<FRAMEPRIORITY *>
{
  unsigned int m_chunk;
};

/* 985 */
struct __cppobj CSimpleSortedArray<FRAMEPRIORITY *>
{
  TSGrowableArray<FRAMEPRIORITY *> m_array;
  unsigned int m_count;
  unsigned int m_maxcount;
  unsigned int m_iterator;
};

/* 798 */
struct EVENT_DATA_MOUSE
{
  MOUSEMODE mode;
  MOUSEBUTTON button;
  unsigned int buttonState;
  unsigned int metaKeyState;
  unsigned int flags;
  float x;
  float y;
  int wheelDistance;
  unsigned int time;
};

/* 960 */
struct __cppobj CSimpleTop : CLayoutFrame
{
  HLAYER__ *m_screenLayer;
  HLAYER__ *m_cursorLayer;
  HMODEL__ *m_cursor;
  int m_cursorVisible;
  CSimpleFrame *m_mouseFocus;
  CSimpleFrame *m_mouseCapture;
  CSimpleFrame *m_keydownCapture[780];
  TSList<SIMPLEFRAMENODE,TSGetLink<SIMPLEFRAMENODE> > m_frames;
  TSList<SIMPLEFRAMENODE,TSGetLink<SIMPLEFRAMENODE> > m_destroyed;
  CFrameStrata *m_strata[6];
  CSimpleTop::frame_layout m_layout;
  CSimpleSortedArray<FRAMEPRIORITY *> m_eventqueue[4][5];
  unsigned int m_eventTime;
  int m_checkFocus;
  EVENT_DATA_MOUSE m_mousePosition;
  int (__fastcall *m_mouseButtonCallback)(const CMouseEvent *);
  int (__fastcall *m_displaySizeCallback)(const CSizeEvent *);
};

/* 990 */
struct __cppobj CSimpleTitleRegion : CLayoutFrame
{
  CLayoutFrame *m_parent;
};

/* 794 */
struct __cppobj TRefCnt
{
  TRefCnt_vtbl *__vftable /*VFT*/;
  unsigned int m_refcnt;
};

/* 1002 */
struct __cppobj TRefCntPtr<CStringRep>
{
  CStringRep *m_ptr;
};

/* 1003 */
struct __cppobj RCString : TRefCnt
{
  TRefCntPtr<CStringRep> m_rep;
};

/* 1005 */
struct __cppobj RCStaticString : RCString
{
};

/* 805 */
const struct __cppobj NTempest::CImVector
{
  unsigned __int8 b;
  unsigned __int8 g;
  unsigned __int8 r;
  unsigned __int8 a;
};

/* 1007 */
struct __cppobj CBackdropGenerator
{
  CSimpleTexture *m_backgroundTexture;
  CSimpleTexture *m_leftTexture;
  CSimpleTexture *m_rightTexture;
  CSimpleTexture *m_topTexture;
  CSimpleTexture *m_bottomTexture;
  CSimpleTexture *m_topLeftTexture;
  CSimpleTexture *m_topRightTexture;
  CSimpleTexture *m_bottomLeftTexture;
  CSimpleTexture *m_bottomRightTexture;
  RCStaticString m_background;
  RCStaticString m_border;
  unsigned int m_pieces;
  int m_tileBackground;
  int m_blendAll;
  float m_cornerSize;
  float m_backgroundSize;
  float m_topInset;
  float m_bottomInset;
  float m_leftInset;
  float m_rightInset;
  NTempest::CImVector m_color;
  NTempest::CImVector m_borderColor;
};

/* 1009 */
struct __cppobj TSLinkedNode<REGIONNODE>
{
  TSLink<REGIONNODE> m_link;
};

/* 1010 */
struct __cppobj __unaligned __declspec(align(4)) REGIONNODE : TSLinkedNode<REGIONNODE>
{
  CSimpleRegion *region;
};

/* 802 */
struct /*VFT*/ CRenderBatch_vtbl
{
  void (__thiscall *CRenderBatch::~CRenderBatch)(CRenderBatch *this);
};

/* 804 */
struct /*VFT*/ TSBaseArray<CSimpleBatchedTexture>_vtbl
{
  const char *(__thiscall *TSBaseArray<CSimpleBatchedTexture>::MemFileName)(TSBaseArray<CSimpleBatchedTexture> *this);
  int (__thiscall *TSBaseArray<CSimpleBatchedTexture>::MemLineNo)(TSBaseArray<CSimpleBatchedTexture> *this);
};

/* 806 */
struct CSimpleBatchedTexture
{
  unsigned int textureID;
  const NTempest::C3Vector *position;
  const NTempest::C2Vector *texCoord;
  EGxBlend alphamode;
  const NTempest::CImVector *GxColor;
};

/* 811 */
struct __cppobj TSLink<CGxStringBatch>
{
  TSLink<CGxStringBatch> *m_prevlink;
  CGxStringBatch *m_next;
};

/* 813 */
struct __cppobj TSLinkedNode<CGxStringBatch>
{
  TSLink<CGxStringBatch> m_link;
};

/* 814 */
struct __cppobj TSLink<BATCHEDRENDERFONTDESC>
{
  TSLink<BATCHEDRENDERFONTDESC> *m_prevlink;
  BATCHEDRENDERFONTDESC *m_next;
};

/* 937 */
struct __cppobj TSList<BATCHEDRENDERFONTDESC,TSGetExplicitLink<BATCHEDRENDERFONTDESC> >
{
  int m_linkoffset;
  TSLink<BATCHEDRENDERFONTDESC> m_terminator;
};

/* 938 */
struct __cppobj TSExplicitList<BATCHEDRENDERFONTDESC,-572662307> : TSList<BATCHEDRENDERFONTDESC,TSGetExplicitLink<BATCHEDRENDERFONTDESC> >
{
};

/* 940 */
struct __cppobj TSBaseArray<TSExplicitList<BATCHEDRENDERFONTDESC,-572662307> >
{
  TSBaseArray<TSExplicitList<BATCHEDRENDERFONTDESC,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<BATCHEDRENDERFONTDESC,-572662307> *m_data;
};

/* 943 */
struct __cppobj TSFixedArray<TSExplicitList<BATCHEDRENDERFONTDESC,-572662307> > : TSBaseArray<TSExplicitList<BATCHEDRENDERFONTDESC,-572662307> >
{
};

/* 945 */
struct __cppobj TSGrowableArray<TSExplicitList<BATCHEDRENDERFONTDESC,-572662307> > : TSFixedArray<TSExplicitList<BATCHEDRENDERFONTDESC,-572662307> >
{
  unsigned int m_chunk;
};

/* 936 */
struct __cppobj TSHashTable<BATCHEDRENDERFONTDESC,HASHKEY_PTR>
{
  TSHashTable<BATCHEDRENDERFONTDESC,HASHKEY_PTR>_vtbl *__vftable /*VFT*/;
  TSExplicitList<BATCHEDRENDERFONTDESC,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<BATCHEDRENDERFONTDESC,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 812 */
struct __cppobj CGxStringBatch : TSLinkedNode<CGxStringBatch>
{
  TSHashTable<BATCHEDRENDERFONTDESC,HASHKEY_PTR> m_fontBatch;
};

/* 947 */
struct __cppobj TSLinkedNode<RENDERCALLBACKNODE>
{
  TSLink<RENDERCALLBACKNODE> m_link;
};

/* 948 */
struct __cppobj RENDERCALLBACKNODE : TSLinkedNode<RENDERCALLBACKNODE>
{
  void (__fastcall *callback)(void *);
  void *param;
};

/* 963 */
struct __cppobj TSLinkedNode<SIMPLEFRAMENODE>
{
  TSLink<SIMPLEFRAMENODE> m_link;
};

/* 964 */
struct __cppobj __unaligned __declspec(align(4)) SIMPLEFRAMENODE : TSLinkedNode<SIMPLEFRAMENODE>
{
  CSimpleFrame *frame;
};

/* 961 */
struct __cppobj HMODEL__ : HOBJECT__
{
  int unused;
};

/* 966 */
struct __cppobj TSBaseArray<CFrameStrataNode *>
{
  TSBaseArray<CFrameStrataNode *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CFrameStrataNode **m_data;
};

/* 975 */
struct __cppobj TSFixedArray<CFrameStrataNode *> : TSBaseArray<CFrameStrataNode *>
{
};

/* 976 */
struct __cppobj CFrameStrata
{
  int batchDirty;
  int levelsDirty;
  unsigned int topLevel;
  TSFixedArray<CFrameStrataNode *> levels;
};

/* 979 */
struct /*VFT*/ TSBaseArray<FRAMEPRIORITY *>_vtbl
{
  const char *(__thiscall *TSBaseArray<FRAMEPRIORITY *>::MemFileName)(TSBaseArray<FRAMEPRIORITY *> *this);
  int (__thiscall *TSBaseArray<FRAMEPRIORITY *>::MemLineNo)(TSBaseArray<FRAMEPRIORITY *> *this);
};

/* 980 */
struct FRAMEPRIORITY
{
  CSimpleFrame *frame;
  unsigned int priority;
};

/* 796 */
struct __cppobj CEvent : TRefCnt
{
  unsigned int id;
  void *param;
};

/* 799 */
const struct __cppobj CMouseEvent : CEvent, EVENT_DATA_MOUSE
{
};

/* 986 */
struct EVENT_DATA_SIZE
{
  int w;
  int h;
};

/* 987 */
const struct __cppobj CSizeEvent : CEvent, EVENT_DATA_SIZE
{
};

/* 992 */
struct __cppobj CSimpleRegion : CLayoutFrame
{
  unsigned __int8 m_color_a;
  NTempest::CImVector m_color;
  const NTempest::CImVector *m_GxColor;
  CSimpleFrame *m_frame;
  unsigned int m_drawlayer;
  int m_visible;
};

/* 994 */
struct __cppobj CSimpleTexture : FrameScript_Object, CSimpleRegion
{
  char *m_name;
  unsigned int m_registryContext;
  HTEXTURE__ *m_texture;
  EGxBlend m_alphamode;
  NTempest::C3Vector m_position[4];
  NTempest::C2Vector m_texCoord[4];
  int m_TexCoordModifiesPosition;
};

/* 795 */
struct /*VFT*/ TRefCnt_vtbl
{
  void (__thiscall *TRefCnt::DeleteSelf)(TRefCnt *this);
  void (__thiscall *~TRefCnt)(TRefCnt *this);
};

/* 997 */
struct __cppobj TSLink<CStringRep>
{
  TSLink<CStringRep> *m_prevlink;
  CStringRep *m_next;
};

/* 999 */
struct __cppobj HASHKEY_STR
{
  char *m_str;
};

/* 1000 */
struct __cppobj TSHashObject<CStringRep,HASHKEY_STR>
{
  unsigned int m_hashval;
  TSLink<CStringRep> m_linktoslot;
  TSLink<CStringRep> m_linktofull;
  HASHKEY_STR m_key;
};

/* 998 */
struct __cppobj CStringRep : TRefCnt, TSHashObject<CStringRep,HASHKEY_STR>
{
};

/* 939 */
struct /*VFT*/ TSHashTable<BATCHEDRENDERFONTDESC,HASHKEY_PTR>_vtbl
{
  void (__thiscall *TSHashTable<BATCHEDRENDERFONTDESC,HASHKEY_PTR>::InternalDelete)(TSHashTable<BATCHEDRENDERFONTDESC,HASHKEY_PTR> *this, BATCHEDRENDERFONTDESC *);
  BATCHEDRENDERFONTDESC *(__thiscall *TSHashTable<BATCHEDRENDERFONTDESC,HASHKEY_PTR>::InternalNew)(TSHashTable<BATCHEDRENDERFONTDESC,HASHKEY_PTR> *this, TSExplicitList<BATCHEDRENDERFONTDESC,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<BATCHEDRENDERFONTDESC,HASHKEY_PTR>)(TSHashTable<BATCHEDRENDERFONTDESC,HASHKEY_PTR> *this);
  void (__thiscall *TSHashTable<BATCHEDRENDERFONTDESC,HASHKEY_PTR>::Destroy)(TSHashTable<BATCHEDRENDERFONTDESC,HASHKEY_PTR> *this);
};

/* 816 */
struct __cppobj HASHKEY_PTR
{
  void *m_key;
};

/* 817 */
struct __cppobj TSHashObject<BATCHEDRENDERFONTDESC,HASHKEY_PTR>
{
  unsigned int m_hashval;
  TSLink<BATCHEDRENDERFONTDESC> m_linktoslot;
  TSLink<BATCHEDRENDERFONTDESC> m_linktofull;
  HASHKEY_PTR m_key;
};

/* 821 */
struct __cppobj TSLink<CGxString>
{
  TSLink<CGxString> *m_prevlink;
  CGxString *m_next;
};

/* 883 */
struct __cppobj TSList<CGxString,TSGetExplicitLink<CGxString> >
{
  int m_linkoffset;
  TSLink<CGxString> m_terminator;
};

/* 935 */
struct __cppobj TSExplicitList<CGxString,16> : TSList<CGxString,TSGetExplicitLink<CGxString> >
{
};

/* 815 */
struct __cppobj BATCHEDRENDERFONTDESC : TSHashObject<BATCHEDRENDERFONTDESC,HASHKEY_PTR>
{
  CGxFont *face;
  TSExplicitList<CGxString,16> m_strings;
};

/* 941 */
struct /*VFT*/ TSBaseArray<TSExplicitList<BATCHEDRENDERFONTDESC,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<BATCHEDRENDERFONTDESC,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<BATCHEDRENDERFONTDESC,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<BATCHEDRENDERFONTDESC,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<BATCHEDRENDERFONTDESC,-572662307> > *this);
};

/* 967 */
struct /*VFT*/ TSBaseArray<CFrameStrataNode *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CFrameStrataNode *>::MemFileName)(TSBaseArray<CFrameStrataNode *> *this);
  int (__thiscall *TSBaseArray<CFrameStrataNode *>::MemLineNo)(TSBaseArray<CFrameStrataNode *> *this);
};

/* 969 */
struct __cppobj TSList<CSimpleFrame,TSGetExplicitLink<CSimpleFrame> >
{
  int m_linkoffset;
  TSLink<CSimpleFrame> m_terminator;
};

/* 970 */
struct __cppobj TSExplicitList<CSimpleFrame,668> : TSList<CSimpleFrame,TSGetExplicitLink<CSimpleFrame> >
{
};

/* 973 */
struct __cppobj CFrameStrataNode
{
  TSExplicitList<CSimpleFrame,668> frames;
  CRenderBatch batches[5];
  unsigned int batchDirty;
  TSExplicitList<CRenderBatch,44> renderList;
};

/* 995 */
struct __cppobj HTEXTURE__ : HOBJECT__
{
  int unused;
};

/* 818 */
struct __cppobj TSLink<CGxFont>
{
  TSLink<CGxFont> *m_prevlink;
  CGxFont *m_next;
};

/* 820 */
struct __cppobj TSLinkedNode<CGxFont>
{
  TSLink<CGxFont> m_link;
};

/* 884 */
struct __cppobj TSExplicitList<CGxString,8> : TSList<CGxString,TSGetExplicitLink<CGxString> >
{
};

/* 885 */
struct __cppobj TSLink<GLYPHBITMAPDATA>
{
  TSLink<GLYPHBITMAPDATA> *m_prevlink;
  GLYPHBITMAPDATA *m_next;
};

/* 890 */
struct __cppobj TSList<GLYPHBITMAPDATA,TSGetExplicitLink<GLYPHBITMAPDATA> >
{
  int m_linkoffset;
  TSLink<GLYPHBITMAPDATA> m_terminator;
};

/* 891 */
struct __cppobj TSExplicitList<GLYPHBITMAPDATA,-572662307> : TSList<GLYPHBITMAPDATA,TSGetExplicitLink<GLYPHBITMAPDATA> >
{
};

/* 893 */
struct __cppobj TSBaseArray<TSExplicitList<GLYPHBITMAPDATA,-572662307> >
{
  TSBaseArray<TSExplicitList<GLYPHBITMAPDATA,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<GLYPHBITMAPDATA,-572662307> *m_data;
};

/* 896 */
struct __cppobj TSFixedArray<TSExplicitList<GLYPHBITMAPDATA,-572662307> > : TSBaseArray<TSExplicitList<GLYPHBITMAPDATA,-572662307> >
{
};

/* 898 */
struct __cppobj TSGrowableArray<TSExplicitList<GLYPHBITMAPDATA,-572662307> > : TSFixedArray<TSExplicitList<GLYPHBITMAPDATA,-572662307> >
{
  unsigned int m_chunk;
};

/* 889 */
struct __cppobj TSHashTable<GLYPHBITMAPDATA,HASHKEY_NONE>
{
  TSHashTable<GLYPHBITMAPDATA,HASHKEY_NONE>_vtbl *__vftable /*VFT*/;
  TSExplicitList<GLYPHBITMAPDATA,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<GLYPHBITMAPDATA,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 899 */
struct __cppobj TSLink<CHARCODEDESC>
{
  TSLink<CHARCODEDESC> *m_prevlink;
  CHARCODEDESC *m_next;
};

/* 903 */
struct __cppobj TSList<CHARCODEDESC,TSGetExplicitLink<CHARCODEDESC> >
{
  int m_linkoffset;
  TSLink<CHARCODEDESC> m_terminator;
};

/* 904 */
struct __cppobj TSExplicitList<CHARCODEDESC,-572662307> : TSList<CHARCODEDESC,TSGetExplicitLink<CHARCODEDESC> >
{
};

/* 906 */
struct __cppobj TSBaseArray<TSExplicitList<CHARCODEDESC,-572662307> >
{
  TSBaseArray<TSExplicitList<CHARCODEDESC,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<CHARCODEDESC,-572662307> *m_data;
};

/* 909 */
struct __cppobj TSFixedArray<TSExplicitList<CHARCODEDESC,-572662307> > : TSBaseArray<TSExplicitList<CHARCODEDESC,-572662307> >
{
};

/* 911 */
struct __cppobj TSGrowableArray<TSExplicitList<CHARCODEDESC,-572662307> > : TSFixedArray<TSExplicitList<CHARCODEDESC,-572662307> >
{
  unsigned int m_chunk;
};

/* 902 */
struct __cppobj TSHashTable<CHARCODEDESC,HASHKEY_NONE>
{
  TSHashTable<CHARCODEDESC,HASHKEY_NONE>_vtbl *__vftable /*VFT*/;
  TSExplicitList<CHARCODEDESC,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<CHARCODEDESC,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 912 */
struct __cppobj TSLink<KERNNODE>
{
  TSLink<KERNNODE> *m_prevlink;
  KERNNODE *m_next;
};

/* 917 */
struct __cppobj TSList<KERNNODE,TSGetExplicitLink<KERNNODE> >
{
  int m_linkoffset;
  TSLink<KERNNODE> m_terminator;
};

/* 918 */
struct __cppobj TSExplicitList<KERNNODE,-572662307> : TSList<KERNNODE,TSGetExplicitLink<KERNNODE> >
{
};

/* 920 */
struct __cppobj TSBaseArray<TSExplicitList<KERNNODE,-572662307> >
{
  TSBaseArray<TSExplicitList<KERNNODE,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<KERNNODE,-572662307> *m_data;
};

/* 923 */
struct __cppobj TSFixedArray<TSExplicitList<KERNNODE,-572662307> > : TSBaseArray<TSExplicitList<KERNNODE,-572662307> >
{
};

/* 925 */
struct __cppobj TSGrowableArray<TSExplicitList<KERNNODE,-572662307> > : TSFixedArray<TSExplicitList<KERNNODE,-572662307> >
{
  unsigned int m_chunk;
};

/* 916 */
struct __cppobj TSHashTable<KERNNODE,KERNINGHASHKEY>
{
  TSHashTable<KERNNODE,KERNINGHASHKEY>_vtbl *__vftable /*VFT*/;
  TSExplicitList<KERNNODE,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<KERNNODE,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 926 */
struct __cppobj TSExplicitList<CHARCODEDESC,32> : TSList<CHARCODEDESC,TSGetExplicitLink<CHARCODEDESC> >
{
};

/* 928 */
struct __cppobj TSBaseArray<TEXTURECACHEROW>
{
  TSBaseArray<TEXTURECACHEROW>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TEXTURECACHEROW *m_data;
};

/* 933 */
struct __cppobj TSFixedArray<TEXTURECACHEROW> : TSBaseArray<TEXTURECACHEROW>
{
};

/* 934 */
struct __cppobj TEXTURECACHE
{
  int m_anyDirtyGlyphs;
  void *m_data;
  CGxTex *m_texture;
  CGxFont *m_theFace;
  unsigned int m_page;
  TSFixedArray<TEXTURECACHEROW> m_textureRows;
};

/* 819 */
struct __cppobj CGxFont : TSLinkedNode<CGxFont>
{
  TSExplicitList<CGxString,8> m_strings;
  TSLink<CGxFont> m_batchedRenderLink;
  TSHashTable<GLYPHBITMAPDATA,HASHKEY_NONE> m_glyphBitmapData;
  TSHashTable<CHARCODEDESC,HASHKEY_NONE> m_activeCharacters;
  TSHashTable<KERNNODE,KERNINGHASHKEY> m_kernInfo;
  TSExplicitList<CHARCODEDESC,32> m_activeCharacterCache;
  HFACE__ *m_faceHandle;
  unsigned int m_pixelSize;
  unsigned int m_rasterPixelSize;
  char m_fontName[260];
  unsigned int m_cellHeight;
  unsigned int m_baseline;
  unsigned int m_flags;
  float m_requestedFontHeight;
  float m_currentFontHeight;
  float m_pixelsPerUnit;
  TEXTURECACHE m_textureCache[8];
};

/* 822 */
struct __cppobj TSLinkedNode<CGxString>
{
  TSLink<CGxString> m_link;
};

/* 823 */
struct __cppobj TSBaseArray<IGXUTEXTLINE *>
{
  TSBaseArray<IGXUTEXTLINE *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  IGXUTEXTLINE **m_data;
};

/* 865 */
struct __cppobj TSFixedArray<IGXUTEXTLINE *> : TSBaseArray<IGXUTEXTLINE *>
{
};

/* 867 */
struct __cppobj TSGrowableArray<IGXUTEXTLINE *> : TSFixedArray<IGXUTEXTLINE *>
{
  unsigned int m_chunk;
};

/* 868 */
struct __cppobj IGXUTEXTBLOCK
{
  float m_offsetY;
  TSGrowableArray<IGXUTEXTLINE *> m_lines;
};

/* 869 */
struct __cppobj TSBaseArray<GXUFONTHYPERLINKINFO>
{
  TSBaseArray<GXUFONTHYPERLINKINFO>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  GXUFONTHYPERLINKINFO *m_data;
};

/* 873 */
struct __cppobj TSFixedArray<GXUFONTHYPERLINKINFO> : TSBaseArray<GXUFONTHYPERLINKINFO>
{
};

/* 875 */
struct __cppobj TSGrowableArray<GXUFONTHYPERLINKINFO> : TSFixedArray<GXUFONTHYPERLINKINFO>
{
  unsigned int m_chunk;
};

/* 876 */
struct __cppobj TSBaseArray<NTempest::CImVector *>
{
  TSBaseArray<NTempest::CImVector *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  NTempest::CImVector **m_data;
};

/* 879 */
struct __cppobj TSFixedArray<NTempest::CImVector *> : TSBaseArray<NTempest::CImVector *>
{
};

/* 881 */
struct __cppobj TSGrowableArray<NTempest::CImVector *> : TSFixedArray<NTempest::CImVector *>
{
  unsigned int m_chunk;
};

/* 882 */
struct __cppobj __unaligned __declspec(align(4)) CGxString : TSLinkedNode<CGxString>
{
  TSLink<CGxString> m_fontStringLink;
  TSLink<CGxString> m_batchedStringLink;
  float m_requestedFontHeight;
  float m_currentFontHeight;
  NTempest::C3Vector m_position;
  NTempest::CImVector m_fontColor;
  NTempest::CImVector m_shadowColor;
  NTempest::C2Vector m_shadowOffset;
  float m_blockWidth;
  float m_blockHeight;
  CGxFont *m_currentFace;
  IGXUTEXTBLOCK m_textBlock;
  char *m_text;
  unsigned int m_textLen;
  EGxFontVJusts m_vertJust;
  EGxFontHJusts m_horzJust;
  float m_spacing;
  unsigned int m_flags;
  NTempest::C2Vector m_viewportOffset;
  unsigned int m_texturePagesUsed;
  int m_textureEvicted;
  float m_stringHeight;
  float m_savedWidth;
  TSGrowableArray<GXUFONTHYPERLINKINFO> m_hyperlinkInfo;
  TSGrowableArray<NTempest::CImVector *> m_colorGradients;
  TSGrowableArray<NTempest::CImVector *> m_colorGradientShadows;
  int m_lastGradientStart;
  int m_lastGradientLength;
};

/* 892 */
struct /*VFT*/ TSHashTable<GLYPHBITMAPDATA,HASHKEY_NONE>_vtbl
{
  void (__thiscall *TSHashTable<GLYPHBITMAPDATA,HASHKEY_NONE>::InternalDelete)(TSHashTable<GLYPHBITMAPDATA,HASHKEY_NONE> *this, GLYPHBITMAPDATA *);
  GLYPHBITMAPDATA *(__thiscall *TSHashTable<GLYPHBITMAPDATA,HASHKEY_NONE>::InternalNew)(TSHashTable<GLYPHBITMAPDATA,HASHKEY_NONE> *this, TSExplicitList<GLYPHBITMAPDATA,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<GLYPHBITMAPDATA,HASHKEY_NONE>)(TSHashTable<GLYPHBITMAPDATA,HASHKEY_NONE> *this);
  void (__thiscall *TSHashTable<GLYPHBITMAPDATA,HASHKEY_NONE>::Destroy)(TSHashTable<GLYPHBITMAPDATA,HASHKEY_NONE> *this);
};

/* 887 */
struct __cppobj HASHKEY_NONE
{
};

/* 888 */
struct __cppobj __declspec(align(4)) TSHashObject<GLYPHBITMAPDATA,HASHKEY_NONE>
{
  unsigned int m_hashval;
  TSLink<GLYPHBITMAPDATA> m_linktoslot;
  TSLink<GLYPHBITMAPDATA> m_linktofull;
  HASHKEY_NONE m_key;
};

/* 886 */
struct __cppobj GLYPHBITMAPDATA : TSHashObject<GLYPHBITMAPDATA,HASHKEY_NONE>
{
  unsigned int m_code;
  void *m_data;
  unsigned int m_dataSize;
  int m_dirty;
  unsigned int m_glyphWidth;
  unsigned int m_glyphHeight;
  unsigned int m_glyphCellWidth;
  int m_glyphAdvance;
  float m_glyphBearing;
  unsigned int m_glyphPitch;
  int m_yOffset;
  int m_yStart;
  NTempest::CRect m_textureCoords;
  int m_textureValid;
};

/* 894 */
struct /*VFT*/ TSBaseArray<TSExplicitList<GLYPHBITMAPDATA,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<GLYPHBITMAPDATA,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<GLYPHBITMAPDATA,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<GLYPHBITMAPDATA,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<GLYPHBITMAPDATA,-572662307> > *this);
};

/* 905 */
struct /*VFT*/ TSHashTable<CHARCODEDESC,HASHKEY_NONE>_vtbl
{
  void (__thiscall *TSHashTable<CHARCODEDESC,HASHKEY_NONE>::InternalDelete)(TSHashTable<CHARCODEDESC,HASHKEY_NONE> *this, CHARCODEDESC *);
  CHARCODEDESC *(__thiscall *TSHashTable<CHARCODEDESC,HASHKEY_NONE>::InternalNew)(TSHashTable<CHARCODEDESC,HASHKEY_NONE> *this, TSExplicitList<CHARCODEDESC,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<CHARCODEDESC,HASHKEY_NONE>)(TSHashTable<CHARCODEDESC,HASHKEY_NONE> *this);
  void (__thiscall *TSHashTable<CHARCODEDESC,HASHKEY_NONE>::Destroy)(TSHashTable<CHARCODEDESC,HASHKEY_NONE> *this);
};

/* 901 */
struct __cppobj __declspec(align(4)) TSHashObject<CHARCODEDESC,HASHKEY_NONE>
{
  unsigned int m_hashval;
  TSLink<CHARCODEDESC> m_linktoslot;
  TSLink<CHARCODEDESC> m_linktofull;
  HASHKEY_NONE m_key;
};

/* 900 */
struct __cppobj CHARCODEDESC : TSHashObject<CHARCODEDESC,HASHKEY_NONE>
{
  TSLink<CHARCODEDESC> textureRowLink;
  TSLink<CHARCODEDESC> fontGlyphLink;
  int dataValid;
  unsigned int textureNumber;
  unsigned int rowNumber;
  unsigned int glyphStartPixel;
  unsigned int glyphEndPixel;
  GLYPHBITMAPDATA *bitmapData;
};

/* 907 */
struct /*VFT*/ TSBaseArray<TSExplicitList<CHARCODEDESC,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CHARCODEDESC,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<CHARCODEDESC,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CHARCODEDESC,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<CHARCODEDESC,-572662307> > *this);
};

/* 919 */
struct /*VFT*/ TSHashTable<KERNNODE,KERNINGHASHKEY>_vtbl
{
  void (__thiscall *TSHashTable<KERNNODE,KERNINGHASHKEY>::InternalDelete)(TSHashTable<KERNNODE,KERNINGHASHKEY> *this, KERNNODE *);
  KERNNODE *(__thiscall *TSHashTable<KERNNODE,KERNINGHASHKEY>::InternalNew)(TSHashTable<KERNNODE,KERNINGHASHKEY> *this, TSExplicitList<KERNNODE,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<KERNNODE,KERNINGHASHKEY>)(TSHashTable<KERNNODE,KERNINGHASHKEY> *this);
  void (__thiscall *TSHashTable<KERNNODE,KERNINGHASHKEY>::Destroy)(TSHashTable<KERNNODE,KERNINGHASHKEY> *this);
};

/* 914 */
struct __cppobj KERNINGHASHKEY
{
  unsigned int code;
};

/* 915 */
struct __cppobj TSHashObject<KERNNODE,KERNINGHASHKEY>
{
  unsigned int m_hashval;
  TSLink<KERNNODE> m_linktoslot;
  TSLink<KERNNODE> m_linktofull;
  KERNINGHASHKEY m_key;
};

/* 913 */
struct __cppobj KERNNODE : TSHashObject<KERNNODE,KERNINGHASHKEY>
{
  unsigned int flags;
  float proporportionalSpacing;
  float fixedWidthSpacing;
};

/* 921 */
struct /*VFT*/ TSBaseArray<TSExplicitList<KERNNODE,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<KERNNODE,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<KERNNODE,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<KERNNODE,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<KERNNODE,-572662307> > *this);
};

/* 927 */
struct __cppobj HFACE__ : HOBJECT__
{
  int unused;
};

/* 929 */
struct /*VFT*/ TSBaseArray<TEXTURECACHEROW>_vtbl
{
  const char *(__thiscall *TSBaseArray<TEXTURECACHEROW>::MemFileName)(TSBaseArray<TEXTURECACHEROW> *this);
  int (__thiscall *TSBaseArray<TEXTURECACHEROW>::MemLineNo)(TSBaseArray<TEXTURECACHEROW> *this);
};

/* 930 */
struct __cppobj TSExplicitList<CHARCODEDESC,24> : TSList<CHARCODEDESC,TSGetExplicitLink<CHARCODEDESC> >
{
};

/* 931 */
struct __cppobj TEXTURECACHEROW
{
  unsigned int widestFreeSlot;
  TSExplicitList<CHARCODEDESC,24> glyphList;
};

/* 824 */
struct /*VFT*/ TSBaseArray<IGXUTEXTLINE *>_vtbl
{
  const char *(__thiscall *TSBaseArray<IGXUTEXTLINE *>::MemFileName)(TSBaseArray<IGXUTEXTLINE *> *this);
  int (__thiscall *TSBaseArray<IGXUTEXTLINE *>::MemLineNo)(TSBaseArray<IGXUTEXTLINE *> *this);
};

/* 825 */
struct __cppobj TSLink<IGXUTEXTLINE>
{
  TSLink<IGXUTEXTLINE> *m_prevlink;
  IGXUTEXTLINE *m_next;
};

/* 827 */
struct __cppobj TSLinkedNode<IGXUTEXTLINE>
{
  TSLink<IGXUTEXTLINE> m_link;
};

/* 828 */
struct __cppobj TSBaseArray<TEXTLINETEXTURE *>
{
  TSBaseArray<TEXTLINETEXTURE *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TEXTLINETEXTURE **m_data;
};

/* 861 */
struct __cppobj TSFixedArray<TEXTLINETEXTURE *> : TSBaseArray<TEXTLINETEXTURE *>
{
};

/* 863 */
struct __cppobj TSGrowableArray<TEXTLINETEXTURE *> : TSFixedArray<TEXTLINETEXTURE *>
{
  unsigned int m_chunk;
};

/* 826 */
struct __cppobj IGXUTEXTLINE : TSLinkedNode<IGXUTEXTLINE>
{
  TSGrowableArray<TEXTLINETEXTURE *> m_texturePages;
};

/* 870 */
struct /*VFT*/ TSBaseArray<GXUFONTHYPERLINKINFO>_vtbl
{
  const char *(__thiscall *TSBaseArray<GXUFONTHYPERLINKINFO>::MemFileName)(TSBaseArray<GXUFONTHYPERLINKINFO> *this);
  int (__thiscall *TSBaseArray<GXUFONTHYPERLINKINFO>::MemLineNo)(TSBaseArray<GXUFONTHYPERLINKINFO> *this);
};

/* 871 */
struct __cppobj GXUFONTHYPERLINKINFO
{
  NTempest::CRect extent;
  const char *link;
  unsigned int linkLength;
};

/* 877 */
struct /*VFT*/ TSBaseArray<NTempest::CImVector *>_vtbl
{
  const char *(__thiscall *TSBaseArray<NTempest::CImVector *>::MemFileName)(TSBaseArray<NTempest::CImVector *> *this);
  int (__thiscall *TSBaseArray<NTempest::CImVector *>::MemLineNo)(TSBaseArray<NTempest::CImVector *> *this);
};

/* 829 */
struct /*VFT*/ TSBaseArray<TEXTLINETEXTURE *>_vtbl
{
  const char *(__thiscall *TSBaseArray<TEXTLINETEXTURE *>::MemFileName)(TSBaseArray<TEXTLINETEXTURE *> *this);
  int (__thiscall *TSBaseArray<TEXTLINETEXTURE *>::MemLineNo)(TSBaseArray<TEXTLINETEXTURE *> *this);
};

/* 830 */
struct __cppobj TSLink<TEXTLINETEXTURE>
{
  TSLink<TEXTLINETEXTURE> *m_prevlink;
  TEXTLINETEXTURE *m_next;
};

/* 832 */
struct __cppobj TSLinkedNode<TEXTLINETEXTURE>
{
  TSLink<TEXTLINETEXTURE> m_link;
};

/* 833 */
struct __cppobj TSBaseArray<VERT>
{
  TSBaseArray<VERT>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  VERT *m_data;
};

/* 837 */
struct __cppobj TSFixedArray<VERT> : TSBaseArray<VERT>
{
};

/* 839 */
struct __cppobj TSGrowableArray<VERT> : TSFixedArray<VERT>
{
  unsigned int m_chunk;
};

/* 840 */
struct __cppobj TSGrowableArray_<VERT,1199076678,58> : TSGrowableArray<VERT>
{
};

/* 842 */
struct __cppobj TSBaseArray<NTempest::CImVector>
{
  TSBaseArray<NTempest::CImVector>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  NTempest::CImVector *m_data;
};

/* 845 */
struct __cppobj TSFixedArray<NTempest::CImVector> : TSBaseArray<NTempest::CImVector>
{
};

/* 847 */
struct __cppobj TSGrowableArray<NTempest::CImVector> : TSFixedArray<NTempest::CImVector>
{
  unsigned int m_chunk;
};

/* 848 */
struct __cppobj TSGrowableArray_<NTempest::CImVector,1199076678,59> : TSGrowableArray<NTempest::CImVector>
{
};

/* 850 */
struct __cppobj TSGrowableArray_<NTempest::CImVector,1199076678,60> : TSGrowableArray<NTempest::CImVector>
{
};

/* 852 */
struct __cppobj TSBaseArray<unsigned short>
{
  TSBaseArray<unsigned short>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  unsigned __int16 *m_data;
};

/* 855 */
struct __cppobj TSFixedArray<unsigned short> : TSBaseArray<unsigned short>
{
};

/* 857 */
struct __cppobj TSGrowableArray<unsigned short> : TSFixedArray<unsigned short>
{
  unsigned int m_chunk;
};

/* 858 */
struct __cppobj TSGrowableArray_<unsigned short,1199076678,61> : TSGrowableArray<unsigned short>
{
};

/* 831 */
struct __cppobj TEXTLINETEXTURE : TSLinkedNode<TEXTLINETEXTURE>
{
  TSGrowableArray_<VERT,1199076678,58> m_vert;
  TSGrowableArray_<NTempest::CImVector,1199076678,59> m_shadowColors;
  TSGrowableArray_<NTempest::CImVector,1199076678,60> m_colors;
  TSGrowableArray_<unsigned short,1199076678,61> m_vertIndices;
};

/* 834 */
struct /*VFT*/ TSBaseArray<VERT>_vtbl
{
  const char *(__thiscall *TSBaseArray<VERT>::MemFileName)(TSBaseArray<VERT> *this);
  int (__thiscall *TSBaseArray<VERT>::MemLineNo)(TSBaseArray<VERT> *this);
};

/* 835 */
struct __cppobj VERT
{
  NTempest::C3Vector vc;
  NTempest::C2Vector tc;
};

/* 843 */
struct /*VFT*/ TSBaseArray<NTempest::CImVector>_vtbl
{
  const char *(__thiscall *TSBaseArray<NTempest::CImVector>::MemFileName)(TSBaseArray<NTempest::CImVector> *this);
  int (__thiscall *TSBaseArray<NTempest::CImVector>::MemLineNo)(TSBaseArray<NTempest::CImVector> *this);
};

/* 853 */
struct /*VFT*/ TSBaseArray<unsigned short>_vtbl
{
  const char *(__thiscall *TSBaseArray<unsigned short>::MemFileName)(TSBaseArray<unsigned short> *this);
  int (__thiscall *TSBaseArray<unsigned short>::MemLineNo)(TSBaseArray<unsigned short> *this);
};

/* 797 */
struct /*VFT*/ CEvent_vtbl
{
  void (__thiscall *~CEvent)(CEvent *this);
  void (__thiscall *~CEvent)(struct CEvent *this);
};

/* 800 */
struct /*VFT*/ CMouseEvent_vtbl
{
  void (__thiscall *~CMouseEvent)(CMouseEvent *this);
  void (__thiscall *~CMouseEvent)(struct CMouseEvent *this);
};

/* 807 */
struct /*VFT*/ TSFixedArray<CSimpleBatchedTexture>_vtbl
{
  const char *(__thiscall *TSBaseArray<CSimpleBatchedTexture>::MemFileName)(struct TSFixedArray<CSimpleBatchedTexture> *this);
  int (__thiscall *TSBaseArray<CSimpleBatchedTexture>::MemLineNo)(struct TSFixedArray<CSimpleBatchedTexture> *this);
};

/* 809 */
struct /*VFT*/ TSGrowableArray<CSimpleBatchedTexture>_vtbl
{
  const char *(__thiscall *TSBaseArray<CSimpleBatchedTexture>::MemFileName)(struct TSGrowableArray<CSimpleBatchedTexture> *this);
  int (__thiscall *TSBaseArray<CSimpleBatchedTexture>::MemLineNo)(struct TSGrowableArray<CSimpleBatchedTexture> *this);
};

/* 836 */
struct /*VFT*/ TSFixedArray<VERT>_vtbl
{
  const char *(__thiscall *TSBaseArray<VERT>::MemFileName)(struct TSFixedArray<VERT> *this);
  int (__thiscall *TSBaseArray<VERT>::MemLineNo)(struct TSFixedArray<VERT> *this);
};

/* 838 */
struct /*VFT*/ TSGrowableArray<VERT>_vtbl
{
  const char *(__thiscall *TSBaseArray<VERT>::MemFileName)(struct TSGrowableArray<VERT> *this);
  int (__thiscall *TSBaseArray<VERT>::MemLineNo)(struct TSGrowableArray<VERT> *this);
};

/* 841 */
struct /*VFT*/ TSGrowableArray_<VERT,1199076678,58>_vtbl
{
  int (__thiscall *TSGrowableArray_<VERT,1199076678,58>::MemLineNo)(TSGrowableArray_<VERT,1199076678,58> *this);
  int (__thiscall *TSBaseArray<VERT>::MemLineNo)(struct TSGrowableArray_<VERT,1199076678,58> *this);
};

/* 844 */
struct /*VFT*/ TSFixedArray<NTempest::CImVector>_vtbl
{
  const char *(__thiscall *TSBaseArray<NTempest::CImVector>::MemFileName)(struct TSFixedArray<NTempest::CImVector> *this);
  int (__thiscall *TSBaseArray<NTempest::CImVector>::MemLineNo)(struct TSFixedArray<NTempest::CImVector> *this);
};

/* 846 */
struct /*VFT*/ TSGrowableArray<NTempest::CImVector>_vtbl
{
  const char *(__thiscall *TSBaseArray<NTempest::CImVector>::MemFileName)(struct TSGrowableArray<NTempest::CImVector> *this);
  int (__thiscall *TSBaseArray<NTempest::CImVector>::MemLineNo)(struct TSGrowableArray<NTempest::CImVector> *this);
};

/* 849 */
struct /*VFT*/ TSGrowableArray_<NTempest::CImVector,1199076678,59>_vtbl
{
  int (__thiscall *TSGrowableArray_<NTempest::CImVector,1199076678,59>::MemLineNo)(TSGrowableArray_<NTempest::CImVector,1199076678,59> *this);
  int (__thiscall *TSBaseArray<NTempest::CImVector>::MemLineNo)(struct TSGrowableArray_<NTempest::CImVector,1199076678,59> *this);
};

/* 851 */
struct /*VFT*/ TSGrowableArray_<NTempest::CImVector,1199076678,60>_vtbl
{
  int (__thiscall *TSGrowableArray_<NTempest::CImVector,1199076678,60>::MemLineNo)(TSGrowableArray_<NTempest::CImVector,1199076678,60> *this);
  int (__thiscall *TSBaseArray<NTempest::CImVector>::MemLineNo)(struct TSGrowableArray_<NTempest::CImVector,1199076678,60> *this);
};

/* 854 */
struct /*VFT*/ TSFixedArray<unsigned short>_vtbl
{
  const char *(__thiscall *TSBaseArray<unsigned short>::MemFileName)(struct TSFixedArray<unsigned short> *this);
  int (__thiscall *TSBaseArray<unsigned short>::MemLineNo)(struct TSFixedArray<unsigned short> *this);
};

/* 856 */
struct /*VFT*/ TSGrowableArray<unsigned short>_vtbl
{
  const char *(__thiscall *TSBaseArray<unsigned short>::MemFileName)(struct TSGrowableArray<unsigned short> *this);
  int (__thiscall *TSBaseArray<unsigned short>::MemLineNo)(struct TSGrowableArray<unsigned short> *this);
};

/* 859 */
struct /*VFT*/ TSGrowableArray_<unsigned short,1199076678,61>_vtbl
{
  int (__thiscall *TSGrowableArray_<unsigned short,1199076678,61>::MemLineNo)(TSGrowableArray_<unsigned short,1199076678,61> *this);
  int (__thiscall *TSBaseArray<unsigned short>::MemLineNo)(struct TSGrowableArray_<unsigned short,1199076678,61> *this);
};

/* 860 */
struct /*VFT*/ TSFixedArray<TEXTLINETEXTURE *>_vtbl
{
  const char *(__thiscall *TSBaseArray<TEXTLINETEXTURE *>::MemFileName)(struct TSFixedArray<TEXTLINETEXTURE *> *this);
  int (__thiscall *TSBaseArray<TEXTLINETEXTURE *>::MemLineNo)(struct TSFixedArray<TEXTLINETEXTURE *> *this);
};

/* 862 */
struct /*VFT*/ TSGrowableArray<TEXTLINETEXTURE *>_vtbl
{
  const char *(__thiscall *TSBaseArray<TEXTLINETEXTURE *>::MemFileName)(struct TSGrowableArray<TEXTLINETEXTURE *> *this);
  int (__thiscall *TSBaseArray<TEXTLINETEXTURE *>::MemLineNo)(struct TSGrowableArray<TEXTLINETEXTURE *> *this);
};

/* 864 */
struct /*VFT*/ TSFixedArray<IGXUTEXTLINE *>_vtbl
{
  const char *(__thiscall *TSBaseArray<IGXUTEXTLINE *>::MemFileName)(struct TSFixedArray<IGXUTEXTLINE *> *this);
  int (__thiscall *TSBaseArray<IGXUTEXTLINE *>::MemLineNo)(struct TSFixedArray<IGXUTEXTLINE *> *this);
};

/* 866 */
struct /*VFT*/ TSGrowableArray<IGXUTEXTLINE *>_vtbl
{
  const char *(__thiscall *TSBaseArray<IGXUTEXTLINE *>::MemFileName)(struct TSGrowableArray<IGXUTEXTLINE *> *this);
  int (__thiscall *TSBaseArray<IGXUTEXTLINE *>::MemLineNo)(struct TSGrowableArray<IGXUTEXTLINE *> *this);
};

/* 872 */
struct /*VFT*/ TSFixedArray<GXUFONTHYPERLINKINFO>_vtbl
{
  const char *(__thiscall *TSBaseArray<GXUFONTHYPERLINKINFO>::MemFileName)(struct TSFixedArray<GXUFONTHYPERLINKINFO> *this);
  int (__thiscall *TSBaseArray<GXUFONTHYPERLINKINFO>::MemLineNo)(struct TSFixedArray<GXUFONTHYPERLINKINFO> *this);
};

/* 874 */
struct /*VFT*/ TSGrowableArray<GXUFONTHYPERLINKINFO>_vtbl
{
  const char *(__thiscall *TSBaseArray<GXUFONTHYPERLINKINFO>::MemFileName)(struct TSGrowableArray<GXUFONTHYPERLINKINFO> *this);
  int (__thiscall *TSBaseArray<GXUFONTHYPERLINKINFO>::MemLineNo)(struct TSGrowableArray<GXUFONTHYPERLINKINFO> *this);
};

/* 878 */
struct /*VFT*/ TSFixedArray<NTempest::CImVector *>_vtbl
{
  const char *(__thiscall *TSBaseArray<NTempest::CImVector *>::MemFileName)(struct TSFixedArray<NTempest::CImVector *> *this);
  int (__thiscall *TSBaseArray<NTempest::CImVector *>::MemLineNo)(struct TSFixedArray<NTempest::CImVector *> *this);
};

/* 880 */
struct /*VFT*/ TSGrowableArray<NTempest::CImVector *>_vtbl
{
  const char *(__thiscall *TSBaseArray<NTempest::CImVector *>::MemFileName)(struct TSGrowableArray<NTempest::CImVector *> *this);
  int (__thiscall *TSBaseArray<NTempest::CImVector *>::MemLineNo)(struct TSGrowableArray<NTempest::CImVector *> *this);
};

/* 895 */
struct /*VFT*/ TSFixedArray<TSExplicitList<GLYPHBITMAPDATA,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<GLYPHBITMAPDATA,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<GLYPHBITMAPDATA,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<GLYPHBITMAPDATA,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<GLYPHBITMAPDATA,-572662307> > *this);
};

/* 897 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<GLYPHBITMAPDATA,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<GLYPHBITMAPDATA,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<GLYPHBITMAPDATA,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<GLYPHBITMAPDATA,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<GLYPHBITMAPDATA,-572662307> > *this);
};

/* 908 */
struct /*VFT*/ TSFixedArray<TSExplicitList<CHARCODEDESC,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CHARCODEDESC,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<CHARCODEDESC,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CHARCODEDESC,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<CHARCODEDESC,-572662307> > *this);
};

/* 910 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<CHARCODEDESC,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CHARCODEDESC,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<CHARCODEDESC,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CHARCODEDESC,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<CHARCODEDESC,-572662307> > *this);
};

/* 922 */
struct /*VFT*/ TSFixedArray<TSExplicitList<KERNNODE,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<KERNNODE,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<KERNNODE,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<KERNNODE,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<KERNNODE,-572662307> > *this);
};

/* 924 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<KERNNODE,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<KERNNODE,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<KERNNODE,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<KERNNODE,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<KERNNODE,-572662307> > *this);
};

/* 932 */
struct /*VFT*/ TSFixedArray<TEXTURECACHEROW>_vtbl
{
  const char *(__thiscall *TSBaseArray<TEXTURECACHEROW>::MemFileName)(struct TSFixedArray<TEXTURECACHEROW> *this);
  int (__thiscall *TSBaseArray<TEXTURECACHEROW>::MemLineNo)(struct TSFixedArray<TEXTURECACHEROW> *this);
};

/* 942 */
struct /*VFT*/ TSFixedArray<TSExplicitList<BATCHEDRENDERFONTDESC,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<BATCHEDRENDERFONTDESC,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<BATCHEDRENDERFONTDESC,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<BATCHEDRENDERFONTDESC,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<BATCHEDRENDERFONTDESC,-572662307> > *this);
};

/* 944 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<BATCHEDRENDERFONTDESC,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<BATCHEDRENDERFONTDESC,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<BATCHEDRENDERFONTDESC,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<BATCHEDRENDERFONTDESC,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<BATCHEDRENDERFONTDESC,-572662307> > *this);
};

/* 951 */
struct EVENT_DATA_IME
{
  unsigned int message;
  unsigned int wParam;
  unsigned int lParam;
  unsigned int codepage;
};

/* 952 */
struct __cppobj CImeEvent : CEvent, EVENT_DATA_IME
{
};

/* 953 */
struct /*VFT*/ CImeEvent_vtbl
{
  void (__thiscall *~CImeEvent)(CImeEvent *this);
  void (__thiscall *~CImeEvent)(struct CImeEvent *this);
};

/* 954 */
struct EVENT_DATA_KEY
{
  KEY key;
  unsigned int metaKeyState;
  unsigned int repeat;
  unsigned int time;
};

/* 955 */
struct __cppobj CKeyEvent : CEvent, EVENT_DATA_KEY
{
};

/* 956 */
struct /*VFT*/ CKeyEvent_vtbl
{
  void (__thiscall *~CKeyEvent)(CKeyEvent *this);
  void (__thiscall *~CKeyEvent)(struct CKeyEvent *this);
};

/* 957 */
struct EVENT_DATA_CHAR
{
  int ch;
  unsigned int metaKeyState;
  unsigned int repeat;
};

/* 958 */
struct __cppobj CCharEvent : CEvent, EVENT_DATA_CHAR
{
};

/* 959 */
struct /*VFT*/ CCharEvent_vtbl
{
  void (__thiscall *~CCharEvent)(CCharEvent *this);
  void (__thiscall *~CCharEvent)(struct CCharEvent *this);
};

/* 974 */
struct /*VFT*/ TSFixedArray<CFrameStrataNode *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CFrameStrataNode *>::MemFileName)(struct TSFixedArray<CFrameStrataNode *> *this);
  int (__thiscall *TSBaseArray<CFrameStrataNode *>::MemLineNo)(struct TSFixedArray<CFrameStrataNode *> *this);
};

/* 981 */
struct /*VFT*/ TSFixedArray<FRAMEPRIORITY *>_vtbl
{
  const char *(__thiscall *TSBaseArray<FRAMEPRIORITY *>::MemFileName)(struct TSFixedArray<FRAMEPRIORITY *> *this);
  int (__thiscall *TSBaseArray<FRAMEPRIORITY *>::MemLineNo)(struct TSFixedArray<FRAMEPRIORITY *> *this);
};

/* 983 */
struct /*VFT*/ TSGrowableArray<FRAMEPRIORITY *>_vtbl
{
  const char *(__thiscall *TSBaseArray<FRAMEPRIORITY *>::MemFileName)(struct TSGrowableArray<FRAMEPRIORITY *> *this);
  int (__thiscall *TSBaseArray<FRAMEPRIORITY *>::MemLineNo)(struct TSGrowableArray<FRAMEPRIORITY *> *this);
};

/* 988 */
struct /*VFT*/ CSizeEvent_vtbl
{
  void (__thiscall *~CSizeEvent)(CSizeEvent *this);
  void (__thiscall *~CSizeEvent)(struct CSizeEvent *this);
};

/* 989 */
struct /*VFT*/ CSimpleTop_vtbl
{
  void (__thiscall *CSimpleTop::~CSimpleTop)(CSimpleTop *this);
  int (__thiscall *CLayoutFrame::OnFrameResize)(struct CSimpleTop *this);
  void (__thiscall *CLayoutFrame::~CLayoutFrame)(struct CSimpleTop *this);
  void (__thiscall *CLayoutFrame::LoadXML)(struct CSimpleTop *this, const XMLNode *, CStatus *);
  CLayoutFrame *(__thiscall *CLayoutFrame::GetLayoutParent)(struct CSimpleTop *this);
  void (__thiscall *CLayoutFrame::SetDeferredResize)(struct CSimpleTop *this, int);
  int (__thiscall *CLayoutFrame::SetRect)(struct CSimpleTop *this, NTempest::CRect *);
  int (__thiscall *CLayoutFrame::GetRect)(struct CSimpleTop *this, NTempest::CRect *);
  void (__thiscall *CLayoutFrame::SetLayoutScale)(struct CSimpleTop *this, float, unsigned __int8);
  float (__thiscall *CLayoutFrame::GetWidth)(struct CSimpleTop *this);
  float (__thiscall *CLayoutFrame::GetHeight)(struct CSimpleTop *this);
  int (__thiscall *CLayoutFrame::IsAttachmentOrigin)(struct CSimpleTop *this);
  CLayoutFrame *(__thiscall *CLayoutFrame::GetLayoutFrameByName)(struct CSimpleTop *this, const char *);
};

/* 991 */
struct /*VFT*/ CSimpleTitleRegion_vtbl
{
  void (__thiscall *~CSimpleTitleRegion)(CSimpleTitleRegion *this);
  int (__thiscall *CLayoutFrame::OnFrameResize)(struct CSimpleTitleRegion *this);
  void (__thiscall *CLayoutFrame::~CLayoutFrame)(struct CSimpleTitleRegion *this);
  void (__thiscall *CLayoutFrame::LoadXML)(struct CSimpleTitleRegion *this, const XMLNode *, CStatus *);
  CLayoutFrame *(__thiscall *CLayoutFrame::GetLayoutParent)(struct CSimpleTitleRegion *this);
  void (__thiscall *CLayoutFrame::SetDeferredResize)(struct CSimpleTitleRegion *this, int);
  int (__thiscall *CLayoutFrame::SetRect)(struct CSimpleTitleRegion *this, NTempest::CRect *);
  int (__thiscall *CLayoutFrame::GetRect)(struct CSimpleTitleRegion *this, NTempest::CRect *);
  void (__thiscall *CLayoutFrame::SetLayoutScale)(struct CSimpleTitleRegion *this, float, unsigned __int8);
  float (__thiscall *CLayoutFrame::GetWidth)(struct CSimpleTitleRegion *this);
  float (__thiscall *CLayoutFrame::GetHeight)(struct CSimpleTitleRegion *this);
  int (__thiscall *CLayoutFrame::IsAttachmentOrigin)(struct CSimpleTitleRegion *this);
  CLayoutFrame *(__thiscall *CLayoutFrame::GetLayoutFrameByName)(struct CSimpleTitleRegion *this, const char *);
};

/* 993 */
struct /*VFT*/ CSimpleRegion_vtbl
{
  CLayoutFrame *(__thiscall *CSimpleRegion::GetLayoutParent)(CSimpleRegion *this);
  int (__thiscall *CLayoutFrame::OnFrameResize)(struct CSimpleRegion *this);
  void (__thiscall *CLayoutFrame::~CLayoutFrame)(struct CSimpleRegion *this);
  void (__thiscall *CLayoutFrame::LoadXML)(struct CSimpleRegion *this, const XMLNode *, CStatus *);
  CLayoutFrame *(__thiscall *CLayoutFrame::GetLayoutParent)(struct CSimpleRegion *this);
  void (__thiscall *CLayoutFrame::SetDeferredResize)(struct CSimpleRegion *this, int);
  int (__thiscall *CLayoutFrame::SetRect)(struct CSimpleRegion *this, NTempest::CRect *);
  int (__thiscall *CLayoutFrame::GetRect)(struct CSimpleRegion *this, NTempest::CRect *);
  void (__thiscall *CLayoutFrame::SetLayoutScale)(struct CSimpleRegion *this, float, unsigned __int8);
  float (__thiscall *CLayoutFrame::GetWidth)(struct CSimpleRegion *this);
  float (__thiscall *CLayoutFrame::GetHeight)(struct CSimpleRegion *this);
  int (__thiscall *CLayoutFrame::IsAttachmentOrigin)(struct CSimpleRegion *this);
  CLayoutFrame *(__thiscall *CLayoutFrame::GetLayoutFrameByName)(struct CSimpleRegion *this, const char *);
  void (__thiscall *CSimpleRegion::OnGxColorChanged)(CSimpleRegion *this);
  void (__thiscall *Draw)(CSimpleRegion *this, CRenderBatch *);
  void (__thiscall *ClearFromSimpleRegistry)(CSimpleRegion *this);
};

/* 996 */
struct /*VFT*/ CSimpleTexture_vtbl
{
  int (__thiscall *CSimpleTexture::LookupScriptMethod)(CSimpleTexture *this, struct lua_State *, const char *);
  const char *(__thiscall *GetName)(struct CSimpleTexture *this);
};

/* 1001 */
struct /*VFT*/ CStringRep_vtbl
{
  void (__thiscall *~CStringRep)(CStringRep *this);
  void (__thiscall *~CStringRep)(struct CStringRep *this);
  void (__thiscall *CStringRep::DecrRef)(CStringRep *this);
};

/* 1004 */
struct /*VFT*/ RCString_vtbl
{
  void (__thiscall *RCString::~RCString)(RCString *this);
  void (__thiscall *~RCString)(struct RCString *this);
};

/* 1006 */
struct /*VFT*/ RCStaticString_vtbl
{
  void (__thiscall *~RCStaticString)(RCStaticString *this);
  void (__thiscall *~RCStaticString)(struct RCStaticString *this);
};

/* 1012 */
struct /*VFT*/ CSimpleFrame_vtbl
{
  int (__thiscall *CSimpleFrame::LookupScriptMethod)(CSimpleFrame *this, struct lua_State *, const char *);
  const char *(__thiscall *GetName)(struct CSimpleFrame *this);
  _BYTE gap8[4];
  void (__thiscall *CSimpleFrame::DelayedDelete)(CSimpleFrame *this);
  void (__thiscall *CSimpleFrame::PreLoadXML)(CSimpleFrame *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::LoadXML_Scripts)(CSimpleFrame *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::PostLoadXML)(CSimpleFrame *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::SetAlpha)(CSimpleFrame *this, unsigned __int8);
  int (__thiscall *CSimpleFrame::FrameDefPostInitialize)(CSimpleFrame *this, unsigned int, void *);
  int (__thiscall *CSimpleFrame::TestHitRect)(CSimpleFrame *this, const NTempest::C2Vector *);
  void (__thiscall *CSimpleFrame::OnLayerShow)(CSimpleFrame *this);
  void (__thiscall *CSimpleFrame::OnLayerHide)(CSimpleFrame *this);
  void (__thiscall *CSimpleFrame::OnLayerUpdate)(CSimpleFrame *this, float);
  int (__thiscall *CSimpleFrame::OnLayerTrackUpdate)(CSimpleFrame *this, const CMouseEvent *);
  _BYTE gap38[4];
  void (__thiscall *CSimpleFrame::OnFrameRender)(CSimpleFrame *this, CRenderBatch *, unsigned int);
  _BYTE gap40[4];
  void (__thiscall *CSimpleFrame::OnLayerCursorEnter)(CSimpleFrame *this);
  void (__thiscall *CSimpleFrame::OnLayerCursorExit)(CSimpleFrame *this);
  int (__thiscall *CSimpleFrame::OnLayerIme)(CSimpleFrame *this, CImeEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDownRepeat)(CSimpleFrame *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerChar)(CSimpleFrame *this, CCharEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDown)(CSimpleFrame *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyUp)(CSimpleFrame *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseDown)(CSimpleFrame *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseUp)(CSimpleFrame *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseWheel)(CSimpleFrame *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseMoveRelative)(CSimpleFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStart)(CSimpleFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStop)(CSimpleFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnReceiveDrag)(CSimpleFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::LockHighlight)(CSimpleFrame *this, int);
  int (__thiscall *CSimpleFrame::HideThis)(CSimpleFrame *this);
  int (__thiscall *CSimpleFrame::ShowThis)(CSimpleFrame *this);
  void (__thiscall *CSimpleFrame::ClearChildrenFromSimpleRegistry)(CSimpleFrame *this);
};

/* 1013 */
struct __cppobj TSLink<CModelRecord>
{
  TSLink<CModelRecord> *m_prevlink;
  CModelRecord *m_next;
};

/* 1014 */
struct __cppobj TSLinkedNode<CModelRecord>
{
  TSLink<CModelRecord> m_link;
};

/* 1015 */
struct __cppobj CModelRecord : TSLinkedNode<CModelRecord>
{
  HMODEL__ *model;
  float distance;
  float scale;
  unsigned __int64 guid;
};

/* 1016 */
struct __cppobj TSList<CModelRecord,TSGetLink<CModelRecord> >
{
  int m_linkoffset;
  TSLink<CModelRecord> m_terminator;
};

/* 1017 */
struct __cppobj __declspec(align(8)) CGWorldFrame : CSimpleFrame
{
  TSList<CModelRecord,TSGetLink<CModelRecord> > m_models;
  TSList<CModelRecord,TSGetLink<CModelRecord> > m_filteredModels;
  TSList<CModelRecord,TSGetLink<CModelRecord> > m_freeModels;
  unsigned int m_spriteButtons;
  unsigned int m_terrainButtons;
  unsigned __int64 m_lastUnitFade;
  unsigned __int64 m_lastObjectTrack;
  float m_lastUpdateElapsedSec;
  float m_skyAnimDuration;
  unsigned __int32 m_renderPlayer : 1;
  unsigned __int32 m_freeLookMode : 1;
  NTempest::C44Matrix m_worldMatrix;
  unsigned int m_flags;
  float m_elapsedSec;
  char m_lastKey[780][32];
  CGCamera *m_camera;
  unsigned int m_updateTimeStamp;
  CGWorldFrame::PLAYERFADEMODE m_playerFadeMode;
  int m_playerAlpha;
  int m_cameraAlpha;
  int m_cameraAlphaChanged;
};

/* 1018 */
struct __cppobj CSimpleCamera
{
  CSimpleCamera_vtbl *__vftable /*VFT*/;
  NTempest::C3Vector m_position;
  NTempest::C33Matrix m_facing;
  float m_nearZ;
  float m_farZ;
  float m_fov;
  float m_aspect;
};

/* 1022 */
struct $DBD13342A75BF90E531B107998BCD34D
{
  float dist;
  float pitch;
  float yaw;
};

/* 1023 */
struct __cppobj TSLink<CameraShake>
{
  TSLink<CameraShake> *m_prevlink;
  CameraShake *m_next;
};

/* 1026 */
struct __cppobj TSList<CameraShake,TSGetLink<CameraShake> >
{
  int m_linkoffset;
  TSLink<CameraShake> m_terminator;
};

/* 1027 */
struct __cppobj CGCamera : CSimpleCamera
{
  HMODEL__ *m_model;
  HCAMERA__ *m_modelCamera;
  NTempest::C34Matrix m_modelMatrix;
  unsigned __int64 m_target;
  float m_targetOffsetZ;
  int m_flags;
  unsigned __int64 m_relativeTo;
  $DBD13342A75BF90E531B107998BCD34D m_views[5];
  float m_distance;
  float m_yaw;
  float m_pitch;
  float m_roll;
  float m_yawOffset;
  float m_yawFreelookStart;
  unsigned int m_motionMask;
  unsigned int m_motionStart[6];
  unsigned int m_motionStop[6];
  unsigned int m_motionTimeout[6];
  NTempest::C3Vector m_lastTarget;
  float m_savedTargetZ;
  float m_lastFacing;
  unsigned int m_lastDeltaZ;
  float m_smoothingAngle;
  unsigned int m_zoomSmoothingTimestamp;
  float m_zoomTime;
  float m_desiredDistance;
  float m_previousDistance;
  unsigned int m_pitchSmoothingTimestamp;
  float m_pitchTime;
  float m_desiredPitch;
  float m_previousPitch;
  unsigned int m_yawSmoothingTimestamp;
  float m_yawTime;
  float m_desiredYaw;
  float m_previousYaw;
  int m_cycleDirection;
  unsigned int m_savedLiquid;
  TSList<CameraShake,TSGetLink<CameraShake> > m_shakes;
};

/* 1019 */
struct /*VFT*/ CSimpleCamera_vtbl
{
  NTempest::C3Vector *(__thiscall *CSimpleCamera::Forward)(CSimpleCamera *this, NTempest::C3Vector *result);
  NTempest::C3Vector *(__thiscall *CSimpleCamera::Right)(CSimpleCamera *this, NTempest::C3Vector *result);
  NTempest::C3Vector *(__thiscall *CSimpleCamera::Up)(CSimpleCamera *this, NTempest::C3Vector *result);
};

/* 1020 */
struct __cppobj HDATAMGR__ : HOBJECT__
{
  int unused;
};

/* 1021 */
struct __cppobj HCAMERA__ : HDATAMGR__
{
  int unused;
};

/* 1024 */
struct __cppobj TSLinkedNode<CameraShake>
{
  TSLink<CameraShake> m_link;
};

/* 1025 */
struct __cppobj CameraShake : TSLinkedNode<CameraShake>
{
  CGCameraShakeType m_shakeType;
  CGCameraDir m_direction;
  float m_amplitude;
  float m_frequency;
  float m_duration;
  float m_phase;
  float m_coefficient;
  unsigned int m_timestamp;
};

/* 1028 */
struct /*VFT*/ CGCamera_vtbl
{
  NTempest::C3Vector *(__thiscall *CGCamera::Up)(CGCamera *this, NTempest::C3Vector *result);
  NTempest::C3Vector *(__thiscall *CSimpleCamera::Right)(struct CGCamera *this, NTempest::C3Vector *result);
  NTempest::C3Vector *(__thiscall *CSimpleCamera::Up)(struct CGCamera *this, NTempest::C3Vector *result);
};

/* 1029 */
struct /*VFT*/ CGWorldFrame_vtbl
{
  int (__thiscall *CGWorldFrame::OnLayerMouseMoveRelative)(CGWorldFrame *this, CMouseEvent *);
  const char *(__thiscall *GetName)(struct CGWorldFrame *this);
  _BYTE gap8[4];
  void (__thiscall *CSimpleFrame::DelayedDelete)(struct CGWorldFrame *this);
  void (__thiscall *CSimpleFrame::PreLoadXML)(struct CGWorldFrame *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::LoadXML_Scripts)(struct CGWorldFrame *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::PostLoadXML)(struct CGWorldFrame *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::SetAlpha)(struct CGWorldFrame *this, unsigned __int8);
  int (__thiscall *CSimpleFrame::FrameDefPostInitialize)(struct CGWorldFrame *this, unsigned int, void *);
  int (__thiscall *CSimpleFrame::TestHitRect)(struct CGWorldFrame *this, const NTempest::C2Vector *);
  void (__thiscall *CSimpleFrame::OnLayerShow)(struct CGWorldFrame *this);
  void (__thiscall *CSimpleFrame::OnLayerHide)(struct CGWorldFrame *this);
  void (__thiscall *CSimpleFrame::OnLayerUpdate)(struct CGWorldFrame *this, float);
  int (__thiscall *CSimpleFrame::OnLayerTrackUpdate)(struct CGWorldFrame *this, const CMouseEvent *);
  _BYTE gap38[4];
  void (__thiscall *CSimpleFrame::OnFrameRender)(struct CGWorldFrame *this, CRenderBatch *, unsigned int);
  _BYTE gap40[4];
  void (__thiscall *CSimpleFrame::OnLayerCursorEnter)(struct CGWorldFrame *this);
  void (__thiscall *CSimpleFrame::OnLayerCursorExit)(struct CGWorldFrame *this);
  int (__thiscall *CSimpleFrame::OnLayerIme)(struct CGWorldFrame *this, CImeEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDownRepeat)(struct CGWorldFrame *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerChar)(struct CGWorldFrame *this, CCharEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDown)(struct CGWorldFrame *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyUp)(struct CGWorldFrame *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseDown)(struct CGWorldFrame *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseUp)(struct CGWorldFrame *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseWheel)(struct CGWorldFrame *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseMoveRelative)(struct CGWorldFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStart)(struct CGWorldFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStop)(struct CGWorldFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnReceiveDrag)(struct CGWorldFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::LockHighlight)(struct CGWorldFrame *this, int);
  int (__thiscall *CSimpleFrame::HideThis)(struct CGWorldFrame *this);
  int (__thiscall *CSimpleFrame::ShowThis)(struct CGWorldFrame *this);
  void (__thiscall *CSimpleFrame::ClearChildrenFromSimpleRegistry)(struct CGWorldFrame *this);
};

/* 1030 */
struct __cppobj MapRec
{
  int m_ID;
  const char *m_Directory;
  int m_PVP;
  int m_IsInMap;
  const char *m_MapName_lang[8];
  int m_MapName_flag;
};

/* 1031 */
struct __cppobj WowClientDB<MapRec>
{
  MapRec *m_records;
  int m_numRecords;
  MapRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 1032 */
struct CMemCmdItem
{
  unsigned int m_allocated;
  unsigned int m_committed;
  unsigned int m_reserved;
  char m_name[256];
};

/* 1033 */
struct __cppobj CDataStore::Space<T>
{
  unsigned int m_pos;
};

/* 1034 */
struct __cppobj CDataStore::FixedString<T,MAXSIZE>
{
  _BYTE gap0[4];
};

/* 1035 */
struct __cppobj CDataStore::FixedBuffer<SIZET,MAXSIZE>
{
  unsigned __int8 m_data[];
  _BYTE gap0[4];
};

/* 1036 */
struct __cppobj CDataStore::FixedArray<SIZET,T,MAXSIZE>
{
  _BYTE gap0[4];
};

/* 1037 */
union $1BD41A2CB8BF03B040A943BEF6424157
{
  unsigned int bits;
  float fp;
};

/* 1038 */
struct __cppobj unreal
{
  $1BD41A2CB8BF03B040A943BEF6424157 ___u0;
};

/* 1039 */
struct __cppobj NTempest::CMath
{
};

/* 1040 */
struct __cppobj TSBaseArray<CMemCmdItem>
{
  TSBaseArray<CMemCmdItem>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CMemCmdItem *m_data;
};

/* 1041 */
struct /*VFT*/ TSBaseArray<CMemCmdItem>_vtbl
{
  const char *(__thiscall *TSBaseArray<CMemCmdItem>::MemFileName)(TSBaseArray<CMemCmdItem> *this);
  int (__thiscall *TSBaseArray<CMemCmdItem>::MemLineNo)(TSBaseArray<CMemCmdItem> *this);
};

/* 1042 */
struct /*VFT*/ TSFixedArray<CMemCmdItem>_vtbl
{
  const char *(__thiscall *TSBaseArray<CMemCmdItem>::MemFileName)(struct TSFixedArray<CMemCmdItem> *this);
  int (__thiscall *TSBaseArray<CMemCmdItem>::MemLineNo)(struct TSFixedArray<CMemCmdItem> *this);
};

/* 1043 */
struct __cppobj TSFixedArray<CMemCmdItem> : TSBaseArray<CMemCmdItem>
{
};

/* 1044 */
struct /*VFT*/ TSGrowableArray<CMemCmdItem>_vtbl
{
  const char *(__thiscall *TSBaseArray<CMemCmdItem>::MemFileName)(struct TSGrowableArray<CMemCmdItem> *this);
  int (__thiscall *TSBaseArray<CMemCmdItem>::MemLineNo)(struct TSGrowableArray<CMemCmdItem> *this);
};

/* 1045 */
struct __cppobj TSGrowableArray<CMemCmdItem> : TSFixedArray<CMemCmdItem>
{
  unsigned int m_chunk;
};

/* 1046 */
struct __cppobj __declspec(align(8)) CMemCmdDump
{
  unsigned __int64 m_sumAllocated;
  unsigned __int64 m_sumCommitted;
  unsigned __int64 m_sumReserved;
  TSGrowableArray<CMemCmdItem> m_items;
};

/* 1047 */
struct HOUTPUTCONTEXT__
{
  int unused;
};

/* 1048 */
union $290387D0F789CC5B78FE91B6ABDE7D73
{
  int boolvalue;
  int signedvalue;
  unsigned int unsignedvalue;
  const char *stringvalue;
};

/* 1049 */
struct _CMDPARAMS
{
  unsigned int flags;
  unsigned int id;
  const char *name;
  void *variable;
  unsigned int setvalue;
  unsigned int setmask;
  $290387D0F789CC5B78FE91B6ABDE7D73 ___u6;
};

/* 1050 */
struct _ARGLIST
{
  unsigned int flags;
  unsigned int id;
  const char *name;
  int (__stdcall *callback)(_CMDPARAMS *, const char *);
};

/* 1051 */
struct HEVENTCONTEXT__
{
  int unused;
};

/* 1052 */
struct __cppobj TSLink<CVar>
{
  TSLink<CVar> *m_prevlink;
  CVar *m_next;
};

/* 1054 */
struct __cppobj HASHKEY_STRI : HASHKEY_STR
{
};

/* 1055 */
struct __cppobj TSHashObject<CVar,HASHKEY_STRI>
{
  unsigned int m_hashval;
  TSLink<CVar> m_linktoslot;
  TSLink<CVar> m_linktofull;
  HASHKEY_STRI m_key;
};

/* 1053 */
struct __cppobj CVar : TSHashObject<CVar,HASHKEY_STRI>
{
  char m_name[32];
  unsigned int m_category;
  unsigned int m_flags;
  char *m_stringValue;
  float m_floatValue;
  int m_intValue;
  int m_modified;
  char *m_defaultValue;
  char *m_resetValue;
  char *m_latchedValue;
  unsigned __int8 (__fastcall *m_callback)(CVar *, const char *, const char *, void *);
  void *m_arg;
};

/* 1056 */
struct __cppobj NTempest::CRndSeed
{
  unsigned int rndacc;
  unsigned int rndvls;
};

/* 1057 */
struct __cppobj WowConnectionResponse
{
  WowConnectionResponse_vtbl *__vftable /*VFT*/;
};

/* 1069 */
struct /*VFT*/ WowConnectionResponse_vtbl
{
  void (__thiscall *~WowConnectionResponse)(WowConnectionResponse *this);
  void (__thiscall *WCMessageReady)(WowConnectionResponse *this, WowConnection *, unsigned int, CDataStore *);
  void (__thiscall *WCConnected)(WowConnectionResponse *this, WowConnection *, WowConnection *, unsigned int, const NETCONNADDR *);
  void (__thiscall *WCCantConnect)(WowConnectionResponse *this, WowConnection *, unsigned int, const NETCONNADDR *);
  void (__thiscall *WCDisconnected)(WowConnectionResponse *this, WowConnection *, unsigned int, const NETCONNADDR *);
  void (__thiscall *WowConnectionResponse::WCGlobalLock)(WowConnectionResponse *this);
  void (__thiscall *WowConnectionResponse::WCGlobalUnlock)(WowConnectionResponse *this);
  void (__thiscall *WowConnectionResponse::WCDataReady)(WowConnectionResponse *this, WowConnection *, unsigned int, unsigned __int8 *, int);
  void (__thiscall *WowConnectionResponse::WCWriteReady)(WowConnectionResponse *this, WowConnection *);
};

/* 1058 */
struct __cppobj SCritSect
{
  unsigned __int8 m_opaqueData[24];
};

/* 1059 */
struct WowConnectionStats
{
  int m_bytesReceived;
  int m_bytesSent;
  int m_messagesReceived;
  int m_messagesSent;
  unsigned int m_connectTime;
  unsigned int m_lastDataReceived;
};

/* 1060 */
struct __declspec(align(8)) $5B77656B5FEDF376CF216400383AC702
{
  unsigned __int64 pos;
  void *operationId;
};

/* 1061 */
union NETADDR
{
  unsigned __int8 data[16];
  $5B77656B5FEDF376CF216400383AC702 file;
};

/* 1062 */
struct NETCONNADDR
{
  NETADDR peerAddr;
  NETADDR selfAddr;
};

/* 1063 */
struct __cppobj TSLink<WowConnection>
{
  TSLink<WowConnection> *m_prevlink;
  WowConnection *m_next;
};

/* 1065 */
struct __cppobj TSLink<WowConnection::SENDNODE>
{
  TSLink<WowConnection::SENDNODE> *m_prevlink;
  WowConnection::SENDNODE *m_next;
};

/* 1068 */
struct __cppobj TSList<WowConnection::SENDNODE,TSGetLink<WowConnection::SENDNODE> >
{
  int m_linkoffset;
  TSLink<WowConnection::SENDNODE> m_terminator;
};

/* 1064 */
struct __cppobj __declspec(align(8)) WowConnection
{
  int m_refCount;
  int m_sock;
  int m_oldsock;
  unsigned __int8 m_connectionFreed;
  WOW_CONN_STATE m_connState;
  WowConnectionResponse *m_response;
  unsigned int m_needBytes;
  unsigned __int8 *m_readBuffer;
  int m_readBytes;
  int m_readBufferSize;
  SCritSect m_outLock;
  WowConnectionStats m_stats;
  unsigned int m_haveSizeBytes;
  unsigned __int16 m_listenPort;
  void (__fastcall *m_threadInit)();
  unsigned int m_connectAddress;
  unsigned __int16 m_connectPort;
  int m_connectRetryInterval;
  unsigned int m_retryConnection;
  NETCONNADDR m_peer;
  unsigned int m_bufferAutoSendSize;
  SCritSect m_responseLock;
  int m_responseRef;
  unsigned int m_responseRefThread;
  TSLink<WowConnection> netlink;
  TSList<WowConnection::SENDNODE,TSGetLink<WowConnection::SENDNODE> > m_sendList;
  int m_sendDepth;
  int m_sendDepthBytes;
  unsigned int m_serviceFlags;
  SCritSect m_lock;
  int m_serviceCount;
  void *m_event;
  WOWC_TYPE m_type;
  unsigned __int8 m_wantWriteNotification;
};

/* 1066 */
struct __cppobj TSLinkedNode<WowConnection::SENDNODE>
{
  TSLink<WowConnection::SENDNODE> m_link;
};

/* 1067 */
struct __cppobj WowConnection::SENDNODE : TSLinkedNode<WowConnection::SENDNODE>
{
  unsigned __int8 *data;
  unsigned int size;
  unsigned int offset;
  unsigned int datasize;
};

/* 1070 */
struct __cppobj NetClient : WowConnectionResponse
{
  NetClient **m_redirectHandle;
  int m_redirectBytesRead;
  char m_redirectHostPort[1025];
  NETSTATE m_netState;
  int (__fastcall *m_handlers[498])(void *, NETMESSAGE, unsigned int, CDataStore *);
  void *m_handlerParams[498];
  NETEVENTQUEUE *m_netEventQueue;
  WowConnection *m_serverConnection;
  int m_refCount;
  unsigned __int8 m_deleteMe;
  unsigned int m_pingSent;
  unsigned int m_pingSequence;
  unsigned int m_latency[16];
  unsigned int m_latencyStart;
  unsigned int m_latencyEnd;
  unsigned int m_bytesSent;
  unsigned int m_bytesReceived;
  unsigned int m_connectedTimestamp;
  SCritSect m_pingLock;
  ClntObjMgr *m_objMgr;
  ClntObjMgr *m_saveObjMgr;
  NetClientRedirect *m_redirect;
};

/* 1071 */
struct __cppobj TSLink<NETEVENTQUEUENODE>
{
  TSLink<NETEVENTQUEUENODE> *m_prevlink;
  NETEVENTQUEUENODE *m_next;
};

/* 1074 */
struct __cppobj TSList<NETEVENTQUEUENODE,TSGetLink<NETEVENTQUEUENODE> >
{
  int m_linkoffset;
  TSLink<NETEVENTQUEUENODE> m_terminator;
};

/* 1075 */
struct __cppobj NETEVENTQUEUE
{
  NetClient *m_client;
  SCritSect m_critsect;
  TSList<NETEVENTQUEUENODE,TSGetLink<NETEVENTQUEUENODE> > m_eventQueue;
};

/* 1076 */
struct __cppobj TSLink<C_OBJECTHASH>
{
  TSLink<C_OBJECTHASH> *m_prevlink;
  C_OBJECTHASH *m_next;
};

/* 1093 */
struct __cppobj TSList<C_OBJECTHASH,TSGetExplicitLink<C_OBJECTHASH> >
{
  int m_linkoffset;
  TSLink<C_OBJECTHASH> m_terminator;
};

/* 1094 */
struct __cppobj TSExplicitList<C_OBJECTHASH,-572662307> : TSList<C_OBJECTHASH,TSGetExplicitLink<C_OBJECTHASH> >
{
};

/* 1096 */
struct __cppobj TSBaseArray<TSExplicitList<C_OBJECTHASH,-572662307> >
{
  TSBaseArray<TSExplicitList<C_OBJECTHASH,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<C_OBJECTHASH,-572662307> *m_data;
};

/* 1099 */
struct __cppobj TSFixedArray<TSExplicitList<C_OBJECTHASH,-572662307> > : TSBaseArray<TSExplicitList<C_OBJECTHASH,-572662307> >
{
};

/* 1101 */
struct __cppobj TSGrowableArray<TSExplicitList<C_OBJECTHASH,-572662307> > : TSFixedArray<TSExplicitList<C_OBJECTHASH,-572662307> >
{
  unsigned int m_chunk;
};

/* 1092 */
struct __cppobj TSHashTable<C_OBJECTHASH,CHashKeyGUID>
{
  TSHashTable<C_OBJECTHASH,CHashKeyGUID>_vtbl *__vftable /*VFT*/;
  TSExplicitList<C_OBJECTHASH,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<C_OBJECTHASH,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 1102 */
struct __cppobj TSExplicitList<C_OBJECTHASH,7648> : TSList<C_OBJECTHASH,TSGetExplicitLink<C_OBJECTHASH> >
{
};

/* 1103 */
struct __cppobj TSExplicitList<C_OBJECTHASH,7656> : TSList<C_OBJECTHASH,TSGetExplicitLink<C_OBJECTHASH> >
{
};

/* 1104 */
struct __cppobj TSLink<OBJHANDLERREQUEST>
{
  TSLink<OBJHANDLERREQUEST> *m_prevlink;
  OBJHANDLERREQUEST *m_next;
};

/* 1107 */
struct __cppobj TSList<OBJHANDLERREQUEST,TSGetLink<OBJHANDLERREQUEST> >
{
  int m_linkoffset;
  TSLink<OBJHANDLERREQUEST> m_terminator;
};

/* 1109 */
struct __cppobj __declspec(align(8)) ClntObjMgr
{
  TSHashTable<C_OBJECTHASH,CHashKeyGUID> m_objects;
  TSHashTable<C_OBJECTHASH,CHashKeyGUID> m_lazyCleanupObjects;
  TSExplicitList<C_OBJECTHASH,7648> m_lazyCleanupFifo;
  TSExplicitList<C_OBJECTHASH,7648> m_freeObjects;
  TSExplicitList<C_OBJECTHASH,7648> m_visibleObjects;
  TSExplicitList<C_OBJECTHASH,7656> m_reenabledObjects;
  int m_callingMirrorHandlers;
  TSList<OBJHANDLERREQUEST,TSGetLink<OBJHANDLERREQUEST> > m_pendingObjHandlerRequests;
  int m_allowGuidDeref;
  unsigned __int64 m_legalGuidDeref;
  unsigned __int64 m_activePlayer;
  PLAYER_TYPE m_type;
  unsigned int m_mapID;
  ClientConnection *m_net;
  void *m_movement;
  void *m_clientPtr;
};

/* 1110 */
struct __cppobj NetClientRedirect : WowConnectionResponse
{
  NetClient *m_owner;
  WowConnection *m_conn;
};

/* 1072 */
struct __cppobj TSLinkedNode<NETEVENTQUEUENODE>
{
  TSLink<NETEVENTQUEUENODE> m_link;
};

/* 1073 */
struct __cppobj NETEVENTQUEUENODE : TSLinkedNode<NETEVENTQUEUENODE>
{
  EVENTID m_eventId;
  unsigned int m_timeReceived;
  void *m_data;
  unsigned int m_dataSize;
};

/* 1095 */
struct /*VFT*/ TSHashTable<C_OBJECTHASH,CHashKeyGUID>_vtbl
{
  void (__thiscall *TSHashTable<C_OBJECTHASH,CHashKeyGUID>::InternalDelete)(TSHashTable<C_OBJECTHASH,CHashKeyGUID> *this, C_OBJECTHASH *);
  C_OBJECTHASH *(__thiscall *TSHashTable<C_OBJECTHASH,CHashKeyGUID>::InternalNew)(TSHashTable<C_OBJECTHASH,CHashKeyGUID> *this, TSExplicitList<C_OBJECTHASH,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *TSHashTable<C_OBJECTHASH,CHashKeyGUID>::~TSHashTable<C_OBJECTHASH,CHashKeyGUID>)(TSHashTable<C_OBJECTHASH,CHashKeyGUID> *this);
  void (__thiscall *TSHashTable<C_OBJECTHASH,CHashKeyGUID>::Destroy)(TSHashTable<C_OBJECTHASH,CHashKeyGUID> *this);
};

/* 1078 */
struct __cppobj CHashKeyGUID
{
  unsigned __int64 m_guid;
};

/* 1079 */
struct __cppobj TSHashObject<C_OBJECTHASH,CHashKeyGUID>
{
  unsigned int m_hashval;
  TSLink<C_OBJECTHASH> m_linktoslot;
  TSLink<C_OBJECTHASH> m_linktofull;
  CHashKeyGUID m_key;
};

/* 1080 */
struct __cppobj TSLink<CMirrorHandler>
{
  TSLink<CMirrorHandler> *m_prevlink;
  CMirrorHandler *m_next;
};

/* 1091 */
struct __cppobj TSList<CMirrorHandler,TSGetLink<CMirrorHandler> >
{
  int m_linkoffset;
  TSLink<CMirrorHandler> m_terminator;
};

/* 1077 */
struct __cppobj C_OBJECTHASH : TSHashObject<C_OBJECTHASH,CHashKeyGUID>
{
  unsigned int memHandle;
  unsigned int thisMemHandle;
  TSList<CMirrorHandler,TSGetLink<CMirrorHandler> > mirrorHandlers[634];
  TSLink<C_OBJECTHASH> link;
  TSLink<C_OBJECTHASH> reenableLink;
};

/* 1097 */
struct /*VFT*/ TSBaseArray<TSExplicitList<C_OBJECTHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<C_OBJECTHASH,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<C_OBJECTHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<C_OBJECTHASH,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<C_OBJECTHASH,-572662307> > *this);
};

/* 1105 */
struct __cppobj TSLinkedNode<OBJHANDLERREQUEST>
{
  TSLink<OBJHANDLERREQUEST> m_link;
};

/* 1106 */
struct __cppobj __declspec(align(4)) OBJHANDLERREQUEST : TSLinkedNode<OBJHANDLERREQUEST>
{
  unsigned __int64 guid;
  unsigned int offset;
  unsigned int bytes;
  int (__fastcall *handler)(unsigned __int64, unsigned int, unsigned int, const void *, void *);
  void *param;
  HANDLER_PRIORITY priority;
  unsigned __int8 set;
};

/* 1113 */
struct LoginData
{
  char m_account[64];
  int m_loginServerID;
  unsigned __int8 m_sessionKey[40];
};

/* 1114 */
struct __cppobj TSBaseArray<CHARACTER_INFO>
{
  TSBaseArray<CHARACTER_INFO>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CHARACTER_INFO *m_data;
};

/* 1118 */
struct __cppobj TSFixedArray<CHARACTER_INFO> : TSBaseArray<CHARACTER_INFO>
{
};

/* 1119 */
struct __cppobj TSBaseArray<REALM_INFO>
{
  TSBaseArray<REALM_INFO>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  REALM_INFO *m_data;
};

/* 1123 */
struct __cppobj TSFixedArray<REALM_INFO> : TSBaseArray<REALM_INFO>
{
};

/* 1108 */
struct __cppobj ClientConnection : NetClient
{
  int m_initialized;
  int m_connected;
  int m_playing;
  int m_statusComplete;
  int m_statusResult;
  WOWCS_OPS m_statusCop;
  int m_errorCode;
  int m_inGame;
  unsigned __int8 m_exitAfterLogout;
  unsigned __int8 m_loggingOut;
  LoginData m_loginData;
  TSFixedArray<CHARACTER_INFO> m_characterList;
  TSFixedArray<REALM_INFO> m_realmList;
  int m_isBot;
  unsigned int m_waitCount;
  void (__thiscall *m_cleanup)(ClientConnection *this);
};

/* 1081 */
struct __cppobj TSLinkedNode<CMirrorHandler>
{
  TSLink<CMirrorHandler> m_link;
};

/* 1082 */
struct __cppobj TSBaseArray<unsigned char>
{
  TSBaseArray<unsigned char>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  unsigned __int8 *m_data;
};

/* 1085 */
struct __cppobj TSFixedArray<unsigned char> : TSBaseArray<unsigned char>
{
};

/* 1087 */
struct __cppobj TSGrowableArray<unsigned char> : TSFixedArray<unsigned char>
{
  unsigned int m_chunk;
};

/* 1088 */
struct __cppobj TSGrowableArray_<unsigned char,1330464594,71> : TSGrowableArray<unsigned char>
{
};

/* 1090 */
struct __cppobj CMirrorHandler : TSLinkedNode<CMirrorHandler>
{
  TSLink<CMirrorHandler> callLink;
  int (__fastcall *handler)(unsigned __int64, unsigned int, unsigned int, const void *, void *);
  void *param;
  unsigned int blocksLeft;
  unsigned int offset;
  TSGrowableArray_<unsigned char,1330464594,71> previous;
  HANDLER_PRIORITY priority;
};

/* 1115 */
struct /*VFT*/ TSBaseArray<CHARACTER_INFO>_vtbl
{
  const char *(__thiscall *TSBaseArray<CHARACTER_INFO>::MemFileName)(TSBaseArray<CHARACTER_INFO> *this);
  int (__thiscall *TSBaseArray<CHARACTER_INFO>::MemLineNo)(TSBaseArray<CHARACTER_INFO> *this);
};

/* 1116 */
struct __cppobj __declspec(align(4)) CHARACTER_INFO
{
  unsigned __int64 guid;
  char name[48];
  unsigned int mapID;
  unsigned int zoneID;
  unsigned int guildID;
  NTempest::C3Vector position;
  unsigned int inventoryItemDisplayID[20];
  unsigned int inventoryItemType[20];
  unsigned int petDisplayInfoID;
  unsigned int petExperienceLevel;
  unsigned int petCreatureFamilyID;
  unsigned __int8 raceID;
  unsigned __int8 classID;
  unsigned __int8 sexID;
  unsigned __int8 skinID;
  unsigned __int8 faceID;
  unsigned __int8 hairStyleID;
  unsigned __int8 hairColorID;
  unsigned __int8 facialHairStyleID;
  unsigned __int8 experienceLevel;
};

/* 1120 */
struct /*VFT*/ TSBaseArray<REALM_INFO>_vtbl
{
  const char *(__thiscall *TSBaseArray<REALM_INFO>::MemFileName)(TSBaseArray<REALM_INFO> *this);
  int (__thiscall *TSBaseArray<REALM_INFO>::MemLineNo)(TSBaseArray<REALM_INFO> *this);
};

/* 1121 */
struct REALM_INFO
{
  unsigned __int8 id;
  char name[256];
  char address[32];
  unsigned int players;
};

/* 1083 */
struct /*VFT*/ TSBaseArray<unsigned char>_vtbl
{
  const char *(__thiscall *TSBaseArray<unsigned char>::MemFileName)(TSBaseArray<unsigned char> *this);
  int (__thiscall *TSBaseArray<unsigned char>::MemLineNo)(TSBaseArray<unsigned char> *this);
};

/* 1084 */
struct /*VFT*/ TSFixedArray<unsigned char>_vtbl
{
  const char *(__thiscall *TSBaseArray<unsigned char>::MemFileName)(struct TSFixedArray<unsigned char> *this);
  int (__thiscall *TSBaseArray<unsigned char>::MemLineNo)(struct TSFixedArray<unsigned char> *this);
};

/* 1086 */
struct /*VFT*/ TSGrowableArray<unsigned char>_vtbl
{
  const char *(__thiscall *TSBaseArray<unsigned char>::MemFileName)(struct TSGrowableArray<unsigned char> *this);
  int (__thiscall *TSBaseArray<unsigned char>::MemLineNo)(struct TSGrowableArray<unsigned char> *this);
};

/* 1089 */
struct /*VFT*/ TSGrowableArray_<unsigned char,1330464594,71>_vtbl
{
  int (__thiscall *TSGrowableArray_<unsigned char,1330464594,71>::MemLineNo)(TSGrowableArray_<unsigned char,1330464594,71> *this);
  int (__thiscall *TSBaseArray<unsigned char>::MemLineNo)(struct TSGrowableArray_<unsigned char,1330464594,71> *this);
};

/* 1098 */
struct /*VFT*/ TSFixedArray<TSExplicitList<C_OBJECTHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<C_OBJECTHASH,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<C_OBJECTHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<C_OBJECTHASH,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<C_OBJECTHASH,-572662307> > *this);
};

/* 1100 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<C_OBJECTHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<C_OBJECTHASH,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<C_OBJECTHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<C_OBJECTHASH,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<C_OBJECTHASH,-572662307> > *this);
};

/* 1111 */
struct /*VFT*/ NetClientRedirect_vtbl
{
  void (__thiscall *NetClientRedirect::WCDataReady)(NetClientRedirect *this, WowConnection *, unsigned int, unsigned __int8 *, int);
  void (__thiscall *WCMessageReady)(struct NetClientRedirect *this, WowConnection *, unsigned int, CDataStore *);
  void (__thiscall *WCConnected)(struct NetClientRedirect *this, WowConnection *, WowConnection *, unsigned int, const NETCONNADDR *);
  void (__thiscall *WCCantConnect)(struct NetClientRedirect *this, WowConnection *, unsigned int, const NETCONNADDR *);
  void (__thiscall *WCDisconnected)(struct NetClientRedirect *this, WowConnection *, unsigned int, const NETCONNADDR *);
  void (__thiscall *WowConnectionResponse::WCGlobalLock)(struct NetClientRedirect *this);
  void (__thiscall *WowConnectionResponse::WCGlobalUnlock)(struct NetClientRedirect *this);
  void (__thiscall *WowConnectionResponse::WCDataReady)(struct NetClientRedirect *this, WowConnection *, unsigned int, unsigned __int8 *, int);
  void (__thiscall *WowConnectionResponse::WCWriteReady)(struct NetClientRedirect *this, WowConnection *);
};

/* 1112 */
struct /*VFT*/ NetClient_vtbl
{
  void (__thiscall *NetClient::WCCantConnect)(NetClient *this, WowConnection *, unsigned int, const NETCONNADDR *);
  void (__thiscall *WCMessageReady)(struct NetClient *this, WowConnection *, unsigned int, CDataStore *);
  void (__thiscall *WCConnected)(struct NetClient *this, WowConnection *, WowConnection *, unsigned int, const NETCONNADDR *);
  void (__thiscall *WCCantConnect)(struct NetClient *this, WowConnection *, unsigned int, const NETCONNADDR *);
  void (__thiscall *WCDisconnected)(struct NetClient *this, WowConnection *, unsigned int, const NETCONNADDR *);
  void (__thiscall *WowConnectionResponse::WCGlobalLock)(struct NetClient *this);
  void (__thiscall *WowConnectionResponse::WCGlobalUnlock)(struct NetClient *this);
  void (__thiscall *WowConnectionResponse::WCDataReady)(struct NetClient *this, WowConnection *, unsigned int, unsigned __int8 *, int);
  void (__thiscall *WowConnectionResponse::WCWriteReady)(struct NetClient *this, WowConnection *);
  int (__thiscall *NetClient::Initialize)(NetClient *this);
  void (__thiscall *NetClient::Destroy)(NetClient *this);
  int (__thiscall *NetClient::DelayedDelete)(NetClient *this);
  int (__thiscall *NetClient::HandleData)(NetClient *this, unsigned int, void *, int);
  int (__thiscall *NetClient::HandleConnect)(NetClient *this);
  int (__thiscall *NetClient::HandleDisconnect)(NetClient *this);
  int (__thiscall *NetClient::HandleCantConnect)(NetClient *this);
};

/* 1117 */
struct /*VFT*/ TSFixedArray<CHARACTER_INFO>_vtbl
{
  const char *(__thiscall *TSBaseArray<CHARACTER_INFO>::MemFileName)(struct TSFixedArray<CHARACTER_INFO> *this);
  int (__thiscall *TSBaseArray<CHARACTER_INFO>::MemLineNo)(struct TSFixedArray<CHARACTER_INFO> *this);
};

/* 1122 */
struct /*VFT*/ TSFixedArray<REALM_INFO>_vtbl
{
  const char *(__thiscall *TSBaseArray<REALM_INFO>::MemFileName)(struct TSFixedArray<REALM_INFO> *this);
  int (__thiscall *TSBaseArray<REALM_INFO>::MemLineNo)(struct TSFixedArray<REALM_INFO> *this);
};

/* 1124 */
struct /*VFT*/ ClientConnection_vtbl
{
  int (__thiscall *ClientConnection::HandleCantConnect)(ClientConnection *this);
  void (__thiscall *WCMessageReady)(struct ClientConnection *this, WowConnection *, unsigned int, CDataStore *);
  void (__thiscall *WCConnected)(struct ClientConnection *this, WowConnection *, WowConnection *, unsigned int, const NETCONNADDR *);
  void (__thiscall *WCCantConnect)(struct ClientConnection *this, WowConnection *, unsigned int, const NETCONNADDR *);
  void (__thiscall *WCDisconnected)(struct ClientConnection *this, WowConnection *, unsigned int, const NETCONNADDR *);
  void (__thiscall *WowConnectionResponse::WCGlobalLock)(struct ClientConnection *this);
  void (__thiscall *WowConnectionResponse::WCGlobalUnlock)(struct ClientConnection *this);
  void (__thiscall *WowConnectionResponse::WCDataReady)(struct ClientConnection *this, WowConnection *, unsigned int, unsigned __int8 *, int);
  void (__thiscall *WowConnectionResponse::WCWriteReady)(struct ClientConnection *this, WowConnection *);
  int (__thiscall *NetClient::Initialize)(struct ClientConnection *this);
  void (__thiscall *NetClient::Destroy)(struct ClientConnection *this);
  int (__thiscall *NetClient::DelayedDelete)(struct ClientConnection *this);
  int (__thiscall *NetClient::HandleData)(struct ClientConnection *this, unsigned int, void *, int);
  int (__thiscall *NetClient::HandleConnect)(struct ClientConnection *this);
  int (__thiscall *NetClient::HandleDisconnect)(struct ClientConnection *this);
  int (__thiscall *NetClient::HandleCantConnect)(struct ClientConnection *this);
  int (__thiscall *ClientConnection::Initialize)(ClientConnection *this, LoginData *);
};

/* 1126 */
struct __cppobj TSBaseArray<CSimpleFontString *>
{
  TSBaseArray<CSimpleFontString *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CSimpleFontString **m_data;
};

/* 1133 */
struct __cppobj TSFixedArray<CSimpleFontString *> : TSBaseArray<CSimpleFontString *>
{
};

/* 1134 */
struct __cppobj TSBaseArray<int>
{
  TSBaseArray<int>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  int *m_data;
};

/* 1137 */
struct __cppobj TSFixedArray<int> : TSBaseArray<int>
{
};

/* 1125 */
struct __cppobj CGTooltip : CSimpleFrame
{
  CLayoutFrame *m_owner;
  TOOLTIP_ANCHORPOINT m_anchorPoint;
  unsigned int m_lines;
  unsigned int m_linesMax;
  int m_reposition;
  TSFixedArray<CSimpleFontString *> m_leftStrings;
  TSFixedArray<CSimpleFontString *> m_rightStrings;
  TSFixedArray<int> m_wrapLine;
  CSimpleStatusBar *m_statusBar;
  unsigned __int64 m_unit;
  unsigned __int64 m_objectGUID;
  unsigned __int64 m_debugUnit;
  unsigned __int64 m_itemGUID;
  unsigned __int64 m_corpseGUID;
  unsigned int m_itemID;
  int m_fading;
  float m_fadeTime;
  float m_padding;
};

/* 1127 */
struct /*VFT*/ TSBaseArray<CSimpleFontString *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CSimpleFontString *>::MemFileName)(TSBaseArray<CSimpleFontString *> *this);
  int (__thiscall *TSBaseArray<CSimpleFontString *>::MemLineNo)(TSBaseArray<CSimpleFontString *> *this);
};

/* 1128 */
struct __cppobj CSimpleFontString : FrameScript_Object, CSimpleRegion
{
  char *m_name;
  unsigned int m_registryContext;
  HTEXTFONT__ *m_font;
  float m_fontHeight;
  int m_textMaxSize;
  int m_textCurSize;
  char *m_text;
  float m_spacing;
  HTEXTBLOCK__ *m_string;
  float m_cachedWidth;
  float m_cachedHeight;
  NTempest::CImVector m_shadowColor;
  NTempest::C2Vector m_shadowOffset;
  NTempest::C2Vector m_justificationOffset;
  int m_alphaGradientStart;
  int m_alphaGradientLength;
  unsigned int m_styleFlags;
};

/* 1135 */
struct /*VFT*/ TSBaseArray<int>_vtbl
{
  const char *(__thiscall *TSBaseArray<int>::MemFileName)(TSBaseArray<int> *this);
  int (__thiscall *TSBaseArray<int>::MemLineNo)(TSBaseArray<int> *this);
};

/* 1138 */
struct __cppobj CSimpleStatusBar : CSimpleFrame
{
  __int32 m_changed : 1;
  __int32 m_rangeSet : 1;
  __int32 m_valueSet : 1;
  float m_minValue;
  float m_maxValue;
  float m_value;
  CSimpleTexture *m_barTexture;
  int m_onValueChanged;
};

/* 1129 */
struct __cppobj HTEXTFONT__ : HOBJECT__
{
  int unused;
};

/* 1130 */
struct __cppobj HTEXTBLOCK__ : HOBJECT__
{
  int unused;
};

/* 1131 */
struct /*VFT*/ CSimpleFontString_vtbl
{
  int (__thiscall *CSimpleFontString::LookupScriptMethod)(CSimpleFontString *this, struct lua_State *, const char *);
  const char *(__thiscall *GetName)(struct CSimpleFontString *this);
};

/* 1132 */
struct /*VFT*/ TSFixedArray<CSimpleFontString *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CSimpleFontString *>::MemFileName)(struct TSFixedArray<CSimpleFontString *> *this);
  int (__thiscall *TSBaseArray<CSimpleFontString *>::MemLineNo)(struct TSFixedArray<CSimpleFontString *> *this);
};

/* 1136 */
struct /*VFT*/ TSFixedArray<int>_vtbl
{
  const char *(__thiscall *TSBaseArray<int>::MemFileName)(struct TSFixedArray<int> *this);
  int (__thiscall *TSBaseArray<int>::MemLineNo)(struct TSFixedArray<int> *this);
};

/* 1139 */
struct /*VFT*/ CSimpleStatusBar_vtbl
{
  int (__thiscall *CSimpleStatusBar::LookupScriptMethod)(CSimpleStatusBar *this, struct lua_State *, const char *);
  const char *(__thiscall *GetName)(struct CSimpleStatusBar *this);
  _BYTE gap8[4];
  void (__thiscall *CSimpleFrame::DelayedDelete)(struct CSimpleStatusBar *this);
  void (__thiscall *CSimpleFrame::PreLoadXML)(struct CSimpleStatusBar *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::LoadXML_Scripts)(struct CSimpleStatusBar *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::PostLoadXML)(struct CSimpleStatusBar *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::SetAlpha)(struct CSimpleStatusBar *this, unsigned __int8);
  int (__thiscall *CSimpleFrame::FrameDefPostInitialize)(struct CSimpleStatusBar *this, unsigned int, void *);
  int (__thiscall *CSimpleFrame::TestHitRect)(struct CSimpleStatusBar *this, const NTempest::C2Vector *);
  void (__thiscall *CSimpleFrame::OnLayerShow)(struct CSimpleStatusBar *this);
  void (__thiscall *CSimpleFrame::OnLayerHide)(struct CSimpleStatusBar *this);
  void (__thiscall *CSimpleFrame::OnLayerUpdate)(struct CSimpleStatusBar *this, float);
  int (__thiscall *CSimpleFrame::OnLayerTrackUpdate)(struct CSimpleStatusBar *this, const CMouseEvent *);
  _BYTE gap38[4];
  void (__thiscall *CSimpleFrame::OnFrameRender)(struct CSimpleStatusBar *this, CRenderBatch *, unsigned int);
  _BYTE gap40[4];
  void (__thiscall *CSimpleFrame::OnLayerCursorEnter)(struct CSimpleStatusBar *this);
  void (__thiscall *CSimpleFrame::OnLayerCursorExit)(struct CSimpleStatusBar *this);
  int (__thiscall *CSimpleFrame::OnLayerIme)(struct CSimpleStatusBar *this, CImeEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDownRepeat)(struct CSimpleStatusBar *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerChar)(struct CSimpleStatusBar *this, CCharEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDown)(struct CSimpleStatusBar *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyUp)(struct CSimpleStatusBar *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseDown)(struct CSimpleStatusBar *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseUp)(struct CSimpleStatusBar *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseWheel)(struct CSimpleStatusBar *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseMoveRelative)(struct CSimpleStatusBar *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStart)(struct CSimpleStatusBar *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStop)(struct CSimpleStatusBar *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnReceiveDrag)(struct CSimpleStatusBar *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::LockHighlight)(struct CSimpleStatusBar *this, int);
  int (__thiscall *CSimpleFrame::HideThis)(struct CSimpleStatusBar *this);
  int (__thiscall *CSimpleFrame::ShowThis)(struct CSimpleStatusBar *this);
  void (__thiscall *CSimpleFrame::ClearChildrenFromSimpleRegistry)(struct CSimpleStatusBar *this);
  void (__thiscall *CSimpleStatusBar::SetValue)(CSimpleStatusBar *this, float);
  void (__thiscall *CSimpleStatusBar::SetStatusBarColor)(CSimpleStatusBar *this, const NTempest::CImVector *);
  float (__thiscall *CSimpleStatusBar::GetAnimValue)(CSimpleStatusBar *this);
};

/* 1140 */
struct /*VFT*/ CGTooltip_vtbl
{
  int (__thiscall *CGTooltip::LookupScriptMethod)(CGTooltip *this, struct lua_State *, const char *);
  const char *(__thiscall *GetName)(struct CGTooltip *this);
  _BYTE gap8[4];
  void (__thiscall *CSimpleFrame::DelayedDelete)(struct CGTooltip *this);
  void (__thiscall *CSimpleFrame::PreLoadXML)(struct CGTooltip *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::LoadXML_Scripts)(struct CGTooltip *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::PostLoadXML)(struct CGTooltip *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::SetAlpha)(struct CGTooltip *this, unsigned __int8);
  int (__thiscall *CSimpleFrame::FrameDefPostInitialize)(struct CGTooltip *this, unsigned int, void *);
  int (__thiscall *CSimpleFrame::TestHitRect)(struct CGTooltip *this, const NTempest::C2Vector *);
  void (__thiscall *CSimpleFrame::OnLayerShow)(struct CGTooltip *this);
  void (__thiscall *CSimpleFrame::OnLayerHide)(struct CGTooltip *this);
  void (__thiscall *CSimpleFrame::OnLayerUpdate)(struct CGTooltip *this, float);
  int (__thiscall *CSimpleFrame::OnLayerTrackUpdate)(struct CGTooltip *this, const CMouseEvent *);
  _BYTE gap38[4];
  void (__thiscall *CSimpleFrame::OnFrameRender)(struct CGTooltip *this, CRenderBatch *, unsigned int);
  _BYTE gap40[4];
  void (__thiscall *CSimpleFrame::OnLayerCursorEnter)(struct CGTooltip *this);
  void (__thiscall *CSimpleFrame::OnLayerCursorExit)(struct CGTooltip *this);
  int (__thiscall *CSimpleFrame::OnLayerIme)(struct CGTooltip *this, CImeEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDownRepeat)(struct CGTooltip *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerChar)(struct CGTooltip *this, CCharEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDown)(struct CGTooltip *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyUp)(struct CGTooltip *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseDown)(struct CGTooltip *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseUp)(struct CGTooltip *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseWheel)(struct CGTooltip *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseMoveRelative)(struct CGTooltip *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStart)(struct CGTooltip *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStop)(struct CGTooltip *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnReceiveDrag)(struct CGTooltip *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::LockHighlight)(struct CGTooltip *this, int);
  int (__thiscall *CSimpleFrame::HideThis)(struct CGTooltip *this);
  int (__thiscall *CSimpleFrame::ShowThis)(struct CGTooltip *this);
  void (__thiscall *CSimpleFrame::ClearChildrenFromSimpleRegistry)(struct CGTooltip *this);
};

/* 1141 */
struct SArchive
{
  SARCHIVE_TYPE m_type;
  void *m_archive;
};

/* 1142 */
struct __cppobj TSStackArray<NTempest::C3Vector>
{
  unsigned int m_maxCount;
  unsigned int m_count;
  NTempest::C3Vector *m_data;
};

/* 1143 */
struct CGObjectData
{
  unsigned __int64 m_guid;
  OBJECT_TYPE m_type;
  int m_entryID;
  float m_scale;
  unsigned int pad;
};

/* 1144 */
struct __cppobj CGObject
{
  unsigned int *m_data;
  CGObjectData *m_obj;
};

/* 1145 */
struct __cppobj CGObject_C : CGObject
{
  CGObject_C_vtbl *__vftable /*VFT*/;
  float m_renderScale;
  HMODEL__ *m_model;
  unsigned int m_highlightTypes;
  float m_objectHeight;
  unsigned int m_worldObject;
  unsigned int m_flags;
  unsigned int m_fadeStartTime;
  unsigned int m_fadeDuration;
  unsigned __int8 m_alpha;
  unsigned __int8 m_startAlpha;
  unsigned __int8 m_endAlpha;
  unsigned __int8 m_maxAlpha;
};

/* 1148 */
struct /*VFT*/ CGObject_C_vtbl
{
  void (__thiscall *CGObject_C::Disable)(CGObject_C *this, int);
  void (__thiscall *CGObject_C::Reenable)(CGObject_C *this);
  void (__thiscall *CGObject_C::PostReenable)(CGObject_C *this);
  CGBag_C *(__thiscall *CGObject_C::GetBag)(CGObject_C *this);
  _BYTE gap10[4];
  NTempest::C3Vector *(__thiscall *CGObject_C::GetPosition)(CGObject_C *this, NTempest::C3Vector *result);
  float (__thiscall *CGObject_C::GetFacing)(CGObject_C *this);
  float (__thiscall *CGObject_C::GetScale)(CGObject_C *this);
  NTempest::C3Vector *(__thiscall *CGObject_C::GetGroundNormal)(CGObject_C *this, NTempest::C3Vector *result);
  HMODEL__ *(__thiscall *CGObject_C::GetCharacterModel)(CGObject_C *this, int *);
  const char *(__thiscall *GetModelFileName)(CGObject_C *this);
  int (__thiscall *CGObject_C::GetSelectionHighlightColor)(CGObject_C *this, NTempest::CImVector *);
  void (__thiscall *CGObject_C::RenderTargetSelection)(CGObject_C *this);
  int (__thiscall *CGObject_C::UpdateModelLoadStatus)(CGObject_C *this);
  int (__thiscall *CGObject_C::UpdateAttachmentLoadStatus)(CGObject_C *this);
  int (__thiscall *CGObject_C::UpdateTexComponentLoadStatus)(CGObject_C *this);
  void (__thiscall *CGObject_C::PreRender)(CGObject_C *this, int, float);
  void (__thiscall *CGObject_C::PreAnimate)(CGObject_C *this, CGWorldFrame *);
  void (__thiscall *CGObject_C::PostAnimate)(CGObject_C *this, CGWorldFrame *);
  void (__thiscall *CGObject_C::GetWorldMatrix)(CGObject_C *this, NTempest::C34Matrix *);
  int (__thiscall *CGObject_C::ShouldRender)(CGObject_C *this, unsigned int);
  void (__thiscall *CGObject_C::ObjectPostAnimate)(CGObject_C *this, float, const NTempest::C3Vector *, const NTempest::C3Vector *) __declspec(align(8));
  void (__thiscall *CGObject_C::UpdateRenderFacing)(CGObject_C *this);
  float (__thiscall *CGObject_C::GetRenderFacing)(CGObject_C *this);
  void (__thiscall *CGObject_C::OnSpecialMountAnim)(CGObject_C *this);
  void (__thiscall *CGObject_C::UpdatePlayerName)(CGObject_C *this);
  int (__thiscall *CGObject_C::IsSolidSelectable)(CGObject_C *this);
  int (__thiscall *CGObject_C::IsSolidCollidable)(CGObject_C *this);
  int (__thiscall *CGObject_C::CanHighlight)(CGObject_C *this);
  int (__thiscall *CGObject_C::CanBeTargetted)(CGObject_C *this);
  int (__thiscall *CGObject_C::FloatingTooltip)(CGObject_C *this);
  void (__thiscall *CGObject_C::OnLeftClick)(CGObject_C *this);
  void (__thiscall *CGObject_C::OnRightClick)(CGObject_C *this);
  NTempest::C34Matrix *(__thiscall *CGObject_C::GetMatrix)(CGObject_C *this, NTempest::C34Matrix *result);
  int (__thiscall *CGObject_C::ShouldFadeIn)(CGObject_C *this);
  const char *(__thiscall *CGObject_C::GetObjectName)(CGObject_C *this);
  int (__thiscall *CGObject_C::GetPageTextID)(CGObject_C *this, void (__fastcall *)(int, const unsigned __int64 *, void *, unsigned __int8));
};

/* 1146 */
struct __cppobj __declspec(align(8)) CGBag
{
  unsigned int *m_slotCount;
  unsigned __int64 *m_slots;
  unsigned __int64 m_guid;
  unsigned __int8 m_isInventory;
};

/* 1147 */
struct __cppobj CGBag_C : CGBag
{
};

/* 1153 */
struct __cppobj TSLink<CMovementData>
{
  TSLink<CMovementData> *m_prevlink;
  CMovementData *m_next;
};

/* 1154 */
struct __cppobj __declspec(align(8)) CMovementData
{
  TSLink<CMovementData> moveLink;
  TSLink<CMovementData> transportLink;
  NTempest::C3Vector m_position;
  float m_facing;
  float m_pitch;
  NTempest::C3Vector m_groundNormal;
  const unsigned __int64 *m_guid;
  unsigned __int64 m_transportGUID;
  unsigned int m_moveFlags;
  NTempest::C3Vector m_anchorPosition;
  float m_anchorFacing;
  float m_anchorPitch;
  unsigned int m_moveStartTime;
  NTempest::C3Vector m_direction;
  NTempest::C2Vector m_direction2d;
  float m_cosAnchorPitch;
  float m_sinAnchorPitch;
  NTempest::C3Vector m_reDirection;
  NTempest::C3Vector m_lastReDirectionSent;
  unsigned int m_fallStartTime;
  float m_fallStartElevation;
  float m_currentSpeed;
  float m_walkSpeed;
  float m_runSpeed;
  float m_swimSpeed;
  float m_turnRate;
  float m_collisionBoxHalfDepth;
  float m_collisionBoxHeight;
  float m_stepUpHeight;
  float m_jumpVelocity;
  CMoveSpline *m_spline;
  float m_waterSurfaceElev;
};

/* 1149 */
struct __cppobj CGUnit
{
  CGUnit_vtbl *__vftable /*VFT*/;
  __declspec(align(8)) CGUnitData *m_unit;
  CMovementData m_move;
};

/* 1150 */
struct /*VFT*/ CGUnit_vtbl
{
  UNITAFFILIATION (__thiscall *CGUnit::GetGUIDAffiliation)(CGUnit *this, unsigned __int64);
};

/* 1151 */
struct VirtualItemInfo
{
  unsigned __int8 m_classID;
  unsigned __int8 m_subclassID;
  unsigned __int8 m_material;
  unsigned __int8 m_inventoryType;
  unsigned __int8 m_sheatheType;
  unsigned __int8 m_padding0;
  unsigned __int8 m_padding1;
  unsigned __int8 m_padding2;
};

/* 1152 */
struct CGUnitData
{
  unsigned __int64 charm;
  unsigned __int64 summon;
  unsigned __int64 charmedBy;
  unsigned __int64 summonedBy;
  unsigned __int64 createdBy;
  unsigned __int64 target;
  unsigned __int64 comboTarget;
  unsigned __int64 channelObject;
  int health;
  int power[4];
  int maxHealth;
  int maxPower[4];
  int level;
  int factionTemplate;
  unsigned __int8 race;
  unsigned __int8 classId;
  unsigned __int8 sex;
  unsigned __int8 displayPower;
  int stats[5];
  int baseStats[5];
  unsigned int virtualItemDisplay[3];
  VirtualItemInfo virtualItemInfo[3];
  unsigned int flags;
  unsigned int coinage;
  int auras[56];
  unsigned __int8 auraFlags[28];
  unsigned int auraState;
  int modDamageDone[6];
  int modDamageTaken[6];
  int modCreatureDamageDone[8];
  unsigned int attackRoundBaseTime[2];
  int resistances[6];
  float boundingRadius;
  float combatReach;
  float weaponReach;
  int displayID;
  int mountDisplayID;
  unsigned __int16 minDamage;
  unsigned __int16 maxDamage;
  int resistanceBuffModsPositive[6];
  int resistanceBuffModsNegative[6];
  int resistanceItemMods[6];
  unsigned __int8 standState;
  unsigned __int8 npcFlags;
  unsigned __int8 shapeshiftForm;
  unsigned __int8 weaponMode;
  unsigned int petNumber;
  unsigned int petNameTimestamp;
  unsigned int petExperience;
  unsigned int petNextLevelExperience;
  unsigned int dynamicFlags;
  unsigned int emoteState;
  int channelSpell;
  int modCastingSpeed;
  int createdBySpell;
  unsigned __int8 comboPoints;
  unsigned __int8 bytepad1;
  unsigned __int8 bytepad2;
  unsigned __int8 bytepad3;
  unsigned int pad;
};

/* 1155 */
struct __cppobj __declspec(align(8)) CMoveSpline::SplineFaceData
{
  NTempest::C3Vector spot;
  unsigned __int64 guid;
  float facing;
};

/* 1158 */
struct __cppobj TSBaseArray<NTempest::C3Vector>
{
  TSBaseArray<NTempest::C3Vector>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  NTempest::C3Vector *m_data;
};

/* 1161 */
struct __cppobj TSFixedArray<NTempest::C3Vector> : TSBaseArray<NTempest::C3Vector>
{
};

/* 1163 */
struct __cppobj TSGrowableArray<NTempest::C3Vector> : TSFixedArray<NTempest::C3Vector>
{
  unsigned int m_chunk;
};

/* 1164 */
struct __cppobj TSBaseArray<float>
{
  TSBaseArray<float>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  float *m_data;
};

/* 1167 */
struct __cppobj TSFixedArray<float> : TSBaseArray<float>
{
};

/* 1169 */
struct __cppobj TSGrowableArray<float> : TSFixedArray<float>
{
  unsigned int m_chunk;
};

/* 1156 */
struct __cppobj NTempest::C3Spline
{
  NTempest::C3Spline_vtbl *__vftable /*VFT*/;
  float cachedLength;
  TSGrowableArray<NTempest::C3Vector> points;
  TSGrowableArray<float> cachedSegLength;
};

/* 1170 */
struct __cppobj NTempest::C3Spline_CatmullRom : NTempest::C3Spline
{
  NTempest::C3Spline_CatmullRom::SPLINE_MODE splineMode;
};

/* 1172 */
struct __cppobj __declspec(align(8)) CMoveSpline
{
  unsigned int flags;
  CMoveSpline::SplineFaceData face;
  unsigned int start;
  unsigned int time;
  NTempest::C3Spline_CatmullRom spline;
};

/* 1157 */
struct /*VFT*/ NTempest::C3Spline_vtbl
{
  float (__thiscall *ILength)(NTempest::C3Spline *this);
  void (__thiscall *IValidateCache)(NTempest::C3Spline *this);
  void (__thiscall *IPosArclength)(NTempest::C3Spline *this, float, NTempest::C3Vector *);
  void (__thiscall *IPosParametric)(NTempest::C3Spline *this, float, NTempest::C3Vector *);
  void (__thiscall *IVelArclength)(NTempest::C3Spline *this, float, NTempest::C3Vector *);
  void (__thiscall *IVelParametric)(NTempest::C3Spline *this, float, NTempest::C3Vector *);
  void (__thiscall *IFrameArclength)(NTempest::C3Spline *this, float, NTempest::C34Matrix *);
  void (__thiscall *NTempest::C3Spline::ISetPoints)(NTempest::C3Spline *this, const NTempest::C3Vector *, unsigned int);
};

/* 1159 */
struct /*VFT*/ TSBaseArray<NTempest::C3Vector>_vtbl
{
  const char *(__thiscall *TSBaseArray<NTempest::C3Vector>::MemFileName)(TSBaseArray<NTempest::C3Vector> *this);
  int (__thiscall *TSBaseArray<NTempest::C3Vector>::MemLineNo)(TSBaseArray<NTempest::C3Vector> *this);
};

/* 1165 */
struct /*VFT*/ TSBaseArray<float>_vtbl
{
  const char *(__thiscall *TSBaseArray<float>::MemFileName)(TSBaseArray<float> *this);
  int (__thiscall *TSBaseArray<float>::MemLineNo)(TSBaseArray<float> *this);
};

/* 1160 */
struct /*VFT*/ TSFixedArray<NTempest::C3Vector>_vtbl
{
  const char *(__thiscall *TSBaseArray<NTempest::C3Vector>::MemFileName)(struct TSFixedArray<NTempest::C3Vector> *this);
  int (__thiscall *TSBaseArray<NTempest::C3Vector>::MemLineNo)(struct TSFixedArray<NTempest::C3Vector> *this);
};

/* 1162 */
struct /*VFT*/ TSGrowableArray<NTempest::C3Vector>_vtbl
{
  const char *(__thiscall *TSBaseArray<NTempest::C3Vector>::MemFileName)(struct TSGrowableArray<NTempest::C3Vector> *this);
  int (__thiscall *TSBaseArray<NTempest::C3Vector>::MemLineNo)(struct TSGrowableArray<NTempest::C3Vector> *this);
};

/* 1166 */
struct /*VFT*/ TSFixedArray<float>_vtbl
{
  const char *(__thiscall *TSBaseArray<float>::MemFileName)(struct TSFixedArray<float> *this);
  int (__thiscall *TSBaseArray<float>::MemLineNo)(struct TSFixedArray<float> *this);
};

/* 1168 */
struct /*VFT*/ TSGrowableArray<float>_vtbl
{
  const char *(__thiscall *TSBaseArray<float>::MemFileName)(struct TSGrowableArray<float> *this);
  int (__thiscall *TSBaseArray<float>::MemLineNo)(struct TSGrowableArray<float> *this);
};

/* 1171 */
struct /*VFT*/ NTempest::C3Spline_CatmullRom_vtbl
{
  void (__thiscall *NTempest::C3Spline_CatmullRom::IFrameArclength)(NTempest::C3Spline_CatmullRom *this, float, NTempest::C34Matrix *);
  void (__thiscall *IValidateCache)(struct NTempest::C3Spline_CatmullRom *this);
  void (__thiscall *IPosArclength)(struct NTempest::C3Spline_CatmullRom *this, float, NTempest::C3Vector *);
  void (__thiscall *IPosParametric)(struct NTempest::C3Spline_CatmullRom *this, float, NTempest::C3Vector *);
  void (__thiscall *IVelArclength)(struct NTempest::C3Spline_CatmullRom *this, float, NTempest::C3Vector *);
  void (__thiscall *IVelParametric)(struct NTempest::C3Spline_CatmullRom *this, float, NTempest::C3Vector *);
  void (__thiscall *IFrameArclength)(struct NTempest::C3Spline_CatmullRom *this, float, NTempest::C34Matrix *);
  void (__thiscall *NTempest::C3Spline::ISetPoints)(struct NTempest::C3Spline_CatmullRom *this, const NTempest::C3Vector *, unsigned int);
};

/* 1186 */
struct __cppobj TSBaseArray<ANIMENDDATA>
{
  TSBaseArray<ANIMENDDATA>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  ANIMENDDATA *m_data;
};

/* 1190 */
struct __cppobj TSFixedArray<ANIMENDDATA> : TSBaseArray<ANIMENDDATA>
{
};

/* 1192 */
struct __cppobj TSGrowableArray<ANIMENDDATA> : TSFixedArray<ANIMENDDATA>
{
  unsigned int m_chunk;
};

/* 1200 */
union $F52479853AEE17A21B5DB603076FB25D
{
  HMODEL__ *theModel;
  unsigned int obj;
};

/* 1201 */
struct __cppobj AuraVisual
{
  int flags;
  unsigned int spellID;
  unsigned int effectID;
  $F52479853AEE17A21B5DB603076FB25D ___u3;
};

/* 1202 */
struct __cppobj TSLink<ACTIVEAURAINFO>
{
  TSLink<ACTIVEAURAINFO> *m_prevlink;
  ACTIVEAURAINFO *m_next;
};

/* 1206 */
struct __cppobj TSList<ACTIVEAURAINFO,TSGetLink<ACTIVEAURAINFO> >
{
  int m_linkoffset;
  TSLink<ACTIVEAURAINFO> m_terminator;
};

/* 1207 */
struct __cppobj TSBaseArray<char>
{
  TSBaseArray<char>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  char *m_data;
};

/* 1210 */
struct __cppobj TSFixedArray<char> : TSBaseArray<char>
{
};

/* 1212 */
struct __cppobj TSGrowableArray<char> : TSFixedArray<char>
{
  unsigned int m_chunk;
};

/* 1213 */
struct __cppobj TSBaseArray<unsigned int>
{
  TSBaseArray<unsigned int>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  unsigned int *m_data;
};

/* 1216 */
struct __cppobj TSFixedArray<unsigned int> : TSBaseArray<unsigned int>
{
};

/* 1218 */
struct __cppobj TSGrowableArray<unsigned int> : TSFixedArray<unsigned int>
{
  unsigned int m_chunk;
};

/* 1219 */
struct __cppobj TSBaseArray<QUESTGIVEREMOTENODE>
{
  TSBaseArray<QUESTGIVEREMOTENODE>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  QUESTGIVEREMOTENODE *m_data;
};

/* 1223 */
struct __cppobj TSFixedArray<QUESTGIVEREMOTENODE> : TSBaseArray<QUESTGIVEREMOTENODE>
{
};

/* 1225 */
struct __cppobj TSGrowableArray<QUESTGIVEREMOTENODE> : TSFixedArray<QUESTGIVEREMOTENODE>
{
  unsigned int m_chunk;
};

/* 1226 */
struct __cppobj TSLink<BLOODSPLATNODE>
{
  TSLink<BLOODSPLATNODE> *m_prevlink;
  BLOODSPLATNODE *m_next;
};

/* 1229 */
struct __cppobj TSList<BLOODSPLATNODE,TSGetLink<BLOODSPLATNODE> >
{
  int m_linkoffset;
  TSLink<BLOODSPLATNODE> m_terminator;
};

/* 1183 */
struct __cppobj TSLink<ANIMQUEUENODE>
{
  TSLink<ANIMQUEUENODE> *m_prevlink;
  ANIMQUEUENODE *m_next;
};

/* 1230 */
struct __cppobj TSList<ANIMQUEUENODE,TSGetLink<ANIMQUEUENODE> >
{
  int m_linkoffset;
  TSLink<ANIMQUEUENODE> m_terminator;
};

/* 1231 */
struct __cppobj CCombat
{
  unsigned __int64 m_victim;
};

/* 1232 */
struct __cppobj CCombatClient : CCombat
{
  int m_attackSent;
  int m_stopSent;
};

/* 1174 */
struct __cppobj LOGBASE
{
  LOGBASE_vtbl *__vftable /*VFT*/;
};

/* 1176 */
struct DamageData
{
  int totalDamage;
  int damageType[5];
  unsigned int minDamage[5];
  unsigned int maxDamage[5];
  float damageFloat[5];
  int damage[5];
  int absorbed[5];
};

/* 1178 */
struct __cppobj DAMAGELOGBASE : LOGBASE
{
  unsigned __int64 attacker;
  unsigned __int64 victim;
  float intellectBonus;
  float DPSScaler;
  float modDamageTaken;
  float modDamageDone;
  float scaledDamage;
  float netDamageMultiplier;
  float maxDamageReduction;
  float scaledArmorReduction;
  float hitRollFloat;
  float hitRollNeededFloat;
  float critRollFloat;
  float critRollNeededFloat;
  unsigned int flags;
  DamageData dmg;
};

/* 1179 */
const struct __cppobj ATTACKROUNDINFO : DAMAGELOGBASE
{
  unsigned int armorReduction;
  VICTIMSTATES newVictimState;
  unsigned int victimRoundDuration;
  float dodgeRollFloat;
  float dodgeRollNeededFloat;
  float parryRollFloat;
  float parryRollNeededFloat;
  float blockRollFloat;
  float blockRollNeededFloat;
  float stunRollFloat;
  float stunRollNeededFloat;
  unsigned int delayTime;
  unsigned int spellDamageAdded;
  unsigned int spellAddedDamage;
  unsigned int sinceLastSwing;
  float dualWieldHitRollFloat;
  float dualWieldHitRollNeededFloat;
  int procSpell;
};

/* 1233 */
struct __cppobj DEBUGHITROLLINFO
{
  ATTACKROUNDINFO attackInfo;
  unsigned int attackFlags;
  float range;
};

/* 1234 */
struct __cppobj __declspec(align(8)) MISSILESTRUCT
{
  CGUnit_C *caster;
  unsigned int spellID;
  unsigned __int64 target;
  NTempest::C3Vector startPosition;
  NTempest::C3Vector destination;
  float speed;
  unsigned int ammoDisplayID;
  int inventoryType;
  unsigned int missileEffect;
  unsigned int missileVictimEffect;
  unsigned int missilePathType;
  unsigned __int8 hits;
  MISS_REASON reason;
  int sound;
};

/* 1242 */
struct __cppobj TSLink<IMPACTEFFECTDESC>
{
  TSLink<IMPACTEFFECTDESC> *m_prevlink;
  IMPACTEFFECTDESC *m_next;
};

/* 1245 */
struct __cppobj TSList<IMPACTEFFECTDESC,TSGetLink<IMPACTEFFECTDESC> >
{
  int m_linkoffset;
  TSLink<IMPACTEFFECTDESC> m_terminator;
};

/* 1246 */
struct __cppobj TSLink<SPELLEFFECTDESC>
{
  TSLink<SPELLEFFECTDESC> *m_prevlink;
  SPELLEFFECTDESC *m_next;
};

/* 1265 */
struct __cppobj TSList<SPELLEFFECTDESC,TSGetLink<SPELLEFFECTDESC> >
{
  int m_linkoffset;
  TSLink<SPELLEFFECTDESC> m_terminator;
};

/* 1251 */
struct __cppobj TSBaseArray<unsigned __int64>
{
  TSBaseArray<unsigned __int64>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  unsigned __int64 *m_data;
};

/* 1254 */
struct __cppobj TSFixedArray<unsigned __int64> : TSBaseArray<unsigned __int64>
{
};

/* 1256 */
struct __cppobj TSGrowableArray<unsigned __int64> : TSFixedArray<unsigned __int64>
{
  unsigned int m_chunk;
};

/* 1173 */
struct __cppobj __declspec(align(8)) CGUnit_C : CGObject_C, CGUnit
{
  int m_questCountKilled;
  int m_questCountNeeded;
  HMODEL__ *m_resEffectModel;
  unsigned __int64 m_meleeTargetDeathHold;
  int m_precastSheatheHoldTimer;
  int m_customAttackSound;
  NTempest::C3Vector m_customAttackPosition;
  unsigned int m_splashSoundID;
  unsigned int m_disengageLookAtTimer;
  TSGrowableArray<ANIMENDDATA> m_animEndCallbackList;
  ANIMENDDATA *m_callbackList[135];
  const CreatureStats_C *m_stats;
  const CreatureDisplayInfoRec *m_displayInfo;
  const CreatureDisplayInfoExtraRec *m_displayInfoExtra;
  const CreatureModelDataRec *m_modelData;
  const CreatureSoundDataRec *m_soundData;
  const CreatureSoundDataRec *m_mountedSoundData;
  const UnitBloodLevelsRec *m_bloodRec;
  AuraVisual m_auraVisual[12];
  TSList<ACTIVEAURAINFO,TSGetLink<ACTIVEAURAINFO> > m_activeAuraInfo;
  ANIMENUMERATION m_pendingImpactAnim;
  HMODEL__ *m_tempCharModel;
  TSGrowableArray<char> m_deathHoldBuffer;
  TSGrowableArray<unsigned int> m_deathHoldBufferIndices;
  int m_lastDeathTime;
  int m_nextDeathHoldCheckTime;
  TSGrowableArray<QUESTGIVEREMOTENODE> m_emoteQueue;
  HMODEL__ *m_interactIconModel;
  TSList<BLOODSPLATNODE,TSGetLink<BLOODSPLATNODE> > m_bloodSplatNodes;
  unsigned int m_nextAllowableBloodPool;
  TSList<ANIMQUEUENODE,TSGetLink<ANIMQUEUENODE> > m_animQueue;
  CCombatClient m_combat;
  ANIMQUEUENODE *m_currentDamageInfo;
  unsigned int m_readySequence;
  unsigned int m_animEndTime;
  unsigned int m_animBaseDuration;
  unsigned int m_animStartTime;
  unsigned int m_flags;
  unsigned int m_animFlags;
  unsigned int m_footprintTextureID;
  unsigned int m_terrain;
  NTempest::C2Vector m_footprintSize;
  float m_footprintParticleScale;
  DEBUGHITROLLINFO m_hitInformation;
  ANIMENUMERATION m_spellPrecastingAnim;
  ANIMENUMERATION m_spellCastingAnim;
  ANIMENUMERATION m_deferredPrecastAnim;
  int m_animatingAura;
  unsigned int m_emoteID;
  unsigned int m_spellCastingEffectKit;
  unsigned int m_spellCastingSoundID;
  int m_spellCastingCameraShakeID;
  MISSILESTRUCT m_spellMissileStruct;
  float m_lastSentFacing;
  float m_lastSentPitch;
  HPLAYERNAME__ *m_unitNameHandle;
  int m_accumulatedXPDrop;
  int m_castingSpell;
  int m_interruptedSpell;
  int m_lastSpellCastAnimTime;
  int m_nextBreath;
  int m_nextMountBreath;
  int m_scriptRegistered;
  float m_displayFacing;
  float m_smoothFacing;
  float m_savedFacingDeltas[4];
  float m_forcedDisplayFacing;
  unsigned int m_deathTime;
  unsigned __int64 m_lastCombatTarget;
  unsigned __int64 m_targetUnit;
  unsigned int m_currentBaseAnimState;
  unsigned int m_currentBaseAnim;
  unsigned int m_currentTorsoAnimState;
  unsigned int m_currentTorsoAnim;
  unsigned int m_currentMountAnimState;
  unsigned int m_currentWoundStartTime;
  unsigned int m_currentWoundAnimDuration;
  unsigned int m_spellFizzleTimer;
  unsigned int m_deathHolds;
  QUEST_GIVER_STATUS m_questGiverStatus;
  NTempest::C3Vector m_serverLoc;
  TSGrowableArray<NTempest::C3Vector> m_debugPathPoints;
  unsigned int m_numDebugPathNodes;
  Sound *m_spellLoopedSound;
  Sound *m_creatureLoopSound;
  unsigned int m_mountedFootprintID;
  NTempest::C2Vector m_mountedFootprintSize;
  HMODEL__ *m_fadingPureMountModel;
  PUREMOUNTFADEMODE m_pureMountFadeMode;
  unsigned int m_pureMountFadeStartTime;
  float m_fadingMountFacing;
  NTempest::C3Vector m_fadingMountPos;
  float m_fadingMountScale;
  const NPCSoundsRec *m_NPCSoundsRec;
  unsigned int m_lastGlobalClickCount;
  unsigned int m_pissedCount;
  unsigned int m_numNPCPissedSounds;
  HCHARGEOSET__ *m_geosetHandle;
  HTEXCOMPONENT__ *m_texComponent;
  unsigned int m_preferredGeosets[15];
  int m_displayHealth;
  TSList<IMPACTEFFECTDESC,TSGetLink<IMPACTEFFECTDESC> > m_impactEffectsDesc;
  TSList<SPELLEFFECTDESC,TSGetLink<SPELLEFFECTDESC> > m_spellEffectLists[11];
  NTempest::C3iVector m_currentEmissive;
  int m_pendingHitSpellID;
  TSGrowableArray<unsigned __int64> m_pendingHitAnimVictims;
  int m_auraFlags[56];
  int m_walkStateAnim;
  int m_standStateAnim;
  float m_baseRadius;
  unsigned int m_ammoDisplayID;
  unsigned int m_ammoInvType;
  unsigned int m_rangedStandTimer;
  ACTIVEATTACHMENTINFO *m_attachments[5];
  ACTIVEATTACHMENTINFO *m_deferredAttachments[5];
  int m_weaponTrails[5];
  HMODEL__ *m_paperDollModel;
  int m_sheatheReasons;
  ANIMENUMERATION m_handAnim[2];
  unsigned int m_deferredSheatheFlags;
  SHEATHEREASONS m_deferredSheatheReason;
  int m_savedChannelSpellID;
  TSGrowableArray<unsigned __int64> m_savedChannelSpellTargets;
  SPELLEFFECTDESC *m_channelSpellEffect;
  const SpellRec *m_shapeShiftPoof;
  FishingLineObject *m_fishingLineObject;
};

/* 1187 */
struct /*VFT*/ TSBaseArray<ANIMENDDATA>_vtbl
{
  const char *(__thiscall *TSBaseArray<ANIMENDDATA>::MemFileName)(TSBaseArray<ANIMENDDATA> *this);
  int (__thiscall *TSBaseArray<ANIMENDDATA>::MemLineNo)(TSBaseArray<ANIMENDDATA> *this);
};

/* 1188 */
struct __declspec(align(8)) ANIMENDDATA
{
  unsigned __int64 unit;
  ANIMENUMERATION animID;
};

/* 1193 */
struct __cppobj CreatureStats
{
  char *m_name[4];
  char *m_title;
  int m_flags;
  int m_creatureType;
  int m_creatureFamily;
};

/* 1194 */
const struct __cppobj CreatureStats_C : CreatureStats
{
};

/* 1195 */
const struct __cppobj CreatureDisplayInfoRec
{
  int m_ID;
  int m_modelID;
  int m_soundID;
  int m_extendedDisplayInfoID;
  float m_creatureModelScale;
  int m_creatureModelAlpha;
  const char *m_textureVariation[3];
  int m_bloodID;
};

/* 1196 */
const struct __cppobj CreatureDisplayInfoExtraRec
{
  int m_ID;
  int m_DisplayRaceID;
  int m_DisplaySexID;
  int m_SkinID;
  int m_FaceID;
  int m_HairStyleID;
  int m_HairColorID;
  int m_FacialHairID;
  int m_NPCItemDisplay[10];
  const char *m_BakeName;
};

/* 1197 */
const struct __cppobj CreatureModelDataRec
{
  int m_ID;
  int m_flags;
  const char *m_ModelName;
  int m_sizeClass;
  float m_modelScale;
  int m_bloodID;
  int m_footprintTextureID;
  float m_footprintTextureLength;
  float m_footprintTextureWidth;
  float m_footprintParticleScale;
  int m_foleyMaterialID;
  int m_footstepShakeSize;
  int m_deathThudShakeSize;
  int m_soundID;
};

/* 1198 */
const struct __cppobj CreatureSoundDataRec
{
  int m_ID;
  int m_soundExertionID;
  int m_soundExertionCriticalID;
  int m_soundInjuryID;
  int m_soundInjuryCriticalID;
  int m_soundInjuryCrushingBlowID;
  int m_soundDeathID;
  int m_soundStunID;
  int m_soundStandID;
  int m_soundFootstepID;
  int m_soundAggroID;
  int m_soundWingFlapID;
  int m_soundWingGlideID;
  int m_soundAlertID;
  int m_soundFidget[4];
  int m_customAttack[4];
  int m_NPCSoundID;
  int m_loopSoundID;
  int m_creatureImpactType;
  int m_soundJumpStartID;
  int m_soundJumpEndID;
};

/* 1199 */
const struct __cppobj UnitBloodLevelsRec
{
  int m_ID;
  int m_Violencelevel[3];
};

/* 1203 */
struct __cppobj TSLinkedNode<ACTIVEAURAINFO>
{
  TSLink<ACTIVEAURAINFO> m_link;
};

/* 1205 */
struct __cppobj ACTIVEAURAINFO : TSLinkedNode<ACTIVEAURAINFO>
{
  int auraSlot;
  const SpellVisualKitRec *stateKitRec;
};

/* 1208 */
struct /*VFT*/ TSBaseArray<char>_vtbl
{
  const char *(__thiscall *TSBaseArray<char>::MemFileName)(TSBaseArray<char> *this);
  int (__thiscall *TSBaseArray<char>::MemLineNo)(TSBaseArray<char> *this);
};

/* 1214 */
struct /*VFT*/ TSBaseArray<unsigned int>_vtbl
{
  const char *(__thiscall *TSBaseArray<unsigned int>::MemFileName)(TSBaseArray<unsigned int> *this);
  int (__thiscall *TSBaseArray<unsigned int>::MemLineNo)(TSBaseArray<unsigned int> *this);
};

/* 1220 */
struct /*VFT*/ TSBaseArray<QUESTGIVEREMOTENODE>_vtbl
{
  const char *(__thiscall *TSBaseArray<QUESTGIVEREMOTENODE>::MemFileName)(TSBaseArray<QUESTGIVEREMOTENODE> *this);
  int (__thiscall *TSBaseArray<QUESTGIVEREMOTENODE>::MemLineNo)(TSBaseArray<QUESTGIVEREMOTENODE> *this);
};

/* 1221 */
struct __cppobj QUESTGIVEREMOTENODE
{
  unsigned int delay;
  unsigned int emoteID;
};

/* 1227 */
struct __cppobj TSLinkedNode<BLOODSPLATNODE>
{
  TSLink<BLOODSPLATNODE> m_link;
};

/* 1228 */
struct __cppobj BLOODSPLATNODE : TSLinkedNode<BLOODSPLATNODE>
{
  unsigned int m_triggerTime;
  NTempest::C3Vector m_position;
};

/* 1185 */
struct __cppobj TSLinkedNode<ANIMQUEUENODE>
{
  TSLink<ANIMQUEUENODE> m_link;
};

/* 1184 */
struct __cppobj ANIMQUEUENODE : TSLinkedNode<ANIMQUEUENODE>
{
  ANIMQUEUETYPE type;
  ATTACKROUNDINFO roundInfo;
};

/* 1175 */
struct /*VFT*/ LOGBASE_vtbl
{
  void (__thiscall *PI)(LOGBASE *this, CDataStore *, int);
  void (__thiscall *UI)(LOGBASE *this, CDataStore *);
};

/* 1235 */
struct __cppobj HPLAYERNAME__ : HOBJECT__
{
  int unused;
};

/* 1236 */
struct __cppobj TSLink<Sound>
{
  TSLink<Sound> *m_prevlink;
  Sound *m_next;
};

/* 1238 */
struct __cppobj TSLinkedNode<Sound>
{
  TSLink<Sound> m_link;
};

/* 1237 */
struct __cppobj __declspec(align(8)) Sound : TSLinkedNode<Sound>
{
  TSLink<Sound> link;
  TSLink<Sound> fadeLink;
  TSLink<Sound> updateLink;
  TSLink<Sound> panningLink;
  TSLink<Sound> cutoffLink;
  TSLink<Sound> stopLink;
  int m_channel;
  void *m_stream;
  unsigned int m_flags;
  unsigned int m_suspendedFlags;
  unsigned int m_fadeStartTime;
  int m_fadeVolume;
  float m_fadeRate;
  float m_panning;
  NTempest::C3Vector m_worldPosition;
  NTempest::C3Vector m_velocity;
  __int64 m_updateHandle;
  float m_cutoffDistanceSquared;
  float m_volume;
  unsigned int m_freq;
  int m_fileNameHashed;
  SOUNDCATEGORIES m_category;
};

/* 1239 */
const struct __cppobj NPCSoundsRec
{
  int m_ID;
  int m_SoundID[4];
};

/* 1240 */
struct __cppobj HCHARGEOSET__ : HOBJECT__
{
  int unused;
};

/* 1241 */
struct __cppobj HTEXCOMPONENT__ : HOBJECT__
{
  int unused;
};

/* 1243 */
struct __cppobj TSLinkedNode<IMPACTEFFECTDESC>
{
  TSLink<IMPACTEFFECTDESC> m_link;
};

/* 1244 */
struct __cppobj IMPACTEFFECTDESC : TSLinkedNode<IMPACTEFFECTDESC>
{
  unsigned __int64 victim;
  unsigned __int64 attacker;
  const SpellVisualKitRec *impactKit;
  int spellID;
};

/* 1247 */
struct __cppobj TSLinkedNode<SPELLEFFECTDESC>
{
  TSLink<SPELLEFFECTDESC> m_link;
};

/* 1264 */
struct __cppobj __unaligned __declspec(align(4)) SPELLEFFECTDESC : TSLinkedNode<SPELLEFFECTDESC>
{
  const SpellVisualKitRec *kitPtr;
  NTempest::CImVector color;
  float scale;
  unsigned int startTime;
  unsigned int fadeInTime;
  unsigned int fadeOutTime;
  unsigned int endTime;
  unsigned int curTime;
  float period;
  int standAnim;
  int walkAnim;
  unsigned __int8 isOneShot;
  __declspec(align(4)) LightningObject *lightningObjs[3];
};

/* 1252 */
struct /*VFT*/ TSBaseArray<unsigned __int64>_vtbl
{
  const char *(__thiscall *TSBaseArray<unsigned __int64>::MemFileName)(TSBaseArray<unsigned __int64> *this);
  int (__thiscall *TSBaseArray<unsigned __int64>::MemLineNo)(TSBaseArray<unsigned __int64> *this);
};

/* 1274 */
struct __cppobj ATTACHMENTMODELINFO
{
  HMODEL__ *model;
  int attachmentPoint;
  int currentLink;
};

/* 1275 */
struct __cppobj ACTIVEATTACHMENTINFO
{
  int inventoryType;
  int flags;
  int invSlot;
  int sheathAttachmentSlot;
  const ItemDisplayInfoRec *displayInfo;
  const ItemVisualsRec *enchantmentVisual;
  ATTACHMENTMODELINFO modelInfo[2];
};

/* 1276 */
const struct __cppobj SpellRec
{
  int m_ID;
  int m_school;
  int m_category;
  int m_castUI;
  int m_attributes;
  int m_attributesEx;
  int m_shapeshiftMask;
  int m_targets;
  int m_targetCreatureType;
  int m_requiresSpellFocus;
  int m_casterAuraState;
  int m_targetAuraState;
  int m_castingTimeIndex;
  int m_recoveryTime;
  int m_categoryRecoveryTime;
  int m_interruptFlags;
  int m_auraInterruptFlags;
  int m_channelInterruptFlags;
  int m_procFlags;
  int m_procChance;
  int m_procCharges;
  int m_maxLevel;
  int m_baseLevel;
  int m_spellLevel;
  int m_durationIndex;
  int m_powerType;
  int m_manaCost;
  int m_manaCostPerLevel;
  int m_manaPerSecond;
  int m_manaPerSecondPerLevel;
  int m_rangeIndex;
  float m_speed;
  int m_modalNextSpell;
  int m_totem[2];
  int m_reagent[8];
  int m_reagentCount[8];
  int m_equippedItemClass;
  int m_equippedItemSubclass;
  int m_effect[3];
  int m_effectDieSides[3];
  int m_effectBaseDice[3];
  int m_effectDicePerLevel[3];
  float m_effectRealPointsPerLevel[3];
  int m_effectBasePoints[3];
  int m_implicitTargetA[3];
  int m_implicitTargetB[3];
  int m_effectRadiusIndex[3];
  int m_effectAura[3];
  int m_effectAuraPeriod[3];
  float m_effectAmplitude[3];
  int m_effectChainTargets[3];
  int m_effectItemType[3];
  int m_effectMiscValue[3];
  int m_effectTriggerSpell[3];
  int m_spellVisualID;
  int m_spellIconID;
  int m_activeIconID;
  int m_spellPriority;
  const char *m_name_lang[8];
  int m_name_flag;
  const char *m_nameSubtext_lang[8];
  int m_nameSubtext_flag;
  const char *m_description_lang[8];
  int m_description_flag;
  int m_manaCostPct;
  int m_startRecoveryCategory;
  int m_startRecoveryTime;
};

/* 1277 */
struct __cppobj TSLink<FishingLineObject>
{
  TSLink<FishingLineObject> *m_prevlink;
  FishingLineObject *m_next;
};

/* 1279 */
struct __cppobj TSLinkedNode<FishingLineObject>
{
  TSLink<FishingLineObject> m_link;
};

/* 1278 */
struct __cppobj __declspec(align(4)) FishingLineObject : TSLinkedNode<FishingLineObject>
{
  unsigned __int64 object;
  unsigned __int64 caster;
  NTempest::CImVector color;
  unsigned __int8 visible;
};

/* 1204 */
const struct __cppobj SpellVisualKitRec
{
  int m_ID;
  int m_kitType;
  int m_anim;
  int m_headEffect;
  int m_chestEffect;
  int m_baseEffect;
  int m_leftHandEffect;
  int m_rightHandEffect;
  int m_breathEffect;
  int m_specialEffect[3];
  int m_characterProcedure;
  float m_characterParam[4];
  int m_soundID;
  int m_shakeID;
};

/* 1248 */
struct __cppobj TSLink<LightningObject>
{
  TSLink<LightningObject> *m_prevlink;
  LightningObject *m_next;
};

/* 1250 */
struct __cppobj TSLinkedNode<LightningObject>
{
  TSLink<LightningObject> m_link;
};

/* 1257 */
struct __cppobj TSBaseArray<LightningObject::Bolt>
{
  TSBaseArray<LightningObject::Bolt>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  LightningObject::Bolt *m_data;
};

/* 1261 */
struct __cppobj TSFixedArray<LightningObject::Bolt> : TSBaseArray<LightningObject::Bolt>
{
};

/* 1263 */
struct __cppobj TSGrowableArray<LightningObject::Bolt> : TSFixedArray<LightningObject::Bolt>
{
  unsigned int m_chunk;
};

/* 1249 */
struct __cppobj LightningObject : TSLinkedNode<LightningObject>
{
  TSGrowableArray<unsigned __int64> guids;
  TSGrowableArray<LightningObject::Bolt> bolts;
  unsigned int deathTime;
  float avgSegLen;
  float width;
  float noiseScale;
  float texCoordScale;
  float duration;
  HTEXTURE__ *texture;
  int spellID;
  unsigned __int8 forever;
  int refCount;
};

/* 1272 */
const struct __cppobj ItemDisplayInfoRec
{
  int m_ID;
  const char *m_modelName[2];
  const char *m_modelTexture[2];
  const char *m_inventoryIcon;
  const char *m_groundModel;
  int m_geosetGroup[4];
  int m_flags;
  int m_spellVisualID;
  int m_groupSoundIndex;
  int m_itemSize;
  int m_helmetGeosetVisID;
  const char *m_texture[8];
  int m_itemVisual;
};

/* 1273 */
const struct __cppobj ItemVisualsRec
{
  int m_ID;
  int m_Slot[5];
};

/* 1258 */
struct /*VFT*/ TSBaseArray<LightningObject::Bolt>_vtbl
{
  const char *(__thiscall *TSBaseArray<LightningObject::Bolt>::MemFileName)(TSBaseArray<LightningObject::Bolt> *this);
  int (__thiscall *TSBaseArray<LightningObject::Bolt>::MemLineNo)(TSBaseArray<LightningObject::Bolt> *this);
};

/* 1259 */
struct LightningObject::Bolt
{
  unsigned __int16 srcGuidSub;
  unsigned __int16 dstGuidSub;
  unsigned int birthTime;
  unsigned int deathTime;
  unsigned int boltID;
};

/* 1177 */
struct /*VFT*/ DAMAGELOGBASE_vtbl
{
  void (__thiscall *PI)(struct DAMAGELOGBASE *this, CDataStore *, int);
  void (__thiscall *UI)(struct DAMAGELOGBASE *this, CDataStore *);
};

/* 1180 */
struct /*VFT*/ ATTACKROUNDINFO_vtbl
{
  void (__thiscall *ATTACKROUNDINFO::UI)(ATTACKROUNDINFO *this, CDataStore *);
  void (__thiscall *UI)(struct ATTACKROUNDINFO *this, CDataStore *);
};

/* 1181 */
const struct __cppobj __declspec(align(8)) MIRRORTIMERDAMAGE : LOGBASE
{
  int damage;
  unsigned __int64 victim;
  int amount;
};

/* 1182 */
struct /*VFT*/ MIRRORTIMERDAMAGE_vtbl
{
  void (__thiscall *MIRRORTIMERDAMAGE::UI)(MIRRORTIMERDAMAGE *this, CDataStore *);
  void (__thiscall *UI)(struct MIRRORTIMERDAMAGE *this, CDataStore *);
};

/* 1189 */
struct /*VFT*/ TSFixedArray<ANIMENDDATA>_vtbl
{
  const char *(__thiscall *TSBaseArray<ANIMENDDATA>::MemFileName)(struct TSFixedArray<ANIMENDDATA> *this);
  int (__thiscall *TSBaseArray<ANIMENDDATA>::MemLineNo)(struct TSFixedArray<ANIMENDDATA> *this);
};

/* 1191 */
struct /*VFT*/ TSGrowableArray<ANIMENDDATA>_vtbl
{
  const char *(__thiscall *TSBaseArray<ANIMENDDATA>::MemFileName)(struct TSGrowableArray<ANIMENDDATA> *this);
  int (__thiscall *TSBaseArray<ANIMENDDATA>::MemLineNo)(struct TSGrowableArray<ANIMENDDATA> *this);
};

/* 1209 */
struct /*VFT*/ TSFixedArray<char>_vtbl
{
  const char *(__thiscall *TSBaseArray<char>::MemFileName)(struct TSFixedArray<char> *this);
  int (__thiscall *TSBaseArray<char>::MemLineNo)(struct TSFixedArray<char> *this);
};

/* 1211 */
struct /*VFT*/ TSGrowableArray<char>_vtbl
{
  const char *(__thiscall *TSBaseArray<char>::MemFileName)(struct TSGrowableArray<char> *this);
  int (__thiscall *TSBaseArray<char>::MemLineNo)(struct TSGrowableArray<char> *this);
};

/* 1215 */
struct /*VFT*/ TSFixedArray<unsigned int>_vtbl
{
  const char *(__thiscall *TSBaseArray<unsigned int>::MemFileName)(struct TSFixedArray<unsigned int> *this);
  int (__thiscall *TSBaseArray<unsigned int>::MemLineNo)(struct TSFixedArray<unsigned int> *this);
};

/* 1217 */
struct /*VFT*/ TSGrowableArray<unsigned int>_vtbl
{
  const char *(__thiscall *TSBaseArray<unsigned int>::MemFileName)(struct TSGrowableArray<unsigned int> *this);
  int (__thiscall *TSBaseArray<unsigned int>::MemLineNo)(struct TSGrowableArray<unsigned int> *this);
};

/* 1222 */
struct /*VFT*/ TSFixedArray<QUESTGIVEREMOTENODE>_vtbl
{
  const char *(__thiscall *TSBaseArray<QUESTGIVEREMOTENODE>::MemFileName)(struct TSFixedArray<QUESTGIVEREMOTENODE> *this);
  int (__thiscall *TSBaseArray<QUESTGIVEREMOTENODE>::MemLineNo)(struct TSFixedArray<QUESTGIVEREMOTENODE> *this);
};

/* 1224 */
struct /*VFT*/ TSGrowableArray<QUESTGIVEREMOTENODE>_vtbl
{
  const char *(__thiscall *TSBaseArray<QUESTGIVEREMOTENODE>::MemFileName)(struct TSGrowableArray<QUESTGIVEREMOTENODE> *this);
  int (__thiscall *TSBaseArray<QUESTGIVEREMOTENODE>::MemLineNo)(struct TSGrowableArray<QUESTGIVEREMOTENODE> *this);
};

/* 1253 */
struct /*VFT*/ TSFixedArray<unsigned __int64>_vtbl
{
  const char *(__thiscall *TSBaseArray<unsigned __int64>::MemFileName)(struct TSFixedArray<unsigned __int64> *this);
  int (__thiscall *TSBaseArray<unsigned __int64>::MemLineNo)(struct TSFixedArray<unsigned __int64> *this);
};

/* 1255 */
struct /*VFT*/ TSGrowableArray<unsigned __int64>_vtbl
{
  const char *(__thiscall *TSBaseArray<unsigned __int64>::MemFileName)(struct TSGrowableArray<unsigned __int64> *this);
  int (__thiscall *TSBaseArray<unsigned __int64>::MemLineNo)(struct TSGrowableArray<unsigned __int64> *this);
};

/* 1260 */
struct /*VFT*/ TSFixedArray<LightningObject::Bolt>_vtbl
{
  const char *(__thiscall *TSBaseArray<LightningObject::Bolt>::MemFileName)(struct TSFixedArray<LightningObject::Bolt> *this);
  int (__thiscall *TSBaseArray<LightningObject::Bolt>::MemLineNo)(struct TSFixedArray<LightningObject::Bolt> *this);
};

/* 1262 */
struct /*VFT*/ TSGrowableArray<LightningObject::Bolt>_vtbl
{
  const char *(__thiscall *TSBaseArray<LightningObject::Bolt>::MemFileName)(struct TSGrowableArray<LightningObject::Bolt> *this);
  int (__thiscall *TSBaseArray<LightningObject::Bolt>::MemLineNo)(struct TSGrowableArray<LightningObject::Bolt> *this);
};

/* 1266 */
struct __cppobj ItemEnchantment
{
  int id;
  int expiration;
  int chargesRemaining;
};

/* 1267 */
struct __cppobj CGItemData
{
  unsigned __int64 m_owner;
  unsigned __int64 m_containedIn;
  unsigned __int64 m_creator;
  unsigned int m_stackCount;
  int m_expiration;
  int m_spellCharges[5];
  __int16 m_staticFlags;
  __int16 m_dynamicFlags;
  ItemEnchantment m_enchantment[5];
  int pad;
};

/* 1268 */
struct __cppobj CGItem
{
  CGItemData *m_item;
};

/* 1269 */
const struct __cppobj CGItem_C : CGObject_C, CGItem
{
  unsigned int m_flags;
  VirtualItemInfo m_itemInfo;
  unsigned int m_expirationTime;
  unsigned int m_enchantmentExpiration[5];
  const ItemGroupSoundsRec *m_soundsRec;
};

/* 1270 */
const struct __cppobj ItemGroupSoundsRec
{
  int m_ID;
  int m_sound[4];
};

/* 1271 */
struct /*VFT*/ CGItem_C_vtbl
{
  const char *(__thiscall *CGItem_C::GetObjectName)(CGItem_C *this);
  void (__thiscall *CGObject_C::Reenable)(struct CGItem_C *this);
  void (__thiscall *CGObject_C::PostReenable)(struct CGItem_C *this);
  CGBag_C *(__thiscall *CGObject_C::GetBag)(struct CGItem_C *this);
  _BYTE gap10[4];
  NTempest::C3Vector *(__thiscall *CGObject_C::GetPosition)(struct CGItem_C *this, NTempest::C3Vector *result);
  float (__thiscall *CGObject_C::GetFacing)(struct CGItem_C *this);
  float (__thiscall *CGObject_C::GetScale)(struct CGItem_C *this);
  NTempest::C3Vector *(__thiscall *CGObject_C::GetGroundNormal)(struct CGItem_C *this, NTempest::C3Vector *result);
  HMODEL__ *(__thiscall *CGObject_C::GetCharacterModel)(struct CGItem_C *this, int *);
  const char *(__thiscall *GetModelFileName)(struct CGItem_C *this);
  int (__thiscall *CGObject_C::GetSelectionHighlightColor)(struct CGItem_C *this, NTempest::CImVector *);
  void (__thiscall *CGObject_C::RenderTargetSelection)(struct CGItem_C *this);
  int (__thiscall *CGObject_C::UpdateModelLoadStatus)(struct CGItem_C *this);
  int (__thiscall *CGObject_C::UpdateAttachmentLoadStatus)(struct CGItem_C *this);
  int (__thiscall *CGObject_C::UpdateTexComponentLoadStatus)(struct CGItem_C *this);
  void (__thiscall *CGObject_C::PreRender)(struct CGItem_C *this, int, float);
  void (__thiscall *CGObject_C::PreAnimate)(struct CGItem_C *this, CGWorldFrame *);
  void (__thiscall *CGObject_C::PostAnimate)(struct CGItem_C *this, CGWorldFrame *);
  void (__thiscall *CGObject_C::GetWorldMatrix)(struct CGItem_C *this, NTempest::C34Matrix *);
  int (__thiscall *CGObject_C::ShouldRender)(struct CGItem_C *this, unsigned int);
  void (__thiscall *CGObject_C::ObjectPostAnimate)(struct CGItem_C *this, float, const NTempest::C3Vector *, const NTempest::C3Vector *) __declspec(align(8));
  void (__thiscall *CGObject_C::UpdateRenderFacing)(struct CGItem_C *this);
  float (__thiscall *CGObject_C::GetRenderFacing)(struct CGItem_C *this);
  void (__thiscall *CGObject_C::OnSpecialMountAnim)(struct CGItem_C *this);
  void (__thiscall *CGObject_C::UpdatePlayerName)(struct CGItem_C *this);
  int (__thiscall *CGObject_C::IsSolidSelectable)(struct CGItem_C *this);
  int (__thiscall *CGObject_C::IsSolidCollidable)(struct CGItem_C *this);
  int (__thiscall *CGObject_C::CanHighlight)(struct CGItem_C *this);
  int (__thiscall *CGObject_C::CanBeTargetted)(struct CGItem_C *this);
  int (__thiscall *CGObject_C::FloatingTooltip)(struct CGItem_C *this);
  void (__thiscall *CGObject_C::OnLeftClick)(struct CGItem_C *this);
  void (__thiscall *CGObject_C::OnRightClick)(struct CGItem_C *this);
  NTempest::C34Matrix *(__thiscall *CGObject_C::GetMatrix)(struct CGItem_C *this, NTempest::C34Matrix *result);
  int (__thiscall *CGObject_C::ShouldFadeIn)(struct CGItem_C *this);
  const char *(__thiscall *CGObject_C::GetObjectName)(struct CGItem_C *this);
  int (__thiscall *CGObject_C::GetPageTextID)(struct CGItem_C *this, void (__fastcall *)(int, const unsigned __int64 *, void *, unsigned __int8));
};

/* 1280 */
struct /*VFT*/ CGUnit_C_vtbl
{
  UNITAFFILIATION (__thiscall *CGUnit_C::GetGUIDAffiliation)(CGUnit_C *this, unsigned __int64);
  void (__thiscall *CGObject_C::Reenable)(struct CGUnit_C *this);
  void (__thiscall *CGObject_C::PostReenable)(struct CGUnit_C *this);
  CGBag_C *(__thiscall *CGObject_C::GetBag)(struct CGUnit_C *this);
  _BYTE gap10[4];
  NTempest::C3Vector *(__thiscall *CGObject_C::GetPosition)(struct CGUnit_C *this, NTempest::C3Vector *result);
  float (__thiscall *CGObject_C::GetFacing)(struct CGUnit_C *this);
  float (__thiscall *CGObject_C::GetScale)(struct CGUnit_C *this);
  NTempest::C3Vector *(__thiscall *CGObject_C::GetGroundNormal)(struct CGUnit_C *this, NTempest::C3Vector *result);
  HMODEL__ *(__thiscall *CGObject_C::GetCharacterModel)(struct CGUnit_C *this, int *);
  const char *(__thiscall *GetModelFileName)(struct CGUnit_C *this);
  int (__thiscall *CGObject_C::GetSelectionHighlightColor)(struct CGUnit_C *this, NTempest::CImVector *);
  void (__thiscall *CGObject_C::RenderTargetSelection)(struct CGUnit_C *this);
  int (__thiscall *CGObject_C::UpdateModelLoadStatus)(struct CGUnit_C *this);
  int (__thiscall *CGObject_C::UpdateAttachmentLoadStatus)(struct CGUnit_C *this);
  int (__thiscall *CGObject_C::UpdateTexComponentLoadStatus)(struct CGUnit_C *this);
  void (__thiscall *CGObject_C::PreRender)(struct CGUnit_C *this, int, float);
  void (__thiscall *CGObject_C::PreAnimate)(struct CGUnit_C *this, CGWorldFrame *);
  void (__thiscall *CGObject_C::PostAnimate)(struct CGUnit_C *this, CGWorldFrame *);
  void (__thiscall *CGObject_C::GetWorldMatrix)(struct CGUnit_C *this, NTempest::C34Matrix *);
  int (__thiscall *CGObject_C::ShouldRender)(struct CGUnit_C *this, unsigned int);
  void (__thiscall *CGObject_C::ObjectPostAnimate)(struct CGUnit_C *this, float, const NTempest::C3Vector *, const NTempest::C3Vector *) __declspec(align(8));
  void (__thiscall *CGObject_C::UpdateRenderFacing)(struct CGUnit_C *this);
  float (__thiscall *CGObject_C::GetRenderFacing)(struct CGUnit_C *this);
  void (__thiscall *CGObject_C::OnSpecialMountAnim)(struct CGUnit_C *this);
  void (__thiscall *CGObject_C::UpdatePlayerName)(struct CGUnit_C *this);
  int (__thiscall *CGObject_C::IsSolidSelectable)(struct CGUnit_C *this);
  int (__thiscall *CGObject_C::IsSolidCollidable)(struct CGUnit_C *this);
  int (__thiscall *CGObject_C::CanHighlight)(struct CGUnit_C *this);
  int (__thiscall *CGObject_C::CanBeTargetted)(struct CGUnit_C *this);
  int (__thiscall *CGObject_C::FloatingTooltip)(struct CGUnit_C *this);
  void (__thiscall *CGObject_C::OnLeftClick)(struct CGUnit_C *this);
  void (__thiscall *CGObject_C::OnRightClick)(struct CGUnit_C *this);
  NTempest::C34Matrix *(__thiscall *CGObject_C::GetMatrix)(struct CGUnit_C *this, NTempest::C34Matrix *result);
  int (__thiscall *CGObject_C::ShouldFadeIn)(struct CGUnit_C *this);
  const char *(__thiscall *CGObject_C::GetObjectName)(struct CGUnit_C *this);
  int (__thiscall *CGObject_C::GetPageTextID)(struct CGUnit_C *this, void (__fastcall *)(int, const unsigned __int64 *, void *, unsigned __int8));
  void (__thiscall *CGUnit_C::GetAFKText)(CGUnit_C *this, char *, int);
  void (__thiscall *CGUnit_C::GetDNDText)(CGUnit_C *this, char *, int);
  void (__thiscall *CGUnit_C::GetGMText)(CGUnit_C *this, char *, int);
  unsigned __int64 (__thiscall *CGUnit_C::GetLocalTarget)(CGUnit_C *this);
  void (__thiscall *CGUnit_C::HandleSpellEventSound)(CGUnit_C *this);
  void (__thiscall *CGUnit_C::CombatLoggingFlagChanged)(CGUnit_C *this);
  unsigned __int64 (__thiscall *CGUnit_C::GetUnitBeingLooted)(CGUnit_C *this);
  void (__thiscall *CGUnit_C::StopAttack)(CGUnit_C *this);
  void (__thiscall *CGUnit_C::OnAttackStart)(CGUnit_C *this, unsigned __int64);
  void (__thiscall *CGUnit_C::OnAttackStop)(CGUnit_C *this, unsigned __int64, int);
  void (__thiscall *CGUnit_C::OnDeath)(CGUnit_C *this);
  void (__thiscall *CGUnit_C::OnDeathAnimate)(CGUnit_C *this);
  void (__thiscall *CGUnit_C::OnGetAttacked)(CGUnit_C *this, unsigned __int64);
  void (__thiscall *CGUnit_C::OnBadAttackFacing)(CGUnit_C *this, unsigned __int64);
  void (__thiscall *CGUnit_C::OnBadAttackTarget)(CGUnit_C *this, unsigned __int64);
  void (__thiscall *CGUnit_C::OnBadAttackPosition)(CGUnit_C *this, unsigned __int64, float);
  void (__thiscall *CGUnit_C::OnNotStanding)(CGUnit_C *this, unsigned __int64);
  void (__thiscall *CGUnit_C::UnitHit)(CGUnit_C *this, VICTIMSTATES, unsigned __int64);
  void (__thiscall *CGUnit_C::OnAttackerStateChange)(CGUnit_C *this, const ATTACKROUNDINFO *);
  void (__thiscall *CGUnit_C::HandleMirrorTimerDamage)(CGUnit_C *this, const MIRRORTIMERDAMAGE *);
  int (__thiscall *CGUnit_C::QueueAnim)(CGUnit_C *this, ANIMQUEUETYPE, const ATTACKROUNDINFO *);
  void (__thiscall *CGUnit_C::ProcessDiscardedAnim)(CGUnit_C *this, ANIMQUEUENODE *, unsigned __int8);
  void (__thiscall *CGUnit_C::ProcessAnim)(CGUnit_C *this, ANIMQUEUENODE *);
  void (__thiscall *CGUnit_C::PlayUnitSound)(CGUnit_C *this, UNITSOUNDTYPE, int);
  void (__thiscall *CGUnit_C::PlayFoleySound)(CGUnit_C *this);
  unsigned int (__thiscall *CGUnit_C::GetImpactType)(CGUnit_C *this);
  const VirtualItemInfo *(__thiscall *CGUnit_C::GetDefendingItem)(CGUnit_C *this);
  void (__thiscall *CGUnit_C::PlayDeathThudCameraShake)(CGUnit_C *this);
  void (__thiscall *CGUnit_C::LootAnimEndHandler)(CGUnit_C *this);
  void (__thiscall *CGUnit_C::RestoreUnit)(CGUnit_C *this);
  void (__thiscall *CGUnit_C::UpdateBaseAnimation)(CGUnit_C *this, unsigned int);
  void (__thiscall *CGUnit_C::StartSpellFizzleTimer)(CGUnit_C *this, int, unsigned int, int);
  void (__thiscall *CGUnit_C::SetTorsoAnimState)(CGUnit_C *this, unsigned int);
  void (__thiscall *CGUnit_C::SetBaseAnimState)(CGUnit_C *this, unsigned int);
  unsigned int (__thiscall *CGUnit_C::DetermineWoundSequence)(CGUnit_C *this);
  void (__thiscall *CGUnit_C::OnFlagChanged)(CGUnit_C *this, unsigned int);
  const VirtualItemInfo *(__thiscall *CGUnit_C::GetVirtualItem)(CGUnit_C *this, unsigned int, unsigned __int8);
  int (__thiscall *CGUnit_C::GetVirtualItemDisplayID)(CGUnit_C *this, unsigned int);
  int (__thiscall *CGUnit_C::ShouldRenderUnitName)(CGUnit_C *this, unsigned int);
  void (__thiscall *CGUnit_C::CommitTexture)(CGUnit_C *this, int);
  unsigned int (__thiscall *CGUnit_C::UpdateUnitNameString)(CGUnit_C *this, unsigned int, unsigned int, char *, unsigned int);
  void (__thiscall *CGUnit_C::OnPickNextStandHandler)(CGUnit_C *this);
  float (__thiscall *CGUnit_C::GetMountScale)(CGUnit_C *this);
  void (__thiscall *CGUnit_C::OnMount)(CGUnit_C *this);
  void (__thiscall *CGUnit_C::OnDismount)(CGUnit_C *this);
  unsigned __int8 (__thiscall *CGUnit_C::CanBeMounted)(CGUnit_C *this);
  void (__thiscall *CGUnit_C::CleanupUnitArtwork)(CGUnit_C *this, int, int);
  void (__thiscall *CGUnit_C::ReinitializeUnitArtwork)(CGUnit_C *this);
  void (__thiscall *CGUnit_C::PostReinitializeArtwork)(CGUnit_C *this);
  void (__thiscall *CGUnit_C::OnStandStateChanged)(CGUnit_C *this, unsigned int, unsigned int);
  void (__thiscall *CGUnit_C::ChangeStandState)(CGUnit_C *this, unsigned int);
  void (__thiscall *CGUnit_C::SetEmoteState)(CGUnit_C *this, unsigned int);
  int (__thiscall *CGUnit_C::GetSpellRank)(CGUnit_C *this, int);
  unsigned __int8 (__thiscall *CGUnit_C::GetDefenseSkillRank)(CGUnit_C *this, int *, int *);
  unsigned __int8 (__thiscall *CGUnit_C::GetAttackSkillRank)(CGUnit_C *this, int, int *, int *);
  void (__thiscall *CGUnit_C::OnLevelChange)(CGUnit_C *this);
  float (__thiscall *CGUnit_C::GetBlockChance)(CGUnit_C *this);
  float (__thiscall *CGUnit_C::GetDodgeChance)(CGUnit_C *this);
  float (__thiscall *CGUnit_C::GetParryChance)(CGUnit_C *this);
  int (__thiscall *CGUnit_C::GetSpellCastingTime)(CGUnit_C *this, int);
  void (__thiscall *CGUnit_C::UpdateObjComponentVisuals)(CGUnit_C *this, const CGItem_C *, const ItemEnchantment *, int);
  void (__thiscall *CGUnit_C::ClearItemVisuals)(CGUnit_C *this, ACTIVEATTACHMENTINFO *);
  void (__thiscall *CGUnit_C::SetItemVisuals)(CGUnit_C *this, ACTIVEATTACHMENTINFO *, const ItemVisualsRec *, unsigned __int8);
  void (__thiscall *CGUnit_C::SetLastWeaponModeSent)(CGUnit_C *this, int);
};

/* 1281 */
struct MirrorSkillInfo
{
  unsigned __int16 m_skillLineID;
  unsigned __int16 m_skillRank;
  unsigned __int16 m_skillMaxRank;
  __int16 m_skillModifier;
  unsigned __int16 m_skillStep;
  unsigned __int16 m_padding;
};

/* 1282 */
struct CQuestLogData
{
  int m_questID;
  int m_questGiverID;
  int m_questRewarderID;
  unsigned int m_questFlags;
  int m_questFailureTime;
  int m_qtyMonsterToKill;
};

/* 1283 */
struct CGPlayerData
{
  unsigned __int64 invSlots[69];
  unsigned __int64 selection;
  unsigned __int64 farsightObject;
  unsigned __int64 duelArbiter;
  unsigned int numInvSlots;
  unsigned int guildID;
  unsigned int guildRank;
  unsigned __int8 skinID;
  unsigned __int8 faceID;
  unsigned __int8 hairStyleID;
  unsigned __int8 hairColorID;
  int XP;
  int nextLevelXP;
  MirrorSkillInfo skillInfo[64];
  unsigned __int8 playerFlags;
  unsigned __int8 facialHairStyleID;
  unsigned __int8 numBankSlots;
  unsigned __int8 padByte;
  CQuestLogData questLog[16];
  int characterPoints[2];
  unsigned int trackCreatureMask;
  unsigned int trackResourceMask;
  unsigned int chatFilters;
  unsigned int duelTeam;
  float blockPercentage;
  float dodgePercentage;
  float parryPercentage;
  int baseMana;
  int guildTimeStamp;
};

/* 1284 */
struct __cppobj CGPlayer
{
  CGPlayerData *m_plyr;
};

/* 1286 */
struct __cppobj TSLink<TRADESKILLLINE>
{
  TSLink<TRADESKILLLINE> *m_prevlink;
  TRADESKILLLINE *m_next;
};

/* 1292 */
struct __cppobj TSList<TRADESKILLLINE,TSGetExplicitLink<TRADESKILLLINE> >
{
  int m_linkoffset;
  TSLink<TRADESKILLLINE> m_terminator;
};

/* 1293 */
struct __cppobj TSExplicitList<TRADESKILLLINE,-572662307> : TSList<TRADESKILLLINE,TSGetExplicitLink<TRADESKILLLINE> >
{
};

/* 1295 */
struct __cppobj TSBaseArray<TSExplicitList<TRADESKILLLINE,-572662307> >
{
  TSBaseArray<TSExplicitList<TRADESKILLLINE,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<TRADESKILLLINE,-572662307> *m_data;
};

/* 1298 */
struct __cppobj TSFixedArray<TSExplicitList<TRADESKILLLINE,-572662307> > : TSBaseArray<TSExplicitList<TRADESKILLLINE,-572662307> >
{
};

/* 1300 */
struct __cppobj TSGrowableArray<TSExplicitList<TRADESKILLLINE,-572662307> > : TSFixedArray<TSExplicitList<TRADESKILLLINE,-572662307> >
{
  unsigned int m_chunk;
};

/* 1291 */
struct __cppobj TSHashTable<TRADESKILLLINE,HASHKEY_NONE>
{
  TSHashTable<TRADESKILLLINE,HASHKEY_NONE>_vtbl *__vftable /*VFT*/;
  TSExplicitList<TRADESKILLLINE,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<TRADESKILLLINE,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 1290 */
struct __cppobj TSGrowableArray<int> : TSFixedArray<int>
{
  unsigned int m_chunk;
};

/* 1301 */
struct TexComponentInfo
{
  int m_displayID;
  unsigned int m_inventoryType;
};

/* 1285 */
struct __cppobj __declspec(align(8)) CGPlayer_C : CGUnit_C, CGPlayer
{
  unsigned int m_framesSinceUpdate;
  unsigned int m_flags;
  int m_lastWeaponModeSent;
  TSHashTable<TRADESKILLLINE,HASHKEY_NONE> m_tradeSkillLines;
  TSGrowableArray<int> m_craftSpells[4];
  int m_craftActivators[4];
  HMODEL__ *m_components[23][36];
  TexComponentInfo m_texComponentInfo[23];
  unsigned __int64 m_lootingUnit;
  unsigned __int64 m_lootingUnitSent;
  CGBag_C m_inventory;
  unsigned __int64 m_lastKillerGUID;
  int m_pendingItemStats;
};

/* 1294 */
struct /*VFT*/ TSHashTable<TRADESKILLLINE,HASHKEY_NONE>_vtbl
{
  void (__thiscall *TSHashTable<TRADESKILLLINE,HASHKEY_NONE>::InternalDelete)(TSHashTable<TRADESKILLLINE,HASHKEY_NONE> *this, TRADESKILLLINE *);
  TRADESKILLLINE *(__thiscall *TSHashTable<TRADESKILLLINE,HASHKEY_NONE>::InternalNew)(TSHashTable<TRADESKILLLINE,HASHKEY_NONE> *this, TSExplicitList<TRADESKILLLINE,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<TRADESKILLLINE,HASHKEY_NONE>)(TSHashTable<TRADESKILLLINE,HASHKEY_NONE> *this);
  void (__thiscall *TSHashTable<TRADESKILLLINE,HASHKEY_NONE>::Destroy)(TSHashTable<TRADESKILLLINE,HASHKEY_NONE> *this);
};

/* 1288 */
struct __cppobj __declspec(align(4)) TSHashObject<TRADESKILLLINE,HASHKEY_NONE>
{
  unsigned int m_hashval;
  TSLink<TRADESKILLLINE> m_linktoslot;
  TSLink<TRADESKILLLINE> m_linktofull;
  HASHKEY_NONE m_key;
};

/* 1287 */
struct __cppobj TRADESKILLLINE : TSHashObject<TRADESKILLLINE,HASHKEY_NONE>
{
  TSGrowableArray<int> spells;
};

/* 1296 */
struct /*VFT*/ TSBaseArray<TSExplicitList<TRADESKILLLINE,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<TRADESKILLLINE,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<TRADESKILLLINE,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<TRADESKILLLINE,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<TRADESKILLLINE,-572662307> > *this);
};

/* 1289 */
struct /*VFT*/ TSGrowableArray<int>_vtbl
{
  const char *(__thiscall *TSBaseArray<int>::MemFileName)(struct TSGrowableArray<int> *this);
  int (__thiscall *TSBaseArray<int>::MemLineNo)(struct TSGrowableArray<int> *this);
};

/* 1297 */
struct /*VFT*/ TSFixedArray<TSExplicitList<TRADESKILLLINE,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<TRADESKILLLINE,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<TRADESKILLLINE,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<TRADESKILLLINE,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<TRADESKILLLINE,-572662307> > *this);
};

/* 1299 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<TRADESKILLLINE,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<TRADESKILLLINE,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<TRADESKILLLINE,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<TRADESKILLLINE,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<TRADESKILLLINE,-572662307> > *this);
};

/* 1302 */
const struct __cppobj ItemStats
{
  int m_class;
  int m_subclass;
  char *m_displayName[4];
  int m_displayInfoID;
  int m_overallQualityID;
  int m_flags;
  int m_buyPrice;
  int m_sellPrice;
  int m_inventoryType;
  int m_allowableClass;
  int m_allowableRace;
  int m_itemLevel;
  int m_requiredLevel;
  int m_requiredSkill;
  int m_requiredSkillRank;
  int m_maxCount;
  int m_stackable;
  int m_containerSlots;
  int m_bonusStat[10];
  int m_bonusAmount[10];
  int m_minDamage[5];
  int m_maxDamage[5];
  int m_damageType[5];
  int m_resistances[6];
  int m_delay;
  int m_ammunitionType;
  int m_maxDurability;
  int m_spellID[5];
  int m_spellTrigger[5];
  int m_spellCharges[5];
  int m_spellCooldown[5];
  int m_spellCategory[5];
  int m_spellCategoryCooldown[5];
  int m_bonding;
  char *m_description;
  int m_pageText;
  int m_languageID;
  int m_pageMaterial;
  int m_startQuestID;
  int m_lockID;
  int m_material;
  int m_sheatheType;
};

/* 1303 */
struct /*VFT*/ CGPlayer_C_vtbl
{
  float (__thiscall *CGPlayer_C::GetParryChance)(CGPlayer_C *this);
  void (__thiscall *CGObject_C::Reenable)(struct CGPlayer_C *this);
  void (__thiscall *CGObject_C::PostReenable)(struct CGPlayer_C *this);
  CGBag_C *(__thiscall *CGObject_C::GetBag)(struct CGPlayer_C *this);
  _BYTE gap10[4];
  NTempest::C3Vector *(__thiscall *CGObject_C::GetPosition)(struct CGPlayer_C *this, NTempest::C3Vector *result);
  float (__thiscall *CGObject_C::GetFacing)(struct CGPlayer_C *this);
  float (__thiscall *CGObject_C::GetScale)(struct CGPlayer_C *this);
  NTempest::C3Vector *(__thiscall *CGObject_C::GetGroundNormal)(struct CGPlayer_C *this, NTempest::C3Vector *result);
  HMODEL__ *(__thiscall *CGObject_C::GetCharacterModel)(struct CGPlayer_C *this, int *);
  const char *(__thiscall *GetModelFileName)(struct CGPlayer_C *this);
  int (__thiscall *CGObject_C::GetSelectionHighlightColor)(struct CGPlayer_C *this, NTempest::CImVector *);
  void (__thiscall *CGObject_C::RenderTargetSelection)(struct CGPlayer_C *this);
  int (__thiscall *CGObject_C::UpdateModelLoadStatus)(struct CGPlayer_C *this);
  int (__thiscall *CGObject_C::UpdateAttachmentLoadStatus)(struct CGPlayer_C *this);
  int (__thiscall *CGObject_C::UpdateTexComponentLoadStatus)(struct CGPlayer_C *this);
  void (__thiscall *CGObject_C::PreRender)(struct CGPlayer_C *this, int, float);
  void (__thiscall *CGObject_C::PreAnimate)(struct CGPlayer_C *this, CGWorldFrame *);
  void (__thiscall *CGObject_C::PostAnimate)(struct CGPlayer_C *this, CGWorldFrame *);
  void (__thiscall *CGObject_C::GetWorldMatrix)(struct CGPlayer_C *this, NTempest::C34Matrix *);
  int (__thiscall *CGObject_C::ShouldRender)(struct CGPlayer_C *this, unsigned int);
  void (__thiscall *CGObject_C::ObjectPostAnimate)(struct CGPlayer_C *this, float, const NTempest::C3Vector *, const NTempest::C3Vector *) __declspec(align(8));
  void (__thiscall *CGObject_C::UpdateRenderFacing)(struct CGPlayer_C *this);
  float (__thiscall *CGObject_C::GetRenderFacing)(struct CGPlayer_C *this);
  void (__thiscall *CGObject_C::OnSpecialMountAnim)(struct CGPlayer_C *this);
  void (__thiscall *CGObject_C::UpdatePlayerName)(struct CGPlayer_C *this);
  int (__thiscall *CGObject_C::IsSolidSelectable)(struct CGPlayer_C *this);
  int (__thiscall *CGObject_C::IsSolidCollidable)(struct CGPlayer_C *this);
  int (__thiscall *CGObject_C::CanHighlight)(struct CGPlayer_C *this);
  int (__thiscall *CGObject_C::CanBeTargetted)(struct CGPlayer_C *this);
  int (__thiscall *CGObject_C::FloatingTooltip)(struct CGPlayer_C *this);
  void (__thiscall *CGObject_C::OnLeftClick)(struct CGPlayer_C *this);
  void (__thiscall *CGObject_C::OnRightClick)(struct CGPlayer_C *this);
  NTempest::C34Matrix *(__thiscall *CGObject_C::GetMatrix)(struct CGPlayer_C *this, NTempest::C34Matrix *result);
  int (__thiscall *CGObject_C::ShouldFadeIn)(struct CGPlayer_C *this);
  const char *(__thiscall *CGObject_C::GetObjectName)(struct CGPlayer_C *this);
  int (__thiscall *CGObject_C::GetPageTextID)(struct CGPlayer_C *this, void (__fastcall *)(int, const unsigned __int64 *, void *, unsigned __int8));
  void (__thiscall *CGUnit_C::GetAFKText)(struct CGPlayer_C *this, char *, int);
  void (__thiscall *CGUnit_C::GetDNDText)(struct CGPlayer_C *this, char *, int);
  void (__thiscall *CGUnit_C::GetGMText)(struct CGPlayer_C *this, char *, int);
  unsigned __int64 (__thiscall *CGUnit_C::GetLocalTarget)(struct CGPlayer_C *this);
  void (__thiscall *CGUnit_C::HandleSpellEventSound)(struct CGPlayer_C *this);
  void (__thiscall *CGUnit_C::CombatLoggingFlagChanged)(struct CGPlayer_C *this);
  unsigned __int64 (__thiscall *CGUnit_C::GetUnitBeingLooted)(struct CGPlayer_C *this);
  void (__thiscall *CGUnit_C::StopAttack)(struct CGPlayer_C *this);
  void (__thiscall *CGUnit_C::OnAttackStart)(struct CGPlayer_C *this, unsigned __int64);
  void (__thiscall *CGUnit_C::OnAttackStop)(struct CGPlayer_C *this, unsigned __int64, int);
  void (__thiscall *CGUnit_C::OnDeath)(struct CGPlayer_C *this);
  void (__thiscall *CGUnit_C::OnDeathAnimate)(struct CGPlayer_C *this);
  void (__thiscall *CGUnit_C::OnGetAttacked)(struct CGPlayer_C *this, unsigned __int64);
  void (__thiscall *CGUnit_C::OnBadAttackFacing)(struct CGPlayer_C *this, unsigned __int64);
  void (__thiscall *CGUnit_C::OnBadAttackTarget)(struct CGPlayer_C *this, unsigned __int64);
  void (__thiscall *CGUnit_C::OnBadAttackPosition)(struct CGPlayer_C *this, unsigned __int64, float);
  void (__thiscall *CGUnit_C::OnNotStanding)(struct CGPlayer_C *this, unsigned __int64);
  void (__thiscall *CGUnit_C::UnitHit)(struct CGPlayer_C *this, VICTIMSTATES, unsigned __int64);
  void (__thiscall *CGUnit_C::OnAttackerStateChange)(struct CGPlayer_C *this, const ATTACKROUNDINFO *);
  void (__thiscall *CGUnit_C::HandleMirrorTimerDamage)(struct CGPlayer_C *this, const MIRRORTIMERDAMAGE *);
  int (__thiscall *CGUnit_C::QueueAnim)(struct CGPlayer_C *this, ANIMQUEUETYPE, const ATTACKROUNDINFO *);
  void (__thiscall *CGUnit_C::ProcessDiscardedAnim)(struct CGPlayer_C *this, ANIMQUEUENODE *, unsigned __int8);
  void (__thiscall *CGUnit_C::ProcessAnim)(struct CGPlayer_C *this, ANIMQUEUENODE *);
  void (__thiscall *CGUnit_C::PlayUnitSound)(struct CGPlayer_C *this, UNITSOUNDTYPE, int);
  void (__thiscall *CGUnit_C::PlayFoleySound)(struct CGPlayer_C *this);
  unsigned int (__thiscall *CGUnit_C::GetImpactType)(struct CGPlayer_C *this);
  const VirtualItemInfo *(__thiscall *CGUnit_C::GetDefendingItem)(struct CGPlayer_C *this);
  void (__thiscall *CGUnit_C::PlayDeathThudCameraShake)(struct CGPlayer_C *this);
  void (__thiscall *CGUnit_C::LootAnimEndHandler)(struct CGPlayer_C *this);
  void (__thiscall *CGUnit_C::RestoreUnit)(struct CGPlayer_C *this);
  void (__thiscall *CGUnit_C::UpdateBaseAnimation)(struct CGPlayer_C *this, unsigned int);
  void (__thiscall *CGUnit_C::StartSpellFizzleTimer)(struct CGPlayer_C *this, int, unsigned int, int);
  void (__thiscall *CGUnit_C::SetTorsoAnimState)(struct CGPlayer_C *this, unsigned int);
  void (__thiscall *CGUnit_C::SetBaseAnimState)(struct CGPlayer_C *this, unsigned int);
  unsigned int (__thiscall *CGUnit_C::DetermineWoundSequence)(struct CGPlayer_C *this);
  void (__thiscall *CGUnit_C::OnFlagChanged)(struct CGPlayer_C *this, unsigned int);
  const VirtualItemInfo *(__thiscall *CGUnit_C::GetVirtualItem)(struct CGPlayer_C *this, unsigned int, unsigned __int8);
  int (__thiscall *CGUnit_C::GetVirtualItemDisplayID)(struct CGPlayer_C *this, unsigned int);
  int (__thiscall *CGUnit_C::ShouldRenderUnitName)(struct CGPlayer_C *this, unsigned int);
  void (__thiscall *CGUnit_C::CommitTexture)(struct CGPlayer_C *this, int);
  unsigned int (__thiscall *CGUnit_C::UpdateUnitNameString)(struct CGPlayer_C *this, unsigned int, unsigned int, char *, unsigned int);
  void (__thiscall *CGUnit_C::OnPickNextStandHandler)(struct CGPlayer_C *this);
  float (__thiscall *CGUnit_C::GetMountScale)(struct CGPlayer_C *this);
  void (__thiscall *CGUnit_C::OnMount)(struct CGPlayer_C *this);
  void (__thiscall *CGUnit_C::OnDismount)(struct CGPlayer_C *this);
  unsigned __int8 (__thiscall *CGUnit_C::CanBeMounted)(struct CGPlayer_C *this);
  void (__thiscall *CGUnit_C::CleanupUnitArtwork)(struct CGPlayer_C *this, int, int);
  void (__thiscall *CGUnit_C::ReinitializeUnitArtwork)(struct CGPlayer_C *this);
  void (__thiscall *CGUnit_C::PostReinitializeArtwork)(struct CGPlayer_C *this);
  void (__thiscall *CGUnit_C::OnStandStateChanged)(struct CGPlayer_C *this, unsigned int, unsigned int);
  void (__thiscall *CGUnit_C::ChangeStandState)(struct CGPlayer_C *this, unsigned int);
  void (__thiscall *CGUnit_C::SetEmoteState)(struct CGPlayer_C *this, unsigned int);
  int (__thiscall *CGUnit_C::GetSpellRank)(struct CGPlayer_C *this, int);
  unsigned __int8 (__thiscall *CGUnit_C::GetDefenseSkillRank)(struct CGPlayer_C *this, int *, int *);
  unsigned __int8 (__thiscall *CGUnit_C::GetAttackSkillRank)(struct CGPlayer_C *this, int, int *, int *);
  void (__thiscall *CGUnit_C::OnLevelChange)(struct CGPlayer_C *this);
  float (__thiscall *CGUnit_C::GetBlockChance)(struct CGPlayer_C *this);
  float (__thiscall *CGUnit_C::GetDodgeChance)(struct CGPlayer_C *this);
  float (__thiscall *CGUnit_C::GetParryChance)(struct CGPlayer_C *this);
  int (__thiscall *CGUnit_C::GetSpellCastingTime)(struct CGPlayer_C *this, int);
  void (__thiscall *CGUnit_C::UpdateObjComponentVisuals)(struct CGPlayer_C *this, const CGItem_C *, const ItemEnchantment *, int);
  void (__thiscall *CGUnit_C::ClearItemVisuals)(struct CGPlayer_C *this, ACTIVEATTACHMENTINFO *);
  void (__thiscall *CGUnit_C::SetItemVisuals)(struct CGPlayer_C *this, ACTIVEATTACHMENTINFO *, const ItemVisualsRec *, unsigned __int8);
  void (__thiscall *CGUnit_C::SetLastWeaponModeSent)(struct CGPlayer_C *this, int);
  _BYTE gap198[4];
  void (__thiscall *CGPlayer_C::ItemReceived)(CGPlayer_C *this, const ItemStats *);
};

/* 1304 */
struct __cppobj COsSharedMemory
{
  void *m_data;
  unsigned int m_size;
  unsigned __int8 m_opaqueData[4];
};

/* 1305 */
struct __cppobj CGxGammaRamp
{
  unsigned __int16 red[256];
  unsigned __int16 green[256];
  unsigned __int16 blue[256];
};

/* 1306 */
struct IRunningObjectTable
{
  IRunningObjectTableVtbl *lpVtbl /*VFT*/;
};

/* 1330 */
struct /*VFT*/ IRunningObjectTableVtbl
{
  int (__stdcall *QueryInterface)(IRunningObjectTable *, const _GUID *const, void **);
  unsigned int (__stdcall *AddRef)(IRunningObjectTable *);
  unsigned int (__stdcall *Release)(IRunningObjectTable *);
  int (__stdcall *Register)(IRunningObjectTable *, unsigned int, IUnknown *, IMoniker *, unsigned int *);
  int (__stdcall *Revoke)(IRunningObjectTable *, unsigned int);
  int (__stdcall *IsRunning)(IRunningObjectTable *, IMoniker *);
  int (__stdcall *GetObjectA)(IRunningObjectTable *, IMoniker *, IUnknown **);
  int (__stdcall *NoteChangeTime)(IRunningObjectTable *, unsigned int, _FILETIME *);
  int (__stdcall *GetTimeOfLastChange)(IRunningObjectTable *, IMoniker *, _FILETIME *);
  int (__stdcall *EnumRunning)(IRunningObjectTable *, IEnumMoniker **);
};

/* 1307 */
struct __cppobj IUnknown
{
  IUnknown_vtbl *__vftable /*VFT*/;
};

/* 1309 */
struct IMoniker
{
  IMonikerVtbl *lpVtbl /*VFT*/;
};

/* 1324 */
struct IEnumMoniker
{
  IEnumMonikerVtbl *lpVtbl /*VFT*/;
};

/* 1308 */
struct /*VFT*/ IUnknown_vtbl
{
  int (__stdcall *QueryInterface)(IUnknown *this, const _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
};

/* 1328 */
struct /*VFT*/ IMonikerVtbl
{
  int (__stdcall *QueryInterface)(IMoniker *, const _GUID *const, void **);
  unsigned int (__stdcall *AddRef)(IMoniker *);
  unsigned int (__stdcall *Release)(IMoniker *);
  int (__stdcall *GetClassID)(IMoniker *, _GUID *);
  int (__stdcall *IsDirty)(IMoniker *);
  int (__stdcall *Load)(IMoniker *, IStream *);
  int (__stdcall *Save)(IMoniker *, IStream *, int);
  int (__stdcall *GetSizeMax)(IMoniker *, _ULARGE_INTEGER *);
  int (__stdcall *BindToObject)(IMoniker *, IBindCtx *, IMoniker *, const _GUID *const, void **);
  int (__stdcall *BindToStorage)(IMoniker *, IBindCtx *, IMoniker *, const _GUID *const, void **);
  int (__stdcall *Reduce)(IMoniker *, IBindCtx *, unsigned int, IMoniker **, IMoniker **);
  int (__stdcall *ComposeWith)(IMoniker *, IMoniker *, int, IMoniker **);
  int (__stdcall *Enum)(IMoniker *, int, IEnumMoniker **);
  int (__stdcall *IsEqual)(IMoniker *, IMoniker *);
  int (__stdcall *Hash)(IMoniker *, unsigned int *);
  int (__stdcall *IsRunning)(IMoniker *, IBindCtx *, IMoniker *, IMoniker *);
  int (__stdcall *GetTimeOfLastChange)(IMoniker *, IBindCtx *, IMoniker *, _FILETIME *);
  int (__stdcall *Inverse)(IMoniker *, IMoniker **);
  int (__stdcall *CommonPrefixWith)(IMoniker *, IMoniker *, IMoniker **);
  int (__stdcall *RelativePathTo)(IMoniker *, IMoniker *, IMoniker **);
  int (__stdcall *GetDisplayName)(IMoniker *, IBindCtx *, IMoniker *, unsigned __int16 **);
  int (__stdcall *ParseDisplayName)(IMoniker *, IBindCtx *, IMoniker *, unsigned __int16 *, unsigned int *, IMoniker **);
  int (__stdcall *IsSystemMoniker)(IMoniker *, unsigned int *);
};

/* 1326 */
struct /*VFT*/ IEnumMonikerVtbl
{
  int (__stdcall *QueryInterface)(IEnumMoniker *, const _GUID *const, void **);
  unsigned int (__stdcall *AddRef)(IEnumMoniker *);
  unsigned int (__stdcall *Release)(IEnumMoniker *);
  int (__stdcall *Next)(IEnumMoniker *, unsigned int, IMoniker **, unsigned int *);
  int (__stdcall *Skip)(IEnumMoniker *, unsigned int);
  int (__stdcall *Reset)(IEnumMoniker *);
  int (__stdcall *Clone)(IEnumMoniker *, IEnumMoniker **);
};

/* 1310 */
struct __cppobj ISequentialStream : IUnknown
{
};

/* 1314 */
struct __cppobj IStream : ISequentialStream
{
};

/* 1312 */
struct $B950AFB169DC87688B328897744C612F
{
  unsigned int LowPart;
  unsigned int HighPart;
};

/* 1313 */
union _ULARGE_INTEGER
{
  $B950AFB169DC87688B328897744C612F __s0;
  $B950AFB169DC87688B328897744C612F u;
  unsigned __int64 QuadPart;
};

/* 1317 */
struct IBindCtx
{
  IBindCtxVtbl *lpVtbl /*VFT*/;
};

/* 1323 */
struct /*VFT*/ IBindCtxVtbl
{
  int (__stdcall *QueryInterface)(IBindCtx *, const _GUID *const, void **);
  unsigned int (__stdcall *AddRef)(IBindCtx *);
  unsigned int (__stdcall *Release)(IBindCtx *);
  int (__stdcall *RegisterObjectBound)(IBindCtx *, IUnknown *);
  int (__stdcall *RevokeObjectBound)(IBindCtx *, IUnknown *);
  int (__stdcall *ReleaseBoundObjects)(IBindCtx *);
  int (__stdcall *SetBindOptions)(IBindCtx *, tagBIND_OPTS *);
  int (__stdcall *GetBindOptions)(IBindCtx *, tagBIND_OPTS *);
  int (__stdcall *GetRunningObjectTable)(IBindCtx *, IRunningObjectTable **);
  int (__stdcall *RegisterObjectParam)(IBindCtx *, unsigned __int16 *, IUnknown *);
  int (__stdcall *GetObjectParam)(IBindCtx *, unsigned __int16 *, IUnknown **);
  int (__stdcall *EnumObjectParam)(IBindCtx *, IEnumString **);
  int (__stdcall *RevokeObjectParam)(IBindCtx *, unsigned __int16 *);
};

/* 1318 */
struct tagBIND_OPTS
{
  unsigned int cbStruct;
  unsigned int grfFlags;
  unsigned int grfMode;
  unsigned int dwTickCountDeadline;
};

/* 1319 */
struct IEnumString
{
  IEnumStringVtbl *lpVtbl /*VFT*/;
};

/* 1321 */
struct /*VFT*/ IEnumStringVtbl
{
  int (__stdcall *QueryInterface)(IEnumString *, const _GUID *const, void **);
  unsigned int (__stdcall *AddRef)(IEnumString *);
  unsigned int (__stdcall *Release)(IEnumString *);
  int (__stdcall *Next)(IEnumString *, unsigned int, unsigned __int16 **, unsigned int *);
  int (__stdcall *Skip)(IEnumString *, unsigned int);
  int (__stdcall *Reset)(IEnumString *);
  int (__stdcall *Clone)(IEnumString *, IEnumString **);
};

/* 1311 */
struct /*VFT*/ ISequentialStream_vtbl
{
  int (__stdcall *QueryInterface)(IUnknown *this, const _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
  int (__stdcall *Read)(ISequentialStream *this, void *, unsigned int, unsigned int *);
  int (__stdcall *Write)(ISequentialStream *this, const void *, unsigned int, unsigned int *);
};

/* 1315 */
struct tagSTATSTG
{
  unsigned __int16 *pwcsName;
  unsigned int type;
  _ULARGE_INTEGER cbSize;
  _FILETIME mtime;
  _FILETIME ctime;
  _FILETIME atime;
  unsigned int grfMode;
  unsigned int grfLocksSupported;
  _GUID clsid;
  unsigned int grfStateBits;
  unsigned int reserved;
};

/* 1316 */
struct /*VFT*/ IStream_vtbl
{
  int (__stdcall *QueryInterface)(IUnknown *this, const _GUID *, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *this);
  unsigned int (__stdcall *Release)(IUnknown *this);
  int (__stdcall *Read)(ISequentialStream *this, void *, unsigned int, unsigned int *);
  int (__stdcall *Write)(ISequentialStream *this, const void *, unsigned int, unsigned int *);
  int (__stdcall *Seek)(IStream *this, _LARGE_INTEGER, unsigned int, _ULARGE_INTEGER *);
  int (__stdcall *SetSize)(IStream *this, _ULARGE_INTEGER);
  int (__stdcall *CopyTo)(IStream *this, IStream *, _ULARGE_INTEGER, _ULARGE_INTEGER *, _ULARGE_INTEGER *);
  int (__stdcall *Commit)(IStream *this, unsigned int);
  int (__stdcall *Revert)(IStream *this);
  int (__stdcall *LockRegion)(IStream *this, _ULARGE_INTEGER, _ULARGE_INTEGER, unsigned int);
  int (__stdcall *UnlockRegion)(IStream *this, _ULARGE_INTEGER, _ULARGE_INTEGER, unsigned int);
  int (__stdcall *Stat)(IStream *this, tagSTATSTG *, unsigned int);
  int (__stdcall *Clone)(IStream *this, IStream **);
};

/* 1320 */
typedef IEnumStringVtbl IEnumString_vtbl;

/* 1322 */
typedef IBindCtxVtbl IBindCtx_vtbl;

/* 1325 */
typedef IEnumMonikerVtbl IEnumMoniker_vtbl;

/* 1327 */
typedef IMonikerVtbl IMoniker_vtbl;

/* 1329 */
typedef IRunningObjectTableVtbl IRunningObjectTable_vtbl;

/* 1331 */
struct IEnumSTATSTG
{
  IEnumSTATSTGVtbl *lpVtbl /*VFT*/;
};

/* 1333 */
struct /*VFT*/ IEnumSTATSTGVtbl
{
  int (__stdcall *QueryInterface)(IEnumSTATSTG *, const _GUID *const, void **);
  unsigned int (__stdcall *AddRef)(IEnumSTATSTG *);
  unsigned int (__stdcall *Release)(IEnumSTATSTG *);
  int (__stdcall *Next)(IEnumSTATSTG *, unsigned int, tagSTATSTG *, unsigned int *);
  int (__stdcall *Skip)(IEnumSTATSTG *, unsigned int);
  int (__stdcall *Reset)(IEnumSTATSTG *);
  int (__stdcall *Clone)(IEnumSTATSTG *, IEnumSTATSTG **);
};

/* 1332 */
typedef IEnumSTATSTGVtbl IEnumSTATSTG_vtbl;

/* 1334 */
struct /*VFT*/ IStreamVtbl
{
  int (__stdcall *QueryInterface)(IStream *, const _GUID *const, void **);
  unsigned int (__stdcall *AddRef)(IStream *);
  unsigned int (__stdcall *Release)(IStream *);
  int (__stdcall *Read)(IStream *, void *, unsigned int, unsigned int *);
  int (__stdcall *Write)(IStream *, const void *, unsigned int, unsigned int *);
  int (__stdcall *Seek)(IStream *, _LARGE_INTEGER, unsigned int, _ULARGE_INTEGER *);
  int (__stdcall *SetSize)(IStream *, _ULARGE_INTEGER);
  int (__stdcall *CopyTo)(IStream *, IStream *, _ULARGE_INTEGER, _ULARGE_INTEGER *, _ULARGE_INTEGER *);
  int (__stdcall *Commit)(IStream *, unsigned int);
  int (__stdcall *Revert)(IStream *);
  int (__stdcall *LockRegion)(IStream *, _ULARGE_INTEGER, _ULARGE_INTEGER, unsigned int);
  int (__stdcall *UnlockRegion)(IStream *, _ULARGE_INTEGER, _ULARGE_INTEGER, unsigned int);
  int (__stdcall *Stat)(IStream *, tagSTATSTG *, unsigned int);
  int (__stdcall *Clone)(IStream *, IStream **);
};

/* 1335 */
struct IEnumFORMATETC
{
  IEnumFORMATETCVtbl *lpVtbl /*VFT*/;
};

/* 1339 */
struct /*VFT*/ IEnumFORMATETCVtbl
{
  int (__stdcall *QueryInterface)(IEnumFORMATETC *, const _GUID *const, void **);
  unsigned int (__stdcall *AddRef)(IEnumFORMATETC *);
  unsigned int (__stdcall *Release)(IEnumFORMATETC *);
  int (__stdcall *Next)(IEnumFORMATETC *, unsigned int, tagFORMATETC *, unsigned int *);
  int (__stdcall *Skip)(IEnumFORMATETC *, unsigned int);
  int (__stdcall *Reset)(IEnumFORMATETC *);
  int (__stdcall *Clone)(IEnumFORMATETC *, IEnumFORMATETC **);
};

/* 1337 */
struct tagFORMATETC
{
  unsigned __int16 cfFormat;
  tagDVTARGETDEVICE *ptd;
  unsigned int dwAspect;
  int lindex;
  unsigned int tymed;
};

/* 1336 */
struct __declspec(align(4)) tagDVTARGETDEVICE
{
  unsigned int tdSize;
  unsigned __int16 tdDriverNameOffset;
  unsigned __int16 tdDeviceNameOffset;
  unsigned __int16 tdPortNameOffset;
  unsigned __int16 tdExtDevmodeOffset;
  unsigned __int8 tdData[1];
};

/* 1338 */
typedef IEnumFORMATETCVtbl IEnumFORMATETC_vtbl;

/* 1340 */
struct /*VFT*/ IUnknownVtbl
{
  int (__stdcall *QueryInterface)(IUnknown *, const _GUID *const, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *);
  unsigned int (__stdcall *Release)(IUnknown *);
};

/* 1341 */
struct IEnumUnknown
{
  IEnumUnknownVtbl *lpVtbl /*VFT*/;
};

/* 1343 */
struct /*VFT*/ IEnumUnknownVtbl
{
  int (__stdcall *QueryInterface)(IEnumUnknown *, const _GUID *const, void **);
  unsigned int (__stdcall *AddRef)(IEnumUnknown *);
  unsigned int (__stdcall *Release)(IEnumUnknown *);
  int (__stdcall *Next)(IEnumUnknown *, unsigned int, IUnknown **, unsigned int *);
  int (__stdcall *Skip)(IEnumUnknown *, unsigned int);
  int (__stdcall *Reset)(IEnumUnknown *);
  int (__stdcall *Clone)(IEnumUnknown *, IEnumUnknown **);
};

/* 1342 */
typedef IEnumUnknownVtbl IEnumUnknown_vtbl;

/* 1344 */
struct HENHMETAFILE__
{
  int unused;
};

/* 1345 */
struct IStorage
{
  IStorageVtbl *lpVtbl /*VFT*/;
};

/* 1347 */
struct /*VFT*/ IStorageVtbl
{
  int (__stdcall *QueryInterface)(IStorage *, const _GUID *const, void **);
  unsigned int (__stdcall *AddRef)(IStorage *);
  unsigned int (__stdcall *Release)(IStorage *);
  int (__stdcall *CreateStream)(IStorage *, const unsigned __int16 *, unsigned int, unsigned int, unsigned int, IStream **);
  int (__stdcall *OpenStream)(IStorage *, const unsigned __int16 *, void *, unsigned int, unsigned int, IStream **);
  int (__stdcall *CreateStorage)(IStorage *, const unsigned __int16 *, unsigned int, unsigned int, unsigned int, IStorage **);
  int (__stdcall *OpenStorage)(IStorage *, const unsigned __int16 *, IStorage *, unsigned int, unsigned __int16 **, unsigned int, IStorage **);
  int (__stdcall *CopyTo)(IStorage *, unsigned int, const _GUID *, unsigned __int16 **, IStorage *);
  int (__stdcall *MoveElementTo)(IStorage *, const unsigned __int16 *, IStorage *, const unsigned __int16 *, unsigned int);
  int (__stdcall *Commit)(IStorage *, unsigned int);
  int (__stdcall *Revert)(IStorage *);
  int (__stdcall *EnumElements)(IStorage *, unsigned int, void *, unsigned int, IEnumSTATSTG **);
  int (__stdcall *DestroyElement)(IStorage *, const unsigned __int16 *);
  int (__stdcall *RenameElement)(IStorage *, const unsigned __int16 *, const unsigned __int16 *);
  int (__stdcall *SetElementTimes)(IStorage *, const unsigned __int16 *, const _FILETIME *, const _FILETIME *, const _FILETIME *);
  int (__stdcall *SetClass)(IStorage *, const _GUID *const);
  int (__stdcall *SetStateBits)(IStorage *, unsigned int, unsigned int);
  int (__stdcall *Stat)(IStorage *, tagSTATSTG *, unsigned int);
};

/* 1346 */
typedef IStorageVtbl IStorage_vtbl;

/* 1348 */
union $1A6F60C318B14C845C713567DE52C4CF
{
  HBITMAP__ *hBitmap;
  void *hMetaFilePict;
  HENHMETAFILE__ *hEnhMetaFile;
  void *hGlobal;
  unsigned __int16 *lpszFileName;
  IStream *pstm;
  IStorage *pstg;
};

/* 1349 */
struct tagSTGMEDIUM
{
  unsigned int tymed;
  $1A6F60C318B14C845C713567DE52C4CF ___u1;
  IUnknown *pUnkForRelease;
};

/* 1350 */
struct __unaligned __declspec(align(2)) DLGTEMPLATE
{
  unsigned int style;
  unsigned int dwExtendedStyle;
  unsigned __int16 cdit;
  __int16 x;
  __int16 y;
  __int16 cx;
  __int16 cy;
};

/* 1351 */
struct tagPALETTEENTRY
{
  unsigned __int8 peRed;
  unsigned __int8 peGreen;
  unsigned __int8 peBlue;
  unsigned __int8 peFlags;
};

/* 1353 */
union $7493F0A2EEA481D1BDF0F7368B5E19ED
{
  const unsigned __int16 *pszTemplate;
  const DLGTEMPLATE *pResource;
};

/* 1354 */
union $40BC5FC92C6A3FB6B6316A91A61A5350
{
  HICON__ *hIcon;
  const unsigned __int16 *pszIcon;
};

/* 1352 */
struct _PROPSHEETPAGEW
{
  unsigned int dwSize;
  unsigned int dwFlags;
  HINSTANCE__ *hInstance;
  $7493F0A2EEA481D1BDF0F7368B5E19ED ___u3;
  $40BC5FC92C6A3FB6B6316A91A61A5350 ___u4;
  const unsigned __int16 *pszTitle;
  int (__stdcall *pfnDlgProc)(HWND__ *, unsigned int, unsigned int, int);
  int lParam;
  unsigned int (__stdcall *pfnCallback)(HWND__ *, unsigned int, _PROPSHEETPAGEW *);
  unsigned int *pcRefParent;
  const unsigned __int16 *pszHeaderTitle;
  const unsigned __int16 *pszHeaderSubTitle;
  void *hActCtx;
};

/* 1355 */
struct IDataObject
{
  IDataObjectVtbl *lpVtbl /*VFT*/;
};

/* 1364 */
struct /*VFT*/ IDataObjectVtbl
{
  int (__stdcall *QueryInterface)(IDataObject *, const _GUID *const, void **);
  unsigned int (__stdcall *AddRef)(IDataObject *);
  unsigned int (__stdcall *Release)(IDataObject *);
  int (__stdcall *GetData)(IDataObject *, tagFORMATETC *, tagSTGMEDIUM *);
  int (__stdcall *GetDataHere)(IDataObject *, tagFORMATETC *, tagSTGMEDIUM *);
  int (__stdcall *QueryGetData)(IDataObject *, tagFORMATETC *);
  int (__stdcall *GetCanonicalFormatEtc)(IDataObject *, tagFORMATETC *, tagFORMATETC *);
  int (__stdcall *SetData)(IDataObject *, tagFORMATETC *, tagSTGMEDIUM *, int);
  int (__stdcall *EnumFormatEtc)(IDataObject *, unsigned int, IEnumFORMATETC **);
  int (__stdcall *DAdvise)(IDataObject *, tagFORMATETC *, unsigned int, IAdviseSink *, unsigned int *);
  int (__stdcall *DUnadvise)(IDataObject *, unsigned int);
  int (__stdcall *EnumDAdvise)(IDataObject *, IEnumSTATDATA **);
};

/* 1356 */
struct IAdviseSink
{
  IAdviseSinkVtbl *lpVtbl /*VFT*/;
};

/* 1359 */
struct IEnumSTATDATA
{
  IEnumSTATDATAVtbl *lpVtbl /*VFT*/;
};

/* 1358 */
struct /*VFT*/ IAdviseSinkVtbl
{
  int (__stdcall *QueryInterface)(IAdviseSink *, const _GUID *const, void **);
  unsigned int (__stdcall *AddRef)(IAdviseSink *);
  unsigned int (__stdcall *Release)(IAdviseSink *);
  void (__stdcall *OnDataChange)(IAdviseSink *, tagFORMATETC *, tagSTGMEDIUM *);
  void (__stdcall *OnViewChange)(IAdviseSink *, unsigned int, int);
  void (__stdcall *OnRename)(IAdviseSink *, IMoniker *);
  void (__stdcall *OnSave)(IAdviseSink *);
  void (__stdcall *OnClose)(IAdviseSink *);
};

/* 1362 */
struct /*VFT*/ IEnumSTATDATAVtbl
{
  int (__stdcall *QueryInterface)(IEnumSTATDATA *, const _GUID *const, void **);
  unsigned int (__stdcall *AddRef)(IEnumSTATDATA *);
  unsigned int (__stdcall *Release)(IEnumSTATDATA *);
  int (__stdcall *Next)(IEnumSTATDATA *, unsigned int, tagSTATDATA *, unsigned int *);
  int (__stdcall *Skip)(IEnumSTATDATA *, unsigned int);
  int (__stdcall *Reset)(IEnumSTATDATA *);
  int (__stdcall *Clone)(IEnumSTATDATA *, IEnumSTATDATA **);
};

/* 1360 */
struct tagSTATDATA
{
  tagFORMATETC formatetc;
  unsigned int advf;
  IAdviseSink *pAdvSink;
  unsigned int dwConnection;
};

/* 1357 */
typedef IAdviseSinkVtbl IAdviseSink_vtbl;

/* 1361 */
typedef IEnumSTATDATAVtbl IEnumSTATDATA_vtbl;

/* 1363 */
typedef IDataObjectVtbl IDataObject_vtbl;

/* 1365 */
struct tagOLEVERB
{
  int lVerb;
  unsigned __int16 *lpszVerbName;
  unsigned int fuFlags;
  unsigned int grfAttribs;
};

/* 1366 */
struct IOleUILinkInfoW
{
  IOleUILinkInfoWVtbl *lpVtbl /*VFT*/;
};

/* 1368 */
struct /*VFT*/ IOleUILinkInfoWVtbl
{
  int (__stdcall *QueryInterface)(IOleUILinkInfoW *, const _GUID *const, void **);
  unsigned int (__stdcall *AddRef)(IOleUILinkInfoW *);
  unsigned int (__stdcall *Release)(IOleUILinkInfoW *);
  unsigned int (__stdcall *GetNextLink)(IOleUILinkInfoW *, unsigned int);
  int (__stdcall *SetLinkUpdateOptions)(IOleUILinkInfoW *, unsigned int, unsigned int);
  int (__stdcall *GetLinkUpdateOptions)(IOleUILinkInfoW *, unsigned int, unsigned int *);
  int (__stdcall *SetLinkSource)(IOleUILinkInfoW *, unsigned int, unsigned __int16 *, unsigned int, unsigned int *, int);
  int (__stdcall *GetLinkSource)(IOleUILinkInfoW *, unsigned int, unsigned __int16 **, unsigned int *, unsigned __int16 **, unsigned __int16 **, int *, int *);
  int (__stdcall *OpenLinkSource)(IOleUILinkInfoW *, unsigned int);
  int (__stdcall *UpdateLink)(IOleUILinkInfoW *, unsigned int, int, int);
  int (__stdcall *CancelLink)(IOleUILinkInfoW *, unsigned int);
  int (__stdcall *GetLastUpdate)(IOleUILinkInfoW *, unsigned int, _FILETIME *);
};

/* 1367 */
typedef IOleUILinkInfoWVtbl IOleUILinkInfoW_vtbl;

/* 1369 */
struct HPALETTE__
{
  int unused;
};

/* 1370 */
struct _NETRESOURCEW
{
  unsigned int dwScope;
  unsigned int dwType;
  unsigned int dwDisplayType;
  unsigned int dwUsage;
  unsigned __int16 *lpLocalName;
  unsigned __int16 *lpRemoteName;
  unsigned __int16 *lpComment;
  unsigned __int16 *lpProvider;
};

/* 1371 */
struct __unaligned __declspec(align(1)) _SHITEMID
{
  unsigned __int16 cb;
  unsigned __int8 abID[1];
};

/* 1372 */
struct _ITEMIDLIST
{
  _SHITEMID mkid;
};

/* 1373 */
struct tagOFNW
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  HINSTANCE__ *hInstance;
  const unsigned __int16 *lpstrFilter;
  unsigned __int16 *lpstrCustomFilter;
  unsigned int nMaxCustFilter;
  unsigned int nFilterIndex;
  unsigned __int16 *lpstrFile;
  unsigned int nMaxFile;
  unsigned __int16 *lpstrFileTitle;
  unsigned int nMaxFileTitle;
  const unsigned __int16 *lpstrInitialDir;
  const unsigned __int16 *lpstrTitle;
  unsigned int Flags;
  unsigned __int16 nFileOffset;
  unsigned __int16 nFileExtension;
  const unsigned __int16 *lpstrDefExt;
  int lCustData;
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  const unsigned __int16 *lpTemplateName;
  void *pvReserved;
  unsigned int dwReserved;
  unsigned int FlagsEx;
};

/* 1374 */
struct _SecHandle
{
  unsigned int dwLower;
  unsigned int dwUpper;
};

/* 1375 */
struct _DCB
{
  unsigned int DCBlength;
  unsigned int BaudRate;
  unsigned __int32 fBinary : 1;
  unsigned __int32 fParity : 1;
  unsigned __int32 fOutxCtsFlow : 1;
  unsigned __int32 fOutxDsrFlow : 1;
  unsigned __int32 fDtrControl : 2;
  unsigned __int32 fDsrSensitivity : 1;
  unsigned __int32 fTXContinueOnXoff : 1;
  unsigned __int32 fOutX : 1;
  unsigned __int32 fInX : 1;
  unsigned __int32 fErrorChar : 1;
  unsigned __int32 fNull : 1;
  unsigned __int32 fRtsControl : 2;
  unsigned __int32 fAbortOnError : 1;
  unsigned __int32 fDummy2 : 17;
  unsigned __int16 wReserved;
  unsigned __int16 XonLim;
  unsigned __int16 XoffLim;
  unsigned __int8 ByteSize;
  unsigned __int8 Parity;
  unsigned __int8 StopBits;
  char XonChar;
  char XoffChar;
  char ErrorChar;
  char EofChar;
  char EvtChar;
  unsigned __int16 wReserved1;
};

/* 1376 */
struct __declspec(align(4)) _COMMCONFIG
{
  unsigned int dwSize;
  unsigned __int16 wVersion;
  unsigned __int16 wReserved;
  _DCB dcb;
  unsigned int dwProviderSubType;
  unsigned int dwProviderOffset;
  unsigned int dwProviderSize;
  unsigned __int16 wcProviderData[1];
};

/* 1377 */
struct _SecBuffer
{
  unsigned int cbBuffer;
  unsigned int BufferType;
  void *pvBuffer;
};

/* 1378 */
struct _SecBufferDesc
{
  unsigned int ulVersion;
  unsigned int cBuffers;
  _SecBuffer *pBuffers;
};

/* 1379 */
struct tagJOYCAPSW
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned __int16 szPname[32];
  unsigned int wXmin;
  unsigned int wXmax;
  unsigned int wYmin;
  unsigned int wYmax;
  unsigned int wZmin;
  unsigned int wZmax;
  unsigned int wNumButtons;
  unsigned int wPeriodMin;
  unsigned int wPeriodMax;
  unsigned int wRmin;
  unsigned int wRmax;
  unsigned int wUmin;
  unsigned int wUmax;
  unsigned int wVmin;
  unsigned int wVmax;
  unsigned int wCaps;
  unsigned int wMaxAxes;
  unsigned int wNumAxes;
  unsigned int wMaxButtons;
  unsigned __int16 szRegKey[32];
  unsigned __int16 szOEMVxD[260];
};

/* 1380 */
struct $30731EC1589AE832070BFAB4699C1350
{
  unsigned int dwType;
  unsigned int dwDeviceID;
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  unsigned __int16 szPname[32];
};

/* 1381 */
struct tagMIXERLINEW
{
  unsigned int cbStruct;
  unsigned int dwDestination;
  unsigned int dwSource;
  unsigned int dwLineID;
  unsigned int fdwLine;
  unsigned int dwUser;
  unsigned int dwComponentType;
  unsigned int cChannels;
  unsigned int cConnections;
  unsigned int cControls;
  unsigned __int16 szShortName[16];
  unsigned __int16 szName[64];
  $30731EC1589AE832070BFAB4699C1350 Target;
};

/* 1382 */
struct _SMALL_RECT
{
  __int16 Left;
  __int16 Top;
  __int16 Right;
  __int16 Bottom;
};

/* 1383 */
struct $0D057425CB83406CCB6CB71DF3FA0A4C
{
  int lMinimum;
  int lMaximum;
};

/* 1384 */
struct $E50C0F09BB6F8C50FF087E1E76EA2CA0
{
  unsigned int dwMinimum;
  unsigned int dwMaximum;
};

/* 1385 */
union $665FE002BB37E211B267037EB4647687
{
  $0D057425CB83406CCB6CB71DF3FA0A4C __s0;
  $E50C0F09BB6F8C50FF087E1E76EA2CA0 __s1;
  unsigned int dwReserved[6];
};

/* 1386 */
union $D57FBB56CFB6CB9AA7C272D88EF9A29F
{
  unsigned int cSteps;
  unsigned int cbCustomData;
  unsigned int dwReserved[6];
};

/* 1387 */
struct tagMIXERCONTROLW
{
  unsigned int cbStruct;
  unsigned int dwControlID;
  unsigned int dwControlType;
  unsigned int fdwControl;
  unsigned int cMultipleItems;
  unsigned __int16 szShortName[16];
  unsigned __int16 szName[64];
  $665FE002BB37E211B267037EB4647687 Bounds;
  $D57FBB56CFB6CB9AA7C272D88EF9A29F Metrics;
};

/* 1388 */
union $476D211351DA30503E50D2F0E6E515B0
{
  unsigned int dwControlID;
  unsigned int dwControlType;
};

/* 1389 */
struct tagMIXERLINECONTROLSW
{
  unsigned int cbStruct;
  unsigned int dwLineID;
  $476D211351DA30503E50D2F0E6E515B0 ___u2;
  unsigned int cControls;
  unsigned int cbmxctrl;
  tagMIXERCONTROLW *pamxctrl;
};

/* 1390 */
struct _SecPkgInfoW
{
  unsigned int fCapabilities;
  unsigned __int16 wVersion;
  unsigned __int16 wRPCID;
  unsigned int cbMaxToken;
  unsigned __int16 *Name;
  unsigned __int16 *Comment;
};

/* 1391 */
struct tagLOGFONTW
{
  int lfHeight;
  int lfWidth;
  int lfEscapement;
  int lfOrientation;
  int lfWeight;
  unsigned __int8 lfItalic;
  unsigned __int8 lfUnderline;
  unsigned __int8 lfStrikeOut;
  unsigned __int8 lfCharSet;
  unsigned __int8 lfOutPrecision;
  unsigned __int8 lfClipPrecision;
  unsigned __int8 lfQuality;
  unsigned __int8 lfPitchAndFamily;
  unsigned __int16 lfFaceName[32];
};

/* 1392 */
struct HKL__
{
  int unused;
};

/* 1393 */
struct _FIXED
{
  unsigned __int16 fract;
  __int16 value;
};

/* 1394 */
struct _MAT2
{
  _FIXED eM11;
  _FIXED eM12;
  _FIXED eM21;
  _FIXED eM22;
};

/* 1395 */
struct tagOLEUIPASTEENTRYW
{
  tagFORMATETC fmtetc;
  const unsigned __int16 *lpstrFormatName;
  const unsigned __int16 *lpstrResultText;
  unsigned int dwFlags;
  unsigned int dwScratchSpace;
};

/* 1396 */
struct HRSRC__
{
  int unused;
};

/* 1397 */
struct tagOLEUIPASTESPECIALW
{
  unsigned int cbStruct;
  unsigned int dwFlags;
  HWND__ *hWndOwner;
  const unsigned __int16 *lpszCaption;
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  int lCustData;
  HINSTANCE__ *hInstance;
  const unsigned __int16 *lpszTemplate;
  HRSRC__ *hResource;
  IDataObject *lpSrcDataObj;
  tagOLEUIPASTEENTRYW *arrPasteEntries;
  int cPasteEntries;
  unsigned int *arrLinkTypes;
  int cLinkTypes;
  unsigned int cClsidExclude;
  _GUID *lpClsidExclude;
  int nSelectedIndex;
  int fLink;
  void *hMetaPict;
  tagSIZE sizel;
};

/* 1398 */
struct tagAUXCAPSW
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  unsigned __int16 szPname[32];
  unsigned __int16 wTechnology;
  unsigned __int16 wReserved1;
  unsigned int dwSupport;
};

/* 1399 */
struct HMONITOR__
{
  int unused;
};

/* 1400 */
struct IOleUILinkContainerW
{
  IOleUILinkContainerWVtbl *lpVtbl /*VFT*/;
};

/* 1402 */
struct /*VFT*/ IOleUILinkContainerWVtbl
{
  int (__stdcall *QueryInterface)(IOleUILinkContainerW *, const _GUID *const, void **);
  unsigned int (__stdcall *AddRef)(IOleUILinkContainerW *);
  unsigned int (__stdcall *Release)(IOleUILinkContainerW *);
  unsigned int (__stdcall *GetNextLink)(IOleUILinkContainerW *, unsigned int);
  int (__stdcall *SetLinkUpdateOptions)(IOleUILinkContainerW *, unsigned int, unsigned int);
  int (__stdcall *GetLinkUpdateOptions)(IOleUILinkContainerW *, unsigned int, unsigned int *);
  int (__stdcall *SetLinkSource)(IOleUILinkContainerW *, unsigned int, unsigned __int16 *, unsigned int, unsigned int *, int);
  int (__stdcall *GetLinkSource)(IOleUILinkContainerW *, unsigned int, unsigned __int16 **, unsigned int *, unsigned __int16 **, unsigned __int16 **, int *, int *);
  int (__stdcall *OpenLinkSource)(IOleUILinkContainerW *, unsigned int);
  int (__stdcall *UpdateLink)(IOleUILinkContainerW *, unsigned int, int, int);
  int (__stdcall *CancelLink)(IOleUILinkContainerW *, unsigned int);
};

/* 1401 */
typedef IOleUILinkContainerWVtbl IOleUILinkContainerW_vtbl;

/* 1403 */
struct tagOLEUICHANGESOURCEW
{
  unsigned int cbStruct;
  unsigned int dwFlags;
  HWND__ *hWndOwner;
  const unsigned __int16 *lpszCaption;
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  int lCustData;
  HINSTANCE__ *hInstance;
  const unsigned __int16 *lpszTemplate;
  HRSRC__ *hResource;
  tagOFNW *lpOFN;
  unsigned int dwReserved1[4];
  IOleUILinkContainerW *lpOleUILinkContainer;
  unsigned int dwLink;
  unsigned __int16 *lpszDisplayName;
  unsigned int nFileLength;
  unsigned __int16 *lpszFrom;
  unsigned __int16 *lpszTo;
};

/* 1404 */
struct _currencyfmtW
{
  unsigned int NumDigits;
  unsigned int LeadingZero;
  unsigned int Grouping;
  unsigned __int16 *lpDecimalSep;
  unsigned __int16 *lpThousandSep;
  unsigned int NegativeOrder;
  unsigned int PositiveOrder;
  unsigned __int16 *lpCurrencySymbol;
};

/* 1405 */
struct tagMIXERCAPSW
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  unsigned __int16 szPname[32];
  unsigned int fdwSupport;
  unsigned int cDestinations;
};

/* 1406 */
struct HTASK__
{
  int unused;
};

/* 1407 */
struct HMMIO__
{
  int unused;
};

/* 1408 */
struct _MMIOINFO
{
  unsigned int dwFlags;
  unsigned int fccIOProc;
  int (__stdcall *pIOProc)(char *, unsigned int, int, int);
  unsigned int wErrorRet;
  HTASK__ *htask;
  int cchBuffer;
  char *pchBuffer;
  char *pchNext;
  char *pchEndRead;
  char *pchEndWrite;
  int lBufOffset;
  int lDiskOffset;
  unsigned int adwInfo[3];
  unsigned int dwReserved1;
  unsigned int dwReserved2;
  HMMIO__ *hmmio;
};

/* 1409 */
struct IOleContainer
{
  IOleContainerVtbl *lpVtbl /*VFT*/;
};

/* 1411 */
struct /*VFT*/ IOleContainerVtbl
{
  int (__stdcall *QueryInterface)(IOleContainer *, const _GUID *const, void **);
  unsigned int (__stdcall *AddRef)(IOleContainer *);
  unsigned int (__stdcall *Release)(IOleContainer *);
  int (__stdcall *ParseDisplayName)(IOleContainer *, IBindCtx *, unsigned __int16 *, unsigned int *, IMoniker **);
  int (__stdcall *EnumObjects)(IOleContainer *, unsigned int, IEnumUnknown **);
  int (__stdcall *LockContainer)(IOleContainer *, int);
};

/* 1410 */
typedef IOleContainerVtbl IOleContainer_vtbl;

/* 1412 */
struct HKEY__
{
  int unused;
};

/* 1413 */
struct _SECURITY_ATTRIBUTES
{
  unsigned int nLength;
  void *lpSecurityDescriptor;
  int bInheritHandle;
};

/* 1414 */
struct tagACCEL
{
  unsigned __int8 fVirt;
  unsigned __int16 key;
  unsigned __int16 cmd;
};

/* 1415 */
struct _NETCONNECTINFOSTRUCT
{
  unsigned int cbStructure;
  unsigned int dwFlags;
  unsigned int dwSpeed;
  unsigned int dwDelay;
  unsigned int dwOptDataSize;
};

/* 1416 */
struct tagRASDIALPARAMSW
{
  unsigned int dwSize;
  unsigned __int16 szEntryName[257];
  unsigned __int16 szPhoneNumber[129];
  unsigned __int16 szCallbackNumber[129];
  unsigned __int16 szUserName[257];
  unsigned __int16 szPassword[257];
  unsigned __int16 szDomain[16];
  unsigned int dwSubEntry;
  unsigned int dwCallbackId;
};

/* 1417 */
struct __declspec(align(4)) _SECURITY_QUALITY_OF_SERVICE
{
  unsigned int Length;
  _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  unsigned __int8 ContextTrackingMode;
  unsigned __int8 EffectiveOnly;
};

/* 1418 */
struct tagCONVCONTEXT
{
  unsigned int cb;
  unsigned int wFlags;
  unsigned int wCountryID;
  int iCodePage;
  unsigned int dwLangID;
  unsigned int dwSecurity;
  _SECURITY_QUALITY_OF_SERVICE qos;
};

/* 1419 */
struct _WIN32_FIND_DATAW
{
  unsigned int dwFileAttributes;
  _FILETIME ftCreationTime;
  _FILETIME ftLastAccessTime;
  _FILETIME ftLastWriteTime;
  unsigned int nFileSizeHigh;
  unsigned int nFileSizeLow;
  unsigned int dwReserved0;
  unsigned int dwReserved1;
  unsigned __int16 cFileName[260];
  unsigned __int16 cAlternateFileName[14];
};

/* 1420 */
struct $5ACE225D4D14CE0550A9F5A217E306C5
{
  __int16 dmOrientation;
  __int16 dmPaperSize;
  __int16 dmPaperLength;
  __int16 dmPaperWidth;
};

/* 1421 */
union $D6DFA553E4DB0F20AB348D3ECD71A175
{
  $5ACE225D4D14CE0550A9F5A217E306C5 __s0;
  _POINTL dmPosition;
};

/* 1422 */
union $309666D137CBB19809FA597AD348B415
{
  unsigned int dmDisplayFlags;
  unsigned int dmNup;
};

/* 1423 */
struct _devicemodeW
{
  unsigned __int16 dmDeviceName[32];
  unsigned __int16 dmSpecVersion;
  unsigned __int16 dmDriverVersion;
  unsigned __int16 dmSize;
  unsigned __int16 dmDriverExtra;
  unsigned int dmFields;
  $D6DFA553E4DB0F20AB348D3ECD71A175 ___u6;
  __int16 dmScale;
  __int16 dmCopies;
  __int16 dmDefaultSource;
  __int16 dmPrintQuality;
  __int16 dmColor;
  __int16 dmDuplex;
  __int16 dmYResolution;
  __int16 dmTTOption;
  __int16 dmCollate;
  unsigned __int16 dmFormName[32];
  unsigned __int16 dmLogPixels;
  unsigned int dmBitsPerPel;
  unsigned int dmPelsWidth;
  unsigned int dmPelsHeight;
  $309666D137CBB19809FA597AD348B415 ___u21;
  unsigned int dmDisplayFrequency;
  unsigned int dmICMMethod;
  unsigned int dmICMIntent;
  unsigned int dmMediaType;
  unsigned int dmDitherType;
  unsigned int dmReserved1;
  unsigned int dmReserved2;
  unsigned int dmPanningWidth;
  unsigned int dmPanningHeight;
};

/* 1424 */
struct _PRINTER_DEFAULTSW
{
  unsigned __int16 *pDatatype;
  _devicemodeW *pDevMode;
  unsigned int DesiredAccess;
};

/* 1425 */
struct __declspec(align(4)) tagTEXTMETRICW
{
  int tmHeight;
  int tmAscent;
  int tmDescent;
  int tmInternalLeading;
  int tmExternalLeading;
  int tmAveCharWidth;
  int tmMaxCharWidth;
  int tmWeight;
  int tmOverhang;
  int tmDigitizedAspectX;
  int tmDigitizedAspectY;
  unsigned __int16 tmFirstChar;
  unsigned __int16 tmLastChar;
  unsigned __int16 tmDefaultChar;
  unsigned __int16 tmBreakChar;
  unsigned __int8 tmItalic;
  unsigned __int8 tmUnderlined;
  unsigned __int8 tmStruckOut;
  unsigned __int8 tmPitchAndFamily;
  unsigned __int8 tmCharSet;
};

/* 1426 */
struct tagPANOSE
{
  unsigned __int8 bFamilyType;
  unsigned __int8 bSerifStyle;
  unsigned __int8 bWeight;
  unsigned __int8 bProportion;
  unsigned __int8 bContrast;
  unsigned __int8 bStrokeVariation;
  unsigned __int8 bArmStyle;
  unsigned __int8 bLetterform;
  unsigned __int8 bMidline;
  unsigned __int8 bXHeight;
};

/* 1427 */
struct _OUTLINETEXTMETRICW
{
  unsigned int otmSize;
  tagTEXTMETRICW otmTextMetrics;
  unsigned __int8 otmFiller;
  tagPANOSE otmPanoseNumber;
  unsigned int otmfsSelection;
  unsigned int otmfsType;
  int otmsCharSlopeRise;
  int otmsCharSlopeRun;
  int otmItalicAngle;
  unsigned int otmEMSquare;
  int otmAscent;
  int otmDescent;
  unsigned int otmLineGap;
  unsigned int otmsCapEmHeight;
  unsigned int otmsXHeight;
  tagRECT otmrcFontBox;
  int otmMacAscent;
  int otmMacDescent;
  unsigned int otmMacLineGap;
  unsigned int otmusMinimumPPEM;
  tagPOINT otmptSubscriptSize;
  tagPOINT otmptSubscriptOffset;
  tagPOINT otmptSuperscriptSize;
  tagPOINT otmptSuperscriptOffset;
  unsigned int otmsStrikeoutSize;
  int otmsStrikeoutPosition;
  int otmsUnderscoreSize;
  int otmsUnderscorePosition;
  char *otmpFamilyName;
  char *otmpFaceName;
  char *otmpStyleName;
  char *otmpFullName;
};

/* 1428 */
struct HDDEDATA__
{
  int unused;
};

/* 1429 */
struct tagCIEXYZ
{
  int ciexyzX;
  int ciexyzY;
  int ciexyzZ;
};

/* 1430 */
struct tagICEXYZTRIPLE
{
  tagCIEXYZ ciexyzRed;
  tagCIEXYZ ciexyzGreen;
  tagCIEXYZ ciexyzBlue;
};

/* 1431 */
struct _browseinfoW
{
  HWND__ *hwndOwner;
  const _ITEMIDLIST *pidlRoot;
  unsigned __int16 *pszDisplayName;
  const unsigned __int16 *lpszTitle;
  unsigned int ulFlags;
  int (__stdcall *lpfn)(HWND__ *, unsigned int, int, int);
  int lParam;
  int iImage;
};

/* 1432 */
struct tagOLEUICONVERTW
{
  unsigned int cbStruct;
  unsigned int dwFlags;
  HWND__ *hWndOwner;
  const unsigned __int16 *lpszCaption;
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  int lCustData;
  HINSTANCE__ *hInstance;
  const unsigned __int16 *lpszTemplate;
  HRSRC__ *hResource;
  _GUID clsid;
  _GUID clsidConvertDefault;
  _GUID clsidActivateDefault;
  _GUID clsidNew;
  unsigned int dvAspect;
  unsigned __int16 wFormat;
  int fIsLinkedObject;
  void *hMetaPict;
  unsigned __int16 *lpszUserType;
  int fObjectsIconChanged;
  unsigned __int16 *lpszDefLabel;
  unsigned int cClsidExclude;
  _GUID *lpClsidExclude;
};

/* 1433 */
struct __unaligned __declspec(align(2)) _SHFILEOPSTRUCTW
{
  HWND__ *hwnd;
  unsigned int wFunc;
  const unsigned __int16 *pFrom;
  const unsigned __int16 *pTo;
  unsigned __int16 fFlags;
  int fAnyOperationsAborted;
  void *hNameMappings;
  const unsigned __int16 *lpszProgressTitle;
};

/* 1434 */
struct RASIPADDR
{
  unsigned __int8 a;
  unsigned __int8 b;
  unsigned __int8 c;
  unsigned __int8 d;
};

/* 1435 */
struct tagRASENTRYW
{
  unsigned int dwSize;
  unsigned int dwfOptions;
  unsigned int dwCountryID;
  unsigned int dwCountryCode;
  unsigned __int16 szAreaCode[11];
  unsigned __int16 szLocalPhoneNumber[129];
  unsigned int dwAlternateOffset;
  RASIPADDR ipaddr;
  RASIPADDR ipaddrDns;
  RASIPADDR ipaddrDnsAlt;
  RASIPADDR ipaddrWins;
  RASIPADDR ipaddrWinsAlt;
  unsigned int dwFrameSize;
  unsigned int dwfNetProtocols;
  unsigned int dwFramingProtocol;
  unsigned __int16 szScript[260];
  unsigned __int16 szAutodialDll[260];
  unsigned __int16 szAutodialFunc[260];
  unsigned __int16 szDeviceType[17];
  unsigned __int16 szDeviceName[129];
  unsigned __int16 szX25PadType[33];
  unsigned __int16 szX25Address[201];
  unsigned __int16 szX25Facilities[201];
  unsigned __int16 szX25UserData[201];
  unsigned int dwChannels;
  unsigned int dwReserved1;
  unsigned int dwReserved2;
  unsigned int dwSubEntries;
  unsigned int dwDialMode;
  unsigned int dwDialExtraPercent;
  unsigned int dwDialExtraSampleSeconds;
  unsigned int dwHangUpExtraPercent;
  unsigned int dwHangUpExtraSampleSeconds;
  unsigned int dwIdleDisconnectSeconds;
  unsigned int dwType;
  unsigned int dwEncryptionType;
  unsigned int dwCustomAuthKey;
  _GUID guidId;
  unsigned __int16 szCustomDialDll[260];
  unsigned int dwVpnStrategy;
  unsigned int dwfOptions2;
  unsigned int dwfOptions3;
  unsigned __int16 szDnsSuffix[256];
  unsigned int dwTcpWindowSize;
  unsigned __int16 szPrerequisitePbk[260];
  unsigned __int16 szPrerequisiteEntry[257];
  unsigned int dwRedialCount;
  unsigned int dwRedialPause;
};

/* 1436 */
union $4B8A0BB10F5C4B9D8BBE7645A6566273
{
  unsigned int nStartPage;
  const unsigned __int16 *pStartPage;
};

/* 1437 */
union $3D9180DD7B7F505C18D5B615EA433359
{
  const _PROPSHEETPAGEW *ppsp;
  struct _PSP **phpage;
};

/* 1438 */
union $84007A9D654855FE041CEB00EE6FAFB1
{
  HBITMAP__ *hbmWatermark;
  const unsigned __int16 *pszbmWatermark;
};

/* 1439 */
union $0BD48AC8E344B42EE0A4788CE863B618
{
  HBITMAP__ *hbmHeader;
  const unsigned __int16 *pszbmHeader;
};

/* 1440 */
struct _PROPSHEETHEADERW
{
  unsigned int dwSize;
  unsigned int dwFlags;
  HWND__ *hwndParent;
  HINSTANCE__ *hInstance;
  $40BC5FC92C6A3FB6B6316A91A61A5350 ___u4;
  const unsigned __int16 *pszCaption;
  unsigned int nPages;
  $4B8A0BB10F5C4B9D8BBE7645A6566273 ___u7;
  $3D9180DD7B7F505C18D5B615EA433359 ___u8;
  int (__stdcall *pfnCallback)(HWND__ *, unsigned int, int);
  $84007A9D654855FE041CEB00EE6FAFB1 ___u10;
  HPALETTE__ *hplWatermark;
  $0BD48AC8E344B42EE0A4788CE863B618 ___u12;
};

/* 1441 */
struct IOleUIObjInfoW
{
  IOleUIObjInfoWVtbl *lpVtbl /*VFT*/;
};

/* 1443 */
struct /*VFT*/ IOleUIObjInfoWVtbl
{
  int (__stdcall *QueryInterface)(IOleUIObjInfoW *, const _GUID *const, void **);
  unsigned int (__stdcall *AddRef)(IOleUIObjInfoW *);
  unsigned int (__stdcall *Release)(IOleUIObjInfoW *);
  int (__stdcall *GetObjectInfo)(IOleUIObjInfoW *, unsigned int, unsigned int *, unsigned __int16 **, unsigned __int16 **, unsigned __int16 **, unsigned __int16 **);
  int (__stdcall *GetConvertInfo)(IOleUIObjInfoW *, unsigned int, _GUID *, unsigned __int16 *, _GUID *, _GUID **, unsigned int *);
  int (__stdcall *ConvertObject)(IOleUIObjInfoW *, unsigned int, const _GUID *const);
  int (__stdcall *GetViewInfo)(IOleUIObjInfoW *, unsigned int, void **, unsigned int *, int *);
  int (__stdcall *SetViewInfo)(IOleUIObjInfoW *, unsigned int, void *, unsigned int, int, int);
};

/* 1442 */
typedef IOleUIObjInfoWVtbl IOleUIObjInfoW_vtbl;

/* 1444 */
struct tagOLEUIGNRLPROPSW
{
  unsigned int cbStruct;
  unsigned int dwFlags;
  unsigned int dwReserved1[2];
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  int lCustData;
  unsigned int dwReserved2[3];
  tagOLEUIOBJECTPROPSW *lpOP;
};

/* 1445 */
struct tagOLEUIOBJECTPROPSW
{
  unsigned int cbStruct;
  unsigned int dwFlags;
  _PROPSHEETHEADERW *lpPS;
  unsigned int dwObject;
  IOleUIObjInfoW *lpObjInfo;
  unsigned int dwLink;
  IOleUILinkInfoW *lpLinkInfo;
  tagOLEUIGNRLPROPSW *lpGP;
  tagOLEUIVIEWPROPSW *lpVP;
  tagOLEUILINKPROPSW *lpLP;
};

/* 1446 */
struct tagOLEUIVIEWPROPSW
{
  unsigned int cbStruct;
  unsigned int dwFlags;
  unsigned int dwReserved1[2];
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  int lCustData;
  unsigned int dwReserved2[3];
  tagOLEUIOBJECTPROPSW *lpOP;
  int nScaleMin;
  int nScaleMax;
};

/* 1447 */
struct tagOLEUILINKPROPSW
{
  unsigned int cbStruct;
  unsigned int dwFlags;
  unsigned int dwReserved1[2];
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  int lCustData;
  unsigned int dwReserved2[3];
  tagOLEUIOBJECTPROPSW *lpOP;
};

/* 1448 */
struct $FAF74743FBE1C8632047CFB668F7028A
{
  unsigned int LowPart;
  int HighPart;
};

/* 1449 */
struct HCONV__
{
  int unused;
};

/* 1450 */
struct HSZ__
{
  int unused;
};

/* 1451 */
struct HCONVLIST__
{
  int unused;
};

/* 1452 */
struct tagCONVINFO
{
  unsigned int cb;
  unsigned int hUser;
  HCONV__ *hConvPartner;
  HSZ__ *hszSvcPartner;
  HSZ__ *hszServiceReq;
  HSZ__ *hszTopic;
  HSZ__ *hszItem;
  unsigned int wFmt;
  unsigned int wType;
  unsigned int wStatus;
  unsigned int wConvst;
  unsigned int wLastError;
  HCONVLIST__ *hConvList;
  tagCONVCONTEXT ConvCtxt;
  HWND__ *hwnd;
  HWND__ *hwndPartner;
};

/* 1453 */
struct HRASCONN__
{
  int unused;
};

/* 1454 */
struct _LUID
{
  unsigned int LowPart;
  int HighPart;
};

/* 1455 */
struct tagRASCONNW
{
  unsigned int dwSize;
  HRASCONN__ *hrasconn;
  unsigned __int16 szEntryName[257];
  unsigned __int16 szDeviceType[17];
  unsigned __int16 szDeviceName[129];
  unsigned __int16 szPhonebook[260];
  unsigned int dwSubEntry;
  _GUID guidEntry;
  unsigned int dwFlags;
  _LUID luid;
};

/* 1456 */
struct _SHFILEINFOW
{
  HICON__ *hIcon;
  int iIcon;
  unsigned int dwAttributes;
  unsigned __int16 szDisplayName[260];
  unsigned __int16 szTypeName[80];
};

/* 1457 */
struct _SECURITY_FUNCTION_TABLE_W
{
  unsigned int dwVersion;
  int (__stdcall *EnumerateSecurityPackagesW)(unsigned int *, _SecPkgInfoW **);
  int (__stdcall *QueryCredentialsAttributesW)(_SecHandle *, unsigned int, void *);
  int (__stdcall *AcquireCredentialsHandleW)(unsigned __int16 *, unsigned __int16 *, unsigned int, void *, void *, void (__stdcall *)(void *, void *, unsigned int, void **, int *), void *, _SecHandle *, _LARGE_INTEGER *);
  int (__stdcall *FreeCredentialsHandle)(_SecHandle *);
  void *Reserved2;
  int (__stdcall *InitializeSecurityContextW)(_SecHandle *, _SecHandle *, unsigned __int16 *, unsigned int, unsigned int, unsigned int, _SecBufferDesc *, unsigned int, _SecHandle *, _SecBufferDesc *, unsigned int *, _LARGE_INTEGER *);
  int (__stdcall *AcceptSecurityContext)(_SecHandle *, _SecHandle *, _SecBufferDesc *, unsigned int, unsigned int, _SecHandle *, _SecBufferDesc *, unsigned int *, _LARGE_INTEGER *);
  int (__stdcall *CompleteAuthToken)(_SecHandle *, _SecBufferDesc *);
  int (__stdcall *DeleteSecurityContext)(_SecHandle *);
  int (__stdcall *ApplyControlToken)(_SecHandle *, _SecBufferDesc *);
  int (__stdcall *QueryContextAttributesW)(_SecHandle *, unsigned int, void *);
  int (__stdcall *ImpersonateSecurityContext)(_SecHandle *);
  int (__stdcall *RevertSecurityContext)(_SecHandle *);
  int (__stdcall *MakeSignature)(_SecHandle *, unsigned int, _SecBufferDesc *, unsigned int);
  int (__stdcall *VerifySignature)(_SecHandle *, _SecBufferDesc *, unsigned int, unsigned int *);
  int (__stdcall *FreeContextBuffer)(void *);
  int (__stdcall *QuerySecurityPackageInfoW)(unsigned __int16 *, _SecPkgInfoW **);
  void *Reserved3;
  void *Reserved4;
  int (__stdcall *ExportSecurityContext)(_SecHandle *, unsigned int, _SecBuffer *, void **);
  int (__stdcall *ImportSecurityContextW)(unsigned __int16 *, _SecBuffer *, void *, _SecHandle *);
  int (__stdcall *AddCredentialsW)(_SecHandle *, unsigned __int16 *, unsigned __int16 *, unsigned int, void *, void (__stdcall *)(void *, void *, unsigned int, void **, int *), void *, _LARGE_INTEGER *);
  void *Reserved8;
  int (__stdcall *QuerySecurityContextToken)(_SecHandle *, void **);
  int (__stdcall *EncryptMessage)(_SecHandle *, unsigned int, _SecBufferDesc *, unsigned int);
  int (__stdcall *DecryptMessage)(_SecHandle *, _SecBufferDesc *, unsigned int, unsigned int *);
  int (__stdcall *SetContextAttributesW)(_SecHandle *, unsigned int, void *, unsigned int);
};

/* 1458 */
struct _STARTUPINFOW
{
  unsigned int cb;
  unsigned __int16 *lpReserved;
  unsigned __int16 *lpDesktop;
  unsigned __int16 *lpTitle;
  unsigned int dwX;
  unsigned int dwY;
  unsigned int dwXSize;
  unsigned int dwYSize;
  unsigned int dwXCountChars;
  unsigned int dwYCountChars;
  unsigned int dwFillAttribute;
  unsigned int dwFlags;
  unsigned __int16 wShowWindow;
  unsigned __int16 cbReserved2;
  unsigned __int8 *lpReserved2;
  void *hStdInput;
  void *hStdOutput;
  void *hStdError;
};

/* 1459 */
struct HACCEL__
{
  int unused;
};

/* 1460 */
struct tagLOGCOLORSPACEW
{
  unsigned int lcsSignature;
  unsigned int lcsVersion;
  unsigned int lcsSize;
  int lcsCSType;
  int lcsIntent;
  tagICEXYZTRIPLE lcsEndpoints;
  unsigned int lcsGammaRed;
  unsigned int lcsGammaGreen;
  unsigned int lcsGammaBlue;
  unsigned __int16 lcsFilename[260];
};

/* 1461 */
struct IOleClientSite
{
  IOleClientSiteVtbl *lpVtbl /*VFT*/;
};

/* 1463 */
struct /*VFT*/ IOleClientSiteVtbl
{
  int (__stdcall *QueryInterface)(IOleClientSite *, const _GUID *const, void **);
  unsigned int (__stdcall *AddRef)(IOleClientSite *);
  unsigned int (__stdcall *Release)(IOleClientSite *);
  int (__stdcall *SaveObject)(IOleClientSite *);
  int (__stdcall *GetMoniker)(IOleClientSite *, unsigned int, unsigned int, IMoniker **);
  int (__stdcall *GetContainer)(IOleClientSite *, IOleContainer **);
  int (__stdcall *ShowObject)(IOleClientSite *);
  int (__stdcall *OnShowWindow)(IOleClientSite *, int);
  int (__stdcall *RequestNewObjectLayout)(IOleClientSite *);
};

/* 1462 */
typedef IOleClientSiteVtbl IOleClientSite_vtbl;

/* 1464 */
struct tagOLEUIINSERTOBJECTW
{
  unsigned int cbStruct;
  unsigned int dwFlags;
  HWND__ *hWndOwner;
  const unsigned __int16 *lpszCaption;
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  int lCustData;
  HINSTANCE__ *hInstance;
  const unsigned __int16 *lpszTemplate;
  HRSRC__ *hResource;
  _GUID clsid;
  unsigned __int16 *lpszFile;
  unsigned int cchFile;
  unsigned int cClsidExclude;
  _GUID *lpClsidExclude;
  _GUID iid;
  unsigned int oleRender;
  tagFORMATETC *lpFormatEtc;
  IOleClientSite *lpIOleClientSite;
  IStorage *lpIStorage;
  void **ppvObj;
  int sc;
  void *hMetaPict;
};

/* 1465 */
struct HFONT__
{
  int unused;
};

/* 1466 */
struct tagOLEUIEDITLINKSW
{
  unsigned int cbStruct;
  unsigned int dwFlags;
  HWND__ *hWndOwner;
  const unsigned __int16 *lpszCaption;
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  int lCustData;
  HINSTANCE__ *hInstance;
  const unsigned __int16 *lpszTemplate;
  HRSRC__ *hResource;
  IOleUILinkContainerW *lpOleUILinkContainer;
};

/* 1467 */
struct _ABC
{
  int abcA;
  unsigned int abcB;
  int abcC;
};

/* 1468 */
struct tagPOLYTEXTW
{
  int x;
  int y;
  unsigned int n;
  const unsigned __int16 *lpstr;
  unsigned int uiFlags;
  tagRECT rcl;
  int *pdx;
};

/* 1469 */
struct tagFINDREPLACEW
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  HINSTANCE__ *hInstance;
  unsigned int Flags;
  unsigned __int16 *lpstrFindWhat;
  unsigned __int16 *lpstrReplaceWith;
  unsigned __int16 wFindWhatLen;
  unsigned __int16 wReplaceWithLen;
  int lCustData;
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  const unsigned __int16 *lpTemplateName;
};

/* 1470 */
struct _FOCUS_EVENT_RECORD
{
  int bSetFocus;
};

/* 1471 */
struct _COMMTIMEOUTS
{
  unsigned int ReadIntervalTimeout;
  unsigned int ReadTotalTimeoutMultiplier;
  unsigned int ReadTotalTimeoutConstant;
  unsigned int WriteTotalTimeoutMultiplier;
  unsigned int WriteTotalTimeoutConstant;
};

/* 1472 */
struct tagLOGPALETTE
{
  unsigned __int16 palVersion;
  unsigned __int16 palNumEntries;
  tagPALETTEENTRY palPalEntry[1];
};

/* 1473 */
struct ICDECOMPRESSEX
{
  unsigned int dwFlags;
  tagBITMAPINFOHEADER *lpbiSrc;
  void *lpSrc;
  tagBITMAPINFOHEADER *lpbiDst;
  void *lpDst;
  int xDst;
  int yDst;
  int dxDst;
  int dyDst;
  int xSrc;
  int ySrc;
  int dxSrc;
  int dySrc;
};

/* 1474 */
struct tagRASEAPINFO
{
  unsigned int dwSizeofEapInfo;
  unsigned __int8 *pbEapInfo;
};

/* 1475 */
struct value_entW
{
  unsigned __int16 *ve_valuename;
  unsigned int ve_valuelen;
  unsigned int ve_valueptr;
  unsigned int ve_type;
};

/* 1476 */
struct tagWNDCLASSEXW
{
  unsigned int cbSize;
  unsigned int style;
  int (__stdcall *lpfnWndProc)(HWND__ *, unsigned int, unsigned int, int);
  int cbClsExtra;
  int cbWndExtra;
  HINSTANCE__ *hInstance;
  HICON__ *hIcon;
  HICON__ *hCursor;
  HBRUSH__ *hbrBackground;
  const unsigned __int16 *lpszMenuName;
  const unsigned __int16 *lpszClassName;
  HICON__ *hIconSm;
};

/* 1477 */
struct tagMENUITEMINFOW
{
  unsigned int cbSize;
  unsigned int fMask;
  unsigned int fType;
  unsigned int fState;
  unsigned int wID;
  HMENU__ *hSubMenu;
  HBITMAP__ *hbmpChecked;
  HBITMAP__ *hbmpUnchecked;
  unsigned int dwItemData;
  unsigned __int16 *dwTypeData;
  unsigned int cch;
  HBITMAP__ *hbmpItem;
};

/* 1478 */
struct _COORD
{
  __int16 X;
  __int16 Y;
};

/* 1479 */
struct _MOUSE_EVENT_RECORD
{
  _COORD dwMousePosition;
  unsigned int dwButtonState;
  unsigned int dwControlKeyState;
  unsigned int dwEventFlags;
};

/* 1480 */
struct _CONNECTDLGSTRUCTW
{
  unsigned int cbStructure;
  HWND__ *hwndOwner;
  _NETRESOURCEW *lpConnRes;
  unsigned int dwFlags;
  unsigned int dwDevNum;
};

/* 1481 */
struct tagCHOOSECOLORW
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  HWND__ *hInstance;
  unsigned int rgbResult;
  unsigned int *lpCustColors;
  unsigned int Flags;
  int lCustData;
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  const unsigned __int16 *lpTemplateName;
};

/* 1482 */
union $E5EC784184F61E2D1DB730C15D65FB8F
{
  void *hIcon;
  void *hMonitor;
};

/* 1483 */
struct _SHELLEXECUTEINFOW
{
  unsigned int cbSize;
  unsigned int fMask;
  HWND__ *hwnd;
  const unsigned __int16 *lpVerb;
  const unsigned __int16 *lpFile;
  const unsigned __int16 *lpParameters;
  const unsigned __int16 *lpDirectory;
  int nShow;
  HINSTANCE__ *hInstApp;
  void *lpIDList;
  const unsigned __int16 *lpClass;
  HKEY__ *hkeyClass;
  unsigned int dwHotKey;
  $E5EC784184F61E2D1DB730C15D65FB8F ___u13;
  void *hProcess;
};

/* 1484 */
struct tagMIDIOUTCAPSW
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  unsigned __int16 szPname[32];
  unsigned __int16 wTechnology;
  unsigned __int16 wVoices;
  unsigned __int16 wNotes;
  unsigned __int16 wChannelMask;
  unsigned int dwSupport;
};

/* 1485 */
struct _GLYPHMETRICS
{
  unsigned int gmBlackBoxX;
  unsigned int gmBlackBoxY;
  tagPOINT gmptGlyphOrigin;
  __int16 gmCellIncX;
  __int16 gmCellIncY;
};

/* 1486 */
struct tagWAVEINCAPSW
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  unsigned __int16 szPname[32];
  unsigned int dwFormats;
  unsigned __int16 wChannels;
  unsigned __int16 wReserved1;
};

/* 1487 */
struct tagKERNINGPAIR
{
  unsigned __int16 wFirst;
  unsigned __int16 wSecond;
  int iKernAmount;
};

/* 1488 */
union $B34434447B6B77C7D7B1493D8CD04E6E
{
  unsigned __int16 UnicodeChar;
  char AsciiChar;
};

/* 1489 */
struct _KEY_EVENT_RECORD
{
  int bKeyDown;
  unsigned __int16 wRepeatCount;
  unsigned __int16 wVirtualKeyCode;
  unsigned __int16 wVirtualScanCode;
  $B34434447B6B77C7D7B1493D8CD04E6E uChar;
  unsigned int dwControlKeyState;
};

/* 1490 */
struct tagWAVEOUTCAPSW
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  unsigned __int16 szPname[32];
  unsigned int dwFormats;
  unsigned __int16 wChannels;
  unsigned __int16 wReserved1;
  unsigned int dwSupport;
};

/* 1491 */
struct _numberfmtW
{
  unsigned int NumDigits;
  unsigned int LeadingZero;
  unsigned int Grouping;
  unsigned __int16 *lpDecimalSep;
  unsigned __int16 *lpThousandSep;
  unsigned int NegativeOrder;
};

/* 1492 */
struct _DISPLAY_DEVICEW
{
  unsigned int cb;
  unsigned __int16 DeviceName[32];
  unsigned __int16 DeviceString[128];
  unsigned int StateFlags;
  unsigned __int16 DeviceID[128];
  unsigned __int16 DeviceKey[128];
};

/* 1493 */
struct tagOLEUIBUSYW
{
  unsigned int cbStruct;
  unsigned int dwFlags;
  HWND__ *hWndOwner;
  const unsigned __int16 *lpszCaption;
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  int lCustData;
  HINSTANCE__ *hInstance;
  const unsigned __int16 *lpszTemplate;
  HRSRC__ *hResource;
  HTASK__ *hTask;
  HWND__ **lphWndDialog;
};

/* 1494 */
struct IOleObject
{
  IOleObjectVtbl *lpVtbl /*VFT*/;
};

/* 1499 */
struct /*VFT*/ IOleObjectVtbl
{
  int (__stdcall *QueryInterface)(IOleObject *, const _GUID *const, void **);
  unsigned int (__stdcall *AddRef)(IOleObject *);
  unsigned int (__stdcall *Release)(IOleObject *);
  int (__stdcall *SetClientSite)(IOleObject *, IOleClientSite *);
  int (__stdcall *GetClientSite)(IOleObject *, IOleClientSite **);
  int (__stdcall *SetHostNames)(IOleObject *, const unsigned __int16 *, const unsigned __int16 *);
  int (__stdcall *Close)(IOleObject *, unsigned int);
  int (__stdcall *SetMoniker)(IOleObject *, unsigned int, IMoniker *);
  int (__stdcall *GetMoniker)(IOleObject *, unsigned int, unsigned int, IMoniker **);
  int (__stdcall *InitFromData)(IOleObject *, IDataObject *, int, unsigned int);
  int (__stdcall *GetClipboardData)(IOleObject *, unsigned int, IDataObject **);
  int (__stdcall *DoVerb)(IOleObject *, int, tagMSG *, IOleClientSite *, int, HWND__ *, const tagRECT *);
  int (__stdcall *EnumVerbs)(IOleObject *, IEnumOLEVERB **);
  int (__stdcall *Update)(IOleObject *);
  int (__stdcall *IsUpToDate)(IOleObject *);
  int (__stdcall *GetUserClassID)(IOleObject *, _GUID *);
  int (__stdcall *GetUserType)(IOleObject *, unsigned int, unsigned __int16 **);
  int (__stdcall *SetExtent)(IOleObject *, unsigned int, tagSIZE *);
  int (__stdcall *GetExtent)(IOleObject *, unsigned int, tagSIZE *);
  int (__stdcall *Advise)(IOleObject *, IAdviseSink *, unsigned int *);
  int (__stdcall *Unadvise)(IOleObject *, unsigned int);
  int (__stdcall *EnumAdvise)(IOleObject *, IEnumSTATDATA **);
  int (__stdcall *GetMiscStatus)(IOleObject *, unsigned int, unsigned int *);
  int (__stdcall *SetColorScheme)(IOleObject *, tagLOGPALETTE *);
};

/* 1495 */
struct IEnumOLEVERB
{
  IEnumOLEVERBVtbl *lpVtbl /*VFT*/;
};

/* 1497 */
struct /*VFT*/ IEnumOLEVERBVtbl
{
  int (__stdcall *QueryInterface)(IEnumOLEVERB *, const _GUID *const, void **);
  unsigned int (__stdcall *AddRef)(IEnumOLEVERB *);
  unsigned int (__stdcall *Release)(IEnumOLEVERB *);
  int (__stdcall *Next)(IEnumOLEVERB *, unsigned int, tagOLEVERB *, unsigned int *);
  int (__stdcall *Skip)(IEnumOLEVERB *, unsigned int);
  int (__stdcall *Reset)(IEnumOLEVERB *);
  int (__stdcall *Clone)(IEnumOLEVERB *, IEnumOLEVERB **);
};

/* 1496 */
typedef IEnumOLEVERBVtbl IEnumOLEVERB_vtbl;

/* 1498 */
typedef IOleObjectVtbl IOleObject_vtbl;

/* 1500 */
struct HMETAFILE__
{
  int unused;
};

/* 1501 */
struct ICSETSTATUSPROC
{
  unsigned int dwFlags;
  int lParam;
  int (__stdcall *Status)(int, unsigned int, int);
};

/* 1502 */
union $30417D6DC3305618FB171BBBD15A8541
{
  unsigned int uTimeout;
  unsigned int uVersion;
};

/* 1503 */
struct _NOTIFYICONDATAW
{
  unsigned int cbSize;
  HWND__ *hWnd;
  unsigned int uID;
  unsigned int uFlags;
  unsigned int uCallbackMessage;
  HICON__ *hIcon;
  unsigned __int16 szTip[128];
  unsigned int dwState;
  unsigned int dwStateMask;
  unsigned __int16 szInfo[256];
  $30417D6DC3305618FB171BBBD15A8541 ___u10;
  unsigned __int16 szInfoTitle[64];
  unsigned int dwInfoFlags;
  _GUID guidItem;
};

/* 1504 */
struct HDROP__
{
  int unused;
};

/* 1505 */
struct tagHELPINFO
{
  unsigned int cbSize;
  int iContextType;
  int iCtrlId;
  void *hItemHandle;
  unsigned int dwContextId;
  tagPOINT MousePos;
};

/* 1506 */
struct tagQOCINFO
{
  unsigned int dwSize;
  unsigned int dwFlags;
  unsigned int dwInSpeed;
  unsigned int dwOutSpeed;
};

/* 1507 */
struct _DOCINFOW
{
  int cbSize;
  const unsigned __int16 *lpszDocName;
  const unsigned __int16 *lpszOutput;
  const unsigned __int16 *lpszDatatype;
  unsigned int fwType;
};

/* 1508 */
struct tagWNDCLASSW
{
  unsigned int style;
  int (__stdcall *lpfnWndProc)(HWND__ *, unsigned int, unsigned int, int);
  int cbClsExtra;
  int cbWndExtra;
  HINSTANCE__ *hInstance;
  HICON__ *hIcon;
  HICON__ *hCursor;
  HBRUSH__ *hbrBackground;
  const unsigned __int16 *lpszMenuName;
  const unsigned __int16 *lpszClassName;
};

/* 1509 */
struct tagCHOOSEFONTW
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  HDC__ *hDC;
  tagLOGFONTW *lpLogFont;
  int iPointSize;
  unsigned int Flags;
  unsigned int rgbColors;
  int lCustData;
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  const unsigned __int16 *lpTemplateName;
  HINSTANCE__ *hInstance;
  unsigned __int16 *lpszStyle;
  unsigned __int16 nFontType;
  unsigned __int16 ___MISSING_ALIGNMENT__;
  int nSizeMin;
  int nSizeMax;
};

/* 1510 */
struct _cpinfoexW
{
  unsigned int MaxCharSize;
  unsigned __int8 DefaultChar[2];
  unsigned __int8 LeadByte[12];
  unsigned __int16 UnicodeDefaultChar;
  unsigned int CodePage;
  unsigned __int16 CodePageName[260];
};

/* 1511 */
struct _PROCESS_INFORMATION
{
  void *hProcess;
  void *hThread;
  unsigned int dwProcessId;
  unsigned int dwThreadId;
};

/* 1512 */
struct tagRASDIALEXTENSIONS
{
  unsigned int dwSize;
  unsigned int dwfOptions;
  HWND__ *hwndParent;
  unsigned int reserved;
  unsigned int reserved1;
  tagRASEAPINFO RasEapInfo;
};

/* 1513 */
struct tagALTTABINFO
{
  unsigned int cbSize;
  int cItems;
  int cColumns;
  int cRows;
  int iColFocus;
  int iRowFocus;
  int cxItem;
  int cyItem;
  tagPOINT ptStart;
};

/* 1514 */
struct HCOLORSPACE__
{
  int unused;
};

/* 1515 */
struct _DISCDLGSTRUCTW
{
  unsigned int cbStructure;
  HWND__ *hwndOwner;
  unsigned __int16 *lpLocalName;
  unsigned __int16 *lpRemoteName;
  unsigned int dwFlags;
};

/* 1516 */
struct HIC__
{
  int unused;
};

/* 1517 */
struct tagPSDW
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  void *hDevMode;
  void *hDevNames;
  unsigned int Flags;
  tagPOINT ptPaperSize;
  tagRECT rtMinMargin;
  tagRECT rtMargin;
  HINSTANCE__ *hInstance;
  int lCustData;
  unsigned int (__stdcall *lpfnPageSetupHook)(HWND__ *, unsigned int, unsigned int, int);
  unsigned int (__stdcall *lpfnPagePaintHook)(HWND__ *, unsigned int, unsigned int, int);
  const unsigned __int16 *lpPageSetupTemplateName;
  void *hPageSetupTemplate;
};

/* 1518 */
union $466BD82A3CD27FA8EB347C95F0BBA358
{
  HWND__ *hwndOwner;
  unsigned int cMultipleItems;
};

/* 1519 */
struct tMIXERCONTROLDETAILS
{
  unsigned int cbStruct;
  unsigned int dwControlID;
  unsigned int cChannels;
  $466BD82A3CD27FA8EB347C95F0BBA358 ___u3;
  unsigned int cbDetails;
  void *paDetails;
};

/* 1520 */
struct HHOOK__
{
  int unused;
};

/* 1521 */
struct __declspec(align(4)) _cpinfo
{
  unsigned int MaxCharSize;
  unsigned __int8 DefaultChar[2];
  unsigned __int8 LeadByte[12];
};

/* 1522 */
struct __declspec(align(4)) tagHW_PROFILE_INFOW
{
  unsigned int dwDockInfo;
  unsigned __int16 szHwProfileGuid[39];
  unsigned __int16 szHwProfileName[80];
};

/* 1523 */
struct _NETINFOSTRUCT
{
  unsigned int cbStructure;
  unsigned int dwProviderVersion;
  unsigned int dwStatus;
  unsigned int dwCharacteristics;
  unsigned int dwHandle;
  unsigned __int16 wNetType;
  unsigned int dwPrinters;
  unsigned int dwDrives;
};

/* 1524 */
struct _CHAR_INFO
{
  $B34434447B6B77C7D7B1493D8CD04E6E Char;
  unsigned __int16 Attributes;
};

/* 1525 */
struct ICDRAWSUGGEST
{
  tagBITMAPINFOHEADER *lpbiIn;
  tagBITMAPINFOHEADER *lpbiSuggest;
  int dxSrc;
  int dySrc;
  int dxDst;
  int dyDst;
  HIC__ *hicDecompressor;
};

/* 1526 */
struct __unaligned __declspec(align(2)) tagPDW
{
  unsigned int lStructSize;
  HWND__ *hwndOwner;
  void *hDevMode;
  void *hDevNames;
  HDC__ *hDC;
  unsigned int Flags;
  unsigned __int16 nFromPage;
  unsigned __int16 nToPage;
  unsigned __int16 nMinPage;
  unsigned __int16 nMaxPage;
  unsigned __int16 nCopies;
  HINSTANCE__ *hInstance;
  int lCustData;
  unsigned int (__stdcall *lpfnPrintHook)(HWND__ *, unsigned int, unsigned int, int);
  unsigned int (__stdcall *lpfnSetupHook)(HWND__ *, unsigned int, unsigned int, int);
  const unsigned __int16 *lpPrintTemplateName;
  const unsigned __int16 *lpSetupTemplateName;
  void *hPrintTemplate;
  void *hSetupTemplate;
};

/* 1527 */
struct _WINDOW_BUFFER_SIZE_RECORD
{
  _COORD dwSize;
};

/* 1528 */
struct _MENU_EVENT_RECORD
{
  unsigned int dwCommandId;
};

/* 1529 */
union $353CC1265A0B616373AB8AC898BD0F11
{
  _KEY_EVENT_RECORD KeyEvent;
  _MOUSE_EVENT_RECORD MouseEvent;
  _WINDOW_BUFFER_SIZE_RECORD WindowBufferSizeEvent;
  _MENU_EVENT_RECORD MenuEvent;
  _FOCUS_EVENT_RECORD FocusEvent;
};

/* 1530 */
struct _INPUT_RECORD
{
  unsigned __int16 EventType;
  $353CC1265A0B616373AB8AC898BD0F11 Event;
};

/* 1531 */
struct tagRASSUBENTRYW
{
  unsigned int dwSize;
  unsigned int dwfFlags;
  unsigned __int16 szDeviceType[17];
  unsigned __int16 szDeviceName[129];
  unsigned __int16 szLocalPhoneNumber[129];
  unsigned int dwAlternateOffset;
};

/* 1532 */
struct _ABCFLOAT
{
  float abcfA;
  float abcfB;
  float abcfC;
};

/* 1533 */
struct tagOLEUICHANGEICONW
{
  unsigned int cbStruct;
  unsigned int dwFlags;
  HWND__ *hWndOwner;
  const unsigned __int16 *lpszCaption;
  unsigned int (__stdcall *lpfnHook)(HWND__ *, unsigned int, unsigned int, int);
  int lCustData;
  HINSTANCE__ *hInstance;
  const unsigned __int16 *lpszTemplate;
  HRSRC__ *hResource;
  void *hMetaPict;
  _GUID clsid;
  unsigned __int16 szIconExe[260];
  int cchIconExe;
};

/* 1534 */
struct tagGCP_RESULTSW
{
  unsigned int lStructSize;
  unsigned __int16 *lpOutString;
  unsigned int *lpOrder;
  int *lpDx;
  int *lpCaretPos;
  char *lpClass;
  unsigned __int16 *lpGlyphs;
  unsigned int nGlyphs;
  int nMaxFit;
};

/* 1535 */
struct tagMSGBOXPARAMSW
{
  unsigned int cbSize;
  HWND__ *hwndOwner;
  HINSTANCE__ *hInstance;
  const unsigned __int16 *lpszText;
  const unsigned __int16 *lpszCaption;
  unsigned int dwStyle;
  const unsigned __int16 *lpszIcon;
  unsigned int dwContextHelpId;
  void (__stdcall *lpfnMsgBoxCallback)(tagHELPINFO *);
  unsigned int dwLanguageId;
};

/* 1536 */
struct tagDRAWTEXTPARAMS
{
  unsigned int cbSize;
  int iTabLength;
  int iLeftMargin;
  int iRightMargin;
  unsigned int uiLengthDrawn;
};

/* 1537 */
struct _OSVERSIONINFOW
{
  unsigned int dwOSVersionInfoSize;
  unsigned int dwMajorVersion;
  unsigned int dwMinorVersion;
  unsigned int dwBuildNumber;
  unsigned int dwPlatformId;
  unsigned __int16 szCSDVersion[128];
};

/* 1538 */
struct __declspec(align(4)) tagRASENTRYNAMEW
{
  unsigned int dwSize;
  unsigned __int16 szEntryName[257];
  unsigned int dwFlags;
  unsigned __int16 szPhonebookPath[261];
};

/* 1539 */
struct tagMIDIINCAPSW
{
  unsigned __int16 wMid;
  unsigned __int16 wPid;
  unsigned int vDriverVersion;
  unsigned __int16 szPname[32];
  unsigned int dwSupport;
};

/* 1540 */
struct tagRASDEVINFOW
{
  unsigned int dwSize;
  unsigned __int16 szDeviceType[17];
  unsigned __int16 szDeviceName[129];
};

/* 1541 */
struct HMIXEROBJ__
{
  int unused;
};

/* 1542 */
struct tagMONITORINFO
{
  unsigned int cbSize;
  tagRECT rcMonitor;
  tagRECT rcWork;
  unsigned int dwFlags;
};

/* 1543 */
struct __declspec(align(4)) tagRASCONNSTATUSW
{
  unsigned int dwSize;
  tagRASCONNSTATE rasconnstate;
  unsigned int dwError;
  unsigned __int16 szDeviceType[17];
  unsigned __int16 szDeviceName[129];
  unsigned __int16 szPhoneNumber[129];
};

/* 1544 */
struct DLLMap
{
  const char *szDLLName;
  HINSTANCE__ *hMod;
};

/* 1545 */
struct _IMAGE_FILE_HEADER
{
  unsigned __int16 Machine;
  unsigned __int16 NumberOfSections;
  unsigned int TimeDateStamp;
  unsigned int PointerToSymbolTable;
  unsigned int NumberOfSymbols;
  unsigned __int16 SizeOfOptionalHeader;
  unsigned __int16 Characteristics;
};

/* 1546 */
struct _IMAGE_DATA_DIRECTORY
{
  unsigned int VirtualAddress;
  unsigned int Size;
};

/* 1547 */
struct _IMAGE_OPTIONAL_HEADER
{
  unsigned __int16 Magic;
  unsigned __int8 MajorLinkerVersion;
  unsigned __int8 MinorLinkerVersion;
  unsigned int SizeOfCode;
  unsigned int SizeOfInitializedData;
  unsigned int SizeOfUninitializedData;
  unsigned int AddressOfEntryPoint;
  unsigned int BaseOfCode;
  unsigned int BaseOfData;
  unsigned int ImageBase;
  unsigned int SectionAlignment;
  unsigned int FileAlignment;
  unsigned __int16 MajorOperatingSystemVersion;
  unsigned __int16 MinorOperatingSystemVersion;
  unsigned __int16 MajorImageVersion;
  unsigned __int16 MinorImageVersion;
  unsigned __int16 MajorSubsystemVersion;
  unsigned __int16 MinorSubsystemVersion;
  unsigned int Win32VersionValue;
  unsigned int SizeOfImage;
  unsigned int SizeOfHeaders;
  unsigned int CheckSum;
  unsigned __int16 Subsystem;
  unsigned __int16 DllCharacteristics;
  unsigned int SizeOfStackReserve;
  unsigned int SizeOfStackCommit;
  unsigned int SizeOfHeapReserve;
  unsigned int SizeOfHeapCommit;
  unsigned int LoaderFlags;
  unsigned int NumberOfRvaAndSizes;
  _IMAGE_DATA_DIRECTORY DataDirectory[16];
};

/* 1548 */
struct _IMAGE_NT_HEADERS
{
  unsigned int Signature;
  _IMAGE_FILE_HEADER FileHeader;
  _IMAGE_OPTIONAL_HEADER OptionalHeader;
};

/* 1549 */
struct _UNICODE_STRING
{
  unsigned __int16 Length;
  unsigned __int16 MaximumLength;
  unsigned __int16 *Buffer;
};

/* 1550 */
struct LIST_ENTRY32
{
  unsigned int Flink;
  unsigned int Blink;
};

/* 1551 */
struct LIST_ENTRY64
{
  unsigned __int64 Flink;
  unsigned __int64 Blink;
};

/* 1552 */
struct _IMAGE_EXPORT_DIRECTORY
{
  unsigned int Characteristics;
  unsigned int TimeDateStamp;
  unsigned __int16 MajorVersion;
  unsigned __int16 MinorVersion;
  unsigned int Name;
  unsigned int Base;
  unsigned int NumberOfFunctions;
  unsigned int NumberOfNames;
  unsigned int AddressOfFunctions;
  unsigned int AddressOfNames;
  unsigned int AddressOfNameOrdinals;
};

/* 1553 */
struct CKeyFrame
{
  int time;
};

/* 1554 */
struct CKeySeq
{
  unsigned int start;
  unsigned int count;
};

/* 1555 */
struct __cppobj CArray<CKeySeq>
{
  CKeySeq *m_data;
  unsigned int m_count;
};

/* 1556 */
struct __cppobj CKeyFrameTrackBase
{
  CKeyFrame *m_keyFrames;
  unsigned int m_numKeyFrames;
  unsigned int m_keyFrameSize;
  CArray<CKeySeq> m_indices;
  unsigned int m_globalSeqId;
};

/* 1557 */
struct __cppobj CMdlString<80>
{
  char m_string[80];
};

/* 1558 */
struct __cppobj NTempest::CiRange
{
  int l;
  int h;
};

/* 1559 */
struct __cppobj NTempest::CAaBox
{
  NTempest::C3Vector b;
  NTempest::C3Vector t;
};

/* 1560 */
struct __cppobj CMdlBounds
{
  NTempest::CAaBox extent;
  float radius;
};

/* 1561 */
struct __cppobj CAnimSequence
{
  CMdlString<80> name;
  NTempest::CiRange time;
  float moveSpeed;
  unsigned int flags;
  unsigned int randPickChance;
  NTempest::CiRange replay;
  CMdlBounds bounds;
  unsigned int blendTime;
};

/* 1562 */
struct __cppobj CArray<CAnimSequence>
{
  CAnimSequence *m_data;
  unsigned int m_count;
};

/* 1563 */
struct __cppobj CBaseStatus
{
  unsigned __int8 currSeq;
  unsigned __int8 flags;
};

/* 1564 */
struct __cppobj CKeyTrackStatus
{
  unsigned int currKey;
  unsigned int nextKey;
  int timepastkey;
};

/* 1565 */
struct __cppobj CHandleObject
{
  CHandleObject_vtbl *__vftable /*VFT*/;
  int m_refcount;
};

/* 1566 */
struct /*VFT*/ CHandleObject_vtbl
{
  void (__thiscall *~CHandleObject)(CHandleObject *this);
  const char *(__thiscall *CHandleObject::GetObjectName)(CHandleObject *this);
};

/* 1570 */
struct __cppobj CArray<CSeqInfo>
{
  CSeqInfo *m_data;
  unsigned int m_count;
};

/* 1572 */
struct __cppobj CArray<CAnimObjStatus *>
{
  CAnimObjStatus **m_data;
  unsigned int m_count;
};

/* 1573 */
struct __cppobj CArray<CAnimObjStatus>
{
  CAnimObjStatus *m_data;
  unsigned int m_count;
};

/* 1575 */
struct __cppobj CArray<CAnimGeosetObjStatus>
{
  CAnimGeosetObjStatus *m_data;
  unsigned int m_count;
};

/* 1577 */
struct __cppobj CArray<CAnimModelObjStatus>
{
  CAnimModelObjStatus *m_data;
  unsigned int m_count;
};

/* 1578 */
struct __cppobj CArray<unsigned int>
{
  unsigned int *m_data;
  unsigned int m_count;
};

/* 1580 */
struct __cppobj CArray<CAnimObjBlendStatus>
{
  CAnimObjBlendStatus *m_data;
  unsigned int m_count;
};

/* 1582 */
struct __cppobj CArray<CAnimLightObjStatus>
{
  CAnimLightObjStatus *m_data;
  unsigned int m_count;
};

/* 1584 */
struct __cppobj CArray<CAnimEmitter2ObjStatus>
{
  CAnimEmitter2ObjStatus *m_data;
  unsigned int m_count;
};

/* 1586 */
struct __cppobj CArray<CAnimRibbonObjStatus>
{
  CAnimRibbonObjStatus *m_data;
  unsigned int m_count;
};

/* 1588 */
struct __cppobj CArray<CAnimCameraObjStatus>
{
  CAnimCameraObjStatus *m_data;
  unsigned int m_count;
};

/* 1590 */
struct __cppobj CArray<CAnimEventObjStatus>
{
  CAnimEventObjStatus *m_data;
  unsigned int m_count;
};

/* 1592 */
struct __cppobj CArray<CAnimLayerStatus>
{
  CAnimLayerStatus *m_data;
  unsigned int m_count;
};

/* 1568 */
struct __cppobj CCallbackFcn<int (__fastcall*)(void *)>
{
  int (__fastcall *callback)(void *);
  void *param;
};

/* 1593 */
struct __cppobj CCallbackFcn<void (__fastcall*)(char const *,NTempest::C3Vector const &,void *)>
{
  void (__fastcall *callback)(const char *, const NTempest::C3Vector *, void *);
  void *param;
};

/* 1567 */
struct __cppobj __declspec(align(2)) CAnim : CHandleObject
{
  CArray<CSeqInfo> seq;
  CArray<CAnimObjStatus *> status;
  CArray<CAnimObjStatus> baseStatus;
  CArray<CAnimObjStatus> boneStatus;
  CArray<CAnimGeosetObjStatus> geosetStatus;
  CArray<CAnimModelObjStatus> modelStatus;
  CArray<unsigned int> globalSeqElapsed;
  CArray<CAnimObjBlendStatus> blendStatus;
  CArray<CAnimLightObjStatus> lightStatus;
  CArray<CAnimObjStatus> textureStatus;
  CArray<CAnimEmitter2ObjStatus> emitter2Status;
  CArray<CAnimRibbonObjStatus> ribbonStatus;
  CArray<CAnimCameraObjStatus> cameraStatus;
  CArray<CAnimEventObjStatus> eventStatus;
  CArray<CAnimLayerStatus> layerStatus;
  TSGrowableArray<NTempest::C3Vector> lookAtTarget;
  CCallbackFcn<int (__fastcall*)(void *)> anySeqFinished;
  CCallbackFcn<void (__fastcall*)(char const *,NTempest::C3Vector const &,void *)> appEvent;
  HANIMDATA__ *hdata;
  unsigned int seqLastTime;
  unsigned __int8 flags;
  unsigned __int8 primarySeq;
  unsigned __int8 seqMapIndex;
};

/* 1569 */
struct __cppobj CSeqInfo
{
  int elapsed;
  unsigned __int32 useCount : 16;
  unsigned __int32 replayTimes : 15;
  unsigned __int32 seqFinished : 1;
  CCallbackFcn<int (__fastcall*)(void *)> finished;
  float seqTimeScale;
  int scaledElapsedTime;
};

/* 1571 */
struct __cppobj __declspec(align(2)) CAnimObjStatus
{
  CKeyTrackStatus translation;
  CKeyTrackStatus rotation;
  CKeyTrackStatus scale;
  CBaseStatus base;
  unsigned __int8 lookAtId;
};

/* 1574 */
struct __cppobj __declspec(align(4)) CAnimGeosetObjStatus
{
  CKeyTrackStatus color;
  CKeyTrackStatus visibility;
  CBaseStatus base;
};

/* 1576 */
struct __cppobj CAnimModelObjStatus : CAnimObjStatus
{
  CKeyTrackStatus visibility;
  float visible;
};

/* 1579 */
struct __cppobj CAnimObjBlendStatus
{
  int blendTimer;
  NTempest::C3Vector prevSeqPosition;
  NTempest::C4Quaternion prevSeqRotation;
  NTempest::C3Vector prevSeqScale;
  NTempest::C3Vector blendPosition;
  NTempest::C4Quaternion blendRotation;
  NTempest::C3Vector blendScale;
};

/* 1581 */
struct __cppobj CAnimLightObjStatus : CAnimObjStatus
{
  CKeyTrackStatus attenstart;
  CKeyTrackStatus attenend;
  CKeyTrackStatus color;
  CKeyTrackStatus intensity;
  CKeyTrackStatus visibility;
  CKeyTrackStatus ambColor;
  CKeyTrackStatus ambIntensity;
};

/* 1583 */
struct __cppobj CAnimEmitter2ObjStatus : CAnimObjStatus
{
  CKeyTrackStatus speed;
  CKeyTrackStatus emissionRate;
  CKeyTrackStatus gravity;
  CKeyTrackStatus latitude;
  CKeyTrackStatus longitude;
  CKeyTrackStatus visibility;
  CKeyTrackStatus variation;
  CKeyTrackStatus length;
  CKeyTrackStatus width;
  CKeyTrackStatus zsource;
  CKeyTrackStatus lifeSpan;
  float elapsedTime;
};

/* 1585 */
struct __cppobj CAnimRibbonObjStatus : CAnimObjStatus
{
  CKeyTrackStatus visibility;
  CKeyTrackStatus heightAbove;
  CKeyTrackStatus heightBelow;
  CKeyTrackStatus color;
  CKeyTrackStatus alpha;
  CKeyTrackStatus slot;
  float elapsedTime;
};

/* 1587 */
struct __cppobj __declspec(align(4)) CAnimCameraObjStatus
{
  float visible;
  CKeyTrackStatus visibility;
  CKeyTrackStatus translation;
  CKeyTrackStatus roll;
  CKeyTrackStatus targetTranslation;
  CBaseStatus base;
};

/* 1589 */
struct __cppobj CAnimEventObjStatus : CAnimObjStatus
{
  CKeyTrackStatus event;
  NTempest::C3Vector position;
};

/* 1591 */
struct __cppobj __declspec(align(4)) CAnimLayerStatus
{
  CKeyTrackStatus visibility;
  CKeyTrackStatus flipIndex;
  CBaseStatus base;
};

/* 1594 */
struct __cppobj HANIMDATA__ : HOBJECT__
{
  int unused;
};

/* 1595 */
struct /*VFT*/ CAnim_vtbl
{
  void (__thiscall *~CAnim)(CAnim *this);
  const char *(__thiscall *CHandleObject::GetObjectName)(struct CAnim *this);
};

/* 1596 */
struct __cppobj TSBaseArray<CSeqOrdering>
{
  TSBaseArray<CSeqOrdering>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CSeqOrdering *m_data;
};

/* 1597 */
struct /*VFT*/ TSBaseArray<CSeqOrdering>_vtbl
{
  const char *(__thiscall *TSBaseArray<CSeqOrdering>::MemFileName)(TSBaseArray<CSeqOrdering> *this);
  int (__thiscall *TSBaseArray<CSeqOrdering>::MemLineNo)(TSBaseArray<CSeqOrdering> *this);
};

/* 1600 */
struct __cppobj CArray<CVariations>
{
  CVariations *m_data;
  unsigned int m_count;
};

/* 1601 */
struct __cppobj CSeqOrdering
{
  CArray<CVariations> order;
  const char **nameListUsed;
};

/* 1598 */
struct __cppobj CArray<unsigned char>
{
  unsigned __int8 *m_data;
  unsigned int m_count;
};

/* 1599 */
struct __cppobj __declspec(align(4)) CVariations
{
  CArray<unsigned char> variation;
  unsigned __int8 primary;
};

/* 1602 */
struct /*VFT*/ TSFixedArray<CSeqOrdering>_vtbl
{
  const char *(__thiscall *TSBaseArray<CSeqOrdering>::MemFileName)(struct TSFixedArray<CSeqOrdering> *this);
  int (__thiscall *TSBaseArray<CSeqOrdering>::MemLineNo)(struct TSFixedArray<CSeqOrdering> *this);
};

/* 1603 */
struct __cppobj TSFixedArray<CSeqOrdering> : TSBaseArray<CSeqOrdering>
{
};

/* 1604 */
struct /*VFT*/ TSGrowableArray<CSeqOrdering>_vtbl
{
  const char *(__thiscall *TSBaseArray<CSeqOrdering>::MemFileName)(struct TSGrowableArray<CSeqOrdering> *this);
  int (__thiscall *TSBaseArray<CSeqOrdering>::MemLineNo)(struct TSGrowableArray<CSeqOrdering> *this);
};

/* 1605 */
struct __cppobj TSGrowableArray<CSeqOrdering> : TSFixedArray<CSeqOrdering>
{
  unsigned int m_chunk;
};

/* 1606 */
struct __cppobj CKeyFrameTrack<NTempest::C3Vector,NTempest::C3Vector> : CKeyFrameTrackBase
{
  KEYTYPE m_trackType;
};

/* 1607 */
struct __cppobj CKeyFrameTrack<NTempest::C4QuaternionCompressed,NTempest::C4Quaternion> : CKeyFrameTrackBase
{
  KEYTYPE m_trackType;
};

/* 1608 */
struct __cppobj CAnimTransform
{
  CKeyFrameTrack<NTempest::C3Vector,NTempest::C3Vector> translation;
  CKeyFrameTrack<NTempest::C4QuaternionCompressed,NTempest::C4Quaternion> rotation;
  CKeyFrameTrack<NTempest::C3Vector,NTempest::C3Vector> scale;
};

/* 1609 */
struct __cppobj TSBaseArray<CAnimObj *>
{
  TSBaseArray<CAnimObj *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CAnimObj **m_data;
};

/* 1610 */
struct /*VFT*/ TSBaseArray<CAnimObj *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CAnimObj *>::MemFileName)(TSBaseArray<CAnimObj *> *this);
  int (__thiscall *TSBaseArray<CAnimObj *>::MemLineNo)(TSBaseArray<CAnimObj *> *this);
};

/* 1613 */
struct __cppobj TSFixedArray<CAnimObj *> : TSBaseArray<CAnimObj *>
{
};

/* 1615 */
struct __cppobj TSGrowableArray<CAnimObj *> : TSFixedArray<CAnimObj *>
{
  unsigned int m_chunk;
};

/* 1611 */
struct __cppobj __declspec(align(4)) CAnimObj : CAnimTransform
{
  unsigned int animObjId;
  unsigned int splitIndex;
  char name[80];
  TSGrowableArray<CAnimObj *> childarray;
  unsigned __int8 type;
  unsigned __int8 flags;
};

/* 1612 */
struct /*VFT*/ TSFixedArray<CAnimObj *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CAnimObj *>::MemFileName)(struct TSFixedArray<CAnimObj *> *this);
  int (__thiscall *TSBaseArray<CAnimObj *>::MemLineNo)(struct TSFixedArray<CAnimObj *> *this);
};

/* 1614 */
struct /*VFT*/ TSGrowableArray<CAnimObj *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CAnimObj *>::MemFileName)(struct TSGrowableArray<CAnimObj *> *this);
  int (__thiscall *TSBaseArray<CAnimObj *>::MemLineNo)(struct TSGrowableArray<CAnimObj *> *this);
};

/* 1616 */
struct __cppobj CArray<CAnimObj *>
{
  CAnimObj **m_data;
  unsigned int m_count;
};

/* 1617 */
struct __cppobj CKeyFrameTrack<float,float> : CKeyFrameTrackBase
{
  KEYTYPE m_trackType;
};

/* 1618 */
struct __cppobj CAnimVisibleObj
{
  CKeyFrameTrack<float,float> visibility;
};

/* 1619 */
struct __cppobj CKeyFrameTrack<C3Color,C3Color> : CKeyFrameTrackBase
{
  KEYTYPE m_trackType;
};

/* 1620 */
struct __cppobj CAnimGeoset : CAnimVisibleObj
{
  CKeyFrameTrack<C3Color,C3Color> color;
  unsigned int sgGeosetId;
};

/* 1621 */
struct __cppobj CArray<CAnimGeoset>
{
  CAnimGeoset *m_data;
  unsigned int m_count;
};

/* 1622 */
struct __cppobj CArray<CAnimTransform>
{
  CAnimTransform *m_data;
  unsigned int m_count;
};

/* 1623 */
struct __cppobj CArray<CAnimObj>
{
  CAnimObj *m_data;
  unsigned int m_count;
};

/* 1624 */
struct __cppobj __declspec(align(4)) CAnimBoneObj : CAnimObj
{
  unsigned __int8 geosetId;
};

/* 1625 */
struct __cppobj CArray<CAnimBoneObj>
{
  CAnimBoneObj *m_data;
  unsigned int m_count;
};

/* 1626 */
struct __cppobj CAnimLightObj : CAnimObj, CAnimVisibleObj
{
  CKeyFrameTrack<float,float> attenstart;
  CKeyFrameTrack<float,float> attenend;
  CKeyFrameTrack<C3Color,C3Color> color;
  CKeyFrameTrack<float,float> intensity;
  CKeyFrameTrack<C3Color,C3Color> ambColor;
  CKeyFrameTrack<float,float> ambIntensity;
};

/* 1627 */
struct __cppobj CArray<CAnimLightObj>
{
  CAnimLightObj *m_data;
  unsigned int m_count;
};

/* 1628 */
struct __cppobj __declspec(align(4)) CAnimModelObj : CAnimObj, CAnimVisibleObj
{
  unsigned __int8 geosetId;
};

/* 1629 */
struct __cppobj CArray<CAnimModelObj>
{
  CAnimModelObj *m_data;
  unsigned int m_count;
};

/* 1630 */
struct __cppobj CAnimEmitter2Obj : CAnimObj, CAnimVisibleObj
{
  CKeyFrameTrack<float,float> particleSpeed;
  CKeyFrameTrack<float,float> emissionRate;
  CKeyFrameTrack<float,float> gravity;
  CKeyFrameTrack<float,float> variation;
  CKeyFrameTrack<float,float> latitude;
  CKeyFrameTrack<float,float> longitude;
  CKeyFrameTrack<float,float> length;
  CKeyFrameTrack<float,float> width;
  CKeyFrameTrack<float,float> zsource;
  CKeyFrameTrack<float,float> lifeSpan;
  unsigned int squirts;
};

/* 1631 */
struct __cppobj CArray<CAnimEmitter2Obj>
{
  CAnimEmitter2Obj *m_data;
  unsigned int m_count;
};

/* 1632 */
struct __cppobj CKeyFrameTrack<unsigned int,unsigned int> : CKeyFrameTrackBase
{
  KEYTYPE m_trackType;
};

/* 1633 */
struct __cppobj CAnimRibbonObj : CAnimObj, CAnimVisibleObj
{
  CKeyFrameTrack<float,float> heightAbove;
  CKeyFrameTrack<float,float> heightBelow;
  CKeyFrameTrack<C3Color,C3Color> color;
  CKeyFrameTrack<float,float> alpha;
  CKeyFrameTrack<unsigned int,unsigned int> slot;
};

/* 1634 */
struct __cppobj CArray<CAnimRibbonObj>
{
  CAnimRibbonObj *m_data;
  unsigned int m_count;
};

/* 1635 */
struct __cppobj CAnimCameraObj : CAnimVisibleObj
{
  char name[80];
  NTempest::C3Vector pivot;
  CKeyFrameTrack<NTempest::C3Vector,NTempest::C3Vector> translation;
  CKeyFrameTrack<float,float> roll;
  NTempest::C3Vector targetPivot;
  CKeyFrameTrack<NTempest::C3Vector,NTempest::C3Vector> targetTranslation;
};

/* 1636 */
struct __cppobj CArray<CAnimCameraObj>
{
  CAnimCameraObj *m_data;
  unsigned int m_count;
};

/* 1637 */
struct __cppobj CAnimEventObj : CAnimObj
{
  CKeyFrameTrackBase events;
};

/* 1638 */
struct __cppobj CArray<CAnimEventObj>
{
  CAnimEventObj *m_data;
  unsigned int m_count;
};

/* 1639 */
struct __cppobj CAnimMaterialLayer : CAnimVisibleObj
{
  CKeyFrameTrack<unsigned int,unsigned int> flip;
  unsigned int layerId;
};

/* 1640 */
struct __cppobj CArray<CAnimMaterialLayer>
{
  CAnimMaterialLayer *m_data;
  unsigned int m_count;
};

/* 1641 */
struct __cppobj __declspec(align(4)) CAnimData : CHandleObject
{
  TSGrowableArray<CSeqOrdering> seqOrder;
  CArray<unsigned int> objectOrder;
  CArray<CAnimSequence> seq;
  CArray<unsigned int> globalSeqLength;
  CArray<CAnimObj *> obj;
  CArray<CAnimGeoset> geo;
  CArray<CAnimTransform> tex;
  CArray<CAnimObj> baseObjs;
  CArray<CAnimBoneObj> boneObjs;
  CArray<CAnimLightObj> lightObjs;
  CArray<CAnimModelObj> modelObjs;
  CArray<CAnimEmitter2Obj> emitter2Objs;
  CArray<CAnimRibbonObj> ribbonObjs;
  CArray<CAnimCameraObj> cameraObjs;
  CArray<CAnimEventObj> eventObjs;
  CArray<CAnimMaterialLayer> layers;
  TSGrowableArray<unsigned int> geoIdToGeoAnimId;
  TSGrowableArray<CAnimObj *> headarray;
  unsigned __int8 flags;
};

/* 1642 */
struct /*VFT*/ CAnimData_vtbl
{
  void (__thiscall *~CAnimData)(CAnimData *this);
  const char *(__thiscall *CHandleObject::GetObjectName)(struct CAnimData *this);
};

/* 1643 */
struct __cppobj InterpInfo
{
  CAnim *unique;
  CAnimData *shared;
  NTempest::C3Vector basisX;
  NTempest::C3Vector basisY;
  NTempest::C3Vector basisZ;
  NTempest::C3Vector basisScale;
  NTempest::C3Vector basisPosition;
  const TSFixedArray<NTempest::C3Vector> *positions;
};

/* 1644 */
struct __cppobj NTempest::C4QuaternionCompressed
{
  __int64 m_data;
};

/* 1645 */
struct __cppobj CLinearKeyFrame<NTempest::C4QuaternionCompressed> : CKeyFrame
{
  NTempest::C4QuaternionCompressed transform;
};

/* 1646 */
struct __cppobj CSplineKeyFrame<NTempest::C4QuaternionCompressed> : CLinearKeyFrame<NTempest::C4QuaternionCompressed>
{
  NTempest::C4QuaternionCompressed inTan;
  NTempest::C4QuaternionCompressed outTan;
};

/* 1647 */
struct __cppobj CLinearKeyFrame<NTempest::C3Vector> : CKeyFrame
{
  NTempest::C3Vector transform;
};

/* 1648 */
struct __cppobj CSplineKeyFrame<NTempest::C3Vector> : CLinearKeyFrame<NTempest::C3Vector>
{
  NTempest::C3Vector inTan;
  NTempest::C3Vector outTan;
};

/* 1649 */
struct __cppobj C3Color
{
  float b;
  float g;
  float r;
};

/* 1650 */
struct __cppobj CLinearKeyFrame<C3Color> : CKeyFrame
{
  C3Color transform;
};

/* 1651 */
struct __cppobj CSplineKeyFrame<C3Color> : CLinearKeyFrame<C3Color>
{
  C3Color inTan;
  C3Color outTan;
};

/* 1652 */
struct __cppobj CLinearKeyFrame<float> : CKeyFrame
{
  float transform;
};

/* 1653 */
struct __cppobj CSplineKeyFrame<float> : CLinearKeyFrame<float>
{
  float inTan;
  float outTan;
};

/* 1654 */
struct __cppobj CLinearKeyFrame<unsigned int> : CKeyFrame
{
  unsigned int transform;
};

/* 1655 */
struct __cppobj CSplineKeyFrame<unsigned int> : CLinearKeyFrame<unsigned int>
{
  unsigned int inTan;
  unsigned int outTan;
};

/* 1656 */
struct __cppobj TSBaseArray<MDLEVENTKEY>
{
  TSBaseArray<MDLEVENTKEY>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  MDLEVENTKEY *m_data;
};

/* 1657 */
struct /*VFT*/ TSBaseArray<MDLEVENTKEY>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLEVENTKEY>::MemFileName)(TSBaseArray<MDLEVENTKEY> *this);
  int (__thiscall *TSBaseArray<MDLEVENTKEY>::MemLineNo)(TSBaseArray<MDLEVENTKEY> *this);
};

/* 1658 */
struct __cppobj MDLEVENTKEY
{
  int time;
};

/* 1659 */
struct /*VFT*/ TSFixedArray<MDLEVENTKEY>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLEVENTKEY>::MemFileName)(struct TSFixedArray<MDLEVENTKEY> *this);
  int (__thiscall *TSBaseArray<MDLEVENTKEY>::MemLineNo)(struct TSFixedArray<MDLEVENTKEY> *this);
};

/* 1660 */
struct __cppobj TSFixedArray<MDLEVENTKEY> : TSBaseArray<MDLEVENTKEY>
{
};

/* 1661 */
struct /*VFT*/ TSGrowableArray<MDLEVENTKEY>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLEVENTKEY>::MemFileName)(struct TSGrowableArray<MDLEVENTKEY> *this);
  int (__thiscall *TSBaseArray<MDLEVENTKEY>::MemLineNo)(struct TSGrowableArray<MDLEVENTKEY> *this);
};

/* 1662 */
struct __cppobj TSGrowableArray<MDLEVENTKEY> : TSFixedArray<MDLEVENTKEY>
{
  unsigned int m_chunk;
};

/* 1663 */
struct __cppobj MDLSIMPLEKEYTRACK<MDLEVENTKEY>
{
  TSGrowableArray<MDLEVENTKEY> keys;
  unsigned int globalSeqId;
};

/* 1664 */
struct __cppobj TSBaseArray<MDLKEYFRAME<NTempest::C3Vector> >
{
  TSBaseArray<MDLKEYFRAME<NTempest::C3Vector> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  MDLKEYFRAME<NTempest::C3Vector> *m_data;
};

/* 1665 */
struct /*VFT*/ TSBaseArray<MDLKEYFRAME<NTempest::C3Vector> >_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLKEYFRAME<NTempest::C3Vector> >::MemFileName)(TSBaseArray<MDLKEYFRAME<NTempest::C3Vector> > *this);
  int (__thiscall *TSBaseArray<MDLKEYFRAME<NTempest::C3Vector> >::MemLineNo)(TSBaseArray<MDLKEYFRAME<NTempest::C3Vector> > *this);
};

/* 1666 */
struct __cppobj MDLKEYFRAME<NTempest::C3Vector>
{
  int time;
  NTempest::C3Vector value;
  NTempest::C3Vector inTan;
  NTempest::C3Vector outTan;
};

/* 1667 */
struct /*VFT*/ TSFixedArray<MDLKEYFRAME<NTempest::C3Vector> >_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLKEYFRAME<NTempest::C3Vector> >::MemFileName)(struct TSFixedArray<MDLKEYFRAME<NTempest::C3Vector> > *this);
  int (__thiscall *TSBaseArray<MDLKEYFRAME<NTempest::C3Vector> >::MemLineNo)(struct TSFixedArray<MDLKEYFRAME<NTempest::C3Vector> > *this);
};

/* 1668 */
struct __cppobj TSFixedArray<MDLKEYFRAME<NTempest::C3Vector> > : TSBaseArray<MDLKEYFRAME<NTempest::C3Vector> >
{
};

/* 1669 */
struct /*VFT*/ TSGrowableArray<MDLKEYFRAME<NTempest::C3Vector> >_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLKEYFRAME<NTempest::C3Vector> >::MemFileName)(struct TSGrowableArray<MDLKEYFRAME<NTempest::C3Vector> > *this);
  int (__thiscall *TSBaseArray<MDLKEYFRAME<NTempest::C3Vector> >::MemLineNo)(struct TSGrowableArray<MDLKEYFRAME<NTempest::C3Vector> > *this);
};

/* 1670 */
struct __cppobj TSGrowableArray<MDLKEYFRAME<NTempest::C3Vector> > : TSFixedArray<MDLKEYFRAME<NTempest::C3Vector> >
{
  unsigned int m_chunk;
};

/* 1671 */
struct __cppobj MDLKEYTRACK<NTempest::C3Vector>
{
  TSGrowableArray<MDLKEYFRAME<NTempest::C3Vector> > keys;
  MDLTRACKTYPE type;
  unsigned int globalSeqId;
};

/* 1672 */
struct __cppobj TSBaseArray<MDLKEYFRAME<NTempest::C4Quaternion> >
{
  TSBaseArray<MDLKEYFRAME<NTempest::C4Quaternion> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  MDLKEYFRAME<NTempest::C4Quaternion> *m_data;
};

/* 1673 */
struct /*VFT*/ TSBaseArray<MDLKEYFRAME<NTempest::C4Quaternion> >_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLKEYFRAME<NTempest::C4Quaternion> >::MemFileName)(TSBaseArray<MDLKEYFRAME<NTempest::C4Quaternion> > *this);
  int (__thiscall *TSBaseArray<MDLKEYFRAME<NTempest::C4Quaternion> >::MemLineNo)(TSBaseArray<MDLKEYFRAME<NTempest::C4Quaternion> > *this);
};

/* 1674 */
struct __cppobj MDLKEYFRAME<NTempest::C4Quaternion>
{
  int time;
  NTempest::C4Quaternion value;
  NTempest::C4Quaternion inTan;
  NTempest::C4Quaternion outTan;
};

/* 1675 */
struct /*VFT*/ TSFixedArray<MDLKEYFRAME<NTempest::C4Quaternion> >_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLKEYFRAME<NTempest::C4Quaternion> >::MemFileName)(struct TSFixedArray<MDLKEYFRAME<NTempest::C4Quaternion> > *this);
  int (__thiscall *TSBaseArray<MDLKEYFRAME<NTempest::C4Quaternion> >::MemLineNo)(struct TSFixedArray<MDLKEYFRAME<NTempest::C4Quaternion> > *this);
};

/* 1676 */
struct __cppobj TSFixedArray<MDLKEYFRAME<NTempest::C4Quaternion> > : TSBaseArray<MDLKEYFRAME<NTempest::C4Quaternion> >
{
};

/* 1677 */
struct /*VFT*/ TSGrowableArray<MDLKEYFRAME<NTempest::C4Quaternion> >_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLKEYFRAME<NTempest::C4Quaternion> >::MemFileName)(struct TSGrowableArray<MDLKEYFRAME<NTempest::C4Quaternion> > *this);
  int (__thiscall *TSBaseArray<MDLKEYFRAME<NTempest::C4Quaternion> >::MemLineNo)(struct TSGrowableArray<MDLKEYFRAME<NTempest::C4Quaternion> > *this);
};

/* 1678 */
struct __cppobj TSGrowableArray<MDLKEYFRAME<NTempest::C4Quaternion> > : TSFixedArray<MDLKEYFRAME<NTempest::C4Quaternion> >
{
  unsigned int m_chunk;
};

/* 1679 */
struct __cppobj MDLKEYTRACK<NTempest::C4Quaternion>
{
  TSGrowableArray<MDLKEYFRAME<NTempest::C4Quaternion> > keys;
  MDLTRACKTYPE type;
  unsigned int globalSeqId;
};

/* 1680 */
struct __cppobj TSBaseArray<MDLKEYFRAME<float> >
{
  TSBaseArray<MDLKEYFRAME<float> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  MDLKEYFRAME<float> *m_data;
};

/* 1681 */
struct /*VFT*/ TSBaseArray<MDLKEYFRAME<float> >_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLKEYFRAME<float> >::MemFileName)(TSBaseArray<MDLKEYFRAME<float> > *this);
  int (__thiscall *TSBaseArray<MDLKEYFRAME<float> >::MemLineNo)(TSBaseArray<MDLKEYFRAME<float> > *this);
};

/* 1682 */
struct __cppobj MDLKEYFRAME<float>
{
  int time;
  float value;
  float inTan;
  float outTan;
};

/* 1683 */
struct /*VFT*/ TSFixedArray<MDLKEYFRAME<float> >_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLKEYFRAME<float> >::MemFileName)(struct TSFixedArray<MDLKEYFRAME<float> > *this);
  int (__thiscall *TSBaseArray<MDLKEYFRAME<float> >::MemLineNo)(struct TSFixedArray<MDLKEYFRAME<float> > *this);
};

/* 1684 */
struct __cppobj TSFixedArray<MDLKEYFRAME<float> > : TSBaseArray<MDLKEYFRAME<float> >
{
};

/* 1685 */
struct /*VFT*/ TSGrowableArray<MDLKEYFRAME<float> >_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLKEYFRAME<float> >::MemFileName)(struct TSGrowableArray<MDLKEYFRAME<float> > *this);
  int (__thiscall *TSBaseArray<MDLKEYFRAME<float> >::MemLineNo)(struct TSGrowableArray<MDLKEYFRAME<float> > *this);
};

/* 1686 */
struct __cppobj TSGrowableArray<MDLKEYFRAME<float> > : TSFixedArray<MDLKEYFRAME<float> >
{
  unsigned int m_chunk;
};

/* 1687 */
struct __cppobj MDLKEYTRACK<float>
{
  TSGrowableArray<MDLKEYFRAME<float> > keys;
  MDLTRACKTYPE type;
  unsigned int globalSeqId;
};

/* 1688 */
struct __cppobj TSBaseArray<MDLKEYFRAME<C3Color> >
{
  TSBaseArray<MDLKEYFRAME<C3Color> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  MDLKEYFRAME<C3Color> *m_data;
};

/* 1689 */
struct /*VFT*/ TSBaseArray<MDLKEYFRAME<C3Color> >_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLKEYFRAME<C3Color> >::MemFileName)(TSBaseArray<MDLKEYFRAME<C3Color> > *this);
  int (__thiscall *TSBaseArray<MDLKEYFRAME<C3Color> >::MemLineNo)(TSBaseArray<MDLKEYFRAME<C3Color> > *this);
};

/* 1690 */
struct __cppobj MDLKEYFRAME<C3Color>
{
  int time;
  C3Color value;
  C3Color inTan;
  C3Color outTan;
};

/* 1691 */
struct /*VFT*/ TSFixedArray<MDLKEYFRAME<C3Color> >_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLKEYFRAME<C3Color> >::MemFileName)(struct TSFixedArray<MDLKEYFRAME<C3Color> > *this);
  int (__thiscall *TSBaseArray<MDLKEYFRAME<C3Color> >::MemLineNo)(struct TSFixedArray<MDLKEYFRAME<C3Color> > *this);
};

/* 1692 */
struct __cppobj TSFixedArray<MDLKEYFRAME<C3Color> > : TSBaseArray<MDLKEYFRAME<C3Color> >
{
};

/* 1693 */
struct /*VFT*/ TSGrowableArray<MDLKEYFRAME<C3Color> >_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLKEYFRAME<C3Color> >::MemFileName)(struct TSGrowableArray<MDLKEYFRAME<C3Color> > *this);
  int (__thiscall *TSBaseArray<MDLKEYFRAME<C3Color> >::MemLineNo)(struct TSGrowableArray<MDLKEYFRAME<C3Color> > *this);
};

/* 1694 */
struct __cppobj TSGrowableArray<MDLKEYFRAME<C3Color> > : TSFixedArray<MDLKEYFRAME<C3Color> >
{
  unsigned int m_chunk;
};

/* 1695 */
struct __cppobj MDLKEYTRACK<C3Color>
{
  TSGrowableArray<MDLKEYFRAME<C3Color> > keys;
  MDLTRACKTYPE type;
  unsigned int globalSeqId;
};

/* 1696 */
struct __cppobj TSBaseArray<MDLINTKEY>
{
  TSBaseArray<MDLINTKEY>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  MDLINTKEY *m_data;
};

/* 1697 */
struct /*VFT*/ TSBaseArray<MDLINTKEY>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLINTKEY>::MemFileName)(TSBaseArray<MDLINTKEY> *this);
  int (__thiscall *TSBaseArray<MDLINTKEY>::MemLineNo)(TSBaseArray<MDLINTKEY> *this);
};

/* 1698 */
struct __cppobj MDLINTKEY
{
  unsigned int time;
  unsigned int value;
};

/* 1699 */
struct /*VFT*/ TSFixedArray<MDLINTKEY>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLINTKEY>::MemFileName)(struct TSFixedArray<MDLINTKEY> *this);
  int (__thiscall *TSBaseArray<MDLINTKEY>::MemLineNo)(struct TSFixedArray<MDLINTKEY> *this);
};

/* 1700 */
struct __cppobj TSFixedArray<MDLINTKEY> : TSBaseArray<MDLINTKEY>
{
};

/* 1701 */
struct /*VFT*/ TSGrowableArray<MDLINTKEY>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLINTKEY>::MemFileName)(struct TSGrowableArray<MDLINTKEY> *this);
  int (__thiscall *TSBaseArray<MDLINTKEY>::MemLineNo)(struct TSGrowableArray<MDLINTKEY> *this);
};

/* 1702 */
struct __cppobj TSGrowableArray<MDLINTKEY> : TSFixedArray<MDLINTKEY>
{
  unsigned int m_chunk;
};

/* 1703 */
struct __cppobj MDLSIMPLEKEYTRACK<MDLINTKEY>
{
  TSGrowableArray<MDLINTKEY> keys;
  unsigned int globalSeqId;
};

/* 1704 */
struct __cppobj HANIM__ : HOBJECT__
{
  int unused;
};

/* 1705 */
struct __cppobj MDLTEXLAYER
{
  MDLTEXOP blendMode;
  unsigned int flags;
  unsigned int textureId;
  MDLSIMPLEKEYTRACK<MDLINTKEY> flipKeys;
  unsigned int transformId;
  unsigned int coordId;
  MDLKEYTRACK<float> alphaKeys;
  float staticAlpha;
};

/* 1706 */
struct __cppobj MDLGEOSETANIMSECTION
{
  MDLKEYTRACK<float> alphaKeys;
  float staticAlpha;
  unsigned int flags;
  MDLKEYTRACK<C3Color> colorKeys;
  C3Color staticColor;
  unsigned int geosetId;
};

/* 1707 */
struct __cppobj MDLTARGETSECTION
{
  NTempest::C3Vector pivot;
  MDLKEYTRACK<NTempest::C3Vector> transkeys;
};

/* 1708 */
struct __cppobj MDLCAMERASECTION
{
  CMdlString<80> name;
  NTempest::C3Vector pivot;
  float fieldOfView;
  float farClip;
  float nearClip;
  MDLKEYTRACK<NTempest::C3Vector> transkeys;
  MDLKEYTRACK<float> rollkeys;
  MDLTARGETSECTION target;
  MDLKEYTRACK<float> visibilityKeys;
};

/* 1709 */
struct __cppobj TSBaseArray<MDLSEQUENCESSECTION>
{
  TSBaseArray<MDLSEQUENCESSECTION>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  MDLSEQUENCESSECTION *m_data;
};

/* 1710 */
struct /*VFT*/ TSBaseArray<MDLSEQUENCESSECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLSEQUENCESSECTION>::MemFileName)(TSBaseArray<MDLSEQUENCESSECTION> *this);
  int (__thiscall *TSBaseArray<MDLSEQUENCESSECTION>::MemLineNo)(TSBaseArray<MDLSEQUENCESSECTION> *this);
};

/* 1711 */
struct __cppobj MDLSEQUENCESSECTION
{
  CMdlString<80> name;
  NTempest::CiRange time;
  float movespeed;
  unsigned int flags;
  CMdlBounds bounds;
  float frequency;
  NTempest::CiRange replay;
  unsigned int blendTime;
};

/* 1712 */
struct /*VFT*/ TSFixedArray<MDLSEQUENCESSECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLSEQUENCESSECTION>::MemFileName)(struct TSFixedArray<MDLSEQUENCESSECTION> *this);
  int (__thiscall *TSBaseArray<MDLSEQUENCESSECTION>::MemLineNo)(struct TSFixedArray<MDLSEQUENCESSECTION> *this);
};

/* 1713 */
struct __cppobj TSFixedArray<MDLSEQUENCESSECTION> : TSBaseArray<MDLSEQUENCESSECTION>
{
};

/* 1714 */
struct /*VFT*/ TSGrowableArray<MDLSEQUENCESSECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLSEQUENCESSECTION>::MemFileName)(struct TSGrowableArray<MDLSEQUENCESSECTION> *this);
  int (__thiscall *TSBaseArray<MDLSEQUENCESSECTION>::MemLineNo)(struct TSGrowableArray<MDLSEQUENCESSECTION> *this);
};

/* 1715 */
struct __cppobj TSGrowableArray<MDLSEQUENCESSECTION> : TSFixedArray<MDLSEQUENCESSECTION>
{
  unsigned int m_chunk;
};

/* 1716 */
struct __cppobj TSBaseArray<MDLGLOBALSEQSECTION>
{
  TSBaseArray<MDLGLOBALSEQSECTION>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  MDLGLOBALSEQSECTION *m_data;
};

/* 1717 */
struct /*VFT*/ TSBaseArray<MDLGLOBALSEQSECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLGLOBALSEQSECTION>::MemFileName)(TSBaseArray<MDLGLOBALSEQSECTION> *this);
  int (__thiscall *TSBaseArray<MDLGLOBALSEQSECTION>::MemLineNo)(TSBaseArray<MDLGLOBALSEQSECTION> *this);
};

/* 1718 */
struct __cppobj MDLGLOBALSEQSECTION
{
  unsigned int length;
};

/* 1719 */
struct /*VFT*/ TSFixedArray<MDLGLOBALSEQSECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLGLOBALSEQSECTION>::MemFileName)(struct TSFixedArray<MDLGLOBALSEQSECTION> *this);
  int (__thiscall *TSBaseArray<MDLGLOBALSEQSECTION>::MemLineNo)(struct TSFixedArray<MDLGLOBALSEQSECTION> *this);
};

/* 1720 */
struct __cppobj TSFixedArray<MDLGLOBALSEQSECTION> : TSBaseArray<MDLGLOBALSEQSECTION>
{
};

/* 1721 */
struct /*VFT*/ TSGrowableArray<MDLGLOBALSEQSECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLGLOBALSEQSECTION>::MemFileName)(struct TSGrowableArray<MDLGLOBALSEQSECTION> *this);
  int (__thiscall *TSBaseArray<MDLGLOBALSEQSECTION>::MemLineNo)(struct TSGrowableArray<MDLGLOBALSEQSECTION> *this);
};

/* 1722 */
struct __cppobj TSGrowableArray<MDLGLOBALSEQSECTION> : TSFixedArray<MDLGLOBALSEQSECTION>
{
  unsigned int m_chunk;
};

/* 1723 */
struct __cppobj TSBaseArray<MDLTEXANIMSECTION>
{
  TSBaseArray<MDLTEXANIMSECTION>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  MDLTEXANIMSECTION *m_data;
};

/* 1724 */
struct /*VFT*/ TSBaseArray<MDLTEXANIMSECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLTEXANIMSECTION>::MemFileName)(TSBaseArray<MDLTEXANIMSECTION> *this);
  int (__thiscall *TSBaseArray<MDLTEXANIMSECTION>::MemLineNo)(TSBaseArray<MDLTEXANIMSECTION> *this);
};

/* 1725 */
struct __cppobj MDLTEXANIMSECTION
{
  MDLKEYTRACK<NTempest::C3Vector> transkeys;
  MDLKEYTRACK<NTempest::C4Quaternion> rotkeys;
  MDLKEYTRACK<NTempest::C3Vector> scalekeys;
};

/* 1726 */
struct /*VFT*/ TSFixedArray<MDLTEXANIMSECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLTEXANIMSECTION>::MemFileName)(struct TSFixedArray<MDLTEXANIMSECTION> *this);
  int (__thiscall *TSBaseArray<MDLTEXANIMSECTION>::MemLineNo)(struct TSFixedArray<MDLTEXANIMSECTION> *this);
};

/* 1727 */
struct __cppobj TSFixedArray<MDLTEXANIMSECTION> : TSBaseArray<MDLTEXANIMSECTION>
{
};

/* 1728 */
struct /*VFT*/ TSGrowableArray<MDLTEXANIMSECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLTEXANIMSECTION>::MemFileName)(struct TSGrowableArray<MDLTEXANIMSECTION> *this);
  int (__thiscall *TSBaseArray<MDLTEXANIMSECTION>::MemLineNo)(struct TSGrowableArray<MDLTEXANIMSECTION> *this);
};

/* 1729 */
struct __cppobj TSGrowableArray<MDLTEXANIMSECTION> : TSFixedArray<MDLTEXANIMSECTION>
{
  unsigned int m_chunk;
};

/* 1730 */
struct __cppobj CGeosetColor
{
  NTempest::CImVector animatedColor;
  NTempest::CImVector proceduralColor;
  float animatedAlpha;
  float proceduralAlpha;
};

/* 1731 */
struct __cppobj CGxLight
{
  __int32 m_enabled : 1;
  __int32 m_isOmni : 1;
  NTempest::C3Vector m_dir;
  NTempest::CImVector m_ambColor;
  NTempest::CImVector m_dirColor;
  NTempest::CImVector m_specColor;
  float m_ambIntensity;
  float m_dirIntensity;
  float m_specIntensity;
  float m_constantAttenuation;
  float m_linearAttenuation;
  float m_quadraticAttenuation;
  float m_attenStart;
  float m_attenEnd;
};

/* 1732 */
struct __cppobj NTempest::C3Segment
{
  NTempest::C3Vector start;
  NTempest::C3Vector end;
};

/* 1733 */
struct __cppobj TSBaseArray<HCAMERA__ *>
{
  TSBaseArray<HCAMERA__ *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  HCAMERA__ **m_data;
};

/* 1734 */
struct /*VFT*/ TSBaseArray<HCAMERA__ *>_vtbl
{
  const char *(__thiscall *TSBaseArray<HCAMERA__ *>::MemFileName)(TSBaseArray<HCAMERA__ *> *this);
  int (__thiscall *TSBaseArray<HCAMERA__ *>::MemLineNo)(TSBaseArray<HCAMERA__ *> *this);
};

/* 1735 */
struct /*VFT*/ TSFixedArray<HCAMERA__ *>_vtbl
{
  const char *(__thiscall *TSBaseArray<HCAMERA__ *>::MemFileName)(struct TSFixedArray<HCAMERA__ *> *this);
  int (__thiscall *TSBaseArray<HCAMERA__ *>::MemLineNo)(struct TSFixedArray<HCAMERA__ *> *this);
};

/* 1736 */
struct __cppobj TSFixedArray<HCAMERA__ *> : TSBaseArray<HCAMERA__ *>
{
};

/* 1737 */
struct __cppobj CameraInfo : InterpInfo
{
  const TSFixedArray<HCAMERA__ *> *cameras;
};

/* 1738 */
struct __cppobj TSBaseArray<unsigned long>
{
  TSBaseArray<unsigned long>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  unsigned int *m_data;
};

/* 1739 */
struct /*VFT*/ TSBaseArray<unsigned long>_vtbl
{
  const char *(__thiscall *TSBaseArray<unsigned long>::MemFileName)(TSBaseArray<unsigned long> *this);
  int (__thiscall *TSBaseArray<unsigned long>::MemLineNo)(TSBaseArray<unsigned long> *this);
};

/* 1740 */
struct /*VFT*/ TSFixedArray<unsigned long>_vtbl
{
  const char *(__thiscall *TSBaseArray<unsigned long>::MemFileName)(struct TSFixedArray<unsigned long> *this);
  int (__thiscall *TSBaseArray<unsigned long>::MemLineNo)(struct TSFixedArray<unsigned long> *this);
};

/* 1741 */
struct __cppobj TSFixedArray<unsigned long> : TSBaseArray<unsigned long>
{
};

/* 1742 */
struct __cppobj TSBaseArray<CParticleEmitter2 *>
{
  TSBaseArray<CParticleEmitter2 *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CParticleEmitter2 **m_data;
};

/* 1743 */
struct /*VFT*/ TSBaseArray<CParticleEmitter2 *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CParticleEmitter2 *>::MemFileName)(TSBaseArray<CParticleEmitter2 *> *this);
  int (__thiscall *TSBaseArray<CParticleEmitter2 *>::MemLineNo)(TSBaseArray<CParticleEmitter2 *> *this);
};

/* 1748 */
struct __cppobj TSBaseArray<CParticle2>
{
  TSBaseArray<CParticle2>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CParticle2 *m_data;
};

/* 1751 */
struct __cppobj TSFixedArray<CParticle2> : TSBaseArray<CParticle2>
{
};

/* 1753 */
struct __cppobj TSGrowableArray<CParticle2> : TSFixedArray<CParticle2>
{
  unsigned int m_chunk;
};

/* 1754 */
struct __cppobj TSBaseArray<CParticle2_Model>
{
  TSBaseArray<CParticle2_Model>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CParticle2_Model *m_data;
};

/* 1757 */
struct __cppobj TSFixedArray<CParticle2_Model> : TSBaseArray<CParticle2_Model>
{
};

/* 1759 */
struct __cppobj TSGrowableArray<CParticle2_Model> : TSFixedArray<CParticle2_Model>
{
  unsigned int m_chunk;
};

/* 1760 */
struct __cppobj CParticleStack
{
  TSGrowableArray<unsigned int> m_stack;
  unsigned int m_stackPointer;
};

/* 1761 */
struct __cppobj TSCArray<CParticleEmitter2 *,4>
{
  unsigned int m_count;
  CParticleEmitter2 *m_data[4];
};

/* 1762 */
struct __cppobj CParticleKey
{
  NTempest::CImVector m_startColor;
  int m_deltaColor[4];
  int m_initialHead;
  int m_deltaHead;
  int m_initialTail;
  int m_deltaTail;
  float m_startScale;
  float m_deltaScale;
  float m_startTime;
  float m_ooSegLength;
  float m_endTime;
  NTempest::CImVector m_endColor;
  int m_headStart;
  int m_headEnd;
  int m_tailStart;
  int m_tailEnd;
  float m_endScale;
  float m_repeat;
  float m_normStartTime;
  float m_normEndTime;
  float m_lifeSpan;
};

/* 1763 */
struct __cppobj TSCArray<CParticleKey,2>
{
  unsigned int m_count;
  CParticleKey m_data[2];
};

/* 1764 */
struct __cppobj CParticleMat
{
  EGxBlend alpha;
  __int32 enableLighting : 1;
  __int32 enableFog : 1;
  __int32 enableDepthWrites : 1;
};

/* 1744 */
struct __cppobj CParticleEmitter2
{
  CParticleEmitter2_vtbl *__vftable /*VFT*/;
  unsigned int m_refCount;
  float m_numNew;
  unsigned int m_textureLog;
  float m_ooTextureWidth;
  float m_ooTextureHeight;
  int m_priorityPlane;
  CParticleEmitter2::PARTICLE_EMITTER_TYPE m_emitterType;
  CParticleEmitter2::PARTICLE_TYPE m_particleType;
  NTempest::CRndSeed m_randSeed;
  TSGrowableArray<CParticle2> m_particles;
  TSGrowableArray<CParticle2_Model> m_modelParticles;
  CParticleStack m_alive;
  CParticleStack m_dead;
  TSCArray<CParticleEmitter2 *,4> m_childEmitter;
  HMODEL__ *m_model;
  unsigned int m_verticesPerParticle;
  unsigned int m_indicesPerParticle;
  float m_elapsedTime;
  float m_particleEmissionRate;
  float m_particleLifeSpan;
  float m_particleTailLength;
  TSCArray<CParticleKey,2> m_particleKeys;
  float m_particleVelocity;
  float m_particleAcceleration;
  float m_particleVelocityVariation;
  float m_particleZsource;
  float m_particleAngularVelocity;
  CParticleMat m_particleMaterial;
  unsigned int m_textureRows;
  unsigned int m_textureColumns;
  HTEXTURE__ *m_hTex;
  unsigned int m_replaceableId;
  unsigned __int32 m_enabled : 1;
  unsigned __int32 m_enabled2 : 1;
  unsigned __int32 m_particleHasHead : 1;
  unsigned __int32 m_particleHasTail : 1;
  unsigned __int32 m_sortZ : 1;
  unsigned __int32 m_needSquirt : 1;
  unsigned __int32 m_updated : 1;
  unsigned __int32 m_paused : 1;
  unsigned __int32 m_useModelSpace : 1;
  unsigned __int32 m_inheritScale : 1;
  unsigned __int32 m_instantVelLin : 1;
  unsigned __int32 m_0XKill : 1;
  unsigned __int32 m_extrude : 1;
  unsigned __int32 m_xyQuads : 1;
  unsigned __int32 m_zvelOnly : 1;
  unsigned __int32 m_tumbler : 1;
  unsigned __int32 m_tailGrows : 1;
  unsigned __int32 m_project : 1;
  unsigned __int32 m_follow : 1;
  float m_twinkleFPS;
  float m_twinkleOnOff;
  float m_twinkleScaleMin;
  float m_twinkleScaleMax;
  float m_twinkleScaleRange;
  float m_ivelScale;
  NTempest::C2Vector m_tumblex;
  NTempest::C2Vector m_tumbley;
  NTempest::C2Vector m_tumblez;
  float m_drag;
  NTempest::C3Vector m_windVector;
  float m_windTime;
  float m_followB;
  float m_followM;
  NTempest::C34Matrix m_modelToWorld;
  NTempest::C3Vector m_cameraWorldPos;
  NTempest::C3Vector m_prevModelToWorldTrans;
  float m_elapsedVelUpdate;
  NTempest::C3Vector m_frameInstantVelLin;
  float m_frameScale;
  float m_followScalar;
  NTempest::C3Vector m_followVector;
  NTempest::C3Vector m_stepFollowVector;
  NTempest::C3Vector m_xyAxis;
};

/* 1747 */
struct /*VFT*/ CParticleEmitter2_vtbl
{
  void (__thiscall *CParticleEmitter2::Sync)(CParticleEmitter2 *this);
  _BYTE gap4[4];
  void (__thiscall *CParticleEmitter2::CreateParticle)(CParticleEmitter2 *this, CParticle2 *, float, const NTempest::C34Matrix *);
  void (__thiscall *CParticleEmitter2::DestroyParticle)(CParticleEmitter2 *this, CParticle2 *);
  CParticleEmitter2 *(__thiscall *Clone)(CParticleEmitter2 *this, int);
  void (__thiscall *CParticleEmitter2::~CParticleEmitter2)(CParticleEmitter2 *this);
  void (__thiscall *SetWidth)(CParticleEmitter2 *this, float);
  void (__thiscall *SetHeight)(CParticleEmitter2 *this, float);
  void (__thiscall *SetLatitude)(CParticleEmitter2 *this, float);
  void (__thiscall *SetLongitude)(CParticleEmitter2 *this, float);
  void (__thiscall *CParticleEmitter2::SetEmissionRate)(CParticleEmitter2 *this, float);
};

/* 1749 */
struct /*VFT*/ TSBaseArray<CParticle2>_vtbl
{
  const char *(__thiscall *TSBaseArray<CParticle2>::MemFileName)(TSBaseArray<CParticle2> *this);
  int (__thiscall *TSBaseArray<CParticle2>::MemLineNo)(TSBaseArray<CParticle2> *this);
};

/* 1745 */
struct __cppobj CParticle2
{
  NTempest::C3Vector m_position;
  unsigned __int8 m_keyFrame;
  unsigned __int8 m_flags;
  unsigned __int8 m_filler[2];
  NTempest::C3Vector m_velocity;
  float m_age;
};

/* 1755 */
struct /*VFT*/ TSBaseArray<CParticle2_Model>_vtbl
{
  const char *(__thiscall *TSBaseArray<CParticle2_Model>::MemFileName)(TSBaseArray<CParticle2_Model> *this);
  int (__thiscall *TSBaseArray<CParticle2_Model>::MemLineNo)(TSBaseArray<CParticle2_Model> *this);
};

/* 1746 */
struct __cppobj CParticle2_Model : CParticle2
{
  NTempest::C4Quaternion m_rotation;
  NTempest::C3Vector m_rotVelocity;
};

/* 1750 */
struct /*VFT*/ TSFixedArray<CParticle2>_vtbl
{
  const char *(__thiscall *TSBaseArray<CParticle2>::MemFileName)(struct TSFixedArray<CParticle2> *this);
  int (__thiscall *TSBaseArray<CParticle2>::MemLineNo)(struct TSFixedArray<CParticle2> *this);
};

/* 1752 */
struct /*VFT*/ TSGrowableArray<CParticle2>_vtbl
{
  const char *(__thiscall *TSBaseArray<CParticle2>::MemFileName)(struct TSGrowableArray<CParticle2> *this);
  int (__thiscall *TSBaseArray<CParticle2>::MemLineNo)(struct TSGrowableArray<CParticle2> *this);
};

/* 1756 */
struct /*VFT*/ TSFixedArray<CParticle2_Model>_vtbl
{
  const char *(__thiscall *TSBaseArray<CParticle2_Model>::MemFileName)(struct TSFixedArray<CParticle2_Model> *this);
  int (__thiscall *TSBaseArray<CParticle2_Model>::MemLineNo)(struct TSFixedArray<CParticle2_Model> *this);
};

/* 1758 */
struct /*VFT*/ TSGrowableArray<CParticle2_Model>_vtbl
{
  const char *(__thiscall *TSBaseArray<CParticle2_Model>::MemFileName)(struct TSGrowableArray<CParticle2_Model> *this);
  int (__thiscall *TSBaseArray<CParticle2_Model>::MemLineNo)(struct TSGrowableArray<CParticle2_Model> *this);
};

/* 1765 */
struct /*VFT*/ TSFixedArray<CParticleEmitter2 *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CParticleEmitter2 *>::MemFileName)(struct TSFixedArray<CParticleEmitter2 *> *this);
  int (__thiscall *TSBaseArray<CParticleEmitter2 *>::MemLineNo)(struct TSFixedArray<CParticleEmitter2 *> *this);
};

/* 1766 */
struct __cppobj TSFixedArray<CParticleEmitter2 *> : TSBaseArray<CParticleEmitter2 *>
{
};

/* 1767 */
struct __cppobj TSBaseArray<CRibbonEmitter *>
{
  TSBaseArray<CRibbonEmitter *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CRibbonEmitter **m_data;
};

/* 1768 */
struct /*VFT*/ TSBaseArray<CRibbonEmitter *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CRibbonEmitter *>::MemFileName)(TSBaseArray<CRibbonEmitter *> *this);
  int (__thiscall *TSBaseArray<CRibbonEmitter *>::MemLineNo)(TSBaseArray<CRibbonEmitter *> *this);
};

/* 1769 */
struct __cppobj TSBaseArray<CRibbonVertex>
{
  TSBaseArray<CRibbonVertex>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CRibbonVertex *m_data;
};

/* 1773 */
struct __cppobj TSFixedArray<CRibbonVertex> : TSBaseArray<CRibbonVertex>
{
};

/* 1775 */
struct __cppobj TSGrowableArray<CRibbonVertex> : TSFixedArray<CRibbonVertex>
{
  unsigned int m_chunk;
};

/* 1776 */
struct __cppobj TSBaseArray<CRibbonMat>
{
  TSBaseArray<CRibbonMat>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CRibbonMat *m_data;
};

/* 1780 */
struct __cppobj TSFixedArray<CRibbonMat> : TSBaseArray<CRibbonMat>
{
};

/* 1782 */
struct __cppobj TSGrowableArray<CRibbonMat> : TSFixedArray<CRibbonMat>
{
  unsigned int m_chunk;
};

/* 1783 */
struct __cppobj TSBaseArray<HTEXTURE__ *>
{
  TSBaseArray<HTEXTURE__ *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  HTEXTURE__ **m_data;
};

/* 1786 */
struct __cppobj TSFixedArray<HTEXTURE__ *> : TSBaseArray<HTEXTURE__ *>
{
};

/* 1788 */
struct __cppobj TSGrowableArray<HTEXTURE__ *> : TSFixedArray<HTEXTURE__ *>
{
  unsigned int m_chunk;
};

/* 1789 */
struct __cppobj CRibbonEmitter
{
  unsigned int m_refCount;
  TSGrowableArray<float> m_edges;
  unsigned int m_writePos;
  unsigned int m_readPos;
  float m_startTime;
  NTempest::C3Vector m_prevPos;
  NTempest::C3Vector m_cameraPos;
  TSGrowableArray<CRibbonVertex> m_gxVertices;
  TSGrowableArray<unsigned short> m_gxIndices;
  float m_ooLifeSpan;
  float m_tmpDU;
  float m_tmpDV;
  float m_ooTmpDU;
  float m_ooTmpDV;
  NTempest::CRect m_texSlotBox;
  NTempest::C3Vector m_prevVertical;
  NTempest::C3Vector m_currVertical;
  NTempest::C3Vector m_prevDir;
  NTempest::C3Vector m_currDir;
  NTempest::C3Vector m_prevDirScaled;
  NTempest::C3Vector m_currDirScaled;
  NTempest::C3Vector m_below0;
  NTempest::C3Vector m_below1;
  NTempest::C3Vector m_above0;
  NTempest::C3Vector m_above1;
  float m_edgesPerSec;
  float m_edgeLifeSpan;
  TSGrowableArray<CRibbonMat> m_materials;
  TSGrowableArray<HTEXTURE__ *> m_textures;
  TSGrowableArray<unsigned int> m_replaces;
  NTempest::CImVector m_diffuseClr;
  NTempest::CRect m_texBox;
  unsigned int m_rows;
  unsigned int m_cols;
  unsigned __int32 m_posSet : 1;
  unsigned __int32 m_initialized : 1;
  unsigned __int32 m_enabled : 1;
  unsigned __int32 m_updated : 1;
  unsigned __int32 m_singletonUpdated : 1;
  NTempest::C3Vector m_currPos;
  unsigned int m_texSlot;
  float m_above;
  float m_below;
  float m_gravity;
};

/* 1770 */
struct /*VFT*/ TSBaseArray<CRibbonVertex>_vtbl
{
  const char *(__thiscall *TSBaseArray<CRibbonVertex>::MemFileName)(TSBaseArray<CRibbonVertex> *this);
  int (__thiscall *TSBaseArray<CRibbonVertex>::MemLineNo)(TSBaseArray<CRibbonVertex> *this);
};

/* 1771 */
struct __cppobj CRibbonVertex
{
  NTempest::C3Vector pos;
  NTempest::C2Vector texCoord;
};

/* 1777 */
struct /*VFT*/ TSBaseArray<CRibbonMat>_vtbl
{
  const char *(__thiscall *TSBaseArray<CRibbonMat>::MemFileName)(TSBaseArray<CRibbonMat> *this);
  int (__thiscall *TSBaseArray<CRibbonMat>::MemLineNo)(TSBaseArray<CRibbonMat> *this);
};

/* 1778 */
struct __cppobj CRibbonMat
{
  __int32 enableLighting : 1;
  __int32 enableFog : 1;
  __int32 enableDepthTest : 1;
  __int32 enableDepthWrite : 1;
  __int32 enableCulling : 1;
  EGxBlend alpha;
};

/* 1784 */
struct /*VFT*/ TSBaseArray<HTEXTURE__ *>_vtbl
{
  const char *(__thiscall *TSBaseArray<HTEXTURE__ *>::MemFileName)(TSBaseArray<HTEXTURE__ *> *this);
  int (__thiscall *TSBaseArray<HTEXTURE__ *>::MemLineNo)(TSBaseArray<HTEXTURE__ *> *this);
};

/* 1772 */
struct /*VFT*/ TSFixedArray<CRibbonVertex>_vtbl
{
  const char *(__thiscall *TSBaseArray<CRibbonVertex>::MemFileName)(struct TSFixedArray<CRibbonVertex> *this);
  int (__thiscall *TSBaseArray<CRibbonVertex>::MemLineNo)(struct TSFixedArray<CRibbonVertex> *this);
};

/* 1774 */
struct /*VFT*/ TSGrowableArray<CRibbonVertex>_vtbl
{
  const char *(__thiscall *TSBaseArray<CRibbonVertex>::MemFileName)(struct TSGrowableArray<CRibbonVertex> *this);
  int (__thiscall *TSBaseArray<CRibbonVertex>::MemLineNo)(struct TSGrowableArray<CRibbonVertex> *this);
};

/* 1779 */
struct /*VFT*/ TSFixedArray<CRibbonMat>_vtbl
{
  const char *(__thiscall *TSBaseArray<CRibbonMat>::MemFileName)(struct TSFixedArray<CRibbonMat> *this);
  int (__thiscall *TSBaseArray<CRibbonMat>::MemLineNo)(struct TSFixedArray<CRibbonMat> *this);
};

/* 1781 */
struct /*VFT*/ TSGrowableArray<CRibbonMat>_vtbl
{
  const char *(__thiscall *TSBaseArray<CRibbonMat>::MemFileName)(struct TSGrowableArray<CRibbonMat> *this);
  int (__thiscall *TSBaseArray<CRibbonMat>::MemLineNo)(struct TSGrowableArray<CRibbonMat> *this);
};

/* 1785 */
struct /*VFT*/ TSFixedArray<HTEXTURE__ *>_vtbl
{
  const char *(__thiscall *TSBaseArray<HTEXTURE__ *>::MemFileName)(struct TSFixedArray<HTEXTURE__ *> *this);
  int (__thiscall *TSBaseArray<HTEXTURE__ *>::MemLineNo)(struct TSFixedArray<HTEXTURE__ *> *this);
};

/* 1787 */
struct /*VFT*/ TSGrowableArray<HTEXTURE__ *>_vtbl
{
  const char *(__thiscall *TSBaseArray<HTEXTURE__ *>::MemFileName)(struct TSGrowableArray<HTEXTURE__ *> *this);
  int (__thiscall *TSBaseArray<HTEXTURE__ *>::MemLineNo)(struct TSGrowableArray<HTEXTURE__ *> *this);
};

/* 1790 */
struct /*VFT*/ TSFixedArray<CRibbonEmitter *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CRibbonEmitter *>::MemFileName)(struct TSFixedArray<CRibbonEmitter *> *this);
  int (__thiscall *TSBaseArray<CRibbonEmitter *>::MemLineNo)(struct TSFixedArray<CRibbonEmitter *> *this);
};

/* 1791 */
struct __cppobj TSFixedArray<CRibbonEmitter *> : TSBaseArray<CRibbonEmitter *>
{
};

/* 1792 */
struct CAnimationData
{
  NTempest::C34Matrix *boneMtx;
  unsigned int numBones;
  NTempest::C34Matrix *textureMtx;
  unsigned int numTexBones;
  TSFixedArray<NTempest::C3Vector> *positions;
  TSFixedArray<unsigned long> *lights;
  TSFixedArray<CParticleEmitter2 *> *emitters2;
  TSFixedArray<CRibbonEmitter *> *ribbons;
  NTempest::C34Matrix *attached;
  unsigned int numAttached;
  CGeosetColor *geosetColor;
  const NTempest::C3Vector *cameraWorldPos;
  const NTempest::C3Vector *cameraVector;
  unsigned __int8 *layerAlpha;
  unsigned int *layerTextureIds;
};

/* 1793 */
struct __cppobj AnimInfo : InterpInfo
{
  const CAnimationData *data;
  NTempest::C3Vector cameraVector;
  NTempest::C3Vector cameraWorldPos;
};

/* 1794 */
struct __cppobj TSBaseArray<NTempest::C34Matrix>
{
  TSBaseArray<NTempest::C34Matrix>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  NTempest::C34Matrix *m_data;
};

/* 1795 */
struct /*VFT*/ TSBaseArray<NTempest::C34Matrix>_vtbl
{
  const char *(__thiscall *TSBaseArray<NTempest::C34Matrix>::MemFileName)(TSBaseArray<NTempest::C34Matrix> *this);
  int (__thiscall *TSBaseArray<NTempest::C34Matrix>::MemLineNo)(TSBaseArray<NTempest::C34Matrix> *this);
};

/* 1796 */
struct /*VFT*/ TSFixedArray<NTempest::C34Matrix>_vtbl
{
  const char *(__thiscall *TSBaseArray<NTempest::C34Matrix>::MemFileName)(struct TSFixedArray<NTempest::C34Matrix> *this);
  int (__thiscall *TSBaseArray<NTempest::C34Matrix>::MemLineNo)(struct TSFixedArray<NTempest::C34Matrix> *this);
};

/* 1797 */
struct __cppobj TSFixedArray<NTempest::C34Matrix> : TSBaseArray<NTempest::C34Matrix>
{
};

/* 1798 */
struct /*VFT*/ TSGrowableArray<NTempest::C34Matrix>_vtbl
{
  const char *(__thiscall *TSBaseArray<NTempest::C34Matrix>::MemFileName)(struct TSGrowableArray<NTempest::C34Matrix> *this);
  int (__thiscall *TSBaseArray<NTempest::C34Matrix>::MemLineNo)(struct TSGrowableArray<NTempest::C34Matrix> *this);
};

/* 1799 */
struct __cppobj TSGrowableArray<NTempest::C34Matrix> : TSFixedArray<NTempest::C34Matrix>
{
  unsigned int m_chunk;
};

/* 1800 */
struct __cppobj CMatrixStack<NTempest::C34Matrix>
{
  TSGrowableArray<NTempest::C34Matrix> m_stack;
};

/* 1801 */
struct __cppobj TSLink<CAnimNameHash>
{
  TSLink<CAnimNameHash> *m_prevlink;
  CAnimNameHash *m_next;
};

/* 1802 */
struct __cppobj HASHKEY_CONSTSTR
{
  const char *m_str;
};

/* 1803 */
struct __cppobj HASHKEY_CONSTSTRI : HASHKEY_CONSTSTR
{
};

/* 1804 */
struct __cppobj TSHashObject<CAnimNameHash,HASHKEY_CONSTSTRI>
{
  unsigned int m_hashval;
  __unaligned __declspec(align(1)) TSLink<CAnimNameHash> m_linktoslot;
  __unaligned __declspec(align(1)) TSLink<CAnimNameHash> m_linktofull;
  HASHKEY_CONSTSTRI m_key;
};

/* 1805 */
struct __cppobj __unaligned __declspec(align(4)) CAnimNameHash : TSHashObject<CAnimNameHash,HASHKEY_CONSTSTRI>
{
  unsigned int index;
};

/* 1806 */
struct __cppobj TSList<CAnimNameHash,TSGetExplicitLink<CAnimNameHash> >
{
  int m_linkoffset;
  TSLink<CAnimNameHash> m_terminator;
};

/* 1807 */
struct __cppobj TSExplicitList<CAnimNameHash,-572662307> : TSList<CAnimNameHash,TSGetExplicitLink<CAnimNameHash> >
{
};

/* 1808 */
struct __cppobj TSBaseArray<TSExplicitList<CAnimNameHash,-572662307> >
{
  TSBaseArray<TSExplicitList<CAnimNameHash,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<CAnimNameHash,-572662307> *m_data;
};

/* 1809 */
struct /*VFT*/ TSBaseArray<TSExplicitList<CAnimNameHash,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CAnimNameHash,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<CAnimNameHash,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CAnimNameHash,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<CAnimNameHash,-572662307> > *this);
};

/* 1810 */
struct /*VFT*/ TSFixedArray<TSExplicitList<CAnimNameHash,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CAnimNameHash,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<CAnimNameHash,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CAnimNameHash,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<CAnimNameHash,-572662307> > *this);
};

/* 1811 */
struct __cppobj TSFixedArray<TSExplicitList<CAnimNameHash,-572662307> > : TSBaseArray<TSExplicitList<CAnimNameHash,-572662307> >
{
};

/* 1812 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<CAnimNameHash,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CAnimNameHash,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<CAnimNameHash,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CAnimNameHash,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<CAnimNameHash,-572662307> > *this);
};

/* 1813 */
struct __cppobj TSGrowableArray<TSExplicitList<CAnimNameHash,-572662307> > : TSFixedArray<TSExplicitList<CAnimNameHash,-572662307> >
{
  unsigned int m_chunk;
};

/* 1814 */
struct __cppobj TSHashTable<CAnimNameHash,HASHKEY_CONSTSTRI>
{
  TSHashTable<CAnimNameHash,HASHKEY_CONSTSTRI>_vtbl *__vftable /*VFT*/;
  TSExplicitList<CAnimNameHash,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<CAnimNameHash,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 1815 */
struct /*VFT*/ TSHashTable<CAnimNameHash,HASHKEY_CONSTSTRI>_vtbl
{
  void (__thiscall *TSHashTable<CAnimNameHash,HASHKEY_CONSTSTRI>::InternalDelete)(TSHashTable<CAnimNameHash,HASHKEY_CONSTSTRI> *this, CAnimNameHash *);
  CAnimNameHash *(__thiscall *TSHashTable<CAnimNameHash,HASHKEY_CONSTSTRI>::InternalNew)(TSHashTable<CAnimNameHash,HASHKEY_CONSTSTRI> *this, TSExplicitList<CAnimNameHash,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<CAnimNameHash,HASHKEY_CONSTSTRI>)(TSHashTable<CAnimNameHash,HASHKEY_CONSTSTRI> *this);
  void (__thiscall *TSHashTable<CAnimNameHash,HASHKEY_CONSTSTRI>::Destroy)(TSHashTable<CAnimNameHash,HASHKEY_CONSTSTRI> *this);
};

/* 1816 */
struct __cppobj TSLink<ANIMHASH>
{
  TSLink<ANIMHASH> *m_prevlink;
  ANIMHASH *m_next;
};

/* 1817 */
struct __cppobj TSHashObject<ANIMHASH,HASHKEY_STRI>
{
  unsigned int m_hashval;
  __unaligned __declspec(align(1)) TSLink<ANIMHASH> m_linktoslot;
  __unaligned __declspec(align(1)) TSLink<ANIMHASH> m_linktofull;
  HASHKEY_STRI m_key;
};

/* 1818 */
struct __cppobj __unaligned __declspec(align(4)) ANIMHASH : TSHashObject<ANIMHASH,HASHKEY_STRI>
{
  HANIM__ *anim;
};

/* 1819 */
struct __cppobj TSList<ANIMHASH,TSGetExplicitLink<ANIMHASH> >
{
  int m_linkoffset;
  TSLink<ANIMHASH> m_terminator;
};

/* 1820 */
struct __cppobj TSExplicitList<ANIMHASH,-572662307> : TSList<ANIMHASH,TSGetExplicitLink<ANIMHASH> >
{
};

/* 1821 */
struct __cppobj TSBaseArray<TSExplicitList<ANIMHASH,-572662307> >
{
  TSBaseArray<TSExplicitList<ANIMHASH,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<ANIMHASH,-572662307> *m_data;
};

/* 1822 */
struct /*VFT*/ TSBaseArray<TSExplicitList<ANIMHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<ANIMHASH,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<ANIMHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<ANIMHASH,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<ANIMHASH,-572662307> > *this);
};

/* 1823 */
struct /*VFT*/ TSFixedArray<TSExplicitList<ANIMHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<ANIMHASH,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<ANIMHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<ANIMHASH,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<ANIMHASH,-572662307> > *this);
};

/* 1824 */
struct __cppobj TSFixedArray<TSExplicitList<ANIMHASH,-572662307> > : TSBaseArray<TSExplicitList<ANIMHASH,-572662307> >
{
};

/* 1825 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<ANIMHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<ANIMHASH,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<ANIMHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<ANIMHASH,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<ANIMHASH,-572662307> > *this);
};

/* 1826 */
struct __cppobj TSGrowableArray<TSExplicitList<ANIMHASH,-572662307> > : TSFixedArray<TSExplicitList<ANIMHASH,-572662307> >
{
  unsigned int m_chunk;
};

/* 1827 */
struct __cppobj TSHashTable<ANIMHASH,HASHKEY_STRI>
{
  TSHashTable<ANIMHASH,HASHKEY_STRI>_vtbl *__vftable /*VFT*/;
  TSExplicitList<ANIMHASH,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<ANIMHASH,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 1828 */
struct /*VFT*/ TSHashTable<ANIMHASH,HASHKEY_STRI>_vtbl
{
  void (__thiscall *TSHashTable<ANIMHASH,HASHKEY_STRI>::InternalDelete)(TSHashTable<ANIMHASH,HASHKEY_STRI> *this, ANIMHASH *);
  ANIMHASH *(__thiscall *TSHashTable<ANIMHASH,HASHKEY_STRI>::InternalNew)(TSHashTable<ANIMHASH,HASHKEY_STRI> *this, TSExplicitList<ANIMHASH,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<ANIMHASH,HASHKEY_STRI>)(TSHashTable<ANIMHASH,HASHKEY_STRI> *this);
  void (__thiscall *TSHashTable<ANIMHASH,HASHKEY_STRI>::Destroy)(TSHashTable<ANIMHASH,HASHKEY_STRI> *this);
};

/* 1829 */
struct __cppobj CMdlString<257>
{
  char m_string[257];
};

/* 1830 */
struct __cppobj CMdlString<260>
{
  char m_string[260];
};

/* 1831 */
struct __cppobj MDLHEADERSECTION
{
  CMdlString<257> userName;
  CMdlString<260> sourceFilename;
};

/* 1832 */
struct __cppobj __declspec(align(4)) MDLMODELSECTION
{
  CMdlString<80> name;
  CMdlString<260> animationFile;
  unsigned int geosetCount;
  unsigned int geosetAnimCount;
  unsigned int boneCount;
  unsigned int lightCount;
  unsigned int helperCount;
  unsigned int attachmentCount;
  unsigned int particleCount;
  unsigned int particle2Count;
  unsigned int ribbonCount;
  unsigned int eventCount;
  CMdlBounds bounds;
  unsigned int blendTime;
  unsigned __int8 flags;
};

/* 1833 */
struct __cppobj TSBaseArray<MDLMATERIALSECTION>
{
  TSBaseArray<MDLMATERIALSECTION>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  MDLMATERIALSECTION *m_data;
};

/* 1834 */
struct /*VFT*/ TSBaseArray<MDLMATERIALSECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLMATERIALSECTION>::MemFileName)(TSBaseArray<MDLMATERIALSECTION> *this);
  int (__thiscall *TSBaseArray<MDLMATERIALSECTION>::MemLineNo)(TSBaseArray<MDLMATERIALSECTION> *this);
};

/* 1835 */
struct __cppobj TSBaseArray<MDLTEXLAYER>
{
  TSBaseArray<MDLTEXLAYER>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  MDLTEXLAYER *m_data;
};

/* 1838 */
struct __cppobj TSFixedArray<MDLTEXLAYER> : TSBaseArray<MDLTEXLAYER>
{
};

/* 1840 */
struct __cppobj TSGrowableArray<MDLTEXLAYER> : TSFixedArray<MDLTEXLAYER>
{
  unsigned int m_chunk;
};

/* 1841 */
struct __cppobj MDLMATERIALSECTION
{
  TSGrowableArray<MDLTEXLAYER> texLayers;
  int priorityPlane;
};

/* 1836 */
struct /*VFT*/ TSBaseArray<MDLTEXLAYER>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLTEXLAYER>::MemFileName)(TSBaseArray<MDLTEXLAYER> *this);
  int (__thiscall *TSBaseArray<MDLTEXLAYER>::MemLineNo)(TSBaseArray<MDLTEXLAYER> *this);
};

/* 1837 */
struct /*VFT*/ TSFixedArray<MDLTEXLAYER>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLTEXLAYER>::MemFileName)(struct TSFixedArray<MDLTEXLAYER> *this);
  int (__thiscall *TSBaseArray<MDLTEXLAYER>::MemLineNo)(struct TSFixedArray<MDLTEXLAYER> *this);
};

/* 1839 */
struct /*VFT*/ TSGrowableArray<MDLTEXLAYER>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLTEXLAYER>::MemFileName)(struct TSGrowableArray<MDLTEXLAYER> *this);
  int (__thiscall *TSBaseArray<MDLTEXLAYER>::MemLineNo)(struct TSGrowableArray<MDLTEXLAYER> *this);
};

/* 1842 */
struct /*VFT*/ TSFixedArray<MDLMATERIALSECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLMATERIALSECTION>::MemFileName)(struct TSFixedArray<MDLMATERIALSECTION> *this);
  int (__thiscall *TSBaseArray<MDLMATERIALSECTION>::MemLineNo)(struct TSFixedArray<MDLMATERIALSECTION> *this);
};

/* 1843 */
struct __cppobj TSFixedArray<MDLMATERIALSECTION> : TSBaseArray<MDLMATERIALSECTION>
{
};

/* 1844 */
struct /*VFT*/ TSGrowableArray<MDLMATERIALSECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLMATERIALSECTION>::MemFileName)(struct TSGrowableArray<MDLMATERIALSECTION> *this);
  int (__thiscall *TSBaseArray<MDLMATERIALSECTION>::MemLineNo)(struct TSGrowableArray<MDLMATERIALSECTION> *this);
};

/* 1845 */
struct __cppobj TSGrowableArray<MDLMATERIALSECTION> : TSFixedArray<MDLMATERIALSECTION>
{
  unsigned int m_chunk;
};

/* 1846 */
struct __cppobj TSBaseArray<MDLTEXTURESECTION>
{
  TSBaseArray<MDLTEXTURESECTION>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  MDLTEXTURESECTION *m_data;
};

/* 1847 */
struct /*VFT*/ TSBaseArray<MDLTEXTURESECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLTEXTURESECTION>::MemFileName)(TSBaseArray<MDLTEXTURESECTION> *this);
  int (__thiscall *TSBaseArray<MDLTEXTURESECTION>::MemLineNo)(TSBaseArray<MDLTEXTURESECTION> *this);
};

/* 1848 */
struct __cppobj MDLTEXTURESECTION
{
  unsigned int replaceableId;
  CMdlString<260> image;
  unsigned int flags;
};

/* 1849 */
struct /*VFT*/ TSFixedArray<MDLTEXTURESECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLTEXTURESECTION>::MemFileName)(struct TSFixedArray<MDLTEXTURESECTION> *this);
  int (__thiscall *TSBaseArray<MDLTEXTURESECTION>::MemLineNo)(struct TSFixedArray<MDLTEXTURESECTION> *this);
};

/* 1850 */
struct __cppobj TSFixedArray<MDLTEXTURESECTION> : TSBaseArray<MDLTEXTURESECTION>
{
};

/* 1851 */
struct /*VFT*/ TSGrowableArray<MDLTEXTURESECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLTEXTURESECTION>::MemFileName)(struct TSGrowableArray<MDLTEXTURESECTION> *this);
  int (__thiscall *TSBaseArray<MDLTEXTURESECTION>::MemLineNo)(struct TSGrowableArray<MDLTEXTURESECTION> *this);
};

/* 1852 */
struct __cppobj TSGrowableArray<MDLTEXTURESECTION> : TSFixedArray<MDLTEXTURESECTION>
{
  unsigned int m_chunk;
};

/* 1853 */
struct __cppobj TSBaseArray<MDLGEOSETSECTION>
{
  TSBaseArray<MDLGEOSETSECTION>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  MDLGEOSETSECTION *m_data;
};

/* 1854 */
struct /*VFT*/ TSBaseArray<MDLGEOSETSECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLGEOSETSECTION>::MemFileName)(TSBaseArray<MDLGEOSETSECTION> *this);
  int (__thiscall *TSBaseArray<MDLGEOSETSECTION>::MemLineNo)(TSBaseArray<MDLGEOSETSECTION> *this);
};

/* 1855 */
struct __cppobj TSBaseArray<TSGrowableArray<NTempest::C2Vector> >
{
  TSBaseArray<TSGrowableArray<NTempest::C2Vector> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSGrowableArray<NTempest::C2Vector> *m_data;
};

/* 1864 */
struct __cppobj TSFixedArray<TSGrowableArray<NTempest::C2Vector> > : TSBaseArray<TSGrowableArray<NTempest::C2Vector> >
{
};

/* 1866 */
struct __cppobj TSGrowableArray<TSGrowableArray<NTempest::C2Vector> > : TSFixedArray<TSGrowableArray<NTempest::C2Vector> >
{
  unsigned int m_chunk;
};

/* 1867 */
struct __cppobj MDLPRIMITIVES
{
  TSGrowableArray<unsigned char> types;
  TSGrowableArray<unsigned int> counts;
  TSGrowableArray<unsigned short> vertices;
};

/* 1868 */
struct __cppobj TSBaseArray<CMdlBounds>
{
  TSBaseArray<CMdlBounds>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CMdlBounds *m_data;
};

/* 1871 */
struct __cppobj TSFixedArray<CMdlBounds> : TSBaseArray<CMdlBounds>
{
};

/* 1873 */
struct __cppobj TSGrowableArray<CMdlBounds> : TSFixedArray<CMdlBounds>
{
  unsigned int m_chunk;
};

/* 1874 */
struct __cppobj MDLGEOSETSECTION
{
  TSGrowableArray<NTempest::C3Vector> vertices;
  TSGrowableArray<NTempest::C3Vector> normals;
  TSGrowableArray<TSGrowableArray<NTempest::C2Vector> > texCoords;
  TSGrowableArray<unsigned char> vertGroupIndices;
  MDLPRIMITIVES primitives;
  TSGrowableArray<unsigned int> groupMatrixCounts;
  TSGrowableArray<unsigned int> matrices;
  TSGrowableArray<unsigned int> boneIndices;
  TSGrowableArray<unsigned int> boneWeights;
  unsigned int materialId;
  CMdlBounds bounds;
  TSGrowableArray<CMdlBounds> seqBounds;
  unsigned int selectionGroup;
  unsigned int flags;
};

/* 1856 */
struct /*VFT*/ TSBaseArray<TSGrowableArray<NTempest::C2Vector> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSGrowableArray<NTempest::C2Vector> >::MemFileName)(TSBaseArray<TSGrowableArray<NTempest::C2Vector> > *this);
  int (__thiscall *TSBaseArray<TSGrowableArray<NTempest::C2Vector> >::MemLineNo)(TSBaseArray<TSGrowableArray<NTempest::C2Vector> > *this);
};

/* 1857 */
struct __cppobj TSBaseArray<NTempest::C2Vector>
{
  TSBaseArray<NTempest::C2Vector>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  NTempest::C2Vector *m_data;
};

/* 1860 */
struct __cppobj TSFixedArray<NTempest::C2Vector> : TSBaseArray<NTempest::C2Vector>
{
};

/* 1862 */
struct __cppobj TSGrowableArray<NTempest::C2Vector> : TSFixedArray<NTempest::C2Vector>
{
  unsigned int m_chunk;
};

/* 1869 */
struct /*VFT*/ TSBaseArray<CMdlBounds>_vtbl
{
  const char *(__thiscall *TSBaseArray<CMdlBounds>::MemFileName)(TSBaseArray<CMdlBounds> *this);
  int (__thiscall *TSBaseArray<CMdlBounds>::MemLineNo)(TSBaseArray<CMdlBounds> *this);
};

/* 1858 */
struct /*VFT*/ TSBaseArray<NTempest::C2Vector>_vtbl
{
  const char *(__thiscall *TSBaseArray<NTempest::C2Vector>::MemFileName)(TSBaseArray<NTempest::C2Vector> *this);
  int (__thiscall *TSBaseArray<NTempest::C2Vector>::MemLineNo)(TSBaseArray<NTempest::C2Vector> *this);
};

/* 1859 */
struct /*VFT*/ TSFixedArray<NTempest::C2Vector>_vtbl
{
  const char *(__thiscall *TSBaseArray<NTempest::C2Vector>::MemFileName)(struct TSFixedArray<NTempest::C2Vector> *this);
  int (__thiscall *TSBaseArray<NTempest::C2Vector>::MemLineNo)(struct TSFixedArray<NTempest::C2Vector> *this);
};

/* 1861 */
struct /*VFT*/ TSGrowableArray<NTempest::C2Vector>_vtbl
{
  const char *(__thiscall *TSBaseArray<NTempest::C2Vector>::MemFileName)(struct TSGrowableArray<NTempest::C2Vector> *this);
  int (__thiscall *TSBaseArray<NTempest::C2Vector>::MemLineNo)(struct TSGrowableArray<NTempest::C2Vector> *this);
};

/* 1863 */
struct /*VFT*/ TSFixedArray<TSGrowableArray<NTempest::C2Vector> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSGrowableArray<NTempest::C2Vector> >::MemFileName)(struct TSFixedArray<TSGrowableArray<NTempest::C2Vector> > *this);
  int (__thiscall *TSBaseArray<TSGrowableArray<NTempest::C2Vector> >::MemLineNo)(struct TSFixedArray<TSGrowableArray<NTempest::C2Vector> > *this);
};

/* 1865 */
struct /*VFT*/ TSGrowableArray<TSGrowableArray<NTempest::C2Vector> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSGrowableArray<NTempest::C2Vector> >::MemFileName)(struct TSGrowableArray<TSGrowableArray<NTempest::C2Vector> > *this);
  int (__thiscall *TSBaseArray<TSGrowableArray<NTempest::C2Vector> >::MemLineNo)(struct TSGrowableArray<TSGrowableArray<NTempest::C2Vector> > *this);
};

/* 1870 */
struct /*VFT*/ TSFixedArray<CMdlBounds>_vtbl
{
  const char *(__thiscall *TSBaseArray<CMdlBounds>::MemFileName)(struct TSFixedArray<CMdlBounds> *this);
  int (__thiscall *TSBaseArray<CMdlBounds>::MemLineNo)(struct TSFixedArray<CMdlBounds> *this);
};

/* 1872 */
struct /*VFT*/ TSGrowableArray<CMdlBounds>_vtbl
{
  const char *(__thiscall *TSBaseArray<CMdlBounds>::MemFileName)(struct TSGrowableArray<CMdlBounds> *this);
  int (__thiscall *TSBaseArray<CMdlBounds>::MemLineNo)(struct TSGrowableArray<CMdlBounds> *this);
};

/* 1875 */
struct /*VFT*/ TSFixedArray<MDLGEOSETSECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLGEOSETSECTION>::MemFileName)(struct TSFixedArray<MDLGEOSETSECTION> *this);
  int (__thiscall *TSBaseArray<MDLGEOSETSECTION>::MemLineNo)(struct TSFixedArray<MDLGEOSETSECTION> *this);
};

/* 1876 */
struct __cppobj TSFixedArray<MDLGEOSETSECTION> : TSBaseArray<MDLGEOSETSECTION>
{
};

/* 1877 */
struct /*VFT*/ TSGrowableArray<MDLGEOSETSECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLGEOSETSECTION>::MemFileName)(struct TSGrowableArray<MDLGEOSETSECTION> *this);
  int (__thiscall *TSBaseArray<MDLGEOSETSECTION>::MemLineNo)(struct TSGrowableArray<MDLGEOSETSECTION> *this);
};

/* 1878 */
struct __cppobj TSGrowableArray<MDLGEOSETSECTION> : TSFixedArray<MDLGEOSETSECTION>
{
  unsigned int m_chunk;
};

/* 1879 */
struct __cppobj TSBaseArray<MDLGEOSETANIMSECTION>
{
  TSBaseArray<MDLGEOSETANIMSECTION>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  MDLGEOSETANIMSECTION *m_data;
};

/* 1880 */
struct /*VFT*/ TSBaseArray<MDLGEOSETANIMSECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLGEOSETANIMSECTION>::MemFileName)(TSBaseArray<MDLGEOSETANIMSECTION> *this);
  int (__thiscall *TSBaseArray<MDLGEOSETANIMSECTION>::MemLineNo)(TSBaseArray<MDLGEOSETANIMSECTION> *this);
};

/* 1881 */
struct /*VFT*/ TSFixedArray<MDLGEOSETANIMSECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLGEOSETANIMSECTION>::MemFileName)(struct TSFixedArray<MDLGEOSETANIMSECTION> *this);
  int (__thiscall *TSBaseArray<MDLGEOSETANIMSECTION>::MemLineNo)(struct TSFixedArray<MDLGEOSETANIMSECTION> *this);
};

/* 1882 */
struct __cppobj TSFixedArray<MDLGEOSETANIMSECTION> : TSBaseArray<MDLGEOSETANIMSECTION>
{
};

/* 1883 */
struct /*VFT*/ TSGrowableArray<MDLGEOSETANIMSECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLGEOSETANIMSECTION>::MemFileName)(struct TSGrowableArray<MDLGEOSETANIMSECTION> *this);
  int (__thiscall *TSBaseArray<MDLGEOSETANIMSECTION>::MemLineNo)(struct TSGrowableArray<MDLGEOSETANIMSECTION> *this);
};

/* 1884 */
struct __cppobj TSGrowableArray<MDLGEOSETANIMSECTION> : TSFixedArray<MDLGEOSETANIMSECTION>
{
  unsigned int m_chunk;
};

/* 1885 */
struct __cppobj TSBaseArray<MDLGENOBJECT *>
{
  TSBaseArray<MDLGENOBJECT *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  MDLGENOBJECT **m_data;
};

/* 1886 */
struct /*VFT*/ TSBaseArray<MDLGENOBJECT *>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLGENOBJECT *>::MemFileName)(TSBaseArray<MDLGENOBJECT *> *this);
  int (__thiscall *TSBaseArray<MDLGENOBJECT *>::MemLineNo)(TSBaseArray<MDLGENOBJECT *> *this);
};

/* 1887 */
struct __cppobj MDLGENOBJECT
{
  CMdlString<80> name;
  unsigned int objectId;
  unsigned int parentId;
  unsigned int flags;
  MDLKEYTRACK<NTempest::C3Vector> transkeys;
  MDLKEYTRACK<NTempest::C4Quaternion> rotkeys;
  MDLKEYTRACK<NTempest::C3Vector> scalekeys;
};

/* 1888 */
struct /*VFT*/ TSFixedArray<MDLGENOBJECT *>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLGENOBJECT *>::MemFileName)(struct TSFixedArray<MDLGENOBJECT *> *this);
  int (__thiscall *TSBaseArray<MDLGENOBJECT *>::MemLineNo)(struct TSFixedArray<MDLGENOBJECT *> *this);
};

/* 1889 */
struct __cppobj TSFixedArray<MDLGENOBJECT *> : TSBaseArray<MDLGENOBJECT *>
{
};

/* 1890 */
struct /*VFT*/ TSGrowableArray<MDLGENOBJECT *>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLGENOBJECT *>::MemFileName)(struct TSGrowableArray<MDLGENOBJECT *> *this);
  int (__thiscall *TSBaseArray<MDLGENOBJECT *>::MemLineNo)(struct TSGrowableArray<MDLGENOBJECT *> *this);
};

/* 1891 */
struct __cppobj TSGrowableArray<MDLGENOBJECT *> : TSFixedArray<MDLGENOBJECT *>
{
  unsigned int m_chunk;
};

/* 1892 */
struct __cppobj TSBaseArray<MDLBONESECTION>
{
  TSBaseArray<MDLBONESECTION>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  MDLBONESECTION *m_data;
};

/* 1893 */
struct /*VFT*/ TSBaseArray<MDLBONESECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLBONESECTION>::MemFileName)(TSBaseArray<MDLBONESECTION> *this);
  int (__thiscall *TSBaseArray<MDLBONESECTION>::MemLineNo)(TSBaseArray<MDLBONESECTION> *this);
};

/* 1894 */
struct __cppobj MDLBONESECTION : MDLGENOBJECT
{
  unsigned int geosetId;
  unsigned int geosetAnimId;
};

/* 1895 */
struct /*VFT*/ TSFixedArray<MDLBONESECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLBONESECTION>::MemFileName)(struct TSFixedArray<MDLBONESECTION> *this);
  int (__thiscall *TSBaseArray<MDLBONESECTION>::MemLineNo)(struct TSFixedArray<MDLBONESECTION> *this);
};

/* 1896 */
struct __cppobj TSFixedArray<MDLBONESECTION> : TSBaseArray<MDLBONESECTION>
{
};

/* 1897 */
struct /*VFT*/ TSGrowableArray<MDLBONESECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLBONESECTION>::MemFileName)(struct TSGrowableArray<MDLBONESECTION> *this);
  int (__thiscall *TSBaseArray<MDLBONESECTION>::MemLineNo)(struct TSGrowableArray<MDLBONESECTION> *this);
};

/* 1898 */
struct __cppobj TSGrowableArray<MDLBONESECTION> : TSFixedArray<MDLBONESECTION>
{
  unsigned int m_chunk;
};

/* 1899 */
struct __cppobj TSBaseArray<MDLLIGHTSECTION>
{
  TSBaseArray<MDLLIGHTSECTION>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  MDLLIGHTSECTION *m_data;
};

/* 1900 */
struct /*VFT*/ TSBaseArray<MDLLIGHTSECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLLIGHTSECTION>::MemFileName)(TSBaseArray<MDLLIGHTSECTION> *this);
  int (__thiscall *TSBaseArray<MDLLIGHTSECTION>::MemLineNo)(TSBaseArray<MDLLIGHTSECTION> *this);
};

/* 1901 */
struct __cppobj MDLLIGHTSECTION : MDLGENOBJECT
{
  LIGHT_TYPE type;
  MDLKEYTRACK<float> attenstartkeys;
  float staticAttenStart;
  MDLKEYTRACK<float> attenendkeys;
  float staticAttenEnd;
  MDLKEYTRACK<C3Color> colorkeys;
  C3Color staticColor;
  MDLKEYTRACK<float> intensitykeys;
  float staticIntensity;
  MDLKEYTRACK<C3Color> ambcolorkeys;
  C3Color staticAmbColor;
  MDLKEYTRACK<float> ambintensitykeys;
  float staticAmbIntensity;
  MDLKEYTRACK<float> visibilityKeys;
};

/* 1902 */
struct /*VFT*/ TSFixedArray<MDLLIGHTSECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLLIGHTSECTION>::MemFileName)(struct TSFixedArray<MDLLIGHTSECTION> *this);
  int (__thiscall *TSBaseArray<MDLLIGHTSECTION>::MemLineNo)(struct TSFixedArray<MDLLIGHTSECTION> *this);
};

/* 1903 */
struct __cppobj TSFixedArray<MDLLIGHTSECTION> : TSBaseArray<MDLLIGHTSECTION>
{
};

/* 1904 */
struct /*VFT*/ TSGrowableArray<MDLLIGHTSECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLLIGHTSECTION>::MemFileName)(struct TSGrowableArray<MDLLIGHTSECTION> *this);
  int (__thiscall *TSBaseArray<MDLLIGHTSECTION>::MemLineNo)(struct TSGrowableArray<MDLLIGHTSECTION> *this);
};

/* 1905 */
struct __cppobj TSGrowableArray<MDLLIGHTSECTION> : TSFixedArray<MDLLIGHTSECTION>
{
  unsigned int m_chunk;
};

/* 1906 */
struct __cppobj TSBaseArray<MDLGENOBJECT>
{
  TSBaseArray<MDLGENOBJECT>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  MDLGENOBJECT *m_data;
};

/* 1907 */
struct /*VFT*/ TSBaseArray<MDLGENOBJECT>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLGENOBJECT>::MemFileName)(TSBaseArray<MDLGENOBJECT> *this);
  int (__thiscall *TSBaseArray<MDLGENOBJECT>::MemLineNo)(TSBaseArray<MDLGENOBJECT> *this);
};

/* 1908 */
struct /*VFT*/ TSFixedArray<MDLGENOBJECT>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLGENOBJECT>::MemFileName)(struct TSFixedArray<MDLGENOBJECT> *this);
  int (__thiscall *TSBaseArray<MDLGENOBJECT>::MemLineNo)(struct TSFixedArray<MDLGENOBJECT> *this);
};

/* 1909 */
struct __cppobj TSFixedArray<MDLGENOBJECT> : TSBaseArray<MDLGENOBJECT>
{
};

/* 1910 */
struct /*VFT*/ TSGrowableArray<MDLGENOBJECT>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLGENOBJECT>::MemFileName)(struct TSGrowableArray<MDLGENOBJECT> *this);
  int (__thiscall *TSBaseArray<MDLGENOBJECT>::MemLineNo)(struct TSGrowableArray<MDLGENOBJECT> *this);
};

/* 1911 */
struct __cppobj TSGrowableArray<MDLGENOBJECT> : TSFixedArray<MDLGENOBJECT>
{
  unsigned int m_chunk;
};

/* 1912 */
struct __cppobj TSBaseArray<MDLATTACHMENTSECTION>
{
  TSBaseArray<MDLATTACHMENTSECTION>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  MDLATTACHMENTSECTION *m_data;
};

/* 1913 */
struct /*VFT*/ TSBaseArray<MDLATTACHMENTSECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLATTACHMENTSECTION>::MemFileName)(TSBaseArray<MDLATTACHMENTSECTION> *this);
  int (__thiscall *TSBaseArray<MDLATTACHMENTSECTION>::MemLineNo)(TSBaseArray<MDLATTACHMENTSECTION> *this);
};

/* 1914 */
struct __cppobj MDLATTACHMENTSECTION : MDLGENOBJECT
{
  CMdlString<260> path;
  MDLKEYTRACK<float> visibilityKeys;
  unsigned int attachmentId;
};

/* 1915 */
struct /*VFT*/ TSFixedArray<MDLATTACHMENTSECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLATTACHMENTSECTION>::MemFileName)(struct TSFixedArray<MDLATTACHMENTSECTION> *this);
  int (__thiscall *TSBaseArray<MDLATTACHMENTSECTION>::MemLineNo)(struct TSFixedArray<MDLATTACHMENTSECTION> *this);
};

/* 1916 */
struct __cppobj TSFixedArray<MDLATTACHMENTSECTION> : TSBaseArray<MDLATTACHMENTSECTION>
{
};

/* 1917 */
struct /*VFT*/ TSGrowableArray<MDLATTACHMENTSECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLATTACHMENTSECTION>::MemFileName)(struct TSGrowableArray<MDLATTACHMENTSECTION> *this);
  int (__thiscall *TSBaseArray<MDLATTACHMENTSECTION>::MemLineNo)(struct TSGrowableArray<MDLATTACHMENTSECTION> *this);
};

/* 1918 */
struct __cppobj TSGrowableArray<MDLATTACHMENTSECTION> : TSFixedArray<MDLATTACHMENTSECTION>
{
  unsigned int m_chunk;
};

/* 1919 */
struct __cppobj TSBaseArray<MDLPARTICLEEMITTER>
{
  TSBaseArray<MDLPARTICLEEMITTER>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  MDLPARTICLEEMITTER *m_data;
};

/* 1920 */
struct /*VFT*/ TSBaseArray<MDLPARTICLEEMITTER>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLPARTICLEEMITTER>::MemFileName)(TSBaseArray<MDLPARTICLEEMITTER> *this);
  int (__thiscall *TSBaseArray<MDLPARTICLEEMITTER>::MemLineNo)(TSBaseArray<MDLPARTICLEEMITTER> *this);
};

/* 1921 */
struct __cppobj MDLPARTICLE
{
  CMdlString<260> path;
  MDLKEYTRACK<float> life;
  float staticLife;
  MDLKEYTRACK<float> speed;
  float staticSpeed;
};

/* 1922 */
struct __cppobj MDLPARTICLEEMITTER : MDLGENOBJECT
{
  MDLKEYTRACK<float> emissionRate;
  float staticEmissionRate;
  MDLKEYTRACK<float> gravity;
  float staticGravity;
  MDLKEYTRACK<float> longitude;
  float staticLongitude;
  MDLKEYTRACK<float> latitude;
  float staticLatitude;
  MDLPARTICLE particle;
  MDLKEYTRACK<float> visibilityKeys;
};

/* 1923 */
struct /*VFT*/ TSFixedArray<MDLPARTICLEEMITTER>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLPARTICLEEMITTER>::MemFileName)(struct TSFixedArray<MDLPARTICLEEMITTER> *this);
  int (__thiscall *TSBaseArray<MDLPARTICLEEMITTER>::MemLineNo)(struct TSFixedArray<MDLPARTICLEEMITTER> *this);
};

/* 1924 */
struct __cppobj TSFixedArray<MDLPARTICLEEMITTER> : TSBaseArray<MDLPARTICLEEMITTER>
{
};

/* 1925 */
struct /*VFT*/ TSGrowableArray<MDLPARTICLEEMITTER>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLPARTICLEEMITTER>::MemFileName)(struct TSGrowableArray<MDLPARTICLEEMITTER> *this);
  int (__thiscall *TSBaseArray<MDLPARTICLEEMITTER>::MemLineNo)(struct TSGrowableArray<MDLPARTICLEEMITTER> *this);
};

/* 1926 */
struct __cppobj TSGrowableArray<MDLPARTICLEEMITTER> : TSFixedArray<MDLPARTICLEEMITTER>
{
  unsigned int m_chunk;
};

/* 1927 */
struct __cppobj TSBaseArray<MDLCAMERASECTION>
{
  TSBaseArray<MDLCAMERASECTION>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  MDLCAMERASECTION *m_data;
};

/* 1928 */
struct /*VFT*/ TSBaseArray<MDLCAMERASECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLCAMERASECTION>::MemFileName)(TSBaseArray<MDLCAMERASECTION> *this);
  int (__thiscall *TSBaseArray<MDLCAMERASECTION>::MemLineNo)(TSBaseArray<MDLCAMERASECTION> *this);
};

/* 1929 */
struct /*VFT*/ TSFixedArray<MDLCAMERASECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLCAMERASECTION>::MemFileName)(struct TSFixedArray<MDLCAMERASECTION> *this);
  int (__thiscall *TSBaseArray<MDLCAMERASECTION>::MemLineNo)(struct TSFixedArray<MDLCAMERASECTION> *this);
};

/* 1930 */
struct __cppobj TSFixedArray<MDLCAMERASECTION> : TSBaseArray<MDLCAMERASECTION>
{
};

/* 1931 */
struct /*VFT*/ TSGrowableArray<MDLCAMERASECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLCAMERASECTION>::MemFileName)(struct TSGrowableArray<MDLCAMERASECTION> *this);
  int (__thiscall *TSBaseArray<MDLCAMERASECTION>::MemLineNo)(struct TSGrowableArray<MDLCAMERASECTION> *this);
};

/* 1932 */
struct __cppobj TSGrowableArray<MDLCAMERASECTION> : TSFixedArray<MDLCAMERASECTION>
{
  unsigned int m_chunk;
};

/* 1933 */
struct __cppobj TSBaseArray<MDLEVENTSECTION>
{
  TSBaseArray<MDLEVENTSECTION>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  MDLEVENTSECTION *m_data;
};

/* 1934 */
struct /*VFT*/ TSBaseArray<MDLEVENTSECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLEVENTSECTION>::MemFileName)(TSBaseArray<MDLEVENTSECTION> *this);
  int (__thiscall *TSBaseArray<MDLEVENTSECTION>::MemLineNo)(TSBaseArray<MDLEVENTSECTION> *this);
};

/* 1935 */
struct __cppobj MDLEVENTSECTION : MDLGENOBJECT
{
  MDLSIMPLEKEYTRACK<MDLEVENTKEY> eventKeys;
};

/* 1936 */
struct /*VFT*/ TSFixedArray<MDLEVENTSECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLEVENTSECTION>::MemFileName)(struct TSFixedArray<MDLEVENTSECTION> *this);
  int (__thiscall *TSBaseArray<MDLEVENTSECTION>::MemLineNo)(struct TSFixedArray<MDLEVENTSECTION> *this);
};

/* 1937 */
struct __cppobj TSFixedArray<MDLEVENTSECTION> : TSBaseArray<MDLEVENTSECTION>
{
};

/* 1938 */
struct /*VFT*/ TSGrowableArray<MDLEVENTSECTION>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLEVENTSECTION>::MemFileName)(struct TSGrowableArray<MDLEVENTSECTION> *this);
  int (__thiscall *TSBaseArray<MDLEVENTSECTION>::MemLineNo)(struct TSGrowableArray<MDLEVENTSECTION> *this);
};

/* 1939 */
struct __cppobj TSGrowableArray<MDLEVENTSECTION> : TSFixedArray<MDLEVENTSECTION>
{
  unsigned int m_chunk;
};

/* 1940 */
struct __cppobj TSBaseArray<MDLPARTICLEEMITTER2>
{
  TSBaseArray<MDLPARTICLEEMITTER2>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  MDLPARTICLEEMITTER2 *m_data;
};

/* 1941 */
struct /*VFT*/ TSBaseArray<MDLPARTICLEEMITTER2>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLPARTICLEEMITTER2>::MemFileName)(TSBaseArray<MDLPARTICLEEMITTER2> *this);
  int (__thiscall *TSBaseArray<MDLPARTICLEEMITTER2>::MemLineNo)(TSBaseArray<MDLPARTICLEEMITTER2> *this);
};

/* 1942 */
struct __cppobj MDLPARTICLEEMITTER2 : MDLGENOBJECT
{
  MDLPARTICLEEMITTER2::PARTICLE_EMITTER_TYPE emitterType;
  float staticSpeed;
  MDLKEYTRACK<float> speed;
  float staticVariation;
  MDLKEYTRACK<float> variation;
  float staticLatitude;
  MDLKEYTRACK<float> latitude;
  float staticLongitude;
  MDLKEYTRACK<float> longitude;
  float staticGravity;
  MDLKEYTRACK<float> gravity;
  float staticLife;
  MDLKEYTRACK<float> life;
  float staticEmissionRate;
  MDLKEYTRACK<float> emissionRate;
  float staticWidth;
  MDLKEYTRACK<float> width;
  float staticLength;
  MDLKEYTRACK<float> length;
  float staticZsource;
  MDLKEYTRACK<float> zsource;
  MDLPARTICLEEMITTER2::PARTICLE_BLEND_MODE blendMode;
  unsigned int rows;
  unsigned int cols;
  MDLPARTICLEEMITTER2::PARTICLE_TYPE type;
  float tailLength;
  float middleTime;
  C3Color startColor;
  C3Color middleColor;
  C3Color endColor;
  unsigned __int8 startAlpha;
  unsigned __int8 middleAlpha;
  unsigned __int8 endAlpha;
  float startScale;
  float middleScale;
  float endScale;
  unsigned int lifespanUVAnimStart;
  unsigned int lifespanUVAnimEnd;
  unsigned int lifespanUVAnimRepeat;
  unsigned int decayUVAnimStart;
  unsigned int decayUVAnimEnd;
  unsigned int decayUVAnimRepeat;
  unsigned int tailUVAnimStart;
  unsigned int tailUVAnimEnd;
  unsigned int tailUVAnimRepeat;
  unsigned int tailDecayUVAnimStart;
  unsigned int tailDecayUVAnimEnd;
  unsigned int tailDecayUVAnimRepeat;
  MDLKEYTRACK<float> visibilityKeys;
  unsigned int squirts;
  unsigned int textureId;
  int priorityPlane;
  unsigned int replaceableId;
  CMdlString<260> geometryMdl;
  CMdlString<260> recursionMdl;
  float twinkleFPS;
  float twinkleOnOff;
  float twinkleScaleMin;
  float twinkleScaleMax;
  float ivelScale;
  float tumblexMin;
  float tumblexMax;
  float tumbleyMin;
  float tumbleyMax;
  float tumblezMin;
  float tumblezMax;
  float drag;
  float spin;
  NTempest::C3Vector windVector;
  float windTime;
  float followSpeed1;
  float followScale1;
  float followSpeed2;
  float followScale2;
  TSGrowableArray<NTempest::C3Vector> spline;
};

/* 1943 */
struct /*VFT*/ TSFixedArray<MDLPARTICLEEMITTER2>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLPARTICLEEMITTER2>::MemFileName)(struct TSFixedArray<MDLPARTICLEEMITTER2> *this);
  int (__thiscall *TSBaseArray<MDLPARTICLEEMITTER2>::MemLineNo)(struct TSFixedArray<MDLPARTICLEEMITTER2> *this);
};

/* 1944 */
struct __cppobj TSFixedArray<MDLPARTICLEEMITTER2> : TSBaseArray<MDLPARTICLEEMITTER2>
{
};

/* 1945 */
struct /*VFT*/ TSGrowableArray<MDLPARTICLEEMITTER2>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLPARTICLEEMITTER2>::MemFileName)(struct TSGrowableArray<MDLPARTICLEEMITTER2> *this);
  int (__thiscall *TSBaseArray<MDLPARTICLEEMITTER2>::MemLineNo)(struct TSGrowableArray<MDLPARTICLEEMITTER2> *this);
};

/* 1946 */
struct __cppobj TSGrowableArray<MDLPARTICLEEMITTER2> : TSFixedArray<MDLPARTICLEEMITTER2>
{
  unsigned int m_chunk;
};

/* 1947 */
struct __cppobj TSBaseArray<MDLHITTESTSHAPE>
{
  TSBaseArray<MDLHITTESTSHAPE>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  MDLHITTESTSHAPE *m_data;
};

/* 1948 */
struct /*VFT*/ TSBaseArray<MDLHITTESTSHAPE>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLHITTESTSHAPE>::MemFileName)(TSBaseArray<MDLHITTESTSHAPE> *this);
  int (__thiscall *TSBaseArray<MDLHITTESTSHAPE>::MemLineNo)(TSBaseArray<MDLHITTESTSHAPE> *this);
};

/* 1949 */
struct Vector3
{
  float x;
  float y;
  float z;
};

/* 1950 */
struct MDLBOX
{
  Vector3 minimum;
  Vector3 maximum;
};

/* 1951 */
struct MDLCYLINDER
{
  Vector3 base;
  float height;
  float radius;
};

/* 1952 */
struct MDLSPHERE
{
  Vector3 center;
  float radius;
};

/* 1953 */
struct MDLPLANE
{
  float length;
  float width;
};

/* 1954 */
union $61A939EB8A9E95F15E8271AF2BC33C3A
{
  MDLBOX box;
  MDLCYLINDER cylinder;
  MDLSPHERE sphere;
  MDLPLANE plane;
};

/* 1955 */
struct __cppobj MDLHITTESTSHAPE : MDLGENOBJECT
{
  GEOM_SHAPE type;
  $61A939EB8A9E95F15E8271AF2BC33C3A shape;
};

/* 1956 */
struct /*VFT*/ TSFixedArray<MDLHITTESTSHAPE>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLHITTESTSHAPE>::MemFileName)(struct TSFixedArray<MDLHITTESTSHAPE> *this);
  int (__thiscall *TSBaseArray<MDLHITTESTSHAPE>::MemLineNo)(struct TSFixedArray<MDLHITTESTSHAPE> *this);
};

/* 1957 */
struct __cppobj TSFixedArray<MDLHITTESTSHAPE> : TSBaseArray<MDLHITTESTSHAPE>
{
};

/* 1958 */
struct /*VFT*/ TSGrowableArray<MDLHITTESTSHAPE>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLHITTESTSHAPE>::MemFileName)(struct TSGrowableArray<MDLHITTESTSHAPE> *this);
  int (__thiscall *TSBaseArray<MDLHITTESTSHAPE>::MemLineNo)(struct TSGrowableArray<MDLHITTESTSHAPE> *this);
};

/* 1959 */
struct __cppobj TSGrowableArray<MDLHITTESTSHAPE> : TSFixedArray<MDLHITTESTSHAPE>
{
  unsigned int m_chunk;
};

/* 1960 */
struct __cppobj TSBaseArray<MDLRIBBONEMITTER>
{
  TSBaseArray<MDLRIBBONEMITTER>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  MDLRIBBONEMITTER *m_data;
};

/* 1961 */
struct /*VFT*/ TSBaseArray<MDLRIBBONEMITTER>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLRIBBONEMITTER>::MemFileName)(TSBaseArray<MDLRIBBONEMITTER> *this);
  int (__thiscall *TSBaseArray<MDLRIBBONEMITTER>::MemLineNo)(TSBaseArray<MDLRIBBONEMITTER> *this);
};

/* 1962 */
struct __cppobj MDLRIBBONEMITTER : MDLGENOBJECT
{
  float staticHeightAbove;
  MDLKEYTRACK<float> heightAbove;
  float staticHeightBelow;
  MDLKEYTRACK<float> heightBelow;
  float staticAlpha;
  MDLKEYTRACK<float> alphaKeys;
  C3Color staticColor;
  MDLKEYTRACK<C3Color> colorKeys;
  unsigned int edgesPerSecond;
  float edgeLifetime;
  float gravity;
  unsigned int textureRows;
  unsigned int textureCols;
  unsigned int staticTextureSlot;
  MDLSIMPLEKEYTRACK<MDLINTKEY> textureSlot;
  MDLKEYTRACK<float> visibilityKeys;
  unsigned int materialId;
};

/* 1963 */
struct /*VFT*/ TSFixedArray<MDLRIBBONEMITTER>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLRIBBONEMITTER>::MemFileName)(struct TSFixedArray<MDLRIBBONEMITTER> *this);
  int (__thiscall *TSBaseArray<MDLRIBBONEMITTER>::MemLineNo)(struct TSFixedArray<MDLRIBBONEMITTER> *this);
};

/* 1964 */
struct __cppobj TSFixedArray<MDLRIBBONEMITTER> : TSBaseArray<MDLRIBBONEMITTER>
{
};

/* 1965 */
struct /*VFT*/ TSGrowableArray<MDLRIBBONEMITTER>_vtbl
{
  const char *(__thiscall *TSBaseArray<MDLRIBBONEMITTER>::MemFileName)(struct TSGrowableArray<MDLRIBBONEMITTER> *this);
  int (__thiscall *TSBaseArray<MDLRIBBONEMITTER>::MemLineNo)(struct TSGrowableArray<MDLRIBBONEMITTER> *this);
};

/* 1966 */
struct __cppobj TSGrowableArray<MDLRIBBONEMITTER> : TSFixedArray<MDLRIBBONEMITTER>
{
  unsigned int m_chunk;
};

/* 1967 */
struct __cppobj MDLCOLLISION
{
  TSGrowableArray<NTempest::C3Vector> vertices;
  TSGrowableArray<unsigned short> triIndices;
  TSGrowableArray<NTempest::C3Vector> facetNormals;
};

/* 1968 */
struct __cppobj MDLBASE
{
  MDLHEADERSECTION header;
  MDLMODELSECTION model;
  unsigned int version;
  TSGrowableArray<MDLSEQUENCESSECTION> sequences;
  TSGrowableArray<MDLGLOBALSEQSECTION> globalSeqs;
  TSGrowableArray<MDLMATERIALSECTION> materials;
  TSGrowableArray<MDLTEXTURESECTION> textures;
  TSGrowableArray<MDLTEXANIMSECTION> textureanims;
  TSGrowableArray<MDLGEOSETSECTION> geosets;
  TSGrowableArray<MDLGEOSETANIMSECTION> geosetAnims;
  TSGrowableArray<MDLGENOBJECT *> objects;
  TSGrowableArray<MDLBONESECTION> bones;
  TSGrowableArray<MDLLIGHTSECTION> lights;
  TSGrowableArray<MDLGENOBJECT> helpers;
  TSGrowableArray<MDLATTACHMENTSECTION> attachments;
  TSGrowableArray<NTempest::C3Vector> pivotPoints;
  TSGrowableArray<MDLPARTICLEEMITTER> particleEmitters;
  TSGrowableArray<MDLCAMERASECTION> cameras;
  TSGrowableArray<MDLEVENTSECTION> events;
  TSGrowableArray<MDLPARTICLEEMITTER2> particleEmitters2;
  TSGrowableArray<MDLHITTESTSHAPE> hitTestShapes;
  TSGrowableArray<MDLRIBBONEMITTER> ribbonEmitters;
  MDLCOLLISION collision;
};

/* 1969 */
struct __cppobj MDLDATA : MDLBASE
{
};

/* 1970 */
struct __cppobj TSStackArray<unsigned int>
{
  unsigned int m_maxCount;
  unsigned int m_count;
  unsigned int *m_data;
};

/* 1971 */
struct __cppobj CMsgBuffer
{
  unsigned int m_alloc;
  int m_freeData;
  unsigned int m_read;
  unsigned int m_write;
  unsigned __int8 *m_data;
};

/* 1972 */
struct CDataAllocator::Block
{
  CDataAllocator::Block *m_next;
};

/* 1973 */
struct CDataAllocator::Data
{
  CDataAllocator::Data *m_next;
};

/* 1974 */
struct __cppobj CDataAllocator
{
  unsigned int m_bytesPerData;
  unsigned int m_dataPerBlock;
  unsigned int m_dataUsed;
  CDataAllocator::Block *m_blockList;
  CDataAllocator::Data *m_dataList;
};

/* 1975 */
struct __cppobj TSBaseArray<enum ACTIVITY>
{
  TSBaseArray<enum ACTIVITY>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  ACTIVITY *m_data;
};

/* 1976 */
struct /*VFT*/ TSBaseArray<enum ACTIVITY>_vtbl
{
  const char *(__thiscall *TSBaseArray<enum ACTIVITY>::MemFileName)(TSBaseArray<enum ACTIVITY> *this);
  int (__thiscall *TSBaseArray<enum ACTIVITY>::MemLineNo)(TSBaseArray<enum ACTIVITY> *this);
};

/* 1977 */
struct /*VFT*/ TSFixedArray<enum ACTIVITY>_vtbl
{
  const char *(__thiscall *TSBaseArray<enum ACTIVITY>::MemFileName)(struct TSFixedArray<enum ACTIVITY> *this);
  int (__thiscall *TSBaseArray<enum ACTIVITY>::MemLineNo)(struct TSFixedArray<enum ACTIVITY> *this);
};

/* 1978 */
struct __cppobj TSFixedArray<enum ACTIVITY> : TSBaseArray<enum ACTIVITY>
{
};

/* 1979 */
struct /*VFT*/ TSGrowableArray<enum ACTIVITY>_vtbl
{
  const char *(__thiscall *TSBaseArray<enum ACTIVITY>::MemFileName)(struct TSGrowableArray<enum ACTIVITY> *this);
  int (__thiscall *TSBaseArray<enum ACTIVITY>::MemLineNo)(struct TSGrowableArray<enum ACTIVITY> *this);
};

/* 1980 */
struct __cppobj TSGrowableArray<enum ACTIVITY> : TSFixedArray<enum ACTIVITY>
{
  unsigned int m_chunk;
};

/* 1981 */
struct __cppobj CDataRecycler
{
  CDataRecycler_vtbl *__vftable /*VFT*/;
  int m_nodesRecyclable;
  unsigned int m_nodesPerBlock;
  CDataRecycler::NodeBlock *m_nodeBlockList;
  CDataRecycler::Node *m_nodeFullList;
  CDataRecycler::Node *m_nodeEmptyList;
};

/* 1982 */
struct /*VFT*/ CDataRecycler_vtbl
{
  void (__thiscall *CDataRecycler::~CDataRecycler)(CDataRecycler *this);
  void (__thiscall *CDataRecycler::Clear)(CDataRecycler *this);
  void *(__thiscall *CDataRecycler::AllocData)(CDataRecycler *this, unsigned int, unsigned int *, const char *, int);
  void *(__thiscall *CDataRecycler::ReallocData)(CDataRecycler *this, void *, unsigned int, unsigned int *, const char *, int);
  void (__thiscall *CDataRecycler::FreeData)(CDataRecycler *this, void *, const char *, int);
};

/* 1983 */
struct CDataRecycler::NodeBlock
{
  CDataRecycler::NodeBlock *m_next;
  CDataRecycler::Node m_nodes[1];
};

/* 1984 */
struct CDataRecycler::Node
{
  CDataRecycler::Node *m_next;
  void *m_data;
  unsigned int m_bytes;
};

/* 1986 */
struct __cppobj TSList<CStringRep,TSGetExplicitLink<CStringRep> >
{
  int m_linkoffset;
  TSLink<CStringRep> m_terminator;
};

/* 1987 */
struct __cppobj TSExplicitList<CStringRep,-572662307> : TSList<CStringRep,TSGetExplicitLink<CStringRep> >
{
};

/* 1989 */
struct __cppobj TSBaseArray<TSExplicitList<CStringRep,-572662307> >
{
  TSBaseArray<TSExplicitList<CStringRep,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<CStringRep,-572662307> *m_data;
};

/* 1992 */
struct __cppobj TSFixedArray<TSExplicitList<CStringRep,-572662307> > : TSBaseArray<TSExplicitList<CStringRep,-572662307> >
{
};

/* 1994 */
struct __cppobj TSGrowableArray<TSExplicitList<CStringRep,-572662307> > : TSFixedArray<TSExplicitList<CStringRep,-572662307> >
{
  unsigned int m_chunk;
};

/* 1985 */
struct __cppobj TSHashTable<CStringRep,HASHKEY_STR>
{
  TSHashTable<CStringRep,HASHKEY_STR>_vtbl *__vftable /*VFT*/;
  TSExplicitList<CStringRep,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<CStringRep,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 1988 */
struct /*VFT*/ TSHashTable<CStringRep,HASHKEY_STR>_vtbl
{
  void (__thiscall *TSHashTable<CStringRep,HASHKEY_STR>::InternalDelete)(TSHashTable<CStringRep,HASHKEY_STR> *this, CStringRep *);
  CStringRep *(__thiscall *TSHashTable<CStringRep,HASHKEY_STR>::InternalNew)(TSHashTable<CStringRep,HASHKEY_STR> *this, TSExplicitList<CStringRep,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<CStringRep,HASHKEY_STR>)(TSHashTable<CStringRep,HASHKEY_STR> *this);
  void (__thiscall *TSHashTable<CStringRep,HASHKEY_STR>::Destroy)(TSHashTable<CStringRep,HASHKEY_STR> *this);
};

/* 1990 */
struct /*VFT*/ TSBaseArray<TSExplicitList<CStringRep,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CStringRep,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<CStringRep,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CStringRep,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<CStringRep,-572662307> > *this);
};

/* 1991 */
struct /*VFT*/ TSFixedArray<TSExplicitList<CStringRep,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CStringRep,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<CStringRep,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CStringRep,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<CStringRep,-572662307> > *this);
};

/* 1993 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<CStringRep,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CStringRep,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<CStringRep,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CStringRep,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<CStringRep,-572662307> > *this);
};

/* 1995 */
struct __cppobj CStringManager : TSHashTable<CStringRep,HASHKEY_STR>
{
};

/* 1996 */
struct /*VFT*/ CStringManager_vtbl
{
  void (__thiscall *CStringManager::~CStringManager)(CStringManager *this);
  CStringRep *(__thiscall *TSHashTable<CStringRep,HASHKEY_STR>::InternalNew)(struct CStringManager *this, TSExplicitList<CStringRep,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~CStringManager)(struct CStringManager *this);
  void (__thiscall *TSHashTable<CStringRep,HASHKEY_STR>::Destroy)(struct CStringManager *this);
};

/* 1997 */
struct HPROPCONTEXT__
{
  int unused;
};

/* 1998 */
struct __cppobj TSLink<PrefetchNode>
{
  TSLink<PrefetchNode> *m_prevlink;
  PrefetchNode *m_next;
};

/* 1999 */
struct __cppobj TSHashObject<PrefetchNode,HASHKEY_STRI>
{
  unsigned int m_hashval;
  __unaligned __declspec(align(1)) TSLink<PrefetchNode> m_linktoslot;
  __unaligned __declspec(align(1)) TSLink<PrefetchNode> m_linktofull;
  HASHKEY_STRI m_key;
};

/* 2002 */
struct SOVERLAPPED
{
  unsigned int Offset;
  SEvent *hEvent;
};

/* 2003 */
struct __cppobj __unaligned __declspec(align(4)) PrefetchNode : TSHashObject<PrefetchNode,HASHKEY_STRI>
{
  void *buffer;
  unsigned int size;
  SOVERLAPPED overlapped;
  int refCount;
};

/* 2000 */
struct __cppobj SSyncObject
{
  unsigned __int8 m_opaqueData[4];
};

/* 2001 */
struct __cppobj SEvent : SSyncObject
{
};

/* 2004 */
struct __cppobj TSList<PrefetchNode,TSGetExplicitLink<PrefetchNode> >
{
  int m_linkoffset;
  TSLink<PrefetchNode> m_terminator;
};

/* 2005 */
struct __cppobj TSExplicitList<PrefetchNode,-572662307> : TSList<PrefetchNode,TSGetExplicitLink<PrefetchNode> >
{
};

/* 2006 */
struct __cppobj TSBaseArray<TSExplicitList<PrefetchNode,-572662307> >
{
  TSBaseArray<TSExplicitList<PrefetchNode,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<PrefetchNode,-572662307> *m_data;
};

/* 2007 */
struct /*VFT*/ TSBaseArray<TSExplicitList<PrefetchNode,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<PrefetchNode,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<PrefetchNode,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<PrefetchNode,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<PrefetchNode,-572662307> > *this);
};

/* 2008 */
struct /*VFT*/ TSFixedArray<TSExplicitList<PrefetchNode,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<PrefetchNode,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<PrefetchNode,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<PrefetchNode,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<PrefetchNode,-572662307> > *this);
};

/* 2009 */
struct __cppobj TSFixedArray<TSExplicitList<PrefetchNode,-572662307> > : TSBaseArray<TSExplicitList<PrefetchNode,-572662307> >
{
};

/* 2010 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<PrefetchNode,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<PrefetchNode,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<PrefetchNode,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<PrefetchNode,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<PrefetchNode,-572662307> > *this);
};

/* 2011 */
struct __cppobj TSGrowableArray<TSExplicitList<PrefetchNode,-572662307> > : TSFixedArray<TSExplicitList<PrefetchNode,-572662307> >
{
  unsigned int m_chunk;
};

/* 2012 */
struct __cppobj TSHashTable<PrefetchNode,HASHKEY_STRI>
{
  TSHashTable<PrefetchNode,HASHKEY_STRI>_vtbl *__vftable /*VFT*/;
  TSExplicitList<PrefetchNode,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<PrefetchNode,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 2013 */
struct /*VFT*/ TSHashTable<PrefetchNode,HASHKEY_STRI>_vtbl
{
  void (__thiscall *TSHashTable<PrefetchNode,HASHKEY_STRI>::InternalDelete)(TSHashTable<PrefetchNode,HASHKEY_STRI> *this, PrefetchNode *);
  PrefetchNode *(__thiscall *TSHashTable<PrefetchNode,HASHKEY_STRI>::InternalNew)(TSHashTable<PrefetchNode,HASHKEY_STRI> *this, TSExplicitList<PrefetchNode,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<PrefetchNode,HASHKEY_STRI>)(TSHashTable<PrefetchNode,HASHKEY_STRI> *this);
  void (__thiscall *TSHashTable<PrefetchNode,HASHKEY_STRI>::Destroy)(TSHashTable<PrefetchNode,HASHKEY_STRI> *this);
};

/* 2014 */
struct __cppobj TSLink<UncachableNode>
{
  TSLink<UncachableNode> *m_prevlink;
  UncachableNode *m_next;
};

/* 2015 */
struct __cppobj TSHashObject<UncachableNode,HASHKEY_STRI>
{
  unsigned int m_hashval;
  __unaligned __declspec(align(1)) TSLink<UncachableNode> m_linktoslot;
  __unaligned __declspec(align(1)) TSLink<UncachableNode> m_linktofull;
  HASHKEY_STRI m_key;
};

/* 2016 */
struct __cppobj UncachableNode : TSHashObject<UncachableNode,HASHKEY_STRI>
{
};

/* 2017 */
struct __cppobj TSList<UncachableNode,TSGetExplicitLink<UncachableNode> >
{
  int m_linkoffset;
  TSLink<UncachableNode> m_terminator;
};

/* 2018 */
struct __cppobj TSExplicitList<UncachableNode,-572662307> : TSList<UncachableNode,TSGetExplicitLink<UncachableNode> >
{
};

/* 2019 */
struct __cppobj TSBaseArray<TSExplicitList<UncachableNode,-572662307> >
{
  TSBaseArray<TSExplicitList<UncachableNode,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<UncachableNode,-572662307> *m_data;
};

/* 2020 */
struct /*VFT*/ TSBaseArray<TSExplicitList<UncachableNode,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<UncachableNode,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<UncachableNode,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<UncachableNode,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<UncachableNode,-572662307> > *this);
};

/* 2021 */
struct /*VFT*/ TSFixedArray<TSExplicitList<UncachableNode,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<UncachableNode,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<UncachableNode,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<UncachableNode,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<UncachableNode,-572662307> > *this);
};

/* 2022 */
struct __cppobj TSFixedArray<TSExplicitList<UncachableNode,-572662307> > : TSBaseArray<TSExplicitList<UncachableNode,-572662307> >
{
};

/* 2023 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<UncachableNode,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<UncachableNode,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<UncachableNode,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<UncachableNode,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<UncachableNode,-572662307> > *this);
};

/* 2024 */
struct __cppobj TSGrowableArray<TSExplicitList<UncachableNode,-572662307> > : TSFixedArray<TSExplicitList<UncachableNode,-572662307> >
{
  unsigned int m_chunk;
};

/* 2025 */
struct __cppobj TSHashTable<UncachableNode,HASHKEY_STRI>
{
  TSHashTable<UncachableNode,HASHKEY_STRI>_vtbl *__vftable /*VFT*/;
  TSExplicitList<UncachableNode,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<UncachableNode,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 2026 */
struct /*VFT*/ TSHashTable<UncachableNode,HASHKEY_STRI>_vtbl
{
  void (__thiscall *TSHashTable<UncachableNode,HASHKEY_STRI>::InternalDelete)(TSHashTable<UncachableNode,HASHKEY_STRI> *this, UncachableNode *);
  UncachableNode *(__thiscall *TSHashTable<UncachableNode,HASHKEY_STRI>::InternalNew)(TSHashTable<UncachableNode,HASHKEY_STRI> *this, TSExplicitList<UncachableNode,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<UncachableNode,HASHKEY_STRI>)(TSHashTable<UncachableNode,HASHKEY_STRI> *this);
  void (__thiscall *TSHashTable<UncachableNode,HASHKEY_STRI>::Destroy)(TSHashTable<UncachableNode,HASHKEY_STRI> *this);
};

/* 2027 */
struct HSLOG__
{
  int unused;
};

/* 2028 */
struct __cppobj TSLink<EvtContext>
{
  TSLink<EvtContext> *m_prevlink;
  EvtContext *m_next;
};

/* 2030 */
struct __cppobj TSLinkedNode<EvtContext>
{
  TSLink<EvtContext> m_link;
};

/* 2031 */
struct __cppobj TInstanceId<EvtContext> : TSLinkedNode<EvtContext>
{
  TInstanceId<EvtContext>_vtbl *__vftable /*VFT*/;
  unsigned int m_id;
};

/* 2033 */
struct __cppobj TSingletonInstanceId<EvtContext,8> : TInstanceId<EvtContext>
{
};

/* 2035 */
struct __cppobj CSBasePriority
{
  CSBasePriority_vtbl *__vftable /*VFT*/;
  CSBasePriorityQueue *m_queue;
  unsigned int m_index;
};

/* 2045 */
struct __cppobj TSTimerPriority<unsigned long> : CSBasePriority
{
  unsigned int m_val;
};

/* 2047 */
struct __cppobj TSLink<EvtHandler>
{
  TSLink<EvtHandler> *m_prevlink;
  EvtHandler *m_next;
};

/* 2049 */
struct __cppobj TSList<EvtHandler,TSGetExplicitLink<EvtHandler> >
{
  int m_linkoffset;
  TSLink<EvtHandler> m_terminator;
};

/* 2050 */
struct __cppobj TSExplicitList<EvtHandler,0> : TSList<EvtHandler,TSGetExplicitLink<EvtHandler> >
{
};

/* 2051 */
struct __cppobj TSLink<EvtMessage>
{
  TSLink<EvtMessage> *m_prevlink;
  EvtMessage *m_next;
};

/* 2054 */
struct __cppobj TSList<EvtMessage,TSGetExplicitLink<EvtMessage> >
{
  int m_linkoffset;
  TSLink<EvtMessage> m_terminator;
};

/* 2055 */
struct __cppobj TSExplicitList<EvtMessage,4> : TSList<EvtMessage,TSGetExplicitLink<EvtMessage> >
{
};

/* 2056 */
struct __cppobj TSLink<EvtKeyDown>
{
  TSLink<EvtKeyDown> *m_prevlink;
  EvtKeyDown *m_next;
};

/* 2058 */
struct __cppobj TSList<EvtKeyDown,TSGetExplicitLink<EvtKeyDown> >
{
  int m_linkoffset;
  TSLink<EvtKeyDown> m_terminator;
};

/* 2059 */
struct __cppobj TSExplicitList<EvtKeyDown,0> : TSList<EvtKeyDown,TSGetExplicitLink<EvtKeyDown> >
{
};

/* 2060 */
struct __cppobj TSBaseArray<EvtTimer *>
{
  TSBaseArray<EvtTimer *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  EvtTimer **m_data;
};

/* 2064 */
struct __cppobj TSFixedArray<EvtTimer *> : TSBaseArray<EvtTimer *>
{
};

/* 2066 */
struct __cppobj TSGrowableArray<EvtTimer *> : TSFixedArray<EvtTimer *>
{
  unsigned int m_chunk;
};

/* 2067 */
struct __cppobj EvtIdTable<EvtTimer *>
{
  TSGrowableArray<EvtTimer *> m_allocArray;
  TSGrowableArray<unsigned int> m_freeArray;
};

/* 2037 */
struct __cppobj TSBaseArray<void *>
{
  TSBaseArray<void *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  void **m_data;
};

/* 2040 */
struct __cppobj TSFixedArray<void *> : TSBaseArray<void *>
{
};

/* 2042 */
struct __cppobj TSGrowableArray<void *> : TSFixedArray<void *>
{
  unsigned int m_chunk;
};

/* 2044 */
struct __cppobj CSBasePriorityQueue : TSGrowableArray<void *>
{
  unsigned int m_linkOffset;
};

/* 2069 */
struct __cppobj TSPriorityQueue<EvtTimer> : CSBasePriorityQueue
{
};

/* 2071 */
struct __cppobj EvtTimerQueue : TSPriorityQueue<EvtTimer>
{
};

/* 2029 */
struct __cppobj EvtContext : TSingletonInstanceId<EvtContext,8>
{
  SCritSect m_critsect;
  unsigned int m_currTime;
  EvtContext::SCHEDSTATE m_schedState;
  TSTimerPriority<unsigned long> m_schedNextWakeTime;
  unsigned int m_schedLastIdle;
  unsigned int m_schedFlags;
  unsigned int m_schedIdleTime;
  unsigned int m_schedInitialIdleTime;
  unsigned int m_schedWeight;
  unsigned int m_schedSmoothWeight;
  int m_schedRebalance;
  TSExplicitList<EvtHandler,0> m_queueHandlerList[29];
  TSExplicitList<EvtMessage,4> m_queueMessageList;
  unsigned int m_queueSyncButtonState;
  TSExplicitList<EvtKeyDown,0> m_queueSyncKeyDownList;
  EvtIdTable<EvtTimer *> m_timerIdTable;
  EvtTimerQueue m_timerQueue;
  HPROPCONTEXT__ *m_propContext;
  void *m_callContext;
  unsigned int m_startWatchdog;
};

/* 2032 */
struct /*VFT*/ TInstanceId<EvtContext>_vtbl
{
  void (__thiscall *TInstanceId<EvtContext>::~TInstanceId<EvtContext>)(TInstanceId<EvtContext> *this);
};

/* 2036 */
struct /*VFT*/ CSBasePriority_vtbl
{
  int (__thiscall *Compare)(CSBasePriority *this, CSBasePriority *);
};

/* 2048 */
struct __cppobj EvtHandler
{
  TSLink<EvtHandler> link;
  int (__fastcall *func)(const void *, void *);
  void *param;
  float priority;
  int marker;
};

/* 2052 */
struct TExtraInstanceRecyclable<EvtMessage>
{
  unsigned int m_recycleBytes;
};

/* 2053 */
struct __cppobj __unaligned __declspec(align(4)) EvtMessage : TExtraInstanceRecyclable<EvtMessage>
{
  TSLink<EvtMessage> link;
  EVENTID id;
  unsigned __int8 data[4];
};

/* 2057 */
struct __cppobj __unaligned __declspec(align(4)) EvtKeyDown
{
  TSLink<EvtKeyDown> link;
  KEY key;
};

/* 2061 */
struct /*VFT*/ TSBaseArray<EvtTimer *>_vtbl
{
  const char *(__thiscall *TSBaseArray<EvtTimer *>::MemFileName)(TSBaseArray<EvtTimer *> *this);
  int (__thiscall *TSBaseArray<EvtTimer *>::MemLineNo)(TSBaseArray<EvtTimer *> *this);
};

/* 2062 */
struct __cppobj __declspec(align(8)) EvtTimer
{
  unsigned int id;
  TSTimerPriority<unsigned long> targetTime;
  float timeout;
  int (__fastcall *handler)(const void *, void *);
  void *param;
  int (__fastcall *guidHandler)(const void *, unsigned __int64, void *);
  unsigned __int64 guidParam;
  void *guidParam2;
};

/* 2038 */
struct /*VFT*/ TSBaseArray<void *>_vtbl
{
  const char *(__thiscall *TSBaseArray<void *>::MemFileName)(TSBaseArray<void *> *this);
  int (__thiscall *TSBaseArray<void *>::MemLineNo)(TSBaseArray<void *> *this);
};

/* 2034 */
struct /*VFT*/ TSingletonInstanceId<EvtContext,8>_vtbl
{
  void (__thiscall *~TSingletonInstanceId<EvtContext,8>)(TSingletonInstanceId<EvtContext,8> *this);
};

/* 2039 */
struct /*VFT*/ TSFixedArray<void *>_vtbl
{
  const char *(__thiscall *TSBaseArray<void *>::MemFileName)(struct TSFixedArray<void *> *this);
  int (__thiscall *TSBaseArray<void *>::MemLineNo)(struct TSFixedArray<void *> *this);
};

/* 2041 */
struct /*VFT*/ TSGrowableArray<void *>_vtbl
{
  const char *(__thiscall *TSBaseArray<void *>::MemFileName)(struct TSGrowableArray<void *> *this);
  int (__thiscall *TSBaseArray<void *>::MemLineNo)(struct TSGrowableArray<void *> *this);
};

/* 2043 */
struct /*VFT*/ CSBasePriorityQueue_vtbl
{
  const char *(__thiscall *TSBaseArray<void *>::MemFileName)(struct CSBasePriorityQueue *this);
  int (__thiscall *TSBaseArray<void *>::MemLineNo)(struct CSBasePriorityQueue *this);
};

/* 2046 */
struct /*VFT*/ TSTimerPriority<unsigned long>_vtbl
{
  int (__thiscall *TSTimerPriority<unsigned long>::Compare)(TSTimerPriority<unsigned long> *this, CSBasePriority *);
};

/* 2063 */
struct /*VFT*/ TSFixedArray<EvtTimer *>_vtbl
{
  const char *(__thiscall *TSBaseArray<EvtTimer *>::MemFileName)(struct TSFixedArray<EvtTimer *> *this);
  int (__thiscall *TSBaseArray<EvtTimer *>::MemLineNo)(struct TSFixedArray<EvtTimer *> *this);
};

/* 2065 */
struct /*VFT*/ TSGrowableArray<EvtTimer *>_vtbl
{
  const char *(__thiscall *TSBaseArray<EvtTimer *>::MemFileName)(struct TSGrowableArray<EvtTimer *> *this);
  int (__thiscall *TSBaseArray<EvtTimer *>::MemLineNo)(struct TSGrowableArray<EvtTimer *> *this);
};

/* 2068 */
struct /*VFT*/ TSPriorityQueue<EvtTimer>_vtbl
{
  const char *(__thiscall *TSBaseArray<void *>::MemFileName)(struct TSPriorityQueue<EvtTimer> *this);
  int (__thiscall *TSBaseArray<void *>::MemLineNo)(struct TSPriorityQueue<EvtTimer> *this);
};

/* 2070 */
struct /*VFT*/ EvtTimerQueue_vtbl
{
  const char *(__thiscall *TSBaseArray<void *>::MemFileName)(struct EvtTimerQueue *this);
  int (__thiscall *TSBaseArray<void *>::MemLineNo)(struct EvtTimerQueue *this);
};

/* 2072 */
struct /*VFT*/ EvtContext_vtbl
{
  void (__thiscall *~EvtContext)(EvtContext *this);
};

/* 2073 */
struct EVENT_DATA_TIMER
{
  float elapsedSec;
  unsigned int currTime;
};

/* 2074 */
struct __cppobj TInstanceAllocator<EventReg> : CDataAllocator
{
};

/* 2075 */
struct __cppobj TLockedInstanceAllocator<EventReg> : TInstanceAllocator<EventReg>
{
  SCritSect m_critsect;
};

/* 2076 */
struct __cppobj TSLink<EventReg>
{
  TSLink<EventReg> *m_prevlink;
  EventReg *m_next;
};

/* 2078 */
struct __cppobj __declspec(align(4)) TSHashObject<EventReg,HASHKEY_NONE>
{
  unsigned int m_hashval;
  TSLink<EventReg> m_linktoslot;
  TSLink<EventReg> m_linktofull;
  HASHKEY_NONE m_key;
};

/* 2079 */
struct __cppobj TSLink<EventReg::EVENTCALLBACKREG>
{
  TSLink<EventReg::EVENTCALLBACKREG> *m_prevlink;
  EventReg::EVENTCALLBACKREG *m_next;
};

/* 2082 */
struct __cppobj TSList<EventReg::EVENTCALLBACKREG,TSGetLink<EventReg::EVENTCALLBACKREG> >
{
  int m_linkoffset;
  TSLink<EventReg::EVENTCALLBACKREG> m_terminator;
};

/* 2083 */
struct __cppobj TSLink<EventReg::EVENTDISPATCHREG>
{
  TSLink<EventReg::EVENTDISPATCHREG> *m_prevlink;
  EventReg::EVENTDISPATCHREG *m_next;
};

/* 2101 */
struct __cppobj TSList<EventReg::EVENTDISPATCHREG,TSGetLink<EventReg::EVENTDISPATCHREG> >
{
  int m_linkoffset;
  TSLink<EventReg::EVENTDISPATCHREG> m_terminator;
};

/* 2077 */
struct __cppobj EventReg : TSHashObject<EventReg,HASHKEY_NONE>
{
  unsigned int flags;
  TSList<EventReg::EVENTCALLBACKREG,TSGetLink<EventReg::EVENTCALLBACKREG> > callbackList;
  TSList<EventReg::EVENTDISPATCHREG,TSGetLink<EventReg::EVENTDISPATCHREG> > dispatchList;
};

/* 2080 */
struct __cppobj TSLinkedNode<EventReg::EVENTCALLBACKREG>
{
  TSLink<EventReg::EVENTCALLBACKREG> m_link;
};

/* 2081 */
struct __cppobj EventReg::EVENTCALLBACKREG : TSLinkedNode<EventReg::EVENTCALLBACKREG>
{
  int (__fastcall *callback)(const CEvent *, void *);
  void *param;
};

/* 2084 */
struct __cppobj TSLinkedNode<EventReg::EVENTDISPATCHREG>
{
  TSLink<EventReg::EVENTDISPATCHREG> m_link;
};

/* 2099 */
struct __cppobj TRefCntPtr<CObserver>
{
  CObserver *m_ptr;
};

/* 2100 */
struct __cppobj EventReg::EVENTDISPATCHREG : TSLinkedNode<EventReg::EVENTDISPATCHREG>
{
  TRefCntPtr<CObserver> pObserver;
  int expectedEventId;
};

/* 2097 */
struct __cppobj CObserver : TRefCnt
{
  EventRegistry *m_pEventRegistry;
};

/* 2086 */
struct __cppobj TSList<EventReg,TSGetExplicitLink<EventReg> >
{
  int m_linkoffset;
  TSLink<EventReg> m_terminator;
};

/* 2087 */
struct __cppobj TSExplicitList<EventReg,-572662307> : TSList<EventReg,TSGetExplicitLink<EventReg> >
{
};

/* 2089 */
struct __cppobj TSBaseArray<TSExplicitList<EventReg,-572662307> >
{
  TSBaseArray<TSExplicitList<EventReg,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<EventReg,-572662307> *m_data;
};

/* 2092 */
struct __cppobj TSFixedArray<TSExplicitList<EventReg,-572662307> > : TSBaseArray<TSExplicitList<EventReg,-572662307> >
{
};

/* 2094 */
struct __cppobj TSGrowableArray<TSExplicitList<EventReg,-572662307> > : TSFixedArray<TSExplicitList<EventReg,-572662307> >
{
  unsigned int m_chunk;
};

/* 2085 */
struct __cppobj TSHashTable<EventReg,HASHKEY_NONE>
{
  TSHashTable<EventReg,HASHKEY_NONE>_vtbl *__vftable /*VFT*/;
  TSExplicitList<EventReg,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<EventReg,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 2095 */
struct __cppobj EventRegistry : TSHashTable<EventReg,HASHKEY_NONE>
{
};

/* 2088 */
struct /*VFT*/ TSHashTable<EventReg,HASHKEY_NONE>_vtbl
{
  void (__thiscall *TSHashTable<EventReg,HASHKEY_NONE>::InternalDelete)(TSHashTable<EventReg,HASHKEY_NONE> *this, EventReg *);
  EventReg *(__thiscall *TSHashTable<EventReg,HASHKEY_NONE>::InternalNew)(TSHashTable<EventReg,HASHKEY_NONE> *this, TSExplicitList<EventReg,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<EventReg,HASHKEY_NONE>)(TSHashTable<EventReg,HASHKEY_NONE> *this);
  void (__thiscall *TSHashTable<EventReg,HASHKEY_NONE>::Destroy)(TSHashTable<EventReg,HASHKEY_NONE> *this);
};

/* 2090 */
struct /*VFT*/ TSBaseArray<TSExplicitList<EventReg,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<EventReg,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<EventReg,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<EventReg,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<EventReg,-572662307> > *this);
};

/* 2091 */
struct /*VFT*/ TSFixedArray<TSExplicitList<EventReg,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<EventReg,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<EventReg,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<EventReg,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<EventReg,-572662307> > *this);
};

/* 2093 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<EventReg,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<EventReg,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<EventReg,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<EventReg,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<EventReg,-572662307> > *this);
};

/* 2096 */
struct /*VFT*/ EventRegistry_vtbl
{
  void (__thiscall *~EventRegistry)(EventRegistry *this);
  EventReg *(__thiscall *TSHashTable<EventReg,HASHKEY_NONE>::InternalNew)(struct EventRegistry *this, TSExplicitList<EventReg,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~EventRegistry)(struct EventRegistry *this);
  void (__thiscall *TSHashTable<EventReg,HASHKEY_NONE>::Destroy)(struct EventRegistry *this);
};

/* 2098 */
struct /*VFT*/ CObserver_vtbl
{
  void (__thiscall *CObserver::~CObserver)(CObserver *this);
  void (__thiscall *~CObserver)(struct CObserver *this);
  void (__thiscall *CObserver::RegisterCallback)(CObserver *this, unsigned int, int (__fastcall *)(const CEvent *, void *), void *);
  void (__thiscall *CObserver::RegisterEvent)(CObserver *this, unsigned int, int, CObserver *);
  int (__thiscall *CObserver::OnEvent)(CObserver *this, const CEvent *);
  _BYTE gap14[4];
  int (__thiscall *CObserver::DispatchEvent)(CObserver *this, int, CEvent *);
};

/* 2102 */
struct __cppobj TInstanceAllocator<EventReg::EVENTCALLBACKREG> : CDataAllocator
{
};

/* 2103 */
struct __cppobj TLockedInstanceAllocator<EventReg::EVENTCALLBACKREG> : TInstanceAllocator<EventReg::EVENTCALLBACKREG>
{
  SCritSect m_critsect;
};

/* 2104 */
struct __cppobj TInstanceAllocator<EventReg::EVENTDISPATCHREG> : CDataAllocator
{
};

/* 2105 */
struct __cppobj TLockedInstanceAllocator<EventReg::EVENTDISPATCHREG> : TInstanceAllocator<EventReg::EVENTDISPATCHREG>
{
  SCritSect m_critsect;
};

/* 2106 */
struct __cppobj CInputObserver : CObserver
{
};

/* 2107 */
struct /*VFT*/ CInputObserver_vtbl
{
  void (__thiscall *~CInputObserver)(CInputObserver *this);
  void (__thiscall *~CInputObserver)(struct CInputObserver *this);
  void (__thiscall *CObserver::RegisterCallback)(struct CInputObserver *this, unsigned int, int (__fastcall *)(const CEvent *, void *), void *);
  void (__thiscall *CObserver::RegisterEvent)(struct CInputObserver *this, unsigned int, int, CObserver *);
  int (__thiscall *CObserver::OnEvent)(struct CInputObserver *this, const CEvent *);
  _BYTE gap14[4];
  int (__thiscall *CObserver::DispatchEvent)(struct CInputObserver *this, int, CEvent *);
};

/* 2108 */
struct __cppobj TRefCntPtr<CInputObserver>
{
  CInputObserver *m_ptr;
};

/* 2109 */
struct EVENT_DATA_FOCUS
{
  int focus;
};

/* 2110 */
struct __cppobj CFocusEvent : CEvent, EVENT_DATA_FOCUS
{
};

/* 2111 */
struct /*VFT*/ CFocusEvent_vtbl
{
  void (__thiscall *~CFocusEvent)(CFocusEvent *this);
  void (__thiscall *~CFocusEvent)(struct CFocusEvent *this);
};

/* 2112 */
struct __cppobj TExtraInstanceRecycler<EvtMessage> : CDataRecycler
{
  unsigned int m_maxBytesPerInstance;
};

/* 2113 */
struct /*VFT*/ TExtraInstanceRecycler<EvtMessage>_vtbl
{
  void (__thiscall *TExtraInstanceRecycler<EvtMessage>::Clear)(TExtraInstanceRecycler<EvtMessage> *this);
  void (__thiscall *CDataRecycler::Clear)(struct TExtraInstanceRecycler<EvtMessage> *this);
  void *(__thiscall *CDataRecycler::AllocData)(struct TExtraInstanceRecycler<EvtMessage> *this, unsigned int, unsigned int *, const char *, int);
  void *(__thiscall *CDataRecycler::ReallocData)(struct TExtraInstanceRecycler<EvtMessage> *this, void *, unsigned int, unsigned int *, const char *, int);
  void (__thiscall *CDataRecycler::FreeData)(struct TExtraInstanceRecycler<EvtMessage> *this, void *, const char *, int);
};

/* 2114 */
struct __cppobj CSRWLock
{
  unsigned __int8 m_opaqueData[12];
};

/* 2115 */
struct __cppobj TSList<EvtContext,TSGetLink<EvtContext> >
{
  int m_linkoffset;
  TSLink<EvtContext> m_terminator;
};

/* 2116 */
struct __cppobj TInstanceIdTable<EvtContext,8>
{
  SCritSect m_idCritsect;
  unsigned int m_id;
  int m_idWrapped;
  CSRWLock m_idLock[8];
  TSList<EvtContext,TSGetLink<EvtContext> > m_idList[8];
};

/* 2117 */
struct INSTANCELOCK__
{
  int unused;
};

/* 2118 */
struct __cppobj TInstanceIdTable<EvtContext,8>::Iterator
{
  TInstanceIdTable<EvtContext,8> *m_table;
  int m_slot;
  EvtContext *m_next;
};

/* 2119 */
struct __cppobj TSLink<EvtThread>
{
  TSLink<EvtThread> *m_prevlink;
  EvtThread *m_next;
};

/* 2120 */
struct __cppobj TSLinkedNode<EvtThread>
{
  TSLink<EvtThread> m_link;
};

/* 2122 */
struct __cppobj TSPriorityQueue<EvtContext> : CSBasePriorityQueue
{
};

/* 2124 */
struct __cppobj EvtContextQueue : TSPriorityQueue<EvtContext>
{
};

/* 2125 */
struct __cppobj __unaligned __declspec(align(4)) EvtThread : TSLinkedNode<EvtThread>
{
  unsigned int m_threadSlot;
  unsigned int m_threadCount;
  unsigned int m_weightTotal;
  unsigned int m_weightAvg;
  unsigned int m_contextCount;
  unsigned int m_rebalance;
  SEvent m_wakeEvent;
  EvtContextQueue m_contextQueue;
};

/* 2121 */
struct /*VFT*/ TSPriorityQueue<EvtContext>_vtbl
{
  const char *(__thiscall *TSBaseArray<void *>::MemFileName)(struct TSPriorityQueue<EvtContext> *this);
  int (__thiscall *TSBaseArray<void *>::MemLineNo)(struct TSPriorityQueue<EvtContext> *this);
};

/* 2123 */
struct /*VFT*/ EvtContextQueue_vtbl
{
  const char *(__thiscall *TSBaseArray<void *>::MemFileName)(struct EvtContextQueue *this);
  int (__thiscall *TSBaseArray<void *>::MemLineNo)(struct EvtContextQueue *this);
};

/* 2126 */
struct __cppobj TSList<EvtThread,TSGetLink<EvtThread> >
{
  int m_linkoffset;
  TSLink<EvtThread> m_terminator;
};

/* 2127 */
struct __cppobj TSBaseArray<SThread *>
{
  TSBaseArray<SThread *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  SThread **m_data;
};

/* 2128 */
struct /*VFT*/ TSBaseArray<SThread *>_vtbl
{
  const char *(__thiscall *TSBaseArray<SThread *>::MemFileName)(TSBaseArray<SThread *> *this);
  int (__thiscall *TSBaseArray<SThread *>::MemLineNo)(TSBaseArray<SThread *> *this);
};

/* 2129 */
struct __cppobj SThread : SSyncObject
{
};

/* 2130 */
struct /*VFT*/ TSFixedArray<SThread *>_vtbl
{
  const char *(__thiscall *TSBaseArray<SThread *>::MemFileName)(struct TSFixedArray<SThread *> *this);
  int (__thiscall *TSBaseArray<SThread *>::MemLineNo)(struct TSFixedArray<SThread *> *this);
};

/* 2131 */
struct __cppobj TSFixedArray<SThread *> : TSBaseArray<SThread *>
{
};

/* 2132 */
struct /*VFT*/ TSGrowableArray<SThread *>_vtbl
{
  const char *(__thiscall *TSBaseArray<SThread *>::MemFileName)(struct TSGrowableArray<SThread *> *this);
  int (__thiscall *TSBaseArray<SThread *>::MemLineNo)(struct TSGrowableArray<SThread *> *this);
};

/* 2133 */
struct __cppobj TSGrowableArray<SThread *> : TSFixedArray<SThread *>
{
  unsigned int m_chunk;
};

/* 2134 */
struct EVENT_DATA_IDLE
{
  float elapsedSec;
  unsigned int time;
};

/* 2135 */
struct __cppobj TSBaseArray<EvtContext *>
{
  TSBaseArray<EvtContext *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  EvtContext **m_data;
};

/* 2136 */
struct /*VFT*/ TSBaseArray<EvtContext *>_vtbl
{
  const char *(__thiscall *TSBaseArray<EvtContext *>::MemFileName)(TSBaseArray<EvtContext *> *this);
  int (__thiscall *TSBaseArray<EvtContext *>::MemLineNo)(TSBaseArray<EvtContext *> *this);
};

/* 2137 */
struct /*VFT*/ TSFixedArray<EvtContext *>_vtbl
{
  const char *(__thiscall *TSBaseArray<EvtContext *>::MemFileName)(struct TSFixedArray<EvtContext *> *this);
  int (__thiscall *TSBaseArray<EvtContext *>::MemLineNo)(struct TSFixedArray<EvtContext *> *this);
};

/* 2138 */
struct __cppobj TSFixedArray<EvtContext *> : TSBaseArray<EvtContext *>
{
};

/* 2139 */
struct /*VFT*/ TSGrowableArray<EvtContext *>_vtbl
{
  const char *(__thiscall *TSBaseArray<EvtContext *>::MemFileName)(struct TSGrowableArray<EvtContext *> *this);
  int (__thiscall *TSBaseArray<EvtContext *>::MemLineNo)(struct TSGrowableArray<EvtContext *> *this);
};

/* 2140 */
struct __cppobj TSGrowableArray<EvtContext *> : TSFixedArray<EvtContext *>
{
  unsigned int m_chunk;
};

/* 2141 */
struct __cppobj CSimpleButton : CSimpleFrame
{
  CObserver *m_observer;
  unsigned int m_observerEventId;
  CObserver *m_trackObserver;
  unsigned int m_trackEnterEventId;
  unsigned int m_trackExitEventId;
  CSimpleButtonState m_state;
  int m_stateLocked;
  unsigned int m_clickAction;
  CSimpleFontString *m_disabledText;
  CSimpleFontString *m_text;
  CSimpleFontString *m_highlightText;
  NTempest::C2Vector m_pressedOffset;
  CSimpleTexture *m_textures[3];
  CSimpleTexture *m_activeTexture;
  int m_onClick;
};

/* 2142 */
struct /*VFT*/ CSimpleButton_vtbl
{
  int (__thiscall *CSimpleButton::LookupScriptMethod)(CSimpleButton *this, struct lua_State *, const char *);
  const char *(__thiscall *GetName)(struct CSimpleButton *this);
  _BYTE gap8[4];
  void (__thiscall *CSimpleFrame::DelayedDelete)(struct CSimpleButton *this);
  void (__thiscall *CSimpleFrame::PreLoadXML)(struct CSimpleButton *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::LoadXML_Scripts)(struct CSimpleButton *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::PostLoadXML)(struct CSimpleButton *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::SetAlpha)(struct CSimpleButton *this, unsigned __int8);
  int (__thiscall *CSimpleFrame::FrameDefPostInitialize)(struct CSimpleButton *this, unsigned int, void *);
  int (__thiscall *CSimpleFrame::TestHitRect)(struct CSimpleButton *this, const NTempest::C2Vector *);
  void (__thiscall *CSimpleFrame::OnLayerShow)(struct CSimpleButton *this);
  void (__thiscall *CSimpleFrame::OnLayerHide)(struct CSimpleButton *this);
  void (__thiscall *CSimpleFrame::OnLayerUpdate)(struct CSimpleButton *this, float);
  int (__thiscall *CSimpleFrame::OnLayerTrackUpdate)(struct CSimpleButton *this, const CMouseEvent *);
  _BYTE gap38[4];
  void (__thiscall *CSimpleFrame::OnFrameRender)(struct CSimpleButton *this, CRenderBatch *, unsigned int);
  _BYTE gap40[4];
  void (__thiscall *CSimpleFrame::OnLayerCursorEnter)(struct CSimpleButton *this);
  void (__thiscall *CSimpleFrame::OnLayerCursorExit)(struct CSimpleButton *this);
  int (__thiscall *CSimpleFrame::OnLayerIme)(struct CSimpleButton *this, CImeEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDownRepeat)(struct CSimpleButton *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerChar)(struct CSimpleButton *this, CCharEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDown)(struct CSimpleButton *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyUp)(struct CSimpleButton *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseDown)(struct CSimpleButton *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseUp)(struct CSimpleButton *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseWheel)(struct CSimpleButton *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseMoveRelative)(struct CSimpleButton *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStart)(struct CSimpleButton *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStop)(struct CSimpleButton *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnReceiveDrag)(struct CSimpleButton *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::LockHighlight)(struct CSimpleButton *this, int);
  int (__thiscall *CSimpleFrame::HideThis)(struct CSimpleButton *this);
  int (__thiscall *CSimpleFrame::ShowThis)(struct CSimpleButton *this);
  void (__thiscall *CSimpleFrame::ClearChildrenFromSimpleRegistry)(struct CSimpleButton *this);
  void (__thiscall *CSimpleButton::Enable)(CSimpleButton *this, int);
  void (__thiscall *CSimpleButton::OnClick)(CSimpleButton *this, MOUSEBUTTON);
  void (__thiscall *CSimpleButton::SetButtonState)(CSimpleButton *this, CSimpleButtonState, int);
};

/* 2144 */
struct __cppobj TSLink<CSimpleHyperlinkButton>
{
  TSLink<CSimpleHyperlinkButton> *m_prevlink;
  CSimpleHyperlinkButton *m_next;
};

/* 2143 */
struct __cppobj CSimpleHyperlinkButton : CSimpleButton
{
  char *m_hyperlink;
  TSLink<CSimpleHyperlinkButton> m_link;
};

/* 2145 */
struct /*VFT*/ CSimpleHyperlinkButton_vtbl
{
  void (__thiscall *CSimpleHyperlinkButton::OnClick)(CSimpleHyperlinkButton *this, MOUSEBUTTON);
  const char *(__thiscall *GetName)(struct CSimpleHyperlinkButton *this);
  _BYTE gap8[4];
  void (__thiscall *CSimpleFrame::DelayedDelete)(struct CSimpleHyperlinkButton *this);
  void (__thiscall *CSimpleFrame::PreLoadXML)(struct CSimpleHyperlinkButton *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::LoadXML_Scripts)(struct CSimpleHyperlinkButton *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::PostLoadXML)(struct CSimpleHyperlinkButton *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::SetAlpha)(struct CSimpleHyperlinkButton *this, unsigned __int8);
  int (__thiscall *CSimpleFrame::FrameDefPostInitialize)(struct CSimpleHyperlinkButton *this, unsigned int, void *);
  int (__thiscall *CSimpleFrame::TestHitRect)(struct CSimpleHyperlinkButton *this, const NTempest::C2Vector *);
  void (__thiscall *CSimpleFrame::OnLayerShow)(struct CSimpleHyperlinkButton *this);
  void (__thiscall *CSimpleFrame::OnLayerHide)(struct CSimpleHyperlinkButton *this);
  void (__thiscall *CSimpleFrame::OnLayerUpdate)(struct CSimpleHyperlinkButton *this, float);
  int (__thiscall *CSimpleFrame::OnLayerTrackUpdate)(struct CSimpleHyperlinkButton *this, const CMouseEvent *);
  _BYTE gap38[4];
  void (__thiscall *CSimpleFrame::OnFrameRender)(struct CSimpleHyperlinkButton *this, CRenderBatch *, unsigned int);
  _BYTE gap40[4];
  void (__thiscall *CSimpleFrame::OnLayerCursorEnter)(struct CSimpleHyperlinkButton *this);
  void (__thiscall *CSimpleFrame::OnLayerCursorExit)(struct CSimpleHyperlinkButton *this);
  int (__thiscall *CSimpleFrame::OnLayerIme)(struct CSimpleHyperlinkButton *this, CImeEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDownRepeat)(struct CSimpleHyperlinkButton *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerChar)(struct CSimpleHyperlinkButton *this, CCharEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDown)(struct CSimpleHyperlinkButton *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyUp)(struct CSimpleHyperlinkButton *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseDown)(struct CSimpleHyperlinkButton *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseUp)(struct CSimpleHyperlinkButton *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseWheel)(struct CSimpleHyperlinkButton *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseMoveRelative)(struct CSimpleHyperlinkButton *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStart)(struct CSimpleHyperlinkButton *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStop)(struct CSimpleHyperlinkButton *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnReceiveDrag)(struct CSimpleHyperlinkButton *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::LockHighlight)(struct CSimpleHyperlinkButton *this, int);
  int (__thiscall *CSimpleFrame::HideThis)(struct CSimpleHyperlinkButton *this);
  int (__thiscall *CSimpleFrame::ShowThis)(struct CSimpleHyperlinkButton *this);
  void (__thiscall *CSimpleFrame::ClearChildrenFromSimpleRegistry)(struct CSimpleHyperlinkButton *this);
  void (__thiscall *CSimpleButton::Enable)(struct CSimpleHyperlinkButton *this, int);
  void (__thiscall *CSimpleButton::OnClick)(struct CSimpleHyperlinkButton *this, MOUSEBUTTON);
  void (__thiscall *CSimpleButton::SetButtonState)(struct CSimpleHyperlinkButton *this, CSimpleButtonState, int);
};

/* 2147 */
struct __cppobj TSList<CSimpleHyperlinkButton,TSGetExplicitLink<CSimpleHyperlinkButton> >
{
  int m_linkoffset;
  TSLink<CSimpleHyperlinkButton> m_terminator;
};

/* 2148 */
struct __cppobj TSExplicitList<CSimpleHyperlinkButton,760> : TSList<CSimpleHyperlinkButton,TSGetExplicitLink<CSimpleHyperlinkButton> >
{
};

/* 2146 */
struct __cppobj CSimpleHyperlinkedFrame : CSimpleFrame
{
  TSExplicitList<CSimpleHyperlinkButton,760> m_hyperlinkButtons;
  int m_onHyperlinkEnter;
  int m_onHyperlinkLeave;
  int m_onHyperlinkClick;
};

/* 2149 */
struct /*VFT*/ CSimpleHyperlinkedFrame_vtbl
{
  void (__thiscall *CSimpleHyperlinkedFrame::LoadXML_Scripts)(CSimpleHyperlinkedFrame *this, const XMLNode *, CStatus *);
  const char *(__thiscall *GetName)(struct CSimpleHyperlinkedFrame *this);
  _BYTE gap8[4];
  void (__thiscall *CSimpleFrame::DelayedDelete)(struct CSimpleHyperlinkedFrame *this);
  void (__thiscall *CSimpleFrame::PreLoadXML)(struct CSimpleHyperlinkedFrame *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::LoadXML_Scripts)(struct CSimpleHyperlinkedFrame *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::PostLoadXML)(struct CSimpleHyperlinkedFrame *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::SetAlpha)(struct CSimpleHyperlinkedFrame *this, unsigned __int8);
  int (__thiscall *CSimpleFrame::FrameDefPostInitialize)(struct CSimpleHyperlinkedFrame *this, unsigned int, void *);
  int (__thiscall *CSimpleFrame::TestHitRect)(struct CSimpleHyperlinkedFrame *this, const NTempest::C2Vector *);
  void (__thiscall *CSimpleFrame::OnLayerShow)(struct CSimpleHyperlinkedFrame *this);
  void (__thiscall *CSimpleFrame::OnLayerHide)(struct CSimpleHyperlinkedFrame *this);
  void (__thiscall *CSimpleFrame::OnLayerUpdate)(struct CSimpleHyperlinkedFrame *this, float);
  int (__thiscall *CSimpleFrame::OnLayerTrackUpdate)(struct CSimpleHyperlinkedFrame *this, const CMouseEvent *);
  _BYTE gap38[4];
  void (__thiscall *CSimpleFrame::OnFrameRender)(struct CSimpleHyperlinkedFrame *this, CRenderBatch *, unsigned int);
  _BYTE gap40[4];
  void (__thiscall *CSimpleFrame::OnLayerCursorEnter)(struct CSimpleHyperlinkedFrame *this);
  void (__thiscall *CSimpleFrame::OnLayerCursorExit)(struct CSimpleHyperlinkedFrame *this);
  int (__thiscall *CSimpleFrame::OnLayerIme)(struct CSimpleHyperlinkedFrame *this, CImeEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDownRepeat)(struct CSimpleHyperlinkedFrame *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerChar)(struct CSimpleHyperlinkedFrame *this, CCharEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDown)(struct CSimpleHyperlinkedFrame *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyUp)(struct CSimpleHyperlinkedFrame *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseDown)(struct CSimpleHyperlinkedFrame *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseUp)(struct CSimpleHyperlinkedFrame *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseWheel)(struct CSimpleHyperlinkedFrame *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseMoveRelative)(struct CSimpleHyperlinkedFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStart)(struct CSimpleHyperlinkedFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStop)(struct CSimpleHyperlinkedFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnReceiveDrag)(struct CSimpleHyperlinkedFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::LockHighlight)(struct CSimpleHyperlinkedFrame *this, int);
  int (__thiscall *CSimpleFrame::HideThis)(struct CSimpleHyperlinkedFrame *this);
  int (__thiscall *CSimpleFrame::ShowThis)(struct CSimpleHyperlinkedFrame *this);
  void (__thiscall *CSimpleFrame::ClearChildrenFromSimpleRegistry)(struct CSimpleHyperlinkedFrame *this);
  void (__thiscall *CSimpleHyperlinkedFrame::OnHyperlinkEnter)(CSimpleHyperlinkedFrame *this, const char *);
  void (__thiscall *CSimpleHyperlinkedFrame::OnHyperlinkLeave)(CSimpleHyperlinkedFrame *this, const char *);
  void (__thiscall *CSimpleHyperlinkedFrame::OnHyperlinkClick)(CSimpleHyperlinkedFrame *this, const char *, MOUSEBUTTON);
};

/* 2150 */
struct __cppobj CFramePointRelative : CFramePoint
{
  CLayoutFrame *m_relative;
  FRAMEPOINT m_framePoint;
  NTempest::C2Vector m_offset;
};

/* 2151 */
struct /*VFT*/ CFramePointRelative_vtbl
{
  void (__thiscall *~CFramePointRelative)(CFramePointRelative *this);
  float (__thiscall *X)(struct CFramePointRelative *this, float);
  float (__thiscall *Y)(struct CFramePointRelative *this, float);
  CLayoutFrame *(__thiscall *CFramePoint::GetRelative)(struct CFramePointRelative *this);
};

/* 2152 */
struct __cppobj TSLink<FrameScriptObject_Variable>
{
  TSLink<FrameScriptObject_Variable> *m_prevlink;
  FrameScriptObject_Variable *m_next;
};

/* 2153 */
struct __cppobj TSHashObject<FrameScriptObject_Variable,HASHKEY_STR>
{
  unsigned int m_hashval;
  __unaligned __declspec(align(1)) TSLink<FrameScriptObject_Variable> m_linktoslot;
  __unaligned __declspec(align(1)) TSLink<FrameScriptObject_Variable> m_linktofull;
  HASHKEY_STR m_key;
};

/* 2154 */
struct __cppobj __unaligned __declspec(align(4)) FrameScriptObject_Variable : TSHashObject<FrameScriptObject_Variable,HASHKEY_STR>
{
  int reference;
};

/* 2155 */
struct __cppobj TSList<FrameScriptObject_Variable,TSGetExplicitLink<FrameScriptObject_Variable> >
{
  int m_linkoffset;
  TSLink<FrameScriptObject_Variable> m_terminator;
};

/* 2156 */
struct __cppobj TSExplicitList<FrameScriptObject_Variable,-572662307> : TSList<FrameScriptObject_Variable,TSGetExplicitLink<FrameScriptObject_Variable> >
{
};

/* 2157 */
struct __cppobj TSBaseArray<TSExplicitList<FrameScriptObject_Variable,-572662307> >
{
  TSBaseArray<TSExplicitList<FrameScriptObject_Variable,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<FrameScriptObject_Variable,-572662307> *m_data;
};

/* 2158 */
struct /*VFT*/ TSBaseArray<TSExplicitList<FrameScriptObject_Variable,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<FrameScriptObject_Variable,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<FrameScriptObject_Variable,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<FrameScriptObject_Variable,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<FrameScriptObject_Variable,-572662307> > *this);
};

/* 2159 */
struct /*VFT*/ TSFixedArray<TSExplicitList<FrameScriptObject_Variable,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<FrameScriptObject_Variable,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<FrameScriptObject_Variable,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<FrameScriptObject_Variable,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<FrameScriptObject_Variable,-572662307> > *this);
};

/* 2160 */
struct __cppobj TSFixedArray<TSExplicitList<FrameScriptObject_Variable,-572662307> > : TSBaseArray<TSExplicitList<FrameScriptObject_Variable,-572662307> >
{
};

/* 2161 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<FrameScriptObject_Variable,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<FrameScriptObject_Variable,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<FrameScriptObject_Variable,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<FrameScriptObject_Variable,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<FrameScriptObject_Variable,-572662307> > *this);
};

/* 2162 */
struct __cppobj TSGrowableArray<TSExplicitList<FrameScriptObject_Variable,-572662307> > : TSFixedArray<TSExplicitList<FrameScriptObject_Variable,-572662307> >
{
  unsigned int m_chunk;
};

/* 2163 */
struct __cppobj TSHashTable<FrameScriptObject_Variable,HASHKEY_STR>
{
  TSHashTable<FrameScriptObject_Variable,HASHKEY_STR>_vtbl *__vftable /*VFT*/;
  TSExplicitList<FrameScriptObject_Variable,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<FrameScriptObject_Variable,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 2164 */
struct /*VFT*/ TSHashTable<FrameScriptObject_Variable,HASHKEY_STR>_vtbl
{
  void (__thiscall *TSHashTable<FrameScriptObject_Variable,HASHKEY_STR>::InternalDelete)(TSHashTable<FrameScriptObject_Variable,HASHKEY_STR> *this, FrameScriptObject_Variable *);
  FrameScriptObject_Variable *(__thiscall *TSHashTable<FrameScriptObject_Variable,HASHKEY_STR>::InternalNew)(TSHashTable<FrameScriptObject_Variable,HASHKEY_STR> *this, TSExplicitList<FrameScriptObject_Variable,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<FrameScriptObject_Variable,HASHKEY_STR>)(TSHashTable<FrameScriptObject_Variable,HASHKEY_STR> *this);
  void (__thiscall *TSHashTable<FrameScriptObject_Variable,HASHKEY_STR>::Destroy)(TSHashTable<FrameScriptObject_Variable,HASHKEY_STR> *this);
};

/* 2165 */
struct FrameScript_Method
{
  const char *name;
  int (__fastcall *method)(struct lua_State *);
};

/* 2166 */
struct __cppobj NTempest::CArgb4444
{
  unsigned __int16 b : 4;
  unsigned __int16 g : 4;
  unsigned __int16 r : 4;
  unsigned __int16 a : 4;
};

/* 2167 */
struct __cppobj NTempest::CArgb1555
{
  unsigned __int16 b : 5;
  unsigned __int16 g : 5;
  unsigned __int16 r : 5;
  unsigned __int16 a : 1;
};

/* 2168 */
struct __cppobj NTempest::CRgb565
{
  unsigned __int16 b : 5;
  unsigned __int16 g : 6;
  unsigned __int16 r : 5;
};

/* 2169 */
struct $7AC9310D6508BCEBBFA606433F60AC9C
{
  CSimpleButtonState state;
  const char *string;
};

/* 2170 */
struct __cppobj CSimpleCheckbox : CSimpleButton
{
  int m_checked;
  CSimpleTexture *m_checkedTexture;
  CSimpleTexture *m_disabledTexture;
};

/* 2171 */
struct /*VFT*/ CSimpleCheckbox_vtbl
{
  int (__thiscall *CSimpleCheckbox::LookupScriptMethod)(CSimpleCheckbox *this, struct lua_State *, const char *);
  const char *(__thiscall *GetName)(struct CSimpleCheckbox *this);
  _BYTE gap8[4];
  void (__thiscall *CSimpleFrame::DelayedDelete)(struct CSimpleCheckbox *this);
  void (__thiscall *CSimpleFrame::PreLoadXML)(struct CSimpleCheckbox *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::LoadXML_Scripts)(struct CSimpleCheckbox *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::PostLoadXML)(struct CSimpleCheckbox *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::SetAlpha)(struct CSimpleCheckbox *this, unsigned __int8);
  int (__thiscall *CSimpleFrame::FrameDefPostInitialize)(struct CSimpleCheckbox *this, unsigned int, void *);
  int (__thiscall *CSimpleFrame::TestHitRect)(struct CSimpleCheckbox *this, const NTempest::C2Vector *);
  void (__thiscall *CSimpleFrame::OnLayerShow)(struct CSimpleCheckbox *this);
  void (__thiscall *CSimpleFrame::OnLayerHide)(struct CSimpleCheckbox *this);
  void (__thiscall *CSimpleFrame::OnLayerUpdate)(struct CSimpleCheckbox *this, float);
  int (__thiscall *CSimpleFrame::OnLayerTrackUpdate)(struct CSimpleCheckbox *this, const CMouseEvent *);
  _BYTE gap38[4];
  void (__thiscall *CSimpleFrame::OnFrameRender)(struct CSimpleCheckbox *this, CRenderBatch *, unsigned int);
  _BYTE gap40[4];
  void (__thiscall *CSimpleFrame::OnLayerCursorEnter)(struct CSimpleCheckbox *this);
  void (__thiscall *CSimpleFrame::OnLayerCursorExit)(struct CSimpleCheckbox *this);
  int (__thiscall *CSimpleFrame::OnLayerIme)(struct CSimpleCheckbox *this, CImeEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDownRepeat)(struct CSimpleCheckbox *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerChar)(struct CSimpleCheckbox *this, CCharEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDown)(struct CSimpleCheckbox *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyUp)(struct CSimpleCheckbox *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseDown)(struct CSimpleCheckbox *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseUp)(struct CSimpleCheckbox *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseWheel)(struct CSimpleCheckbox *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseMoveRelative)(struct CSimpleCheckbox *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStart)(struct CSimpleCheckbox *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStop)(struct CSimpleCheckbox *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnReceiveDrag)(struct CSimpleCheckbox *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::LockHighlight)(struct CSimpleCheckbox *this, int);
  int (__thiscall *CSimpleFrame::HideThis)(struct CSimpleCheckbox *this);
  int (__thiscall *CSimpleFrame::ShowThis)(struct CSimpleCheckbox *this);
  void (__thiscall *CSimpleFrame::ClearChildrenFromSimpleRegistry)(struct CSimpleCheckbox *this);
  void (__thiscall *CSimpleButton::Enable)(struct CSimpleCheckbox *this, int);
  void (__thiscall *CSimpleButton::OnClick)(struct CSimpleCheckbox *this, MOUSEBUTTON);
  void (__thiscall *CSimpleButton::SetButtonState)(struct CSimpleCheckbox *this, CSimpleButtonState, int);
};

/* 2173 */
struct __cppobj TSBaseArray<char *>
{
  TSBaseArray<char *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  char **m_data;
};

/* 2176 */
struct __cppobj TSFixedArray<char *> : TSBaseArray<char *>
{
};

/* 2177 */
struct $BED5E61D5A68E602DFC040C1CC6DB484
{
  unsigned int id;
  CObserver *obj;
};

/* 2172 */
struct __cppobj CSimpleEditBox : CSimpleFrame
{
  unsigned int m_dirtyFlags;
  CSimpleFontString *m_string;
  char *m_text;
  unsigned int *m_textInfo;
  char *m_textHidden;
  int m_textLength;
  int m_textLengthMax;
  int m_textLettersMax;
  int m_textSize;
  int m_visiblePos;
  int m_visibleLen;
  CSimpleTexture *m_highlight[3];
  int m_highlightLeft;
  int m_highlightRight;
  int m_highlightDrag;
  CSimpleTexture *m_cursor;
  int m_cursorPos;
  float m_cursorBlinkSpeed;
  float m_blinkElapsedTime;
  int m_password;
  int m_multiline;
  TSGrowableArray<unsigned int> m_visibleLines;
  int m_autoFocus;
  int m_numHistory;
  int m_curHistory;
  TSFixedArray<char *> m_history;
  $BED5E61D5A68E602DFC040C1CC6DB484 m_actions[6];
  int m_imeInputMode;
  CSimpleTexture *m_clauseHighlight;
  int m_clauseLeft;
  int m_clauseRight;
  CSimpleMessageFrame *m_candidatesFrame;
  CSimpleTexture *m_candidatesHighlight;
  NTempest::CRect m_editTextInset;
  int m_onEnterPressed;
  int m_onEscapePressed;
  int m_onSpacePressed;
  int m_onTabPressed;
  int m_onTextChanged;
  int m_onTextSet;
};

/* 2174 */
struct /*VFT*/ TSBaseArray<char *>_vtbl
{
  const char *(__thiscall *TSBaseArray<char *>::MemFileName)(TSBaseArray<char *> *this);
  int (__thiscall *TSBaseArray<char *>::MemLineNo)(TSBaseArray<char *> *this);
};

/* 2179 */
struct __cppobj CSimpleFontStringAttributes
{
  int m_flags;
  RCString m_font;
  float m_fontHeight;
  unsigned int m_fontFlags;
  float m_spacing;
  unsigned int m_styleFlags;
  NTempest::CImVector m_color;
  NTempest::CImVector m_shadowColor;
  NTempest::C2Vector m_shadowOffset;
};

/* 2180 */
struct __cppobj TSBaseArray<MessageData>
{
  TSBaseArray<MessageData>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  MessageData *m_data;
};

/* 2184 */
struct __cppobj TSFixedArray<MessageData> : TSBaseArray<MessageData>
{
};

/* 2186 */
struct __cppobj TSGrowableArray<MessageData> : TSFixedArray<MessageData>
{
  unsigned int m_chunk;
};

/* 2187 */
struct __cppobj TSBaseArray<CSimpleMessageFrameLine>
{
  TSBaseArray<CSimpleMessageFrameLine>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CSimpleMessageFrameLine *m_data;
};

/* 2193 */
struct __cppobj TSFixedArray<CSimpleMessageFrameLine> : TSBaseArray<CSimpleMessageFrameLine>
{
};

/* 2195 */
struct __cppobj TSGrowableArray<CSimpleMessageFrameLine> : TSFixedArray<CSimpleMessageFrameLine>
{
  unsigned int m_chunk;
};

/* 2178 */
struct __cppobj CSimpleMessageFrame : CSimpleFrame
{
  unsigned int m_rows;
  unsigned int m_numVisible;
  NTempest::CRect m_messageFrameArea;
  NTempest::CRect m_messageFrameInset;
  int m_textMaxSize;
  CSimpleFontStringAttributes m_attrib;
  float m_fadeDuration;
  CSimpleMessageFrame::SimpleMessageFrameInsertMode m_insertMode;
  TSGrowableArray<MessageData> m_pendingMessages;
  TSGrowableArray<CSimpleMessageFrameLine> m_lines;
};

/* 2181 */
struct /*VFT*/ TSBaseArray<MessageData>_vtbl
{
  const char *(__thiscall *TSBaseArray<MessageData>::MemFileName)(TSBaseArray<MessageData> *this);
  int (__thiscall *TSBaseArray<MessageData>::MemLineNo)(TSBaseArray<MessageData> *this);
};

/* 2182 */
struct __cppobj MessageData
{
  char *text;
  NTempest::CImVector color;
  float timeVisible;
  int permanent;
};

/* 2188 */
struct /*VFT*/ TSBaseArray<CSimpleMessageFrameLine>_vtbl
{
  const char *(__thiscall *TSBaseArray<CSimpleMessageFrameLine>::MemFileName)(TSBaseArray<CSimpleMessageFrameLine> *this);
  int (__thiscall *TSBaseArray<CSimpleMessageFrameLine>::MemLineNo)(TSBaseArray<CSimpleMessageFrameLine> *this);
};

/* 2191 */
struct __cppobj CSimpleMessageFrameLine
{
  float offsetX;
  float offsetY;
  CSimpleMessageFrameLineNode *stringNode;
};

/* 2189 */
struct __cppobj CSimpleMessageFrameLineNode : TRefCnt
{
  NTempest::CImVector color;
  CSimpleFontString *string;
  float timeLeft;
  float fadeLeft;
  __int32 permanent : 1;
  __int32 isVisible : 1;
};

/* 2175 */
struct /*VFT*/ TSFixedArray<char *>_vtbl
{
  const char *(__thiscall *TSBaseArray<char *>::MemFileName)(struct TSFixedArray<char *> *this);
  int (__thiscall *TSBaseArray<char *>::MemLineNo)(struct TSFixedArray<char *> *this);
};

/* 2183 */
struct /*VFT*/ TSFixedArray<MessageData>_vtbl
{
  const char *(__thiscall *TSBaseArray<MessageData>::MemFileName)(struct TSFixedArray<MessageData> *this);
  int (__thiscall *TSBaseArray<MessageData>::MemLineNo)(struct TSFixedArray<MessageData> *this);
};

/* 2185 */
struct /*VFT*/ TSGrowableArray<MessageData>_vtbl
{
  const char *(__thiscall *TSBaseArray<MessageData>::MemFileName)(struct TSGrowableArray<MessageData> *this);
  int (__thiscall *TSBaseArray<MessageData>::MemLineNo)(struct TSGrowableArray<MessageData> *this);
};

/* 2190 */
struct /*VFT*/ CSimpleMessageFrameLineNode_vtbl
{
  void (__thiscall *CSimpleMessageFrameLineNode::~CSimpleMessageFrameLineNode)(CSimpleMessageFrameLineNode *this);
  void (__thiscall *~CSimpleMessageFrameLineNode)(struct CSimpleMessageFrameLineNode *this);
};

/* 2192 */
struct /*VFT*/ TSFixedArray<CSimpleMessageFrameLine>_vtbl
{
  const char *(__thiscall *TSBaseArray<CSimpleMessageFrameLine>::MemFileName)(struct TSFixedArray<CSimpleMessageFrameLine> *this);
  int (__thiscall *TSBaseArray<CSimpleMessageFrameLine>::MemLineNo)(struct TSFixedArray<CSimpleMessageFrameLine> *this);
};

/* 2194 */
struct /*VFT*/ TSGrowableArray<CSimpleMessageFrameLine>_vtbl
{
  const char *(__thiscall *TSBaseArray<CSimpleMessageFrameLine>::MemFileName)(struct TSGrowableArray<CSimpleMessageFrameLine> *this);
  int (__thiscall *TSBaseArray<CSimpleMessageFrameLine>::MemLineNo)(struct TSGrowableArray<CSimpleMessageFrameLine> *this);
};

/* 2196 */
struct /*VFT*/ CSimpleMessageFrame_vtbl
{
  int (__thiscall *CSimpleMessageFrame::LookupScriptMethod)(CSimpleMessageFrame *this, struct lua_State *, const char *);
  const char *(__thiscall *GetName)(struct CSimpleMessageFrame *this);
  _BYTE gap8[4];
  void (__thiscall *CSimpleFrame::DelayedDelete)(struct CSimpleMessageFrame *this);
  void (__thiscall *CSimpleFrame::PreLoadXML)(struct CSimpleMessageFrame *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::LoadXML_Scripts)(struct CSimpleMessageFrame *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::PostLoadXML)(struct CSimpleMessageFrame *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::SetAlpha)(struct CSimpleMessageFrame *this, unsigned __int8);
  int (__thiscall *CSimpleFrame::FrameDefPostInitialize)(struct CSimpleMessageFrame *this, unsigned int, void *);
  int (__thiscall *CSimpleFrame::TestHitRect)(struct CSimpleMessageFrame *this, const NTempest::C2Vector *);
  void (__thiscall *CSimpleFrame::OnLayerShow)(struct CSimpleMessageFrame *this);
  void (__thiscall *CSimpleFrame::OnLayerHide)(struct CSimpleMessageFrame *this);
  void (__thiscall *CSimpleFrame::OnLayerUpdate)(struct CSimpleMessageFrame *this, float);
  int (__thiscall *CSimpleFrame::OnLayerTrackUpdate)(struct CSimpleMessageFrame *this, const CMouseEvent *);
  _BYTE gap38[4];
  void (__thiscall *CSimpleFrame::OnFrameRender)(struct CSimpleMessageFrame *this, CRenderBatch *, unsigned int);
  _BYTE gap40[4];
  void (__thiscall *CSimpleFrame::OnLayerCursorEnter)(struct CSimpleMessageFrame *this);
  void (__thiscall *CSimpleFrame::OnLayerCursorExit)(struct CSimpleMessageFrame *this);
  int (__thiscall *CSimpleFrame::OnLayerIme)(struct CSimpleMessageFrame *this, CImeEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDownRepeat)(struct CSimpleMessageFrame *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerChar)(struct CSimpleMessageFrame *this, CCharEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDown)(struct CSimpleMessageFrame *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyUp)(struct CSimpleMessageFrame *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseDown)(struct CSimpleMessageFrame *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseUp)(struct CSimpleMessageFrame *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseWheel)(struct CSimpleMessageFrame *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseMoveRelative)(struct CSimpleMessageFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStart)(struct CSimpleMessageFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStop)(struct CSimpleMessageFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnReceiveDrag)(struct CSimpleMessageFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::LockHighlight)(struct CSimpleMessageFrame *this, int);
  int (__thiscall *CSimpleFrame::HideThis)(struct CSimpleMessageFrame *this);
  int (__thiscall *CSimpleFrame::ShowThis)(struct CSimpleMessageFrame *this);
  void (__thiscall *CSimpleFrame::ClearChildrenFromSimpleRegistry)(struct CSimpleMessageFrame *this);
  void (__thiscall *CSimpleMessageFrame::AddMessage)(CSimpleMessageFrame *this, const char *, const NTempest::CImVector *, float, int);
};

/* 2197 */
struct /*VFT*/ CSimpleEditBox_vtbl
{
  int (__thiscall *CSimpleEditBox::LookupScriptMethod)(CSimpleEditBox *this, struct lua_State *, const char *);
  const char *(__thiscall *GetName)(struct CSimpleEditBox *this);
  _BYTE gap8[4];
  void (__thiscall *CSimpleFrame::DelayedDelete)(struct CSimpleEditBox *this);
  void (__thiscall *CSimpleFrame::PreLoadXML)(struct CSimpleEditBox *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::LoadXML_Scripts)(struct CSimpleEditBox *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::PostLoadXML)(struct CSimpleEditBox *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::SetAlpha)(struct CSimpleEditBox *this, unsigned __int8);
  int (__thiscall *CSimpleFrame::FrameDefPostInitialize)(struct CSimpleEditBox *this, unsigned int, void *);
  int (__thiscall *CSimpleFrame::TestHitRect)(struct CSimpleEditBox *this, const NTempest::C2Vector *);
  void (__thiscall *CSimpleFrame::OnLayerShow)(struct CSimpleEditBox *this);
  void (__thiscall *CSimpleFrame::OnLayerHide)(struct CSimpleEditBox *this);
  void (__thiscall *CSimpleFrame::OnLayerUpdate)(struct CSimpleEditBox *this, float);
  int (__thiscall *CSimpleFrame::OnLayerTrackUpdate)(struct CSimpleEditBox *this, const CMouseEvent *);
  _BYTE gap38[4];
  void (__thiscall *CSimpleFrame::OnFrameRender)(struct CSimpleEditBox *this, CRenderBatch *, unsigned int);
  _BYTE gap40[4];
  void (__thiscall *CSimpleFrame::OnLayerCursorEnter)(struct CSimpleEditBox *this);
  void (__thiscall *CSimpleFrame::OnLayerCursorExit)(struct CSimpleEditBox *this);
  int (__thiscall *CSimpleFrame::OnLayerIme)(struct CSimpleEditBox *this, CImeEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDownRepeat)(struct CSimpleEditBox *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerChar)(struct CSimpleEditBox *this, CCharEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDown)(struct CSimpleEditBox *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyUp)(struct CSimpleEditBox *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseDown)(struct CSimpleEditBox *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseUp)(struct CSimpleEditBox *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseWheel)(struct CSimpleEditBox *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseMoveRelative)(struct CSimpleEditBox *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStart)(struct CSimpleEditBox *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStop)(struct CSimpleEditBox *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnReceiveDrag)(struct CSimpleEditBox *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::LockHighlight)(struct CSimpleEditBox *this, int);
  int (__thiscall *CSimpleFrame::HideThis)(struct CSimpleEditBox *this);
  int (__thiscall *CSimpleFrame::ShowThis)(struct CSimpleEditBox *this);
  void (__thiscall *CSimpleFrame::ClearChildrenFromSimpleRegistry)(struct CSimpleEditBox *this);
};

/* 2198 */
struct __cppobj CSimpleHTML : CSimpleHyperlinkedFrame
{
  TSList<REGIONNODE,TSGetLink<REGIONNODE> > m_content;
  CLayoutFrame *m_layoutAnchor;
  float m_layoutOffset;
  CSimpleFontStringAttributes m_attrib[4];
  TSExplicitList<CSimpleHyperlinkButton,760> m_hyperlinks;
};

/* 2199 */
struct /*VFT*/ CSimpleHTML_vtbl
{
  int (__thiscall *CSimpleHTML::LookupScriptMethod)(CSimpleHTML *this, struct lua_State *, const char *);
  const char *(__thiscall *GetName)(struct CSimpleHTML *this);
  _BYTE gap8[4];
  void (__thiscall *CSimpleFrame::DelayedDelete)(struct CSimpleHTML *this);
  void (__thiscall *CSimpleFrame::PreLoadXML)(struct CSimpleHTML *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::LoadXML_Scripts)(struct CSimpleHTML *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::PostLoadXML)(struct CSimpleHTML *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::SetAlpha)(struct CSimpleHTML *this, unsigned __int8);
  int (__thiscall *CSimpleFrame::FrameDefPostInitialize)(struct CSimpleHTML *this, unsigned int, void *);
  int (__thiscall *CSimpleFrame::TestHitRect)(struct CSimpleHTML *this, const NTempest::C2Vector *);
  void (__thiscall *CSimpleFrame::OnLayerShow)(struct CSimpleHTML *this);
  void (__thiscall *CSimpleFrame::OnLayerHide)(struct CSimpleHTML *this);
  void (__thiscall *CSimpleFrame::OnLayerUpdate)(struct CSimpleHTML *this, float);
  int (__thiscall *CSimpleFrame::OnLayerTrackUpdate)(struct CSimpleHTML *this, const CMouseEvent *);
  _BYTE gap38[4];
  void (__thiscall *CSimpleFrame::OnFrameRender)(struct CSimpleHTML *this, CRenderBatch *, unsigned int);
  _BYTE gap40[4];
  void (__thiscall *CSimpleFrame::OnLayerCursorEnter)(struct CSimpleHTML *this);
  void (__thiscall *CSimpleFrame::OnLayerCursorExit)(struct CSimpleHTML *this);
  int (__thiscall *CSimpleFrame::OnLayerIme)(struct CSimpleHTML *this, CImeEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDownRepeat)(struct CSimpleHTML *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerChar)(struct CSimpleHTML *this, CCharEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDown)(struct CSimpleHTML *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyUp)(struct CSimpleHTML *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseDown)(struct CSimpleHTML *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseUp)(struct CSimpleHTML *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseWheel)(struct CSimpleHTML *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseMoveRelative)(struct CSimpleHTML *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStart)(struct CSimpleHTML *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStop)(struct CSimpleHTML *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnReceiveDrag)(struct CSimpleHTML *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::LockHighlight)(struct CSimpleHTML *this, int);
  int (__thiscall *CSimpleFrame::HideThis)(struct CSimpleHTML *this);
  int (__thiscall *CSimpleFrame::ShowThis)(struct CSimpleHTML *this);
  void (__thiscall *CSimpleFrame::ClearChildrenFromSimpleRegistry)(struct CSimpleHTML *this);
  void (__thiscall *CSimpleHyperlinkedFrame::OnHyperlinkEnter)(struct CSimpleHTML *this, const char *);
  void (__thiscall *CSimpleHyperlinkedFrame::OnHyperlinkLeave)(struct CSimpleHTML *this, const char *);
  void (__thiscall *CSimpleHyperlinkedFrame::OnHyperlinkClick)(struct CSimpleHTML *this, const char *, MOUSEBUTTON);
};

/* 2201 */
struct __cppobj TSBaseArray<CSimpleMessageScrollFrameLine>
{
  TSBaseArray<CSimpleMessageScrollFrameLine>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CSimpleMessageScrollFrameLine *m_data;
};

/* 2205 */
struct __cppobj TSFixedArray<CSimpleMessageScrollFrameLine> : TSBaseArray<CSimpleMessageScrollFrameLine>
{
};

/* 2207 */
struct __cppobj TSGrowableArray<CSimpleMessageScrollFrameLine> : TSFixedArray<CSimpleMessageScrollFrameLine>
{
  unsigned int m_chunk;
};

/* 2208 */
struct __cppobj TSBaseArray<CSimpleMessageScrollFrameDisplayNode>
{
  TSBaseArray<CSimpleMessageScrollFrameDisplayNode>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CSimpleMessageScrollFrameDisplayNode *m_data;
};

/* 2215 */
struct __cppobj TSFixedArray<CSimpleMessageScrollFrameDisplayNode> : TSBaseArray<CSimpleMessageScrollFrameDisplayNode>
{
};

/* 2217 */
struct __cppobj TSGrowableArray<CSimpleMessageScrollFrameDisplayNode> : TSFixedArray<CSimpleMessageScrollFrameDisplayNode>
{
  unsigned int m_chunk;
};

/* 2200 */
struct __cppobj CSimpleMessageScrollFrame : CSimpleHyperlinkedFrame
{
  int m_numMessages;
  int m_maxMessages;
  int m_currentLine;
  int m_currentScroll;
  int m_numDisplayed;
  int m_atTop;
  int m_atBottom;
  int m_textMaxSize;
  CSimpleFontStringAttributes m_attrib;
  int m_fading;
  float m_fadeDuration;
  float m_timeVisible;
  NTempest::CRect m_messageFrameArea;
  NTempest::CRect m_messageFrameInset;
  TSGrowableArray<CSimpleMessageScrollFrameLine> m_lines;
  TSGrowableArray<CSimpleMessageScrollFrameDisplayNode> m_displayNodes;
  TSExplicitList<CSimpleHyperlinkButton,760> m_hyperlinks;
};

/* 2202 */
struct /*VFT*/ TSBaseArray<CSimpleMessageScrollFrameLine>_vtbl
{
  const char *(__thiscall *TSBaseArray<CSimpleMessageScrollFrameLine>::MemFileName)(TSBaseArray<CSimpleMessageScrollFrameLine> *this);
  int (__thiscall *TSBaseArray<CSimpleMessageScrollFrameLine>::MemLineNo)(TSBaseArray<CSimpleMessageScrollFrameLine> *this);
};

/* 2203 */
struct __cppobj CSimpleMessageScrollFrameLine
{
  char *string;
  CSimpleFontStringAttributes attrib;
  int isVisible;
  float timeLeft;
  float fadeLeft;
};

/* 2209 */
struct /*VFT*/ TSBaseArray<CSimpleMessageScrollFrameDisplayNode>_vtbl
{
  const char *(__thiscall *TSBaseArray<CSimpleMessageScrollFrameDisplayNode>::MemFileName)(TSBaseArray<CSimpleMessageScrollFrameDisplayNode> *this);
  int (__thiscall *TSBaseArray<CSimpleMessageScrollFrameDisplayNode>::MemLineNo)(TSBaseArray<CSimpleMessageScrollFrameDisplayNode> *this);
};

/* 2210 */
struct __cppobj CSimpleMessageScrollFrameDisplayNode : TRefCnt
{
  CSimpleFontStringRecord *string;
  CSimpleMessageScrollFrameLine *line;
  CSimpleFontStringAttributes attrib;
};

/* 2211 */
struct __cppobj CSimpleFontStringRecord : CSimpleFontString, TRefCnt
{
};

/* 2204 */
struct /*VFT*/ TSFixedArray<CSimpleMessageScrollFrameLine>_vtbl
{
  const char *(__thiscall *TSBaseArray<CSimpleMessageScrollFrameLine>::MemFileName)(struct TSFixedArray<CSimpleMessageScrollFrameLine> *this);
  int (__thiscall *TSBaseArray<CSimpleMessageScrollFrameLine>::MemLineNo)(struct TSFixedArray<CSimpleMessageScrollFrameLine> *this);
};

/* 2206 */
struct /*VFT*/ TSGrowableArray<CSimpleMessageScrollFrameLine>_vtbl
{
  const char *(__thiscall *TSBaseArray<CSimpleMessageScrollFrameLine>::MemFileName)(struct TSGrowableArray<CSimpleMessageScrollFrameLine> *this);
  int (__thiscall *TSBaseArray<CSimpleMessageScrollFrameLine>::MemLineNo)(struct TSGrowableArray<CSimpleMessageScrollFrameLine> *this);
};

/* 2212 */
struct /*VFT*/ CSimpleFontStringRecord_vtbl
{
  void (__thiscall *~CSimpleFontStringRecord)(CSimpleFontStringRecord *this);
  const char *(__thiscall *GetName)(struct CSimpleFontStringRecord *this);
};

/* 2213 */
struct /*VFT*/ CSimpleMessageScrollFrameDisplayNode_vtbl
{
  void (__thiscall *CSimpleMessageScrollFrameDisplayNode::~CSimpleMessageScrollFrameDisplayNode)(CSimpleMessageScrollFrameDisplayNode *this);
  void (__thiscall *~CSimpleMessageScrollFrameDisplayNode)(struct CSimpleMessageScrollFrameDisplayNode *this);
};

/* 2214 */
struct /*VFT*/ TSFixedArray<CSimpleMessageScrollFrameDisplayNode>_vtbl
{
  const char *(__thiscall *TSBaseArray<CSimpleMessageScrollFrameDisplayNode>::MemFileName)(struct TSFixedArray<CSimpleMessageScrollFrameDisplayNode> *this);
  int (__thiscall *TSBaseArray<CSimpleMessageScrollFrameDisplayNode>::MemLineNo)(struct TSFixedArray<CSimpleMessageScrollFrameDisplayNode> *this);
};

/* 2216 */
struct /*VFT*/ TSGrowableArray<CSimpleMessageScrollFrameDisplayNode>_vtbl
{
  const char *(__thiscall *TSBaseArray<CSimpleMessageScrollFrameDisplayNode>::MemFileName)(struct TSGrowableArray<CSimpleMessageScrollFrameDisplayNode> *this);
  int (__thiscall *TSBaseArray<CSimpleMessageScrollFrameDisplayNode>::MemLineNo)(struct TSGrowableArray<CSimpleMessageScrollFrameDisplayNode> *this);
};

/* 2218 */
struct /*VFT*/ CSimpleMessageScrollFrame_vtbl
{
  int (__thiscall *CSimpleMessageScrollFrame::LookupScriptMethod)(CSimpleMessageScrollFrame *this, struct lua_State *, const char *);
  const char *(__thiscall *GetName)(struct CSimpleMessageScrollFrame *this);
  _BYTE gap8[4];
  void (__thiscall *CSimpleFrame::DelayedDelete)(struct CSimpleMessageScrollFrame *this);
  void (__thiscall *CSimpleFrame::PreLoadXML)(struct CSimpleMessageScrollFrame *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::LoadXML_Scripts)(struct CSimpleMessageScrollFrame *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::PostLoadXML)(struct CSimpleMessageScrollFrame *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::SetAlpha)(struct CSimpleMessageScrollFrame *this, unsigned __int8);
  int (__thiscall *CSimpleFrame::FrameDefPostInitialize)(struct CSimpleMessageScrollFrame *this, unsigned int, void *);
  int (__thiscall *CSimpleFrame::TestHitRect)(struct CSimpleMessageScrollFrame *this, const NTempest::C2Vector *);
  void (__thiscall *CSimpleFrame::OnLayerShow)(struct CSimpleMessageScrollFrame *this);
  void (__thiscall *CSimpleFrame::OnLayerHide)(struct CSimpleMessageScrollFrame *this);
  void (__thiscall *CSimpleFrame::OnLayerUpdate)(struct CSimpleMessageScrollFrame *this, float);
  int (__thiscall *CSimpleFrame::OnLayerTrackUpdate)(struct CSimpleMessageScrollFrame *this, const CMouseEvent *);
  _BYTE gap38[4];
  void (__thiscall *CSimpleFrame::OnFrameRender)(struct CSimpleMessageScrollFrame *this, CRenderBatch *, unsigned int);
  _BYTE gap40[4];
  void (__thiscall *CSimpleFrame::OnLayerCursorEnter)(struct CSimpleMessageScrollFrame *this);
  void (__thiscall *CSimpleFrame::OnLayerCursorExit)(struct CSimpleMessageScrollFrame *this);
  int (__thiscall *CSimpleFrame::OnLayerIme)(struct CSimpleMessageScrollFrame *this, CImeEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDownRepeat)(struct CSimpleMessageScrollFrame *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerChar)(struct CSimpleMessageScrollFrame *this, CCharEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDown)(struct CSimpleMessageScrollFrame *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyUp)(struct CSimpleMessageScrollFrame *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseDown)(struct CSimpleMessageScrollFrame *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseUp)(struct CSimpleMessageScrollFrame *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseWheel)(struct CSimpleMessageScrollFrame *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseMoveRelative)(struct CSimpleMessageScrollFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStart)(struct CSimpleMessageScrollFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStop)(struct CSimpleMessageScrollFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnReceiveDrag)(struct CSimpleMessageScrollFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::LockHighlight)(struct CSimpleMessageScrollFrame *this, int);
  int (__thiscall *CSimpleFrame::HideThis)(struct CSimpleMessageScrollFrame *this);
  int (__thiscall *CSimpleFrame::ShowThis)(struct CSimpleMessageScrollFrame *this);
  void (__thiscall *CSimpleFrame::ClearChildrenFromSimpleRegistry)(struct CSimpleMessageScrollFrame *this);
  void (__thiscall *CSimpleHyperlinkedFrame::OnHyperlinkEnter)(struct CSimpleMessageScrollFrame *this, const char *);
  void (__thiscall *CSimpleHyperlinkedFrame::OnHyperlinkLeave)(struct CSimpleMessageScrollFrame *this, const char *);
  void (__thiscall *CSimpleHyperlinkedFrame::OnHyperlinkClick)(struct CSimpleMessageScrollFrame *this, const char *, MOUSEBUTTON);
};

/* 2219 */
struct __cppobj CSimpleScrollFrame : CSimpleFrame
{
  int m_updateScrollChild;
  CSimpleFrame *m_scrollChild;
  NTempest::C2Vector m_scrollRange;
  NTempest::C2Vector m_scrollOffset;
  int m_onHorizontalScroll;
  int m_onVerticalScroll;
  int m_onScrollRangeChanged;
};

/* 2220 */
struct /*VFT*/ CSimpleScrollFrame_vtbl
{
  int (__thiscall *CSimpleScrollFrame::LookupScriptMethod)(CSimpleScrollFrame *this, struct lua_State *, const char *);
  const char *(__thiscall *GetName)(struct CSimpleScrollFrame *this);
  _BYTE gap8[4];
  void (__thiscall *CSimpleFrame::DelayedDelete)(struct CSimpleScrollFrame *this);
  void (__thiscall *CSimpleFrame::PreLoadXML)(struct CSimpleScrollFrame *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::LoadXML_Scripts)(struct CSimpleScrollFrame *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::PostLoadXML)(struct CSimpleScrollFrame *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::SetAlpha)(struct CSimpleScrollFrame *this, unsigned __int8);
  int (__thiscall *CSimpleFrame::FrameDefPostInitialize)(struct CSimpleScrollFrame *this, unsigned int, void *);
  int (__thiscall *CSimpleFrame::TestHitRect)(struct CSimpleScrollFrame *this, const NTempest::C2Vector *);
  void (__thiscall *CSimpleFrame::OnLayerShow)(struct CSimpleScrollFrame *this);
  void (__thiscall *CSimpleFrame::OnLayerHide)(struct CSimpleScrollFrame *this);
  void (__thiscall *CSimpleFrame::OnLayerUpdate)(struct CSimpleScrollFrame *this, float);
  int (__thiscall *CSimpleFrame::OnLayerTrackUpdate)(struct CSimpleScrollFrame *this, const CMouseEvent *);
  _BYTE gap38[4];
  void (__thiscall *CSimpleFrame::OnFrameRender)(struct CSimpleScrollFrame *this, CRenderBatch *, unsigned int);
  _BYTE gap40[4];
  void (__thiscall *CSimpleFrame::OnLayerCursorEnter)(struct CSimpleScrollFrame *this);
  void (__thiscall *CSimpleFrame::OnLayerCursorExit)(struct CSimpleScrollFrame *this);
  int (__thiscall *CSimpleFrame::OnLayerIme)(struct CSimpleScrollFrame *this, CImeEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDownRepeat)(struct CSimpleScrollFrame *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerChar)(struct CSimpleScrollFrame *this, CCharEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDown)(struct CSimpleScrollFrame *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyUp)(struct CSimpleScrollFrame *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseDown)(struct CSimpleScrollFrame *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseUp)(struct CSimpleScrollFrame *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseWheel)(struct CSimpleScrollFrame *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseMoveRelative)(struct CSimpleScrollFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStart)(struct CSimpleScrollFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStop)(struct CSimpleScrollFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnReceiveDrag)(struct CSimpleScrollFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::LockHighlight)(struct CSimpleScrollFrame *this, int);
  int (__thiscall *CSimpleFrame::HideThis)(struct CSimpleScrollFrame *this);
  int (__thiscall *CSimpleFrame::ShowThis)(struct CSimpleScrollFrame *this);
  void (__thiscall *CSimpleFrame::ClearChildrenFromSimpleRegistry)(struct CSimpleScrollFrame *this);
};

/* 2221 */
struct __cppobj CSimpleSlider : CSimpleFrame
{
  __int32 m_changed : 1;
  __int32 m_rangeSet : 1;
  __int32 m_valueSet : 1;
  __int32 m_buttonDown : 1;
  float m_baseValue;
  float m_range;
  float m_value;
  float m_valueStep;
  CSimpleTexture *m_thumbTexture;
  SLIDER_ORIENTATION m_orientation;
  int m_onValueChanged;
};

/* 2222 */
struct /*VFT*/ CSimpleSlider_vtbl
{
  int (__thiscall *CSimpleSlider::LookupScriptMethod)(CSimpleSlider *this, struct lua_State *, const char *);
  const char *(__thiscall *GetName)(struct CSimpleSlider *this);
  _BYTE gap8[4];
  void (__thiscall *CSimpleFrame::DelayedDelete)(struct CSimpleSlider *this);
  void (__thiscall *CSimpleFrame::PreLoadXML)(struct CSimpleSlider *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::LoadXML_Scripts)(struct CSimpleSlider *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::PostLoadXML)(struct CSimpleSlider *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::SetAlpha)(struct CSimpleSlider *this, unsigned __int8);
  int (__thiscall *CSimpleFrame::FrameDefPostInitialize)(struct CSimpleSlider *this, unsigned int, void *);
  int (__thiscall *CSimpleFrame::TestHitRect)(struct CSimpleSlider *this, const NTempest::C2Vector *);
  void (__thiscall *CSimpleFrame::OnLayerShow)(struct CSimpleSlider *this);
  void (__thiscall *CSimpleFrame::OnLayerHide)(struct CSimpleSlider *this);
  void (__thiscall *CSimpleFrame::OnLayerUpdate)(struct CSimpleSlider *this, float);
  int (__thiscall *CSimpleFrame::OnLayerTrackUpdate)(struct CSimpleSlider *this, const CMouseEvent *);
  _BYTE gap38[4];
  void (__thiscall *CSimpleFrame::OnFrameRender)(struct CSimpleSlider *this, CRenderBatch *, unsigned int);
  _BYTE gap40[4];
  void (__thiscall *CSimpleFrame::OnLayerCursorEnter)(struct CSimpleSlider *this);
  void (__thiscall *CSimpleFrame::OnLayerCursorExit)(struct CSimpleSlider *this);
  int (__thiscall *CSimpleFrame::OnLayerIme)(struct CSimpleSlider *this, CImeEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDownRepeat)(struct CSimpleSlider *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerChar)(struct CSimpleSlider *this, CCharEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDown)(struct CSimpleSlider *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyUp)(struct CSimpleSlider *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseDown)(struct CSimpleSlider *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseUp)(struct CSimpleSlider *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseWheel)(struct CSimpleSlider *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseMoveRelative)(struct CSimpleSlider *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStart)(struct CSimpleSlider *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStop)(struct CSimpleSlider *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnReceiveDrag)(struct CSimpleSlider *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::LockHighlight)(struct CSimpleSlider *this, int);
  int (__thiscall *CSimpleFrame::HideThis)(struct CSimpleSlider *this);
  int (__thiscall *CSimpleFrame::ShowThis)(struct CSimpleSlider *this);
  void (__thiscall *CSimpleFrame::ClearChildrenFromSimpleRegistry)(struct CSimpleSlider *this);
};

/* 2223 */
struct __cppobj NTempest::C2iVector
{
  int x;
  int y;
};

/* 2224 */
struct __cppobj TSBaseArray<OsIMECandidate>
{
  TSBaseArray<OsIMECandidate>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  OsIMECandidate *m_data;
};

/* 2225 */
struct /*VFT*/ TSBaseArray<OsIMECandidate>_vtbl
{
  const char *(__thiscall *TSBaseArray<OsIMECandidate>::MemFileName)(TSBaseArray<OsIMECandidate> *this);
  int (__thiscall *TSBaseArray<OsIMECandidate>::MemLineNo)(TSBaseArray<OsIMECandidate> *this);
};

/* 2226 */
struct OsIMECandidate
{
  char candidate[1024];
};

/* 2227 */
struct /*VFT*/ TSFixedArray<OsIMECandidate>_vtbl
{
  const char *(__thiscall *TSBaseArray<OsIMECandidate>::MemFileName)(struct TSFixedArray<OsIMECandidate> *this);
  int (__thiscall *TSBaseArray<OsIMECandidate>::MemLineNo)(struct TSFixedArray<OsIMECandidate> *this);
};

/* 2228 */
struct __cppobj TSFixedArray<OsIMECandidate> : TSBaseArray<OsIMECandidate>
{
};

/* 2229 */
struct /*VFT*/ TSGrowableArray<OsIMECandidate>_vtbl
{
  const char *(__thiscall *TSBaseArray<OsIMECandidate>::MemFileName)(struct TSGrowableArray<OsIMECandidate> *this);
  int (__thiscall *TSBaseArray<OsIMECandidate>::MemLineNo)(struct TSGrowableArray<OsIMECandidate> *this);
};

/* 2230 */
struct __cppobj TSGrowableArray<OsIMECandidate> : TSFixedArray<OsIMECandidate>
{
  unsigned int m_chunk;
};

/* 2231 */
struct __cppobj CSimpleButtonClickEvent : CEvent
{
  MOUSEBUTTON button;
};

/* 2232 */
struct /*VFT*/ CSimpleButtonClickEvent_vtbl
{
  void (__thiscall *~CSimpleButtonClickEvent)(CSimpleButtonClickEvent *this);
  void (__thiscall *~CSimpleButtonClickEvent)(struct CSimpleButtonClickEvent *this);
};

/* 2235 */
union $58177B2F04FC2EA111CF4807FCB72ABF
{
  HCAMERA__ *m_camera;
  unsigned int m_cameraIndex;
};

/* 2233 */
struct __cppobj CSimpleModel : CSimpleFrame
{
  HMODEL__ *m_model;
  $58177B2F04FC2EA111CF4807FCB72ABF ___u2;
  CGxLight m_light;
  NTempest::C3Vector m_position;
  float m_facing;
  float m_scale;
  unsigned int m_flags;
  NTempest::CImVector m_fogColor;
  float m_fogNear;
  float m_fogFar;
  NTempest::CAaBox m_cachedExtents;
  int m_onUpdateModel;
  int m_onAnimFinished;
};

/* 2234 */
struct /*VFT*/ CSimpleModel_vtbl
{
  int (__thiscall *CSimpleModel::LookupScriptMethod)(CSimpleModel *this, struct lua_State *, const char *);
  const char *(__thiscall *GetName)(struct CSimpleModel *this);
  _BYTE gap8[4];
  void (__thiscall *CSimpleFrame::DelayedDelete)(struct CSimpleModel *this);
  void (__thiscall *CSimpleFrame::PreLoadXML)(struct CSimpleModel *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::LoadXML_Scripts)(struct CSimpleModel *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::PostLoadXML)(struct CSimpleModel *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::SetAlpha)(struct CSimpleModel *this, unsigned __int8);
  int (__thiscall *CSimpleFrame::FrameDefPostInitialize)(struct CSimpleModel *this, unsigned int, void *);
  int (__thiscall *CSimpleFrame::TestHitRect)(struct CSimpleModel *this, const NTempest::C2Vector *);
  void (__thiscall *CSimpleFrame::OnLayerShow)(struct CSimpleModel *this);
  void (__thiscall *CSimpleFrame::OnLayerHide)(struct CSimpleModel *this);
  void (__thiscall *CSimpleFrame::OnLayerUpdate)(struct CSimpleModel *this, float);
  int (__thiscall *CSimpleFrame::OnLayerTrackUpdate)(struct CSimpleModel *this, const CMouseEvent *);
  _BYTE gap38[4];
  void (__thiscall *CSimpleFrame::OnFrameRender)(struct CSimpleModel *this, CRenderBatch *, unsigned int);
  _BYTE gap40[4];
  void (__thiscall *CSimpleFrame::OnLayerCursorEnter)(struct CSimpleModel *this);
  void (__thiscall *CSimpleFrame::OnLayerCursorExit)(struct CSimpleModel *this);
  int (__thiscall *CSimpleFrame::OnLayerIme)(struct CSimpleModel *this, CImeEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDownRepeat)(struct CSimpleModel *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerChar)(struct CSimpleModel *this, CCharEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDown)(struct CSimpleModel *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyUp)(struct CSimpleModel *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseDown)(struct CSimpleModel *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseUp)(struct CSimpleModel *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseWheel)(struct CSimpleModel *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseMoveRelative)(struct CSimpleModel *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStart)(struct CSimpleModel *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStop)(struct CSimpleModel *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnReceiveDrag)(struct CSimpleModel *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::LockHighlight)(struct CSimpleModel *this, int);
  int (__thiscall *CSimpleFrame::HideThis)(struct CSimpleModel *this);
  int (__thiscall *CSimpleFrame::ShowThis)(struct CSimpleModel *this);
  void (__thiscall *CSimpleFrame::ClearChildrenFromSimpleRegistry)(struct CSimpleModel *this);
  void (__thiscall *CSimpleModel::UpdateModel)(CSimpleModel *this);
};

/* 2236 */
struct __cppobj CSimpleRender
{
};

/* 2237 */
struct __cppobj TSList<CLayoutFrame,TSGetExplicitLink<CLayoutFrame> >
{
  int m_linkoffset;
  TSLink<CLayoutFrame> m_terminator;
};

/* 2238 */
struct __cppobj TSExplicitList<CLayoutFrame,72> : TSList<CLayoutFrame,TSGetExplicitLink<CLayoutFrame> >
{
};

/* 2239 */
struct __cppobj CFramePointAbsolute : CFramePoint
{
  NTempest::C2Vector m_point;
};

/* 2240 */
struct /*VFT*/ CFramePointAbsolute_vtbl
{
  void (__thiscall *~CFramePointAbsolute)(CFramePointAbsolute *this);
  float (__thiscall *X)(struct CFramePointAbsolute *this, float);
  float (__thiscall *Y)(struct CFramePointAbsolute *this, float);
  CLayoutFrame *(__thiscall *CFramePoint::GetRelative)(struct CFramePointAbsolute *this);
};

/* 2241 */
struct __cppobj TSLink<SIMPLECONTEXTHASHOBJ>
{
  TSLink<SIMPLECONTEXTHASHOBJ> *m_prevlink;
  SIMPLECONTEXTHASHOBJ *m_next;
};

/* 2242 */
struct __cppobj __declspec(align(4)) TSHashObject<SIMPLECONTEXTHASHOBJ,HASHKEY_NONE>
{
  unsigned int m_hashval;
  __unaligned __declspec(align(1)) TSLink<SIMPLECONTEXTHASHOBJ> m_linktoslot;
  __unaligned __declspec(align(1)) TSLink<SIMPLECONTEXTHASHOBJ> m_linktofull;
  HASHKEY_NONE m_key;
};

/* 2243 */
struct __cppobj TSLink<SIMPLEFRAMEREGHASH>
{
  TSLink<SIMPLEFRAMEREGHASH> *m_prevlink;
  SIMPLEFRAMEREGHASH *m_next;
};

/* 2247 */
struct __cppobj TSList<SIMPLEFRAMEREGHASH,TSGetExplicitLink<SIMPLEFRAMEREGHASH> >
{
  int m_linkoffset;
  TSLink<SIMPLEFRAMEREGHASH> m_terminator;
};

/* 2248 */
struct __cppobj TSExplicitList<SIMPLEFRAMEREGHASH,-572662307> : TSList<SIMPLEFRAMEREGHASH,TSGetExplicitLink<SIMPLEFRAMEREGHASH> >
{
};

/* 2250 */
struct __cppobj TSBaseArray<TSExplicitList<SIMPLEFRAMEREGHASH,-572662307> >
{
  TSBaseArray<TSExplicitList<SIMPLEFRAMEREGHASH,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<SIMPLEFRAMEREGHASH,-572662307> *m_data;
};

/* 2253 */
struct __cppobj TSFixedArray<TSExplicitList<SIMPLEFRAMEREGHASH,-572662307> > : TSBaseArray<TSExplicitList<SIMPLEFRAMEREGHASH,-572662307> >
{
};

/* 2255 */
struct __cppobj TSGrowableArray<TSExplicitList<SIMPLEFRAMEREGHASH,-572662307> > : TSFixedArray<TSExplicitList<SIMPLEFRAMEREGHASH,-572662307> >
{
  unsigned int m_chunk;
};

/* 2246 */
struct __cppobj TSHashTable<SIMPLEFRAMEREGHASH,HASHKEY_STR>
{
  TSHashTable<SIMPLEFRAMEREGHASH,HASHKEY_STR>_vtbl *__vftable /*VFT*/;
  TSExplicitList<SIMPLEFRAMEREGHASH,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<SIMPLEFRAMEREGHASH,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 2256 */
struct __cppobj TSLink<SIMPLETEXTUREREGHASH>
{
  TSLink<SIMPLETEXTUREREGHASH> *m_prevlink;
  SIMPLETEXTUREREGHASH *m_next;
};

/* 2260 */
struct __cppobj TSList<SIMPLETEXTUREREGHASH,TSGetExplicitLink<SIMPLETEXTUREREGHASH> >
{
  int m_linkoffset;
  TSLink<SIMPLETEXTUREREGHASH> m_terminator;
};

/* 2261 */
struct __cppobj TSExplicitList<SIMPLETEXTUREREGHASH,-572662307> : TSList<SIMPLETEXTUREREGHASH,TSGetExplicitLink<SIMPLETEXTUREREGHASH> >
{
};

/* 2263 */
struct __cppobj TSBaseArray<TSExplicitList<SIMPLETEXTUREREGHASH,-572662307> >
{
  TSBaseArray<TSExplicitList<SIMPLETEXTUREREGHASH,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<SIMPLETEXTUREREGHASH,-572662307> *m_data;
};

/* 2266 */
struct __cppobj TSFixedArray<TSExplicitList<SIMPLETEXTUREREGHASH,-572662307> > : TSBaseArray<TSExplicitList<SIMPLETEXTUREREGHASH,-572662307> >
{
};

/* 2268 */
struct __cppobj TSGrowableArray<TSExplicitList<SIMPLETEXTUREREGHASH,-572662307> > : TSFixedArray<TSExplicitList<SIMPLETEXTUREREGHASH,-572662307> >
{
  unsigned int m_chunk;
};

/* 2259 */
struct __cppobj TSHashTable<SIMPLETEXTUREREGHASH,HASHKEY_STR>
{
  TSHashTable<SIMPLETEXTUREREGHASH,HASHKEY_STR>_vtbl *__vftable /*VFT*/;
  TSExplicitList<SIMPLETEXTUREREGHASH,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<SIMPLETEXTUREREGHASH,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 2269 */
struct __cppobj TSLink<SIMPLEFONTSTRINGREGHASH>
{
  TSLink<SIMPLEFONTSTRINGREGHASH> *m_prevlink;
  SIMPLEFONTSTRINGREGHASH *m_next;
};

/* 2273 */
struct __cppobj TSList<SIMPLEFONTSTRINGREGHASH,TSGetExplicitLink<SIMPLEFONTSTRINGREGHASH> >
{
  int m_linkoffset;
  TSLink<SIMPLEFONTSTRINGREGHASH> m_terminator;
};

/* 2274 */
struct __cppobj TSExplicitList<SIMPLEFONTSTRINGREGHASH,-572662307> : TSList<SIMPLEFONTSTRINGREGHASH,TSGetExplicitLink<SIMPLEFONTSTRINGREGHASH> >
{
};

/* 2276 */
struct __cppobj TSBaseArray<TSExplicitList<SIMPLEFONTSTRINGREGHASH,-572662307> >
{
  TSBaseArray<TSExplicitList<SIMPLEFONTSTRINGREGHASH,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<SIMPLEFONTSTRINGREGHASH,-572662307> *m_data;
};

/* 2279 */
struct __cppobj TSFixedArray<TSExplicitList<SIMPLEFONTSTRINGREGHASH,-572662307> > : TSBaseArray<TSExplicitList<SIMPLEFONTSTRINGREGHASH,-572662307> >
{
};

/* 2281 */
struct __cppobj TSGrowableArray<TSExplicitList<SIMPLEFONTSTRINGREGHASH,-572662307> > : TSFixedArray<TSExplicitList<SIMPLEFONTSTRINGREGHASH,-572662307> >
{
  unsigned int m_chunk;
};

/* 2272 */
struct __cppobj TSHashTable<SIMPLEFONTSTRINGREGHASH,HASHKEY_STR>
{
  TSHashTable<SIMPLEFONTSTRINGREGHASH,HASHKEY_STR>_vtbl *__vftable /*VFT*/;
  TSExplicitList<SIMPLEFONTSTRINGREGHASH,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<SIMPLEFONTSTRINGREGHASH,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 2282 */
struct __cppobj __unaligned __declspec(align(4)) SIMPLECONTEXTHASHOBJ : TSHashObject<SIMPLECONTEXTHASHOBJ,HASHKEY_NONE>
{
  TSHashTable<SIMPLEFRAMEREGHASH,HASHKEY_STR> s_frameRegistry;
  TSHashTable<SIMPLETEXTUREREGHASH,HASHKEY_STR> s_textureRegistry;
  TSHashTable<SIMPLEFONTSTRINGREGHASH,HASHKEY_STR> s_stringRegistry;
};

/* 2249 */
struct /*VFT*/ TSHashTable<SIMPLEFRAMEREGHASH,HASHKEY_STR>_vtbl
{
  void (__thiscall *TSHashTable<SIMPLEFRAMEREGHASH,HASHKEY_STR>::InternalDelete)(TSHashTable<SIMPLEFRAMEREGHASH,HASHKEY_STR> *this, SIMPLEFRAMEREGHASH *);
  SIMPLEFRAMEREGHASH *(__thiscall *TSHashTable<SIMPLEFRAMEREGHASH,HASHKEY_STR>::InternalNew)(TSHashTable<SIMPLEFRAMEREGHASH,HASHKEY_STR> *this, TSExplicitList<SIMPLEFRAMEREGHASH,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *TSHashTable<SIMPLEFRAMEREGHASH,HASHKEY_STR>::~TSHashTable<SIMPLEFRAMEREGHASH,HASHKEY_STR>)(TSHashTable<SIMPLEFRAMEREGHASH,HASHKEY_STR> *this);
  void (__thiscall *TSHashTable<SIMPLEFRAMEREGHASH,HASHKEY_STR>::Destroy)(TSHashTable<SIMPLEFRAMEREGHASH,HASHKEY_STR> *this);
};

/* 2245 */
struct __cppobj TSHashObject<SIMPLEFRAMEREGHASH,HASHKEY_STR>
{
  unsigned int m_hashval;
  TSLink<SIMPLEFRAMEREGHASH> m_linktoslot;
  TSLink<SIMPLEFRAMEREGHASH> m_linktofull;
  HASHKEY_STR m_key;
};

/* 2244 */
struct __cppobj SIMPLEFRAMEREGHASH : TSHashObject<SIMPLEFRAMEREGHASH,HASHKEY_STR>
{
  CSimpleFrame *object;
};

/* 2251 */
struct /*VFT*/ TSBaseArray<TSExplicitList<SIMPLEFRAMEREGHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<SIMPLEFRAMEREGHASH,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<SIMPLEFRAMEREGHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<SIMPLEFRAMEREGHASH,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<SIMPLEFRAMEREGHASH,-572662307> > *this);
};

/* 2262 */
struct /*VFT*/ TSHashTable<SIMPLETEXTUREREGHASH,HASHKEY_STR>_vtbl
{
  void (__thiscall *TSHashTable<SIMPLETEXTUREREGHASH,HASHKEY_STR>::InternalDelete)(TSHashTable<SIMPLETEXTUREREGHASH,HASHKEY_STR> *this, SIMPLETEXTUREREGHASH *);
  SIMPLETEXTUREREGHASH *(__thiscall *TSHashTable<SIMPLETEXTUREREGHASH,HASHKEY_STR>::InternalNew)(TSHashTable<SIMPLETEXTUREREGHASH,HASHKEY_STR> *this, TSExplicitList<SIMPLETEXTUREREGHASH,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<SIMPLETEXTUREREGHASH,HASHKEY_STR>)(TSHashTable<SIMPLETEXTUREREGHASH,HASHKEY_STR> *this);
  void (__thiscall *TSHashTable<SIMPLETEXTUREREGHASH,HASHKEY_STR>::Destroy)(TSHashTable<SIMPLETEXTUREREGHASH,HASHKEY_STR> *this);
};

/* 2258 */
struct __cppobj TSHashObject<SIMPLETEXTUREREGHASH,HASHKEY_STR>
{
  unsigned int m_hashval;
  TSLink<SIMPLETEXTUREREGHASH> m_linktoslot;
  TSLink<SIMPLETEXTUREREGHASH> m_linktofull;
  HASHKEY_STR m_key;
};

/* 2257 */
struct __cppobj SIMPLETEXTUREREGHASH : TSHashObject<SIMPLETEXTUREREGHASH,HASHKEY_STR>
{
  CSimpleTexture *object;
};

/* 2264 */
struct /*VFT*/ TSBaseArray<TSExplicitList<SIMPLETEXTUREREGHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<SIMPLETEXTUREREGHASH,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<SIMPLETEXTUREREGHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<SIMPLETEXTUREREGHASH,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<SIMPLETEXTUREREGHASH,-572662307> > *this);
};

/* 2275 */
struct /*VFT*/ TSHashTable<SIMPLEFONTSTRINGREGHASH,HASHKEY_STR>_vtbl
{
  void (__thiscall *TSHashTable<SIMPLEFONTSTRINGREGHASH,HASHKEY_STR>::InternalDelete)(TSHashTable<SIMPLEFONTSTRINGREGHASH,HASHKEY_STR> *this, SIMPLEFONTSTRINGREGHASH *);
  SIMPLEFONTSTRINGREGHASH *(__thiscall *TSHashTable<SIMPLEFONTSTRINGREGHASH,HASHKEY_STR>::InternalNew)(TSHashTable<SIMPLEFONTSTRINGREGHASH,HASHKEY_STR> *this, TSExplicitList<SIMPLEFONTSTRINGREGHASH,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<SIMPLEFONTSTRINGREGHASH,HASHKEY_STR>)(TSHashTable<SIMPLEFONTSTRINGREGHASH,HASHKEY_STR> *this);
  void (__thiscall *TSHashTable<SIMPLEFONTSTRINGREGHASH,HASHKEY_STR>::Destroy)(TSHashTable<SIMPLEFONTSTRINGREGHASH,HASHKEY_STR> *this);
};

/* 2271 */
struct __cppobj TSHashObject<SIMPLEFONTSTRINGREGHASH,HASHKEY_STR>
{
  unsigned int m_hashval;
  TSLink<SIMPLEFONTSTRINGREGHASH> m_linktoslot;
  TSLink<SIMPLEFONTSTRINGREGHASH> m_linktofull;
  HASHKEY_STR m_key;
};

/* 2270 */
struct __cppobj SIMPLEFONTSTRINGREGHASH : TSHashObject<SIMPLEFONTSTRINGREGHASH,HASHKEY_STR>
{
  CSimpleFontString *object;
};

/* 2277 */
struct /*VFT*/ TSBaseArray<TSExplicitList<SIMPLEFONTSTRINGREGHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<SIMPLEFONTSTRINGREGHASH,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<SIMPLEFONTSTRINGREGHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<SIMPLEFONTSTRINGREGHASH,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<SIMPLEFONTSTRINGREGHASH,-572662307> > *this);
};

/* 2252 */
struct /*VFT*/ TSFixedArray<TSExplicitList<SIMPLEFRAMEREGHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<SIMPLEFRAMEREGHASH,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<SIMPLEFRAMEREGHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<SIMPLEFRAMEREGHASH,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<SIMPLEFRAMEREGHASH,-572662307> > *this);
};

/* 2254 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<SIMPLEFRAMEREGHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<SIMPLEFRAMEREGHASH,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<SIMPLEFRAMEREGHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<SIMPLEFRAMEREGHASH,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<SIMPLEFRAMEREGHASH,-572662307> > *this);
};

/* 2265 */
struct /*VFT*/ TSFixedArray<TSExplicitList<SIMPLETEXTUREREGHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<SIMPLETEXTUREREGHASH,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<SIMPLETEXTUREREGHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<SIMPLETEXTUREREGHASH,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<SIMPLETEXTUREREGHASH,-572662307> > *this);
};

/* 2267 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<SIMPLETEXTUREREGHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<SIMPLETEXTUREREGHASH,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<SIMPLETEXTUREREGHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<SIMPLETEXTUREREGHASH,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<SIMPLETEXTUREREGHASH,-572662307> > *this);
};

/* 2278 */
struct /*VFT*/ TSFixedArray<TSExplicitList<SIMPLEFONTSTRINGREGHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<SIMPLEFONTSTRINGREGHASH,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<SIMPLEFONTSTRINGREGHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<SIMPLEFONTSTRINGREGHASH,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<SIMPLEFONTSTRINGREGHASH,-572662307> > *this);
};

/* 2280 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<SIMPLEFONTSTRINGREGHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<SIMPLEFONTSTRINGREGHASH,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<SIMPLEFONTSTRINGREGHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<SIMPLEFONTSTRINGREGHASH,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<SIMPLEFONTSTRINGREGHASH,-572662307> > *this);
};

/* 2283 */
struct __cppobj TSList<SIMPLECONTEXTHASHOBJ,TSGetExplicitLink<SIMPLECONTEXTHASHOBJ> >
{
  int m_linkoffset;
  TSLink<SIMPLECONTEXTHASHOBJ> m_terminator;
};

/* 2284 */
struct __cppobj TSExplicitList<SIMPLECONTEXTHASHOBJ,-572662307> : TSList<SIMPLECONTEXTHASHOBJ,TSGetExplicitLink<SIMPLECONTEXTHASHOBJ> >
{
};

/* 2285 */
struct __cppobj TSBaseArray<TSExplicitList<SIMPLECONTEXTHASHOBJ,-572662307> >
{
  TSBaseArray<TSExplicitList<SIMPLECONTEXTHASHOBJ,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<SIMPLECONTEXTHASHOBJ,-572662307> *m_data;
};

/* 2286 */
struct /*VFT*/ TSBaseArray<TSExplicitList<SIMPLECONTEXTHASHOBJ,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<SIMPLECONTEXTHASHOBJ,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<SIMPLECONTEXTHASHOBJ,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<SIMPLECONTEXTHASHOBJ,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<SIMPLECONTEXTHASHOBJ,-572662307> > *this);
};

/* 2287 */
struct /*VFT*/ TSFixedArray<TSExplicitList<SIMPLECONTEXTHASHOBJ,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<SIMPLECONTEXTHASHOBJ,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<SIMPLECONTEXTHASHOBJ,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<SIMPLECONTEXTHASHOBJ,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<SIMPLECONTEXTHASHOBJ,-572662307> > *this);
};

/* 2288 */
struct __cppobj TSFixedArray<TSExplicitList<SIMPLECONTEXTHASHOBJ,-572662307> > : TSBaseArray<TSExplicitList<SIMPLECONTEXTHASHOBJ,-572662307> >
{
};

/* 2289 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<SIMPLECONTEXTHASHOBJ,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<SIMPLECONTEXTHASHOBJ,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<SIMPLECONTEXTHASHOBJ,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<SIMPLECONTEXTHASHOBJ,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<SIMPLECONTEXTHASHOBJ,-572662307> > *this);
};

/* 2290 */
struct __cppobj TSGrowableArray<TSExplicitList<SIMPLECONTEXTHASHOBJ,-572662307> > : TSFixedArray<TSExplicitList<SIMPLECONTEXTHASHOBJ,-572662307> >
{
  unsigned int m_chunk;
};

/* 2291 */
struct __cppobj TSHashTable<SIMPLECONTEXTHASHOBJ,HASHKEY_NONE>
{
  TSHashTable<SIMPLECONTEXTHASHOBJ,HASHKEY_NONE>_vtbl *__vftable /*VFT*/;
  TSExplicitList<SIMPLECONTEXTHASHOBJ,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<SIMPLECONTEXTHASHOBJ,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 2292 */
struct /*VFT*/ TSHashTable<SIMPLECONTEXTHASHOBJ,HASHKEY_NONE>_vtbl
{
  void (__thiscall *TSHashTable<SIMPLECONTEXTHASHOBJ,HASHKEY_NONE>::InternalDelete)(TSHashTable<SIMPLECONTEXTHASHOBJ,HASHKEY_NONE> *this, SIMPLECONTEXTHASHOBJ *);
  SIMPLECONTEXTHASHOBJ *(__thiscall *TSHashTable<SIMPLECONTEXTHASHOBJ,HASHKEY_NONE>::InternalNew)(TSHashTable<SIMPLECONTEXTHASHOBJ,HASHKEY_NONE> *this, TSExplicitList<SIMPLECONTEXTHASHOBJ,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<SIMPLECONTEXTHASHOBJ,HASHKEY_NONE>)(TSHashTable<SIMPLECONTEXTHASHOBJ,HASHKEY_NONE> *this);
  void (__thiscall *TSHashTable<SIMPLECONTEXTHASHOBJ,HASHKEY_NONE>::Destroy)(TSHashTable<SIMPLECONTEXTHASHOBJ,HASHKEY_NONE> *this);
};

/* 2293 */
struct __cppobj CModelCreate
{
  unsigned int flags;
  const char **sequenceNames;
  unsigned int numSequences;
  const char **boneNames;
  unsigned int numBones;
  const char **cameraNames;
  unsigned int numCameras;
};

/* 2294 */
struct $0437D83A9E21E1BA7E8316DFDE4D15FE
{
  unsigned int token;
  int needed;
  int dupsOk;
  int seen;
};

/* 2295 */
struct __cppobj TSet
{
  $0437D83A9E21E1BA7E8316DFDE4D15FE set[64];
  int count;
};

/* 2296 */
struct __cppobj CMDLStatus : CStatus
{
};

/* 2297 */
struct /*VFT*/ CMDLStatus_vtbl
{
  void (__thiscall *~CMDLStatus)(CMDLStatus *this);
  void (__thiscall *CStatus::Display)(struct CMDLStatus *this);
  _BYTE gap8[4];
  void (*CStatus::Add)(struct CMDLStatus *this, STATUS_TYPE, const char *, ...);
  void (*CStatus::Prepend)(struct CMDLStatus *this, STATUS_TYPE, const char *, ...);
};

/* 2300 */
union mdl_data
{
  char cVal;
  int lVal;
  float fVal;
  char *sVal;
};

/* 2298 */
struct __cppobj mdl_scan
{
  mdl_scan_vtbl *__vftable /*VFT*/;
  unsigned int *state;
  int size;
  int mustfree;
  int mdl_end;
  int mdl_start;
  int mdl_lastc;
  int mdlLexFatal;
  char save;
  mdl_data tokendata;
  char *mdltext;
  const char *mdlin;
  _iobuf *mdlout;
  int mdllineno;
  int mdlleng;
};

/* 2299 */
struct /*VFT*/ mdl_scan_vtbl
{
  int (__thiscall *mdl_scan::mdlwrap)(mdl_scan *this);
  void (*mdl_scan::mdlerror)(mdl_scan *this, char *, ...);
  void (__thiscall *mdl_scan::output)(mdl_scan *this, int);
  void (__thiscall *mdl_scan::YY_FATAL)(mdl_scan *this, char *);
  void (__thiscall *mdl_scan::ECHO)(mdl_scan *this);
};

/* 2301 */
struct _iobuf
{
  char *_ptr;
  int _cnt;
  char *_base;
  int _flag;
  int _file;
  int _charbuf;
  int _bufsiz;
  char *_tmpfname;
};

/* 2302 */
struct __cppobj Parser
{
  mdl_scan *m_scanner;
  CMDLStatus *m_status;
  unsigned int m_flags;
};

/* 2303 */
union UTokenData
{
  char cVal;
  int lVal;
  float fVal;
  char *sVal;
};

/* 2304 */
struct TOKENFLAG
{
  unsigned int mask;
  unsigned int token;
};

/* 2305 */
struct $57AB6702E7979FB66CF4FCB50FB89407
{
  unsigned int mask;
  unsigned int token;
};

/* 2306 */
struct $D39E6620E5393FA3CD7BE5E5F4CA71B9
{
  unsigned int token;
  const char *text;
};

/* 2307 */
const struct $AC64CCBF66AC8EB8CB954F097361C005
{
  unsigned int token;
  const char *text;
};

/* 2308 */
struct __cppobj CNullStatus : CStatus
{
};

/* 2309 */
struct /*VFT*/ CNullStatus_vtbl
{
  void (__thiscall *~CNullStatus)(CNullStatus *this);
  void (__thiscall *CStatus::Display)(struct CNullStatus *this);
  _BYTE gap8[4];
  void (*CStatus::Add)(struct CNullStatus *this, STATUS_TYPE, const char *, ...);
  void (*CStatus::Prepend)(struct CNullStatus *this, STATUS_TYPE, const char *, ...);
};

/* 2310 */
struct __cppobj CMdlScanner : mdl_scan
{
  CMDLStatus *m_status;
};

/* 2311 */
struct /*VFT*/ CMdlScanner_vtbl
{
  void (*CMdlScanner::mdlerror)(CMdlScanner *this, char *, ...);
  void (*mdl_scan::mdlerror)(struct CMdlScanner *this, char *, ...);
  void (__thiscall *mdl_scan::output)(struct CMdlScanner *this, int);
  void (__thiscall *mdl_scan::YY_FATAL)(struct CMdlScanner *this, char *);
  void (__thiscall *mdl_scan::ECHO)(struct CMdlScanner *this);
};

/* 2312 */
struct internal_state
{
  int dummy;
};

/* 2313 */
struct z_stream_s
{
  unsigned __int8 *next_in;
  unsigned int avail_in;
  unsigned int total_in;
  unsigned __int8 *next_out;
  unsigned int avail_out;
  unsigned int total_out;
  char *msg;
  internal_state *state;
  void *(__fastcall *zalloc)(void *, unsigned int, unsigned int);
  void (__fastcall *zfree)(void *, void *);
  void *opaque;
  int data_type;
  unsigned int adler;
  unsigned int reserved;
};

/* 2314 */
struct __cppobj TSLink<ZipFileDirEntry>
{
  TSLink<ZipFileDirEntry> *m_prevlink;
  ZipFileDirEntry *m_next;
};

/* 2316 */
struct __cppobj TSHashObject<ZipFileDirEntry,HASHKEY_CONSTSTRI>
{
  unsigned int m_hashval;
  TSLink<ZipFileDirEntry> m_linktoslot;
  TSLink<ZipFileDirEntry> m_linktofull;
  HASHKEY_CONSTSTRI m_key;
};

/* 2315 */
struct __cppobj ZipFileDirEntry : TSHashObject<ZipFileDirEntry,HASHKEY_CONSTSTRI>
{
  ZipFileArchive *archive;
  char filename[256];
  unsigned int startOffset;
  unsigned int compressedSize;
  unsigned int uncompressedSize;
  unsigned int compressionMethod;
};

/* 2317 */
struct __cppobj TSLink<ZipFileArchive>
{
  TSLink<ZipFileArchive> *m_prevlink;
  ZipFileArchive *m_next;
};

/* 2319 */
struct __cppobj TSLinkedNode<ZipFileArchive>
{
  TSLink<ZipFileArchive> m_link;
};

/* 2318 */
struct __cppobj ZipFileArchive : TSLinkedNode<ZipFileArchive>
{
  _iobuf *file;
  char filename[256];
  unsigned int openFileCount;
};

/* 2320 */
struct __cppobj Flags
{
  unsigned int m_value;
};

/* 2321 */
struct __cppobj ZipFileFCB
{
  ZipFileDirEntry *dirEntry;
  Flags flags;
  unsigned int targetPosition;
  unsigned int compressedPosition;
  unsigned int uncompressedPosition;
  z_stream_s zlibStream;
  unsigned __int8 compressedData[4096];
};

/* 2322 */
struct __cppobj MD5
{
  unsigned int val[4];
};

/* 2323 */
struct __cppobj SFile
{
  SFILE_TYPE m_type;
  void *m_fileptr;
  SArchive *m_archive;
  char *m_filename;
  char *m_actualname;
  unsigned int m_size;
  unsigned __int8 *m_zbuffer;
  z_stream_s *m_zstream;
  unsigned int m_curOffset;
  SCritSect m_lock;
  void *m_hsfile;
  ZipFileFCB *m_zipFile;
  MD5 m_md5;
  int m_haveMD5;
  int m_closeAfterLoad;
  unsigned int m_asyncCount;
};

/* 2324 */
struct __cppobj HCOLLISIONDATA__ : HOBJECT__
{
  int unused;
};

/* 2325 */
struct __cppobj CCollisionData : CHandleObject
{
  TSFixedArray<NTempest::C3Vector> vertices;
  TSFixedArray<unsigned short> indices;
  TSFixedArray<NTempest::C3Vector> surfaceNormals;
  NTempest::CAaBox extents;
};

/* 2326 */
struct /*VFT*/ CCollisionData_vtbl
{
  void (__thiscall *~CCollisionData)(CCollisionData *this);
  const char *(__thiscall *CHandleObject::GetObjectName)(struct CCollisionData *this);
};

/* 2327 */
struct __cppobj TSStackArray<NTempest::C2Vector>
{
  unsigned int m_maxCount;
  unsigned int m_count;
  NTempest::C2Vector *m_data;
};

/* 2328 */
struct __cppobj TSStackArray<unsigned short>
{
  unsigned int m_maxCount;
  unsigned int m_count;
  unsigned __int16 *m_data;
};

/* 2330 */
struct __cppobj TSBaseArray<CBoundsData>
{
  TSBaseArray<CBoundsData>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CBoundsData *m_data;
};

/* 2335 */
struct __cppobj TSFixedArray<CBoundsData> : TSBaseArray<CBoundsData>
{
};

/* 2336 */
struct __cppobj TSFixedArray_<NTempest::C3Vector,1229811556,376> : TSFixedArray<NTempest::C3Vector>
{
};

/* 2338 */
struct __cppobj TSBaseArray<CHitTest>
{
  TSBaseArray<CHitTest>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CHitTest *m_data;
};

/* 2342 */
struct __cppobj TSFixedArray<CHitTest> : TSBaseArray<CHitTest>
{
};

/* 2343 */
struct __cppobj TSBaseArray<CGeosetShared>
{
  TSBaseArray<CGeosetShared>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CGeosetShared *m_data;
};

/* 2378 */
struct __cppobj TSFixedArray<CGeosetShared> : TSBaseArray<CGeosetShared>
{
};

/* 2332 */
struct __cppobj NTempest::CAaSphere
{
  NTempest::C3Vector c;
  float r;
};

/* 2333 */
struct __cppobj CBoundsData
{
  NTempest::CAaBox extent;
  NTempest::CAaSphere sphere;
};

/* 2329 */
struct __cppobj __declspec(align(4)) CModelShared : CHandleObject
{
  TSFixedArray<CBoundsData> seqBounds;
  TSFixedArray<unsigned int> attachIdToIndex;
  TSFixedArray_<NTempest::C3Vector,1229811556,376> positions;
  TSFixedArray<CHitTest> hitTest;
  TSFixedArray<CGeosetShared> geosets;
  TSFixedArray<unsigned int> emitter2Order;
  TSFixedArray<unsigned int> ribbonOrder;
  unsigned int numBones;
  unsigned int numTexBones;
  GROUND_TRACK groundTrack;
  HCOLLISIONDATA__ *collision;
  char name[260];
  CBoundsData bounds;
  unsigned __int8 numGeosets;
  unsigned __int8 numLayers;
};

/* 2331 */
struct /*VFT*/ TSBaseArray<CBoundsData>_vtbl
{
  const char *(__thiscall *TSBaseArray<CBoundsData>::MemFileName)(TSBaseArray<CBoundsData> *this);
  int (__thiscall *TSBaseArray<CBoundsData>::MemLineNo)(TSBaseArray<CBoundsData> *this);
};

/* 2339 */
struct /*VFT*/ TSBaseArray<CHitTest>_vtbl
{
  const char *(__thiscall *TSBaseArray<CHitTest>::MemFileName)(TSBaseArray<CHitTest> *this);
  int (__thiscall *TSBaseArray<CHitTest>::MemLineNo)(TSBaseArray<CHitTest> *this);
};

/* 2340 */
struct __cppobj CHitTest
{
  COLLIDE_TYPE type;
  NTempest::C3Vector extent[2];
  float radius;
};

/* 2344 */
struct /*VFT*/ TSBaseArray<CGeosetShared>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGeosetShared>::MemFileName)(TSBaseArray<CGeosetShared> *this);
  int (__thiscall *TSBaseArray<CGeosetShared>::MemLineNo)(TSBaseArray<CGeosetShared> *this);
};

/* 2345 */
struct __cppobj TSFixedArray_<NTempest::C3Vector,1229811556,276> : TSFixedArray<NTempest::C3Vector>
{
};

/* 2347 */
struct __cppobj TSFixedArray_<unsigned char,1229811556,277> : TSFixedArray<unsigned char>
{
};

/* 2349 */
struct __cppobj TSFixedArray_<NTempest::C3Vector,1229811556,278> : TSFixedArray<NTempest::C3Vector>
{
};

/* 2351 */
struct __cppobj TSBaseArray<TSFixedArray_<NTempest::C2Vector,1229811556,266> >
{
  TSBaseArray<TSFixedArray_<NTempest::C2Vector,1229811556,266> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSFixedArray_<NTempest::C2Vector,1229811556,266> *m_data;
};

/* 2356 */
struct __cppobj TSFixedArray<TSFixedArray_<NTempest::C2Vector,1229811556,266> > : TSBaseArray<TSFixedArray_<NTempest::C2Vector,1229811556,266> >
{
};

/* 2357 */
struct __cppobj TSFixedArray_<TSFixedArray_<NTempest::C2Vector,1229811556,266>,1229811556,279> : TSFixedArray<TSFixedArray_<NTempest::C2Vector,1229811556,266> >
{
};

/* 2359 */
struct __cppobj TSBaseArray<CPrimitive>
{
  TSBaseArray<CPrimitive>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CPrimitive *m_data;
};

/* 2363 */
struct __cppobj TSFixedArray<CPrimitive> : TSBaseArray<CPrimitive>
{
};

/* 2364 */
struct __cppobj TSFixedArray_<CPrimitive,1229811556,280> : TSFixedArray<CPrimitive>
{
};

/* 2366 */
struct __cppobj TSFixedArray_<unsigned short,1229811556,281> : TSFixedArray<unsigned short>
{
};

/* 2368 */
struct __cppobj TSFixedArray_<unsigned int,1229811556,282> : TSFixedArray<unsigned int>
{
};

/* 2370 */
struct __cppobj TSFixedArray_<unsigned int,1229811556,283> : TSFixedArray<unsigned int>
{
};

/* 2372 */
struct __cppobj TSFixedArray_<unsigned int,1229811556,284> : TSFixedArray<unsigned int>
{
};

/* 2374 */
struct __cppobj TSFixedArray_<unsigned int,1229811556,285> : TSFixedArray<unsigned int>
{
};

/* 2376 */
struct __cppobj CGeosetShared
{
  TSFixedArray_<NTempest::C3Vector,1229811556,276> position;
  TSFixedArray_<unsigned char,1229811556,277> boneWeights;
  TSFixedArray_<NTempest::C3Vector,1229811556,278> normal;
  TSFixedArray_<TSFixedArray_<NTempest::C2Vector,1229811556,266>,1229811556,279> texCoord;
  TSFixedArray_<CPrimitive,1229811556,280> primitive;
  TSFixedArray_<unsigned short,1229811556,281> primitiveVertices;
  TSFixedArray_<unsigned int,1229811556,282> groupMatrixCounts;
  TSFixedArray_<unsigned int,1229811556,283> matrices;
  TSFixedArray_<unsigned int,1229811556,284> hwBoneIndices;
  TSFixedArray_<unsigned int,1229811556,285> hwBoneWeights;
  EGxVertexShader vertexShader;
  unsigned int materialId;
  NTempest::C3Vector centroid;
  float radius;
  unsigned int selectionGroup;
  unsigned int geosetId;
  unsigned int flags;
};

/* 2352 */
struct /*VFT*/ TSBaseArray<TSFixedArray_<NTempest::C2Vector,1229811556,266> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSFixedArray_<NTempest::C2Vector,1229811556,266> >::MemFileName)(TSBaseArray<TSFixedArray_<NTempest::C2Vector,1229811556,266> > *this);
  int (__thiscall *TSBaseArray<TSFixedArray_<NTempest::C2Vector,1229811556,266> >::MemLineNo)(TSBaseArray<TSFixedArray_<NTempest::C2Vector,1229811556,266> > *this);
};

/* 2353 */
struct __cppobj TSFixedArray_<NTempest::C2Vector,1229811556,266> : TSFixedArray<NTempest::C2Vector>
{
};

/* 2360 */
struct /*VFT*/ TSBaseArray<CPrimitive>_vtbl
{
  const char *(__thiscall *TSBaseArray<CPrimitive>::MemFileName)(TSBaseArray<CPrimitive> *this);
  int (__thiscall *TSBaseArray<CPrimitive>::MemLineNo)(TSBaseArray<CPrimitive> *this);
};

/* 2361 */
struct __cppobj CPrimitive
{
  EGxPrim type;
  unsigned int vertexCount;
};

/* 2334 */
struct /*VFT*/ TSFixedArray<CBoundsData>_vtbl
{
  const char *(__thiscall *TSBaseArray<CBoundsData>::MemFileName)(struct TSFixedArray<CBoundsData> *this);
  int (__thiscall *TSBaseArray<CBoundsData>::MemLineNo)(struct TSFixedArray<CBoundsData> *this);
};

/* 2337 */
struct /*VFT*/ TSFixedArray_<NTempest::C3Vector,1229811556,376>_vtbl
{
  int (__thiscall *TSFixedArray_<NTempest::C3Vector,1229811556,376>::MemLineNo)(TSFixedArray_<NTempest::C3Vector,1229811556,376> *this);
  int (__thiscall *TSBaseArray<NTempest::C3Vector>::MemLineNo)(struct TSFixedArray_<NTempest::C3Vector,1229811556,376> *this);
};

/* 2341 */
struct /*VFT*/ TSFixedArray<CHitTest>_vtbl
{
  const char *(__thiscall *TSBaseArray<CHitTest>::MemFileName)(struct TSFixedArray<CHitTest> *this);
  int (__thiscall *TSBaseArray<CHitTest>::MemLineNo)(struct TSFixedArray<CHitTest> *this);
};

/* 2346 */
struct /*VFT*/ TSFixedArray_<NTempest::C3Vector,1229811556,276>_vtbl
{
  int (__thiscall *TSFixedArray_<NTempest::C3Vector,1229811556,276>::MemLineNo)(TSFixedArray_<NTempest::C3Vector,1229811556,276> *this);
  int (__thiscall *TSBaseArray<NTempest::C3Vector>::MemLineNo)(struct TSFixedArray_<NTempest::C3Vector,1229811556,276> *this);
};

/* 2348 */
struct /*VFT*/ TSFixedArray_<unsigned char,1229811556,277>_vtbl
{
  int (__thiscall *TSFixedArray_<unsigned char,1229811556,277>::MemLineNo)(TSFixedArray_<unsigned char,1229811556,277> *this);
  int (__thiscall *TSBaseArray<unsigned char>::MemLineNo)(struct TSFixedArray_<unsigned char,1229811556,277> *this);
};

/* 2350 */
struct /*VFT*/ TSFixedArray_<NTempest::C3Vector,1229811556,278>_vtbl
{
  int (__thiscall *TSFixedArray_<NTempest::C3Vector,1229811556,278>::MemLineNo)(TSFixedArray_<NTempest::C3Vector,1229811556,278> *this);
  int (__thiscall *TSBaseArray<NTempest::C3Vector>::MemLineNo)(struct TSFixedArray_<NTempest::C3Vector,1229811556,278> *this);
};

/* 2354 */
struct /*VFT*/ TSFixedArray_<NTempest::C2Vector,1229811556,266>_vtbl
{
  int (__thiscall *TSFixedArray_<NTempest::C2Vector,1229811556,266>::MemLineNo)(TSFixedArray_<NTempest::C2Vector,1229811556,266> *this);
  int (__thiscall *TSBaseArray<NTempest::C2Vector>::MemLineNo)(struct TSFixedArray_<NTempest::C2Vector,1229811556,266> *this);
};

/* 2355 */
struct /*VFT*/ TSFixedArray<TSFixedArray_<NTempest::C2Vector,1229811556,266> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSFixedArray_<NTempest::C2Vector,1229811556,266> >::MemFileName)(struct TSFixedArray<TSFixedArray_<NTempest::C2Vector,1229811556,266> > *this);
  int (__thiscall *TSBaseArray<TSFixedArray_<NTempest::C2Vector,1229811556,266> >::MemLineNo)(struct TSFixedArray<TSFixedArray_<NTempest::C2Vector,1229811556,266> > *this);
};

/* 2358 */
struct /*VFT*/ TSFixedArray_<TSFixedArray_<NTempest::C2Vector,1229811556,266>,1229811556,279>_vtbl
{
  int (__thiscall *TSFixedArray_<TSFixedArray_<NTempest::C2Vector,1229811556,266>,1229811556,279>::MemLineNo)(TSFixedArray_<TSFixedArray_<NTempest::C2Vector,1229811556,266>,1229811556,279> *this);
  int (__thiscall *TSBaseArray<TSFixedArray_<NTempest::C2Vector,1229811556,266> >::MemLineNo)(struct TSFixedArray_<TSFixedArray_<NTempest::C2Vector,1229811556,266>,1229811556,279> *this);
};

/* 2362 */
struct /*VFT*/ TSFixedArray<CPrimitive>_vtbl
{
  const char *(__thiscall *TSBaseArray<CPrimitive>::MemFileName)(struct TSFixedArray<CPrimitive> *this);
  int (__thiscall *TSBaseArray<CPrimitive>::MemLineNo)(struct TSFixedArray<CPrimitive> *this);
};

/* 2365 */
struct /*VFT*/ TSFixedArray_<CPrimitive,1229811556,280>_vtbl
{
  int (__thiscall *TSFixedArray_<CPrimitive,1229811556,280>::MemLineNo)(TSFixedArray_<CPrimitive,1229811556,280> *this);
  int (__thiscall *TSBaseArray<CPrimitive>::MemLineNo)(struct TSFixedArray_<CPrimitive,1229811556,280> *this);
};

/* 2367 */
struct /*VFT*/ TSFixedArray_<unsigned short,1229811556,281>_vtbl
{
  int (__thiscall *TSFixedArray_<unsigned short,1229811556,281>::MemLineNo)(TSFixedArray_<unsigned short,1229811556,281> *this);
  int (__thiscall *TSBaseArray<unsigned short>::MemLineNo)(struct TSFixedArray_<unsigned short,1229811556,281> *this);
};

/* 2369 */
struct /*VFT*/ TSFixedArray_<unsigned int,1229811556,282>_vtbl
{
  int (__thiscall *TSFixedArray_<unsigned int,1229811556,282>::MemLineNo)(TSFixedArray_<unsigned int,1229811556,282> *this);
  int (__thiscall *TSBaseArray<unsigned int>::MemLineNo)(struct TSFixedArray_<unsigned int,1229811556,282> *this);
};

/* 2371 */
struct /*VFT*/ TSFixedArray_<unsigned int,1229811556,283>_vtbl
{
  int (__thiscall *TSFixedArray_<unsigned int,1229811556,283>::MemLineNo)(TSFixedArray_<unsigned int,1229811556,283> *this);
  int (__thiscall *TSBaseArray<unsigned int>::MemLineNo)(struct TSFixedArray_<unsigned int,1229811556,283> *this);
};

/* 2373 */
struct /*VFT*/ TSFixedArray_<unsigned int,1229811556,284>_vtbl
{
  int (__thiscall *TSFixedArray_<unsigned int,1229811556,284>::MemLineNo)(TSFixedArray_<unsigned int,1229811556,284> *this);
  int (__thiscall *TSBaseArray<unsigned int>::MemLineNo)(struct TSFixedArray_<unsigned int,1229811556,284> *this);
};

/* 2375 */
struct /*VFT*/ TSFixedArray_<unsigned int,1229811556,285>_vtbl
{
  int (__thiscall *TSFixedArray_<unsigned int,1229811556,285>::MemLineNo)(TSFixedArray_<unsigned int,1229811556,285> *this);
  int (__thiscall *TSBaseArray<unsigned int>::MemLineNo)(struct TSFixedArray_<unsigned int,1229811556,285> *this);
};

/* 2377 */
struct /*VFT*/ TSFixedArray<CGeosetShared>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGeosetShared>::MemFileName)(struct TSFixedArray<CGeosetShared> *this);
  int (__thiscall *TSBaseArray<CGeosetShared>::MemLineNo)(struct TSFixedArray<CGeosetShared> *this);
};

/* 2379 */
struct /*VFT*/ CModelShared_vtbl
{
  const char *(__thiscall *CModelShared::GetObjectName)(CModelShared *this);
  const char *(__thiscall *CHandleObject::GetObjectName)(struct CModelShared *this);
};

/* 2380 */
struct __cppobj CModelBase
{
  void (__fastcall *m_PickLights)(void *, NTempest::C3Vector, const NTempest::C3Vector *, unsigned int);
  void *m_pickLightsParm;
  unsigned int m_flags;
  NTempest::C34Matrix m_modelToWorld;
  unsigned int m_texBones;
  HANIM__ *m_anim;
  HMODEL__ *m_boundsModel;
  unsigned int m_aaBoxCustGeoId;
  HMODEL__ *m_collideModel;
};

/* 2381 */
struct __cppobj TSBaseArray<CGeoset>
{
  TSBaseArray<CGeoset>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CGeoset *m_data;
};

/* 2382 */
struct /*VFT*/ TSBaseArray<CGeoset>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGeoset>::MemFileName)(TSBaseArray<CGeoset> *this);
  int (__thiscall *TSBaseArray<CGeoset>::MemLineNo)(TSBaseArray<CGeoset> *this);
};

/* 2383 */
struct __cppobj CGeoset
{
  unsigned int weightedBones;
  unsigned int flags;
};

/* 2384 */
struct /*VFT*/ TSFixedArray<CGeoset>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGeoset>::MemFileName)(struct TSFixedArray<CGeoset> *this);
  int (__thiscall *TSBaseArray<CGeoset>::MemLineNo)(struct TSFixedArray<CGeoset> *this);
};

/* 2385 */
struct __cppobj TSFixedArray<CGeoset> : TSBaseArray<CGeoset>
{
};

/* 2386 */
struct /*VFT*/ TSGrowableArray<CGeoset>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGeoset>::MemFileName)(struct TSGrowableArray<CGeoset> *this);
  int (__thiscall *TSBaseArray<CGeoset>::MemLineNo)(struct TSGrowableArray<CGeoset> *this);
};

/* 2387 */
struct __cppobj TSGrowableArray<CGeoset> : TSFixedArray<CGeoset>
{
  unsigned int m_chunk;
};

/* 2388 */
struct /*VFT*/ TSGrowableArray<CGeosetShared>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGeosetShared>::MemFileName)(struct TSGrowableArray<CGeosetShared> *this);
  int (__thiscall *TSBaseArray<CGeosetShared>::MemLineNo)(struct TSGrowableArray<CGeosetShared> *this);
};

/* 2389 */
struct __cppobj TSGrowableArray<CGeosetShared> : TSFixedArray<CGeosetShared>
{
  unsigned int m_chunk;
};

/* 2390 */
struct __cppobj TSBaseArray<CGeosetColor>
{
  TSBaseArray<CGeosetColor>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CGeosetColor *m_data;
};

/* 2391 */
struct /*VFT*/ TSBaseArray<CGeosetColor>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGeosetColor>::MemFileName)(TSBaseArray<CGeosetColor> *this);
  int (__thiscall *TSBaseArray<CGeosetColor>::MemLineNo)(TSBaseArray<CGeosetColor> *this);
};

/* 2392 */
struct /*VFT*/ TSFixedArray<CGeosetColor>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGeosetColor>::MemFileName)(struct TSFixedArray<CGeosetColor> *this);
  int (__thiscall *TSBaseArray<CGeosetColor>::MemLineNo)(struct TSFixedArray<CGeosetColor> *this);
};

/* 2393 */
struct __cppobj TSFixedArray<CGeosetColor> : TSBaseArray<CGeosetColor>
{
};

/* 2394 */
struct /*VFT*/ TSGrowableArray<CGeosetColor>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGeosetColor>::MemFileName)(struct TSGrowableArray<CGeosetColor> *this);
  int (__thiscall *TSBaseArray<CGeosetColor>::MemLineNo)(struct TSGrowableArray<CGeosetColor> *this);
};

/* 2395 */
struct __cppobj TSGrowableArray<CGeosetColor> : TSFixedArray<CGeosetColor>
{
  unsigned int m_chunk;
};

/* 2396 */
struct __cppobj TSBaseArray<CCustomGeoset>
{
  TSBaseArray<CCustomGeoset>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CCustomGeoset *m_data;
};

/* 2397 */
struct /*VFT*/ TSBaseArray<CCustomGeoset>_vtbl
{
  const char *(__thiscall *TSBaseArray<CCustomGeoset>::MemFileName)(TSBaseArray<CCustomGeoset> *this);
  int (__thiscall *TSBaseArray<CCustomGeoset>::MemLineNo)(TSBaseArray<CCustomGeoset> *this);
};

/* 2398 */
struct __cppobj CCustomGeoset
{
  NTempest::C3Vector position;
  void (__fastcall *renderCallback)(HMODEL__ *, const NTempest::C34Matrix *, void *);
  void *renderParam;
};

/* 2399 */
struct /*VFT*/ TSFixedArray<CCustomGeoset>_vtbl
{
  const char *(__thiscall *TSBaseArray<CCustomGeoset>::MemFileName)(struct TSFixedArray<CCustomGeoset> *this);
  int (__thiscall *TSBaseArray<CCustomGeoset>::MemLineNo)(struct TSFixedArray<CCustomGeoset> *this);
};

/* 2400 */
struct __cppobj TSFixedArray<CCustomGeoset> : TSBaseArray<CCustomGeoset>
{
};

/* 2401 */
struct /*VFT*/ TSGrowableArray<CCustomGeoset>_vtbl
{
  const char *(__thiscall *TSBaseArray<CCustomGeoset>::MemFileName)(struct TSGrowableArray<CCustomGeoset> *this);
  int (__thiscall *TSBaseArray<CCustomGeoset>::MemLineNo)(struct TSGrowableArray<CCustomGeoset> *this);
};

/* 2402 */
struct __cppobj TSGrowableArray<CCustomGeoset> : TSFixedArray<CCustomGeoset>
{
  unsigned int m_chunk;
};

/* 2403 */
struct __cppobj TSBaseArray<HMATERIAL__ *>
{
  TSBaseArray<HMATERIAL__ *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  HMATERIAL__ **m_data;
};

/* 2404 */
struct /*VFT*/ TSBaseArray<HMATERIAL__ *>_vtbl
{
  const char *(__thiscall *TSBaseArray<HMATERIAL__ *>::MemFileName)(TSBaseArray<HMATERIAL__ *> *this);
  int (__thiscall *TSBaseArray<HMATERIAL__ *>::MemLineNo)(TSBaseArray<HMATERIAL__ *> *this);
};

/* 2405 */
struct __cppobj HMATERIAL__ : HOBJECT__
{
  int unused;
};

/* 2406 */
struct /*VFT*/ TSFixedArray<HMATERIAL__ *>_vtbl
{
  const char *(__thiscall *TSBaseArray<HMATERIAL__ *>::MemFileName)(struct TSFixedArray<HMATERIAL__ *> *this);
  int (__thiscall *TSBaseArray<HMATERIAL__ *>::MemLineNo)(struct TSFixedArray<HMATERIAL__ *> *this);
};

/* 2407 */
struct __cppobj TSFixedArray<HMATERIAL__ *> : TSBaseArray<HMATERIAL__ *>
{
};

/* 2408 */
struct /*VFT*/ TSGrowableArray<HMATERIAL__ *>_vtbl
{
  const char *(__thiscall *TSBaseArray<HMATERIAL__ *>::MemFileName)(struct TSGrowableArray<HMATERIAL__ *> *this);
  int (__thiscall *TSBaseArray<HMATERIAL__ *>::MemLineNo)(struct TSGrowableArray<HMATERIAL__ *> *this);
};

/* 2409 */
struct __cppobj TSGrowableArray<HMATERIAL__ *> : TSFixedArray<HMATERIAL__ *>
{
  unsigned int m_chunk;
};

/* 2410 */
struct __cppobj TSBaseArray<CModelTexture>
{
  TSBaseArray<CModelTexture>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CModelTexture *m_data;
};

/* 2411 */
struct /*VFT*/ TSBaseArray<CModelTexture>_vtbl
{
  const char *(__thiscall *TSBaseArray<CModelTexture>::MemFileName)(TSBaseArray<CModelTexture> *this);
  int (__thiscall *TSBaseArray<CModelTexture>::MemLineNo)(TSBaseArray<CModelTexture> *this);
};

/* 2412 */
struct __cppobj CModelTexture
{
  HTEXTURE__ *handle;
  unsigned int replaceableId;
};

/* 2413 */
struct /*VFT*/ TSFixedArray<CModelTexture>_vtbl
{
  const char *(__thiscall *TSBaseArray<CModelTexture>::MemFileName)(struct TSFixedArray<CModelTexture> *this);
  int (__thiscall *TSBaseArray<CModelTexture>::MemLineNo)(struct TSFixedArray<CModelTexture> *this);
};

/* 2414 */
struct __cppobj TSFixedArray<CModelTexture> : TSBaseArray<CModelTexture>
{
};

/* 2415 */
struct /*VFT*/ TSGrowableArray<CModelTexture>_vtbl
{
  const char *(__thiscall *TSBaseArray<CModelTexture>::MemFileName)(struct TSGrowableArray<CModelTexture> *this);
  int (__thiscall *TSBaseArray<CModelTexture>::MemLineNo)(struct TSGrowableArray<CModelTexture> *this);
};

/* 2416 */
struct __cppobj TSGrowableArray<CModelTexture> : TSFixedArray<CModelTexture>
{
  unsigned int m_chunk;
};

/* 2417 */
struct __cppobj TSBaseArray<TSList<LINKUNIQUE,TSGetLink<LINKUNIQUE> > >
{
  TSBaseArray<TSList<LINKUNIQUE,TSGetLink<LINKUNIQUE> > >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSList<LINKUNIQUE,TSGetLink<LINKUNIQUE> > *m_data;
};

/* 2418 */
struct /*VFT*/ TSBaseArray<TSList<LINKUNIQUE,TSGetLink<LINKUNIQUE> > >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSList<LINKUNIQUE,TSGetLink<LINKUNIQUE> > >::MemFileName)(TSBaseArray<TSList<LINKUNIQUE,TSGetLink<LINKUNIQUE> > > *this);
  int (__thiscall *TSBaseArray<TSList<LINKUNIQUE,TSGetLink<LINKUNIQUE> > >::MemLineNo)(TSBaseArray<TSList<LINKUNIQUE,TSGetLink<LINKUNIQUE> > > *this);
};

/* 2419 */
struct __cppobj TSLink<LINKUNIQUE>
{
  TSLink<LINKUNIQUE> *m_prevlink;
  LINKUNIQUE *m_next;
};

/* 2422 */
struct __cppobj TSList<LINKUNIQUE,TSGetLink<LINKUNIQUE> >
{
  int m_linkoffset;
  TSLink<LINKUNIQUE> m_terminator;
};

/* 2420 */
struct __cppobj TSLinkedNode<LINKUNIQUE>
{
  TSLink<LINKUNIQUE> m_link;
};

/* 2421 */
struct __cppobj LINKUNIQUE : TSLinkedNode<LINKUNIQUE>
{
  HMODEL__ *child;
  float scale;
};

/* 2423 */
struct /*VFT*/ TSFixedArray<TSList<LINKUNIQUE,TSGetLink<LINKUNIQUE> > >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSList<LINKUNIQUE,TSGetLink<LINKUNIQUE> > >::MemFileName)(struct TSFixedArray<TSList<LINKUNIQUE,TSGetLink<LINKUNIQUE> > > *this);
  int (__thiscall *TSBaseArray<TSList<LINKUNIQUE,TSGetLink<LINKUNIQUE> > >::MemLineNo)(struct TSFixedArray<TSList<LINKUNIQUE,TSGetLink<LINKUNIQUE> > > *this);
};

/* 2424 */
struct __cppobj TSFixedArray<TSList<LINKUNIQUE,TSGetLink<LINKUNIQUE> > > : TSBaseArray<TSList<LINKUNIQUE,TSGetLink<LINKUNIQUE> > >
{
};

/* 2425 */
struct __cppobj TSFixedArray_<unsigned char,1296321606,484> : TSFixedArray<unsigned char>
{
};

/* 2426 */
struct /*VFT*/ TSFixedArray_<unsigned char,1296321606,484>_vtbl
{
  int (__thiscall *TSFixedArray_<unsigned char,1296321606,484>::MemLineNo)(TSFixedArray_<unsigned char,1296321606,484> *this);
  int (__thiscall *TSBaseArray<unsigned char>::MemLineNo)(struct TSFixedArray_<unsigned char,1296321606,484> *this);
};

/* 2427 */
struct __cppobj CModelComplex : CModelBase
{
  TSGrowableArray<CGeoset> m_geosets;
  TSGrowableArray<CGeosetShared> m_addlGeosets;
  TSGrowableArray<CGeosetColor> m_geosetColor;
  TSGrowableArray<CCustomGeoset> m_custGeosets;
  TSGrowableArray<HMATERIAL__ *> m_materials;
  TSGrowableArray<CModelTexture> m_textures;
  TSFixedArray<unsigned long> m_lights;
  TSFixedArray<TSList<LINKUNIQUE,TSGetLink<LINKUNIQUE> > > m_attached;
  TSFixedArray_<unsigned char,1296321606,484> m_attachmentFlags;
  TSFixedArray<CParticleEmitter2 *> m_emitters2;
  TSFixedArray<CRibbonEmitter *> m_ribbons;
  TSFixedArray<HCAMERA__ *> m_cameras;
  TSFixedArray<unsigned int> m_cameraOrder;
  TSFixedArray<NTempest::C34Matrix> m_hitTestMtx;
};

/* 2429 */
struct __cppobj TSBaseArray<CTexLayer>
{
  TSBaseArray<CTexLayer>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CTexLayer *m_data;
};

/* 2436 */
struct __cppobj TSFixedArray<CTexLayer> : TSBaseArray<CTexLayer>
{
};

/* 2438 */
struct __cppobj TSGrowableArray<CTexLayer> : TSFixedArray<CTexLayer>
{
  unsigned int m_chunk;
};

/* 2428 */
struct __cppobj CMaterial : CHandleObject
{
  TSGrowableArray<CTexLayer> layers;
  HMATERIALSHARED__ *data;
  NTempest::CImVector emissiveColor;
};

/* 2430 */
struct /*VFT*/ TSBaseArray<CTexLayer>_vtbl
{
  const char *(__thiscall *TSBaseArray<CTexLayer>::MemFileName)(TSBaseArray<CTexLayer> *this);
  int (__thiscall *TSBaseArray<CTexLayer>::MemLineNo)(TSBaseArray<CTexLayer> *this);
};

/* 2431 */
struct $3A64F904B7CE38ABFA20FBC268D6EA7A
{
  unsigned __int32 lighting : 1;
  unsigned __int32 fog : 1;
  unsigned __int32 depthTest : 1;
  unsigned __int32 depthWrite : 1;
  unsigned __int32 culling : 1;
};

/* 2433 */
union $A946028C9A2F014677D8799ED3E8A6BB
{
  $3A64F904B7CE38ABFA20FBC268D6EA7A disable;
  unsigned int disables;
};

/* 2432 */
struct __cppobj CTmuPassUnique
{
  EGxTexBlend combiner;
  unsigned int textureId;
};

/* 2434 */
struct __cppobj __declspec(align(4)) CTexLayer
{
  EGxVertexBufferFormat vertexFormat;
  $A946028C9A2F014677D8799ED3E8A6BB ___u1;
  EGxBlend blendMode;
  CTmuPassUnique tmuPass[2];
  unsigned __int8 layerAlpha;
};

/* 2439 */
struct __cppobj HMATERIALSHARED__ : HOBJECT__
{
  int unused;
};

/* 2435 */
struct /*VFT*/ TSFixedArray<CTexLayer>_vtbl
{
  const char *(__thiscall *TSBaseArray<CTexLayer>::MemFileName)(struct TSFixedArray<CTexLayer> *this);
  int (__thiscall *TSBaseArray<CTexLayer>::MemLineNo)(struct TSFixedArray<CTexLayer> *this);
};

/* 2437 */
struct /*VFT*/ TSGrowableArray<CTexLayer>_vtbl
{
  const char *(__thiscall *TSBaseArray<CTexLayer>::MemFileName)(struct TSGrowableArray<CTexLayer> *this);
  int (__thiscall *TSBaseArray<CTexLayer>::MemLineNo)(struct TSGrowableArray<CTexLayer> *this);
};

/* 2440 */
struct /*VFT*/ CMaterial_vtbl
{
  void (__thiscall *~CMaterial)(CMaterial *this);
  const char *(__thiscall *CHandleObject::GetObjectName)(struct CMaterial *this);
};

/* 2441 */
struct __cppobj TSBaseArray<CTexLayerShared>
{
  TSBaseArray<CTexLayerShared>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CTexLayerShared *m_data;
};

/* 2442 */
struct /*VFT*/ TSBaseArray<CTexLayerShared>_vtbl
{
  const char *(__thiscall *TSBaseArray<CTexLayerShared>::MemFileName)(TSBaseArray<CTexLayerShared> *this);
  int (__thiscall *TSBaseArray<CTexLayerShared>::MemLineNo)(TSBaseArray<CTexLayerShared> *this);
};

/* 2443 */
struct __cppobj CTmuPassShared
{
  unsigned int transformId;
  unsigned int coordId;
  EGxTextureShader textureShader;
  unsigned int flags;
};

/* 2444 */
struct __cppobj CTexLayerShared
{
  EGxBlend blendMode;
  CTmuPassShared tmuPass[2];
};

/* 2445 */
struct /*VFT*/ TSFixedArray<CTexLayerShared>_vtbl
{
  const char *(__thiscall *TSBaseArray<CTexLayerShared>::MemFileName)(struct TSFixedArray<CTexLayerShared> *this);
  int (__thiscall *TSBaseArray<CTexLayerShared>::MemLineNo)(struct TSFixedArray<CTexLayerShared> *this);
};

/* 2446 */
struct __cppobj TSFixedArray<CTexLayerShared> : TSBaseArray<CTexLayerShared>
{
};

/* 2447 */
struct /*VFT*/ TSGrowableArray<CTexLayerShared>_vtbl
{
  const char *(__thiscall *TSBaseArray<CTexLayerShared>::MemFileName)(struct TSGrowableArray<CTexLayerShared> *this);
  int (__thiscall *TSBaseArray<CTexLayerShared>::MemLineNo)(struct TSGrowableArray<CTexLayerShared> *this);
};

/* 2448 */
struct __cppobj TSGrowableArray<CTexLayerShared> : TSFixedArray<CTexLayerShared>
{
  unsigned int m_chunk;
};

/* 2449 */
struct __cppobj CMaterialShared : CHandleObject
{
  TSGrowableArray<CTexLayerShared> layers;
  int priorityPlane;
};

/* 2450 */
struct /*VFT*/ CMaterialShared_vtbl
{
  void (__thiscall *~CMaterialShared)(CMaterialShared *this);
  const char *(__thiscall *CHandleObject::GetObjectName)(struct CMaterialShared *this);
};

/* 2451 */
struct __cppobj TSCArray<CGeoset,5>
{
  unsigned int m_count;
  CGeoset m_data[5];
};

/* 2452 */
struct __cppobj TSCArray<CGeosetColor,5>
{
  unsigned int m_count;
  CGeosetColor m_data[5];
};

/* 2453 */
struct __cppobj TSCArray<CCustomGeoset,1>
{
  unsigned int m_count;
  CCustomGeoset m_data[1];
};

/* 2454 */
struct __cppobj TSCArray<HMATERIAL__ *,4>
{
  unsigned int m_count;
  HMATERIAL__ *m_data[4];
};

/* 2455 */
struct __cppobj TSCArray<CModelTexture,4>
{
  unsigned int m_count;
  CModelTexture m_data[4];
};

/* 2456 */
struct __cppobj CModelSimple : CModelBase
{
  TSCArray<CGeoset,5> m_geosets;
  TSCArray<CGeosetColor,5> m_geosetColor;
  TSCArray<CCustomGeoset,1> m_custGeosets;
  TSCArray<HMATERIAL__ *,4> m_materials;
  TSCArray<CModelTexture,4> m_textures;
};

/* 2457 */
struct __cppobj TSBaseArray<NTempest::CFacet>
{
  TSBaseArray<NTempest::CFacet>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  NTempest::CFacet *m_data;
};

/* 2458 */
struct /*VFT*/ TSBaseArray<NTempest::CFacet>_vtbl
{
  const char *(__thiscall *TSBaseArray<NTempest::CFacet>::MemFileName)(TSBaseArray<NTempest::CFacet> *this);
  int (__thiscall *TSBaseArray<NTempest::CFacet>::MemLineNo)(TSBaseArray<NTempest::CFacet> *this);
};

/* 2459 */
struct __cppobj NTempest::C4Plane
{
  NTempest::C3Vector n;
  float d;
};

/* 2460 */
struct __cppobj NTempest::CFacet
{
  NTempest::C4Plane plane;
  NTempest::C3Vector vertices[3];
};

/* 2461 */
struct /*VFT*/ TSFixedArray<NTempest::CFacet>_vtbl
{
  const char *(__thiscall *TSBaseArray<NTempest::CFacet>::MemFileName)(struct TSFixedArray<NTempest::CFacet> *this);
  int (__thiscall *TSBaseArray<NTempest::CFacet>::MemLineNo)(struct TSFixedArray<NTempest::CFacet> *this);
};

/* 2462 */
struct __cppobj TSFixedArray<NTempest::CFacet> : TSBaseArray<NTempest::CFacet>
{
};

/* 2463 */
struct /*VFT*/ TSGrowableArray<NTempest::CFacet>_vtbl
{
  const char *(__thiscall *TSBaseArray<NTempest::CFacet>::MemFileName)(struct TSGrowableArray<NTempest::CFacet> *this);
  int (__thiscall *TSBaseArray<NTempest::CFacet>::MemLineNo)(struct TSGrowableArray<NTempest::CFacet> *this);
};

/* 2464 */
struct __cppobj TSGrowableArray<NTempest::CFacet> : TSFixedArray<NTempest::CFacet>
{
  unsigned int m_chunk;
};

/* 2474 */
union $F02A2DC49AFA95CD611BB271BFC3D382
{
  CAsyncObject *asyncObject;
  CModelBase *data;
  HMODEL__ *dupSource;
};

/* 2469 */
struct __cppobj TSLink<CModelModItem>
{
  TSLink<CModelModItem> *m_prevlink;
  CModelModItem *m_next;
};

/* 2472 */
struct __cppobj TSList<CModelModItem,TSGetLink<CModelModItem> >
{
  int m_linkoffset;
  TSLink<CModelModItem> m_terminator;
};

/* 2465 */
struct __cppobj CModel : CHandleObject
{
  $F02A2DC49AFA95CD611BB271BFC3D382 ___u1;
  CModelCreate *createData;
  HMODELSHARED__ *shared;
  EModelLoad state;
  TSList<CModelModItem,TSGetLink<CModelModItem> > modelModQueue;
};

/* 2466 */
struct __cppobj TSLink<CAsyncObject>
{
  TSLink<CAsyncObject> *m_prevlink;
  CAsyncObject *m_next;
};

/* 2467 */
struct __cppobj CAsyncObject
{
  SFile *file;
  unsigned int offset;
  void *buffer;
  unsigned int size;
  void *userArg;
  void (__fastcall *userPostloadCallback)(void *);
  SCritSect *critSect;
  unsigned __int8 isLoaded;
  unsigned __int8 canReorder;
  TSLink<CAsyncObject> link;
};

/* 2468 */
struct __cppobj HMODELSHARED__ : HOBJECT__
{
  int unused;
};

/* 2470 */
struct __cppobj TSLinkedNode<CModelModItem>
{
  TSLink<CModelModItem> m_link;
};

/* 2471 */
struct __cppobj __unaligned __declspec(align(4)) CModelModItem : TSLinkedNode<CModelModItem>
{
  EModelModQ action;
  unsigned __int8 paramData[16];
};

/* 2473 */
struct /*VFT*/ CModel_vtbl
{
  void (__thiscall *CModel::~CModel)(CModel *this);
  const char *(__thiscall *CHandleObject::GetObjectName)(struct CModel *this);
};

/* 2475 */
struct __cppobj TSBaseArray<CMatrixGroup>
{
  TSBaseArray<CMatrixGroup>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CMatrixGroup *m_data;
};

/* 2476 */
struct /*VFT*/ TSBaseArray<CMatrixGroup>_vtbl
{
  const char *(__thiscall *TSBaseArray<CMatrixGroup>::MemFileName)(TSBaseArray<CMatrixGroup> *this);
  int (__thiscall *TSBaseArray<CMatrixGroup>::MemLineNo)(TSBaseArray<CMatrixGroup> *this);
};

/* 2477 */
struct __cppobj CMatrixGroup
{
  unsigned int *matrices;
  unsigned int numMatrices;
  unsigned int index;
  unsigned int leftIndex;
  unsigned int rightIndex;
};

/* 2478 */
struct /*VFT*/ TSFixedArray<CMatrixGroup>_vtbl
{
  const char *(__thiscall *TSBaseArray<CMatrixGroup>::MemFileName)(struct TSFixedArray<CMatrixGroup> *this);
  int (__thiscall *TSBaseArray<CMatrixGroup>::MemLineNo)(struct TSFixedArray<CMatrixGroup> *this);
};

/* 2479 */
struct __cppobj TSFixedArray<CMatrixGroup> : TSBaseArray<CMatrixGroup>
{
};

/* 2480 */
struct /*VFT*/ TSGrowableArray<CMatrixGroup>_vtbl
{
  const char *(__thiscall *TSBaseArray<CMatrixGroup>::MemFileName)(struct TSGrowableArray<CMatrixGroup> *this);
  int (__thiscall *TSBaseArray<CMatrixGroup>::MemLineNo)(struct TSGrowableArray<CMatrixGroup> *this);
};

/* 2481 */
struct __cppobj TSGrowableArray<CMatrixGroup> : TSFixedArray<CMatrixGroup>
{
  unsigned int m_chunk;
};

/* 2482 */
struct __cppobj CMatrixGroupTree
{
  TSGrowableArray<CMatrixGroup> nodes;
  unsigned int numMatrices;
};

/* 2483 */
struct __cppobj TSStackArray<TSGrowableArray<unsigned int> >
{
  unsigned int m_maxCount;
  unsigned int m_count;
  TSGrowableArray<unsigned int> *m_data;
};

/* 2484 */
struct __cppobj TSBaseArray<COpaqueLayer>
{
  TSBaseArray<COpaqueLayer>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  COpaqueLayer *m_data;
};

/* 2485 */
struct /*VFT*/ TSBaseArray<COpaqueLayer>_vtbl
{
  const char *(__thiscall *TSBaseArray<COpaqueLayer>::MemFileName)(TSBaseArray<COpaqueLayer> *this);
  int (__thiscall *TSBaseArray<COpaqueLayer>::MemLineNo)(TSBaseArray<COpaqueLayer> *this);
};

/* 2486 */
struct __cppobj COpaqueLayer
{
  CGeoset *geoUnique;
  CGeosetShared *geoShared;
  HMODEL__ *model;
  unsigned int flags;
  unsigned int firstLayer;
  unsigned int passNumber;
  CTexLayer *layer;
};

/* 2487 */
struct /*VFT*/ TSFixedArray<COpaqueLayer>_vtbl
{
  const char *(__thiscall *TSBaseArray<COpaqueLayer>::MemFileName)(struct TSFixedArray<COpaqueLayer> *this);
  int (__thiscall *TSBaseArray<COpaqueLayer>::MemLineNo)(struct TSFixedArray<COpaqueLayer> *this);
};

/* 2488 */
struct __cppobj TSFixedArray<COpaqueLayer> : TSBaseArray<COpaqueLayer>
{
};

/* 2489 */
struct /*VFT*/ TSGrowableArray<COpaqueLayer>_vtbl
{
  const char *(__thiscall *TSBaseArray<COpaqueLayer>::MemFileName)(struct TSGrowableArray<COpaqueLayer> *this);
  int (__thiscall *TSBaseArray<COpaqueLayer>::MemLineNo)(struct TSGrowableArray<COpaqueLayer> *this);
};

/* 2490 */
struct __cppobj TSGrowableArray<COpaqueLayer> : TSFixedArray<COpaqueLayer>
{
  unsigned int m_chunk;
};

/* 2491 */
struct __cppobj TSBaseArray<CTransparentObject>
{
  TSBaseArray<CTransparentObject>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CTransparentObject *m_data;
};

/* 2492 */
struct /*VFT*/ TSBaseArray<CTransparentObject>_vtbl
{
  const char *(__thiscall *TSBaseArray<CTransparentObject>::MemFileName)(TSBaseArray<CTransparentObject> *this);
  int (__thiscall *TSBaseArray<CTransparentObject>::MemLineNo)(TSBaseArray<CTransparentObject> *this);
};

/* 2493 */
struct $3069AC1DC1E6CDE86A79730358482E6D
{
  HMODEL__ *model;
  CGeoset *geoUnique;
  CGeosetShared *geoShared;
};

/* 2494 */
struct $47093473F867F1DC566DE2C5A347E802
{
  HMODEL__ *model;
  void *object;
};

/* 2495 */
struct $FE66CC8A32395DD5575D9BB7750DE07A
{
  void (__fastcall *callback)(void *, int);
  void *param1;
  int param2;
};

/* 2496 */
union $43A976EDB45239E077F572889F762C5D
{
  $3069AC1DC1E6CDE86A79730358482E6D geo;
  $47093473F867F1DC566DE2C5A347E802 stnd;
  $FE66CC8A32395DD5575D9BB7750DE07A cust;
};

/* 2497 */
struct __cppobj CTransparentObject
{
  SORTABLES sortType;
  int priorityPlane;
  float sqDistFromCamera;
  $43A976EDB45239E077F572889F762C5D ___u3;
};

/* 2498 */
struct /*VFT*/ TSFixedArray<CTransparentObject>_vtbl
{
  const char *(__thiscall *TSBaseArray<CTransparentObject>::MemFileName)(struct TSFixedArray<CTransparentObject> *this);
  int (__thiscall *TSBaseArray<CTransparentObject>::MemLineNo)(struct TSFixedArray<CTransparentObject> *this);
};

/* 2499 */
struct __cppobj TSFixedArray<CTransparentObject> : TSBaseArray<CTransparentObject>
{
};

/* 2500 */
struct /*VFT*/ TSGrowableArray<CTransparentObject>_vtbl
{
  const char *(__thiscall *TSBaseArray<CTransparentObject>::MemFileName)(struct TSGrowableArray<CTransparentObject> *this);
  int (__thiscall *TSBaseArray<CTransparentObject>::MemLineNo)(struct TSGrowableArray<CTransparentObject> *this);
};

/* 2501 */
struct __cppobj TSGrowableArray<CTransparentObject> : TSFixedArray<CTransparentObject>
{
  unsigned int m_chunk;
};

/* 2502 */
struct __cppobj NTempest::CEntity
{
  NTempest::CEntity_vtbl *__vftable /*VFT*/;
};

/* 2503 */
struct /*VFT*/ NTempest::CEntity_vtbl
{
  void (__thiscall *~NTempest::CEntity)(NTempest::CEntity *this);
};

/* 2504 */
struct __cppobj NTempest::CMemBlock : NTempest::CEntity
{
  char *mem_;
  unsigned int size_;
  char *mem;
  unsigned int size;
  const char *filen_;
  int linen_;
};

/* 2505 */
struct /*VFT*/ NTempest::CMemBlock_vtbl
{
  void (__thiscall *NTempest::CMemBlock::~CMemBlock)(NTempest::CMemBlock *this);
};

/* 2506 */
struct __cppobj NTempest::CMemBlockT<COpaqueLayer *> : NTempest::CMemBlock
{
};

/* 2507 */
struct /*VFT*/ NTempest::CMemBlockT<COpaqueLayer *>_vtbl
{
  void (__thiscall *~NTempest::CMemBlockT<COpaqueLayer *>)(NTempest::CMemBlockT<COpaqueLayer *> *this);
};

/* 2508 */
struct __cppobj NTempest::CDynTable<COpaqueLayer *> : NTempest::CMemBlockT<COpaqueLayer *>
{
  unsigned int expand;
  unsigned int iallocated;
  unsigned int iused;
};

/* 2509 */
struct /*VFT*/ NTempest::CDynTable<COpaqueLayer *>_vtbl
{
  void (__thiscall *~NTempest::CDynTable<COpaqueLayer *>)(NTempest::CDynTable<COpaqueLayer *> *this);
};

/* 2510 */
struct __cppobj NTempest::CPriorityQ<COpaqueLayer *,COpaqueLayer> : NTempest::CDynTable<COpaqueLayer *>
{
};

/* 2511 */
struct /*VFT*/ NTempest::CPriorityQ<COpaqueLayer *,COpaqueLayer>_vtbl
{
  void (__thiscall *~NTempest::CPriorityQ<COpaqueLayer *,COpaqueLayer>)(NTempest::CPriorityQ<COpaqueLayer *,COpaqueLayer> *this);
};

/* 2512 */
struct __cppobj NTempest::CDynParms
{
  unsigned int prealloc;
  unsigned int expandf;
};

/* 2513 */
struct __cppobj NTempest::CMemBlockT<CTransparentObject *> : NTempest::CMemBlock
{
};

/* 2514 */
struct /*VFT*/ NTempest::CMemBlockT<CTransparentObject *>_vtbl
{
  void (__thiscall *~NTempest::CMemBlockT<CTransparentObject *>)(NTempest::CMemBlockT<CTransparentObject *> *this);
};

/* 2515 */
struct __cppobj NTempest::CDynTable<CTransparentObject *> : NTempest::CMemBlockT<CTransparentObject *>
{
  unsigned int expand;
  unsigned int iallocated;
  unsigned int iused;
};

/* 2516 */
struct /*VFT*/ NTempest::CDynTable<CTransparentObject *>_vtbl
{
  void (__thiscall *~NTempest::CDynTable<CTransparentObject *>)(NTempest::CDynTable<CTransparentObject *> *this);
};

/* 2517 */
struct __cppobj NTempest::CPriorityQ<CTransparentObject *,CTransparentObject> : NTempest::CDynTable<CTransparentObject *>
{
};

/* 2518 */
struct /*VFT*/ NTempest::CPriorityQ<CTransparentObject *,CTransparentObject>_vtbl
{
  void (__thiscall *~NTempest::CPriorityQ<CTransparentObject *,CTransparentObject>)(NTempest::CPriorityQ<CTransparentObject *,CTransparentObject> *this);
};

/* 2519 */
struct __cppobj NTempest::CMemBlockT<NTempest::CAaSphere> : NTempest::CMemBlock
{
};

/* 2520 */
struct /*VFT*/ NTempest::CMemBlockT<NTempest::CAaSphere>_vtbl
{
  void (__thiscall *~NTempest::CMemBlockT<NTempest::CAaSphere>)(NTempest::CMemBlockT<NTempest::CAaSphere> *this);
};

/* 2521 */
struct __cppobj NTempest::CDynTable<NTempest::CAaSphere> : NTempest::CMemBlockT<NTempest::CAaSphere>
{
  unsigned int expand;
  unsigned int iallocated;
  unsigned int iused;
};

/* 2522 */
struct /*VFT*/ NTempest::CDynTable<NTempest::CAaSphere>_vtbl
{
  void (__thiscall *~NTempest::CDynTable<NTempest::CAaSphere>)(NTempest::CDynTable<NTempest::CAaSphere> *this);
};

/* 2523 */
struct __cppobj NTempest::CMemBlockT<unsigned long> : NTempest::CMemBlock
{
};

/* 2524 */
struct /*VFT*/ NTempest::CMemBlockT<unsigned long>_vtbl
{
  void (__thiscall *~NTempest::CMemBlockT<unsigned long>)(NTempest::CMemBlockT<unsigned long> *this);
};

/* 2525 */
struct __cppobj NTempest::CDynTable<unsigned long> : NTempest::CMemBlockT<unsigned long>
{
  unsigned int expand;
  unsigned int iallocated;
  unsigned int iused;
};

/* 2526 */
struct /*VFT*/ NTempest::CDynTable<unsigned long>_vtbl
{
  void (__thiscall *~NTempest::CDynTable<unsigned long>)(NTempest::CDynTable<unsigned long> *this);
};

/* 2527 */
struct __cppobj NTempest::CMemBlockT<NTempest::C3Vector> : NTempest::CMemBlock
{
};

/* 2528 */
struct /*VFT*/ NTempest::CMemBlockT<NTempest::C3Vector>_vtbl
{
  void (__thiscall *~NTempest::CMemBlockT<NTempest::C3Vector>)(NTempest::CMemBlockT<NTempest::C3Vector> *this);
};

/* 2529 */
struct __cppobj NTempest::CDynTable<NTempest::C3Vector> : NTempest::CMemBlockT<NTempest::C3Vector>
{
  unsigned int expand;
  unsigned int iallocated;
  unsigned int iused;
};

/* 2530 */
struct /*VFT*/ NTempest::CDynTable<NTempest::C3Vector>_vtbl
{
  void (__thiscall *~NTempest::CDynTable<NTempest::C3Vector>)(NTempest::CDynTable<NTempest::C3Vector> *this);
};

/* 2531 */
struct /*VFT*/ TSGrowableArray<CPrimitive>_vtbl
{
  const char *(__thiscall *TSBaseArray<CPrimitive>::MemFileName)(struct TSGrowableArray<CPrimitive> *this);
  int (__thiscall *TSBaseArray<CPrimitive>::MemLineNo)(struct TSGrowableArray<CPrimitive> *this);
};

/* 2532 */
struct __cppobj TSGrowableArray<CPrimitive> : TSFixedArray<CPrimitive>
{
  unsigned int m_chunk;
};

/* 2533 */
struct CModelRenderData
{
  CGeoset *m_geosets;
  CGeosetColor *m_geosetColor;
  unsigned int m_numGeosets;
  HMATERIAL__ **m_materials;
  CModelTexture *m_textures;
  CModel *m_model;
  CModelShared *m_shared;
  unsigned int m_renderFlags;
};

/* 2534 */
struct __cppobj TSCArray<unsigned char,4194304>
{
  unsigned int m_count;
  unsigned __int8 m_data[4194304];
};

/* 2535 */
struct __cppobj TSList<CAsyncObject,TSGetExplicitLink<CAsyncObject> >
{
  int m_linkoffset;
  TSLink<CAsyncObject> m_terminator;
};

/* 2536 */
struct __cppobj TSExplicitList<CAsyncObject,32> : TSList<CAsyncObject,TSGetExplicitLink<CAsyncObject> >
{
};

/* 2537 */
struct __cppobj TSLink<CModelHash>
{
  TSLink<CModelHash> *m_prevlink;
  CModelHash *m_next;
};

/* 2539 */
struct __cppobj CHashKeyFilePath
{
  char path[260];
};

/* 2540 */
struct __cppobj TSHashObject<CModelHash,CHashKeyFilePath>
{
  unsigned int m_hashval;
  TSLink<CModelHash> m_linktoslot;
  TSLink<CModelHash> m_linktofull;
  CHashKeyFilePath m_key;
};

/* 2538 */
struct __cppobj CModelHash : TSHashObject<CModelHash,CHashKeyFilePath>
{
  HMODEL__ *model;
  unsigned int createFlags;
  unsigned int timeStamp;
  TSLink<CModelHash> link;
};

/* 2542 */
struct __cppobj TSList<CModelHash,TSGetExplicitLink<CModelHash> >
{
  int m_linkoffset;
  TSLink<CModelHash> m_terminator;
};

/* 2543 */
struct __cppobj TSExplicitList<CModelHash,-572662307> : TSList<CModelHash,TSGetExplicitLink<CModelHash> >
{
};

/* 2545 */
struct __cppobj TSBaseArray<TSExplicitList<CModelHash,-572662307> >
{
  TSBaseArray<TSExplicitList<CModelHash,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<CModelHash,-572662307> *m_data;
};

/* 2548 */
struct __cppobj TSFixedArray<TSExplicitList<CModelHash,-572662307> > : TSBaseArray<TSExplicitList<CModelHash,-572662307> >
{
};

/* 2550 */
struct __cppobj TSGrowableArray<TSExplicitList<CModelHash,-572662307> > : TSFixedArray<TSExplicitList<CModelHash,-572662307> >
{
  unsigned int m_chunk;
};

/* 2541 */
struct __cppobj TSHashTable<CModelHash,CHashKeyFilePath>
{
  TSHashTable<CModelHash,CHashKeyFilePath>_vtbl *__vftable /*VFT*/;
  TSExplicitList<CModelHash,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<CModelHash,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 2544 */
struct /*VFT*/ TSHashTable<CModelHash,CHashKeyFilePath>_vtbl
{
  void (__thiscall *TSHashTable<CModelHash,CHashKeyFilePath>::InternalDelete)(TSHashTable<CModelHash,CHashKeyFilePath> *this, CModelHash *);
  CModelHash *(__thiscall *TSHashTable<CModelHash,CHashKeyFilePath>::InternalNew)(TSHashTable<CModelHash,CHashKeyFilePath> *this, TSExplicitList<CModelHash,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<CModelHash,CHashKeyFilePath>)(TSHashTable<CModelHash,CHashKeyFilePath> *this);
  void (__thiscall *TSHashTable<CModelHash,CHashKeyFilePath>::Destroy)(TSHashTable<CModelHash,CHashKeyFilePath> *this);
};

/* 2546 */
struct /*VFT*/ TSBaseArray<TSExplicitList<CModelHash,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CModelHash,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<CModelHash,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CModelHash,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<CModelHash,-572662307> > *this);
};

/* 2547 */
struct /*VFT*/ TSFixedArray<TSExplicitList<CModelHash,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CModelHash,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<CModelHash,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CModelHash,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<CModelHash,-572662307> > *this);
};

/* 2549 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<CModelHash,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CModelHash,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<CModelHash,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CModelHash,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<CModelHash,-572662307> > *this);
};

/* 2551 */
struct __cppobj TSLink<TSHashObjectChunk<CModelHash,CHashKeyFilePath> >
{
  TSLink<TSHashObjectChunk<CModelHash,CHashKeyFilePath> > *m_prevlink;
  TSHashObjectChunk<CModelHash,CHashKeyFilePath> *m_next;
};

/* 2552 */
struct __cppobj TSBaseArray<CModelHash>
{
  TSBaseArray<CModelHash>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CModelHash *m_data;
};

/* 2555 */
struct __cppobj TSFixedArray<CModelHash> : TSBaseArray<CModelHash>
{
};

/* 2557 */
struct __cppobj TSGrowableArray<CModelHash> : TSFixedArray<CModelHash>
{
  unsigned int m_chunk;
};

/* 2558 */
struct __cppobj __unaligned __declspec(align(4)) TSHashObjectChunk<CModelHash,CHashKeyFilePath>
{
  TSGrowableArray<CModelHash> m_array;
  TSLink<TSHashObjectChunk<CModelHash,CHashKeyFilePath> > m_link;
};

/* 2553 */
struct /*VFT*/ TSBaseArray<CModelHash>_vtbl
{
  const char *(__thiscall *TSBaseArray<CModelHash>::MemFileName)(TSBaseArray<CModelHash> *this);
  int (__thiscall *TSBaseArray<CModelHash>::MemLineNo)(TSBaseArray<CModelHash> *this);
};

/* 2554 */
struct /*VFT*/ TSFixedArray<CModelHash>_vtbl
{
  const char *(__thiscall *TSBaseArray<CModelHash>::MemFileName)(struct TSFixedArray<CModelHash> *this);
  int (__thiscall *TSBaseArray<CModelHash>::MemLineNo)(struct TSFixedArray<CModelHash> *this);
};

/* 2556 */
struct /*VFT*/ TSGrowableArray<CModelHash>_vtbl
{
  const char *(__thiscall *TSBaseArray<CModelHash>::MemFileName)(struct TSGrowableArray<CModelHash> *this);
  int (__thiscall *TSBaseArray<CModelHash>::MemLineNo)(struct TSGrowableArray<CModelHash> *this);
};

/* 2559 */
struct __cppobj TSList<TSHashObjectChunk<CModelHash,CHashKeyFilePath>,TSGetExplicitLink<TSHashObjectChunk<CModelHash,CHashKeyFilePath> > >
{
  int m_linkoffset;
  TSLink<TSHashObjectChunk<CModelHash,CHashKeyFilePath> > m_terminator;
};

/* 2560 */
struct __cppobj TSExplicitList<TSHashObjectChunk<CModelHash,CHashKeyFilePath>,20> : TSList<TSHashObjectChunk<CModelHash,CHashKeyFilePath>,TSGetExplicitLink<TSHashObjectChunk<CModelHash,CHashKeyFilePath> > >
{
};

/* 2561 */
struct __cppobj TSHashTableReuse<CModelHash,CHashKeyFilePath,1> : TSHashTable<CModelHash,CHashKeyFilePath>
{
  TSExplicitList<CModelHash,-572662307> m_reuseList;
  unsigned int m_chunkSize;
  TSExplicitList<TSHashObjectChunk<CModelHash,CHashKeyFilePath>,20> m_chunkList;
};

/* 2562 */
struct /*VFT*/ TSHashTableReuse<CModelHash,CHashKeyFilePath,1>_vtbl
{
  void (__thiscall *TSHashTableReuse<CModelHash,CHashKeyFilePath,1>::Destroy)(TSHashTableReuse<CModelHash,CHashKeyFilePath,1> *this);
  CModelHash *(__thiscall *TSHashTable<CModelHash,CHashKeyFilePath>::InternalNew)(struct TSHashTableReuse<CModelHash,CHashKeyFilePath,1> *this, TSExplicitList<CModelHash,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTableReuse<CModelHash,CHashKeyFilePath,1>)(struct TSHashTableReuse<CModelHash,CHashKeyFilePath,1> *this);
  void (__thiscall *TSHashTable<CModelHash,CHashKeyFilePath>::Destroy)(struct TSHashTableReuse<CModelHash,CHashKeyFilePath,1> *this);
};

/* 2563 */
struct __cppobj TSExplicitList<CModelHash,292> : TSList<CModelHash,TSGetExplicitLink<CModelHash> >
{
};

/* 2564 */
struct __cppobj TSLink<SoundFileObjectCacheNode>
{
  TSLink<SoundFileObjectCacheNode> *m_prevlink;
  SoundFileObjectCacheNode *m_next;
};

/* 2566 */
struct __cppobj __declspec(align(4)) TSHashObject<SoundFileObjectCacheNode,HASHKEY_NONE>
{
  unsigned int m_hashval;
  TSLink<SoundFileObjectCacheNode> m_linktoslot;
  TSLink<SoundFileObjectCacheNode> m_linktofull;
  HASHKEY_NONE m_key;
};

/* 2565 */
struct __cppobj SoundFileObjectCacheNode : TSHashObject<SoundFileObjectCacheNode,HASHKEY_NONE>
{
  SoundFileObject *object;
};

/* 2567 */
struct SoundFileInstance
{
  unsigned __int8 inUse;
  int currentOffset;
};

/* 2568 */
struct __cppobj TSLink<SoundFileObject>
{
  TSLink<SoundFileObject> *m_prevlink;
  SoundFileObject *m_next;
};

/* 2569 */
struct __cppobj SoundFileObject
{
  char filename[260];
  unsigned int hash;
  SFile *file;
  unsigned int baseHandle;
  unsigned int size;
  unsigned int openInstances;
  unsigned int bigFileCacheBlockOffset;
  SoundFileInstance instances[16];
  TSLink<SoundFileObject> link;
};

/* 2571 */
struct __cppobj TSList<SoundFileObjectCacheNode,TSGetExplicitLink<SoundFileObjectCacheNode> >
{
  int m_linkoffset;
  TSLink<SoundFileObjectCacheNode> m_terminator;
};

/* 2572 */
struct __cppobj TSExplicitList<SoundFileObjectCacheNode,-572662307> : TSList<SoundFileObjectCacheNode,TSGetExplicitLink<SoundFileObjectCacheNode> >
{
};

/* 2574 */
struct __cppobj TSBaseArray<TSExplicitList<SoundFileObjectCacheNode,-572662307> >
{
  TSBaseArray<TSExplicitList<SoundFileObjectCacheNode,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<SoundFileObjectCacheNode,-572662307> *m_data;
};

/* 2577 */
struct __cppobj TSFixedArray<TSExplicitList<SoundFileObjectCacheNode,-572662307> > : TSBaseArray<TSExplicitList<SoundFileObjectCacheNode,-572662307> >
{
};

/* 2579 */
struct __cppobj TSGrowableArray<TSExplicitList<SoundFileObjectCacheNode,-572662307> > : TSFixedArray<TSExplicitList<SoundFileObjectCacheNode,-572662307> >
{
  unsigned int m_chunk;
};

/* 2570 */
struct __cppobj TSHashTable<SoundFileObjectCacheNode,HASHKEY_NONE>
{
  TSHashTable<SoundFileObjectCacheNode,HASHKEY_NONE>_vtbl *__vftable /*VFT*/;
  TSExplicitList<SoundFileObjectCacheNode,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<SoundFileObjectCacheNode,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 2573 */
struct /*VFT*/ TSHashTable<SoundFileObjectCacheNode,HASHKEY_NONE>_vtbl
{
  void (__thiscall *TSHashTable<SoundFileObjectCacheNode,HASHKEY_NONE>::InternalDelete)(TSHashTable<SoundFileObjectCacheNode,HASHKEY_NONE> *this, SoundFileObjectCacheNode *);
  SoundFileObjectCacheNode *(__thiscall *TSHashTable<SoundFileObjectCacheNode,HASHKEY_NONE>::InternalNew)(TSHashTable<SoundFileObjectCacheNode,HASHKEY_NONE> *this, TSExplicitList<SoundFileObjectCacheNode,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<SoundFileObjectCacheNode,HASHKEY_NONE>)(TSHashTable<SoundFileObjectCacheNode,HASHKEY_NONE> *this);
  void (__thiscall *TSHashTable<SoundFileObjectCacheNode,HASHKEY_NONE>::Destroy)(TSHashTable<SoundFileObjectCacheNode,HASHKEY_NONE> *this);
};

/* 2575 */
struct /*VFT*/ TSBaseArray<TSExplicitList<SoundFileObjectCacheNode,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<SoundFileObjectCacheNode,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<SoundFileObjectCacheNode,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<SoundFileObjectCacheNode,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<SoundFileObjectCacheNode,-572662307> > *this);
};

/* 2576 */
struct /*VFT*/ TSFixedArray<TSExplicitList<SoundFileObjectCacheNode,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<SoundFileObjectCacheNode,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<SoundFileObjectCacheNode,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<SoundFileObjectCacheNode,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<SoundFileObjectCacheNode,-572662307> > *this);
};

/* 2578 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<SoundFileObjectCacheNode,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<SoundFileObjectCacheNode,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<SoundFileObjectCacheNode,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<SoundFileObjectCacheNode,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<SoundFileObjectCacheNode,-572662307> > *this);
};

/* 2580 */
struct __cppobj TSLink<TSHashObjectChunk<SoundFileObjectCacheNode,HASHKEY_NONE> >
{
  TSLink<TSHashObjectChunk<SoundFileObjectCacheNode,HASHKEY_NONE> > *m_prevlink;
  TSHashObjectChunk<SoundFileObjectCacheNode,HASHKEY_NONE> *m_next;
};

/* 2581 */
struct __cppobj TSBaseArray<SoundFileObjectCacheNode>
{
  TSBaseArray<SoundFileObjectCacheNode>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  SoundFileObjectCacheNode *m_data;
};

/* 2584 */
struct __cppobj TSFixedArray<SoundFileObjectCacheNode> : TSBaseArray<SoundFileObjectCacheNode>
{
};

/* 2586 */
struct __cppobj TSGrowableArray<SoundFileObjectCacheNode> : TSFixedArray<SoundFileObjectCacheNode>
{
  unsigned int m_chunk;
};

/* 2587 */
struct __cppobj __unaligned __declspec(align(4)) TSHashObjectChunk<SoundFileObjectCacheNode,HASHKEY_NONE>
{
  TSGrowableArray<SoundFileObjectCacheNode> m_array;
  TSLink<TSHashObjectChunk<SoundFileObjectCacheNode,HASHKEY_NONE> > m_link;
};

/* 2582 */
struct /*VFT*/ TSBaseArray<SoundFileObjectCacheNode>_vtbl
{
  const char *(__thiscall *TSBaseArray<SoundFileObjectCacheNode>::MemFileName)(TSBaseArray<SoundFileObjectCacheNode> *this);
  int (__thiscall *TSBaseArray<SoundFileObjectCacheNode>::MemLineNo)(TSBaseArray<SoundFileObjectCacheNode> *this);
};

/* 2583 */
struct /*VFT*/ TSFixedArray<SoundFileObjectCacheNode>_vtbl
{
  const char *(__thiscall *TSBaseArray<SoundFileObjectCacheNode>::MemFileName)(struct TSFixedArray<SoundFileObjectCacheNode> *this);
  int (__thiscall *TSBaseArray<SoundFileObjectCacheNode>::MemLineNo)(struct TSFixedArray<SoundFileObjectCacheNode> *this);
};

/* 2585 */
struct /*VFT*/ TSGrowableArray<SoundFileObjectCacheNode>_vtbl
{
  const char *(__thiscall *TSBaseArray<SoundFileObjectCacheNode>::MemFileName)(struct TSGrowableArray<SoundFileObjectCacheNode> *this);
  int (__thiscall *TSBaseArray<SoundFileObjectCacheNode>::MemLineNo)(struct TSGrowableArray<SoundFileObjectCacheNode> *this);
};

/* 2588 */
struct __cppobj TSList<TSHashObjectChunk<SoundFileObjectCacheNode,HASHKEY_NONE>,TSGetExplicitLink<TSHashObjectChunk<SoundFileObjectCacheNode,HASHKEY_NONE> > >
{
  int m_linkoffset;
  TSLink<TSHashObjectChunk<SoundFileObjectCacheNode,HASHKEY_NONE> > m_terminator;
};

/* 2589 */
struct __cppobj TSExplicitList<TSHashObjectChunk<SoundFileObjectCacheNode,HASHKEY_NONE>,20> : TSList<TSHashObjectChunk<SoundFileObjectCacheNode,HASHKEY_NONE>,TSGetExplicitLink<TSHashObjectChunk<SoundFileObjectCacheNode,HASHKEY_NONE> > >
{
};

/* 2590 */
struct __cppobj TSHashTableReuse<SoundFileObjectCacheNode,HASHKEY_NONE,1> : TSHashTable<SoundFileObjectCacheNode,HASHKEY_NONE>
{
  TSExplicitList<SoundFileObjectCacheNode,-572662307> m_reuseList;
  unsigned int m_chunkSize;
  TSExplicitList<TSHashObjectChunk<SoundFileObjectCacheNode,HASHKEY_NONE>,20> m_chunkList;
};

/* 2591 */
struct /*VFT*/ TSHashTableReuse<SoundFileObjectCacheNode,HASHKEY_NONE,1>_vtbl
{
  void (__thiscall *TSHashTableReuse<SoundFileObjectCacheNode,HASHKEY_NONE,1>::Destroy)(TSHashTableReuse<SoundFileObjectCacheNode,HASHKEY_NONE,1> *this);
  SoundFileObjectCacheNode *(__thiscall *TSHashTable<SoundFileObjectCacheNode,HASHKEY_NONE>::InternalNew)(struct TSHashTableReuse<SoundFileObjectCacheNode,HASHKEY_NONE,1> *this, TSExplicitList<SoundFileObjectCacheNode,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTableReuse<SoundFileObjectCacheNode,HASHKEY_NONE,1>)(struct TSHashTableReuse<SoundFileObjectCacheNode,HASHKEY_NONE,1> *this);
  void (__thiscall *TSHashTable<SoundFileObjectCacheNode,HASHKEY_NONE>::Destroy)(struct TSHashTableReuse<SoundFileObjectCacheNode,HASHKEY_NONE,1> *this);
};

/* 2592 */
struct __cppobj TSBaseArray<SoundFileObject>
{
  TSBaseArray<SoundFileObject>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  SoundFileObject *m_data;
};

/* 2593 */
struct /*VFT*/ TSBaseArray<SoundFileObject>_vtbl
{
  const char *(__thiscall *TSBaseArray<SoundFileObject>::MemFileName)(TSBaseArray<SoundFileObject> *this);
  int (__thiscall *TSBaseArray<SoundFileObject>::MemLineNo)(TSBaseArray<SoundFileObject> *this);
};

/* 2594 */
struct /*VFT*/ TSFixedArray<SoundFileObject>_vtbl
{
  const char *(__thiscall *TSBaseArray<SoundFileObject>::MemFileName)(struct TSFixedArray<SoundFileObject> *this);
  int (__thiscall *TSBaseArray<SoundFileObject>::MemLineNo)(struct TSFixedArray<SoundFileObject> *this);
};

/* 2595 */
struct __cppobj TSFixedArray<SoundFileObject> : TSBaseArray<SoundFileObject>
{
};

/* 2596 */
struct __cppobj TSLink<SoundFileDataCacheBlock>
{
  TSLink<SoundFileDataCacheBlock> *m_prevlink;
  SoundFileDataCacheBlock *m_next;
};

/* 2598 */
struct __cppobj HASHKEY_LONGLONG
{
  __int64 m_key;
};

/* 2599 */
struct __cppobj TSHashObject<SoundFileDataCacheBlock,HASHKEY_LONGLONG>
{
  unsigned int m_hashval;
  TSLink<SoundFileDataCacheBlock> m_linktoslot;
  TSLink<SoundFileDataCacheBlock> m_linktofull;
  HASHKEY_LONGLONG m_key;
};

/* 2597 */
struct __cppobj SoundFileDataCacheBlock : TSHashObject<SoundFileDataCacheBlock,HASHKEY_LONGLONG>
{
  TSLink<SoundFileDataCacheBlock> link;
  unsigned __int8 data[4096];
};

/* 2601 */
struct __cppobj TSList<SoundFileDataCacheBlock,TSGetExplicitLink<SoundFileDataCacheBlock> >
{
  int m_linkoffset;
  TSLink<SoundFileDataCacheBlock> m_terminator;
};

/* 2602 */
struct __cppobj TSExplicitList<SoundFileDataCacheBlock,-572662307> : TSList<SoundFileDataCacheBlock,TSGetExplicitLink<SoundFileDataCacheBlock> >
{
};

/* 2604 */
struct __cppobj TSBaseArray<TSExplicitList<SoundFileDataCacheBlock,-572662307> >
{
  TSBaseArray<TSExplicitList<SoundFileDataCacheBlock,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<SoundFileDataCacheBlock,-572662307> *m_data;
};

/* 2607 */
struct __cppobj TSFixedArray<TSExplicitList<SoundFileDataCacheBlock,-572662307> > : TSBaseArray<TSExplicitList<SoundFileDataCacheBlock,-572662307> >
{
};

/* 2609 */
struct __cppobj TSGrowableArray<TSExplicitList<SoundFileDataCacheBlock,-572662307> > : TSFixedArray<TSExplicitList<SoundFileDataCacheBlock,-572662307> >
{
  unsigned int m_chunk;
};

/* 2600 */
struct __cppobj TSHashTable<SoundFileDataCacheBlock,HASHKEY_LONGLONG>
{
  TSHashTable<SoundFileDataCacheBlock,HASHKEY_LONGLONG>_vtbl *__vftable /*VFT*/;
  TSExplicitList<SoundFileDataCacheBlock,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<SoundFileDataCacheBlock,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 2603 */
struct /*VFT*/ TSHashTable<SoundFileDataCacheBlock,HASHKEY_LONGLONG>_vtbl
{
  void (__thiscall *TSHashTable<SoundFileDataCacheBlock,HASHKEY_LONGLONG>::InternalDelete)(TSHashTable<SoundFileDataCacheBlock,HASHKEY_LONGLONG> *this, SoundFileDataCacheBlock *);
  SoundFileDataCacheBlock *(__thiscall *TSHashTable<SoundFileDataCacheBlock,HASHKEY_LONGLONG>::InternalNew)(TSHashTable<SoundFileDataCacheBlock,HASHKEY_LONGLONG> *this, TSExplicitList<SoundFileDataCacheBlock,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<SoundFileDataCacheBlock,HASHKEY_LONGLONG>)(TSHashTable<SoundFileDataCacheBlock,HASHKEY_LONGLONG> *this);
  void (__thiscall *TSHashTable<SoundFileDataCacheBlock,HASHKEY_LONGLONG>::Destroy)(TSHashTable<SoundFileDataCacheBlock,HASHKEY_LONGLONG> *this);
};

/* 2605 */
struct /*VFT*/ TSBaseArray<TSExplicitList<SoundFileDataCacheBlock,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<SoundFileDataCacheBlock,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<SoundFileDataCacheBlock,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<SoundFileDataCacheBlock,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<SoundFileDataCacheBlock,-572662307> > *this);
};

/* 2606 */
struct /*VFT*/ TSFixedArray<TSExplicitList<SoundFileDataCacheBlock,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<SoundFileDataCacheBlock,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<SoundFileDataCacheBlock,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<SoundFileDataCacheBlock,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<SoundFileDataCacheBlock,-572662307> > *this);
};

/* 2608 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<SoundFileDataCacheBlock,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<SoundFileDataCacheBlock,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<SoundFileDataCacheBlock,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<SoundFileDataCacheBlock,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<SoundFileDataCacheBlock,-572662307> > *this);
};

/* 2610 */
struct __cppobj TSLink<TSHashObjectChunk<SoundFileDataCacheBlock,HASHKEY_LONGLONG> >
{
  TSLink<TSHashObjectChunk<SoundFileDataCacheBlock,HASHKEY_LONGLONG> > *m_prevlink;
  TSHashObjectChunk<SoundFileDataCacheBlock,HASHKEY_LONGLONG> *m_next;
};

/* 2611 */
struct __cppobj TSBaseArray<SoundFileDataCacheBlock>
{
  TSBaseArray<SoundFileDataCacheBlock>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  SoundFileDataCacheBlock *m_data;
};

/* 2614 */
struct __cppobj TSFixedArray<SoundFileDataCacheBlock> : TSBaseArray<SoundFileDataCacheBlock>
{
};

/* 2616 */
struct __cppobj TSGrowableArray<SoundFileDataCacheBlock> : TSFixedArray<SoundFileDataCacheBlock>
{
  unsigned int m_chunk;
};

/* 2617 */
struct __cppobj __unaligned __declspec(align(4)) TSHashObjectChunk<SoundFileDataCacheBlock,HASHKEY_LONGLONG>
{
  TSGrowableArray<SoundFileDataCacheBlock> m_array;
  TSLink<TSHashObjectChunk<SoundFileDataCacheBlock,HASHKEY_LONGLONG> > m_link;
};

/* 2612 */
struct /*VFT*/ TSBaseArray<SoundFileDataCacheBlock>_vtbl
{
  const char *(__thiscall *TSBaseArray<SoundFileDataCacheBlock>::MemFileName)(TSBaseArray<SoundFileDataCacheBlock> *this);
  int (__thiscall *TSBaseArray<SoundFileDataCacheBlock>::MemLineNo)(TSBaseArray<SoundFileDataCacheBlock> *this);
};

/* 2613 */
struct /*VFT*/ TSFixedArray<SoundFileDataCacheBlock>_vtbl
{
  const char *(__thiscall *TSBaseArray<SoundFileDataCacheBlock>::MemFileName)(struct TSFixedArray<SoundFileDataCacheBlock> *this);
  int (__thiscall *TSBaseArray<SoundFileDataCacheBlock>::MemLineNo)(struct TSFixedArray<SoundFileDataCacheBlock> *this);
};

/* 2615 */
struct /*VFT*/ TSGrowableArray<SoundFileDataCacheBlock>_vtbl
{
  const char *(__thiscall *TSBaseArray<SoundFileDataCacheBlock>::MemFileName)(struct TSGrowableArray<SoundFileDataCacheBlock> *this);
  int (__thiscall *TSBaseArray<SoundFileDataCacheBlock>::MemLineNo)(struct TSGrowableArray<SoundFileDataCacheBlock> *this);
};

/* 2618 */
struct __cppobj TSList<TSHashObjectChunk<SoundFileDataCacheBlock,HASHKEY_LONGLONG>,TSGetExplicitLink<TSHashObjectChunk<SoundFileDataCacheBlock,HASHKEY_LONGLONG> > >
{
  int m_linkoffset;
  TSLink<TSHashObjectChunk<SoundFileDataCacheBlock,HASHKEY_LONGLONG> > m_terminator;
};

/* 2619 */
struct __cppobj TSExplicitList<TSHashObjectChunk<SoundFileDataCacheBlock,HASHKEY_LONGLONG>,20> : TSList<TSHashObjectChunk<SoundFileDataCacheBlock,HASHKEY_LONGLONG>,TSGetExplicitLink<TSHashObjectChunk<SoundFileDataCacheBlock,HASHKEY_LONGLONG> > >
{
};

/* 2620 */
struct __cppobj TSHashTableReuse<SoundFileDataCacheBlock,HASHKEY_LONGLONG,1> : TSHashTable<SoundFileDataCacheBlock,HASHKEY_LONGLONG>
{
  TSExplicitList<SoundFileDataCacheBlock,-572662307> m_reuseList;
  unsigned int m_chunkSize;
  TSExplicitList<TSHashObjectChunk<SoundFileDataCacheBlock,HASHKEY_LONGLONG>,20> m_chunkList;
};

/* 2621 */
struct /*VFT*/ TSHashTableReuse<SoundFileDataCacheBlock,HASHKEY_LONGLONG,1>_vtbl
{
  void (__thiscall *TSHashTableReuse<SoundFileDataCacheBlock,HASHKEY_LONGLONG,1>::Destroy)(TSHashTableReuse<SoundFileDataCacheBlock,HASHKEY_LONGLONG,1> *this);
  SoundFileDataCacheBlock *(__thiscall *TSHashTable<SoundFileDataCacheBlock,HASHKEY_LONGLONG>::InternalNew)(struct TSHashTableReuse<SoundFileDataCacheBlock,HASHKEY_LONGLONG,1> *this, TSExplicitList<SoundFileDataCacheBlock,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTableReuse<SoundFileDataCacheBlock,HASHKEY_LONGLONG,1>)(struct TSHashTableReuse<SoundFileDataCacheBlock,HASHKEY_LONGLONG,1> *this);
  void (__thiscall *TSHashTable<SoundFileDataCacheBlock,HASHKEY_LONGLONG>::Destroy)(struct TSHashTableReuse<SoundFileDataCacheBlock,HASHKEY_LONGLONG,1> *this);
};

/* 2622 */
struct __cppobj TSExplicitList<SoundFileDataCacheBlock,32> : TSList<SoundFileDataCacheBlock,TSGetExplicitLink<SoundFileDataCacheBlock> >
{
};

/* 2623 */
struct __cppobj TSList<SoundFileObject,TSGetExplicitLink<SoundFileObject> >
{
  int m_linkoffset;
  TSLink<SoundFileObject> m_terminator;
};

/* 2624 */
struct __cppobj TSExplicitList<SoundFileObject,412> : TSList<SoundFileObject,TSGetExplicitLink<SoundFileObject> >
{
};

/* 2625 */
struct __cppobj SoundFileCache
{
};

/* 2626 */
struct __cppobj TSBaseArray<W32Joystick>
{
  TSBaseArray<W32Joystick>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  W32Joystick *m_data;
};

/* 2627 */
struct /*VFT*/ TSBaseArray<W32Joystick>_vtbl
{
  const char *(__thiscall *TSBaseArray<W32Joystick>::MemFileName)(TSBaseArray<W32Joystick> *this);
  int (__thiscall *TSBaseArray<W32Joystick>::MemLineNo)(TSBaseArray<W32Joystick> *this);
};

/* 2628 */
struct W32Joystick::_transaxis
{
  int offset;
  float scale;
};

/* 2629 */
struct W32Joystick
{
  unsigned int id;
  W32Joystick::_transaxis transaxis[6];
  tagJOYCAPSA caps;
};

/* 2630 */
struct /*VFT*/ TSFixedArray<W32Joystick>_vtbl
{
  const char *(__thiscall *TSBaseArray<W32Joystick>::MemFileName)(struct TSFixedArray<W32Joystick> *this);
  int (__thiscall *TSBaseArray<W32Joystick>::MemLineNo)(struct TSFixedArray<W32Joystick> *this);
};

/* 2631 */
struct __cppobj TSFixedArray<W32Joystick> : TSBaseArray<W32Joystick>
{
};

/* 2632 */
struct /*VFT*/ TSGrowableArray<W32Joystick>_vtbl
{
  const char *(__thiscall *TSBaseArray<W32Joystick>::MemFileName)(struct TSGrowableArray<W32Joystick> *this);
  int (__thiscall *TSBaseArray<W32Joystick>::MemLineNo)(struct TSGrowableArray<W32Joystick> *this);
};

/* 2633 */
struct __cppobj TSGrowableArray<W32Joystick> : TSFixedArray<W32Joystick>
{
  unsigned int m_chunk;
};

/* 2634 */
struct __cppobj IDirectMusicLoader : IUnknown
{
};

/* 2635 */
struct _DMUS_VERSION
{
  unsigned int dwVersionMS;
  unsigned int dwVersionLS;
};

/* 2636 */
struct _DMUS_OBJECTDESC
{
  unsigned int dwSize;
  unsigned int dwValidData;
  _GUID guidObject;
  _GUID guidClass;
  _FILETIME ftDate;
  _DMUS_VERSION vVersion;
  unsigned __int16 wszName[64];
  unsigned __int16 wszCategory[64];
  unsigned __int16 wszFileName[260];
  __int64 llMemLength;
  unsigned __int8 *pbMemData;
  IStream *pStream;
};

/* 2637 */
struct __cppobj IDirectMusicObject : IUnknown
{
};

/* 2638 */
struct /*VFT*/ IDirectMusicObject_vtbl
{
  unsigned int (__stdcall *Release)(IDirectMusicObject *this);
  unsigned int (__stdcall *AddRef)(struct IDirectMusicObject *);
  unsigned int (__stdcall *Release)(struct IDirectMusicObject *);
  int (__stdcall *GetDescriptor)(IDirectMusicObject *this, _DMUS_OBJECTDESC *);
  int (__stdcall *SetDescriptor)(IDirectMusicObject *this, _DMUS_OBJECTDESC *);
  int (__stdcall *ParseDescriptor)(IDirectMusicObject *this, IStream *, _DMUS_OBJECTDESC *);
};

/* 2639 */
struct /*VFT*/ IDirectMusicLoader_vtbl
{
  unsigned int (__stdcall *Release)(IDirectMusicLoader *this);
  unsigned int (__stdcall *AddRef)(struct IDirectMusicLoader *);
  unsigned int (__stdcall *Release)(struct IDirectMusicLoader *);
  int (__stdcall *GetObjectA)(IDirectMusicLoader *this, _DMUS_OBJECTDESC *, const _GUID *, void **);
  int (__stdcall *SetObject)(IDirectMusicLoader *this, _DMUS_OBJECTDESC *);
  int (__stdcall *SetSearchDirectory)(IDirectMusicLoader *this, const _GUID *, unsigned __int16 *, int);
  int (__stdcall *ScanDirectory)(IDirectMusicLoader *this, const _GUID *, unsigned __int16 *, unsigned __int16 *);
  int (__stdcall *CacheObject)(IDirectMusicLoader *this, IDirectMusicObject *);
  int (__stdcall *ReleaseObject)(IDirectMusicLoader *this, IDirectMusicObject *);
  int (__stdcall *ClearCache)(IDirectMusicLoader *this, const _GUID *);
  int (__stdcall *EnableCache)(IDirectMusicLoader *this, const _GUID *, int);
  int (__stdcall *EnumObject)(IDirectMusicLoader *this, const _GUID *, unsigned int, _DMUS_OBJECTDESC *);
};

/* 2640 */
struct __cppobj CMyLoader : IDirectMusicLoader
{
  int m_cRef;
  unsigned __int16 m_wzSearchPath[260];
};

/* 2641 */
struct /*VFT*/ CMyLoader_vtbl
{
  int (__stdcall *CMyLoader::EnumObject)(CMyLoader *this, const _GUID *, unsigned int, _DMUS_OBJECTDESC *);
  unsigned int (__stdcall *AddRef)(struct CMyLoader *);
  unsigned int (__stdcall *Release)(struct CMyLoader *);
  int (__stdcall *GetObjectA)(struct CMyLoader *this, _DMUS_OBJECTDESC *, const _GUID *, void **);
  int (__stdcall *SetObject)(struct CMyLoader *this, _DMUS_OBJECTDESC *);
  int (__stdcall *SetSearchDirectory)(struct CMyLoader *this, const _GUID *, unsigned __int16 *, int);
  int (__stdcall *ScanDirectory)(struct CMyLoader *this, const _GUID *, unsigned __int16 *, unsigned __int16 *);
  int (__stdcall *CacheObject)(struct CMyLoader *this, IDirectMusicObject *);
  int (__stdcall *ReleaseObject)(struct CMyLoader *this, IDirectMusicObject *);
  int (__stdcall *ClearCache)(struct CMyLoader *this, const _GUID *);
  int (__stdcall *EnableCache)(struct CMyLoader *this, const _GUID *, int);
  int (__stdcall *EnumObject)(struct CMyLoader *this, const _GUID *, unsigned int, _DMUS_OBJECTDESC *);
};

/* 2642 */
struct __cppobj IDirectMusicPerformance : IUnknown
{
};

/* 2643 */
struct __cppobj IDirectMusic : IUnknown
{
};

/* 2644 */
struct _DMUS_PORTCAPS
{
  unsigned int dwSize;
  unsigned int dwFlags;
  _GUID guidPort;
  unsigned int dwClass;
  unsigned int dwType;
  unsigned int dwMemorySize;
  unsigned int dwMaxChannelGroups;
  unsigned int dwMaxVoices;
  unsigned int dwMaxAudioChannels;
  unsigned int dwEffectFlags;
  unsigned __int16 wszDescription[128];
};

/* 2645 */
struct _DMUS_BUFFERDESC
{
  unsigned int dwSize;
  unsigned int dwFlags;
  _GUID guidBufferFormat;
  unsigned int cbBuffer;
};

/* 2646 */
struct __cppobj IDirectMusicBuffer : IUnknown
{
};

/* 2647 */
struct /*VFT*/ IDirectMusicBuffer_vtbl
{
  unsigned int (__stdcall *Release)(struct IDirectMusicBuffer *this);
  unsigned int (__stdcall *AddRef)(struct IDirectMusicBuffer *);
  unsigned int (__stdcall *Release)(struct IDirectMusicBuffer *);
  int (__stdcall *Flush)(struct IDirectMusicBuffer *this);
  int (__stdcall *TotalTime)(struct IDirectMusicBuffer *this, __int64 *);
  int (__stdcall *PackStructured)(struct IDirectMusicBuffer *this, __int64, unsigned int, unsigned int);
  int (__stdcall *PackUnstructured)(struct IDirectMusicBuffer *this, __int64, unsigned int, unsigned int, unsigned __int8 *);
  int (__stdcall *ResetReadPtr)(struct IDirectMusicBuffer *this);
  int (__stdcall *GetNextEvent)(struct IDirectMusicBuffer *this, __int64 *, unsigned int *, unsigned int *, unsigned __int8 **);
  int (__stdcall *GetRawBufferPtr)(struct IDirectMusicBuffer *this, unsigned __int8 **);
  int (__stdcall *GetStartTime)(struct IDirectMusicBuffer *this, __int64 *);
  int (__stdcall *GetUsedBytes)(struct IDirectMusicBuffer *this, unsigned int *);
  int (__stdcall *GetMaxBytes)(struct IDirectMusicBuffer *this, unsigned int *);
  int (__stdcall *GetBufferFormat)(struct IDirectMusicBuffer *this, _GUID *);
  int (__stdcall *SetStartTime)(struct IDirectMusicBuffer *this, __int64);
  int (__stdcall *SetUsedBytes)(struct IDirectMusicBuffer *this, unsigned int);
};

/* 2648 */
struct _DMUS_PORTPARAMS8
{
  unsigned int dwSize;
  unsigned int dwValidParams;
  unsigned int dwVoices;
  unsigned int dwChannelGroups;
  unsigned int dwAudioChannels;
  unsigned int dwSampleRate;
  unsigned int dwEffectFlags;
  int fShare;
  unsigned int dwFeatures;
};

/* 2649 */
struct __cppobj IDirectMusicPort : IUnknown
{
};

/* 2650 */
struct __cppobj IDirectMusicInstrument : IUnknown
{
};

/* 2651 */
struct /*VFT*/ IDirectMusicInstrument_vtbl
{
  unsigned int (__stdcall *Release)(struct IDirectMusicInstrument *this);
  unsigned int (__stdcall *AddRef)(struct IDirectMusicInstrument *);
  unsigned int (__stdcall *Release)(struct IDirectMusicInstrument *);
  int (__stdcall *GetPatch)(struct IDirectMusicInstrument *this, unsigned int *);
  int (__stdcall *SetPatch)(struct IDirectMusicInstrument *this, unsigned int);
};

/* 2652 */
struct __cppobj IDirectMusicDownloadedInstrument : IUnknown
{
};

/* 2653 */
struct /*VFT*/ IDirectMusicDownloadedInstrument_vtbl
{
  unsigned int (__stdcall *Release)(struct IDirectMusicDownloadedInstrument *this);
  unsigned int (__stdcall *AddRef)(struct IDirectMusicDownloadedInstrument *);
  unsigned int (__stdcall *Release)(struct IDirectMusicDownloadedInstrument *);
};

/* 2654 */
struct _DMUS_NOTERANGE
{
  unsigned int dwLowNote;
  unsigned int dwHighNote;
};

/* 2655 */
struct __cppobj IReferenceClock : IUnknown
{
};

/* 2656 */
struct /*VFT*/ IReferenceClock_vtbl
{
  unsigned int (__stdcall *Release)(struct IReferenceClock *this);
  unsigned int (__stdcall *AddRef)(struct IReferenceClock *);
  unsigned int (__stdcall *Release)(struct IReferenceClock *);
  int (__stdcall *GetTime)(struct IReferenceClock *this, __int64 *);
  int (__stdcall *AdviseTime)(struct IReferenceClock *this, __int64, __int64, void *, unsigned int *);
  int (__stdcall *AdvisePeriodic)(struct IReferenceClock *this, __int64, __int64, void *, unsigned int *);
  int (__stdcall *Unadvise)(struct IReferenceClock *this, unsigned int);
};

/* 2657 */
struct _DMUS_SYNTHSTATS
{
  unsigned int dwSize;
  unsigned int dwValidStats;
  unsigned int dwVoices;
  unsigned int dwTotalCPU;
  unsigned int dwCPUPerVoice;
  unsigned int dwLostNotes;
  unsigned int dwFreeMemory;
  int lPeakVolume;
};

/* 2658 */
union $A5A483E05FC9B52B872A8DCFA58CFF52
{
  unsigned int Offset;
  void *Pointer;
};

/* 2659 */
struct _OVERLAPPED
{
  unsigned int Internal;
  unsigned int InternalHigh;
  $A5A483E05FC9B52B872A8DCFA58CFF52 ___u2;
  unsigned int OffsetHigh;
  void *hEvent;
};

/* 2660 */
struct __cppobj IDirectSound : IUnknown
{
};

/* 2661 */
struct __unaligned __declspec(align(2)) tWAVEFORMATEX
{
  unsigned __int16 wFormatTag;
  unsigned __int16 nChannels;
  unsigned int nSamplesPerSec;
  unsigned int nAvgBytesPerSec;
  unsigned __int16 nBlockAlign;
  unsigned __int16 wBitsPerSample;
  unsigned __int16 cbSize;
};

/* 2662 */
const struct _DSBUFFERDESC
{
  unsigned int dwSize;
  unsigned int dwFlags;
  unsigned int dwBufferBytes;
  unsigned int dwReserved;
  tWAVEFORMATEX *lpwfxFormat;
  _GUID guid3DAlgorithm;
};

/* 2663 */
struct __cppobj IDirectSoundBuffer : IUnknown
{
};

/* 2664 */
struct _DSBCAPS
{
  unsigned int dwSize;
  unsigned int dwFlags;
  unsigned int dwBufferBytes;
  unsigned int dwUnlockTransferRate;
  unsigned int dwPlayCpuOverhead;
};

/* 2665 */
struct /*VFT*/ IDirectSoundBuffer_vtbl
{
  unsigned int (__stdcall *Release)(struct IDirectSoundBuffer *this);
  unsigned int (__stdcall *AddRef)(struct IDirectSoundBuffer *);
  unsigned int (__stdcall *Release)(struct IDirectSoundBuffer *);
  int (__stdcall *GetCaps)(struct IDirectSoundBuffer *this, _DSBCAPS *);
  int (__stdcall *GetCurrentPosition)(struct IDirectSoundBuffer *this, unsigned int *, unsigned int *);
  int (__stdcall *GetFormat)(struct IDirectSoundBuffer *this, tWAVEFORMATEX *, unsigned int, unsigned int *);
  int (__stdcall *GetVolume)(struct IDirectSoundBuffer *this, int *);
  int (__stdcall *GetPan)(struct IDirectSoundBuffer *this, int *);
  int (__stdcall *GetFrequency)(struct IDirectSoundBuffer *this, unsigned int *);
  int (__stdcall *GetStatus)(struct IDirectSoundBuffer *this, unsigned int *);
  int (__stdcall *Initialize)(struct IDirectSoundBuffer *this, IDirectSound *, const _DSBUFFERDESC *);
  int (__stdcall *Lock)(struct IDirectSoundBuffer *this, unsigned int, unsigned int, void **, unsigned int *, void **, unsigned int *, unsigned int);
  int (__stdcall *Play)(struct IDirectSoundBuffer *this, unsigned int, unsigned int, unsigned int);
  int (__stdcall *SetCurrentPosition)(struct IDirectSoundBuffer *this, unsigned int);
  int (__stdcall *SetFormat)(struct IDirectSoundBuffer *this, const tWAVEFORMATEX *);
  int (__stdcall *SetVolume)(struct IDirectSoundBuffer *this, int);
  int (__stdcall *SetPan)(struct IDirectSoundBuffer *this, int);
  int (__stdcall *SetFrequency)(struct IDirectSoundBuffer *this, unsigned int);
  int (__stdcall *Stop)(struct IDirectSoundBuffer *this);
  int (__stdcall *Unlock)(struct IDirectSoundBuffer *this, void *, unsigned int, void *, unsigned int);
  int (__stdcall *Restore)(struct IDirectSoundBuffer *this);
};

/* 2666 */
struct _DSCAPS
{
  unsigned int dwSize;
  unsigned int dwFlags;
  unsigned int dwMinSecondarySampleRate;
  unsigned int dwMaxSecondarySampleRate;
  unsigned int dwPrimaryBuffers;
  unsigned int dwMaxHwMixingAllBuffers;
  unsigned int dwMaxHwMixingStaticBuffers;
  unsigned int dwMaxHwMixingStreamingBuffers;
  unsigned int dwFreeHwMixingAllBuffers;
  unsigned int dwFreeHwMixingStaticBuffers;
  unsigned int dwFreeHwMixingStreamingBuffers;
  unsigned int dwMaxHw3DAllBuffers;
  unsigned int dwMaxHw3DStaticBuffers;
  unsigned int dwMaxHw3DStreamingBuffers;
  unsigned int dwFreeHw3DAllBuffers;
  unsigned int dwFreeHw3DStaticBuffers;
  unsigned int dwFreeHw3DStreamingBuffers;
  unsigned int dwTotalHwMemBytes;
  unsigned int dwFreeHwMemBytes;
  unsigned int dwMaxContigFreeHwMemBytes;
  unsigned int dwUnlockTransferRateHwBuffers;
  unsigned int dwPlayCpuOverheadSwBuffers;
  unsigned int dwReserved1;
  unsigned int dwReserved2;
};

/* 2667 */
struct /*VFT*/ IDirectSound_vtbl
{
  unsigned int (__stdcall *Release)(struct IDirectSound *this);
  unsigned int (__stdcall *AddRef)(struct IDirectSound *);
  unsigned int (__stdcall *Release)(struct IDirectSound *);
  int (__stdcall *CreateSoundBuffer)(struct IDirectSound *this, const _DSBUFFERDESC *, IDirectSoundBuffer **, IUnknown *);
  int (__stdcall *GetCaps)(struct IDirectSound *this, _DSCAPS *);
  int (__stdcall *DuplicateSoundBuffer)(struct IDirectSound *this, IDirectSoundBuffer *, IDirectSoundBuffer **);
  int (__stdcall *SetCooperativeLevel)(struct IDirectSound *this, HWND__ *, unsigned int);
  int (__stdcall *Compact)(struct IDirectSound *this);
  int (__stdcall *GetSpeakerConfig)(struct IDirectSound *this, unsigned int *);
  int (__stdcall *SetSpeakerConfig)(struct IDirectSound *this, unsigned int);
  int (__stdcall *Initialize)(struct IDirectSound *this, const _GUID *);
};

/* 2668 */
struct /*VFT*/ IDirectMusicPort_vtbl
{
  unsigned int (__stdcall *Release)(struct IDirectMusicPort *this);
  unsigned int (__stdcall *AddRef)(struct IDirectMusicPort *);
  unsigned int (__stdcall *Release)(struct IDirectMusicPort *);
  int (__stdcall *PlayBuffer)(struct IDirectMusicPort *this, IDirectMusicBuffer *);
  int (__stdcall *SetReadNotificationHandle)(struct IDirectMusicPort *this, void *);
  int (__stdcall *Read)(struct IDirectMusicPort *this, IDirectMusicBuffer *);
  int (__stdcall *DownloadInstrument)(struct IDirectMusicPort *this, IDirectMusicInstrument *, IDirectMusicDownloadedInstrument **, _DMUS_NOTERANGE *, unsigned int);
  int (__stdcall *UnloadInstrument)(struct IDirectMusicPort *this, IDirectMusicDownloadedInstrument *);
  int (__stdcall *GetLatencyClock)(struct IDirectMusicPort *this, IReferenceClock **);
  int (__stdcall *GetRunningStats)(struct IDirectMusicPort *this, _DMUS_SYNTHSTATS *);
  int (__stdcall *Compact)(struct IDirectMusicPort *this);
  int (__stdcall *GetCaps)(struct IDirectMusicPort *this, _DMUS_PORTCAPS *);
  int (__stdcall *DeviceIoControl)(struct IDirectMusicPort *this, unsigned int, void *, unsigned int, void *, unsigned int, unsigned int *, _OVERLAPPED *);
  int (__stdcall *SetNumChannelGroups)(struct IDirectMusicPort *this, unsigned int);
  int (__stdcall *GetNumChannelGroups)(struct IDirectMusicPort *this, unsigned int *);
  int (__stdcall *Activate)(struct IDirectMusicPort *this, int);
  int (__stdcall *SetChannelPriority)(struct IDirectMusicPort *this, unsigned int, unsigned int, unsigned int);
  int (__stdcall *GetChannelPriority)(struct IDirectMusicPort *this, unsigned int, unsigned int, unsigned int *);
  int (__stdcall *SetDirectSound)(struct IDirectMusicPort *this, IDirectSound *, IDirectSoundBuffer *);
  int (__stdcall *GetFormat)(struct IDirectMusicPort *this, tWAVEFORMATEX *, unsigned int *, unsigned int *);
};

/* 2669 */
struct _DMUS_CLOCKINFO8
{
  unsigned int dwSize;
  DMUS_CLOCKTYPE ctType;
  _GUID guidClock;
  unsigned __int16 wszDescription[128];
  unsigned int dwFlags;
};

/* 2670 */
struct /*VFT*/ IDirectMusic_vtbl
{
  unsigned int (__stdcall *Release)(struct IDirectMusic *this);
  unsigned int (__stdcall *AddRef)(struct IDirectMusic *);
  unsigned int (__stdcall *Release)(struct IDirectMusic *);
  int (__stdcall *EnumPort)(struct IDirectMusic *this, unsigned int, _DMUS_PORTCAPS *);
  int (__stdcall *CreateMusicBuffer)(struct IDirectMusic *this, _DMUS_BUFFERDESC *, IDirectMusicBuffer **, IUnknown *);
  int (__stdcall *CreatePort)(struct IDirectMusic *this, const _GUID *, _DMUS_PORTPARAMS8 *, IDirectMusicPort **, IUnknown *);
  int (__stdcall *EnumMasterClock)(struct IDirectMusic *this, unsigned int, _DMUS_CLOCKINFO8 *);
  int (__stdcall *GetMasterClock)(struct IDirectMusic *this, _GUID *, IReferenceClock **);
  int (__stdcall *SetMasterClock)(struct IDirectMusic *this, const _GUID *);
  int (__stdcall *Activate)(struct IDirectMusic *this, int);
  int (__stdcall *GetDefaultPort)(struct IDirectMusic *this, _GUID *);
  int (__stdcall *SetDirectSound)(struct IDirectMusic *this, IDirectSound *, HWND__ *);
};

/* 2671 */
struct __cppobj IDirectMusicSegment : IUnknown
{
};

/* 2672 */
struct __cppobj IDirectMusicTrack : IUnknown
{
};

/* 2673 */
struct __cppobj IDirectMusicSegmentState : IUnknown
{
};

/* 2674 */
struct /*VFT*/ IDirectMusicSegmentState_vtbl
{
  unsigned int (__stdcall *Release)(IDirectMusicSegmentState *this);
  unsigned int (__stdcall *AddRef)(struct IDirectMusicSegmentState *);
  unsigned int (__stdcall *Release)(struct IDirectMusicSegmentState *);
  int (__stdcall *GetRepeats)(IDirectMusicSegmentState *this, unsigned int *);
  int (__stdcall *GetSegment)(IDirectMusicSegmentState *this, IDirectMusicSegment **);
  int (__stdcall *GetStartTime)(IDirectMusicSegmentState *this, int *);
  int (__stdcall *GetSeek)(IDirectMusicSegmentState *this, int *);
  int (__stdcall *GetStartPoint)(IDirectMusicSegmentState *this, int *);
};

/* 2675 */
struct /*VFT*/ IDirectMusicTrack_vtbl
{
  unsigned int (__stdcall *Release)(IDirectMusicTrack *this);
  unsigned int (__stdcall *AddRef)(struct IDirectMusicTrack *);
  unsigned int (__stdcall *Release)(struct IDirectMusicTrack *);
  int (__stdcall *Init)(IDirectMusicTrack *this, IDirectMusicSegment *);
  int (__stdcall *InitPlay)(IDirectMusicTrack *this, IDirectMusicSegmentState *, IDirectMusicPerformance *, void **, unsigned int, unsigned int);
  int (__stdcall *EndPlay)(IDirectMusicTrack *this, void *);
  int (__stdcall *Play)(IDirectMusicTrack *this, void *, int, int, int, unsigned int, IDirectMusicPerformance *, IDirectMusicSegmentState *, unsigned int);
  int (__stdcall *GetParam)(IDirectMusicTrack *this, const _GUID *, int, int *, void *);
  int (__stdcall *SetParam)(IDirectMusicTrack *this, const _GUID *, int, void *);
  int (__stdcall *IsParamSupported)(IDirectMusicTrack *this, const _GUID *);
  int (__stdcall *AddNotificationType)(IDirectMusicTrack *this, const _GUID *);
  int (__stdcall *RemoveNotificationType)(IDirectMusicTrack *this, const _GUID *);
  int (__stdcall *Clone)(IDirectMusicTrack *this, int, int, IDirectMusicTrack **);
};

/* 2676 */
struct __cppobj IDirectMusicGraph : IUnknown
{
};

/* 2677 */
struct __cppobj IDirectMusicTool : IUnknown
{
};

/* 2678 */
struct _DMUS_PMSG
{
  unsigned int dwSize;
  __int64 rtTime;
  int mtTime;
  unsigned int dwFlags;
  unsigned int dwPChannel;
  unsigned int dwVirtualTrackID;
  IDirectMusicTool *pTool;
  IDirectMusicGraph *pGraph;
  unsigned int dwType;
  unsigned int dwVoiceID;
  unsigned int dwGroupID;
  IUnknown *punkUser;
};

/* 2679 */
struct /*VFT*/ IDirectMusicTool_vtbl
{
  unsigned int (__stdcall *Release)(IDirectMusicTool *this);
  unsigned int (__stdcall *AddRef)(struct IDirectMusicTool *);
  unsigned int (__stdcall *Release)(struct IDirectMusicTool *);
  int (__stdcall *Init)(IDirectMusicTool *this, IDirectMusicGraph *);
  int (__stdcall *GetMsgDeliveryType)(IDirectMusicTool *this, unsigned int *);
  int (__stdcall *GetMediaTypeArraySize)(IDirectMusicTool *this, unsigned int *);
  int (__stdcall *GetMediaTypes)(IDirectMusicTool *this, unsigned int **, unsigned int);
  int (__stdcall *ProcessPMsg)(IDirectMusicTool *this, IDirectMusicPerformance *, _DMUS_PMSG *);
  int (__stdcall *Flush)(IDirectMusicTool *this, IDirectMusicPerformance *, _DMUS_PMSG *, __int64);
};

/* 2680 */
struct /*VFT*/ IDirectMusicGraph_vtbl
{
  unsigned int (__stdcall *Release)(IDirectMusicGraph *this);
  unsigned int (__stdcall *AddRef)(struct IDirectMusicGraph *);
  unsigned int (__stdcall *Release)(struct IDirectMusicGraph *);
  int (__stdcall *StampPMsg)(IDirectMusicGraph *this, _DMUS_PMSG *);
  int (__stdcall *InsertTool)(IDirectMusicGraph *this, IDirectMusicTool *, unsigned int *, unsigned int, int);
  int (__stdcall *GetTool)(IDirectMusicGraph *this, unsigned int, IDirectMusicTool **);
  int (__stdcall *RemoveTool)(IDirectMusicGraph *this, IDirectMusicTool *);
};

/* 2681 */
struct /*VFT*/ IDirectMusicSegment_vtbl
{
  unsigned int (__stdcall *Release)(IDirectMusicSegment *this);
  unsigned int (__stdcall *AddRef)(struct IDirectMusicSegment *);
  unsigned int (__stdcall *Release)(struct IDirectMusicSegment *);
  int (__stdcall *GetLength)(IDirectMusicSegment *this, int *);
  int (__stdcall *SetLength)(IDirectMusicSegment *this, int);
  int (__stdcall *GetRepeats)(IDirectMusicSegment *this, unsigned int *);
  int (__stdcall *SetRepeats)(IDirectMusicSegment *this, unsigned int);
  int (__stdcall *GetDefaultResolution)(IDirectMusicSegment *this, unsigned int *);
  int (__stdcall *SetDefaultResolution)(IDirectMusicSegment *this, unsigned int);
  int (__stdcall *GetTrack)(IDirectMusicSegment *this, const _GUID *, unsigned int, unsigned int, IDirectMusicTrack **);
  int (__stdcall *GetTrackGroup)(IDirectMusicSegment *this, IDirectMusicTrack *, unsigned int *);
  int (__stdcall *InsertTrack)(IDirectMusicSegment *this, IDirectMusicTrack *, unsigned int);
  int (__stdcall *RemoveTrack)(IDirectMusicSegment *this, IDirectMusicTrack *);
  int (__stdcall *InitPlay)(IDirectMusicSegment *this, IDirectMusicSegmentState **, IDirectMusicPerformance *, unsigned int);
  int (__stdcall *GetGraph)(IDirectMusicSegment *this, IDirectMusicGraph **);
  int (__stdcall *SetGraph)(IDirectMusicSegment *this, IDirectMusicGraph *);
  int (__stdcall *AddNotificationType)(IDirectMusicSegment *this, const _GUID *);
  int (__stdcall *RemoveNotificationType)(IDirectMusicSegment *this, const _GUID *);
  int (__stdcall *GetParam)(IDirectMusicSegment *this, const _GUID *, unsigned int, unsigned int, int, int *, void *);
  int (__stdcall *SetParam)(IDirectMusicSegment *this, const _GUID *, unsigned int, unsigned int, int, void *);
  int (__stdcall *Clone)(IDirectMusicSegment *this, int, int, IDirectMusicSegment **);
  int (__stdcall *SetStartPoint)(IDirectMusicSegment *this, int);
  int (__stdcall *GetStartPoint)(IDirectMusicSegment *this, int *);
  int (__stdcall *SetLoopPoints)(IDirectMusicSegment *this, int, int);
  int (__stdcall *GetLoopPoints)(IDirectMusicSegment *this, int *, int *);
  int (__stdcall *SetPChannelsUsed)(IDirectMusicSegment *this, unsigned int, unsigned int *);
};

/* 2682 */
struct __declspec(align(8)) _DMUS_NOTIFICATION_PMSG
{
  unsigned int dwSize;
  __int64 rtTime;
  int mtTime;
  unsigned int dwFlags;
  unsigned int dwPChannel;
  unsigned int dwVirtualTrackID;
  IDirectMusicTool *pTool;
  IDirectMusicGraph *pGraph;
  unsigned int dwType;
  unsigned int dwVoiceID;
  unsigned int dwGroupID;
  IUnknown *punkUser;
  _GUID guidNotificationType;
  unsigned int dwNotificationOption;
  unsigned int dwField1;
  unsigned int dwField2;
};

/* 2683 */
struct __declspec(align(4)) _DMUS_SUBCHORD
{
  unsigned int dwChordPattern;
  unsigned int dwScalePattern;
  unsigned int dwInversionPoints;
  unsigned int dwLevels;
  unsigned __int8 bChordRoot;
  unsigned __int8 bScaleRoot;
};

/* 2684 */
struct __declspec(align(4)) _DMUS_CHORD_KEY
{
  unsigned __int16 wszName[16];
  unsigned __int16 wMeasure;
  unsigned __int8 bBeat;
  unsigned __int8 bSubChordCount;
  _DMUS_SUBCHORD SubChordList[8];
  unsigned int dwScale;
  unsigned __int8 bKey;
  unsigned __int8 bFlags;
};

/* 2685 */
struct _DMUS_TIMESIGNATURE
{
  int mtTime;
  unsigned __int8 bBeatsPerMeasure;
  unsigned __int8 bBeat;
  unsigned __int16 wGridsPerBeat;
};

/* 2686 */
struct /*VFT*/ IDirectMusicPerformance_vtbl
{
  unsigned int (__stdcall *Release)(IDirectMusicPerformance *this);
  unsigned int (__stdcall *AddRef)(struct IDirectMusicPerformance *);
  unsigned int (__stdcall *Release)(struct IDirectMusicPerformance *);
  int (__stdcall *Init)(IDirectMusicPerformance *this, IDirectMusic **, IDirectSound *, HWND__ *);
  int (__stdcall *PlaySegment)(IDirectMusicPerformance *this, IDirectMusicSegment *, unsigned int, __int64, IDirectMusicSegmentState **);
  int (__stdcall *Stop)(IDirectMusicPerformance *this, IDirectMusicSegment *, IDirectMusicSegmentState *, int, unsigned int);
  int (__stdcall *GetSegmentState)(IDirectMusicPerformance *this, IDirectMusicSegmentState **, int);
  int (__stdcall *SetPrepareTime)(IDirectMusicPerformance *this, unsigned int);
  int (__stdcall *GetPrepareTime)(IDirectMusicPerformance *this, unsigned int *);
  int (__stdcall *SetBumperLength)(IDirectMusicPerformance *this, unsigned int);
  int (__stdcall *GetBumperLength)(IDirectMusicPerformance *this, unsigned int *);
  int (__stdcall *SendPMsg)(IDirectMusicPerformance *this, _DMUS_PMSG *);
  int (__stdcall *MusicToReferenceTime)(IDirectMusicPerformance *this, int, __int64 *);
  int (__stdcall *ReferenceToMusicTime)(IDirectMusicPerformance *this, __int64, int *);
  int (__stdcall *IsPlaying)(IDirectMusicPerformance *this, IDirectMusicSegment *, IDirectMusicSegmentState *);
  int (__stdcall *GetTime)(IDirectMusicPerformance *this, __int64 *, int *);
  int (__stdcall *AllocPMsg)(IDirectMusicPerformance *this, unsigned int, _DMUS_PMSG **);
  int (__stdcall *FreePMsg)(IDirectMusicPerformance *this, _DMUS_PMSG *);
  int (__stdcall *GetGraph)(IDirectMusicPerformance *this, IDirectMusicGraph **);
  int (__stdcall *SetGraph)(IDirectMusicPerformance *this, IDirectMusicGraph *);
  int (__stdcall *SetNotificationHandle)(IDirectMusicPerformance *this, void *, __int64);
  int (__stdcall *GetNotificationPMsg)(IDirectMusicPerformance *this, _DMUS_NOTIFICATION_PMSG **);
  int (__stdcall *AddNotificationType)(IDirectMusicPerformance *this, const _GUID *);
  int (__stdcall *RemoveNotificationType)(IDirectMusicPerformance *this, const _GUID *);
  int (__stdcall *AddPortA)(IDirectMusicPerformance *this, IDirectMusicPort *);
  int (__stdcall *RemovePort)(IDirectMusicPerformance *this, IDirectMusicPort *);
  int (__stdcall *AssignPChannelBlock)(IDirectMusicPerformance *this, unsigned int, IDirectMusicPort *, unsigned int);
  int (__stdcall *AssignPChannel)(IDirectMusicPerformance *this, unsigned int, IDirectMusicPort *, unsigned int, unsigned int);
  int (__stdcall *PChannelInfo)(IDirectMusicPerformance *this, unsigned int, IDirectMusicPort **, unsigned int *, unsigned int *);
  int (__stdcall *DownloadInstrument)(IDirectMusicPerformance *this, IDirectMusicInstrument *, unsigned int, IDirectMusicDownloadedInstrument **, _DMUS_NOTERANGE *, unsigned int, IDirectMusicPort **, unsigned int *, unsigned int *);
  int (__stdcall *Invalidate)(IDirectMusicPerformance *this, int, unsigned int);
  int (__stdcall *GetParam)(IDirectMusicPerformance *this, const _GUID *, unsigned int, unsigned int, int, int *, void *);
  int (__stdcall *SetParam)(IDirectMusicPerformance *this, const _GUID *, unsigned int, unsigned int, int, void *);
  int (__stdcall *GetGlobalParam)(IDirectMusicPerformance *this, const _GUID *, void *, unsigned int);
  int (__stdcall *SetGlobalParam)(IDirectMusicPerformance *this, const _GUID *, void *, unsigned int);
  int (__stdcall *GetLatencyTime)(IDirectMusicPerformance *this, __int64 *);
  int (__stdcall *GetQueueTime)(IDirectMusicPerformance *this, __int64 *);
  int (__stdcall *AdjustTime)(IDirectMusicPerformance *this, __int64);
  int (__stdcall *CloseDown)(IDirectMusicPerformance *this);
  int (__stdcall *GetResolvedTime)(IDirectMusicPerformance *this, __int64, __int64 *, unsigned int);
  int (__stdcall *MIDIToMusic)(IDirectMusicPerformance *this, unsigned __int8, _DMUS_CHORD_KEY *, unsigned __int8, unsigned __int8, unsigned __int16 *);
  int (__stdcall *MusicToMIDI)(IDirectMusicPerformance *this, unsigned __int16, _DMUS_CHORD_KEY *, unsigned __int8, unsigned __int8, unsigned __int8 *);
  int (__stdcall *TimeToRhythm)(IDirectMusicPerformance *this, int, _DMUS_TIMESIGNATURE *, unsigned __int16 *, unsigned __int8 *, unsigned __int8 *, __int16 *);
  int (__stdcall *RhythmToTime)(IDirectMusicPerformance *this, unsigned __int16, unsigned __int8, unsigned __int8, __int16, _DMUS_TIMESIGNATURE *, int *);
};

/* 2687 */
struct __cppobj IDirectMusicPerformance8 : IDirectMusicPerformance
{
};

/* 2688 */
struct _DMUS_AUDIOPARAMS
{
  unsigned int dwSize;
  int fInitNow;
  unsigned int dwValidData;
  unsigned int dwFeatures;
  unsigned int dwVoices;
  unsigned int dwSampleRate;
  _GUID clsidDefaultSynth;
};

/* 2689 */
struct __cppobj IDirectMusicAudioPath : IUnknown
{
};

/* 2690 */
struct /*VFT*/ IDirectMusicAudioPath_vtbl
{
  unsigned int (__stdcall *Release)(IDirectMusicAudioPath *this);
  unsigned int (__stdcall *AddRef)(struct IDirectMusicAudioPath *);
  unsigned int (__stdcall *Release)(struct IDirectMusicAudioPath *);
  int (__stdcall *GetObjectInPath)(IDirectMusicAudioPath *this, unsigned int, unsigned int, unsigned int, const _GUID *, unsigned int, const _GUID *, void **);
  int (__stdcall *Activate)(IDirectMusicAudioPath *this, int);
  int (__stdcall *SetVolume)(IDirectMusicAudioPath *this, int, unsigned int);
  int (__stdcall *ConvertPChannel)(IDirectMusicAudioPath *this, unsigned int, unsigned int *);
};

/* 2691 */
struct /*VFT*/ IDirectMusicPerformance8_vtbl
{
  int (__stdcall *RhythmToTime)(IDirectMusicPerformance8 *this, unsigned __int16, unsigned __int8, unsigned __int8, __int16, _DMUS_TIMESIGNATURE *, int *);
  unsigned int (__stdcall *AddRef)(struct IDirectMusicPerformance8 *);
  unsigned int (__stdcall *Release)(struct IDirectMusicPerformance8 *);
  int (__stdcall *Init)(struct IDirectMusicPerformance8 *this, IDirectMusic **, IDirectSound *, HWND__ *);
  int (__stdcall *PlaySegment)(struct IDirectMusicPerformance8 *this, IDirectMusicSegment *, unsigned int, __int64, IDirectMusicSegmentState **);
  int (__stdcall *Stop)(struct IDirectMusicPerformance8 *this, IDirectMusicSegment *, IDirectMusicSegmentState *, int, unsigned int);
  int (__stdcall *GetSegmentState)(struct IDirectMusicPerformance8 *this, IDirectMusicSegmentState **, int);
  int (__stdcall *SetPrepareTime)(struct IDirectMusicPerformance8 *this, unsigned int);
  int (__stdcall *GetPrepareTime)(struct IDirectMusicPerformance8 *this, unsigned int *);
  int (__stdcall *SetBumperLength)(struct IDirectMusicPerformance8 *this, unsigned int);
  int (__stdcall *GetBumperLength)(struct IDirectMusicPerformance8 *this, unsigned int *);
  int (__stdcall *SendPMsg)(struct IDirectMusicPerformance8 *this, _DMUS_PMSG *);
  int (__stdcall *MusicToReferenceTime)(struct IDirectMusicPerformance8 *this, int, __int64 *);
  int (__stdcall *ReferenceToMusicTime)(struct IDirectMusicPerformance8 *this, __int64, int *);
  int (__stdcall *IsPlaying)(struct IDirectMusicPerformance8 *this, IDirectMusicSegment *, IDirectMusicSegmentState *);
  int (__stdcall *GetTime)(struct IDirectMusicPerformance8 *this, __int64 *, int *);
  int (__stdcall *AllocPMsg)(struct IDirectMusicPerformance8 *this, unsigned int, _DMUS_PMSG **);
  int (__stdcall *FreePMsg)(struct IDirectMusicPerformance8 *this, _DMUS_PMSG *);
  int (__stdcall *GetGraph)(struct IDirectMusicPerformance8 *this, IDirectMusicGraph **);
  int (__stdcall *SetGraph)(struct IDirectMusicPerformance8 *this, IDirectMusicGraph *);
  int (__stdcall *SetNotificationHandle)(struct IDirectMusicPerformance8 *this, void *, __int64);
  int (__stdcall *GetNotificationPMsg)(struct IDirectMusicPerformance8 *this, _DMUS_NOTIFICATION_PMSG **);
  int (__stdcall *AddNotificationType)(struct IDirectMusicPerformance8 *this, const _GUID *);
  int (__stdcall *RemoveNotificationType)(struct IDirectMusicPerformance8 *this, const _GUID *);
  int (__stdcall *AddPortA)(struct IDirectMusicPerformance8 *this, IDirectMusicPort *);
  int (__stdcall *RemovePort)(struct IDirectMusicPerformance8 *this, IDirectMusicPort *);
  int (__stdcall *AssignPChannelBlock)(struct IDirectMusicPerformance8 *this, unsigned int, IDirectMusicPort *, unsigned int);
  int (__stdcall *AssignPChannel)(struct IDirectMusicPerformance8 *this, unsigned int, IDirectMusicPort *, unsigned int, unsigned int);
  int (__stdcall *PChannelInfo)(struct IDirectMusicPerformance8 *this, unsigned int, IDirectMusicPort **, unsigned int *, unsigned int *);
  int (__stdcall *DownloadInstrument)(struct IDirectMusicPerformance8 *this, IDirectMusicInstrument *, unsigned int, IDirectMusicDownloadedInstrument **, _DMUS_NOTERANGE *, unsigned int, IDirectMusicPort **, unsigned int *, unsigned int *);
  int (__stdcall *Invalidate)(struct IDirectMusicPerformance8 *this, int, unsigned int);
  int (__stdcall *GetParam)(struct IDirectMusicPerformance8 *this, const _GUID *, unsigned int, unsigned int, int, int *, void *);
  int (__stdcall *SetParam)(struct IDirectMusicPerformance8 *this, const _GUID *, unsigned int, unsigned int, int, void *);
  int (__stdcall *GetGlobalParam)(struct IDirectMusicPerformance8 *this, const _GUID *, void *, unsigned int);
  int (__stdcall *SetGlobalParam)(struct IDirectMusicPerformance8 *this, const _GUID *, void *, unsigned int);
  int (__stdcall *GetLatencyTime)(struct IDirectMusicPerformance8 *this, __int64 *);
  int (__stdcall *GetQueueTime)(struct IDirectMusicPerformance8 *this, __int64 *);
  int (__stdcall *AdjustTime)(struct IDirectMusicPerformance8 *this, __int64);
  int (__stdcall *CloseDown)(struct IDirectMusicPerformance8 *this);
  int (__stdcall *GetResolvedTime)(struct IDirectMusicPerformance8 *this, __int64, __int64 *, unsigned int);
  int (__stdcall *MIDIToMusic)(struct IDirectMusicPerformance8 *this, unsigned __int8, _DMUS_CHORD_KEY *, unsigned __int8, unsigned __int8, unsigned __int16 *);
  int (__stdcall *MusicToMIDI)(struct IDirectMusicPerformance8 *this, unsigned __int16, _DMUS_CHORD_KEY *, unsigned __int8, unsigned __int8, unsigned __int8 *);
  int (__stdcall *TimeToRhythm)(struct IDirectMusicPerformance8 *this, int, _DMUS_TIMESIGNATURE *, unsigned __int16 *, unsigned __int8 *, unsigned __int8 *, __int16 *);
  int (__stdcall *RhythmToTime)(struct IDirectMusicPerformance8 *this, unsigned __int16, unsigned __int8, unsigned __int8, __int16, _DMUS_TIMESIGNATURE *, int *);
  int (__stdcall *InitAudio)(IDirectMusicPerformance8 *this, IDirectMusic **, IDirectSound **, HWND__ *, unsigned int, unsigned int, unsigned int, _DMUS_AUDIOPARAMS *);
  int (__stdcall *PlaySegmentEx)(IDirectMusicPerformance8 *this, IUnknown *, unsigned __int16 *, IUnknown *, unsigned int, __int64, IDirectMusicSegmentState **, IUnknown *, IUnknown *);
  int (__stdcall *StopEx)(IDirectMusicPerformance8 *this, IUnknown *, __int64, unsigned int);
  int (__stdcall *ClonePMsg)(IDirectMusicPerformance8 *this, _DMUS_PMSG *, _DMUS_PMSG **);
  int (__stdcall *CreateAudioPath)(IDirectMusicPerformance8 *this, IUnknown *, int, IDirectMusicAudioPath **);
  int (__stdcall *CreateStandardAudioPath)(IDirectMusicPerformance8 *this, unsigned int, unsigned int, int, IDirectMusicAudioPath **);
  int (__stdcall *SetDefaultAudioPath)(IDirectMusicPerformance8 *this, IDirectMusicAudioPath *);
  int (__stdcall *GetDefaultAudioPath)(IDirectMusicPerformance8 *this, IDirectMusicAudioPath **);
  int (__stdcall *GetParamEx)(IDirectMusicPerformance8 *this, const _GUID *, unsigned int, unsigned int, unsigned int, int, int *, void *);
};

/* 2692 */
struct __cppobj IDirectMusicSegment8 : IDirectMusicSegment
{
};

/* 2693 */
struct /*VFT*/ IDirectMusicSegment8_vtbl
{
  int (__stdcall *SetPChannelsUsed)(IDirectMusicSegment8 *this, unsigned int, unsigned int *);
  unsigned int (__stdcall *AddRef)(struct IDirectMusicSegment8 *);
  unsigned int (__stdcall *Release)(struct IDirectMusicSegment8 *);
  int (__stdcall *GetLength)(struct IDirectMusicSegment8 *this, int *);
  int (__stdcall *SetLength)(struct IDirectMusicSegment8 *this, int);
  int (__stdcall *GetRepeats)(struct IDirectMusicSegment8 *this, unsigned int *);
  int (__stdcall *SetRepeats)(struct IDirectMusicSegment8 *this, unsigned int);
  int (__stdcall *GetDefaultResolution)(struct IDirectMusicSegment8 *this, unsigned int *);
  int (__stdcall *SetDefaultResolution)(struct IDirectMusicSegment8 *this, unsigned int);
  int (__stdcall *GetTrack)(struct IDirectMusicSegment8 *this, const _GUID *, unsigned int, unsigned int, IDirectMusicTrack **);
  int (__stdcall *GetTrackGroup)(struct IDirectMusicSegment8 *this, IDirectMusicTrack *, unsigned int *);
  int (__stdcall *InsertTrack)(struct IDirectMusicSegment8 *this, IDirectMusicTrack *, unsigned int);
  int (__stdcall *RemoveTrack)(struct IDirectMusicSegment8 *this, IDirectMusicTrack *);
  int (__stdcall *InitPlay)(struct IDirectMusicSegment8 *this, IDirectMusicSegmentState **, IDirectMusicPerformance *, unsigned int);
  int (__stdcall *GetGraph)(struct IDirectMusicSegment8 *this, IDirectMusicGraph **);
  int (__stdcall *SetGraph)(struct IDirectMusicSegment8 *this, IDirectMusicGraph *);
  int (__stdcall *AddNotificationType)(struct IDirectMusicSegment8 *this, const _GUID *);
  int (__stdcall *RemoveNotificationType)(struct IDirectMusicSegment8 *this, const _GUID *);
  int (__stdcall *GetParam)(struct IDirectMusicSegment8 *this, const _GUID *, unsigned int, unsigned int, int, int *, void *);
  int (__stdcall *SetParam)(struct IDirectMusicSegment8 *this, const _GUID *, unsigned int, unsigned int, int, void *);
  int (__stdcall *Clone)(struct IDirectMusicSegment8 *this, int, int, IDirectMusicSegment **);
  int (__stdcall *SetStartPoint)(struct IDirectMusicSegment8 *this, int);
  int (__stdcall *GetStartPoint)(struct IDirectMusicSegment8 *this, int *);
  int (__stdcall *SetLoopPoints)(struct IDirectMusicSegment8 *this, int, int);
  int (__stdcall *GetLoopPoints)(struct IDirectMusicSegment8 *this, int *, int *);
  int (__stdcall *SetPChannelsUsed)(struct IDirectMusicSegment8 *this, unsigned int, unsigned int *);
  int (__stdcall *SetTrackConfig)(IDirectMusicSegment8 *this, const _GUID *, unsigned int, unsigned int, unsigned int, unsigned int);
  int (__stdcall *GetAudioPathConfig)(IDirectMusicSegment8 *this, IUnknown **);
  int (__stdcall *Compose)(IDirectMusicSegment8 *this, int, IDirectMusicSegment *, IDirectMusicSegment *, IDirectMusicSegment **);
  int (__stdcall *Download)(IDirectMusicSegment8 *this, IUnknown *);
  int (__stdcall *Unload)(IDirectMusicSegment8 *this, IUnknown *);
};

/* 2694 */
struct __cppobj IDirectMusicCollection : IUnknown
{
};

/* 2695 */
struct /*VFT*/ IDirectMusicCollection_vtbl
{
  unsigned int (__stdcall *Release)(struct IDirectMusicCollection *this);
  unsigned int (__stdcall *AddRef)(struct IDirectMusicCollection *);
  unsigned int (__stdcall *Release)(struct IDirectMusicCollection *);
  int (__stdcall *GetInstrument)(struct IDirectMusicCollection *this, unsigned int, IDirectMusicInstrument **);
  int (__stdcall *EnumInstrument)(struct IDirectMusicCollection *this, unsigned int, unsigned int *, unsigned __int16 *, unsigned int);
};

/* 2696 */
struct __cppobj ASYNCLOADER
{
  CAsyncObject *asyncLoader;
  TSGrowableArray<char> buffer;
};

/* 2697 */
struct __cppobj __declspec(align(8)) MY_DMUS_OBJECTDESC : _DMUS_OBJECTDESC
{
  ASYNCLOADER *asyncLoader;
};

/* 2698 */
struct __cppobj IPersist : IUnknown
{
};

/* 2699 */
struct /*VFT*/ IPersist_vtbl
{
  int (__stdcall *QueryInterface)(IUnknown *, const _GUID *const, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *);
  unsigned int (__stdcall *Release)(IUnknown *);
  int (__stdcall *GetClassID)(IPersist *this, _GUID *);
};

/* 2700 */
struct __cppobj IPersistStream : IPersist
{
};

/* 2701 */
struct /*VFT*/ IPersistStream_vtbl
{
  int (__stdcall *QueryInterface)(IUnknown *, const _GUID *const, void **);
  unsigned int (__stdcall *AddRef)(IUnknown *);
  unsigned int (__stdcall *Release)(IUnknown *);
  int (__stdcall *GetClassID)(IPersist *this, _GUID *);
  int (__stdcall *IsDirty)(IPersistStream *this);
  int (__stdcall *Load)(IPersistStream *this, IStream *);
  int (__stdcall *Save)(IPersistStream *this, IStream *, int);
  int (__stdcall *GetSizeMax)(IPersistStream *this, _ULARGE_INTEGER *);
};

/* 2702 */
struct __cppobj IDirectMusicGetLoader : IUnknown
{
};

/* 2703 */
struct /*VFT*/ IDirectMusicGetLoader_vtbl
{
  unsigned int (__stdcall *Release)(IDirectMusicGetLoader *this);
  unsigned int (__stdcall *AddRef)(struct IDirectMusicGetLoader *);
  unsigned int (__stdcall *Release)(struct IDirectMusicGetLoader *);
  int (__stdcall *GetLoader)(IDirectMusicGetLoader *this, IDirectMusicLoader **);
};

/* 2704 */
struct __cppobj __declspec(align(8)) CMyIStream : IStream, IDirectMusicGetLoader
{
  int m_cRef;
  IDirectMusicLoader *m_pLoader;
  __int64 m_cursor;
  ASYNCLOADER *m_loader;
};

/* 2705 */
struct /*VFT*/ CMyIStream_vtbl
{
  int (__stdcall *CMyIStream::Stat)(CMyIStream *this, tagSTATSTG *, unsigned int);
  unsigned int (__stdcall *AddRef)(struct CMyIStream *);
  unsigned int (__stdcall *Release)(struct CMyIStream *);
  int (__stdcall *Read)(struct CMyIStream *, void *, unsigned int, unsigned int *);
  int (__stdcall *Write)(struct CMyIStream *, const void *, unsigned int, unsigned int *);
  int (__stdcall *Seek)(struct CMyIStream *, _LARGE_INTEGER, unsigned int, _ULARGE_INTEGER *);
  int (__stdcall *SetSize)(struct CMyIStream *, _ULARGE_INTEGER);
  int (__stdcall *CopyTo)(struct CMyIStream *, IStream *, _ULARGE_INTEGER, _ULARGE_INTEGER *, _ULARGE_INTEGER *);
  int (__stdcall *Commit)(struct CMyIStream *, unsigned int);
  int (__stdcall *Revert)(struct CMyIStream *);
  int (__stdcall *LockRegion)(struct CMyIStream *, _ULARGE_INTEGER, _ULARGE_INTEGER, unsigned int);
  int (__stdcall *UnlockRegion)(struct CMyIStream *, _ULARGE_INTEGER, _ULARGE_INTEGER, unsigned int);
  int (__stdcall *Stat)(struct CMyIStream *, tagSTATSTG *, unsigned int);
  int (__stdcall *Clone)(struct CMyIStream *, IStream **);
};

/* 2706 */
struct __cppobj TSList<Sound,TSGetExplicitLink<Sound> >
{
  int m_linkoffset;
  TSLink<Sound> m_terminator;
};

/* 2707 */
struct __cppobj TSExplicitList<Sound,8> : TSList<Sound,TSGetExplicitLink<Sound> >
{
};

/* 2708 */
struct __cppobj TSExplicitList<Sound,16> : TSList<Sound,TSGetExplicitLink<Sound> >
{
};

/* 2709 */
struct __cppobj TSExplicitList<Sound,24> : TSList<Sound,TSGetExplicitLink<Sound> >
{
};

/* 2710 */
struct __cppobj TSExplicitList<Sound,32> : TSList<Sound,TSGetExplicitLink<Sound> >
{
};

/* 2711 */
struct __cppobj TSExplicitList<Sound,40> : TSList<Sound,TSGetExplicitLink<Sound> >
{
};

/* 2712 */
struct __cppobj TSExplicitList<Sound,48> : TSList<Sound,TSGetExplicitLink<Sound> >
{
};

/* 2713 */
struct __cppobj TInstanceAllocator<Sound> : CDataAllocator
{
};

/* 2714 */
struct InitParams
{
  int outputSystem;
  int driver;
  int mixer;
  int bufferSize;
  int minNumHardwareChannels;
  int maxNumHardwareChannels;
  int mixRate;
  int numSoftwareChannels;
  int flags;
  float distanceFactor;
  float dopplerFactor;
  float rolloffFactor;
  int cacheSizeMB;
};

/* 2715 */
struct _FSOUND_REVERB_CHANNELPROPERTIES
{
  int Direct;
  int DirectHF;
  int Room;
  int RoomHF;
  int Obstruction;
  float ObstructionLFRatio;
  int Occlusion;
  float OcclusionLFRatio;
  float OcclusionRoomRatio;
  float OcclusionDirectRatio;
  int Exclusion;
  float ExclusionLFRatio;
  int OutsideVolumeHF;
  float DopplerFactor;
  float RolloffFactor;
  float RoomRolloffFactor;
  float AirAbsorptionFactor;
  int Flags;
};

/* 2716 */
struct _FSOUND_REVERB_PROPERTIES
{
  unsigned int Environment;
  float EnvSize;
  float EnvDiffusion;
  int Room;
  int RoomHF;
  int RoomLF;
  float DecayTime;
  float DecayHFRatio;
  float DecayLFRatio;
  int Reflections;
  float ReflectionsDelay;
  float ReflectionsPan[3];
  int Reverb;
  float ReverbDelay;
  float ReverbPan[3];
  float EchoTime;
  float EchoDepth;
  float ModulationTime;
  float ModulationDepth;
  float AirAbsorptionHF;
  float HFReference;
  float LFReference;
  float RoomRolloffFactor;
  float Diffusion;
  float Density;
  unsigned int Flags;
};

/* 2717 */
struct OSEVENT
{
  OSINPUT id;
  int param[4];
};

/* 2718 */
struct _OSVERSIONINFOEXA
{
  unsigned int dwOSVersionInfoSize;
  unsigned int dwMajorVersion;
  unsigned int dwMinorVersion;
  unsigned int dwBuildNumber;
  unsigned int dwPlatformId;
  char szCSDVersion[128];
  unsigned __int16 wServicePackMajor;
  unsigned __int16 wServicePackMinor;
  unsigned __int16 wSuiteMask;
  unsigned __int8 wProductType;
  unsigned __int8 wReserved;
};

/* 2719 */
struct _WSABUF
{
  unsigned int len;
  char *buf;
};

/* 2720 */
struct __cppobj CCritSect
{
  _RTL_CRITICAL_SECTION m_critsect;
};

/* 2721 */
struct CInitCritSect
{
  int m_spinLock;
  CCritSect *m_critsect;
  unsigned __int8 m_critsectData[24];
};

/* 2722 */
struct __cppobj OsNet::LOCKEDLONG
{
  volatile int m_value;
};

/* 2723 */
struct __cppobj TSLink<OsNet::LOOPCONN::INPUT>
{
  TSLink<OsNet::LOOPCONN::INPUT> *m_prevlink;
  OsNet::LOOPCONN::INPUT *m_next;
};

/* 2765 */
struct __cppobj OsNet::LOOPCONN::INPUT
{
  TSLink<OsNet::LOOPCONN::INPUT> m_link;
  TSLink<OsNet::LOOPCONN::INPUT> m_linkNet;
  OsNet::LOOPCONN *m_conn;
  unsigned int m_bytes;
  unsigned int m_dataBytes;
  unsigned __int8 m_data[4];
};

/* 2725 */
struct __cppobj OsNet::NETSELSOCK
{
  OsNet::NETSELSOCK_vtbl *__vftable /*VFT*/;
  unsigned int m_sock;
};

/* 2753 */
struct __cppobj TSLink<OsNet::NETCONN>
{
  TSLink<OsNet::NETCONN> *m_prevlink;
  OsNet::NETCONN *m_next;
};

/* 2754 */
struct __cppobj __declspec(align(8)) OsNet::NETCONN : OsNet::NETSELSOCK
{
  TSLink<OsNet::NETCONN> m_link;
  unsigned __int8 m_list;
  unsigned __int8 m_listSlot;
  unsigned __int16 m_reserved;
  OsNet::LOCKEDLONG m_refCount;
  NETCONNADDR m_connAddr;
  int m_eventProcUserLock;
  int (__stdcall *m_eventProc)(HNETCONN__ *, const NETCONNADDR *, NETNOTE, void *, const void *, unsigned int, unsigned int *);
  void *m_user;
  CCritSect m_lock;
  unsigned int m_time;
  OsNet::TCPNET *m_net;
};

/* 2758 */
struct __cppobj OsNet::NETCONNFULL : OsNet::NETCONN
{
};

/* 2762 */
struct __cppobj TSList<OsNet::LOOPCONN::INPUT,TSGetExplicitLink<OsNet::LOOPCONN::INPUT> >
{
  int m_linkoffset;
  TSLink<OsNet::LOOPCONN::INPUT> m_terminator;
};

/* 2763 */
struct __cppobj __unaligned __declspec(align(4)) TSExplicitList<OsNet::LOOPCONN::INPUT,0> : TSList<OsNet::LOOPCONN::INPUT,TSGetExplicitLink<OsNet::LOOPCONN::INPUT> >
{
};

/* 2760 */
struct __cppobj OsNet::LOOPCONN : OsNet::NETCONNFULL
{
  OsNet::LOOPCONN *m_loopConn;
  TSLink<OsNet::LOOPCONN> m_linkNet;
  __unaligned __declspec(align(1)) TSExplicitList<OsNet::LOOPCONN::INPUT,0> m_inputList;
  unsigned int m_bytes;
  unsigned __int8 m_data[1460];
};

/* 2752 */
struct /*VFT*/ OsNet::NETSELSOCK_vtbl
{
  void (__thiscall *Selected)(OsNet::NETSELSOCK *this, OsNet::TCPNET *, OsNet::SELECTSET);
  int (__thiscall *OsNet::NETSELSOCK::IsClosed)(OsNet::NETSELSOCK *this);
  void (__thiscall *AddToSelectSets)(OsNet::NETSELSOCK *this, OsNet::NETSELECTSETS *);
};

/* 2755 */
struct HNETCONN__
{
  int unused;
};

/* 2766 */
struct __cppobj TSExplicitList<OsNet::LOOPCONN::INPUT,8> : TSList<OsNet::LOOPCONN::INPUT,TSGetExplicitLink<OsNet::LOOPCONN::INPUT> >
{
};

/* 2761 */
struct __cppobj TSLink<OsNet::LOOPCONN>
{
  TSLink<OsNet::LOOPCONN> *m_prevlink;
  OsNet::LOOPCONN *m_next;
};

/* 2767 */
struct __cppobj TSList<OsNet::LOOPCONN,TSGetExplicitLink<OsNet::LOOPCONN> >
{
  int m_linkoffset;
  TSLink<OsNet::LOOPCONN> m_terminator;
};

/* 2768 */
struct __cppobj TSExplicitList<OsNet::LOOPCONN,108> : TSList<OsNet::LOOPCONN,TSGetExplicitLink<OsNet::LOOPCONN> >
{
};

/* 2771 */
struct __cppobj TSList<OsNet::NETCONN,TSGetExplicitLink<OsNet::NETCONN> >
{
  int m_linkoffset;
  TSLink<OsNet::NETCONN> m_terminator;
};

/* 2772 */
struct __cppobj TSExplicitList<OsNet::NETCONN,8> : TSList<OsNet::NETCONN,TSGetExplicitLink<OsNet::NETCONN> >
{
};

/* 2769 */
struct __cppobj OsNet::TSSlottedListEx<OsNet::NETCONN,8,8>
{
  OsNet::TSSlottedListEx<OsNet::NETCONN,8,8>_vtbl *__vftable /*VFT*/;
  TSExplicitList<OsNet::NETCONN,8> m_lists[8];
  CCritSect m_locks[8];
  OsNet::LOCKEDLONG m_linkSlot;
  OsNet::LOCKEDLONG m_count;
};

/* 2775 */
struct __cppobj TSLink<OsNet::TCPLISTEN>
{
  TSLink<OsNet::TCPLISTEN> *m_prevlink;
  OsNet::TCPLISTEN *m_next;
};

/* 2782 */
struct __cppobj TSList<OsNet::TCPLISTEN,TSGetExplicitLink<OsNet::TCPLISTEN> >
{
  int m_linkoffset;
  TSLink<OsNet::TCPLISTEN> m_terminator;
};

/* 2783 */
struct __cppobj TSExplicitList<OsNet::TCPLISTEN,8> : TSList<OsNet::TCPLISTEN,TSGetExplicitLink<OsNet::TCPLISTEN> >
{
};

/* 2773 */
struct __cppobj OsNet::TSSlottedListEx<OsNet::TCPLISTEN,8,1>
{
  OsNet::TSSlottedListEx<OsNet::TCPLISTEN,8,1>_vtbl *__vftable /*VFT*/;
  TSExplicitList<OsNet::TCPLISTEN,8> m_lists[1];
  CCritSect m_locks[1];
  OsNet::LOCKEDLONG m_linkSlot;
  OsNet::LOCKEDLONG m_count;
};

/* 2786 */
struct __cppobj TSLink<OsNet::NETCONNECT>
{
  TSLink<OsNet::NETCONNECT> *m_prevlink;
  OsNet::NETCONNECT *m_next;
};

/* 2789 */
struct __cppobj TSList<OsNet::NETCONNECT,TSGetExplicitLink<OsNet::NETCONNECT> >
{
  int m_linkoffset;
  TSLink<OsNet::NETCONNECT> m_terminator;
};

/* 2790 */
struct __cppobj TSExplicitList<OsNet::NETCONNECT,8> : TSList<OsNet::NETCONNECT,TSGetExplicitLink<OsNet::NETCONNECT> >
{
};

/* 2784 */
struct __cppobj OsNet::TSSlottedListEx<OsNet::NETCONNECT,8,1>
{
  OsNet::TSSlottedListEx<OsNet::NETCONNECT,8,1>_vtbl *__vftable /*VFT*/;
  TSExplicitList<OsNet::NETCONNECT,8> m_lists[1];
  CCritSect m_locks[1];
  OsNet::LOCKEDLONG m_linkSlot;
  OsNet::LOCKEDLONG m_count;
};

/* 2791 */
struct __cppobj OsNet::CEventLock
{
  void *m_event;
};

/* 2792 */
struct __cppobj TSLink<OsNet::TCPHOSTADDRINFO>
{
  TSLink<OsNet::TCPHOSTADDRINFO> *m_prevlink;
  OsNet::TCPHOSTADDRINFO *m_next;
};

/* 2801 */
struct __cppobj TSList<OsNet::TCPHOSTADDRINFO,TSGetLink<OsNet::TCPHOSTADDRINFO> >
{
  int m_linkoffset;
  TSLink<OsNet::TCPHOSTADDRINFO> m_terminator;
};

/* 2724 */
struct __cppobj OsNet::TCPNET
{
  OsNet::LOCKEDLONG m_refCount;
  unsigned int m_pumpThreadCount;
  TSGrowableArray<void *> m_pumpThreads;
  void *m_udpPumpThread;
  void *m_udpPumpEvent;
  CCritSect m_loopLock;
  TSExplicitList<OsNet::LOOPCONN::INPUT,8> m_loopInputRecycleList;
  TSExplicitList<OsNet::LOOPCONN::INPUT,8> m_loopInputList;
  TSExplicitList<OsNet::LOOPCONN,108> m_loopDisconnectList;
  OsNet::TSSlottedListEx<OsNet::NETCONN,8,8> m_connList[4];
  void *m_listenThread;
  OsNet::TSSlottedListEx<OsNet::TCPLISTEN,8,1> m_listenList;
  void *m_baseThread;
  void *m_baseEvent;
  int m_baseTcpShutdown;
  void *m_baseTcpShutdownEvent;
  OsNet::TSSlottedListEx<OsNet::NETCONNECT,8,1> m_connectList[4];
  void *m_port;
  OsNet::LOCKEDLONG m_hostAddrInfoCount;
  OsNet::CEventLock m_hostAddrInfoLock;
  unsigned int m_hostAddrInfoId;
  TSList<OsNet::TCPHOSTADDRINFO,TSGetLink<OsNet::TCPHOSTADDRINFO> > m_hostAddrInfoList;
};

/* 2726 */
struct __cppobj TSLink<OsNet::NETSELSOCKPTR>
{
  TSLink<OsNet::NETSELSOCKPTR> *m_prevlink;
  OsNet::NETSELSOCKPTR *m_next;
};

/* 2730 */
struct __cppobj TSList<OsNet::NETSELSOCKPTR,TSGetExplicitLink<OsNet::NETSELSOCKPTR> >
{
  int m_linkoffset;
  TSLink<OsNet::NETSELSOCKPTR> m_terminator;
};

/* 2731 */
struct __cppobj TSExplicitList<OsNet::NETSELSOCKPTR,-572662307> : TSList<OsNet::NETSELSOCKPTR,TSGetExplicitLink<OsNet::NETSELSOCKPTR> >
{
};

/* 2733 */
struct __cppobj TSBaseArray<TSExplicitList<OsNet::NETSELSOCKPTR,-572662307> >
{
  TSBaseArray<TSExplicitList<OsNet::NETSELSOCKPTR,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<OsNet::NETSELSOCKPTR,-572662307> *m_data;
};

/* 2736 */
struct __cppobj TSFixedArray<TSExplicitList<OsNet::NETSELSOCKPTR,-572662307> > : TSBaseArray<TSExplicitList<OsNet::NETSELSOCKPTR,-572662307> >
{
};

/* 2738 */
struct __cppobj TSGrowableArray<TSExplicitList<OsNet::NETSELSOCKPTR,-572662307> > : TSFixedArray<TSExplicitList<OsNet::NETSELSOCKPTR,-572662307> >
{
  unsigned int m_chunk;
};

/* 2729 */
struct __cppobj TSHashTable<OsNet::NETSELSOCKPTR,HASHKEY_NONE>
{
  TSHashTable<OsNet::NETSELSOCKPTR,HASHKEY_NONE>_vtbl *__vftable /*VFT*/;
  TSExplicitList<OsNet::NETSELSOCKPTR,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<OsNet::NETSELSOCKPTR,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 2739 */
struct __cppobj TSLink<TSHashObjectChunk<OsNet::NETSELSOCKPTR,HASHKEY_NONE> >
{
  TSLink<TSHashObjectChunk<OsNet::NETSELSOCKPTR,HASHKEY_NONE> > *m_prevlink;
  TSHashObjectChunk<OsNet::NETSELSOCKPTR,HASHKEY_NONE> *m_next;
};

/* 2747 */
struct __cppobj TSList<TSHashObjectChunk<OsNet::NETSELSOCKPTR,HASHKEY_NONE>,TSGetExplicitLink<TSHashObjectChunk<OsNet::NETSELSOCKPTR,HASHKEY_NONE> > >
{
  int m_linkoffset;
  TSLink<TSHashObjectChunk<OsNet::NETSELSOCKPTR,HASHKEY_NONE> > m_terminator;
};

/* 2748 */
struct __cppobj TSExplicitList<TSHashObjectChunk<OsNet::NETSELSOCKPTR,HASHKEY_NONE>,20> : TSList<TSHashObjectChunk<OsNet::NETSELSOCKPTR,HASHKEY_NONE>,TSGetExplicitLink<TSHashObjectChunk<OsNet::NETSELSOCKPTR,HASHKEY_NONE> > >
{
};

/* 2749 */
struct __cppobj TSHashTableReuse<OsNet::NETSELSOCKPTR,HASHKEY_NONE,1> : TSHashTable<OsNet::NETSELSOCKPTR,HASHKEY_NONE>
{
  TSExplicitList<OsNet::NETSELSOCKPTR,-572662307> m_reuseList;
  unsigned int m_chunkSize;
  TSExplicitList<TSHashObjectChunk<OsNet::NETSELSOCKPTR,HASHKEY_NONE>,20> m_chunkList;
};

/* 2751 */
struct __cppobj OsNet::NETSELECTSETS
{
  OsNet::TCPNET *m_net;
  fd_set m_sets[];
  _BYTE gap4[780];
  TSHashTableReuse<OsNet::NETSELSOCKPTR,HASHKEY_NONE,1> m_selsockTable;
};

/* 2770 */
struct /*VFT*/ OsNet::TSSlottedListEx<OsNet::NETCONN,8,8>_vtbl
{
  void (__thiscall *OsNet::TSSlottedListEx<OsNet::NETCONN,8,8>::~TSSlottedListEx<OsNet::NETCONN,8,8>)(OsNet::TSSlottedListEx<OsNet::NETCONN,8,8> *this);
};

/* 2774 */
struct /*VFT*/ OsNet::TSSlottedListEx<OsNet::TCPLISTEN,8,1>_vtbl
{
  void (__thiscall *~OsNet::TSSlottedListEx<OsNet::TCPLISTEN,8,1>)(OsNet::TSSlottedListEx<OsNet::TCPLISTEN,8,1> *this);
};

/* 2777 */
struct __cppobj TSLink<OsNet::TCPACCEPT>
{
  TSLink<OsNet::TCPACCEPT> *m_prevlink;
  OsNet::TCPACCEPT *m_next;
};

/* 2780 */
struct __cppobj TSList<OsNet::TCPACCEPT,TSGetLink<OsNet::TCPACCEPT> >
{
  int m_linkoffset;
  TSLink<OsNet::TCPACCEPT> m_terminator;
};

/* 2776 */
struct __cppobj __unaligned __declspec(align(4)) OsNet::TCPLISTEN : OsNet::NETSELSOCK
{
  TSLink<OsNet::TCPLISTEN> m_link;
  unsigned int m_portAddr;
  int (__stdcall *m_eventProc)(HNETCONN__ *, const NETCONNADDR *, NETNOTE, void *, const void *, unsigned int, unsigned int *);
  void *m_user;
  int m_enabled;
  TSList<OsNet::TCPACCEPT,TSGetLink<OsNet::TCPACCEPT> > m_acceptList;
};

/* 2785 */
struct /*VFT*/ OsNet::TSSlottedListEx<OsNet::NETCONNECT,8,1>_vtbl
{
  void (__thiscall *OsNet::TSSlottedListEx<OsNet::NETCONNECT,8,1>::~TSSlottedListEx<OsNet::NETCONNECT,8,1>)(OsNet::TSSlottedListEx<OsNet::NETCONNECT,8,1> *this);
};

/* 2787 */
struct __cppobj __unaligned __declspec(align(4)) OsNet::NETCONNECT : OsNet::NETSELSOCK
{
  TSLink<OsNet::NETCONNECT> m_link;
  void *m_user;
  void *m_data;
  unsigned int m_bytes;
};

/* 2793 */
struct __cppobj TSLinkedNode<OsNet::TCPHOSTADDRINFO>
{
  TSLink<OsNet::TCPHOSTADDRINFO> m_link;
};

/* 2794 */
struct __cppobj TSBaseArray<NETADDR>
{
  TSBaseArray<NETADDR>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  NETADDR *m_data;
};

/* 2797 */
struct __cppobj TSFixedArray<NETADDR> : TSBaseArray<NETADDR>
{
};

/* 2799 */
struct __cppobj TSGrowableArray<NETADDR> : TSFixedArray<NETADDR>
{
  unsigned int m_chunk;
};

/* 2800 */
struct __cppobj OsNet::TCPHOSTADDRINFO : TSLinkedNode<OsNet::TCPHOSTADDRINFO>
{
  char *m_hostNameList;
  char *m_hostNameCurr;
  unsigned int m_infoId;
  void *m_thread;
  void (__stdcall *m_hostAddrProc)(const NETADDR *, unsigned int, void *);
  void *m_user;
  int m_ready;
  TSGrowableArray<NETADDR> m_addrs;
};

/* 2732 */
struct /*VFT*/ TSHashTable<OsNet::NETSELSOCKPTR,HASHKEY_NONE>_vtbl
{
  void (__thiscall *TSHashTable<OsNet::NETSELSOCKPTR,HASHKEY_NONE>::InternalDelete)(TSHashTable<OsNet::NETSELSOCKPTR,HASHKEY_NONE> *this, OsNet::NETSELSOCKPTR *);
  OsNet::NETSELSOCKPTR *(__thiscall *TSHashTable<OsNet::NETSELSOCKPTR,HASHKEY_NONE>::InternalNew)(TSHashTable<OsNet::NETSELSOCKPTR,HASHKEY_NONE> *this, TSExplicitList<OsNet::NETSELSOCKPTR,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *TSHashTable<OsNet::NETSELSOCKPTR,HASHKEY_NONE>::~TSHashTable<OsNet::NETSELSOCKPTR,HASHKEY_NONE>)(TSHashTable<OsNet::NETSELSOCKPTR,HASHKEY_NONE> *this);
  void (__thiscall *TSHashTable<OsNet::NETSELSOCKPTR,HASHKEY_NONE>::Destroy)(TSHashTable<OsNet::NETSELSOCKPTR,HASHKEY_NONE> *this);
};

/* 2728 */
struct __cppobj __declspec(align(4)) TSHashObject<OsNet::NETSELSOCKPTR,HASHKEY_NONE>
{
  unsigned int m_hashval;
  TSLink<OsNet::NETSELSOCKPTR> m_linktoslot;
  TSLink<OsNet::NETSELSOCKPTR> m_linktofull;
  HASHKEY_NONE m_key;
};

/* 2727 */
struct __cppobj OsNet::NETSELSOCKPTR : TSHashObject<OsNet::NETSELSOCKPTR,HASHKEY_NONE>
{
  OsNet::NETSELSOCK *ptr;
};

/* 2734 */
struct /*VFT*/ TSBaseArray<TSExplicitList<OsNet::NETSELSOCKPTR,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<OsNet::NETSELSOCKPTR,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<OsNet::NETSELSOCKPTR,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<OsNet::NETSELSOCKPTR,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<OsNet::NETSELSOCKPTR,-572662307> > *this);
};

/* 2740 */
struct __cppobj TSBaseArray<OsNet::NETSELSOCKPTR>
{
  TSBaseArray<OsNet::NETSELSOCKPTR>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  OsNet::NETSELSOCKPTR *m_data;
};

/* 2743 */
struct __cppobj TSFixedArray<OsNet::NETSELSOCKPTR> : TSBaseArray<OsNet::NETSELSOCKPTR>
{
};

/* 2745 */
struct __cppobj TSGrowableArray<OsNet::NETSELSOCKPTR> : TSFixedArray<OsNet::NETSELSOCKPTR>
{
  unsigned int m_chunk;
};

/* 2746 */
struct __cppobj __unaligned __declspec(align(4)) TSHashObjectChunk<OsNet::NETSELSOCKPTR,HASHKEY_NONE>
{
  TSGrowableArray<OsNet::NETSELSOCKPTR> m_array;
  TSLink<TSHashObjectChunk<OsNet::NETSELSOCKPTR,HASHKEY_NONE> > m_link;
};

/* 2778 */
struct __cppobj TSLinkedNode<OsNet::TCPACCEPT>
{
  TSLink<OsNet::TCPACCEPT> m_link;
};

/* 2756 */
struct OsNet::NETOVERLAP
{
  _OVERLAPPED m_overlapped;
  OsNet::OVERLAPTYPE m_type;
};

/* 2779 */
struct __cppobj OsNet::TCPACCEPT : TSLinkedNode<OsNet::TCPACCEPT>
{
  OsNet::NETOVERLAP m_overlap;
  CCritSect m_lock;
  unsigned __int8 m_addr[64];
  OsNet::TCPLISTEN *m_listen;
  unsigned int m_sock;
};

/* 2795 */
struct /*VFT*/ TSBaseArray<NETADDR>_vtbl
{
  const char *(__thiscall *TSBaseArray<NETADDR>::MemFileName)(TSBaseArray<NETADDR> *this);
  int (__thiscall *TSBaseArray<NETADDR>::MemLineNo)(TSBaseArray<NETADDR> *this);
};

/* 2741 */
struct /*VFT*/ TSBaseArray<OsNet::NETSELSOCKPTR>_vtbl
{
  const char *(__thiscall *TSBaseArray<OsNet::NETSELSOCKPTR>::MemFileName)(TSBaseArray<OsNet::NETSELSOCKPTR> *this);
  int (__thiscall *TSBaseArray<OsNet::NETSELSOCKPTR>::MemLineNo)(TSBaseArray<OsNet::NETSELSOCKPTR> *this);
};

/* 2735 */
struct /*VFT*/ TSFixedArray<TSExplicitList<OsNet::NETSELSOCKPTR,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<OsNet::NETSELSOCKPTR,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<OsNet::NETSELSOCKPTR,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<OsNet::NETSELSOCKPTR,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<OsNet::NETSELSOCKPTR,-572662307> > *this);
};

/* 2737 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<OsNet::NETSELSOCKPTR,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<OsNet::NETSELSOCKPTR,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<OsNet::NETSELSOCKPTR,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<OsNet::NETSELSOCKPTR,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<OsNet::NETSELSOCKPTR,-572662307> > *this);
};

/* 2742 */
struct /*VFT*/ TSFixedArray<OsNet::NETSELSOCKPTR>_vtbl
{
  const char *(__thiscall *TSBaseArray<OsNet::NETSELSOCKPTR>::MemFileName)(struct TSFixedArray<OsNet::NETSELSOCKPTR> *this);
  int (__thiscall *TSBaseArray<OsNet::NETSELSOCKPTR>::MemLineNo)(struct TSFixedArray<OsNet::NETSELSOCKPTR> *this);
};

/* 2744 */
struct /*VFT*/ TSGrowableArray<OsNet::NETSELSOCKPTR>_vtbl
{
  const char *(__thiscall *TSBaseArray<OsNet::NETSELSOCKPTR>::MemFileName)(struct TSGrowableArray<OsNet::NETSELSOCKPTR> *this);
  int (__thiscall *TSBaseArray<OsNet::NETSELSOCKPTR>::MemLineNo)(struct TSGrowableArray<OsNet::NETSELSOCKPTR> *this);
};

/* 2750 */
struct /*VFT*/ TSHashTableReuse<OsNet::NETSELSOCKPTR,HASHKEY_NONE,1>_vtbl
{
  void (__thiscall *TSHashTableReuse<OsNet::NETSELSOCKPTR,HASHKEY_NONE,1>::Destroy)(TSHashTableReuse<OsNet::NETSELSOCKPTR,HASHKEY_NONE,1> *this);
  OsNet::NETSELSOCKPTR *(__thiscall *TSHashTable<OsNet::NETSELSOCKPTR,HASHKEY_NONE>::InternalNew)(struct TSHashTableReuse<OsNet::NETSELSOCKPTR,HASHKEY_NONE,1> *this, TSExplicitList<OsNet::NETSELSOCKPTR,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *TSHashTable<OsNet::NETSELSOCKPTR,HASHKEY_NONE>::~TSHashTable<OsNet::NETSELSOCKPTR,HASHKEY_NONE>)(struct TSHashTableReuse<OsNet::NETSELSOCKPTR,HASHKEY_NONE,1> *this);
  void (__thiscall *TSHashTable<OsNet::NETSELSOCKPTR,HASHKEY_NONE>::Destroy)(struct TSHashTableReuse<OsNet::NETSELSOCKPTR,HASHKEY_NONE,1> *this);
};

/* 2757 */
struct /*VFT*/ OsNet::NETCONN_vtbl
{
  void (__thiscall *Selected)(struct OsNet::NETCONN *this, OsNet::TCPNET *, OsNet::SELECTSET);
  int (__thiscall *OsNet::NETSELSOCK::IsClosed)(struct OsNet::NETCONN *this);
  void (__thiscall *AddToSelectSets)(struct OsNet::NETCONN *this, OsNet::NETSELECTSETS *);
  void (__thiscall *CloseAndUnlock)(OsNet::NETCONN *this);
  void (__thiscall *~OsNet::NETCONN)(OsNet::NETCONN *this);
  void (__thiscall *OsNet::NETCONN::IncIo)(OsNet::NETCONN *this);
  void (__thiscall *OsNet::NETCONN::DecIo)(OsNet::NETCONN *this);
  void (__thiscall *OsNet::NETCONN::CompleteWrite)(OsNet::NETCONN *this, OsNet::NETOVERLAP *, unsigned int);
  void (__thiscall *OsNet::NETCONN::CompleteRead)(OsNet::NETCONN *this, OsNet::NETOVERLAP *, unsigned int);
  void (__thiscall *OsNet::NETCONN::Close)(OsNet::NETCONN *this);
};

/* 2759 */
struct /*VFT*/ OsNet::NETCONNFULL_vtbl
{
  void (__thiscall *~OsNet::NETCONNFULL)(OsNet::NETCONNFULL *this);
  int (__thiscall *OsNet::NETSELSOCK::IsClosed)(struct OsNet::NETCONNFULL *this);
  void (__thiscall *AddToSelectSets)(struct OsNet::NETCONNFULL *this, OsNet::NETSELECTSETS *);
  void (__thiscall *CloseAndUnlock)(struct OsNet::NETCONNFULL *this);
  void (__thiscall *~OsNet::NETCONNFULL)(struct OsNet::NETCONNFULL *this);
  void (__thiscall *OsNet::NETCONN::IncIo)(struct OsNet::NETCONNFULL *this);
  void (__thiscall *OsNet::NETCONN::DecIo)(struct OsNet::NETCONNFULL *this);
  void (__thiscall *OsNet::NETCONN::CompleteWrite)(struct OsNet::NETCONNFULL *this, OsNet::NETOVERLAP *, unsigned int);
  void (__thiscall *OsNet::NETCONN::CompleteRead)(struct OsNet::NETCONNFULL *this, OsNet::NETOVERLAP *, unsigned int);
  void (__thiscall *OsNet::NETCONN::Close)(struct OsNet::NETCONNFULL *this);
  void (__thiscall *Send)(OsNet::NETCONNFULL *this, const void *, unsigned int);
  OS_SEND (__thiscall *SendSync)(OsNet::NETCONNFULL *this, const void *, unsigned int, unsigned int *, unsigned int);
  void (__thiscall *OsNet::NETCONNFULL::SetNagle)(OsNet::NETCONNFULL *this, int);
  int (__thiscall *OsNet::NETCONNFULL::SetWindow)(OsNet::NETCONNFULL *this, unsigned int);
  void (__thiscall *OsNet::NETCONNFULL::SetRecvTimeout)(OsNet::NETCONNFULL *this, unsigned int);
};

/* 2764 */
struct /*VFT*/ OsNet::LOOPCONN_vtbl
{
  int (__thiscall *OsNet::LOOPCONN::IsClosed)(OsNet::LOOPCONN *this);
  int (__thiscall *OsNet::NETSELSOCK::IsClosed)(struct OsNet::LOOPCONN *this);
  void (__thiscall *AddToSelectSets)(struct OsNet::LOOPCONN *this, OsNet::NETSELECTSETS *);
  void (__thiscall *CloseAndUnlock)(struct OsNet::LOOPCONN *this);
  void (__thiscall *~OsNet::LOOPCONN)(struct OsNet::LOOPCONN *this);
  void (__thiscall *OsNet::NETCONN::IncIo)(struct OsNet::LOOPCONN *this);
  void (__thiscall *OsNet::NETCONN::DecIo)(struct OsNet::LOOPCONN *this);
  void (__thiscall *OsNet::NETCONN::CompleteWrite)(struct OsNet::LOOPCONN *this, OsNet::NETOVERLAP *, unsigned int);
  void (__thiscall *OsNet::NETCONN::CompleteRead)(struct OsNet::LOOPCONN *this, OsNet::NETOVERLAP *, unsigned int);
  void (__thiscall *OsNet::NETCONN::Close)(struct OsNet::LOOPCONN *this);
  void (__thiscall *Send)(struct OsNet::LOOPCONN *this, const void *, unsigned int);
  OS_SEND (__thiscall *SendSync)(struct OsNet::LOOPCONN *this, const void *, unsigned int, unsigned int *, unsigned int);
  void (__thiscall *OsNet::NETCONNFULL::SetNagle)(struct OsNet::LOOPCONN *this, int);
  int (__thiscall *OsNet::NETCONNFULL::SetWindow)(struct OsNet::LOOPCONN *this, unsigned int);
  void (__thiscall *OsNet::NETCONNFULL::SetRecvTimeout)(struct OsNet::LOOPCONN *this, unsigned int);
};

/* 2781 */
struct /*VFT*/ OsNet::TCPLISTEN_vtbl
{
  void (__thiscall *OsNet::TCPLISTEN::AddToSelectSets)(OsNet::TCPLISTEN *this, OsNet::NETSELECTSETS *);
  int (__thiscall *OsNet::NETSELSOCK::IsClosed)(struct OsNet::TCPLISTEN *this);
  void (__thiscall *AddToSelectSets)(struct OsNet::TCPLISTEN *this, OsNet::NETSELECTSETS *);
};

/* 2788 */
struct /*VFT*/ OsNet::NETCONNECT_vtbl
{
  void (__thiscall *Selected)(struct OsNet::NETCONNECT *this, OsNet::TCPNET *, OsNet::SELECTSET);
  int (__thiscall *OsNet::NETSELSOCK::IsClosed)(struct OsNet::NETCONNECT *this);
  void (__thiscall *AddToSelectSets)(struct OsNet::NETCONNECT *this, OsNet::NETSELECTSETS *);
  void (__thiscall *Fail)(OsNet::NETCONNECT *this);
  void (__thiscall *Complete)(OsNet::NETCONNECT *this, OsNet::TCPNET *);
};

/* 2796 */
struct /*VFT*/ TSFixedArray<NETADDR>_vtbl
{
  const char *(__thiscall *TSBaseArray<NETADDR>::MemFileName)(struct TSFixedArray<NETADDR> *this);
  int (__thiscall *TSBaseArray<NETADDR>::MemLineNo)(struct TSFixedArray<NETADDR> *this);
};

/* 2798 */
struct /*VFT*/ TSGrowableArray<NETADDR>_vtbl
{
  const char *(__thiscall *TSBaseArray<NETADDR>::MemFileName)(struct TSGrowableArray<NETADDR> *this);
  int (__thiscall *TSBaseArray<NETADDR>::MemLineNo)(struct TSGrowableArray<NETADDR> *this);
};

/* 2802 */
struct __cppobj OsNet::LOOPCONNECT : OsNet::NETCONNECT
{
  int (__stdcall *m_eventProcSrc)(HNETCONN__ *, const NETCONNADDR *, NETNOTE, void *, const void *, unsigned int, unsigned int *);
  int (__stdcall *m_eventProcDst)(HNETCONN__ *, const NETCONNADDR *, NETNOTE, void *, const void *, unsigned int, unsigned int *);
};

/* 2803 */
struct /*VFT*/ OsNet::LOOPCONNECT_vtbl
{
  void (__thiscall *OsNet::LOOPCONNECT::Complete)(OsNet::LOOPCONNECT *this, OsNet::TCPNET *);
  int (__thiscall *OsNet::NETSELSOCK::IsClosed)(struct OsNet::LOOPCONNECT *this);
  void (__thiscall *AddToSelectSets)(struct OsNet::LOOPCONNECT *this, OsNet::NETSELECTSETS *);
  void (__thiscall *Fail)(struct OsNet::LOOPCONNECT *this);
  void (__thiscall *Complete)(struct OsNet::LOOPCONNECT *this, OsNet::TCPNET *);
};

/* 2804 */
struct __cppobj OsNet::TCPCONNECT : OsNet::NETCONNECT
{
  unsigned int m_nodeNumber;
  unsigned int m_portAddr;
  int (__stdcall *m_eventProc)(HNETCONN__ *, const NETCONNADDR *, NETNOTE, void *, const void *, unsigned int, unsigned int *);
};

/* 2805 */
struct /*VFT*/ OsNet::TCPCONNECT_vtbl
{
  void (__thiscall *OsNet::TCPCONNECT::Complete)(OsNet::TCPCONNECT *this, OsNet::TCPNET *);
  int (__thiscall *OsNet::NETSELSOCK::IsClosed)(struct OsNet::TCPCONNECT *this);
  void (__thiscall *AddToSelectSets)(struct OsNet::TCPCONNECT *this, OsNet::NETSELECTSETS *);
  void (__thiscall *Fail)(struct OsNet::TCPCONNECT *this);
  void (__thiscall *Complete)(struct OsNet::TCPCONNECT *this, OsNet::TCPNET *);
};

/* 2806 */
struct __cppobj OsNet::FILECONNECT : OsNet::NETCONNECT
{
  void *m_file;
  int (__stdcall *m_eventProc)(HNETCONN__ *, const NETCONNADDR *, NETNOTE, void *, const void *, unsigned int, unsigned int *);
};

/* 2807 */
struct /*VFT*/ OsNet::FILECONNECT_vtbl
{
  void (__thiscall *OsNet::FILECONNECT::Complete)(OsNet::FILECONNECT *this, OsNet::TCPNET *);
  int (__thiscall *OsNet::NETSELSOCK::IsClosed)(struct OsNet::FILECONNECT *this);
  void (__thiscall *AddToSelectSets)(struct OsNet::FILECONNECT *this, OsNet::NETSELECTSETS *);
  void (__thiscall *Fail)(struct OsNet::FILECONNECT *this);
  void (__thiscall *Complete)(struct OsNet::FILECONNECT *this, OsNet::TCPNET *);
};

/* 2808 */
struct sockaddr_in
{
  __int16 sin_family;
  unsigned __int16 sin_port;
  in_addr sin_addr;
  char sin_zero[8];
};

/* 2809 */
struct __cppobj OsNet::TSSlottedListEx<OsNet::NETCONN,8,8>::Iterator
{
  OsNet::TSSlottedListEx<OsNet::NETCONN,8,8> *m_slottedList;
  OsNet::NETCONN *m_curr;
  OsNet::NETCONN *m_next;
  OsNet::NETCONN *m_mark;
  int m_slot;
};

/* 2810 */
struct __cppobj OsNet::TSSlottedListEx<OsNet::TCPLISTEN,8,1>::Iterator
{
  OsNet::TSSlottedListEx<OsNet::TCPLISTEN,8,1> *m_slottedList;
  OsNet::TCPLISTEN *m_curr;
  OsNet::TCPLISTEN *m_next;
  OsNet::TCPLISTEN *m_mark;
  int m_slot;
};

/* 2811 */
struct __cppobj OsNet::TSSlottedListEx<OsNet::NETCONNECT,8,1>::Iterator
{
  OsNet::TSSlottedListEx<OsNet::NETCONNECT,8,1> *m_slottedList;
  OsNet::NETCONNECT *m_curr;
  OsNet::NETCONNECT *m_next;
  OsNet::NETCONNECT *m_mark;
  int m_slot;
};

/* 2812 */
struct __cppobj __declspec(align(4)) OsNet::TCPHOSTADDRTHREAD
{
  OsNet::TCPNET *m_net;
  unsigned int m_infoId;
  void *m_event;
  unsigned __int16 m_defaultPort;
};

/* 2813 */
struct __cppobj OsNet::NETCONNLESS : OsNet::NETCONN
{
};

/* 2814 */
struct /*VFT*/ OsNet::NETCONNLESS_vtbl
{
  void (__thiscall *~OsNet::NETCONNLESS)(OsNet::NETCONNLESS *this);
  int (__thiscall *OsNet::NETSELSOCK::IsClosed)(struct OsNet::NETCONNLESS *this);
  void (__thiscall *AddToSelectSets)(struct OsNet::NETCONNLESS *this, OsNet::NETSELECTSETS *);
  void (__thiscall *CloseAndUnlock)(struct OsNet::NETCONNLESS *this);
  void (__thiscall *~OsNet::NETCONNLESS)(struct OsNet::NETCONNLESS *this);
  void (__thiscall *OsNet::NETCONN::IncIo)(struct OsNet::NETCONNLESS *this);
  void (__thiscall *OsNet::NETCONN::DecIo)(struct OsNet::NETCONNLESS *this);
  void (__thiscall *OsNet::NETCONN::CompleteWrite)(struct OsNet::NETCONNLESS *this, OsNet::NETOVERLAP *, unsigned int);
  void (__thiscall *OsNet::NETCONN::CompleteRead)(struct OsNet::NETCONNLESS *this, OsNet::NETOVERLAP *, unsigned int);
  void (__thiscall *OsNet::NETCONN::Close)(struct OsNet::NETCONNLESS *this);
  void (__thiscall *SendTo)(OsNet::NETCONNLESS *this, const void *, unsigned int, unsigned int, const NETADDR *);
};

/* 2815 */
struct __cppobj OsNet::UDPCONN : OsNet::NETCONNLESS
{
};

/* 2816 */
struct /*VFT*/ OsNet::UDPCONN_vtbl
{
  void (__thiscall *OsNet::UDPCONN::SendTo)(OsNet::UDPCONN *this, const void *, unsigned int, unsigned int, const NETADDR *);
  int (__thiscall *OsNet::NETSELSOCK::IsClosed)(struct OsNet::UDPCONN *this);
  void (__thiscall *AddToSelectSets)(struct OsNet::UDPCONN *this, OsNet::NETSELECTSETS *);
  void (__thiscall *CloseAndUnlock)(struct OsNet::UDPCONN *this);
  void (__thiscall *~OsNet::UDPCONN)(struct OsNet::UDPCONN *this);
  void (__thiscall *OsNet::NETCONN::IncIo)(struct OsNet::UDPCONN *this);
  void (__thiscall *OsNet::NETCONN::DecIo)(struct OsNet::UDPCONN *this);
  void (__thiscall *OsNet::NETCONN::CompleteWrite)(struct OsNet::UDPCONN *this, OsNet::NETOVERLAP *, unsigned int);
  void (__thiscall *OsNet::NETCONN::CompleteRead)(struct OsNet::UDPCONN *this, OsNet::NETOVERLAP *, unsigned int);
  void (__thiscall *OsNet::NETCONN::Close)(struct OsNet::UDPCONN *this);
  void (__thiscall *SendTo)(struct OsNet::UDPCONN *this, const void *, unsigned int, unsigned int, const NETADDR *);
};

/* 2817 */
struct __cppobj TSLink<OsNet::OUTPUT>
{
  TSLink<OsNet::OUTPUT> *m_prevlink;
  OsNet::OUTPUT *m_next;
};

/* 2818 */
struct __cppobj TSLinkedNode<OsNet::OUTPUT>
{
  TSLink<OsNet::OUTPUT> m_link;
};

/* 2819 */
struct $FC3A524199D8D0E6B412A4FE616716A0
{
  void *m_operationId;
};

/* 2820 */
struct $B3B36A368278FFC83645E189DBDB6691
{
  unsigned int m_time;
};

/* 2821 */
union $7D8D231DB0AADE56FCE2FF71BDB14A3C
{
  $FC3A524199D8D0E6B412A4FE616716A0 m_file;
  $B3B36A368278FFC83645E189DBDB6691 m_sock;
};

/* 2822 */
struct __cppobj OsNet::OUTPUT : TSLinkedNode<OsNet::OUTPUT>
{
  OsNet::NETOVERLAP m_overlap;
  OsNet::OUTPUTSTATE m_state;
  $7D8D231DB0AADE56FCE2FF71BDB14A3C ___u3;
  unsigned int m_bytes;
  unsigned int m_dataBytes;
  unsigned __int8 *m_data;
  SEvent *m_completionEvent;
};

/* 2823 */
struct __cppobj TSList<OsNet::OUTPUT,TSGetLink<OsNet::OUTPUT> >
{
  int m_linkoffset;
  TSLink<OsNet::OUTPUT> m_terminator;
};

/* 2824 */
struct __cppobj __declspec(align(8)) OsNet::TCPCONN : OsNet::NETCONNFULL
{
  TSList<OsNet::OUTPUT,TSGetLink<OsNet::OUTPUT> > m_outputList;
  unsigned int m_bytes;
  unsigned __int8 m_data[1460];
};

/* 2825 */
struct /*VFT*/ OsNet::TCPCONN_vtbl
{
  void (__thiscall *OsNet::TCPCONN::SetRecvTimeout)(OsNet::TCPCONN *this, unsigned int);
  int (__thiscall *OsNet::NETSELSOCK::IsClosed)(struct OsNet::TCPCONN *this);
  void (__thiscall *AddToSelectSets)(struct OsNet::TCPCONN *this, OsNet::NETSELECTSETS *);
  void (__thiscall *CloseAndUnlock)(struct OsNet::TCPCONN *this);
  void (__thiscall *~OsNet::TCPCONN)(struct OsNet::TCPCONN *this);
  void (__thiscall *OsNet::NETCONN::IncIo)(struct OsNet::TCPCONN *this);
  void (__thiscall *OsNet::NETCONN::DecIo)(struct OsNet::TCPCONN *this);
  void (__thiscall *OsNet::NETCONN::CompleteWrite)(struct OsNet::TCPCONN *this, OsNet::NETOVERLAP *, unsigned int);
  void (__thiscall *OsNet::NETCONN::CompleteRead)(struct OsNet::TCPCONN *this, OsNet::NETOVERLAP *, unsigned int);
  void (__thiscall *OsNet::NETCONN::Close)(struct OsNet::TCPCONN *this);
  void (__thiscall *Send)(struct OsNet::TCPCONN *this, const void *, unsigned int);
  OS_SEND (__thiscall *SendSync)(struct OsNet::TCPCONN *this, const void *, unsigned int, unsigned int *, unsigned int);
  void (__thiscall *OsNet::NETCONNFULL::SetNagle)(struct OsNet::TCPCONN *this, int);
  int (__thiscall *OsNet::NETCONNFULL::SetWindow)(struct OsNet::TCPCONN *this, unsigned int);
  void (__thiscall *OsNet::NETCONNFULL::SetRecvTimeout)(struct OsNet::TCPCONN *this, unsigned int);
  void (__thiscall *StartWriteAndLeaveLock)(OsNet::TCPCONN *this, OsNet::OUTPUT *);
  void (__thiscall *StartRead)(OsNet::TCPCONN *this);
};

/* 2826 */
struct __cppobj __declspec(align(8)) OsNet::IOTCPCONN : OsNet::TCPCONN
{
  OsNet::LOCKEDLONG m_ioCount;
  OsNet::NETOVERLAP m_readOverlap;
};

/* 2827 */
struct /*VFT*/ OsNet::IOTCPCONN_vtbl
{
  void (__thiscall *~OsNet::IOTCPCONN)(OsNet::IOTCPCONN *this);
  int (__thiscall *OsNet::NETSELSOCK::IsClosed)(struct OsNet::IOTCPCONN *this);
  void (__thiscall *AddToSelectSets)(struct OsNet::IOTCPCONN *this, OsNet::NETSELECTSETS *);
  void (__thiscall *CloseAndUnlock)(struct OsNet::IOTCPCONN *this);
  void (__thiscall *~OsNet::IOTCPCONN)(struct OsNet::IOTCPCONN *this);
  void (__thiscall *OsNet::NETCONN::IncIo)(struct OsNet::IOTCPCONN *this);
  void (__thiscall *OsNet::NETCONN::DecIo)(struct OsNet::IOTCPCONN *this);
  void (__thiscall *OsNet::NETCONN::CompleteWrite)(struct OsNet::IOTCPCONN *this, OsNet::NETOVERLAP *, unsigned int);
  void (__thiscall *OsNet::NETCONN::CompleteRead)(struct OsNet::IOTCPCONN *this, OsNet::NETOVERLAP *, unsigned int);
  void (__thiscall *OsNet::NETCONN::Close)(struct OsNet::IOTCPCONN *this);
  void (__thiscall *Send)(struct OsNet::IOTCPCONN *this, const void *, unsigned int);
  OS_SEND (__thiscall *SendSync)(struct OsNet::IOTCPCONN *this, const void *, unsigned int, unsigned int *, unsigned int);
  void (__thiscall *OsNet::NETCONNFULL::SetNagle)(struct OsNet::IOTCPCONN *this, int);
  int (__thiscall *OsNet::NETCONNFULL::SetWindow)(struct OsNet::IOTCPCONN *this, unsigned int);
  void (__thiscall *OsNet::NETCONNFULL::SetRecvTimeout)(struct OsNet::IOTCPCONN *this, unsigned int);
  void (__thiscall *StartWriteAndLeaveLock)(struct OsNet::IOTCPCONN *this, OsNet::OUTPUT *);
  void (__thiscall *StartRead)(struct OsNet::IOTCPCONN *this);
};

/* 2828 */
struct __cppobj OsNet::SLTCPCONN : OsNet::TCPCONN
{
};

/* 2829 */
struct /*VFT*/ OsNet::SLTCPCONN_vtbl
{
  void (__thiscall *~OsNet::SLTCPCONN)(OsNet::SLTCPCONN *this);
  int (__thiscall *OsNet::NETSELSOCK::IsClosed)(struct OsNet::SLTCPCONN *this);
  void (__thiscall *AddToSelectSets)(struct OsNet::SLTCPCONN *this, OsNet::NETSELECTSETS *);
  void (__thiscall *CloseAndUnlock)(struct OsNet::SLTCPCONN *this);
  void (__thiscall *~OsNet::SLTCPCONN)(struct OsNet::SLTCPCONN *this);
  void (__thiscall *OsNet::NETCONN::IncIo)(struct OsNet::SLTCPCONN *this);
  void (__thiscall *OsNet::NETCONN::DecIo)(struct OsNet::SLTCPCONN *this);
  void (__thiscall *OsNet::NETCONN::CompleteWrite)(struct OsNet::SLTCPCONN *this, OsNet::NETOVERLAP *, unsigned int);
  void (__thiscall *OsNet::NETCONN::CompleteRead)(struct OsNet::SLTCPCONN *this, OsNet::NETOVERLAP *, unsigned int);
  void (__thiscall *OsNet::NETCONN::Close)(struct OsNet::SLTCPCONN *this);
  void (__thiscall *Send)(struct OsNet::SLTCPCONN *this, const void *, unsigned int);
  OS_SEND (__thiscall *SendSync)(struct OsNet::SLTCPCONN *this, const void *, unsigned int, unsigned int *, unsigned int);
  void (__thiscall *OsNet::NETCONNFULL::SetNagle)(struct OsNet::SLTCPCONN *this, int);
  int (__thiscall *OsNet::NETCONNFULL::SetWindow)(struct OsNet::SLTCPCONN *this, unsigned int);
  void (__thiscall *OsNet::NETCONNFULL::SetRecvTimeout)(struct OsNet::SLTCPCONN *this, unsigned int);
  void (__thiscall *StartWriteAndLeaveLock)(struct OsNet::SLTCPCONN *this, OsNet::OUTPUT *);
  void (__thiscall *StartRead)(struct OsNet::SLTCPCONN *this);
};

/* 2831 */
struct __cppobj TSLink<OsNet::INPUT>
{
  TSLink<OsNet::INPUT> *m_prevlink;
  OsNet::INPUT *m_next;
};

/* 2836 */
struct __cppobj TSList<OsNet::INPUT,TSGetLink<OsNet::INPUT> >
{
  int m_linkoffset;
  TSLink<OsNet::INPUT> m_terminator;
};

/* 2830 */
struct __cppobj OsNet::FILECONN : OsNet::NETCONN
{
  OsNet::LOCKEDLONG m_ioCount;
  void *m_file;
  TSList<OsNet::OUTPUT,TSGetLink<OsNet::OUTPUT> > m_outputList;
  TSList<OsNet::INPUT,TSGetLink<OsNet::INPUT> > m_inputList;
};

/* 2832 */
struct __cppobj TSLinkedNode<OsNet::INPUT>
{
  TSLink<OsNet::INPUT> m_link;
};

/* 2833 */
struct __cppobj $F1BCC8D2ED72627AE3E1D14940DBB08E
{
};

/* 2834 */
union $88DA3BADE1F7B84B23705DAEAC26FE97
{
  $FC3A524199D8D0E6B412A4FE616716A0 m_file;
  $F1BCC8D2ED72627AE3E1D14940DBB08E m_sock;
};

/* 2835 */
struct __cppobj __unaligned __declspec(align(4)) OsNet::INPUT : TSLinkedNode<OsNet::INPUT>
{
  OsNet::NETOVERLAP m_overlap;
  $88DA3BADE1F7B84B23705DAEAC26FE97 ___u2;
  unsigned int m_bytes;
  unsigned __int8 *m_buffer;
};

/* 2837 */
struct /*VFT*/ OsNet::FILECONN_vtbl
{
  void (__thiscall *OsNet::FILECONN::AddToSelectSets)(OsNet::FILECONN *this, OsNet::NETSELECTSETS *);
  int (__thiscall *OsNet::NETSELSOCK::IsClosed)(struct OsNet::FILECONN *this);
  void (__thiscall *AddToSelectSets)(struct OsNet::FILECONN *this, OsNet::NETSELECTSETS *);
  void (__thiscall *CloseAndUnlock)(struct OsNet::FILECONN *this);
  void (__thiscall *~OsNet::FILECONN)(struct OsNet::FILECONN *this);
  void (__thiscall *OsNet::NETCONN::IncIo)(struct OsNet::FILECONN *this);
  void (__thiscall *OsNet::NETCONN::DecIo)(struct OsNet::FILECONN *this);
  void (__thiscall *OsNet::NETCONN::CompleteWrite)(struct OsNet::FILECONN *this, OsNet::NETOVERLAP *, unsigned int);
  void (__thiscall *OsNet::NETCONN::CompleteRead)(struct OsNet::FILECONN *this, OsNet::NETOVERLAP *, unsigned int);
  void (__thiscall *OsNet::NETCONN::Close)(struct OsNet::FILECONN *this);
  void (__thiscall *StartWriteAndLeaveLock)(OsNet::FILECONN *this, OsNet::OUTPUT *);
  void (__thiscall *StartRead)(OsNet::FILECONN *this, OsNet::INPUT *);
};

/* 2838 */
struct __cppobj OsNet::IOFILECONN : OsNet::FILECONN
{
};

/* 2839 */
struct /*VFT*/ OsNet::IOFILECONN_vtbl
{
  void (__thiscall *~OsNet::IOFILECONN)(OsNet::IOFILECONN *this);
  int (__thiscall *OsNet::NETSELSOCK::IsClosed)(struct OsNet::IOFILECONN *this);
  void (__thiscall *AddToSelectSets)(struct OsNet::IOFILECONN *this, OsNet::NETSELECTSETS *);
  void (__thiscall *CloseAndUnlock)(struct OsNet::IOFILECONN *this);
  void (__thiscall *~OsNet::IOFILECONN)(struct OsNet::IOFILECONN *this);
  void (__thiscall *OsNet::NETCONN::IncIo)(struct OsNet::IOFILECONN *this);
  void (__thiscall *OsNet::NETCONN::DecIo)(struct OsNet::IOFILECONN *this);
  void (__thiscall *OsNet::NETCONN::CompleteWrite)(struct OsNet::IOFILECONN *this, OsNet::NETOVERLAP *, unsigned int);
  void (__thiscall *OsNet::NETCONN::CompleteRead)(struct OsNet::IOFILECONN *this, OsNet::NETOVERLAP *, unsigned int);
  void (__thiscall *OsNet::NETCONN::Close)(struct OsNet::IOFILECONN *this);
  void (__thiscall *StartWriteAndLeaveLock)(struct OsNet::IOFILECONN *this, OsNet::OUTPUT *);
  void (__thiscall *StartRead)(struct OsNet::IOFILECONN *this, OsNet::INPUT *);
};

/* 2840 */
struct __cppobj OsNet::SLFILECONN : OsNet::FILECONN
{
  void *m_thread;
  void *m_event;
};

/* 2841 */
struct /*VFT*/ OsNet::SLFILECONN_vtbl
{
  void (__thiscall *OsNet::SLFILECONN::~SLFILECONN)(OsNet::SLFILECONN *this);
  int (__thiscall *OsNet::NETSELSOCK::IsClosed)(struct OsNet::SLFILECONN *this);
  void (__thiscall *AddToSelectSets)(struct OsNet::SLFILECONN *this, OsNet::NETSELECTSETS *);
  void (__thiscall *CloseAndUnlock)(struct OsNet::SLFILECONN *this);
  void (__thiscall *~OsNet::SLFILECONN)(struct OsNet::SLFILECONN *this);
  void (__thiscall *OsNet::NETCONN::IncIo)(struct OsNet::SLFILECONN *this);
  void (__thiscall *OsNet::NETCONN::DecIo)(struct OsNet::SLFILECONN *this);
  void (__thiscall *OsNet::NETCONN::CompleteWrite)(struct OsNet::SLFILECONN *this, OsNet::NETOVERLAP *, unsigned int);
  void (__thiscall *OsNet::NETCONN::CompleteRead)(struct OsNet::SLFILECONN *this, OsNet::NETOVERLAP *, unsigned int);
  void (__thiscall *OsNet::NETCONN::Close)(struct OsNet::SLFILECONN *this);
  void (__thiscall *StartWriteAndLeaveLock)(struct OsNet::SLFILECONN *this, OsNet::OUTPUT *);
  void (__thiscall *StartRead)(struct OsNet::SLFILECONN *this, OsNet::INPUT *);
};

/* 2842 */
struct __cppobj TSLink<ThreadData>
{
  TSLink<ThreadData> *m_prevlink;
  ThreadData *m_next;
};

/* 2843 */
struct __cppobj TSLinkedNode<ThreadData>
{
  TSLink<ThreadData> m_link;
};

/* 2852 */
struct ThreadStack
{
  unsigned int m_retAddr;
  unsigned int m_funcAddr;
  int m_logExit;
};

/* 2847 */
struct __cppobj __unaligned __declspec(align(4)) ThreadData : TSLinkedNode<ThreadData>
{
  unsigned int m_threadId;
  void *m_threadHandle;
  int m_enabled;
  ContextData *m_contextData;
  ThreadStack m_funcStack[512];
  unsigned int m_funcStackIndex;
  char m_title[128];
};

/* 2844 */
struct __cppobj TSLink<ContextData>
{
  TSLink<ContextData> *m_prevlink;
  ContextData *m_next;
};

/* 2846 */
struct __cppobj TSLinkedNode<ContextData>
{
  TSLink<ContextData> m_link;
};

/* 2848 */
struct __cppobj TSLink<ContextTurn>
{
  TSLink<ContextTurn> *m_prevlink;
  ContextTurn *m_next;
};

/* 2850 */
struct __cppobj TSLinkedNode<ContextTurn>
{
  TSLink<ContextTurn> m_link;
};

/* 2849 */
struct __cppobj ContextTurn : TSLinkedNode<ContextTurn>
{
  unsigned int m_turnId;
  unsigned int m_callBufferHead;
};

/* 2851 */
struct __unaligned __declspec(align(1)) ContextCall
{
  unsigned int m_funcAddr;
  unsigned __int8 m_depth;
};

/* 2845 */
struct __cppobj ContextData : TSLinkedNode<ContextData>
{
  ThreadData *m_threadData;
  unsigned int m_checksum;
  unsigned int m_turnId;
  unsigned int m_turnIdComplete;
  ContextTurn m_turnBuffer[1024];
  unsigned int m_turnBufferHead;
  unsigned int m_turnBufferTail;
  ContextCall m_callBuffer[256];
  unsigned int m_callBufferHead;
  unsigned int m_callBufferTail;
  char m_title[128];
};

/* 2853 */
struct __cppobj TSList<ThreadData,TSGetLink<ThreadData> >
{
  int m_linkoffset;
  TSLink<ThreadData> m_terminator;
};

/* 2854 */
struct __cppobj TSList<ContextData,TSGetLink<ContextData> >
{
  int m_linkoffset;
  TSLink<ContextData> m_terminator;
};

/* 2855 */
struct HOSFILE__
{
  int unused;
};

/* 2856 */
struct OSFILETIME
{
  unsigned __int64 m_value;
};

/* 2857 */
struct RemoveDirectoryRecurseData
{
  const char *path;
  unsigned int flags;
};

/* 2858 */
struct OS_FILE_DATA
{
  unsigned int size;
  unsigned int flags;
  char fileName[260];
};

/* 2859 */
struct $51AAF0E54CEC13D879602AC56DE6BE79
{
  unsigned int m_id;
  HINSTANCE__ *m_handle;
};

/* 2860 */
struct HIMC__
{
  int unused;
};

/* 2861 */
struct tagCANDIDATELIST
{
  unsigned int dwSize;
  unsigned int dwStyle;
  unsigned int dwCount;
  unsigned int dwSelection;
  unsigned int dwPageStart;
  unsigned int dwPageSize;
  unsigned int dwOffset[1];
};

/* 2862 */
struct __cppobj OsTimeManager
{
  __int64 cpuTicksPerSecond_qp;
  __int64 cpuTicksPerSecond_ti;
  SThread timeMgrThread;
  SEvent shutdownEvt;
  unsigned int sleepVal;
  int hasQPF;
};

/* 2863 */
struct OSSYSTEMTIME
{
  unsigned __int16 year;
  unsigned __int16 month;
  unsigned __int16 dayOfWeek;
  unsigned __int16 day;
  unsigned __int16 hour;
  unsigned __int16 minute;
  unsigned __int16 second;
  unsigned __int16 milliseconds;
};

/* 2864 */
struct OsTimeManager::TimeSnapshot
{
  __int64 rdtsc;
  unsigned int tickCount;
  _LARGE_INTEGER qperfCount;
};

/* 2865 */
struct __cppobj TSBaseArray<COsDialog *>
{
  TSBaseArray<COsDialog *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  COsDialog **m_data;
};

/* 2866 */
struct /*VFT*/ TSBaseArray<COsDialog *>_vtbl
{
  const char *(__thiscall *TSBaseArray<COsDialog *>::MemFileName)(TSBaseArray<COsDialog *> *this);
  int (__thiscall *TSBaseArray<COsDialog *>::MemLineNo)(TSBaseArray<COsDialog *> *this);
};

/* 2870 */
struct __cppobj TSBaseArray<COsControl *>
{
  TSBaseArray<COsControl *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  COsControl **m_data;
};

/* 2883 */
struct __cppobj TSFixedArray<COsControl *> : TSBaseArray<COsControl *>
{
};

/* 2885 */
struct __cppobj TSGrowableArray<COsControl *> : TSFixedArray<COsControl *>
{
  unsigned int m_chunk;
};

/* 2867 */
struct __cppobj COsDialog
{
  COsDialog_vtbl *__vftable /*VFT*/;
  void *mHandle;
  void *mTooltips;
  void (__fastcall *mCallback)(const OsGuiCallbackParams *);
  void *mCallbackParam;
  TSGrowableArray<COsControl *> mControls;
  COsControl *mCancelButton;
  int mTrackMouse;
  int mMouseInside;
  int mNeedNewTrack;
  int mTooltipsEnabled;
  int mContextMenuEnabled;
  COsMenu *mContextMenu;
  unsigned int mFlags;
  TSGrowableArray<void *> mDisabledWindows;
  NTempest::C2iVector mMinSize;
};

/* 2868 */
struct /*VFT*/ COsDialog_vtbl
{
  void (__thiscall *COsDialog::SetSize)(COsDialog *this, int, int);
};

/* 2869 */
const struct OsGuiCallbackParams
{
  int type;
  int subType;
  int code;
  void *user;
};

/* 2871 */
struct /*VFT*/ TSBaseArray<COsControl *>_vtbl
{
  const char *(__thiscall *TSBaseArray<COsControl *>::MemFileName)(TSBaseArray<COsControl *> *this);
  int (__thiscall *TSBaseArray<COsControl *>::MemLineNo)(TSBaseArray<COsControl *> *this);
};

/* 2872 */
struct __cppobj COsControl
{
  COsControl_vtbl *__vftable /*VFT*/;
  unsigned int mFlags;
  COsDialog *mDialog;
  __int16 mID;
  int mType;
  void *mHandle;
  void (__fastcall *mCallback)(const OsGuiCallbackParams *);
  void *mCallbackParam;
  COsMenu *mContextMenu;
  int mContextMenuEnabled;
  int mRedrawLevel;
};

/* 2874 */
struct __cppobj TSBaseArray<OsGuiMenuHotkey>
{
  TSBaseArray<OsGuiMenuHotkey>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  OsGuiMenuHotkey *m_data;
};

/* 2878 */
struct __cppobj TSFixedArray<OsGuiMenuHotkey> : TSBaseArray<OsGuiMenuHotkey>
{
};

/* 2880 */
struct __cppobj TSGrowableArray<OsGuiMenuHotkey> : TSFixedArray<OsGuiMenuHotkey>
{
  unsigned int m_chunk;
};

/* 2881 */
struct __cppobj COsMenu
{
  unsigned __int8 mID;
  void *mMenuHandle;
  char mTitle[32];
  TSGrowableArray<OsGuiMenuHotkey> mHotkeys;
};

/* 2873 */
struct /*VFT*/ COsControl_vtbl
{
  void (__thiscall *COsControl::~COsControl)(COsControl *this);
  void (__thiscall *COsControl::OnDestroy)(COsControl *this);
  int (__thiscall *COsControl::OnEvent)(COsControl *this, int, int, int);
  int (__thiscall *COsControl::OnDraw)(COsControl *this, void *, unsigned int, NTempest::CiRect *);
  void *(__thiscall *COsControl::OnSetColors)(COsControl *this, void *);
  int (__thiscall *COsControl::OnReturn)(COsControl *this);
  int (__thiscall *COsControl::OnEscape)(COsControl *this);
  int (__thiscall *COsControl::OnMouseDown)(COsControl *this);
  int (__thiscall *COsControl::OnMouseUp)(COsControl *this);
  void (__thiscall *COsControl::OnMouseMove)(COsControl *this, int, int);
  void (__thiscall *COsControl::OnSizeChange)(COsControl *this);
  void (__thiscall *COsControl::OnTextChange)(COsControl *this);
  int (__thiscall *COsControl::OnNotify)(COsControl *this, int, void *);
  int (__thiscall *COsControl::OnCommand)(COsControl *this, int);
  int (__thiscall *COsControl::OnScroll)(COsControl *this, int);
  int (__thiscall *COsControl::OnMouseWheel)(COsControl *this, int);
  int (__thiscall *COsControl::OnContextMenu)(COsControl *this, int, int);
  int (__thiscall *COsControl::IsHandleFromControl)(COsControl *this, void *);
  int (__thiscall *COsControl::CanDoClipboardAction)(COsControl *this, int);
  int (__thiscall *COsControl::DoClipboardAction)(COsControl *this, int);
  void (__thiscall *COsControl::SetValue)(COsControl *this, int);
  int (__thiscall *COsControl::GetValue)(COsControl *this);
};

/* 2875 */
struct /*VFT*/ TSBaseArray<OsGuiMenuHotkey>_vtbl
{
  const char *(__thiscall *TSBaseArray<OsGuiMenuHotkey>::MemFileName)(TSBaseArray<OsGuiMenuHotkey> *this);
  int (__thiscall *TSBaseArray<OsGuiMenuHotkey>::MemLineNo)(TSBaseArray<OsGuiMenuHotkey> *this);
};

/* 2876 */
struct OsGuiMenuHotkey
{
  int keyID;
  int modKeyID;
};

/* 2877 */
struct /*VFT*/ TSFixedArray<OsGuiMenuHotkey>_vtbl
{
  const char *(__thiscall *TSBaseArray<OsGuiMenuHotkey>::MemFileName)(struct TSFixedArray<OsGuiMenuHotkey> *this);
  int (__thiscall *TSBaseArray<OsGuiMenuHotkey>::MemLineNo)(struct TSFixedArray<OsGuiMenuHotkey> *this);
};

/* 2879 */
struct /*VFT*/ TSGrowableArray<OsGuiMenuHotkey>_vtbl
{
  const char *(__thiscall *TSBaseArray<OsGuiMenuHotkey>::MemFileName)(struct TSGrowableArray<OsGuiMenuHotkey> *this);
  int (__thiscall *TSBaseArray<OsGuiMenuHotkey>::MemLineNo)(struct TSGrowableArray<OsGuiMenuHotkey> *this);
};

/* 2882 */
struct /*VFT*/ TSFixedArray<COsControl *>_vtbl
{
  const char *(__thiscall *TSBaseArray<COsControl *>::MemFileName)(struct TSFixedArray<COsControl *> *this);
  int (__thiscall *TSBaseArray<COsControl *>::MemLineNo)(struct TSFixedArray<COsControl *> *this);
};

/* 2884 */
struct /*VFT*/ TSGrowableArray<COsControl *>_vtbl
{
  const char *(__thiscall *TSBaseArray<COsControl *>::MemFileName)(struct TSGrowableArray<COsControl *> *this);
  int (__thiscall *TSBaseArray<COsControl *>::MemLineNo)(struct TSGrowableArray<COsControl *> *this);
};

/* 2886 */
struct /*VFT*/ TSFixedArray<COsDialog *>_vtbl
{
  const char *(__thiscall *TSBaseArray<COsDialog *>::MemFileName)(struct TSFixedArray<COsDialog *> *this);
  int (__thiscall *TSBaseArray<COsDialog *>::MemLineNo)(struct TSFixedArray<COsDialog *> *this);
};

/* 2887 */
struct __cppobj TSFixedArray<COsDialog *> : TSBaseArray<COsDialog *>
{
};

/* 2888 */
struct /*VFT*/ TSGrowableArray<COsDialog *>_vtbl
{
  const char *(__thiscall *TSBaseArray<COsDialog *>::MemFileName)(struct TSGrowableArray<COsDialog *> *this);
  int (__thiscall *TSBaseArray<COsDialog *>::MemLineNo)(struct TSGrowableArray<COsDialog *> *this);
};

/* 2889 */
struct __cppobj TSGrowableArray<COsDialog *> : TSFixedArray<COsDialog *>
{
  unsigned int m_chunk;
};

/* 2890 */
struct __cppobj TSBaseArray<COsMenuBar *>
{
  TSBaseArray<COsMenuBar *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  COsMenuBar **m_data;
};

/* 2891 */
struct /*VFT*/ TSBaseArray<COsMenuBar *>_vtbl
{
  const char *(__thiscall *TSBaseArray<COsMenuBar *>::MemFileName)(TSBaseArray<COsMenuBar *> *this);
  int (__thiscall *TSBaseArray<COsMenuBar *>::MemLineNo)(TSBaseArray<COsMenuBar *> *this);
};

/* 2892 */
struct __cppobj TSBaseArray<COsMenu *>
{
  TSBaseArray<COsMenu *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  COsMenu **m_data;
};

/* 2895 */
struct __cppobj TSFixedArray<COsMenu *> : TSBaseArray<COsMenu *>
{
};

/* 2897 */
struct __cppobj TSGrowableArray<COsMenu *> : TSFixedArray<COsMenu *>
{
  unsigned int m_chunk;
};

/* 2898 */
struct __cppobj COsMenuBar
{
  TSGrowableArray<COsMenu *> mMenus;
  void *mWindowHandle;
  void *mMenuBarHandle;
  void *mAccelerators;
};

/* 2893 */
struct /*VFT*/ TSBaseArray<COsMenu *>_vtbl
{
  const char *(__thiscall *TSBaseArray<COsMenu *>::MemFileName)(TSBaseArray<COsMenu *> *this);
  int (__thiscall *TSBaseArray<COsMenu *>::MemLineNo)(TSBaseArray<COsMenu *> *this);
};

/* 2894 */
struct /*VFT*/ TSFixedArray<COsMenu *>_vtbl
{
  const char *(__thiscall *TSBaseArray<COsMenu *>::MemFileName)(struct TSFixedArray<COsMenu *> *this);
  int (__thiscall *TSBaseArray<COsMenu *>::MemLineNo)(struct TSFixedArray<COsMenu *> *this);
};

/* 2896 */
struct /*VFT*/ TSGrowableArray<COsMenu *>_vtbl
{
  const char *(__thiscall *TSBaseArray<COsMenu *>::MemFileName)(struct TSGrowableArray<COsMenu *> *this);
  int (__thiscall *TSBaseArray<COsMenu *>::MemLineNo)(struct TSGrowableArray<COsMenu *> *this);
};

/* 2899 */
struct /*VFT*/ TSFixedArray<COsMenuBar *>_vtbl
{
  const char *(__thiscall *TSBaseArray<COsMenuBar *>::MemFileName)(struct TSFixedArray<COsMenuBar *> *this);
  int (__thiscall *TSBaseArray<COsMenuBar *>::MemLineNo)(struct TSFixedArray<COsMenuBar *> *this);
};

/* 2900 */
struct __cppobj TSFixedArray<COsMenuBar *> : TSBaseArray<COsMenuBar *>
{
};

/* 2901 */
struct /*VFT*/ TSGrowableArray<COsMenuBar *>_vtbl
{
  const char *(__thiscall *TSBaseArray<COsMenuBar *>::MemFileName)(struct TSGrowableArray<COsMenuBar *> *this);
  int (__thiscall *TSBaseArray<COsMenuBar *>::MemLineNo)(struct TSGrowableArray<COsMenuBar *> *this);
};

/* 2902 */
struct __cppobj TSGrowableArray<COsMenuBar *> : TSFixedArray<COsMenuBar *>
{
  unsigned int m_chunk;
};

/* 2903 */
struct OsGuiCallbackInfo
{
  void (__fastcall *function)(const OsGuiCallbackParams *);
  void *userParam;
};

/* 2904 */
struct tagINITCOMMONCONTROLSEX
{
  unsigned int dwSize;
  unsigned int dwICC;
};

/* 2905 */
struct __cppobj TSBaseArray<tagACCEL>
{
  TSBaseArray<tagACCEL>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  tagACCEL *m_data;
};

/* 2906 */
struct /*VFT*/ TSBaseArray<tagACCEL>_vtbl
{
  const char *(__thiscall *TSBaseArray<tagACCEL>::MemFileName)(TSBaseArray<tagACCEL> *this);
  int (__thiscall *TSBaseArray<tagACCEL>::MemLineNo)(TSBaseArray<tagACCEL> *this);
};

/* 2907 */
struct /*VFT*/ TSFixedArray<tagACCEL>_vtbl
{
  const char *(__thiscall *TSBaseArray<tagACCEL>::MemFileName)(struct TSFixedArray<tagACCEL> *this);
  int (__thiscall *TSBaseArray<tagACCEL>::MemLineNo)(struct TSFixedArray<tagACCEL> *this);
};

/* 2908 */
struct __cppobj TSFixedArray<tagACCEL> : TSBaseArray<tagACCEL>
{
};

/* 2909 */
struct /*VFT*/ TSGrowableArray<tagACCEL>_vtbl
{
  const char *(__thiscall *TSBaseArray<tagACCEL>::MemFileName)(struct TSGrowableArray<tagACCEL> *this);
  int (__thiscall *TSBaseArray<tagACCEL>::MemLineNo)(struct TSGrowableArray<tagACCEL> *this);
};

/* 2910 */
struct __cppobj TSGrowableArray<tagACCEL> : TSFixedArray<tagACCEL>
{
  unsigned int m_chunk;
};

/* 2911 */
struct __cppobj CBasicDlgTemplate
{
  DLGTEMPLATE header;
  unsigned __int16 noMenu;
  unsigned __int16 noClass;
  unsigned __int16 noTitle;
};

/* 2912 */
struct tagTOOLINFOA
{
  unsigned int cbSize;
  unsigned int uFlags;
  HWND__ *hwnd;
  unsigned int uId;
  tagRECT rect;
  HINSTANCE__ *hinst;
  char *lpszText;
  int lParam;
};

/* 2913 */
struct sNCodeToItemCode::OsGuiCodeTranslation
{
  int ctrlType;
  int winCode;
  int osGuiCode;
};

/* 2914 */
struct __cppobj COsButton : COsControl
{
};

/* 2915 */
struct /*VFT*/ COsButton_vtbl
{
  void (__thiscall *~COsButton)(COsButton *this);
  void (__thiscall *COsControl::OnDestroy)(struct COsButton *this);
  int (__thiscall *COsControl::OnEvent)(struct COsButton *this, int, int, int);
  int (__thiscall *COsControl::OnDraw)(struct COsButton *this, void *, unsigned int, NTempest::CiRect *);
  void *(__thiscall *COsControl::OnSetColors)(struct COsButton *this, void *);
  int (__thiscall *COsControl::OnReturn)(struct COsButton *this);
  int (__thiscall *COsControl::OnEscape)(struct COsButton *this);
  int (__thiscall *COsControl::OnMouseDown)(struct COsButton *this);
  int (__thiscall *COsControl::OnMouseUp)(struct COsButton *this);
  void (__thiscall *COsControl::OnMouseMove)(struct COsButton *this, int, int);
  void (__thiscall *COsControl::OnSizeChange)(struct COsButton *this);
  void (__thiscall *COsControl::OnTextChange)(struct COsButton *this);
  int (__thiscall *COsControl::OnNotify)(struct COsButton *this, int, void *);
  int (__thiscall *COsControl::OnCommand)(struct COsButton *this, int);
  int (__thiscall *COsControl::OnScroll)(struct COsButton *this, int);
  int (__thiscall *COsControl::OnMouseWheel)(struct COsButton *this, int);
  int (__thiscall *COsControl::OnContextMenu)(struct COsButton *this, int, int);
  int (__thiscall *COsControl::IsHandleFromControl)(struct COsButton *this, void *);
  int (__thiscall *COsControl::CanDoClipboardAction)(struct COsButton *this, int);
  int (__thiscall *COsControl::DoClipboardAction)(struct COsButton *this, int);
  void (__thiscall *COsControl::SetValue)(struct COsButton *this, int);
  int (__thiscall *COsControl::GetValue)(struct COsButton *this);
};

/* 2916 */
struct __cppobj COsImageButton : COsControl
{
};

/* 2917 */
struct /*VFT*/ COsImageButton_vtbl
{
  void (__thiscall *COsImageButton::OnDestroy)(COsImageButton *this);
  void (__thiscall *COsControl::OnDestroy)(struct COsImageButton *this);
  int (__thiscall *COsControl::OnEvent)(struct COsImageButton *this, int, int, int);
  int (__thiscall *COsControl::OnDraw)(struct COsImageButton *this, void *, unsigned int, NTempest::CiRect *);
  void *(__thiscall *COsControl::OnSetColors)(struct COsImageButton *this, void *);
  int (__thiscall *COsControl::OnReturn)(struct COsImageButton *this);
  int (__thiscall *COsControl::OnEscape)(struct COsImageButton *this);
  int (__thiscall *COsControl::OnMouseDown)(struct COsImageButton *this);
  int (__thiscall *COsControl::OnMouseUp)(struct COsImageButton *this);
  void (__thiscall *COsControl::OnMouseMove)(struct COsImageButton *this, int, int);
  void (__thiscall *COsControl::OnSizeChange)(struct COsImageButton *this);
  void (__thiscall *COsControl::OnTextChange)(struct COsImageButton *this);
  int (__thiscall *COsControl::OnNotify)(struct COsImageButton *this, int, void *);
  int (__thiscall *COsControl::OnCommand)(struct COsImageButton *this, int);
  int (__thiscall *COsControl::OnScroll)(struct COsImageButton *this, int);
  int (__thiscall *COsControl::OnMouseWheel)(struct COsImageButton *this, int);
  int (__thiscall *COsControl::OnContextMenu)(struct COsImageButton *this, int, int);
  int (__thiscall *COsControl::IsHandleFromControl)(struct COsImageButton *this, void *);
  int (__thiscall *COsControl::CanDoClipboardAction)(struct COsImageButton *this, int);
  int (__thiscall *COsControl::DoClipboardAction)(struct COsImageButton *this, int);
  void (__thiscall *COsControl::SetValue)(struct COsImageButton *this, int);
  int (__thiscall *COsControl::GetValue)(struct COsImageButton *this);
};

/* 2918 */
struct tagRGBQUAD
{
  unsigned __int8 rgbBlue;
  unsigned __int8 rgbGreen;
  unsigned __int8 rgbRed;
  unsigned __int8 rgbReserved;
};

/* 2919 */
struct tagBITMAPINFO
{
  tagBITMAPINFOHEADER bmiHeader;
  tagRGBQUAD bmiColors[1];
};

/* 2920 */
struct __cppobj COsStaticText : COsControl
{
  NTempest::CImVector mTextColor;
};

/* 2921 */
struct /*VFT*/ COsStaticText_vtbl
{
  void (__thiscall *~COsStaticText)(COsStaticText *this);
  void (__thiscall *COsControl::OnDestroy)(struct COsStaticText *this);
  int (__thiscall *COsControl::OnEvent)(struct COsStaticText *this, int, int, int);
  int (__thiscall *COsControl::OnDraw)(struct COsStaticText *this, void *, unsigned int, NTempest::CiRect *);
  void *(__thiscall *COsControl::OnSetColors)(struct COsStaticText *this, void *);
  int (__thiscall *COsControl::OnReturn)(struct COsStaticText *this);
  int (__thiscall *COsControl::OnEscape)(struct COsStaticText *this);
  int (__thiscall *COsControl::OnMouseDown)(struct COsStaticText *this);
  int (__thiscall *COsControl::OnMouseUp)(struct COsStaticText *this);
  void (__thiscall *COsControl::OnMouseMove)(struct COsStaticText *this, int, int);
  void (__thiscall *COsControl::OnSizeChange)(struct COsStaticText *this);
  void (__thiscall *COsControl::OnTextChange)(struct COsStaticText *this);
  int (__thiscall *COsControl::OnNotify)(struct COsStaticText *this, int, void *);
  int (__thiscall *COsControl::OnCommand)(struct COsStaticText *this, int);
  int (__thiscall *COsControl::OnScroll)(struct COsStaticText *this, int);
  int (__thiscall *COsControl::OnMouseWheel)(struct COsStaticText *this, int);
  int (__thiscall *COsControl::OnContextMenu)(struct COsStaticText *this, int, int);
  int (__thiscall *COsControl::IsHandleFromControl)(struct COsStaticText *this, void *);
  int (__thiscall *COsControl::CanDoClipboardAction)(struct COsStaticText *this, int);
  int (__thiscall *COsControl::DoClipboardAction)(struct COsStaticText *this, int);
  void (__thiscall *COsControl::SetValue)(struct COsStaticText *this, int);
  int (__thiscall *COsControl::GetValue)(struct COsStaticText *this);
};

/* 2922 */
struct __cppobj COsStaticImage : COsControl
{
};

/* 2923 */
struct /*VFT*/ COsStaticImage_vtbl
{
  void (__thiscall *COsStaticImage::OnDestroy)(COsStaticImage *this);
  void (__thiscall *COsControl::OnDestroy)(struct COsStaticImage *this);
  int (__thiscall *COsControl::OnEvent)(struct COsStaticImage *this, int, int, int);
  int (__thiscall *COsControl::OnDraw)(struct COsStaticImage *this, void *, unsigned int, NTempest::CiRect *);
  void *(__thiscall *COsControl::OnSetColors)(struct COsStaticImage *this, void *);
  int (__thiscall *COsControl::OnReturn)(struct COsStaticImage *this);
  int (__thiscall *COsControl::OnEscape)(struct COsStaticImage *this);
  int (__thiscall *COsControl::OnMouseDown)(struct COsStaticImage *this);
  int (__thiscall *COsControl::OnMouseUp)(struct COsStaticImage *this);
  void (__thiscall *COsControl::OnMouseMove)(struct COsStaticImage *this, int, int);
  void (__thiscall *COsControl::OnSizeChange)(struct COsStaticImage *this);
  void (__thiscall *COsControl::OnTextChange)(struct COsStaticImage *this);
  int (__thiscall *COsControl::OnNotify)(struct COsStaticImage *this, int, void *);
  int (__thiscall *COsControl::OnCommand)(struct COsStaticImage *this, int);
  int (__thiscall *COsControl::OnScroll)(struct COsStaticImage *this, int);
  int (__thiscall *COsControl::OnMouseWheel)(struct COsStaticImage *this, int);
  int (__thiscall *COsControl::OnContextMenu)(struct COsStaticImage *this, int, int);
  int (__thiscall *COsControl::IsHandleFromControl)(struct COsStaticImage *this, void *);
  int (__thiscall *COsControl::CanDoClipboardAction)(struct COsStaticImage *this, int);
  int (__thiscall *COsControl::DoClipboardAction)(struct COsStaticImage *this, int);
  void (__thiscall *COsControl::SetValue)(struct COsStaticImage *this, int);
  int (__thiscall *COsControl::GetValue)(struct COsStaticImage *this);
};

/* 2924 */
struct __cppobj COsEditBox : COsControl
{
  int mFiltersEnabled;
  unsigned int mFilters;
  int mSelSize;
};

/* 2925 */
struct /*VFT*/ COsEditBox_vtbl
{
  void (__thiscall *~COsEditBox)(COsEditBox *this);
  void (__thiscall *COsControl::OnDestroy)(struct COsEditBox *this);
  int (__thiscall *COsControl::OnEvent)(struct COsEditBox *this, int, int, int);
  int (__thiscall *COsControl::OnDraw)(struct COsEditBox *this, void *, unsigned int, NTempest::CiRect *);
  void *(__thiscall *COsControl::OnSetColors)(struct COsEditBox *this, void *);
  int (__thiscall *COsControl::OnReturn)(struct COsEditBox *this);
  int (__thiscall *COsControl::OnEscape)(struct COsEditBox *this);
  int (__thiscall *COsControl::OnMouseDown)(struct COsEditBox *this);
  int (__thiscall *COsControl::OnMouseUp)(struct COsEditBox *this);
  void (__thiscall *COsControl::OnMouseMove)(struct COsEditBox *this, int, int);
  void (__thiscall *COsControl::OnSizeChange)(struct COsEditBox *this);
  void (__thiscall *COsControl::OnTextChange)(struct COsEditBox *this);
  int (__thiscall *COsControl::OnNotify)(struct COsEditBox *this, int, void *);
  int (__thiscall *COsControl::OnCommand)(struct COsEditBox *this, int);
  int (__thiscall *COsControl::OnScroll)(struct COsEditBox *this, int);
  int (__thiscall *COsControl::OnMouseWheel)(struct COsEditBox *this, int);
  int (__thiscall *COsControl::OnContextMenu)(struct COsEditBox *this, int, int);
  int (__thiscall *COsControl::IsHandleFromControl)(struct COsEditBox *this, void *);
  int (__thiscall *COsControl::CanDoClipboardAction)(struct COsEditBox *this, int);
  int (__thiscall *COsControl::DoClipboardAction)(struct COsEditBox *this, int);
  void (__thiscall *COsControl::SetValue)(struct COsEditBox *this, int);
  int (__thiscall *COsControl::GetValue)(struct COsEditBox *this);
};

/* 2926 */
struct __cppobj COsPopupMenu : COsControl
{
  int mBaseHeight;
  int mMaxHeight;
};

/* 2927 */
struct /*VFT*/ COsPopupMenu_vtbl
{
  int (__thiscall *COsPopupMenu::GetValue)(COsPopupMenu *this);
  void (__thiscall *COsControl::OnDestroy)(struct COsPopupMenu *this);
  int (__thiscall *COsControl::OnEvent)(struct COsPopupMenu *this, int, int, int);
  int (__thiscall *COsControl::OnDraw)(struct COsPopupMenu *this, void *, unsigned int, NTempest::CiRect *);
  void *(__thiscall *COsControl::OnSetColors)(struct COsPopupMenu *this, void *);
  int (__thiscall *COsControl::OnReturn)(struct COsPopupMenu *this);
  int (__thiscall *COsControl::OnEscape)(struct COsPopupMenu *this);
  int (__thiscall *COsControl::OnMouseDown)(struct COsPopupMenu *this);
  int (__thiscall *COsControl::OnMouseUp)(struct COsPopupMenu *this);
  void (__thiscall *COsControl::OnMouseMove)(struct COsPopupMenu *this, int, int);
  void (__thiscall *COsControl::OnSizeChange)(struct COsPopupMenu *this);
  void (__thiscall *COsControl::OnTextChange)(struct COsPopupMenu *this);
  int (__thiscall *COsControl::OnNotify)(struct COsPopupMenu *this, int, void *);
  int (__thiscall *COsControl::OnCommand)(struct COsPopupMenu *this, int);
  int (__thiscall *COsControl::OnScroll)(struct COsPopupMenu *this, int);
  int (__thiscall *COsControl::OnMouseWheel)(struct COsPopupMenu *this, int);
  int (__thiscall *COsControl::OnContextMenu)(struct COsPopupMenu *this, int, int);
  int (__thiscall *COsControl::IsHandleFromControl)(struct COsPopupMenu *this, void *);
  int (__thiscall *COsControl::CanDoClipboardAction)(struct COsPopupMenu *this, int);
  int (__thiscall *COsControl::DoClipboardAction)(struct COsPopupMenu *this, int);
  void (__thiscall *COsControl::SetValue)(struct COsPopupMenu *this, int);
  int (__thiscall *COsControl::GetValue)(struct COsPopupMenu *this);
};

/* 2928 */
struct __cppobj COsListBox : COsControl
{
};

/* 2929 */
struct /*VFT*/ COsListBox_vtbl
{
  int (__thiscall *COsListBox::OnReturn)(COsListBox *this);
  void (__thiscall *COsControl::OnDestroy)(struct COsListBox *this);
  int (__thiscall *COsControl::OnEvent)(struct COsListBox *this, int, int, int);
  int (__thiscall *COsControl::OnDraw)(struct COsListBox *this, void *, unsigned int, NTempest::CiRect *);
  void *(__thiscall *COsControl::OnSetColors)(struct COsListBox *this, void *);
  int (__thiscall *COsControl::OnReturn)(struct COsListBox *this);
  int (__thiscall *COsControl::OnEscape)(struct COsListBox *this);
  int (__thiscall *COsControl::OnMouseDown)(struct COsListBox *this);
  int (__thiscall *COsControl::OnMouseUp)(struct COsListBox *this);
  void (__thiscall *COsControl::OnMouseMove)(struct COsListBox *this, int, int);
  void (__thiscall *COsControl::OnSizeChange)(struct COsListBox *this);
  void (__thiscall *COsControl::OnTextChange)(struct COsListBox *this);
  int (__thiscall *COsControl::OnNotify)(struct COsListBox *this, int, void *);
  int (__thiscall *COsControl::OnCommand)(struct COsListBox *this, int);
  int (__thiscall *COsControl::OnScroll)(struct COsListBox *this, int);
  int (__thiscall *COsControl::OnMouseWheel)(struct COsListBox *this, int);
  int (__thiscall *COsControl::OnContextMenu)(struct COsListBox *this, int, int);
  int (__thiscall *COsControl::IsHandleFromControl)(struct COsListBox *this, void *);
  int (__thiscall *COsControl::CanDoClipboardAction)(struct COsListBox *this, int);
  int (__thiscall *COsControl::DoClipboardAction)(struct COsListBox *this, int);
  void (__thiscall *COsControl::SetValue)(struct COsListBox *this, int);
  int (__thiscall *COsControl::GetValue)(struct COsListBox *this);
};

/* 2930 */
struct __cppobj COsCheckbox : COsControl
{
  int mSettingSize;
  int mMaxWidth;
};

/* 2931 */
struct /*VFT*/ COsCheckbox_vtbl
{
  void (__thiscall *~COsCheckbox)(COsCheckbox *this);
  void (__thiscall *COsControl::OnDestroy)(struct COsCheckbox *this);
  int (__thiscall *COsControl::OnEvent)(struct COsCheckbox *this, int, int, int);
  int (__thiscall *COsControl::OnDraw)(struct COsCheckbox *this, void *, unsigned int, NTempest::CiRect *);
  void *(__thiscall *COsControl::OnSetColors)(struct COsCheckbox *this, void *);
  int (__thiscall *COsControl::OnReturn)(struct COsCheckbox *this);
  int (__thiscall *COsControl::OnEscape)(struct COsCheckbox *this);
  int (__thiscall *COsControl::OnMouseDown)(struct COsCheckbox *this);
  int (__thiscall *COsControl::OnMouseUp)(struct COsCheckbox *this);
  void (__thiscall *COsControl::OnMouseMove)(struct COsCheckbox *this, int, int);
  void (__thiscall *COsControl::OnSizeChange)(struct COsCheckbox *this);
  void (__thiscall *COsControl::OnTextChange)(struct COsCheckbox *this);
  int (__thiscall *COsControl::OnNotify)(struct COsCheckbox *this, int, void *);
  int (__thiscall *COsControl::OnCommand)(struct COsCheckbox *this, int);
  int (__thiscall *COsControl::OnScroll)(struct COsCheckbox *this, int);
  int (__thiscall *COsControl::OnMouseWheel)(struct COsCheckbox *this, int);
  int (__thiscall *COsControl::OnContextMenu)(struct COsCheckbox *this, int, int);
  int (__thiscall *COsControl::IsHandleFromControl)(struct COsCheckbox *this, void *);
  int (__thiscall *COsControl::CanDoClipboardAction)(struct COsCheckbox *this, int);
  int (__thiscall *COsControl::DoClipboardAction)(struct COsCheckbox *this, int);
  void (__thiscall *COsControl::SetValue)(struct COsCheckbox *this, int);
  int (__thiscall *COsControl::GetValue)(struct COsCheckbox *this);
};

/* 2932 */
struct __cppobj COsProgressBar : COsControl
{
};

/* 2933 */
struct /*VFT*/ COsProgressBar_vtbl
{
  void (__thiscall *~COsProgressBar)(COsProgressBar *this);
  void (__thiscall *COsControl::OnDestroy)(struct COsProgressBar *this);
  int (__thiscall *COsControl::OnEvent)(struct COsProgressBar *this, int, int, int);
  int (__thiscall *COsControl::OnDraw)(struct COsProgressBar *this, void *, unsigned int, NTempest::CiRect *);
  void *(__thiscall *COsControl::OnSetColors)(struct COsProgressBar *this, void *);
  int (__thiscall *COsControl::OnReturn)(struct COsProgressBar *this);
  int (__thiscall *COsControl::OnEscape)(struct COsProgressBar *this);
  int (__thiscall *COsControl::OnMouseDown)(struct COsProgressBar *this);
  int (__thiscall *COsControl::OnMouseUp)(struct COsProgressBar *this);
  void (__thiscall *COsControl::OnMouseMove)(struct COsProgressBar *this, int, int);
  void (__thiscall *COsControl::OnSizeChange)(struct COsProgressBar *this);
  void (__thiscall *COsControl::OnTextChange)(struct COsProgressBar *this);
  int (__thiscall *COsControl::OnNotify)(struct COsProgressBar *this, int, void *);
  int (__thiscall *COsControl::OnCommand)(struct COsProgressBar *this, int);
  int (__thiscall *COsControl::OnScroll)(struct COsProgressBar *this, int);
  int (__thiscall *COsControl::OnMouseWheel)(struct COsProgressBar *this, int);
  int (__thiscall *COsControl::OnContextMenu)(struct COsProgressBar *this, int, int);
  int (__thiscall *COsControl::IsHandleFromControl)(struct COsProgressBar *this, void *);
  int (__thiscall *COsControl::CanDoClipboardAction)(struct COsProgressBar *this, int);
  int (__thiscall *COsControl::DoClipboardAction)(struct COsProgressBar *this, int);
  void (__thiscall *COsControl::SetValue)(struct COsProgressBar *this, int);
  int (__thiscall *COsControl::GetValue)(struct COsProgressBar *this);
};

/* 2934 */
struct __cppobj COsSlider : COsControl
{
};

/* 2935 */
struct /*VFT*/ COsSlider_vtbl
{
  void (__thiscall *~COsSlider)(COsSlider *this);
  void (__thiscall *COsControl::OnDestroy)(struct COsSlider *this);
  int (__thiscall *COsControl::OnEvent)(struct COsSlider *this, int, int, int);
  int (__thiscall *COsControl::OnDraw)(struct COsSlider *this, void *, unsigned int, NTempest::CiRect *);
  void *(__thiscall *COsControl::OnSetColors)(struct COsSlider *this, void *);
  int (__thiscall *COsControl::OnReturn)(struct COsSlider *this);
  int (__thiscall *COsControl::OnEscape)(struct COsSlider *this);
  int (__thiscall *COsControl::OnMouseDown)(struct COsSlider *this);
  int (__thiscall *COsControl::OnMouseUp)(struct COsSlider *this);
  void (__thiscall *COsControl::OnMouseMove)(struct COsSlider *this, int, int);
  void (__thiscall *COsControl::OnSizeChange)(struct COsSlider *this);
  void (__thiscall *COsControl::OnTextChange)(struct COsSlider *this);
  int (__thiscall *COsControl::OnNotify)(struct COsSlider *this, int, void *);
  int (__thiscall *COsControl::OnCommand)(struct COsSlider *this, int);
  int (__thiscall *COsControl::OnScroll)(struct COsSlider *this, int);
  int (__thiscall *COsControl::OnMouseWheel)(struct COsSlider *this, int);
  int (__thiscall *COsControl::OnContextMenu)(struct COsSlider *this, int, int);
  int (__thiscall *COsControl::IsHandleFromControl)(struct COsSlider *this, void *);
  int (__thiscall *COsControl::CanDoClipboardAction)(struct COsSlider *this, int);
  int (__thiscall *COsControl::DoClipboardAction)(struct COsSlider *this, int);
  void (__thiscall *COsControl::SetValue)(struct COsSlider *this, int);
  int (__thiscall *COsControl::GetValue)(struct COsSlider *this);
};

/* 2937 */
struct OsGuiTVDDInfo
{
  COsTreeView *treeView;
  int action;
  void *dragItem;
  void *targItem;
  int targX;
  int targY;
};

/* 2938 */
struct __cppobj TSBaseArray<OsGuiTreeItemParams>
{
  TSBaseArray<OsGuiTreeItemParams>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  OsGuiTreeItemParams *m_data;
};

/* 2942 */
struct __cppobj TSFixedArray<OsGuiTreeItemParams> : TSBaseArray<OsGuiTreeItemParams>
{
};

/* 2944 */
struct __cppobj TSGrowableArray<OsGuiTreeItemParams> : TSFixedArray<OsGuiTreeItemParams>
{
  unsigned int m_chunk;
};

/* 2936 */
struct __cppobj COsTreeView : COsControl
{
  void *mImages;
  TSGrowableArray<int> mUnusedImageIDs;
  int mDragging;
  OsGuiTVDDInfo mDragInfo;
  void *mDragImage;
  int (__fastcall *mDragHandler)(const OsGuiTVDDInfo *, void *);
  void *mDragHandlerParam;
  int (__fastcall *mCanEditFunc)(void *, void *);
  void *mCanEditParam;
  void (__fastcall *mExpandFunc)(void *, void *);
  void *mExpandParam;
  int mTextLimit;
  int mFiltersEnabled;
  unsigned int mFilters;
  TSGrowableArray<OsGuiTreeItemParams> mItemParams;
};

/* 2939 */
struct /*VFT*/ TSBaseArray<OsGuiTreeItemParams>_vtbl
{
  const char *(__thiscall *TSBaseArray<OsGuiTreeItemParams>::MemFileName)(TSBaseArray<OsGuiTreeItemParams> *this);
  int (__thiscall *TSBaseArray<OsGuiTreeItemParams>::MemLineNo)(TSBaseArray<OsGuiTreeItemParams> *this);
};

/* 2940 */
struct __cppobj OsGuiTreeItemParams
{
  int used;
  NTempest::CImVector color;
  void *user;
};

/* 2941 */
struct /*VFT*/ TSFixedArray<OsGuiTreeItemParams>_vtbl
{
  const char *(__thiscall *TSBaseArray<OsGuiTreeItemParams>::MemFileName)(struct TSFixedArray<OsGuiTreeItemParams> *this);
  int (__thiscall *TSBaseArray<OsGuiTreeItemParams>::MemLineNo)(struct TSFixedArray<OsGuiTreeItemParams> *this);
};

/* 2943 */
struct /*VFT*/ TSGrowableArray<OsGuiTreeItemParams>_vtbl
{
  const char *(__thiscall *TSBaseArray<OsGuiTreeItemParams>::MemFileName)(struct TSGrowableArray<OsGuiTreeItemParams> *this);
  int (__thiscall *TSBaseArray<OsGuiTreeItemParams>::MemLineNo)(struct TSGrowableArray<OsGuiTreeItemParams> *this);
};

/* 2945 */
struct /*VFT*/ COsTreeView_vtbl
{
  void (__thiscall *COsTreeView::OnMouseMove)(COsTreeView *this, int, int);
  void (__thiscall *COsControl::OnDestroy)(struct COsTreeView *this);
  int (__thiscall *COsControl::OnEvent)(struct COsTreeView *this, int, int, int);
  int (__thiscall *COsControl::OnDraw)(struct COsTreeView *this, void *, unsigned int, NTempest::CiRect *);
  void *(__thiscall *COsControl::OnSetColors)(struct COsTreeView *this, void *);
  int (__thiscall *COsControl::OnReturn)(struct COsTreeView *this);
  int (__thiscall *COsControl::OnEscape)(struct COsTreeView *this);
  int (__thiscall *COsControl::OnMouseDown)(struct COsTreeView *this);
  int (__thiscall *COsControl::OnMouseUp)(struct COsTreeView *this);
  void (__thiscall *COsControl::OnMouseMove)(struct COsTreeView *this, int, int);
  void (__thiscall *COsControl::OnSizeChange)(struct COsTreeView *this);
  void (__thiscall *COsControl::OnTextChange)(struct COsTreeView *this);
  int (__thiscall *COsControl::OnNotify)(struct COsTreeView *this, int, void *);
  int (__thiscall *COsControl::OnCommand)(struct COsTreeView *this, int);
  int (__thiscall *COsControl::OnScroll)(struct COsTreeView *this, int);
  int (__thiscall *COsControl::OnMouseWheel)(struct COsTreeView *this, int);
  int (__thiscall *COsControl::OnContextMenu)(struct COsTreeView *this, int, int);
  int (__thiscall *COsControl::IsHandleFromControl)(struct COsTreeView *this, void *);
  int (__thiscall *COsControl::CanDoClipboardAction)(struct COsTreeView *this, int);
  int (__thiscall *COsControl::DoClipboardAction)(struct COsTreeView *this, int);
  void (__thiscall *COsControl::SetValue)(struct COsTreeView *this, int);
  int (__thiscall *COsControl::GetValue)(struct COsTreeView *this);
};

/* 2946 */
struct tagTVITEMEXA
{
  unsigned int mask;
  _TREEITEM *hItem;
  unsigned int state;
  unsigned int stateMask;
  char *pszText;
  int cchTextMax;
  int iImage;
  int iSelectedImage;
  int cChildren;
  int lParam;
  int iIntegral;
};

/* 2947 */
struct tagTVITEMA
{
  unsigned int mask;
  _TREEITEM *hItem;
  unsigned int state;
  unsigned int stateMask;
  char *pszText;
  int cchTextMax;
  int iImage;
  int iSelectedImage;
  int cChildren;
  int lParam;
};

/* 2948 */
union $541D61B513441E5E802683CB77EDB9D1
{
  tagTVITEMEXA itemex;
  tagTVITEMA item;
};

/* 2949 */
struct tagTVINSERTSTRUCTA
{
  _TREEITEM *hParent;
  _TREEITEM *hInsertAfter;
  $541D61B513441E5E802683CB77EDB9D1 ___u2;
};

/* 2950 */
struct OsGuiTVSelectionInfo
{
  int numSelected;
  void *firstSelection;
  unsigned int flags;
};

/* 2951 */
struct OsGuiTVSIResults
{
  OsGuiTVSelectionInfo info;
  void *lastSelected;
  void *lastProcessed;
};

/* 2952 */
struct tagTVHITTESTINFO
{
  tagPOINT pt;
  unsigned int flags;
  _TREEITEM *hItem;
};

/* 2953 */
struct __cppobj COsTextButton : COsControl
{
  NTempest::CImVector mActiveColor;
  NTempest::CImVector mPushedColor;
  NTempest::CImVector mGreyedColor;
  int mUnderline;
};

/* 2954 */
struct /*VFT*/ COsTextButton_vtbl
{
  void (__thiscall *~COsTextButton)(COsTextButton *this);
  void (__thiscall *COsControl::OnDestroy)(struct COsTextButton *this);
  int (__thiscall *COsControl::OnEvent)(struct COsTextButton *this, int, int, int);
  int (__thiscall *COsControl::OnDraw)(struct COsTextButton *this, void *, unsigned int, NTempest::CiRect *);
  void *(__thiscall *COsControl::OnSetColors)(struct COsTextButton *this, void *);
  int (__thiscall *COsControl::OnReturn)(struct COsTextButton *this);
  int (__thiscall *COsControl::OnEscape)(struct COsTextButton *this);
  int (__thiscall *COsControl::OnMouseDown)(struct COsTextButton *this);
  int (__thiscall *COsControl::OnMouseUp)(struct COsTextButton *this);
  void (__thiscall *COsControl::OnMouseMove)(struct COsTextButton *this, int, int);
  void (__thiscall *COsControl::OnSizeChange)(struct COsTextButton *this);
  void (__thiscall *COsControl::OnTextChange)(struct COsTextButton *this);
  int (__thiscall *COsControl::OnNotify)(struct COsTextButton *this, int, void *);
  int (__thiscall *COsControl::OnCommand)(struct COsTextButton *this, int);
  int (__thiscall *COsControl::OnScroll)(struct COsTextButton *this, int);
  int (__thiscall *COsControl::OnMouseWheel)(struct COsTextButton *this, int);
  int (__thiscall *COsControl::OnContextMenu)(struct COsTextButton *this, int, int);
  int (__thiscall *COsControl::IsHandleFromControl)(struct COsTextButton *this, void *);
  int (__thiscall *COsControl::CanDoClipboardAction)(struct COsTextButton *this, int);
  int (__thiscall *COsControl::DoClipboardAction)(struct COsTextButton *this, int);
  void (__thiscall *COsControl::SetValue)(struct COsTextButton *this, int);
  int (__thiscall *COsControl::GetValue)(struct COsTextButton *this);
};

/* 2955 */
struct HPEN__
{
  int unused;
};

/* 2957 */
struct __cppobj TSBaseArray<NTempest::CiRect>
{
  TSBaseArray<NTempest::CiRect>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  NTempest::CiRect *m_data;
};

/* 2960 */
struct __cppobj TSFixedArray<NTempest::CiRect> : TSBaseArray<NTempest::CiRect>
{
};

/* 2962 */
struct __cppobj TSGrowableArray<NTempest::CiRect> : TSFixedArray<NTempest::CiRect>
{
  unsigned int m_chunk;
};

/* 2956 */
struct __cppobj COsStaticBox : COsControl
{
  TSGrowableArray<NTempest::CiRect> mTransRect;
};

/* 2958 */
struct /*VFT*/ TSBaseArray<NTempest::CiRect>_vtbl
{
  const char *(__thiscall *MemFileName)(TSBaseArray<NTempest::CiRect> *this);
  int (__thiscall *MemLineNo)(TSBaseArray<NTempest::CiRect> *this);
};

/* 2959 */
struct /*VFT*/ TSFixedArray<NTempest::CiRect>_vtbl
{
  const char *(__thiscall *MemFileName)(struct TSFixedArray<NTempest::CiRect> *this);
  int (__thiscall *MemLineNo)(struct TSFixedArray<NTempest::CiRect> *this);
};

/* 2961 */
struct /*VFT*/ TSGrowableArray<NTempest::CiRect>_vtbl
{
  const char *(__thiscall *MemFileName)(struct TSGrowableArray<NTempest::CiRect> *this);
  int (__thiscall *MemLineNo)(struct TSGrowableArray<NTempest::CiRect> *this);
};

/* 2963 */
struct /*VFT*/ COsStaticBox_vtbl
{
  void (__thiscall *~COsStaticBox)(COsStaticBox *this);
  void (__thiscall *COsControl::OnDestroy)(struct COsStaticBox *this);
  int (__thiscall *COsControl::OnEvent)(struct COsStaticBox *this, int, int, int);
  int (__thiscall *COsControl::OnDraw)(struct COsStaticBox *this, void *, unsigned int, NTempest::CiRect *);
  void *(__thiscall *COsControl::OnSetColors)(struct COsStaticBox *this, void *);
  int (__thiscall *COsControl::OnReturn)(struct COsStaticBox *this);
  int (__thiscall *COsControl::OnEscape)(struct COsStaticBox *this);
  int (__thiscall *COsControl::OnMouseDown)(struct COsStaticBox *this);
  int (__thiscall *COsControl::OnMouseUp)(struct COsStaticBox *this);
  void (__thiscall *COsControl::OnMouseMove)(struct COsStaticBox *this, int, int);
  void (__thiscall *COsControl::OnSizeChange)(struct COsStaticBox *this);
  void (__thiscall *COsControl::OnTextChange)(struct COsStaticBox *this);
  int (__thiscall *COsControl::OnNotify)(struct COsStaticBox *this, int, void *);
  int (__thiscall *COsControl::OnCommand)(struct COsStaticBox *this, int);
  int (__thiscall *COsControl::OnScroll)(struct COsStaticBox *this, int);
  int (__thiscall *COsControl::OnMouseWheel)(struct COsStaticBox *this, int);
  int (__thiscall *COsControl::OnContextMenu)(struct COsStaticBox *this, int, int);
  int (__thiscall *COsControl::IsHandleFromControl)(struct COsStaticBox *this, void *);
  int (__thiscall *COsControl::CanDoClipboardAction)(struct COsStaticBox *this, int);
  int (__thiscall *COsControl::DoClipboardAction)(struct COsStaticBox *this, int);
  void (__thiscall *COsControl::SetValue)(struct COsStaticBox *this, int);
  int (__thiscall *COsControl::GetValue)(struct COsStaticBox *this);
};

/* 2964 */
struct HRGN__
{
  int unused;
};

/* 2965 */
struct __cppobj COsSpinButton : COsControl
{
};

/* 2966 */
struct /*VFT*/ COsSpinButton_vtbl
{
  void (__thiscall *~COsSpinButton)(COsSpinButton *this);
  void (__thiscall *COsControl::OnDestroy)(struct COsSpinButton *this);
  int (__thiscall *COsControl::OnEvent)(struct COsSpinButton *this, int, int, int);
  int (__thiscall *COsControl::OnDraw)(struct COsSpinButton *this, void *, unsigned int, NTempest::CiRect *);
  void *(__thiscall *COsControl::OnSetColors)(struct COsSpinButton *this, void *);
  int (__thiscall *COsControl::OnReturn)(struct COsSpinButton *this);
  int (__thiscall *COsControl::OnEscape)(struct COsSpinButton *this);
  int (__thiscall *COsControl::OnMouseDown)(struct COsSpinButton *this);
  int (__thiscall *COsControl::OnMouseUp)(struct COsSpinButton *this);
  void (__thiscall *COsControl::OnMouseMove)(struct COsSpinButton *this, int, int);
  void (__thiscall *COsControl::OnSizeChange)(struct COsSpinButton *this);
  void (__thiscall *COsControl::OnTextChange)(struct COsSpinButton *this);
  int (__thiscall *COsControl::OnNotify)(struct COsSpinButton *this, int, void *);
  int (__thiscall *COsControl::OnCommand)(struct COsSpinButton *this, int);
  int (__thiscall *COsControl::OnScroll)(struct COsSpinButton *this, int);
  int (__thiscall *COsControl::OnMouseWheel)(struct COsSpinButton *this, int);
  int (__thiscall *COsControl::OnContextMenu)(struct COsSpinButton *this, int, int);
  int (__thiscall *COsControl::IsHandleFromControl)(struct COsSpinButton *this, void *);
  int (__thiscall *COsControl::CanDoClipboardAction)(struct COsSpinButton *this, int);
  int (__thiscall *COsControl::DoClipboardAction)(struct COsSpinButton *this, int);
  void (__thiscall *COsControl::SetValue)(struct COsSpinButton *this, int);
  int (__thiscall *COsControl::GetValue)(struct COsSpinButton *this);
};

/* 2967 */
struct __cppobj COsRadioButton : COsControl
{
};

/* 2968 */
struct /*VFT*/ COsRadioButton_vtbl
{
  void (__thiscall *~COsRadioButton)(COsRadioButton *this);
  void (__thiscall *COsControl::OnDestroy)(struct COsRadioButton *this);
  int (__thiscall *COsControl::OnEvent)(struct COsRadioButton *this, int, int, int);
  int (__thiscall *COsControl::OnDraw)(struct COsRadioButton *this, void *, unsigned int, NTempest::CiRect *);
  void *(__thiscall *COsControl::OnSetColors)(struct COsRadioButton *this, void *);
  int (__thiscall *COsControl::OnReturn)(struct COsRadioButton *this);
  int (__thiscall *COsControl::OnEscape)(struct COsRadioButton *this);
  int (__thiscall *COsControl::OnMouseDown)(struct COsRadioButton *this);
  int (__thiscall *COsControl::OnMouseUp)(struct COsRadioButton *this);
  void (__thiscall *COsControl::OnMouseMove)(struct COsRadioButton *this, int, int);
  void (__thiscall *COsControl::OnSizeChange)(struct COsRadioButton *this);
  void (__thiscall *COsControl::OnTextChange)(struct COsRadioButton *this);
  int (__thiscall *COsControl::OnNotify)(struct COsRadioButton *this, int, void *);
  int (__thiscall *COsControl::OnCommand)(struct COsRadioButton *this, int);
  int (__thiscall *COsControl::OnScroll)(struct COsRadioButton *this, int);
  int (__thiscall *COsControl::OnMouseWheel)(struct COsRadioButton *this, int);
  int (__thiscall *COsControl::OnContextMenu)(struct COsRadioButton *this, int, int);
  int (__thiscall *COsControl::IsHandleFromControl)(struct COsRadioButton *this, void *);
  int (__thiscall *COsControl::CanDoClipboardAction)(struct COsRadioButton *this, int);
  int (__thiscall *COsControl::DoClipboardAction)(struct COsRadioButton *this, int);
  void (__thiscall *COsControl::SetValue)(struct COsRadioButton *this, int);
  int (__thiscall *COsControl::GetValue)(struct COsRadioButton *this);
};

/* 2969 */
struct __cppobj COsTabControl : COsControl
{
};

/* 2970 */
struct /*VFT*/ COsTabControl_vtbl
{
  void (__thiscall *~COsTabControl)(COsTabControl *this);
  void (__thiscall *COsControl::OnDestroy)(struct COsTabControl *this);
  int (__thiscall *COsControl::OnEvent)(struct COsTabControl *this, int, int, int);
  int (__thiscall *COsControl::OnDraw)(struct COsTabControl *this, void *, unsigned int, NTempest::CiRect *);
  void *(__thiscall *COsControl::OnSetColors)(struct COsTabControl *this, void *);
  int (__thiscall *COsControl::OnReturn)(struct COsTabControl *this);
  int (__thiscall *COsControl::OnEscape)(struct COsTabControl *this);
  int (__thiscall *COsControl::OnMouseDown)(struct COsTabControl *this);
  int (__thiscall *COsControl::OnMouseUp)(struct COsTabControl *this);
  void (__thiscall *COsControl::OnMouseMove)(struct COsTabControl *this, int, int);
  void (__thiscall *COsControl::OnSizeChange)(struct COsTabControl *this);
  void (__thiscall *COsControl::OnTextChange)(struct COsTabControl *this);
  int (__thiscall *COsControl::OnNotify)(struct COsTabControl *this, int, void *);
  int (__thiscall *COsControl::OnCommand)(struct COsTabControl *this, int);
  int (__thiscall *COsControl::OnScroll)(struct COsTabControl *this, int);
  int (__thiscall *COsControl::OnMouseWheel)(struct COsTabControl *this, int);
  int (__thiscall *COsControl::OnContextMenu)(struct COsTabControl *this, int, int);
  int (__thiscall *COsControl::IsHandleFromControl)(struct COsTabControl *this, void *);
  int (__thiscall *COsControl::CanDoClipboardAction)(struct COsTabControl *this, int);
  int (__thiscall *COsControl::DoClipboardAction)(struct COsTabControl *this, int);
  void (__thiscall *COsControl::SetValue)(struct COsTabControl *this, int);
  int (__thiscall *COsControl::GetValue)(struct COsTabControl *this);
};

/* 2971 */
struct tagTCITEMA
{
  unsigned int mask;
  unsigned int dwState;
  unsigned int dwStateMask;
  char *pszText;
  int cchTextMax;
  int iImage;
  int lParam;
};

/* 2972 */
struct __cppobj COsListView : COsControl
{
  int mNumCols;
};

/* 2973 */
struct /*VFT*/ COsListView_vtbl
{
  int (__thiscall *COsListView::OnReturn)(COsListView *this);
  void (__thiscall *COsControl::OnDestroy)(struct COsListView *this);
  int (__thiscall *COsControl::OnEvent)(struct COsListView *this, int, int, int);
  int (__thiscall *COsControl::OnDraw)(struct COsListView *this, void *, unsigned int, NTempest::CiRect *);
  void *(__thiscall *COsControl::OnSetColors)(struct COsListView *this, void *);
  int (__thiscall *COsControl::OnReturn)(struct COsListView *this);
  int (__thiscall *COsControl::OnEscape)(struct COsListView *this);
  int (__thiscall *COsControl::OnMouseDown)(struct COsListView *this);
  int (__thiscall *COsControl::OnMouseUp)(struct COsListView *this);
  void (__thiscall *COsControl::OnMouseMove)(struct COsListView *this, int, int);
  void (__thiscall *COsControl::OnSizeChange)(struct COsListView *this);
  void (__thiscall *COsControl::OnTextChange)(struct COsListView *this);
  int (__thiscall *COsControl::OnNotify)(struct COsListView *this, int, void *);
  int (__thiscall *COsControl::OnCommand)(struct COsListView *this, int);
  int (__thiscall *COsControl::OnScroll)(struct COsListView *this, int);
  int (__thiscall *COsControl::OnMouseWheel)(struct COsListView *this, int);
  int (__thiscall *COsControl::OnContextMenu)(struct COsListView *this, int, int);
  int (__thiscall *COsControl::IsHandleFromControl)(struct COsListView *this, void *);
  int (__thiscall *COsControl::CanDoClipboardAction)(struct COsListView *this, int);
  int (__thiscall *COsControl::DoClipboardAction)(struct COsListView *this, int);
  void (__thiscall *COsControl::SetValue)(struct COsListView *this, int);
  int (__thiscall *COsControl::GetValue)(struct COsListView *this);
};

/* 2974 */
struct tagLVCOLUMNA
{
  unsigned int mask;
  int fmt;
  int cx;
  char *pszText;
  int cchTextMax;
  int iSubItem;
  int iImage;
  int iOrder;
};

/* 2975 */
struct tagLVITEMA
{
  unsigned int mask;
  int iItem;
  int iSubItem;
  unsigned int state;
  unsigned int stateMask;
  char *pszText;
  int cchTextMax;
  int iImage;
  int lParam;
  int iIndent;
};

/* 2976 */
struct __cppobj COsToolBar : COsControl
{
  void *mImageList;
};

/* 2977 */
struct /*VFT*/ COsToolBar_vtbl
{
  int (__thiscall *COsToolBar::OnCommand)(COsToolBar *this, int);
  void (__thiscall *COsControl::OnDestroy)(struct COsToolBar *this);
  int (__thiscall *COsControl::OnEvent)(struct COsToolBar *this, int, int, int);
  int (__thiscall *COsControl::OnDraw)(struct COsToolBar *this, void *, unsigned int, NTempest::CiRect *);
  void *(__thiscall *COsControl::OnSetColors)(struct COsToolBar *this, void *);
  int (__thiscall *COsControl::OnReturn)(struct COsToolBar *this);
  int (__thiscall *COsControl::OnEscape)(struct COsToolBar *this);
  int (__thiscall *COsControl::OnMouseDown)(struct COsToolBar *this);
  int (__thiscall *COsControl::OnMouseUp)(struct COsToolBar *this);
  void (__thiscall *COsControl::OnMouseMove)(struct COsToolBar *this, int, int);
  void (__thiscall *COsControl::OnSizeChange)(struct COsToolBar *this);
  void (__thiscall *COsControl::OnTextChange)(struct COsToolBar *this);
  int (__thiscall *COsControl::OnNotify)(struct COsToolBar *this, int, void *);
  int (__thiscall *COsControl::OnCommand)(struct COsToolBar *this, int);
  int (__thiscall *COsControl::OnScroll)(struct COsToolBar *this, int);
  int (__thiscall *COsControl::OnMouseWheel)(struct COsToolBar *this, int);
  int (__thiscall *COsControl::OnContextMenu)(struct COsToolBar *this, int, int);
  int (__thiscall *COsControl::IsHandleFromControl)(struct COsToolBar *this, void *);
  int (__thiscall *COsControl::CanDoClipboardAction)(struct COsToolBar *this, int);
  int (__thiscall *COsControl::DoClipboardAction)(struct COsToolBar *this, int);
  void (__thiscall *COsControl::SetValue)(struct COsToolBar *this, int);
  int (__thiscall *COsControl::GetValue)(struct COsToolBar *this);
};

/* 2978 */
struct _TBBUTTON
{
  int iBitmap;
  int idCommand;
  unsigned __int8 fsState;
  unsigned __int8 fsStyle;
  unsigned __int8 bReserved[2];
  unsigned int dwData;
  int iString;
};

/* 2979 */
struct TBBUTTONINFOA
{
  unsigned int cbSize;
  unsigned int dwMask;
  int idCommand;
  int iImage;
  unsigned __int8 fsState;
  unsigned __int8 fsStyle;
  unsigned __int16 cx;
  unsigned int lParam;
  char *pszText;
  int cchText;
};

/* 2980 */
struct __cppobj COsScrollBar : COsControl
{
  int mRealMin;
  int mRealMax;
  int mPageSize;
};

/* 2981 */
struct /*VFT*/ COsScrollBar_vtbl
{
  void (__thiscall *~COsScrollBar)(COsScrollBar *this);
  void (__thiscall *COsControl::OnDestroy)(struct COsScrollBar *this);
  int (__thiscall *COsControl::OnEvent)(struct COsScrollBar *this, int, int, int);
  int (__thiscall *COsControl::OnDraw)(struct COsScrollBar *this, void *, unsigned int, NTempest::CiRect *);
  void *(__thiscall *COsControl::OnSetColors)(struct COsScrollBar *this, void *);
  int (__thiscall *COsControl::OnReturn)(struct COsScrollBar *this);
  int (__thiscall *COsControl::OnEscape)(struct COsScrollBar *this);
  int (__thiscall *COsControl::OnMouseDown)(struct COsScrollBar *this);
  int (__thiscall *COsControl::OnMouseUp)(struct COsScrollBar *this);
  void (__thiscall *COsControl::OnMouseMove)(struct COsScrollBar *this, int, int);
  void (__thiscall *COsControl::OnSizeChange)(struct COsScrollBar *this);
  void (__thiscall *COsControl::OnTextChange)(struct COsScrollBar *this);
  int (__thiscall *COsControl::OnNotify)(struct COsScrollBar *this, int, void *);
  int (__thiscall *COsControl::OnCommand)(struct COsScrollBar *this, int);
  int (__thiscall *COsControl::OnScroll)(struct COsScrollBar *this, int);
  int (__thiscall *COsControl::OnMouseWheel)(struct COsScrollBar *this, int);
  int (__thiscall *COsControl::OnContextMenu)(struct COsScrollBar *this, int, int);
  int (__thiscall *COsControl::IsHandleFromControl)(struct COsScrollBar *this, void *);
  int (__thiscall *COsControl::CanDoClipboardAction)(struct COsScrollBar *this, int);
  int (__thiscall *COsControl::DoClipboardAction)(struct COsScrollBar *this, int);
  void (__thiscall *COsControl::SetValue)(struct COsScrollBar *this, int);
  int (__thiscall *COsControl::GetValue)(struct COsScrollBar *this);
};

/* 2982 */
struct __cppobj COsDivider : COsControl
{
  int mMaxPos;
  int mMinPos;
  int mTracking;
  int mDragging;
  int mDragStartMouseX;
  int mDragStartMouseY;
  NTempest::CiRect mDragStartPos;
};

/* 2983 */
struct /*VFT*/ COsDivider_vtbl
{
  void (__thiscall *COsDivider::~COsDivider)(COsDivider *this);
  void (__thiscall *COsControl::OnDestroy)(struct COsDivider *this);
  int (__thiscall *COsControl::OnEvent)(struct COsDivider *this, int, int, int);
  int (__thiscall *COsControl::OnDraw)(struct COsDivider *this, void *, unsigned int, NTempest::CiRect *);
  void *(__thiscall *COsControl::OnSetColors)(struct COsDivider *this, void *);
  int (__thiscall *COsControl::OnReturn)(struct COsDivider *this);
  int (__thiscall *COsControl::OnEscape)(struct COsDivider *this);
  int (__thiscall *COsControl::OnMouseDown)(struct COsDivider *this);
  int (__thiscall *COsControl::OnMouseUp)(struct COsDivider *this);
  void (__thiscall *COsControl::OnMouseMove)(struct COsDivider *this, int, int);
  void (__thiscall *COsControl::OnSizeChange)(struct COsDivider *this);
  void (__thiscall *COsControl::OnTextChange)(struct COsDivider *this);
  int (__thiscall *COsControl::OnNotify)(struct COsDivider *this, int, void *);
  int (__thiscall *COsControl::OnCommand)(struct COsDivider *this, int);
  int (__thiscall *COsControl::OnScroll)(struct COsDivider *this, int);
  int (__thiscall *COsControl::OnMouseWheel)(struct COsDivider *this, int);
  int (__thiscall *COsControl::OnContextMenu)(struct COsDivider *this, int, int);
  int (__thiscall *COsControl::IsHandleFromControl)(struct COsDivider *this, void *);
  int (__thiscall *COsControl::CanDoClipboardAction)(struct COsDivider *this, int);
  int (__thiscall *COsControl::DoClipboardAction)(struct COsDivider *this, int);
  void (__thiscall *COsControl::SetValue)(struct COsDivider *this, int);
  int (__thiscall *COsControl::GetValue)(struct COsDivider *this);
};

/* 2984 */
struct tagWINDOWPLACEMENT
{
  unsigned int length;
  unsigned int flags;
  unsigned int showCmd;
  tagPOINT ptMinPosition;
  tagPOINT ptMaxPosition;
  tagRECT rcNormalPosition;
};

/* 2985 */
struct __cppobj COsWindow
{
  COsWindow_vtbl *__vftable /*VFT*/;
  void *mHandle;
  NTempest::C2iVector mMinSize;
};

/* 2986 */
struct /*VFT*/ COsWindow_vtbl
{
  void (__thiscall *COsWindow::~COsWindow)(COsWindow *this);
  void (__thiscall *COsWindow::OnResize)(COsWindow *this);
};

/* 2987 */
struct $79281429089E064A33BEF0D407D333DE
{
  float (__fastcall *func)(ACTIVITY);
  const char *title;
};

/* 2988 */
struct HSHEAP__
{
  int unused;
};

/* 2989 */
struct _SMEMHEAPDETAILS
{
  unsigned int size;
  HSHEAP__ *handle;
  char filename[260];
  int linenumber;
  unsigned int regions;
  unsigned int committedbytes;
  unsigned int reservedbytes;
  unsigned int maximumsize;
  unsigned int allocatedblocks;
  unsigned int allocatedbytes;
};

/* 2990 */
struct $F4A23CCB1B1E2BEBF3B5F1782E2155FF
{
  unsigned __int8 signature;
  unsigned __int8 message;
  unsigned __int16 len;
  char strings[256];
};

/* 2991 */
struct __unaligned __declspec(align(4)) SimplePerfHdr
{
  unsigned __int8 signature;
  unsigned __int8 message;
  unsigned __int16 len;
  __int64 timestamp;
  __int64 frame;
  unsigned int updateCount;
  unsigned __int16 id;
  unsigned __int16 size;
};

/* 2992 */
struct $1E59F13EEDDE3C7FC75F9DE3CCFBBFA0
{
  unsigned int msgSize;
  SimplePerfHdr h;
  float perfTime[20];
};

/* 2993 */
struct $CD6E3E68B96C5F91F3ECDC59261D3855
{
  unsigned int msgSize;
  SimplePerfHdr h;
  char labels[1024];
};

/* 2994 */
struct $D2B075EDC987DD480DE1F5D80DA831D8
{
  unsigned int msgSize;
  SimplePerfHdr h;
  char prompt[256];
};

/* 2995 */
struct __cppobj TSLink<CILayer>
{
  TSLink<CILayer> *m_prevlink;
  CILayer *m_next;
};

/* 2996 */
struct __cppobj CILayer : CHandleObject
{
  RECTF rect;
  RECTF visible;
  float zorder;
  unsigned int flags;
  void *param;
  void (__fastcall *paintfunc)(void *, const RECTF *, const RECTF *, float);
  TSLink<CILayer> zorderlink;
};

/* 2997 */
struct /*VFT*/ CILayer_vtbl
{
  void (__thiscall *~CILayer)(CILayer *this);
  const char *(__thiscall *CHandleObject::GetObjectName)(struct CILayer *this);
};

/* 2998 */
struct __cppobj TSList<CILayer,TSGetExplicitLink<CILayer> >
{
  int m_linkoffset;
  TSLink<CILayer> m_terminator;
};

/* 2999 */
struct __cppobj TSExplicitList<CILayer,56> : TSList<CILayer,TSGetExplicitLink<CILayer> >
{
};

/* 3000 */
struct HSRGN__
{
  int unused;
};

/* 3001 */
struct __cppobj CSRgn
{
  HSRGN__ *m_handle;
};

/* 3002 */
struct $0033A43AA6495465541322C33BC5B865
{
  unsigned __int8 bAlphaChannelBits : 4;
  unsigned __int8 bLeftRightOrder : 1;
  unsigned __int8 bTopBottomOrder : 1;
  unsigned __int8 bReserved : 2;
};

/* 3003 */
union $5429BFD210663F2672FE336C0465FBCD
{
  unsigned __int8 bImageDescriptor;
  $0033A43AA6495465541322C33BC5B865 Desc;
};

/* 3004 */
struct TGAHeader
{
  unsigned __int8 bIDLength;
  unsigned __int8 bColorMapType;
  unsigned __int8 bImageType;
  __unaligned __declspec(align(1)) unsigned __int16 wColorMapStartIndex;
  __unaligned __declspec(align(1)) unsigned __int16 wColorMapEntries;
  unsigned __int8 bColorMapEntrySize;
  unsigned __int16 wXOrigin;
  unsigned __int16 wYOrigin;
  unsigned __int16 wWidth;
  unsigned __int16 wHeight;
  unsigned __int8 bPixelDepth;
  $5429BFD210663F2672FE336C0465FBCD ___u11;
};

/* 3005 */
struct __unaligned __declspec(align(2)) TGAFooter
{
  unsigned int dwExtensionOffset;
  unsigned int dwDeveloperOffset;
  char szSigniture[18];
};

/* 3006 */
struct __cppobj CTgaFile
{
  SFile *m_file;
  unsigned __int8 *m_image;
  TGAHeader m_header;
  unsigned __int8 *m_addlHeaderData;
  TGAFooter m_footer;
  unsigned int m_imageBytes;
  unsigned __int8 *m_colorMap;
};

/* 3007 */
struct __cppobj TGA32Pixel
{
  unsigned __int8 b;
  unsigned __int8 g;
  unsigned __int8 r;
  unsigned __int8 a;
};

/* 3008 */
struct __cppobj TSFixedArray_<NTempest::C3Vector,1281976168,74> : TSFixedArray<NTempest::C3Vector>
{
};

/* 3009 */
struct /*VFT*/ TSFixedArray_<NTempest::C3Vector,1281976168,74>_vtbl
{
  int (__thiscall *TSFixedArray_<NTempest::C3Vector,1281976168,74>::MemLineNo)(TSFixedArray_<NTempest::C3Vector,1281976168,74> *this);
  int (__thiscall *TSBaseArray<NTempest::C3Vector>::MemLineNo)(struct TSFixedArray_<NTempest::C3Vector,1281976168,74> *this);
};

/* 3010 */
struct __cppobj TSFixedArray_<NTempest::C3Vector,1281976168,38> : TSFixedArray<NTempest::C3Vector>
{
};

/* 3011 */
struct /*VFT*/ TSFixedArray_<NTempest::C3Vector,1281976168,38>_vtbl
{
  int (__thiscall *TSFixedArray_<NTempest::C3Vector,1281976168,38>::MemLineNo)(TSFixedArray_<NTempest::C3Vector,1281976168,38> *this);
  int (__thiscall *TSBaseArray<NTempest::C3Vector>::MemLineNo)(struct TSFixedArray_<NTempest::C3Vector,1281976168,38> *this);
};

/* 3012 */
struct __cppobj TSFixedArray_<NTempest::C3Vector,1281976168,39> : TSFixedArray<NTempest::C3Vector>
{
};

/* 3013 */
struct /*VFT*/ TSFixedArray_<NTempest::C3Vector,1281976168,39>_vtbl
{
  int (__thiscall *TSFixedArray_<NTempest::C3Vector,1281976168,39>::MemLineNo)(TSFixedArray_<NTempest::C3Vector,1281976168,39> *this);
  int (__thiscall *TSBaseArray<NTempest::C3Vector>::MemLineNo)(struct TSFixedArray_<NTempest::C3Vector,1281976168,39> *this);
};

/* 3014 */
struct __cppobj TSFixedArray_<NTempest::C2Vector,1281976168,40> : TSFixedArray<NTempest::C2Vector>
{
};

/* 3015 */
struct /*VFT*/ TSFixedArray_<NTempest::C2Vector,1281976168,40>_vtbl
{
  int (__thiscall *TSFixedArray_<NTempest::C2Vector,1281976168,40>::MemLineNo)(TSFixedArray_<NTempest::C2Vector,1281976168,40> *this);
  int (__thiscall *TSBaseArray<NTempest::C2Vector>::MemLineNo)(struct TSFixedArray_<NTempest::C2Vector,1281976168,40> *this);
};

/* 3016 */
struct __cppobj TSFixedArray_<unsigned short,1281976168,41> : TSFixedArray<unsigned short>
{
};

/* 3017 */
struct /*VFT*/ TSFixedArray_<unsigned short,1281976168,41>_vtbl
{
  int (__thiscall *TSFixedArray_<unsigned short,1281976168,41>::MemLineNo)(TSFixedArray_<unsigned short,1281976168,41> *this);
  int (__thiscall *TSBaseArray<unsigned short>::MemLineNo)(struct TSFixedArray_<unsigned short,1281976168,41> *this);
};

/* 3018 */
struct LightningCoordUpdateData
{
  void (__fastcall *callback)(void *, unsigned int, NTempest::C3Vector *, NTempest::C3Vector *);
  void *context;
};

/* 3019 */
struct __cppobj CLightning
{
  NTempest::C3Vector mSrcPos;
  NTempest::C3Vector mDstPos;
  float mAvgSegLen;
  float mWidth;
  NTempest::CImVector mColor;
  float mNoiseScale;
  float mTexCoordScale;
  float mDuration;
  int mRebuildPoints;
  TSFixedArray_<NTempest::C3Vector,1281976168,38> mPoints;
  TSFixedArray_<NTempest::C3Vector,1281976168,39> mPos;
  TSFixedArray_<NTempest::C2Vector,1281976168,40> mTexCoords;
  TSFixedArray_<unsigned short,1281976168,41> mIndices;
  float mAccTime;
  HTEXTURE__ *mTexture;
  LightningCoordUpdateData mCoordUpdateData;
};

/* 3020 */
struct __cppobj TSBaseArray<CLightning *>
{
  TSBaseArray<CLightning *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CLightning **m_data;
};

/* 3021 */
struct /*VFT*/ TSBaseArray<CLightning *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CLightning *>::MemFileName)(TSBaseArray<CLightning *> *this);
  int (__thiscall *TSBaseArray<CLightning *>::MemLineNo)(TSBaseArray<CLightning *> *this);
};

/* 3022 */
struct /*VFT*/ TSFixedArray<CLightning *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CLightning *>::MemFileName)(struct TSFixedArray<CLightning *> *this);
  int (__thiscall *TSBaseArray<CLightning *>::MemLineNo)(struct TSFixedArray<CLightning *> *this);
};

/* 3023 */
struct __cppobj TSFixedArray<CLightning *> : TSBaseArray<CLightning *>
{
};

/* 3024 */
struct /*VFT*/ TSGrowableArray<CLightning *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CLightning *>::MemFileName)(struct TSGrowableArray<CLightning *> *this);
  int (__thiscall *TSBaseArray<CLightning *>::MemLineNo)(struct TSGrowableArray<CLightning *> *this);
};

/* 3025 */
struct __cppobj TSGrowableArray<CLightning *> : TSFixedArray<CLightning *>
{
  unsigned int m_chunk;
};

/* 3026 */
struct __cppobj CLightningManager
{
  TSGrowableArray<CLightning *> mLiveBolts;
  TSGrowableArray<int> mDeadBolts;
};

/* 3027 */
struct __cppobj TSLink<ProfileInternal::STRINGBLOCK>
{
  TSLink<ProfileInternal::STRINGBLOCK> *m_prevlink;
  ProfileInternal::STRINGBLOCK *m_next;
};

/* 3029 */
struct __cppobj TSLinkedNode<ProfileInternal::STRINGBLOCK>
{
  TSLink<ProfileInternal::STRINGBLOCK> m_link;
};

/* 3028 */
struct __cppobj ProfileInternal::STRINGBLOCK : TSLinkedNode<ProfileInternal::STRINGBLOCK>
{
  unsigned int m_refCount;
  unsigned int m_dataSize;
  unsigned int m_dataUsed;
  char m_data[4];
};

/* 3030 */
struct __cppobj TSList<ProfileInternal::STRINGBLOCK,TSGetLink<ProfileInternal::STRINGBLOCK> >
{
  int m_linkoffset;
  TSLink<ProfileInternal::STRINGBLOCK> m_terminator;
};

/* 3032 */
struct __cppobj TSLink<ProfileInternal::SECTION>
{
  TSLink<ProfileInternal::SECTION> *m_prevlink;
  ProfileInternal::SECTION *m_next;
};

/* 3051 */
struct __cppobj TSList<ProfileInternal::SECTION,TSGetExplicitLink<ProfileInternal::SECTION> >
{
  int m_linkoffset;
  TSLink<ProfileInternal::SECTION> m_terminator;
};

/* 3052 */
struct __cppobj TSExplicitList<ProfileInternal::SECTION,-572662307> : TSList<ProfileInternal::SECTION,TSGetExplicitLink<ProfileInternal::SECTION> >
{
};

/* 3054 */
struct __cppobj TSBaseArray<TSExplicitList<ProfileInternal::SECTION,-572662307> >
{
  TSBaseArray<TSExplicitList<ProfileInternal::SECTION,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<ProfileInternal::SECTION,-572662307> *m_data;
};

/* 3057 */
struct __cppobj TSFixedArray<TSExplicitList<ProfileInternal::SECTION,-572662307> > : TSBaseArray<TSExplicitList<ProfileInternal::SECTION,-572662307> >
{
};

/* 3059 */
struct __cppobj TSGrowableArray<TSExplicitList<ProfileInternal::SECTION,-572662307> > : TSFixedArray<TSExplicitList<ProfileInternal::SECTION,-572662307> >
{
  unsigned int m_chunk;
};

/* 3050 */
struct __cppobj TSHashTable<ProfileInternal::SECTION,HASHKEY_CONSTSTRI>
{
  TSHashTable<ProfileInternal::SECTION,HASHKEY_CONSTSTRI>_vtbl *__vftable /*VFT*/;
  TSExplicitList<ProfileInternal::SECTION,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<ProfileInternal::SECTION,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 3031 */
struct __cppobj ProfileInternal::PROFILE : CHandleObject
{
  TSHashTable<ProfileInternal::SECTION,HASHKEY_CONSTSTRI> sectionTable;
  TSList<ProfileInternal::STRINGBLOCK,TSGetLink<ProfileInternal::STRINGBLOCK> > stringBlockList;
};

/* 3053 */
struct /*VFT*/ TSHashTable<ProfileInternal::SECTION,HASHKEY_CONSTSTRI>_vtbl
{
  void (__thiscall *TSHashTable<ProfileInternal::SECTION,HASHKEY_CONSTSTRI>::InternalDelete)(TSHashTable<ProfileInternal::SECTION,HASHKEY_CONSTSTRI> *this, ProfileInternal::SECTION *);
  ProfileInternal::SECTION *(__thiscall *TSHashTable<ProfileInternal::SECTION,HASHKEY_CONSTSTRI>::InternalNew)(TSHashTable<ProfileInternal::SECTION,HASHKEY_CONSTSTRI> *this, TSExplicitList<ProfileInternal::SECTION,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<ProfileInternal::SECTION,HASHKEY_CONSTSTRI>)(TSHashTable<ProfileInternal::SECTION,HASHKEY_CONSTSTRI> *this);
  void (__thiscall *TSHashTable<ProfileInternal::SECTION,HASHKEY_CONSTSTRI>::Destroy)(TSHashTable<ProfileInternal::SECTION,HASHKEY_CONSTSTRI> *this);
};

/* 3034 */
struct __cppobj TSHashObject<ProfileInternal::SECTION,HASHKEY_CONSTSTRI>
{
  unsigned int m_hashval;
  TSLink<ProfileInternal::SECTION> m_linktoslot;
  TSLink<ProfileInternal::SECTION> m_linktofull;
  HASHKEY_CONSTSTRI m_key;
};

/* 3035 */
struct __cppobj TSLink<ProfileInternal::KEYVALUE>
{
  TSLink<ProfileInternal::KEYVALUE> *m_prevlink;
  ProfileInternal::KEYVALUE *m_next;
};

/* 3041 */
struct __cppobj TSList<ProfileInternal::KEYVALUE,TSGetExplicitLink<ProfileInternal::KEYVALUE> >
{
  int m_linkoffset;
  TSLink<ProfileInternal::KEYVALUE> m_terminator;
};

/* 3042 */
struct __cppobj TSExplicitList<ProfileInternal::KEYVALUE,-572662307> : TSList<ProfileInternal::KEYVALUE,TSGetExplicitLink<ProfileInternal::KEYVALUE> >
{
};

/* 3044 */
struct __cppobj TSBaseArray<TSExplicitList<ProfileInternal::KEYVALUE,-572662307> >
{
  TSBaseArray<TSExplicitList<ProfileInternal::KEYVALUE,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<ProfileInternal::KEYVALUE,-572662307> *m_data;
};

/* 3047 */
struct __cppobj TSFixedArray<TSExplicitList<ProfileInternal::KEYVALUE,-572662307> > : TSBaseArray<TSExplicitList<ProfileInternal::KEYVALUE,-572662307> >
{
};

/* 3049 */
struct __cppobj TSGrowableArray<TSExplicitList<ProfileInternal::KEYVALUE,-572662307> > : TSFixedArray<TSExplicitList<ProfileInternal::KEYVALUE,-572662307> >
{
  unsigned int m_chunk;
};

/* 3040 */
struct __cppobj TSHashTable<ProfileInternal::KEYVALUE,HASHKEY_CONSTSTRI>
{
  TSHashTable<ProfileInternal::KEYVALUE,HASHKEY_CONSTSTRI>_vtbl *__vftable /*VFT*/;
  TSExplicitList<ProfileInternal::KEYVALUE,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<ProfileInternal::KEYVALUE,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 3033 */
struct __cppobj ProfileInternal::SECTION : TSHashObject<ProfileInternal::SECTION,HASHKEY_CONSTSTRI>
{
  TSHashTable<ProfileInternal::KEYVALUE,HASHKEY_CONSTSTRI> keyTable;
};

/* 3055 */
struct /*VFT*/ TSBaseArray<TSExplicitList<ProfileInternal::SECTION,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<ProfileInternal::SECTION,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<ProfileInternal::SECTION,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<ProfileInternal::SECTION,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<ProfileInternal::SECTION,-572662307> > *this);
};

/* 3043 */
struct /*VFT*/ TSHashTable<ProfileInternal::KEYVALUE,HASHKEY_CONSTSTRI>_vtbl
{
  void (__thiscall *TSHashTable<ProfileInternal::KEYVALUE,HASHKEY_CONSTSTRI>::InternalDelete)(TSHashTable<ProfileInternal::KEYVALUE,HASHKEY_CONSTSTRI> *this, ProfileInternal::KEYVALUE *);
  ProfileInternal::KEYVALUE *(__thiscall *TSHashTable<ProfileInternal::KEYVALUE,HASHKEY_CONSTSTRI>::InternalNew)(TSHashTable<ProfileInternal::KEYVALUE,HASHKEY_CONSTSTRI> *this, TSExplicitList<ProfileInternal::KEYVALUE,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<ProfileInternal::KEYVALUE,HASHKEY_CONSTSTRI>)(TSHashTable<ProfileInternal::KEYVALUE,HASHKEY_CONSTSTRI> *this);
  void (__thiscall *TSHashTable<ProfileInternal::KEYVALUE,HASHKEY_CONSTSTRI>::Destroy)(TSHashTable<ProfileInternal::KEYVALUE,HASHKEY_CONSTSTRI> *this);
};

/* 3037 */
struct __cppobj TSHashObject<ProfileInternal::KEYVALUE,HASHKEY_CONSTSTRI>
{
  unsigned int m_hashval;
  TSLink<ProfileInternal::KEYVALUE> m_linktoslot;
  TSLink<ProfileInternal::KEYVALUE> m_linktofull;
  HASHKEY_CONSTSTRI m_key;
};

/* 3039 */
struct __cppobj TSGrowableArray<char *> : TSFixedArray<char *>
{
  unsigned int m_chunk;
};

/* 3036 */
struct __cppobj ProfileInternal::KEYVALUE : TSHashObject<ProfileInternal::KEYVALUE,HASHKEY_CONSTSTRI>
{
  TSGrowableArray<char *> values;
};

/* 3045 */
struct /*VFT*/ TSBaseArray<TSExplicitList<ProfileInternal::KEYVALUE,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<ProfileInternal::KEYVALUE,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<ProfileInternal::KEYVALUE,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<ProfileInternal::KEYVALUE,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<ProfileInternal::KEYVALUE,-572662307> > *this);
};

/* 3038 */
struct /*VFT*/ TSGrowableArray<char *>_vtbl
{
  const char *(__thiscall *TSBaseArray<char *>::MemFileName)(struct TSGrowableArray<char *> *this);
  int (__thiscall *TSBaseArray<char *>::MemLineNo)(struct TSGrowableArray<char *> *this);
};

/* 3046 */
struct /*VFT*/ TSFixedArray<TSExplicitList<ProfileInternal::KEYVALUE,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<ProfileInternal::KEYVALUE,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<ProfileInternal::KEYVALUE,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<ProfileInternal::KEYVALUE,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<ProfileInternal::KEYVALUE,-572662307> > *this);
};

/* 3048 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<ProfileInternal::KEYVALUE,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<ProfileInternal::KEYVALUE,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<ProfileInternal::KEYVALUE,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<ProfileInternal::KEYVALUE,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<ProfileInternal::KEYVALUE,-572662307> > *this);
};

/* 3056 */
struct /*VFT*/ TSFixedArray<TSExplicitList<ProfileInternal::SECTION,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<ProfileInternal::SECTION,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<ProfileInternal::SECTION,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<ProfileInternal::SECTION,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<ProfileInternal::SECTION,-572662307> > *this);
};

/* 3058 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<ProfileInternal::SECTION,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<ProfileInternal::SECTION,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<ProfileInternal::SECTION,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<ProfileInternal::SECTION,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<ProfileInternal::SECTION,-572662307> > *this);
};

/* 3060 */
struct /*VFT*/ ProfileInternal::PROFILE_vtbl
{
  void (__thiscall *~ProfileInternal::PROFILE)(ProfileInternal::PROFILE *this);
  const char *(__thiscall *CHandleObject::GetObjectName)(struct ProfileInternal::PROFILE *this);
};

/* 3061 */
struct __cppobj CParticle
{
  float m_timeToLive;
  float m_elapsed;
  NTempest::C3Vector m_position;
  NTempest::C3Vector m_velocity;
  float m_scale;
  HMODEL__ *m_hmodel;
};

/* 3062 */
struct __cppobj TSBaseArray<CParticle>
{
  TSBaseArray<CParticle>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CParticle *m_data;
};

/* 3063 */
struct /*VFT*/ TSBaseArray<CParticle>_vtbl
{
  const char *(__thiscall *TSBaseArray<CParticle>::MemFileName)(TSBaseArray<CParticle> *this);
  int (__thiscall *TSBaseArray<CParticle>::MemLineNo)(TSBaseArray<CParticle> *this);
};

/* 3064 */
struct /*VFT*/ TSFixedArray<CParticle>_vtbl
{
  const char *(__thiscall *TSBaseArray<CParticle>::MemFileName)(struct TSFixedArray<CParticle> *this);
  int (__thiscall *TSBaseArray<CParticle>::MemLineNo)(struct TSFixedArray<CParticle> *this);
};

/* 3065 */
struct __cppobj TSFixedArray<CParticle> : TSBaseArray<CParticle>
{
};

/* 3066 */
struct /*VFT*/ TSGrowableArray<CParticle>_vtbl
{
  const char *(__thiscall *TSBaseArray<CParticle>::MemFileName)(struct TSGrowableArray<CParticle> *this);
  int (__thiscall *TSBaseArray<CParticle>::MemLineNo)(struct TSGrowableArray<CParticle> *this);
};

/* 3067 */
struct __cppobj TSGrowableArray<CParticle> : TSFixedArray<CParticle>
{
  unsigned int m_chunk;
};

/* 3068 */
struct __cppobj CParticleEmitter
{
  unsigned int m_refCount;
  float m_numNew;
  int m_enabled;
  int m_enabled2;
  float m_particleEmissionRate;
  float m_particleLifeSpan;
  float m_velocity;
  float m_acceleration;
  float m_scale;
  float m_latitude;
  float m_longitude;
  HMODEL__ *m_hmodel;
  TSGrowableArray<CParticle> m_particles;
  CParticleStack m_alive;
  CParticleStack m_dead;
};

/* 3069 */
struct __cppobj TSLink<FONTHASHOBJ>
{
  TSLink<FONTHASHOBJ> *m_prevlink;
  FONTHASHOBJ *m_next;
};

/* 3070 */
struct __cppobj TSHashObject<FONTHASHOBJ,HASHKEY_STR>
{
  unsigned int m_hashval;
  __unaligned __declspec(align(1)) TSLink<FONTHASHOBJ> m_linktoslot;
  __unaligned __declspec(align(1)) TSLink<FONTHASHOBJ> m_linktofull;
  HASHKEY_STR m_key;
};

/* 3071 */
struct __cppobj __unaligned __declspec(align(4)) FONTHASHOBJ : CHandleObject, TSHashObject<FONTHASHOBJ,HASHKEY_STR>
{
  CGxFont *font;
};

/* 3072 */
struct /*VFT*/ FONTHASHOBJ_vtbl
{
  void (__thiscall *~FONTHASHOBJ)(FONTHASHOBJ *this);
  const char *(__thiscall *CHandleObject::GetObjectName)(struct FONTHASHOBJ *this);
};

/* 3073 */
struct __cppobj TSList<FONTHASHOBJ,TSGetExplicitLink<FONTHASHOBJ> >
{
  int m_linkoffset;
  TSLink<FONTHASHOBJ> m_terminator;
};

/* 3074 */
struct __cppobj TSExplicitList<FONTHASHOBJ,-572662307> : TSList<FONTHASHOBJ,TSGetExplicitLink<FONTHASHOBJ> >
{
};

/* 3075 */
struct __cppobj TSBaseArray<TSExplicitList<FONTHASHOBJ,-572662307> >
{
  TSBaseArray<TSExplicitList<FONTHASHOBJ,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<FONTHASHOBJ,-572662307> *m_data;
};

/* 3076 */
struct /*VFT*/ TSBaseArray<TSExplicitList<FONTHASHOBJ,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<FONTHASHOBJ,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<FONTHASHOBJ,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<FONTHASHOBJ,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<FONTHASHOBJ,-572662307> > *this);
};

/* 3077 */
struct /*VFT*/ TSFixedArray<TSExplicitList<FONTHASHOBJ,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<FONTHASHOBJ,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<FONTHASHOBJ,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<FONTHASHOBJ,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<FONTHASHOBJ,-572662307> > *this);
};

/* 3078 */
struct __cppobj TSFixedArray<TSExplicitList<FONTHASHOBJ,-572662307> > : TSBaseArray<TSExplicitList<FONTHASHOBJ,-572662307> >
{
};

/* 3079 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<FONTHASHOBJ,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<FONTHASHOBJ,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<FONTHASHOBJ,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<FONTHASHOBJ,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<FONTHASHOBJ,-572662307> > *this);
};

/* 3080 */
struct __cppobj TSGrowableArray<TSExplicitList<FONTHASHOBJ,-572662307> > : TSFixedArray<TSExplicitList<FONTHASHOBJ,-572662307> >
{
  unsigned int m_chunk;
};

/* 3081 */
struct __cppobj TSHashTable<FONTHASHOBJ,HASHKEY_STR>
{
  TSHashTable<FONTHASHOBJ,HASHKEY_STR>_vtbl *__vftable /*VFT*/;
  TSExplicitList<FONTHASHOBJ,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<FONTHASHOBJ,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 3082 */
struct /*VFT*/ TSHashTable<FONTHASHOBJ,HASHKEY_STR>_vtbl
{
  void (__thiscall *TSHashTable<FONTHASHOBJ,HASHKEY_STR>::InternalDelete)(TSHashTable<FONTHASHOBJ,HASHKEY_STR> *this, FONTHASHOBJ *);
  FONTHASHOBJ *(__thiscall *TSHashTable<FONTHASHOBJ,HASHKEY_STR>::InternalNew)(TSHashTable<FONTHASHOBJ,HASHKEY_STR> *this, TSExplicitList<FONTHASHOBJ,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<FONTHASHOBJ,HASHKEY_STR>)(TSHashTable<FONTHASHOBJ,HASHKEY_STR> *this);
  void (__thiscall *TSHashTable<FONTHASHOBJ,HASHKEY_STR>::Destroy)(TSHashTable<FONTHASHOBJ,HASHKEY_STR> *this);
};

/* 3083 */
struct __cppobj TEXTBLOCK : CHandleObject
{
  CGxString *string;
};

/* 3084 */
struct /*VFT*/ TEXTBLOCK_vtbl
{
  void (__thiscall *~TEXTBLOCK)(TEXTBLOCK *this);
  const char *(__thiscall *CHandleObject::GetObjectName)(struct TEXTBLOCK *this);
};

/* 3087 */
struct __cppobj TSLink<CBaseManaged>
{
  TSLink<CBaseManaged> *m_prevlink;
  CBaseManaged *m_next;
};

/* 3085 */
struct __cppobj CBaseManaged
{
  CBaseManaged_vtbl *__vftable /*VFT*/;
  TSLink<CBaseManaged> m_link;
  unsigned __int8 m_dataTypeId;
  unsigned __int8 m_flags;
  void (__fastcall *m_updateFcn)(float, void *, void *);
  void *m_updateData;
  float m_updatePriority;
};

/* 3086 */
struct /*VFT*/ CBaseManaged_vtbl
{
  void (__thiscall *CBaseManaged::~CBaseManaged)(CBaseManaged *this);
  void (__thiscall *CBaseManaged::Update)(CBaseManaged *this, float);
  void (__thiscall *CBaseManaged::UpdateR)(CBaseManaged *this, float);
};

/* 3088 */
struct __cppobj TManaged<float> : CBaseManaged
{
  float m_data;
};

/* 3089 */
struct /*VFT*/ TManaged<float>_vtbl
{
  void (__thiscall *~TManaged<float>)(TManaged<float> *this);
  void (__thiscall *CBaseManaged::Update)(struct TManaged<float> *this, float);
  void (__thiscall *CBaseManaged::UpdateR)(struct TManaged<float> *this, float);
  void (__thiscall *TManaged<float>::Set_)(TManaged<float> *this, const float *);
};

/* 3090 */
struct __cppobj CAngle : TManaged<float>
{
  float m_cos;
  float m_sin;
};

/* 3091 */
struct /*VFT*/ CAngle_vtbl
{
  void (__thiscall *~CAngle)(CAngle *this);
  void (__thiscall *CBaseManaged::Update)(struct CAngle *this, float);
  void (__thiscall *CBaseManaged::UpdateR)(struct CAngle *this, float);
  void (__thiscall *TManaged<float>::Set_)(struct CAngle *this, const float *);
};

/* 3092 */
struct __cppobj TSBaseArray<CBaseManaged *>
{
  TSBaseArray<CBaseManaged *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CBaseManaged **m_data;
};

/* 3093 */
struct /*VFT*/ TSBaseArray<CBaseManaged *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CBaseManaged *>::MemFileName)(TSBaseArray<CBaseManaged *> *this);
  int (__thiscall *TSBaseArray<CBaseManaged *>::MemLineNo)(TSBaseArray<CBaseManaged *> *this);
};

/* 3094 */
struct /*VFT*/ TSFixedArray<CBaseManaged *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CBaseManaged *>::MemFileName)(struct TSFixedArray<CBaseManaged *> *this);
  int (__thiscall *TSBaseArray<CBaseManaged *>::MemLineNo)(struct TSFixedArray<CBaseManaged *> *this);
};

/* 3095 */
struct __cppobj TSFixedArray<CBaseManaged *> : TSBaseArray<CBaseManaged *>
{
};

/* 3096 */
struct __cppobj TSList<CBaseManaged,TSGetExplicitLink<CBaseManaged> >
{
  int m_linkoffset;
  TSLink<CBaseManaged> m_terminator;
};

/* 3097 */
struct __cppobj TSExplicitList<CBaseManaged,4> : TSList<CBaseManaged,TSGetExplicitLink<CBaseManaged> >
{
};

/* 3098 */
struct __cppobj CDataMgr : CHandleObject
{
  TSFixedArray<CBaseManaged *> m_managedArray;
  TSExplicitList<CBaseManaged,4> m_updateList;
};

/* 3099 */
struct /*VFT*/ CDataMgr_vtbl
{
  void (__thiscall *CDataMgr::~CDataMgr)(CDataMgr *this);
  const char *(__thiscall *CHandleObject::GetObjectName)(struct CDataMgr *this);
};

/* 3100 */
struct __cppobj TManaged<NTempest::CImVector> : CBaseManaged
{
  NTempest::CImVector m_data;
};

/* 3101 */
struct /*VFT*/ TManaged<NTempest::CImVector>_vtbl
{
  void (__thiscall *~TManaged<NTempest::CImVector>)(TManaged<NTempest::CImVector> *this);
  void (__thiscall *CBaseManaged::Update)(struct TManaged<NTempest::CImVector> *this, float);
  void (__thiscall *CBaseManaged::UpdateR)(struct TManaged<NTempest::CImVector> *this, float);
  void (__thiscall *Set_)(TManaged<NTempest::CImVector> *this, const NTempest::CImVector *);
};

/* 3102 */
struct __cppobj TManaged<C3Color> : CBaseManaged
{
  C3Color m_data;
};

/* 3103 */
struct /*VFT*/ TManaged<C3Color>_vtbl
{
  void (__thiscall *~TManaged<C3Color>)(TManaged<C3Color> *this);
  void (__thiscall *CBaseManaged::Update)(struct TManaged<C3Color> *this, float);
  void (__thiscall *CBaseManaged::UpdateR)(struct TManaged<C3Color> *this, float);
  void (__thiscall *Set_)(TManaged<C3Color> *this, const C3Color *);
};

/* 3104 */
struct __cppobj TManaged<NTempest::C3Vector> : CBaseManaged
{
  NTempest::C3Vector m_data;
};

/* 3105 */
struct /*VFT*/ TManaged<NTempest::C3Vector>_vtbl
{
  void (__thiscall *~TManaged<NTempest::C3Vector>)(TManaged<NTempest::C3Vector> *this);
  void (__thiscall *CBaseManaged::Update)(struct TManaged<NTempest::C3Vector> *this, float);
  void (__thiscall *CBaseManaged::UpdateR)(struct TManaged<NTempest::C3Vector> *this, float);
  void (__thiscall *TManaged<NTempest::C3Vector>::Set_)(TManaged<NTempest::C3Vector> *this, const NTempest::C3Vector *);
};

/* 3106 */
struct __cppobj TManaged<NTempest::C33Matrix> : CBaseManaged
{
  NTempest::C33Matrix m_data;
};

/* 3107 */
struct /*VFT*/ TManaged<NTempest::C33Matrix>_vtbl
{
  void (__thiscall *~TManaged<NTempest::C33Matrix>)(TManaged<NTempest::C33Matrix> *this);
  void (__thiscall *CBaseManaged::Update)(struct TManaged<NTempest::C33Matrix> *this, float);
  void (__thiscall *CBaseManaged::UpdateR)(struct TManaged<NTempest::C33Matrix> *this, float);
  void (__thiscall *Set_)(TManaged<NTempest::C33Matrix> *this, const NTempest::C33Matrix *);
};

/* 3108 */
struct __cppobj TManaged<int> : CBaseManaged
{
  int m_data;
};

/* 3109 */
struct /*VFT*/ TManaged<int>_vtbl
{
  void (__thiscall *~TManaged<int>)(TManaged<int> *this);
  void (__thiscall *CBaseManaged::Update)(struct TManaged<int> *this, float);
  void (__thiscall *CBaseManaged::UpdateR)(struct TManaged<int> *this, float);
  void (__thiscall *Set_)(TManaged<int> *this, const int *);
};

/* 3110 */
struct __cppobj UpdateInfo
{
  void (__fastcall *updateFcn)(float, void *, void *);
  void *updateData;
  float updatePriority;
};

/* 3111 */
struct __cppobj CPlaneParticleEmitter : CParticleEmitter2
{
  float m_width;
  float m_height;
  float m_latitude;
  float m_longitude;
};

/* 3112 */
struct /*VFT*/ CPlaneParticleEmitter_vtbl
{
  void (__thiscall *CPlaneParticleEmitter::SetLongitude)(CPlaneParticleEmitter *this, float);
  _BYTE gap4[4];
  void (__thiscall *CParticleEmitter2::CreateParticle)(struct CPlaneParticleEmitter *this, CParticle2 *, float, const NTempest::C34Matrix *);
  void (__thiscall *CParticleEmitter2::DestroyParticle)(struct CPlaneParticleEmitter *this, CParticle2 *);
  CParticleEmitter2 *(__thiscall *Clone)(struct CPlaneParticleEmitter *this, int);
  void (__thiscall *CParticleEmitter2::~CParticleEmitter2)(struct CPlaneParticleEmitter *this);
  void (__thiscall *SetWidth)(struct CPlaneParticleEmitter *this, float);
  void (__thiscall *SetHeight)(struct CPlaneParticleEmitter *this, float);
  void (__thiscall *SetLatitude)(struct CPlaneParticleEmitter *this, float);
  void (__thiscall *SetLongitude)(struct CPlaneParticleEmitter *this, float);
  void (__thiscall *CParticleEmitter2::SetEmissionRate)(struct CPlaneParticleEmitter *this, float);
};

/* 3113 */
struct __cppobj NTempest::C4iVector
{
  int x;
  int y;
  int z;
  int w;
};

/* 3114 */
struct __cppobj CSphereParticleEmitter : CParticleEmitter2
{
  float m_innerRadius;
  float m_outerRadius;
  float m_radiusRange;
  float m_latitude;
  float m_longitude;
};

/* 3115 */
struct /*VFT*/ CSphereParticleEmitter_vtbl
{
  void (__thiscall *CSphereParticleEmitter::SetLongitude)(CSphereParticleEmitter *this, float);
  _BYTE gap4[4];
  void (__thiscall *CParticleEmitter2::CreateParticle)(struct CSphereParticleEmitter *this, CParticle2 *, float, const NTempest::C34Matrix *);
  void (__thiscall *CParticleEmitter2::DestroyParticle)(struct CSphereParticleEmitter *this, CParticle2 *);
  CParticleEmitter2 *(__thiscall *Clone)(struct CSphereParticleEmitter *this, int);
  void (__thiscall *CParticleEmitter2::~CParticleEmitter2)(struct CSphereParticleEmitter *this);
  void (__thiscall *SetWidth)(struct CSphereParticleEmitter *this, float);
  void (__thiscall *SetHeight)(struct CSphereParticleEmitter *this, float);
  void (__thiscall *SetLatitude)(struct CSphereParticleEmitter *this, float);
  void (__thiscall *SetLongitude)(struct CSphereParticleEmitter *this, float);
  void (__thiscall *CParticleEmitter2::SetEmissionRate)(struct CSphereParticleEmitter *this, float);
};

/* 3116 */
struct __cppobj NTempest::C3Spline_Bezier3 : NTempest::C3Spline
{
};

/* 3117 */
struct /*VFT*/ NTempest::C3Spline_Bezier3_vtbl
{
  void (__thiscall *NTempest::C3Spline_Bezier3::IFrameArclength)(NTempest::C3Spline_Bezier3 *this, float, NTempest::C34Matrix *);
  void (__thiscall *IValidateCache)(struct NTempest::C3Spline_Bezier3 *this);
  void (__thiscall *IPosArclength)(struct NTempest::C3Spline_Bezier3 *this, float, NTempest::C3Vector *);
  void (__thiscall *IPosParametric)(struct NTempest::C3Spline_Bezier3 *this, float, NTempest::C3Vector *);
  void (__thiscall *IVelArclength)(struct NTempest::C3Spline_Bezier3 *this, float, NTempest::C3Vector *);
  void (__thiscall *IVelParametric)(struct NTempest::C3Spline_Bezier3 *this, float, NTempest::C3Vector *);
  void (__thiscall *IFrameArclength)(struct NTempest::C3Spline_Bezier3 *this, float, NTempest::C34Matrix *);
  void (__thiscall *NTempest::C3Spline::ISetPoints)(struct NTempest::C3Spline_Bezier3 *this, const NTempest::C3Vector *, unsigned int);
};

/* 3118 */
struct __cppobj CSplineParticleEmitter : CParticleEmitter2
{
  float m_requestedEmissionRate;
  float m_start;
  float m_end;
  float m_latitude;
  float m_radius;
  int m_emitAtEnd;
  NTempest::C3Spline_Bezier3 m_spline;
};

/* 3119 */
struct /*VFT*/ CSplineParticleEmitter_vtbl
{
  void (__thiscall *CSplineParticleEmitter::SetEmissionRate)(CSplineParticleEmitter *this, float);
  _BYTE gap4[4];
  void (__thiscall *CParticleEmitter2::CreateParticle)(struct CSplineParticleEmitter *this, CParticle2 *, float, const NTempest::C34Matrix *);
  void (__thiscall *CParticleEmitter2::DestroyParticle)(struct CSplineParticleEmitter *this, CParticle2 *);
  CParticleEmitter2 *(__thiscall *Clone)(struct CSplineParticleEmitter *this, int);
  void (__thiscall *CParticleEmitter2::~CParticleEmitter2)(struct CSplineParticleEmitter *this);
  void (__thiscall *SetWidth)(struct CSplineParticleEmitter *this, float);
  void (__thiscall *SetHeight)(struct CSplineParticleEmitter *this, float);
  void (__thiscall *SetLatitude)(struct CSplineParticleEmitter *this, float);
  void (__thiscall *SetLongitude)(struct CSplineParticleEmitter *this, float);
  void (__thiscall *CParticleEmitter2::SetEmissionRate)(struct CSplineParticleEmitter *this, float);
};

/* 3120 */
struct __cppobj CCamera : CDataMgr
{
  TManaged<NTempest::C3Vector> m_position;
  TManaged<NTempest::C3Vector> m_target;
  TManaged<float> m_distance;
  TManaged<float> m_zFar;
  TManaged<float> m_zNear;
  CAngle m_aoa;
  CAngle m_fov;
  CAngle m_roll;
  CAngle m_rotation;
};

/* 3121 */
struct /*VFT*/ CCamera_vtbl
{
  void (__thiscall *~CCamera)(CCamera *this);
  const char *(__thiscall *CHandleObject::GetObjectName)(struct CCamera *this);
};

/* 3122 */
struct __cppobj NTempest::CMemBlockT<CSortableParticleRecord> : NTempest::CMemBlock
{
};

/* 3123 */
struct /*VFT*/ NTempest::CMemBlockT<CSortableParticleRecord>_vtbl
{
  void (__thiscall *~NTempest::CMemBlockT<CSortableParticleRecord>)(NTempest::CMemBlockT<CSortableParticleRecord> *this);
};

/* 3124 */
struct __cppobj NTempest::CDynTable<CSortableParticleRecord> : NTempest::CMemBlockT<CSortableParticleRecord>
{
  unsigned int expand;
  unsigned int iallocated;
  unsigned int iused;
};

/* 3125 */
struct /*VFT*/ NTempest::CDynTable<CSortableParticleRecord>_vtbl
{
  void (__thiscall *~NTempest::CDynTable<CSortableParticleRecord>)(NTempest::CDynTable<CSortableParticleRecord> *this);
};

/* 3126 */
struct __cppobj NTempest::CPriorityQ<CSortableParticleRecord,CSortableParticleRecord> : NTempest::CDynTable<CSortableParticleRecord>
{
};

/* 3127 */
struct /*VFT*/ NTempest::CPriorityQ<CSortableParticleRecord,CSortableParticleRecord>_vtbl
{
  void (__thiscall *~NTempest::CPriorityQ<CSortableParticleRecord,CSortableParticleRecord>)(NTempest::CPriorityQ<CSortableParticleRecord,CSortableParticleRecord> *this);
};

/* 3128 */
struct CSortableParticleRecord
{
  float dist;
  CParticle2 *p;
};

/* 3129 */
struct __cppobj CGxVertexPNCT0
{
  NTempest::C3Vector p;
  NTempest::C3Vector n;
  NTempest::CImVector c;
  NTempest::C2Vector tc[1];
};

/* 3130 */
struct __cppobj CGxBufOp
{
  EGxBufOp op;
  void **mem[7];
  unsigned int stride[7];
};

/* 3131 */
struct __cppobj CGxBufCommand
{
  CGxBufOp vertex;
  CGxBufOp index;
};

/* 3132 */
struct __cppobj TSLink<CGxBuf>
{
  TSLink<CGxBuf> *m_prevlink;
  CGxBuf *m_next;
};

/* 3133 */
struct __cppobj CGxBuf
{
  TSLink<CGxBuf> linkGx;
  TSLink<CGxBuf> linkVB;
  TSLink<CGxBuf> linkIB;
  EGxBufWriteFreq m_writeFreq;
  EGxVertexBufferFormat m_vbFormat;
  unsigned int m_numVertices;
  unsigned int m_numIndices;
  void (__fastcall *m_userCallback)(CGxBufCommand *, CGxBuf *);
  void *m_userArg;
  unsigned int m_vertexBase;
  unsigned int m_indexBase;
  CGxBuf::Status m_vertexStatus;
  CGxBuf::Status m_indexStatus;
  unsigned int writeFrameTag;
};

/* 3134 */
struct __cppobj NTempest::CRandom
{
};

/* 3135 */
struct __cppobj CGxBatch
{
  EGxPrim m_primType;
  unsigned int m_count;
  unsigned int m_start;
  int m_minIndex;
  int m_maxIndex;
};

/* 3136 */
struct __cppobj TSBaseArray<CParticleEmitter *>
{
  TSBaseArray<CParticleEmitter *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CParticleEmitter **m_data;
};

/* 3137 */
struct /*VFT*/ TSBaseArray<CParticleEmitter *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CParticleEmitter *>::MemFileName)(TSBaseArray<CParticleEmitter *> *this);
  int (__thiscall *TSBaseArray<CParticleEmitter *>::MemLineNo)(TSBaseArray<CParticleEmitter *> *this);
};

/* 3138 */
struct /*VFT*/ TSFixedArray<CParticleEmitter *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CParticleEmitter *>::MemFileName)(struct TSFixedArray<CParticleEmitter *> *this);
  int (__thiscall *TSBaseArray<CParticleEmitter *>::MemLineNo)(struct TSFixedArray<CParticleEmitter *> *this);
};

/* 3139 */
struct __cppobj TSFixedArray<CParticleEmitter *> : TSBaseArray<CParticleEmitter *>
{
};

/* 3140 */
struct /*VFT*/ TSGrowableArray<CParticleEmitter *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CParticleEmitter *>::MemFileName)(struct TSGrowableArray<CParticleEmitter *> *this);
  int (__thiscall *TSBaseArray<CParticleEmitter *>::MemLineNo)(struct TSGrowableArray<CParticleEmitter *> *this);
};

/* 3141 */
struct __cppobj TSGrowableArray<CParticleEmitter *> : TSFixedArray<CParticleEmitter *>
{
  unsigned int m_chunk;
};

/* 3142 */
struct /*VFT*/ TSGrowableArray<CParticleEmitter2 *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CParticleEmitter2 *>::MemFileName)(struct TSGrowableArray<CParticleEmitter2 *> *this);
  int (__thiscall *TSBaseArray<CParticleEmitter2 *>::MemLineNo)(struct TSGrowableArray<CParticleEmitter2 *> *this);
};

/* 3143 */
struct __cppobj TSGrowableArray<CParticleEmitter2 *> : TSFixedArray<CParticleEmitter2 *>
{
  unsigned int m_chunk;
};

/* 3144 */
struct __cppobj ParticleSystemManager
{
  TSGrowableArray<CParticleEmitter *> modelEmitters;
  TSGrowableArray<CParticleEmitter2 *> emitter2s;
  TSGrowableArray<CParticleEmitter *> deletedModelEmitters;
  TSGrowableArray<CParticleEmitter2 *> deletedEmitter2s;
};

/* 3145 */
struct /*VFT*/ TSGrowableArray<CRibbonEmitter *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CRibbonEmitter *>::MemFileName)(struct TSGrowableArray<CRibbonEmitter *> *this);
  int (__thiscall *TSBaseArray<CRibbonEmitter *>::MemLineNo)(struct TSGrowableArray<CRibbonEmitter *> *this);
};

/* 3146 */
struct __cppobj TSGrowableArray<CRibbonEmitter *> : TSFixedArray<CRibbonEmitter *>
{
  unsigned int m_chunk;
};

/* 3147 */
struct __cppobj RibbonManager
{
  TSGrowableArray<CRibbonEmitter *> emitters;
  TSGrowableArray<CRibbonEmitter *> deletedEmitters;
};

/* 3148 */
struct __cppobj TSBaseArray<void (__fastcall*)(void)>
{
  TSBaseArray<void (__fastcall*)(void)>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  void (__fastcall **m_data)();
};

/* 3149 */
struct /*VFT*/ TSBaseArray<void (__fastcall*)(void)>_vtbl
{
  const char *(__thiscall *TSBaseArray<void (__fastcall*)(void)>::MemFileName)(TSBaseArray<void (__fastcall*)(void)> *this);
  int (__thiscall *TSBaseArray<void (__fastcall*)(void)>::MemLineNo)(TSBaseArray<void (__fastcall*)(void)> *this);
};

/* 3150 */
struct /*VFT*/ TSFixedArray<void (__fastcall*)(void)>_vtbl
{
  const char *(__thiscall *TSBaseArray<void (__fastcall*)(void)>::MemFileName)(struct TSFixedArray<void (__fastcall*)(void)> *this);
  int (__thiscall *TSBaseArray<void (__fastcall*)(void)>::MemLineNo)(struct TSFixedArray<void (__fastcall*)(void)> *this);
};

/* 3151 */
struct __cppobj TSFixedArray<void (__fastcall*)(void)> : TSBaseArray<void (__fastcall*)(void)>
{
};

/* 3152 */
struct /*VFT*/ TSGrowableArray<void (__fastcall*)(void)>_vtbl
{
  const char *(__thiscall *TSBaseArray<void (__fastcall*)(void)>::MemFileName)(struct TSGrowableArray<void (__fastcall*)(void)> *this);
  int (__thiscall *TSBaseArray<void (__fastcall*)(void)>::MemLineNo)(struct TSGrowableArray<void (__fastcall*)(void)> *this);
};

/* 3153 */
struct __cppobj TSGrowableArray<void (__fastcall*)(void)> : TSFixedArray<void (__fastcall*)(void)>
{
  unsigned int m_chunk;
};

/* 3154 */
struct __cppobj TSLink<CTextureItem>
{
  TSLink<CTextureItem> *m_prevlink;
  CTextureItem *m_next;
};

/* 3155 */
struct __cppobj __unaligned __declspec(align(4)) CTextureItem
{
  HTEXTURE__ *texture;
  int fromColor;
  unsigned int timeStamp;
  TSLink<CTextureItem> link;
};

/* 3156 */
struct __cppobj TSList<CTextureItem,TSGetExplicitLink<CTextureItem> >
{
  int m_linkoffset;
  TSLink<CTextureItem> m_terminator;
};

/* 3157 */
struct __cppobj TSExplicitList<CTextureItem,12> : TSList<CTextureItem,TSGetExplicitLink<CTextureItem> >
{
};

/* 3158 */
struct __cppobj TSLink<CTexture>
{
  TSLink<CTexture> *m_prevlink;
  CTexture *m_next;
};

/* 3159 */
struct __cppobj __unaligned __declspec(align(4)) CTexture : CHandleObject
{
  char filename[260];
  unsigned int flags;
  unsigned __int16 pixBitDepth;
  unsigned __int16 alphaBits;
  MipBits *mipBits;
  CStatus loadStatus;
  CGxTex *gxTex;
  unsigned int gxWidth;
  unsigned int gxHeight;
  EGxTexFormat gxTexFormat;
  EGxTexFormat dataFormat;
  CGxTexFlags gxTexFlags;
  CAsyncObject *asyncObject;
  TSLink<CTexture> link;
};

/* 3160 */
struct /*VFT*/ CTexture_vtbl
{
  const char *(__thiscall *CTexture::GetObjectName)(CTexture *this);
  const char *(__thiscall *CHandleObject::GetObjectName)(struct CTexture *this);
};

/* 3161 */
struct __cppobj TSList<CTexture,TSGetExplicitLink<CTexture> >
{
  int m_linkoffset;
  TSLink<CTexture> m_terminator;
};

/* 3162 */
struct __cppobj TSExplicitList<CTexture,324> : TSList<CTexture,TSGetExplicitLink<CTexture> >
{
};

/* 3163 */
struct __cppobj TSLink<CGxTexCache>
{
  TSLink<CGxTexCache> *m_prevlink;
  CGxTexCache *m_next;
};

/* 3164 */
struct __cppobj CGxTexCache
{
  CGxTex *gxTex;
  unsigned int timeStamp;
  TSLink<CGxTexCache> link;
};

/* 3165 */
struct __cppobj TSList<CGxTexCache,TSGetExplicitLink<CGxTexCache> >
{
  int m_linkoffset;
  TSLink<CGxTexCache> m_terminator;
};

/* 3166 */
struct __cppobj TSExplicitList<CGxTexCache,8> : TSList<CGxTexCache,TSGetExplicitLink<CGxTexCache> >
{
};

/* 3167 */
struct __cppobj TSLink<CTextureHash>
{
  TSLink<CTextureHash> *m_prevlink;
  CTextureHash *m_next;
};

/* 3169 */
struct __cppobj HASHKEY_TEXTUREFILE
{
  char *m_filename;
  CGxTexFlags m_flags;
};

/* 3170 */
struct __cppobj TSHashObject<CTextureHash,HASHKEY_TEXTUREFILE>
{
  unsigned int m_hashval;
  TSLink<CTextureHash> m_linktoslot;
  TSLink<CTextureHash> m_linktofull;
  HASHKEY_TEXTUREFILE m_key;
};

/* 3168 */
struct __cppobj CTextureHash : TSHashObject<CTextureHash,HASHKEY_TEXTUREFILE>, CTextureItem
{
};

/* 3172 */
struct __cppobj TSList<CTextureHash,TSGetExplicitLink<CTextureHash> >
{
  int m_linkoffset;
  TSLink<CTextureHash> m_terminator;
};

/* 3173 */
struct __cppobj TSExplicitList<CTextureHash,-572662307> : TSList<CTextureHash,TSGetExplicitLink<CTextureHash> >
{
};

/* 3175 */
struct __cppobj TSBaseArray<TSExplicitList<CTextureHash,-572662307> >
{
  TSBaseArray<TSExplicitList<CTextureHash,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<CTextureHash,-572662307> *m_data;
};

/* 3178 */
struct __cppobj TSFixedArray<TSExplicitList<CTextureHash,-572662307> > : TSBaseArray<TSExplicitList<CTextureHash,-572662307> >
{
};

/* 3180 */
struct __cppobj TSGrowableArray<TSExplicitList<CTextureHash,-572662307> > : TSFixedArray<TSExplicitList<CTextureHash,-572662307> >
{
  unsigned int m_chunk;
};

/* 3171 */
struct __cppobj TSHashTable<CTextureHash,HASHKEY_TEXTUREFILE>
{
  TSHashTable<CTextureHash,HASHKEY_TEXTUREFILE>_vtbl *__vftable /*VFT*/;
  TSExplicitList<CTextureHash,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<CTextureHash,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 3174 */
struct /*VFT*/ TSHashTable<CTextureHash,HASHKEY_TEXTUREFILE>_vtbl
{
  void (__thiscall *TSHashTable<CTextureHash,HASHKEY_TEXTUREFILE>::InternalDelete)(TSHashTable<CTextureHash,HASHKEY_TEXTUREFILE> *this, CTextureHash *);
  CTextureHash *(__thiscall *TSHashTable<CTextureHash,HASHKEY_TEXTUREFILE>::InternalNew)(TSHashTable<CTextureHash,HASHKEY_TEXTUREFILE> *this, TSExplicitList<CTextureHash,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<CTextureHash,HASHKEY_TEXTUREFILE>)(TSHashTable<CTextureHash,HASHKEY_TEXTUREFILE> *this);
  void (__thiscall *TSHashTable<CTextureHash,HASHKEY_TEXTUREFILE>::Destroy)(TSHashTable<CTextureHash,HASHKEY_TEXTUREFILE> *this);
};

/* 3176 */
struct /*VFT*/ TSBaseArray<TSExplicitList<CTextureHash,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CTextureHash,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<CTextureHash,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CTextureHash,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<CTextureHash,-572662307> > *this);
};

/* 3177 */
struct /*VFT*/ TSFixedArray<TSExplicitList<CTextureHash,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CTextureHash,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<CTextureHash,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CTextureHash,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<CTextureHash,-572662307> > *this);
};

/* 3179 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<CTextureHash,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CTextureHash,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<CTextureHash,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CTextureHash,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<CTextureHash,-572662307> > *this);
};

/* 3181 */
struct __cppobj TSLink<TSHashObjectChunk<CTextureHash,HASHKEY_TEXTUREFILE> >
{
  TSLink<TSHashObjectChunk<CTextureHash,HASHKEY_TEXTUREFILE> > *m_prevlink;
  TSHashObjectChunk<CTextureHash,HASHKEY_TEXTUREFILE> *m_next;
};

/* 3182 */
struct __cppobj TSBaseArray<CTextureHash>
{
  TSBaseArray<CTextureHash>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CTextureHash *m_data;
};

/* 3185 */
struct __cppobj TSFixedArray<CTextureHash> : TSBaseArray<CTextureHash>
{
};

/* 3187 */
struct __cppobj TSGrowableArray<CTextureHash> : TSFixedArray<CTextureHash>
{
  unsigned int m_chunk;
};

/* 3188 */
struct __cppobj __unaligned __declspec(align(4)) TSHashObjectChunk<CTextureHash,HASHKEY_TEXTUREFILE>
{
  TSGrowableArray<CTextureHash> m_array;
  TSLink<TSHashObjectChunk<CTextureHash,HASHKEY_TEXTUREFILE> > m_link;
};

/* 3183 */
struct /*VFT*/ TSBaseArray<CTextureHash>_vtbl
{
  const char *(__thiscall *TSBaseArray<CTextureHash>::MemFileName)(TSBaseArray<CTextureHash> *this);
  int (__thiscall *TSBaseArray<CTextureHash>::MemLineNo)(TSBaseArray<CTextureHash> *this);
};

/* 3184 */
struct /*VFT*/ TSFixedArray<CTextureHash>_vtbl
{
  const char *(__thiscall *TSBaseArray<CTextureHash>::MemFileName)(struct TSFixedArray<CTextureHash> *this);
  int (__thiscall *TSBaseArray<CTextureHash>::MemLineNo)(struct TSFixedArray<CTextureHash> *this);
};

/* 3186 */
struct /*VFT*/ TSGrowableArray<CTextureHash>_vtbl
{
  const char *(__thiscall *TSBaseArray<CTextureHash>::MemFileName)(struct TSGrowableArray<CTextureHash> *this);
  int (__thiscall *TSBaseArray<CTextureHash>::MemLineNo)(struct TSGrowableArray<CTextureHash> *this);
};

/* 3189 */
struct __cppobj TSList<TSHashObjectChunk<CTextureHash,HASHKEY_TEXTUREFILE>,TSGetExplicitLink<TSHashObjectChunk<CTextureHash,HASHKEY_TEXTUREFILE> > >
{
  int m_linkoffset;
  TSLink<TSHashObjectChunk<CTextureHash,HASHKEY_TEXTUREFILE> > m_terminator;
};

/* 3190 */
struct __cppobj TSExplicitList<TSHashObjectChunk<CTextureHash,HASHKEY_TEXTUREFILE>,20> : TSList<TSHashObjectChunk<CTextureHash,HASHKEY_TEXTUREFILE>,TSGetExplicitLink<TSHashObjectChunk<CTextureHash,HASHKEY_TEXTUREFILE> > >
{
};

/* 3191 */
struct __cppobj TSHashTableReuse<CTextureHash,HASHKEY_TEXTUREFILE,1> : TSHashTable<CTextureHash,HASHKEY_TEXTUREFILE>
{
  TSExplicitList<CTextureHash,-572662307> m_reuseList;
  unsigned int m_chunkSize;
  TSExplicitList<TSHashObjectChunk<CTextureHash,HASHKEY_TEXTUREFILE>,20> m_chunkList;
};

/* 3192 */
struct /*VFT*/ TSHashTableReuse<CTextureHash,HASHKEY_TEXTUREFILE,1>_vtbl
{
  void (__thiscall *TSHashTableReuse<CTextureHash,HASHKEY_TEXTUREFILE,1>::Destroy)(TSHashTableReuse<CTextureHash,HASHKEY_TEXTUREFILE,1> *this);
  CTextureHash *(__thiscall *TSHashTable<CTextureHash,HASHKEY_TEXTUREFILE>::InternalNew)(struct TSHashTableReuse<CTextureHash,HASHKEY_TEXTUREFILE,1> *this, TSExplicitList<CTextureHash,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTableReuse<CTextureHash,HASHKEY_TEXTUREFILE,1>)(struct TSHashTableReuse<CTextureHash,HASHKEY_TEXTUREFILE,1> *this);
  void (__thiscall *TSHashTable<CTextureHash,HASHKEY_TEXTUREFILE>::Destroy)(struct TSHashTableReuse<CTextureHash,HASHKEY_TEXTUREFILE,1> *this);
};

/* 3193 */
struct __cppobj TSCArray<unsigned char,1048576>
{
  unsigned int m_count;
  unsigned __int8 m_data[1048576];
};

/* 3194 */
struct __cppobj TSLink<CSolidTextureHash>
{
  TSLink<CSolidTextureHash> *m_prevlink;
  CSolidTextureHash *m_next;
};

/* 3196 */
struct __cppobj __declspec(align(4)) TSHashObject<CSolidTextureHash,HASHKEY_NONE>
{
  unsigned int m_hashval;
  TSLink<CSolidTextureHash> m_linktoslot;
  TSLink<CSolidTextureHash> m_linktofull;
  HASHKEY_NONE m_key;
};

/* 3195 */
struct __cppobj CSolidTextureHash : TSHashObject<CSolidTextureHash,HASHKEY_NONE>, CTextureItem
{
};

/* 3198 */
struct __cppobj TSList<CSolidTextureHash,TSGetExplicitLink<CSolidTextureHash> >
{
  int m_linkoffset;
  TSLink<CSolidTextureHash> m_terminator;
};

/* 3199 */
struct __cppobj TSExplicitList<CSolidTextureHash,-572662307> : TSList<CSolidTextureHash,TSGetExplicitLink<CSolidTextureHash> >
{
};

/* 3201 */
struct __cppobj TSBaseArray<TSExplicitList<CSolidTextureHash,-572662307> >
{
  TSBaseArray<TSExplicitList<CSolidTextureHash,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<CSolidTextureHash,-572662307> *m_data;
};

/* 3204 */
struct __cppobj TSFixedArray<TSExplicitList<CSolidTextureHash,-572662307> > : TSBaseArray<TSExplicitList<CSolidTextureHash,-572662307> >
{
};

/* 3206 */
struct __cppobj TSGrowableArray<TSExplicitList<CSolidTextureHash,-572662307> > : TSFixedArray<TSExplicitList<CSolidTextureHash,-572662307> >
{
  unsigned int m_chunk;
};

/* 3197 */
struct __cppobj TSHashTable<CSolidTextureHash,HASHKEY_NONE>
{
  TSHashTable<CSolidTextureHash,HASHKEY_NONE>_vtbl *__vftable /*VFT*/;
  TSExplicitList<CSolidTextureHash,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<CSolidTextureHash,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 3200 */
struct /*VFT*/ TSHashTable<CSolidTextureHash,HASHKEY_NONE>_vtbl
{
  void (__thiscall *TSHashTable<CSolidTextureHash,HASHKEY_NONE>::InternalDelete)(TSHashTable<CSolidTextureHash,HASHKEY_NONE> *this, CSolidTextureHash *);
  CSolidTextureHash *(__thiscall *TSHashTable<CSolidTextureHash,HASHKEY_NONE>::InternalNew)(TSHashTable<CSolidTextureHash,HASHKEY_NONE> *this, TSExplicitList<CSolidTextureHash,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<CSolidTextureHash,HASHKEY_NONE>)(TSHashTable<CSolidTextureHash,HASHKEY_NONE> *this);
  void (__thiscall *TSHashTable<CSolidTextureHash,HASHKEY_NONE>::Destroy)(TSHashTable<CSolidTextureHash,HASHKEY_NONE> *this);
};

/* 3202 */
struct /*VFT*/ TSBaseArray<TSExplicitList<CSolidTextureHash,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CSolidTextureHash,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<CSolidTextureHash,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CSolidTextureHash,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<CSolidTextureHash,-572662307> > *this);
};

/* 3203 */
struct /*VFT*/ TSFixedArray<TSExplicitList<CSolidTextureHash,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CSolidTextureHash,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<CSolidTextureHash,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CSolidTextureHash,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<CSolidTextureHash,-572662307> > *this);
};

/* 3205 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<CSolidTextureHash,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CSolidTextureHash,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<CSolidTextureHash,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CSolidTextureHash,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<CSolidTextureHash,-572662307> > *this);
};

/* 3207 */
struct __cppobj TSLink<TSHashObjectChunk<CSolidTextureHash,HASHKEY_NONE> >
{
  TSLink<TSHashObjectChunk<CSolidTextureHash,HASHKEY_NONE> > *m_prevlink;
  TSHashObjectChunk<CSolidTextureHash,HASHKEY_NONE> *m_next;
};

/* 3208 */
struct __cppobj TSBaseArray<CSolidTextureHash>
{
  TSBaseArray<CSolidTextureHash>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CSolidTextureHash *m_data;
};

/* 3211 */
struct __cppobj TSFixedArray<CSolidTextureHash> : TSBaseArray<CSolidTextureHash>
{
};

/* 3213 */
struct __cppobj TSGrowableArray<CSolidTextureHash> : TSFixedArray<CSolidTextureHash>
{
  unsigned int m_chunk;
};

/* 3214 */
struct __cppobj __unaligned __declspec(align(4)) TSHashObjectChunk<CSolidTextureHash,HASHKEY_NONE>
{
  TSGrowableArray<CSolidTextureHash> m_array;
  TSLink<TSHashObjectChunk<CSolidTextureHash,HASHKEY_NONE> > m_link;
};

/* 3209 */
struct /*VFT*/ TSBaseArray<CSolidTextureHash>_vtbl
{
  const char *(__thiscall *TSBaseArray<CSolidTextureHash>::MemFileName)(TSBaseArray<CSolidTextureHash> *this);
  int (__thiscall *TSBaseArray<CSolidTextureHash>::MemLineNo)(TSBaseArray<CSolidTextureHash> *this);
};

/* 3210 */
struct /*VFT*/ TSFixedArray<CSolidTextureHash>_vtbl
{
  const char *(__thiscall *TSBaseArray<CSolidTextureHash>::MemFileName)(struct TSFixedArray<CSolidTextureHash> *this);
  int (__thiscall *TSBaseArray<CSolidTextureHash>::MemLineNo)(struct TSFixedArray<CSolidTextureHash> *this);
};

/* 3212 */
struct /*VFT*/ TSGrowableArray<CSolidTextureHash>_vtbl
{
  const char *(__thiscall *TSBaseArray<CSolidTextureHash>::MemFileName)(struct TSGrowableArray<CSolidTextureHash> *this);
  int (__thiscall *TSBaseArray<CSolidTextureHash>::MemLineNo)(struct TSGrowableArray<CSolidTextureHash> *this);
};

/* 3215 */
struct __cppobj TSList<TSHashObjectChunk<CSolidTextureHash,HASHKEY_NONE>,TSGetExplicitLink<TSHashObjectChunk<CSolidTextureHash,HASHKEY_NONE> > >
{
  int m_linkoffset;
  TSLink<TSHashObjectChunk<CSolidTextureHash,HASHKEY_NONE> > m_terminator;
};

/* 3216 */
struct __cppobj TSExplicitList<TSHashObjectChunk<CSolidTextureHash,HASHKEY_NONE>,20> : TSList<TSHashObjectChunk<CSolidTextureHash,HASHKEY_NONE>,TSGetExplicitLink<TSHashObjectChunk<CSolidTextureHash,HASHKEY_NONE> > >
{
};

/* 3217 */
struct __cppobj TSHashTableReuse<CSolidTextureHash,HASHKEY_NONE,1> : TSHashTable<CSolidTextureHash,HASHKEY_NONE>
{
  TSExplicitList<CSolidTextureHash,-572662307> m_reuseList;
  unsigned int m_chunkSize;
  TSExplicitList<TSHashObjectChunk<CSolidTextureHash,HASHKEY_NONE>,20> m_chunkList;
};

/* 3218 */
struct /*VFT*/ TSHashTableReuse<CSolidTextureHash,HASHKEY_NONE,1>_vtbl
{
  void (__thiscall *TSHashTableReuse<CSolidTextureHash,HASHKEY_NONE,1>::Destroy)(TSHashTableReuse<CSolidTextureHash,HASHKEY_NONE,1> *this);
  CSolidTextureHash *(__thiscall *TSHashTable<CSolidTextureHash,HASHKEY_NONE>::InternalNew)(struct TSHashTableReuse<CSolidTextureHash,HASHKEY_NONE,1> *this, TSExplicitList<CSolidTextureHash,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTableReuse<CSolidTextureHash,HASHKEY_NONE,1>)(struct TSHashTableReuse<CSolidTextureHash,HASHKEY_NONE,1> *this);
  void (__thiscall *TSHashTable<CSolidTextureHash,HASHKEY_NONE>::Destroy)(struct TSHashTableReuse<CSolidTextureHash,HASHKEY_NONE,1> *this);
};

/* 3219 */
struct __cppobj CGxTexParmsEx
{
  EGxTexTarget target;
  unsigned int width;
  unsigned int height;
  unsigned int depth;
  EGxTexFormat format;
  EGxTexFormat dataFormat;
  CGxTexFlags flags;
  void *userArg;
  void (__fastcall *userFunc)(EGxTexCommand, unsigned int, unsigned int, unsigned int, unsigned int, void *, unsigned int *, const void **);
};

/* 3220 */
struct BlpPalPixel
{
  unsigned __int8 b;
  unsigned __int8 g;
  unsigned __int8 r;
  unsigned __int8 pad;
};

/* 3221 */
struct $64F003487BE73126E359D1BA7CBFBA38
{
  unsigned int headerSize;
  unsigned __int8 headerData[1020];
};

/* 3222 */
union $AFA02EE0E8EE4E3A844231BD3AF462EF
{
  BlpPalPixel palette[256];
  $64F003487BE73126E359D1BA7CBFBA38 jpeg;
};

/* 3223 */
struct BLPHeader
{
  unsigned int magic;
  unsigned int formatVersion;
  unsigned __int8 colorEncoding;
  unsigned __int8 alphaSize;
  unsigned __int8 preferredFormat;
  unsigned __int8 hasMips;
  unsigned int width;
  unsigned int height;
  unsigned int mipOffsets[16];
  unsigned int mipSizes[16];
  $AFA02EE0E8EE4E3A844231BD3AF462EF extended;
};

/* 3224 */
struct HCOLORMAP__
{
  int unused;
};

/* 3225 */
struct __cppobj CBLPFile
{
  MipBits *m_images;
  BLPHeader m_header;
  void *m_inMemoryImage;
  int m_inMemoryNeedsFree;
  unsigned int m_numLevels;
  unsigned int m_quality;
  HCOLORMAP__ *m_colorMapping;
  MipMapAlgorithm m_mipMapAlgorithm;
  unsigned __int8 *m_lockDecompMem;
};

/* 3226 */
struct HCOLORLIST__
{
  int unused;
};

/* 3227 */
struct CGxCaps
{
  unsigned int m_numTmus;
  int m_pixelCenterOnEdge;
  int m_texelCenterOnEdge;
  unsigned int m_maxTextureSize;
  int m_texOpAdd;
  int m_texOpMod2X;
  EGxColorFormat m_colorFormat;
  int m_texFmtDxt;
  unsigned int m_maxIndex;
  int m_generateMipMaps;
  int m_rttFormat[8];
  int m_rttOriginUpperLeft;
  CGxPixelShader::Target m_pixelShaderTarget;
  CGxVertexShader::Target m_vertexShaderTarget;
  int m_texFilterTrilinear;
  int m_texFilterAnisotropic;
  unsigned int m_maxTexAnisotropy;
  int m_depthBias;
  int m_mipMapLodBias;
};

/* 3228 */
struct __cppobj TSBaseArray<CTexture *>
{
  TSBaseArray<CTexture *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CTexture **m_data;
};

/* 3229 */
struct /*VFT*/ TSBaseArray<CTexture *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CTexture *>::MemFileName)(TSBaseArray<CTexture *> *this);
  int (__thiscall *TSBaseArray<CTexture *>::MemLineNo)(TSBaseArray<CTexture *> *this);
};

/* 3230 */
struct /*VFT*/ TSFixedArray<CTexture *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CTexture *>::MemFileName)(struct TSFixedArray<CTexture *> *this);
  int (__thiscall *TSBaseArray<CTexture *>::MemLineNo)(struct TSFixedArray<CTexture *> *this);
};

/* 3231 */
struct __cppobj TSFixedArray<CTexture *> : TSBaseArray<CTexture *>
{
};

/* 3232 */
struct /*VFT*/ TSGrowableArray<CTexture *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CTexture *>::MemFileName)(struct TSGrowableArray<CTexture *> *this);
  int (__thiscall *TSBaseArray<CTexture *>::MemLineNo)(struct TSGrowableArray<CTexture *> *this);
};

/* 3233 */
struct __cppobj TSGrowableArray<CTexture *> : TSFixedArray<CTexture *>
{
  unsigned int m_chunk;
};

/* 3234 */
struct __cppobj TSLink<MSGBUFFER>
{
  TSLink<MSGBUFFER> *m_prevlink;
  MSGBUFFER *m_next;
};

/* 3235 */
struct __cppobj TSLinkedNode<MSGBUFFER>
{
  TSLink<MSGBUFFER> m_link;
};

/* 3236 */
struct __cppobj MSGBUFFER : TSLinkedNode<MSGBUFFER>
{
  char *string;
  float timeVisible;
  SYSMSG_TYPE severity;
  unsigned int categoryMask;
};

/* 3237 */
struct __cppobj TSList<MSGBUFFER,TSGetLink<MSGBUFFER> >
{
  int m_linkoffset;
  TSLink<MSGBUFFER> m_terminator;
};

/* 3238 */
struct $FFF635EE1DD26AAC82FFBF96D1F4C360
{
  unsigned __int8 red;
  unsigned __int8 green;
  unsigned __int8 blue;
  float timeVisible;
};

/* 3239 */
struct __cppobj NTempest::C22Matrix
{
  float a0;
  float a1;
  float b0;
  float b1;
};

/* 3240 */
struct __cppobj NTempest::C3Ray
{
  NTempest::C3Vector origin;
  NTempest::C3Vector dir;
};

/* 3241 */
struct __cppobj NTempest::CCone
{
  NTempest::C3Vector position;
  float angle;
  NTempest::C3Vector axis;
  float height;
  float cosAngle;
};

/* 3242 */
struct __cppobj NTempest::CObBox
{
  NTempest::C3Vector c;
  NTempest::C3Vector e;
  NTempest::C33Matrix b;
};

/* 3243 */
struct __cppobj C24Matrix
{
  float a0;
  float a1;
  float b0;
  float b1;
  float c0;
  float c1;
  float d0;
  float d1;
};

/* 3244 */
struct __cppobj SoundCharacterMacroLinesRec
{
  int m_ID;
  int m_Category;
  int m_Sex;
  int m_Race;
  int m_SoundID;
};

/* 3245 */
struct __cppobj WowClientDB<SoundCharacterMacroLinesRec>
{
  SoundCharacterMacroLinesRec *m_records;
  int m_numRecords;
  SoundCharacterMacroLinesRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3246 */
struct __cppobj ChrRacesRec
{
  int m_ID;
  int m_flags;
  int m_factionID;
  int m_MaleDisplayId;
  int m_FemaleDisplayId;
  const char *m_ClientPrefix;
  float m_MountScale;
  int m_BaseLanguage;
  int m_creatureType;
  int m_LoginEffectSpellID;
  int m_CombatStunSpellID;
  int m_ResSicknessSpellID;
  int m_SplashSoundID;
  int m_startingTaxiNodes;
  const char *m_clientFileString;
  int m_cinematicSequenceID;
  const char *m_name_lang[8];
  int m_name_flag;
};

/* 3247 */
struct __cppobj WowClientDB<ChrRacesRec>
{
  ChrRacesRec *m_records;
  int m_numRecords;
  ChrRacesRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3248 */
struct __cppobj TSBaseArray<MACRODESC>
{
  TSBaseArray<MACRODESC>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  MACRODESC *m_data;
};

/* 3249 */
struct /*VFT*/ TSBaseArray<MACRODESC>_vtbl
{
  const char *(__thiscall *TSBaseArray<MACRODESC>::MemFileName)(TSBaseArray<MACRODESC> *this);
  int (__thiscall *TSBaseArray<MACRODESC>::MemLineNo)(TSBaseArray<MACRODESC> *this);
};

/* 3250 */
struct __cppobj MACRODESC
{
  unsigned int soundID[12][3];
};

/* 3251 */
struct /*VFT*/ TSFixedArray<MACRODESC>_vtbl
{
  const char *(__thiscall *TSBaseArray<MACRODESC>::MemFileName)(struct TSFixedArray<MACRODESC> *this);
  int (__thiscall *TSBaseArray<MACRODESC>::MemLineNo)(struct TSFixedArray<MACRODESC> *this);
};

/* 3252 */
struct __cppobj TSFixedArray<MACRODESC> : TSBaseArray<MACRODESC>
{
};

/* 3253 */
struct /*VFT*/ TSGrowableArray<MACRODESC>_vtbl
{
  const char *(__thiscall *TSBaseArray<MACRODESC>::MemFileName)(struct TSGrowableArray<MACRODESC> *this);
  int (__thiscall *TSBaseArray<MACRODESC>::MemLineNo)(struct TSGrowableArray<MACRODESC> *this);
};

/* 3254 */
struct __cppobj TSGrowableArray<MACRODESC> : TSFixedArray<MACRODESC>
{
  unsigned int m_chunk;
};

/* 3255 */
struct __cppobj TSLink<CHUNKHASHOBJ>
{
  TSLink<CHUNKHASHOBJ> *m_prevlink;
  CHUNKHASHOBJ *m_next;
};

/* 3256 */
struct __cppobj TSHashObject<CHUNKHASHOBJ,HASHKEY_STRI>
{
  unsigned int m_hashval;
  __unaligned __declspec(align(1)) TSLink<CHUNKHASHOBJ> m_linktoslot;
  __unaligned __declspec(align(1)) TSLink<CHUNKHASHOBJ> m_linktofull;
  HASHKEY_STRI m_key;
};

/* 3257 */
struct __cppobj __unaligned __declspec(align(4)) CHUNKHASHOBJ : TSHashObject<CHUNKHASHOBJ,HASHKEY_STRI>
{
  char zoneName[128];
  char subZoneName[128];
  unsigned int chunkNumber;
  _FSOUND_REVERB_PROPERTIES desc;
};

/* 3258 */
struct __cppobj TSList<CHUNKHASHOBJ,TSGetExplicitLink<CHUNKHASHOBJ> >
{
  int m_linkoffset;
  TSLink<CHUNKHASHOBJ> m_terminator;
};

/* 3259 */
struct __cppobj TSExplicitList<CHUNKHASHOBJ,-572662307> : TSList<CHUNKHASHOBJ,TSGetExplicitLink<CHUNKHASHOBJ> >
{
};

/* 3260 */
struct __cppobj TSBaseArray<TSExplicitList<CHUNKHASHOBJ,-572662307> >
{
  TSBaseArray<TSExplicitList<CHUNKHASHOBJ,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<CHUNKHASHOBJ,-572662307> *m_data;
};

/* 3261 */
struct /*VFT*/ TSBaseArray<TSExplicitList<CHUNKHASHOBJ,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CHUNKHASHOBJ,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<CHUNKHASHOBJ,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CHUNKHASHOBJ,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<CHUNKHASHOBJ,-572662307> > *this);
};

/* 3262 */
struct /*VFT*/ TSFixedArray<TSExplicitList<CHUNKHASHOBJ,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CHUNKHASHOBJ,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<CHUNKHASHOBJ,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CHUNKHASHOBJ,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<CHUNKHASHOBJ,-572662307> > *this);
};

/* 3263 */
struct __cppobj TSFixedArray<TSExplicitList<CHUNKHASHOBJ,-572662307> > : TSBaseArray<TSExplicitList<CHUNKHASHOBJ,-572662307> >
{
};

/* 3264 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<CHUNKHASHOBJ,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CHUNKHASHOBJ,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<CHUNKHASHOBJ,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CHUNKHASHOBJ,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<CHUNKHASHOBJ,-572662307> > *this);
};

/* 3265 */
struct __cppobj TSGrowableArray<TSExplicitList<CHUNKHASHOBJ,-572662307> > : TSFixedArray<TSExplicitList<CHUNKHASHOBJ,-572662307> >
{
  unsigned int m_chunk;
};

/* 3266 */
struct __cppobj TSHashTable<CHUNKHASHOBJ,HASHKEY_STRI>
{
  TSHashTable<CHUNKHASHOBJ,HASHKEY_STRI>_vtbl *__vftable /*VFT*/;
  TSExplicitList<CHUNKHASHOBJ,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<CHUNKHASHOBJ,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 3267 */
struct /*VFT*/ TSHashTable<CHUNKHASHOBJ,HASHKEY_STRI>_vtbl
{
  void (__thiscall *TSHashTable<CHUNKHASHOBJ,HASHKEY_STRI>::InternalDelete)(TSHashTable<CHUNKHASHOBJ,HASHKEY_STRI> *this, CHUNKHASHOBJ *);
  CHUNKHASHOBJ *(__thiscall *TSHashTable<CHUNKHASHOBJ,HASHKEY_STRI>::InternalNew)(TSHashTable<CHUNKHASHOBJ,HASHKEY_STRI> *this, TSExplicitList<CHUNKHASHOBJ,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<CHUNKHASHOBJ,HASHKEY_STRI>)(TSHashTable<CHUNKHASHOBJ,HASHKEY_STRI> *this);
  void (__thiscall *TSHashTable<CHUNKHASHOBJ,HASHKEY_STRI>::Destroy)(TSHashTable<CHUNKHASHOBJ,HASHKEY_STRI> *this);
};

/* 3268 */
struct __cppobj TSBaseArray<CHUNKHASHOBJ *>
{
  TSBaseArray<CHUNKHASHOBJ *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CHUNKHASHOBJ **m_data;
};

/* 3269 */
struct /*VFT*/ TSBaseArray<CHUNKHASHOBJ *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CHUNKHASHOBJ *>::MemFileName)(TSBaseArray<CHUNKHASHOBJ *> *this);
  int (__thiscall *TSBaseArray<CHUNKHASHOBJ *>::MemLineNo)(TSBaseArray<CHUNKHASHOBJ *> *this);
};

/* 3270 */
struct /*VFT*/ TSFixedArray<CHUNKHASHOBJ *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CHUNKHASHOBJ *>::MemFileName)(struct TSFixedArray<CHUNKHASHOBJ *> *this);
  int (__thiscall *TSBaseArray<CHUNKHASHOBJ *>::MemLineNo)(struct TSFixedArray<CHUNKHASHOBJ *> *this);
};

/* 3271 */
struct __cppobj TSFixedArray<CHUNKHASHOBJ *> : TSBaseArray<CHUNKHASHOBJ *>
{
};

/* 3272 */
struct /*VFT*/ TSGrowableArray<CHUNKHASHOBJ *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CHUNKHASHOBJ *>::MemFileName)(struct TSGrowableArray<CHUNKHASHOBJ *> *this);
  int (__thiscall *TSBaseArray<CHUNKHASHOBJ *>::MemLineNo)(struct TSGrowableArray<CHUNKHASHOBJ *> *this);
};

/* 3273 */
struct __cppobj TSGrowableArray<CHUNKHASHOBJ *> : TSFixedArray<CHUNKHASHOBJ *>
{
  unsigned int m_chunk;
};

/* 3274 */
struct __cppobj TSLink<OUTDOORSCHUNKHASHOBJ>
{
  TSLink<OUTDOORSCHUNKHASHOBJ> *m_prevlink;
  OUTDOORSCHUNKHASHOBJ *m_next;
};

/* 3275 */
struct __cppobj AREAHASHKEY
{
  unsigned int cont;
  unsigned int area;
  unsigned int subArea;
};

/* 3276 */
struct __cppobj TSHashObject<OUTDOORSCHUNKHASHOBJ,AREAHASHKEY>
{
  unsigned int m_hashval;
  __unaligned __declspec(align(1)) TSLink<OUTDOORSCHUNKHASHOBJ> m_linktoslot;
  __unaligned __declspec(align(1)) TSLink<OUTDOORSCHUNKHASHOBJ> m_linktofull;
  AREAHASHKEY m_key;
};

/* 3277 */
struct __cppobj __unaligned __declspec(align(4)) OUTDOORSCHUNKHASHOBJ : TSHashObject<OUTDOORSCHUNKHASHOBJ,AREAHASHKEY>
{
  unsigned int chunkNumber;
  _FSOUND_REVERB_PROPERTIES desc;
  unsigned int continentID;
  unsigned int areaID;
};

/* 3278 */
struct __cppobj TSList<OUTDOORSCHUNKHASHOBJ,TSGetExplicitLink<OUTDOORSCHUNKHASHOBJ> >
{
  int m_linkoffset;
  TSLink<OUTDOORSCHUNKHASHOBJ> m_terminator;
};

/* 3279 */
struct __cppobj TSExplicitList<OUTDOORSCHUNKHASHOBJ,-572662307> : TSList<OUTDOORSCHUNKHASHOBJ,TSGetExplicitLink<OUTDOORSCHUNKHASHOBJ> >
{
};

/* 3280 */
struct __cppobj TSBaseArray<TSExplicitList<OUTDOORSCHUNKHASHOBJ,-572662307> >
{
  TSBaseArray<TSExplicitList<OUTDOORSCHUNKHASHOBJ,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<OUTDOORSCHUNKHASHOBJ,-572662307> *m_data;
};

/* 3281 */
struct /*VFT*/ TSBaseArray<TSExplicitList<OUTDOORSCHUNKHASHOBJ,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<OUTDOORSCHUNKHASHOBJ,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<OUTDOORSCHUNKHASHOBJ,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<OUTDOORSCHUNKHASHOBJ,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<OUTDOORSCHUNKHASHOBJ,-572662307> > *this);
};

/* 3282 */
struct /*VFT*/ TSFixedArray<TSExplicitList<OUTDOORSCHUNKHASHOBJ,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<OUTDOORSCHUNKHASHOBJ,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<OUTDOORSCHUNKHASHOBJ,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<OUTDOORSCHUNKHASHOBJ,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<OUTDOORSCHUNKHASHOBJ,-572662307> > *this);
};

/* 3283 */
struct __cppobj TSFixedArray<TSExplicitList<OUTDOORSCHUNKHASHOBJ,-572662307> > : TSBaseArray<TSExplicitList<OUTDOORSCHUNKHASHOBJ,-572662307> >
{
};

/* 3284 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<OUTDOORSCHUNKHASHOBJ,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<OUTDOORSCHUNKHASHOBJ,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<OUTDOORSCHUNKHASHOBJ,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<OUTDOORSCHUNKHASHOBJ,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<OUTDOORSCHUNKHASHOBJ,-572662307> > *this);
};

/* 3285 */
struct __cppobj TSGrowableArray<TSExplicitList<OUTDOORSCHUNKHASHOBJ,-572662307> > : TSFixedArray<TSExplicitList<OUTDOORSCHUNKHASHOBJ,-572662307> >
{
  unsigned int m_chunk;
};

/* 3286 */
struct __cppobj TSHashTable<OUTDOORSCHUNKHASHOBJ,AREAHASHKEY>
{
  TSHashTable<OUTDOORSCHUNKHASHOBJ,AREAHASHKEY>_vtbl *__vftable /*VFT*/;
  TSExplicitList<OUTDOORSCHUNKHASHOBJ,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<OUTDOORSCHUNKHASHOBJ,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 3287 */
struct /*VFT*/ TSHashTable<OUTDOORSCHUNKHASHOBJ,AREAHASHKEY>_vtbl
{
  void (__thiscall *TSHashTable<OUTDOORSCHUNKHASHOBJ,AREAHASHKEY>::InternalDelete)(TSHashTable<OUTDOORSCHUNKHASHOBJ,AREAHASHKEY> *this, OUTDOORSCHUNKHASHOBJ *);
  OUTDOORSCHUNKHASHOBJ *(__thiscall *TSHashTable<OUTDOORSCHUNKHASHOBJ,AREAHASHKEY>::InternalNew)(TSHashTable<OUTDOORSCHUNKHASHOBJ,AREAHASHKEY> *this, TSExplicitList<OUTDOORSCHUNKHASHOBJ,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<OUTDOORSCHUNKHASHOBJ,AREAHASHKEY>)(TSHashTable<OUTDOORSCHUNKHASHOBJ,AREAHASHKEY> *this);
  void (__thiscall *TSHashTable<OUTDOORSCHUNKHASHOBJ,AREAHASHKEY>::Destroy)(TSHashTable<OUTDOORSCHUNKHASHOBJ,AREAHASHKEY> *this);
};

/* 3288 */
struct __cppobj TSBaseArray<OUTDOORSCHUNKHASHOBJ *>
{
  TSBaseArray<OUTDOORSCHUNKHASHOBJ *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  OUTDOORSCHUNKHASHOBJ **m_data;
};

/* 3289 */
struct /*VFT*/ TSBaseArray<OUTDOORSCHUNKHASHOBJ *>_vtbl
{
  const char *(__thiscall *TSBaseArray<OUTDOORSCHUNKHASHOBJ *>::MemFileName)(TSBaseArray<OUTDOORSCHUNKHASHOBJ *> *this);
  int (__thiscall *TSBaseArray<OUTDOORSCHUNKHASHOBJ *>::MemLineNo)(TSBaseArray<OUTDOORSCHUNKHASHOBJ *> *this);
};

/* 3290 */
struct /*VFT*/ TSFixedArray<OUTDOORSCHUNKHASHOBJ *>_vtbl
{
  const char *(__thiscall *TSBaseArray<OUTDOORSCHUNKHASHOBJ *>::MemFileName)(struct TSFixedArray<OUTDOORSCHUNKHASHOBJ *> *this);
  int (__thiscall *TSBaseArray<OUTDOORSCHUNKHASHOBJ *>::MemLineNo)(struct TSFixedArray<OUTDOORSCHUNKHASHOBJ *> *this);
};

/* 3291 */
struct __cppobj TSFixedArray<OUTDOORSCHUNKHASHOBJ *> : TSBaseArray<OUTDOORSCHUNKHASHOBJ *>
{
};

/* 3292 */
struct /*VFT*/ TSGrowableArray<OUTDOORSCHUNKHASHOBJ *>_vtbl
{
  const char *(__thiscall *TSBaseArray<OUTDOORSCHUNKHASHOBJ *>::MemFileName)(struct TSGrowableArray<OUTDOORSCHUNKHASHOBJ *> *this);
  int (__thiscall *TSBaseArray<OUTDOORSCHUNKHASHOBJ *>::MemLineNo)(struct TSGrowableArray<OUTDOORSCHUNKHASHOBJ *> *this);
};

/* 3293 */
struct __cppobj TSGrowableArray<OUTDOORSCHUNKHASHOBJ *> : TSFixedArray<OUTDOORSCHUNKHASHOBJ *>
{
  unsigned int m_chunk;
};

/* 3294 */
struct __cppobj AreaMIDIAmbiencesRec
{
  int m_ID;
  const char *m_DaySequence;
  const char *m_NightSequence;
  const char *m_DLSFile;
  float m_volume;
};

/* 3295 */
struct __cppobj WowClientDB<AreaMIDIAmbiencesRec>
{
  AreaMIDIAmbiencesRec *m_records;
  int m_numRecords;
  AreaMIDIAmbiencesRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3296 */
const struct __cppobj SoundEntriesRec
{
  int m_ID;
  int m_soundType;
  const char *m_name;
  const char *m_File[10];
  int m_Freq[10];
  const char *m_DirectoryBase;
  float m_volumeFloat;
  float m_pitch;
  float m_pitchVariation;
  int m_priority;
  int m_channel;
  int m_flags;
  float m_minDistance;
  float m_maxDistance;
  float m_distanceCutoff;
  int m_EAXDef;
};

/* 3297 */
struct __cppobj LIQUIDINFO
{
  Sound *m_sound;
  unsigned int m_subTypes[3];
  const SoundEntriesRec *m_soundRecords[3];
  NTempest::C3Vector m_positionOffset[3];
  const SoundEntriesRec *m_currentRecord;
  unsigned int m_currentPlayingSound;
};

/* 3298 */
struct __cppobj SoundWaterTypeRec
{
  int m_ID;
  int m_soundType;
  int m_soundSubtype;
  int m_SoundID;
};

/* 3299 */
struct __cppobj WowClientDB<SoundWaterTypeRec>
{
  SoundWaterTypeRec *m_records;
  int m_numRecords;
  SoundWaterTypeRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3300 */
struct __cppobj WowClientDB<SoundEntriesRec>
{
  SoundEntriesRec *m_records;
  int m_numRecords;
  SoundEntriesRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3301 */
struct __cppobj TSLink<SOUNDDEFINITION>
{
  TSLink<SOUNDDEFINITION> *m_prevlink;
  SOUNDDEFINITION *m_next;
};

/* 3303 */
struct __cppobj __declspec(align(4)) TSHashObject<SOUNDDEFINITION,HASHKEY_NONE>
{
  unsigned int m_hashval;
  TSLink<SOUNDDEFINITION> m_linktoslot;
  TSLink<SOUNDDEFINITION> m_linktofull;
  HASHKEY_NONE m_key;
};

/* 3304 */
struct __cppobj FILENAMEENTRY
{
  char fileName[260];
  unsigned int accumulatedFreq;
};

/* 3305 */
struct __cppobj TSCArray<FILENAMEENTRY,10>
{
  unsigned int m_count;
  FILENAMEENTRY m_data[10];
};

/* 3302 */
struct __cppobj SOUNDDEFINITION : TSHashObject<SOUNDDEFINITION,HASHKEY_NONE>
{
  TSCArray<FILENAMEENTRY,10> m_fileNames;
  float m_volume;
  float m_pitch;
  float m_pitchVariation;
  unsigned int m_priority;
  unsigned int m_channel;
  unsigned int m_flags;
  float m_minDistance;
  float m_maxDistance;
  float m_distanceCutoffSquared;
  unsigned int m_totalFrequency;
  unsigned int m_lastPlayed;
  unsigned int m_loopCounter;
  unsigned int m_primeStepIndex;
  int m_equalFreqs;
  int m_reverbPrefIndex;
};

/* 3306 */
struct __cppobj LOOPEDDOODADDESC
{
  NTempest::C3Vector pos[8];
  int posInUseFlags;
  int soundID;
  Sound *sound;
  int currentIndex;
};

/* 3307 */
struct __cppobj ZoneMusicRec
{
  int m_ID;
  float m_VolumeFloat;
  const char *m_MusicFile[2];
  int m_SilenceIntervalMin[2];
  int m_SilenceIntervalMax[2];
  int m_SegmentLength[2];
  int m_SegmentPlayMin[2];
  int m_SegmentPlayMax[2];
  int m_Sounds[2];
};

/* 3308 */
struct __cppobj WowClientDB<ZoneMusicRec>
{
  ZoneMusicRec *m_records;
  int m_numRecords;
  ZoneMusicRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3309 */
struct __cppobj SheatheSoundLookupsRec
{
  int m_ID;
  int m_classID;
  int m_subclassID;
  int m_material;
  int m_checkMaterial;
  int m_sheatheSound;
  int m_unsheatheSound;
};

/* 3310 */
struct __cppobj WowClientDB<SheatheSoundLookupsRec>
{
  SheatheSoundLookupsRec *m_records;
  int m_numRecords;
  SheatheSoundLookupsRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3311 */
struct __cppobj SoundSamplePreferencesRec
{
  int m_ID;
  float m_EAX1EffectLevel;
  int m_EAX2SampleDirect;
  int m_EAX2SampleDirectHF;
  int m_EAX2SampleRoom;
  int m_EAX2SampleRoomHF;
  float m_EAX2SampleObstruction;
  float m_EAX2SampleObstructionLFRatio;
  float m_EAX2SampleOcclusion;
  float m_EAX2SampleOcclusionLFRatio;
  float m_EAX2SampleOcclusionRoomRatio;
  float m_EAX2SampleRoomRolloff;
  float m_EAX2SampleAirAbsorption;
  int m_EAX2SampleOutsideVolumeHF;
  float m_EAX3SampleOcclusionDirectRatio;
  float m_EAX3SampleExclusion;
  float m_EAX3SampleExclusionLFRatio;
  float m_EAX3SampleDopplerFactor;
  float m_Fast2DPredelayTime;
  float m_Fast2DDamping;
  float m_Fast2DReverbTime;
};

/* 3312 */
struct __cppobj WowClientDB<SoundSamplePreferencesRec>
{
  SoundSamplePreferencesRec *m_records;
  int m_numRecords;
  SoundSamplePreferencesRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3313 */
struct __cppobj TSLink<UISOUNDLOOKUP>
{
  TSLink<UISOUNDLOOKUP> *m_prevlink;
  UISOUNDLOOKUP *m_next;
};

/* 3314 */
struct __cppobj TSHashObject<UISOUNDLOOKUP,HASHKEY_STRI>
{
  unsigned int m_hashval;
  __unaligned __declspec(align(1)) TSLink<UISOUNDLOOKUP> m_linktoslot;
  __unaligned __declspec(align(1)) TSLink<UISOUNDLOOKUP> m_linktofull;
  HASHKEY_STRI m_key;
};

/* 3315 */
struct __cppobj __unaligned __declspec(align(4)) UISOUNDLOOKUP : TSHashObject<UISOUNDLOOKUP,HASHKEY_STRI>
{
  unsigned int soundID;
};

/* 3316 */
struct __cppobj TSList<UISOUNDLOOKUP,TSGetExplicitLink<UISOUNDLOOKUP> >
{
  int m_linkoffset;
  TSLink<UISOUNDLOOKUP> m_terminator;
};

/* 3317 */
struct __cppobj TSExplicitList<UISOUNDLOOKUP,-572662307> : TSList<UISOUNDLOOKUP,TSGetExplicitLink<UISOUNDLOOKUP> >
{
};

/* 3318 */
struct __cppobj TSBaseArray<TSExplicitList<UISOUNDLOOKUP,-572662307> >
{
  TSBaseArray<TSExplicitList<UISOUNDLOOKUP,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<UISOUNDLOOKUP,-572662307> *m_data;
};

/* 3319 */
struct /*VFT*/ TSBaseArray<TSExplicitList<UISOUNDLOOKUP,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<UISOUNDLOOKUP,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<UISOUNDLOOKUP,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<UISOUNDLOOKUP,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<UISOUNDLOOKUP,-572662307> > *this);
};

/* 3320 */
struct /*VFT*/ TSFixedArray<TSExplicitList<UISOUNDLOOKUP,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<UISOUNDLOOKUP,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<UISOUNDLOOKUP,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<UISOUNDLOOKUP,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<UISOUNDLOOKUP,-572662307> > *this);
};

/* 3321 */
struct __cppobj TSFixedArray<TSExplicitList<UISOUNDLOOKUP,-572662307> > : TSBaseArray<TSExplicitList<UISOUNDLOOKUP,-572662307> >
{
};

/* 3322 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<UISOUNDLOOKUP,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<UISOUNDLOOKUP,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<UISOUNDLOOKUP,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<UISOUNDLOOKUP,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<UISOUNDLOOKUP,-572662307> > *this);
};

/* 3323 */
struct __cppobj TSGrowableArray<TSExplicitList<UISOUNDLOOKUP,-572662307> > : TSFixedArray<TSExplicitList<UISOUNDLOOKUP,-572662307> >
{
  unsigned int m_chunk;
};

/* 3324 */
struct __cppobj TSHashTable<UISOUNDLOOKUP,HASHKEY_STRI>
{
  TSHashTable<UISOUNDLOOKUP,HASHKEY_STRI>_vtbl *__vftable /*VFT*/;
  TSExplicitList<UISOUNDLOOKUP,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<UISOUNDLOOKUP,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 3325 */
struct /*VFT*/ TSHashTable<UISOUNDLOOKUP,HASHKEY_STRI>_vtbl
{
  void (__thiscall *TSHashTable<UISOUNDLOOKUP,HASHKEY_STRI>::InternalDelete)(TSHashTable<UISOUNDLOOKUP,HASHKEY_STRI> *this, UISOUNDLOOKUP *);
  UISOUNDLOOKUP *(__thiscall *TSHashTable<UISOUNDLOOKUP,HASHKEY_STRI>::InternalNew)(TSHashTable<UISOUNDLOOKUP,HASHKEY_STRI> *this, TSExplicitList<UISOUNDLOOKUP,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<UISOUNDLOOKUP,HASHKEY_STRI>)(TSHashTable<UISOUNDLOOKUP,HASHKEY_STRI> *this);
  void (__thiscall *TSHashTable<UISOUNDLOOKUP,HASHKEY_STRI>::Destroy)(TSHashTable<UISOUNDLOOKUP,HASHKEY_STRI> *this);
};

/* 3326 */
struct VOCALUISOUND
{
  unsigned int soundTypes[2];
  unsigned int pissedCount;
};

/* 3327 */
struct __cppobj WEAPONSOUNDS
{
  unsigned int soundList[2];
};

/* 3328 */
struct __cppobj TSList<SOUNDDEFINITION,TSGetExplicitLink<SOUNDDEFINITION> >
{
  int m_linkoffset;
  TSLink<SOUNDDEFINITION> m_terminator;
};

/* 3329 */
struct __cppobj TSExplicitList<SOUNDDEFINITION,-572662307> : TSList<SOUNDDEFINITION,TSGetExplicitLink<SOUNDDEFINITION> >
{
};

/* 3330 */
struct __cppobj TSBaseArray<TSExplicitList<SOUNDDEFINITION,-572662307> >
{
  TSBaseArray<TSExplicitList<SOUNDDEFINITION,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<SOUNDDEFINITION,-572662307> *m_data;
};

/* 3331 */
struct /*VFT*/ TSBaseArray<TSExplicitList<SOUNDDEFINITION,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<SOUNDDEFINITION,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<SOUNDDEFINITION,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<SOUNDDEFINITION,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<SOUNDDEFINITION,-572662307> > *this);
};

/* 3332 */
struct /*VFT*/ TSFixedArray<TSExplicitList<SOUNDDEFINITION,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<SOUNDDEFINITION,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<SOUNDDEFINITION,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<SOUNDDEFINITION,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<SOUNDDEFINITION,-572662307> > *this);
};

/* 3333 */
struct __cppobj TSFixedArray<TSExplicitList<SOUNDDEFINITION,-572662307> > : TSBaseArray<TSExplicitList<SOUNDDEFINITION,-572662307> >
{
};

/* 3334 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<SOUNDDEFINITION,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<SOUNDDEFINITION,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<SOUNDDEFINITION,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<SOUNDDEFINITION,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<SOUNDDEFINITION,-572662307> > *this);
};

/* 3335 */
struct __cppobj TSGrowableArray<TSExplicitList<SOUNDDEFINITION,-572662307> > : TSFixedArray<TSExplicitList<SOUNDDEFINITION,-572662307> >
{
  unsigned int m_chunk;
};

/* 3336 */
struct __cppobj TSHashTable<SOUNDDEFINITION,HASHKEY_NONE>
{
  TSHashTable<SOUNDDEFINITION,HASHKEY_NONE>_vtbl *__vftable /*VFT*/;
  TSExplicitList<SOUNDDEFINITION,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<SOUNDDEFINITION,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 3337 */
struct /*VFT*/ TSHashTable<SOUNDDEFINITION,HASHKEY_NONE>_vtbl
{
  void (__thiscall *TSHashTable<SOUNDDEFINITION,HASHKEY_NONE>::InternalDelete)(TSHashTable<SOUNDDEFINITION,HASHKEY_NONE> *this, SOUNDDEFINITION *);
  SOUNDDEFINITION *(__thiscall *TSHashTable<SOUNDDEFINITION,HASHKEY_NONE>::InternalNew)(TSHashTable<SOUNDDEFINITION,HASHKEY_NONE> *this, TSExplicitList<SOUNDDEFINITION,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<SOUNDDEFINITION,HASHKEY_NONE>)(TSHashTable<SOUNDDEFINITION,HASHKEY_NONE> *this);
  void (__thiscall *TSHashTable<SOUNDDEFINITION,HASHKEY_NONE>::Destroy)(TSHashTable<SOUNDDEFINITION,HASHKEY_NONE> *this);
};

/* 3338 */
struct __cppobj TSBaseArray<IMPACTSOUNDARRAY>
{
  TSBaseArray<IMPACTSOUNDARRAY>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  IMPACTSOUNDARRAY *m_data;
};

/* 3339 */
struct /*VFT*/ TSBaseArray<IMPACTSOUNDARRAY>_vtbl
{
  const char *(__thiscall *TSBaseArray<IMPACTSOUNDARRAY>::MemFileName)(TSBaseArray<IMPACTSOUNDARRAY> *this);
  int (__thiscall *TSBaseArray<IMPACTSOUNDARRAY>::MemLineNo)(TSBaseArray<IMPACTSOUNDARRAY> *this);
};

/* 3340 */
struct __cppobj IMPACTSOUNDDESC
{
  WEAPONSOUNDS materialSounds[2];
};

/* 3341 */
struct __cppobj IMPACTSOUNDARRAY
{
  IMPACTSOUNDDESC desc[10];
};

/* 3342 */
struct /*VFT*/ TSFixedArray<IMPACTSOUNDARRAY>_vtbl
{
  const char *(__thiscall *TSBaseArray<IMPACTSOUNDARRAY>::MemFileName)(struct TSFixedArray<IMPACTSOUNDARRAY> *this);
  int (__thiscall *TSBaseArray<IMPACTSOUNDARRAY>::MemLineNo)(struct TSFixedArray<IMPACTSOUNDARRAY> *this);
};

/* 3343 */
struct __cppobj TSFixedArray<IMPACTSOUNDARRAY> : TSBaseArray<IMPACTSOUNDARRAY>
{
};

/* 3344 */
struct __cppobj TSBaseArray<REVERBINFO>
{
  TSBaseArray<REVERBINFO>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  REVERBINFO *m_data;
};

/* 3345 */
struct /*VFT*/ TSBaseArray<REVERBINFO>_vtbl
{
  const char *(__thiscall *TSBaseArray<REVERBINFO>::MemFileName)(TSBaseArray<REVERBINFO> *this);
  int (__thiscall *TSBaseArray<REVERBINFO>::MemLineNo)(TSBaseArray<REVERBINFO> *this);
};

/* 3346 */
struct __cppobj REVERBINFO
{
  unsigned __int8 inUse;
  _FSOUND_REVERB_CHANNELPROPERTIES prefs;
};

/* 3347 */
struct /*VFT*/ TSFixedArray<REVERBINFO>_vtbl
{
  const char *(__thiscall *TSBaseArray<REVERBINFO>::MemFileName)(struct TSFixedArray<REVERBINFO> *this);
  int (__thiscall *TSBaseArray<REVERBINFO>::MemLineNo)(struct TSFixedArray<REVERBINFO> *this);
};

/* 3348 */
struct __cppobj TSFixedArray<REVERBINFO> : TSBaseArray<REVERBINFO>
{
};

/* 3349 */
struct /*VFT*/ TSGrowableArray<REVERBINFO>_vtbl
{
  const char *(__thiscall *TSBaseArray<REVERBINFO>::MemFileName)(struct TSGrowableArray<REVERBINFO> *this);
  int (__thiscall *TSBaseArray<REVERBINFO>::MemLineNo)(struct TSGrowableArray<REVERBINFO> *this);
};

/* 3350 */
struct __cppobj TSGrowableArray<REVERBINFO> : TSFixedArray<REVERBINFO>
{
  unsigned int m_chunk;
};

/* 3351 */
struct __cppobj WeaponSwingSounds2Rec
{
  int m_ID;
  int m_SwingType;
  int m_Crit;
  int m_SoundID;
};

/* 3352 */
struct __cppobj WowClientDB<WeaponSwingSounds2Rec>
{
  WeaponSwingSounds2Rec *m_records;
  int m_numRecords;
  WeaponSwingSounds2Rec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3353 */
struct __cppobj WeaponImpactSoundsRec
{
  int m_ID;
  int m_WeaponSubClassID;
  int m_ParrySoundType;
  int m_impactSoundID[10];
  int m_critImpactSoundID[10];
};

/* 3354 */
struct __cppobj WowClientDB<WeaponImpactSoundsRec>
{
  WeaponImpactSoundsRec *m_records;
  int m_numRecords;
  WeaponImpactSoundsRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3355 */
struct __cppobj TSLink<SHEATHSOUNDHASH>
{
  TSLink<SHEATHSOUNDHASH> *m_prevlink;
  SHEATHSOUNDHASH *m_next;
};

/* 3356 */
struct __cppobj __declspec(align(4)) TSHashObject<SHEATHSOUNDHASH,HASHKEY_NONE>
{
  unsigned int m_hashval;
  __unaligned __declspec(align(1)) TSLink<SHEATHSOUNDHASH> m_linktoslot;
  __unaligned __declspec(align(1)) TSLink<SHEATHSOUNDHASH> m_linktofull;
  HASHKEY_NONE m_key;
};

/* 3357 */
struct __cppobj SHEATHSOUNDHASH : TSHashObject<SHEATHSOUNDHASH,HASHKEY_NONE>
{
  TSFixedArray<unsigned int> materialSheathSound;
  TSFixedArray<unsigned int> materialUnsheathSound;
};

/* 3358 */
struct __cppobj TSList<SHEATHSOUNDHASH,TSGetExplicitLink<SHEATHSOUNDHASH> >
{
  int m_linkoffset;
  TSLink<SHEATHSOUNDHASH> m_terminator;
};

/* 3359 */
struct __cppobj TSExplicitList<SHEATHSOUNDHASH,-572662307> : TSList<SHEATHSOUNDHASH,TSGetExplicitLink<SHEATHSOUNDHASH> >
{
};

/* 3360 */
struct __cppobj TSBaseArray<TSExplicitList<SHEATHSOUNDHASH,-572662307> >
{
  TSBaseArray<TSExplicitList<SHEATHSOUNDHASH,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<SHEATHSOUNDHASH,-572662307> *m_data;
};

/* 3361 */
struct /*VFT*/ TSBaseArray<TSExplicitList<SHEATHSOUNDHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<SHEATHSOUNDHASH,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<SHEATHSOUNDHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<SHEATHSOUNDHASH,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<SHEATHSOUNDHASH,-572662307> > *this);
};

/* 3362 */
struct /*VFT*/ TSFixedArray<TSExplicitList<SHEATHSOUNDHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<SHEATHSOUNDHASH,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<SHEATHSOUNDHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<SHEATHSOUNDHASH,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<SHEATHSOUNDHASH,-572662307> > *this);
};

/* 3363 */
struct __cppobj TSFixedArray<TSExplicitList<SHEATHSOUNDHASH,-572662307> > : TSBaseArray<TSExplicitList<SHEATHSOUNDHASH,-572662307> >
{
};

/* 3364 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<SHEATHSOUNDHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<SHEATHSOUNDHASH,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<SHEATHSOUNDHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<SHEATHSOUNDHASH,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<SHEATHSOUNDHASH,-572662307> > *this);
};

/* 3365 */
struct __cppobj TSGrowableArray<TSExplicitList<SHEATHSOUNDHASH,-572662307> > : TSFixedArray<TSExplicitList<SHEATHSOUNDHASH,-572662307> >
{
  unsigned int m_chunk;
};

/* 3366 */
struct __cppobj TSHashTable<SHEATHSOUNDHASH,HASHKEY_NONE>
{
  TSHashTable<SHEATHSOUNDHASH,HASHKEY_NONE>_vtbl *__vftable /*VFT*/;
  TSExplicitList<SHEATHSOUNDHASH,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<SHEATHSOUNDHASH,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 3367 */
struct /*VFT*/ TSHashTable<SHEATHSOUNDHASH,HASHKEY_NONE>_vtbl
{
  void (__thiscall *TSHashTable<SHEATHSOUNDHASH,HASHKEY_NONE>::InternalDelete)(TSHashTable<SHEATHSOUNDHASH,HASHKEY_NONE> *this, SHEATHSOUNDHASH *);
  SHEATHSOUNDHASH *(__thiscall *TSHashTable<SHEATHSOUNDHASH,HASHKEY_NONE>::InternalNew)(TSHashTable<SHEATHSOUNDHASH,HASHKEY_NONE> *this, TSExplicitList<SHEATHSOUNDHASH,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<SHEATHSOUNDHASH,HASHKEY_NONE>)(TSHashTable<SHEATHSOUNDHASH,HASHKEY_NONE> *this);
  void (__thiscall *TSHashTable<SHEATHSOUNDHASH,HASHKEY_NONE>::Destroy)(TSHashTable<SHEATHSOUNDHASH,HASHKEY_NONE> *this);
};

/* 3368 */
struct __cppobj MaterialRec
{
  int m_materialID;
  int m_flags;
  int m_foleySoundID;
};

/* 3369 */
struct __cppobj WowClientDB<MaterialRec>
{
  MaterialRec *m_records;
  int m_numRecords;
  MaterialRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3370 */
struct __cppobj SoundProviderPreferencesRec
{
  int m_ID;
  const char *m_Description;
  int m_Flags;
  int m_EAXEnvironmentSelection;
  float m_EAXEffectVolume;
  float m_EAXDecayTime;
  float m_EAXDamping;
  float m_EAX2EnvironmentSize;
  float m_EAX2EnvironmentDiffusion;
  int m_EAX2Room;
  int m_EAX2RoomHF;
  float m_EAX2DecayHFRatio;
  int m_EAX2Reflections;
  float m_EAX2ReflectionsDelay;
  int m_EAX2Reverb;
  float m_EAX2ReverbDelay;
  float m_EAX2RoomRolloff;
  float m_EAX2AirAbsorption;
  int m_EAX3RoomLF;
  float m_EAX3DecayLFRatio;
  float m_EAX3EchoTime;
  float m_EAX3EchoDepth;
  float m_EAX3ModulationTime;
  float m_EAX3ModulationDepth;
  float m_EAX3HFReference;
  float m_EAX3LFReference;
};

/* 3371 */
struct __cppobj WowClientDB<SoundProviderPreferencesRec>
{
  SoundProviderPreferencesRec *m_records;
  int m_numRecords;
  SoundProviderPreferencesRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3372 */
struct __cppobj VocalUISoundsRec
{
  int m_ID;
  int m_vocalUIEnum;
  int m_raceID;
  int m_NormalSoundID[2];
  int m_PissedSoundID[2];
};

/* 3373 */
struct __cppobj WowClientDB<VocalUISoundsRec>
{
  VocalUISoundsRec *m_records;
  int m_numRecords;
  VocalUISoundsRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3374 */
struct __cppobj WowClientDB<SpellRec>
{
  SpellRec *m_records;
  int m_numRecords;
  SpellRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3375 */
struct __cppobj ResistancesRec
{
  int m_ID;
  int m_Flags;
  int m_FizzleSoundID;
  const char *m_name_lang[8];
  int m_name_flag;
};

/* 3376 */
struct __cppobj WowClientDB<ResistancesRec>
{
  ResistancesRec *m_records;
  int m_numRecords;
  ResistancesRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3377 */
struct __cppobj WowTime
{
  int m_minute;
  int m_hour;
  int m_weekday;
  int m_monthDay;
  int m_month;
  int m_year;
  int m_flags;
};

/* 3378 */
struct __cppobj TSLink<TIMESTAMPSTRUCT>
{
  TSLink<TIMESTAMPSTRUCT> *m_prevlink;
  TIMESTAMPSTRUCT *m_next;
};

/* 3380 */
struct __cppobj __declspec(align(4)) TSHashObject<TIMESTAMPSTRUCT,HASHKEY_NONE>
{
  unsigned int m_hashval;
  TSLink<TIMESTAMPSTRUCT> m_linktoslot;
  TSLink<TIMESTAMPSTRUCT> m_linktofull;
  HASHKEY_NONE m_key;
};

/* 3381 */
struct __cppobj TSLink<GAMETIMECBSTRUCT>
{
  TSLink<GAMETIMECBSTRUCT> *m_prevlink;
  GAMETIMECBSTRUCT *m_next;
};

/* 3385 */
struct __cppobj TSList<GAMETIMECBSTRUCT,TSGetLink<GAMETIMECBSTRUCT> >
{
  int m_linkoffset;
  TSLink<GAMETIMECBSTRUCT> m_terminator;
};

/* 3379 */
struct __cppobj TIMESTAMPSTRUCT : TSHashObject<TIMESTAMPSTRUCT,HASHKEY_NONE>
{
  TSList<GAMETIMECBSTRUCT,TSGetLink<GAMETIMECBSTRUCT> > callbackList;
};

/* 3382 */
struct __cppobj TSLinkedNode<GAMETIMECBSTRUCT>
{
  TSLink<GAMETIMECBSTRUCT> m_link;
};

/* 3383 */
struct __cppobj GAMETIMECBSTRUCT : CHandleObject, TSLinkedNode<GAMETIMECBSTRUCT>
{
  void *userData;
  void (__stdcall *callback)(const WowTime *, void *);
};

/* 3384 */
struct /*VFT*/ GAMETIMECBSTRUCT_vtbl
{
  void (__thiscall *~GAMETIMECBSTRUCT)(GAMETIMECBSTRUCT *this);
  const char *(__thiscall *CHandleObject::GetObjectName)(struct GAMETIMECBSTRUCT *this);
};

/* 3387 */
struct __cppobj TSList<TIMESTAMPSTRUCT,TSGetExplicitLink<TIMESTAMPSTRUCT> >
{
  int m_linkoffset;
  TSLink<TIMESTAMPSTRUCT> m_terminator;
};

/* 3388 */
struct __cppobj TSExplicitList<TIMESTAMPSTRUCT,-572662307> : TSList<TIMESTAMPSTRUCT,TSGetExplicitLink<TIMESTAMPSTRUCT> >
{
};

/* 3390 */
struct __cppobj TSBaseArray<TSExplicitList<TIMESTAMPSTRUCT,-572662307> >
{
  TSBaseArray<TSExplicitList<TIMESTAMPSTRUCT,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<TIMESTAMPSTRUCT,-572662307> *m_data;
};

/* 3393 */
struct __cppobj TSFixedArray<TSExplicitList<TIMESTAMPSTRUCT,-572662307> > : TSBaseArray<TSExplicitList<TIMESTAMPSTRUCT,-572662307> >
{
};

/* 3395 */
struct __cppobj TSGrowableArray<TSExplicitList<TIMESTAMPSTRUCT,-572662307> > : TSFixedArray<TSExplicitList<TIMESTAMPSTRUCT,-572662307> >
{
  unsigned int m_chunk;
};

/* 3386 */
struct __cppobj TSHashTable<TIMESTAMPSTRUCT,HASHKEY_NONE>
{
  TSHashTable<TIMESTAMPSTRUCT,HASHKEY_NONE>_vtbl *__vftable /*VFT*/;
  TSExplicitList<TIMESTAMPSTRUCT,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<TIMESTAMPSTRUCT,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 3389 */
struct /*VFT*/ TSHashTable<TIMESTAMPSTRUCT,HASHKEY_NONE>_vtbl
{
  void (__thiscall *TSHashTable<TIMESTAMPSTRUCT,HASHKEY_NONE>::InternalDelete)(TSHashTable<TIMESTAMPSTRUCT,HASHKEY_NONE> *this, TIMESTAMPSTRUCT *);
  TIMESTAMPSTRUCT *(__thiscall *TSHashTable<TIMESTAMPSTRUCT,HASHKEY_NONE>::InternalNew)(TSHashTable<TIMESTAMPSTRUCT,HASHKEY_NONE> *this, TSExplicitList<TIMESTAMPSTRUCT,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<TIMESTAMPSTRUCT,HASHKEY_NONE>)(TSHashTable<TIMESTAMPSTRUCT,HASHKEY_NONE> *this);
  void (__thiscall *TSHashTable<TIMESTAMPSTRUCT,HASHKEY_NONE>::Destroy)(TSHashTable<TIMESTAMPSTRUCT,HASHKEY_NONE> *this);
};

/* 3391 */
struct /*VFT*/ TSBaseArray<TSExplicitList<TIMESTAMPSTRUCT,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<TIMESTAMPSTRUCT,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<TIMESTAMPSTRUCT,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<TIMESTAMPSTRUCT,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<TIMESTAMPSTRUCT,-572662307> > *this);
};

/* 3392 */
struct /*VFT*/ TSFixedArray<TSExplicitList<TIMESTAMPSTRUCT,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<TIMESTAMPSTRUCT,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<TIMESTAMPSTRUCT,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<TIMESTAMPSTRUCT,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<TIMESTAMPSTRUCT,-572662307> > *this);
};

/* 3394 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<TIMESTAMPSTRUCT,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<TIMESTAMPSTRUCT,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<TIMESTAMPSTRUCT,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<TIMESTAMPSTRUCT,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<TIMESTAMPSTRUCT,-572662307> > *this);
};

/* 3396 */
struct __cppobj CGameTime : WowTime
{
  unsigned int m_lastTick;
  int m_timeBias;
  int m_dateBias;
  unsigned int m_gameMinutesElapsed;
  float m_gameMinutesPerRealSecond;
  float m_gameMinutesThisTick;
  unsigned int m_timeDifferential;
  unsigned int m_lastTickMinute;
  float m_dayProgression;
  TSHashTable<TIMESTAMPSTRUCT,HASHKEY_NONE> m_callbackLists;
};

/* 3397 */
struct __cppobj HGAMETIMECALLBACK__ : HOBJECT__
{
  int unused;
};

/* 3398 */
struct __cppobj WowClientDB<ItemDisplayInfoRec>
{
  ItemDisplayInfoRec *m_records;
  int m_numRecords;
  ItemDisplayInfoRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3399 */
struct __cppobj TerrainTypeRec
{
  int m_TerrainID;
  const char *m_TerrainDesc;
  int m_FootstepSprayRun;
  int m_FootstepSprayWalk;
  int m_SoundID;
  int m_Flags;
  int m_generatedID;
};

/* 3400 */
struct __cppobj WowClientDB<TerrainTypeRec>
{
  TerrainTypeRec *m_records;
  int m_numRecords;
  TerrainTypeRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3401 */
struct __cppobj TSLink<FOOTSTEPSNDCACHE>
{
  TSLink<FOOTSTEPSNDCACHE> *m_prevlink;
  FOOTSTEPSNDCACHE *m_next;
};

/* 3402 */
struct __cppobj __declspec(align(4)) TSHashObject<FOOTSTEPSNDCACHE,HASHKEY_NONE>
{
  unsigned int m_hashval;
  __unaligned __declspec(align(1)) TSLink<FOOTSTEPSNDCACHE> m_linktoslot;
  __unaligned __declspec(align(1)) TSLink<FOOTSTEPSNDCACHE> m_linktofull;
  HASHKEY_NONE m_key;
};

/* 3403 */
struct __cppobj FOOTSTEPSNDCACHE : TSHashObject<FOOTSTEPSNDCACHE,HASHKEY_NONE>
{
  TSGrowableArray<unsigned int> m_soundIDs;
  TSGrowableArray<unsigned int> m_splashSoundIDs;
};

/* 3404 */
struct __cppobj TSList<FOOTSTEPSNDCACHE,TSGetExplicitLink<FOOTSTEPSNDCACHE> >
{
  int m_linkoffset;
  TSLink<FOOTSTEPSNDCACHE> m_terminator;
};

/* 3405 */
struct __cppobj TSExplicitList<FOOTSTEPSNDCACHE,-572662307> : TSList<FOOTSTEPSNDCACHE,TSGetExplicitLink<FOOTSTEPSNDCACHE> >
{
};

/* 3406 */
struct __cppobj TSBaseArray<TSExplicitList<FOOTSTEPSNDCACHE,-572662307> >
{
  TSBaseArray<TSExplicitList<FOOTSTEPSNDCACHE,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<FOOTSTEPSNDCACHE,-572662307> *m_data;
};

/* 3407 */
struct /*VFT*/ TSBaseArray<TSExplicitList<FOOTSTEPSNDCACHE,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<FOOTSTEPSNDCACHE,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<FOOTSTEPSNDCACHE,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<FOOTSTEPSNDCACHE,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<FOOTSTEPSNDCACHE,-572662307> > *this);
};

/* 3408 */
struct /*VFT*/ TSFixedArray<TSExplicitList<FOOTSTEPSNDCACHE,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<FOOTSTEPSNDCACHE,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<FOOTSTEPSNDCACHE,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<FOOTSTEPSNDCACHE,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<FOOTSTEPSNDCACHE,-572662307> > *this);
};

/* 3409 */
struct __cppobj TSFixedArray<TSExplicitList<FOOTSTEPSNDCACHE,-572662307> > : TSBaseArray<TSExplicitList<FOOTSTEPSNDCACHE,-572662307> >
{
};

/* 3410 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<FOOTSTEPSNDCACHE,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<FOOTSTEPSNDCACHE,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<FOOTSTEPSNDCACHE,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<FOOTSTEPSNDCACHE,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<FOOTSTEPSNDCACHE,-572662307> > *this);
};

/* 3411 */
struct __cppobj TSGrowableArray<TSExplicitList<FOOTSTEPSNDCACHE,-572662307> > : TSFixedArray<TSExplicitList<FOOTSTEPSNDCACHE,-572662307> >
{
  unsigned int m_chunk;
};

/* 3412 */
struct __cppobj TSHashTable<FOOTSTEPSNDCACHE,HASHKEY_NONE>
{
  TSHashTable<FOOTSTEPSNDCACHE,HASHKEY_NONE>_vtbl *__vftable /*VFT*/;
  TSExplicitList<FOOTSTEPSNDCACHE,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<FOOTSTEPSNDCACHE,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 3413 */
struct /*VFT*/ TSHashTable<FOOTSTEPSNDCACHE,HASHKEY_NONE>_vtbl
{
  void (__thiscall *TSHashTable<FOOTSTEPSNDCACHE,HASHKEY_NONE>::InternalDelete)(TSHashTable<FOOTSTEPSNDCACHE,HASHKEY_NONE> *this, FOOTSTEPSNDCACHE *);
  FOOTSTEPSNDCACHE *(__thiscall *TSHashTable<FOOTSTEPSNDCACHE,HASHKEY_NONE>::InternalNew)(TSHashTable<FOOTSTEPSNDCACHE,HASHKEY_NONE> *this, TSExplicitList<FOOTSTEPSNDCACHE,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<FOOTSTEPSNDCACHE,HASHKEY_NONE>)(TSHashTable<FOOTSTEPSNDCACHE,HASHKEY_NONE> *this);
  void (__thiscall *TSHashTable<FOOTSTEPSNDCACHE,HASHKEY_NONE>::Destroy)(TSHashTable<FOOTSTEPSNDCACHE,HASHKEY_NONE> *this);
};

/* 3414 */
struct __cppobj TerrainTypeSoundsRec
{
  int m_ID;
};

/* 3415 */
struct __cppobj WowClientDB<TerrainTypeSoundsRec>
{
  TerrainTypeSoundsRec *m_records;
  int m_numRecords;
  TerrainTypeSoundsRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3416 */
struct __cppobj WowClientDB<ItemGroupSoundsRec>
{
  ItemGroupSoundsRec *m_records;
  int m_numRecords;
  ItemGroupSoundsRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3417 */
struct __cppobj FootstepTerrainLookupRec
{
  int m_ID;
  int m_CreatureFootstepID;
  int m_TerrainSoundID;
  int m_SoundID;
  int m_SoundIDSplash;
};

/* 3418 */
struct __cppobj WowClientDB<FootstepTerrainLookupRec>
{
  FootstepTerrainLookupRec *m_records;
  int m_numRecords;
  FootstepTerrainLookupRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3419 */
struct __cppobj TSBaseArray<CObjectHeapList>
{
  TSBaseArray<CObjectHeapList>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CObjectHeapList *m_data;
};

/* 3420 */
struct /*VFT*/ TSBaseArray<CObjectHeapList>_vtbl
{
  const char *(__thiscall *TSBaseArray<CObjectHeapList>::MemFileName)(TSBaseArray<CObjectHeapList> *this);
  int (__thiscall *TSBaseArray<CObjectHeapList>::MemLineNo)(TSBaseArray<CObjectHeapList> *this);
};

/* 3421 */
struct __cppobj TSBaseArray<CObjectHeap>
{
  TSBaseArray<CObjectHeap>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CObjectHeap *m_data;
};

/* 3425 */
struct __cppobj TSFixedArray<CObjectHeap> : TSBaseArray<CObjectHeap>
{
};

/* 3427 */
struct __cppobj TSGrowableArray<CObjectHeap> : TSFixedArray<CObjectHeap>
{
  unsigned int m_chunk;
};

/* 3428 */
struct __cppobj CObjectHeapList
{
  TSGrowableArray<CObjectHeap> m_heaps;
  unsigned int m_objSize;
  unsigned int m_objsPerBlock;
  unsigned int m_numFullHeaps;
  char m_heapName[80];
};

/* 3422 */
struct /*VFT*/ TSBaseArray<CObjectHeap>_vtbl
{
  const char *(__thiscall *TSBaseArray<CObjectHeap>::MemFileName)(TSBaseArray<CObjectHeap> *this);
  int (__thiscall *TSBaseArray<CObjectHeap>::MemLineNo)(TSBaseArray<CObjectHeap> *this);
};

/* 3423 */
struct __cppobj CObjectHeap
{
  void *m_obj;
  unsigned int *m_indexStack;
  unsigned int m_allocated;
  unsigned int m_bytes;
};

/* 3424 */
struct /*VFT*/ TSFixedArray<CObjectHeap>_vtbl
{
  const char *(__thiscall *TSBaseArray<CObjectHeap>::MemFileName)(struct TSFixedArray<CObjectHeap> *this);
  int (__thiscall *TSBaseArray<CObjectHeap>::MemLineNo)(struct TSFixedArray<CObjectHeap> *this);
};

/* 3426 */
struct /*VFT*/ TSGrowableArray<CObjectHeap>_vtbl
{
  const char *(__thiscall *TSBaseArray<CObjectHeap>::MemFileName)(struct TSGrowableArray<CObjectHeap> *this);
  int (__thiscall *TSBaseArray<CObjectHeap>::MemLineNo)(struct TSGrowableArray<CObjectHeap> *this);
};

/* 3429 */
struct /*VFT*/ TSFixedArray<CObjectHeapList>_vtbl
{
  const char *(__thiscall *TSBaseArray<CObjectHeapList>::MemFileName)(struct TSFixedArray<CObjectHeapList> *this);
  int (__thiscall *TSBaseArray<CObjectHeapList>::MemLineNo)(struct TSFixedArray<CObjectHeapList> *this);
};

/* 3430 */
struct __cppobj TSFixedArray<CObjectHeapList> : TSBaseArray<CObjectHeapList>
{
};

/* 3431 */
struct /*VFT*/ TSGrowableArray<CObjectHeapList>_vtbl
{
  const char *(__thiscall *TSBaseArray<CObjectHeapList>::MemFileName)(struct TSGrowableArray<CObjectHeapList> *this);
  int (__thiscall *TSBaseArray<CObjectHeapList>::MemLineNo)(struct TSGrowableArray<CObjectHeapList> *this);
};

/* 3432 */
struct __cppobj TSGrowableArray<CObjectHeapList> : TSFixedArray<CObjectHeapList>
{
  unsigned int m_chunk;
};

/* 3433 */
struct __cppobj OBJALLOCGLOBALS
{
  TSGrowableArray<CObjectHeapList> objects;
};

/* 3435 */
struct __cppobj TSList<CMirrorHandler,TSGetExplicitLink<CMirrorHandler> >
{
  int m_linkoffset;
  TSLink<CMirrorHandler> m_terminator;
};

/* 3436 */
struct __cppobj TSExplicitList<CMirrorHandler,8> : TSList<CMirrorHandler,TSGetExplicitLink<CMirrorHandler> >
{
};

/* 3437 */
struct __cppobj CMovementStatus
{
  unsigned __int64 transport;
  NTempest::C3Vector transRelPosition;
  float transRelFacing;
  NTempest::C3Vector worldPosition;
  float worldFacing;
  float pitch;
  unsigned int moveFlags;
};

/* 3438 */
struct __cppobj CClientMoveUpdate
{
  CMovementStatus status;
  unsigned int timeFallen;
  float walkSpeed;
  float runSpeed;
  float swimSpeed;
  float turnRate;
  CMoveSpline spline;
};

/* 3439 */
struct __cppobj CClientObjCreate
{
  CClientMoveUpdate move;
  unsigned int flags;
  unsigned int attackCycle;
  unsigned int timerID;
  unsigned __int64 victim;
};

/* 3440 */
struct CGContainerData
{
  unsigned int m_numSlots;
  unsigned int m_pad;
  unsigned __int64 m_slots[20];
};

/* 3441 */
struct __cppobj CGContainer
{
  CGContainerData *m_cont;
};

/* 3442 */
struct __cppobj CGContainer_C : CGItem_C, CGContainer
{
  CGBag_C m_bag;
};

/* 3443 */
struct /*VFT*/ CGContainer_C_vtbl
{
  CGBag_C *(__thiscall *CGContainer_C::GetBag)(CGContainer_C *this);
  void (__thiscall *CGObject_C::Reenable)(struct CGContainer_C *this);
  void (__thiscall *CGObject_C::PostReenable)(struct CGContainer_C *this);
  CGBag_C *(__thiscall *CGObject_C::GetBag)(struct CGContainer_C *this);
  _BYTE gap10[4];
  NTempest::C3Vector *(__thiscall *CGObject_C::GetPosition)(struct CGContainer_C *this, NTempest::C3Vector *result);
  float (__thiscall *CGObject_C::GetFacing)(struct CGContainer_C *this);
  float (__thiscall *CGObject_C::GetScale)(struct CGContainer_C *this);
  NTempest::C3Vector *(__thiscall *CGObject_C::GetGroundNormal)(struct CGContainer_C *this, NTempest::C3Vector *result);
  HMODEL__ *(__thiscall *CGObject_C::GetCharacterModel)(struct CGContainer_C *this, int *);
  const char *(__thiscall *GetModelFileName)(struct CGContainer_C *this);
  int (__thiscall *CGObject_C::GetSelectionHighlightColor)(struct CGContainer_C *this, NTempest::CImVector *);
  void (__thiscall *CGObject_C::RenderTargetSelection)(struct CGContainer_C *this);
  int (__thiscall *CGObject_C::UpdateModelLoadStatus)(struct CGContainer_C *this);
  int (__thiscall *CGObject_C::UpdateAttachmentLoadStatus)(struct CGContainer_C *this);
  int (__thiscall *CGObject_C::UpdateTexComponentLoadStatus)(struct CGContainer_C *this);
  void (__thiscall *CGObject_C::PreRender)(struct CGContainer_C *this, int, float);
  void (__thiscall *CGObject_C::PreAnimate)(struct CGContainer_C *this, CGWorldFrame *);
  void (__thiscall *CGObject_C::PostAnimate)(struct CGContainer_C *this, CGWorldFrame *);
  void (__thiscall *CGObject_C::GetWorldMatrix)(struct CGContainer_C *this, NTempest::C34Matrix *);
  int (__thiscall *CGObject_C::ShouldRender)(struct CGContainer_C *this, unsigned int);
  void (__thiscall *CGObject_C::ObjectPostAnimate)(struct CGContainer_C *this, float, const NTempest::C3Vector *, const NTempest::C3Vector *) __declspec(align(8));
  void (__thiscall *CGObject_C::UpdateRenderFacing)(struct CGContainer_C *this);
  float (__thiscall *CGObject_C::GetRenderFacing)(struct CGContainer_C *this);
  void (__thiscall *CGObject_C::OnSpecialMountAnim)(struct CGContainer_C *this);
  void (__thiscall *CGObject_C::UpdatePlayerName)(struct CGContainer_C *this);
  int (__thiscall *CGObject_C::IsSolidSelectable)(struct CGContainer_C *this);
  int (__thiscall *CGObject_C::IsSolidCollidable)(struct CGContainer_C *this);
  int (__thiscall *CGObject_C::CanHighlight)(struct CGContainer_C *this);
  int (__thiscall *CGObject_C::CanBeTargetted)(struct CGContainer_C *this);
  int (__thiscall *CGObject_C::FloatingTooltip)(struct CGContainer_C *this);
  void (__thiscall *CGObject_C::OnLeftClick)(struct CGContainer_C *this);
  void (__thiscall *CGObject_C::OnRightClick)(struct CGContainer_C *this);
  NTempest::C34Matrix *(__thiscall *CGObject_C::GetMatrix)(struct CGContainer_C *this, NTempest::C34Matrix *result);
  int (__thiscall *CGObject_C::ShouldFadeIn)(struct CGContainer_C *this);
  const char *(__thiscall *CGObject_C::GetObjectName)(struct CGContainer_C *this);
  int (__thiscall *CGObject_C::GetPageTextID)(struct CGContainer_C *this, void (__fastcall *)(int, const unsigned __int64 *, void *, unsigned __int8));
};

/* 3444 */
struct __cppobj CGGameObjectData
{
  int m_displayID;
  unsigned int m_flags;
  NTempest::C4Quaternion m_rotation;
  int m_state;
  unsigned int m_timestamp;
  NTempest::C3Vector m_position;
  float m_facing;
  unsigned int m_dynamicFlags;
  int m_factionTemplate;
};

/* 3445 */
struct __cppobj CGGameObject
{
  CGGameObjectData *m_gameObj;
};

/* 3447 */
struct __cppobj TSLink<CGGameObject_C>
{
  TSLink<CGGameObject_C> *m_prevlink;
  CGGameObject_C *m_next;
};

/* 3446 */
struct __cppobj CGGameObject_C : CGObject_C, CGGameObject
{
  TSLink<CGGameObject_C> moveLink;
  CGGameObject_C_TypeBase *m_baseObj;
  const GameObjectStats *m_stats;
  NTempest::C34Matrix m_matrix;
  HMODEL__ *m_collideModel;
  HCOLLISIONDATA__ *m_collideData;
  NTempest::CAaBox m_collideExtents;
  unsigned int m_serverTimeOffset;
  __int32 m_isSolid : 1;
  __int32 m_isQuestChestForMe : 1;
};

/* 3448 */
struct __cppobj CGGameObject_C_TypeBase
{
  CGGameObject_C_TypeBase_vtbl *__vftable /*VFT*/;
  CGGameObject_C *m_owner;
  float m_interactDistance;
};

/* 3450 */
const struct __cppobj GameObjectStats
{
  int m_typeID;
  int m_displayID;
  char *m_name[4];
  int m_propValue[10];
};

/* 3449 */
struct /*VFT*/ CGGameObject_C_TypeBase_vtbl
{
  void (__thiscall *~CGGameObject_C_TypeBase)(CGGameObject_C_TypeBase *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanHighlight)(CGGameObject_C_TypeBase *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanChangeCursor)(CGGameObject_C_TypeBase *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUse)(CGGameObject_C_TypeBase *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUseNow)(CGGameObject_C_TypeBase *this, GAME_ERROR_TYPE *);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::Use)(CGGameObject_C_TypeBase *this, const unsigned __int64 *);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateState)(CGGameObject_C_TypeBase *this, int, int);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimEvent)(CGGameObject_C_TypeBase *this, const char *, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimFinished)(CGGameObject_C_TypeBase *this);
  const char *(__thiscall *CGGameObject_C_TypeBase::DebugStatus)(CGGameObject_C_TypeBase *this);
  void (__thiscall *CGGameObject_C_TypeBase::ActivateCustomAnim)(CGGameObject_C_TypeBase *this, unsigned int);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetPosition)(CGGameObject_C_TypeBase *this, NTempest::C3Vector *result);
  float (__thiscall *CGGameObject_C_TypeBase::GetFacing)(CGGameObject_C_TypeBase *this);
  void (__thiscall *CGGameObject_C_TypeBase::AddPassenger)(CGGameObject_C_TypeBase *this, CMovementData *);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetCurrentMoveVector)(CGGameObject_C_TypeBase *this, NTempest::C3Vector *result);
  int (__thiscall *CGGameObject_C_TypeBase::IsPointInside)(CGGameObject_C_TypeBase *this, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::PostInit)(CGGameObject_C_TypeBase *this);
  void (__thiscall *CGGameObject_C_TypeBase::Reenable)(CGGameObject_C_TypeBase *this);
  void (__thiscall *CGGameObject_C_TypeBase::Disable)(CGGameObject_C_TypeBase *this, int);
  void (__thiscall *CGGameObject_C_TypeBase::PostReenable)(CGGameObject_C_TypeBase *this);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateMovement)(CGGameObject_C_TypeBase *this, unsigned int, float);
  void (__thiscall *CGGameObject_C_TypeBase::ModelJustLoaded)(CGGameObject_C_TypeBase *this);
  void (__thiscall *CGGameObject_C_TypeBase::StartInteraction)(CGGameObject_C_TypeBase *this);
  void (__thiscall *CGGameObject_C_TypeBase::CloseInteraction)(CGGameObject_C_TypeBase *this);
};

/* 3451 */
struct /*VFT*/ CGGameObject_C_vtbl
{
  int (__thiscall *CGGameObject_C::GetPageTextID)(CGGameObject_C *this, void (__fastcall *)(int, const unsigned __int64 *, void *, unsigned __int8));
  void (__thiscall *CGObject_C::Reenable)(struct CGGameObject_C *this);
  void (__thiscall *CGObject_C::PostReenable)(struct CGGameObject_C *this);
  CGBag_C *(__thiscall *CGObject_C::GetBag)(struct CGGameObject_C *this);
  _BYTE gap10[4];
  NTempest::C3Vector *(__thiscall *CGObject_C::GetPosition)(struct CGGameObject_C *this, NTempest::C3Vector *result);
  float (__thiscall *CGObject_C::GetFacing)(struct CGGameObject_C *this);
  float (__thiscall *CGObject_C::GetScale)(struct CGGameObject_C *this);
  NTempest::C3Vector *(__thiscall *CGObject_C::GetGroundNormal)(struct CGGameObject_C *this, NTempest::C3Vector *result);
  HMODEL__ *(__thiscall *CGObject_C::GetCharacterModel)(struct CGGameObject_C *this, int *);
  const char *(__thiscall *GetModelFileName)(struct CGGameObject_C *this);
  int (__thiscall *CGObject_C::GetSelectionHighlightColor)(struct CGGameObject_C *this, NTempest::CImVector *);
  void (__thiscall *CGObject_C::RenderTargetSelection)(struct CGGameObject_C *this);
  int (__thiscall *CGObject_C::UpdateModelLoadStatus)(struct CGGameObject_C *this);
  int (__thiscall *CGObject_C::UpdateAttachmentLoadStatus)(struct CGGameObject_C *this);
  int (__thiscall *CGObject_C::UpdateTexComponentLoadStatus)(struct CGGameObject_C *this);
  void (__thiscall *CGObject_C::PreRender)(struct CGGameObject_C *this, int, float);
  void (__thiscall *CGObject_C::PreAnimate)(struct CGGameObject_C *this, CGWorldFrame *);
  void (__thiscall *CGObject_C::PostAnimate)(struct CGGameObject_C *this, CGWorldFrame *);
  void (__thiscall *CGObject_C::GetWorldMatrix)(struct CGGameObject_C *this, NTempest::C34Matrix *);
  int (__thiscall *CGObject_C::ShouldRender)(struct CGGameObject_C *this, unsigned int);
  void (__thiscall *CGObject_C::ObjectPostAnimate)(struct CGGameObject_C *this, float, const NTempest::C3Vector *, const NTempest::C3Vector *) __declspec(align(8));
  void (__thiscall *CGObject_C::UpdateRenderFacing)(struct CGGameObject_C *this);
  float (__thiscall *CGObject_C::GetRenderFacing)(struct CGGameObject_C *this);
  void (__thiscall *CGObject_C::OnSpecialMountAnim)(struct CGGameObject_C *this);
  void (__thiscall *CGObject_C::UpdatePlayerName)(struct CGGameObject_C *this);
  int (__thiscall *CGObject_C::IsSolidSelectable)(struct CGGameObject_C *this);
  int (__thiscall *CGObject_C::IsSolidCollidable)(struct CGGameObject_C *this);
  int (__thiscall *CGObject_C::CanHighlight)(struct CGGameObject_C *this);
  int (__thiscall *CGObject_C::CanBeTargetted)(struct CGGameObject_C *this);
  int (__thiscall *CGObject_C::FloatingTooltip)(struct CGGameObject_C *this);
  void (__thiscall *CGObject_C::OnLeftClick)(struct CGGameObject_C *this);
  void (__thiscall *CGObject_C::OnRightClick)(struct CGGameObject_C *this);
  NTempest::C34Matrix *(__thiscall *CGObject_C::GetMatrix)(struct CGGameObject_C *this, NTempest::C34Matrix *result);
  int (__thiscall *CGObject_C::ShouldFadeIn)(struct CGGameObject_C *this);
  const char *(__thiscall *CGObject_C::GetObjectName)(struct CGGameObject_C *this);
  int (__thiscall *CGObject_C::GetPageTextID)(struct CGGameObject_C *this, void (__fastcall *)(int, const unsigned __int64 *, void *, unsigned __int8));
  NTempest::C3Vector *(__thiscall *CGGameObject_C::GetCurrentMoveVector)(CGGameObject_C *this, NTempest::C3Vector *result);
  int (__thiscall *CGGameObject_C::IsPointInside)(CGGameObject_C *this, const NTempest::C3Vector *);
};

/* 3452 */
struct __cppobj CGDynamicObjectData
{
  unsigned __int64 m_caster;
  unsigned __int8 m_type;
  unsigned __int8 m_typeFlags;
  unsigned __int8 m_padding[2];
  int m_spellID;
  float m_radius;
  NTempest::C3Vector m_position;
  float m_facing;
  int m_morePadding;
};

/* 3453 */
struct __cppobj CGDynamicObject
{
  CGDynamicObjectData *m_dynamicObj;
};

/* 3454 */
struct __cppobj CGDynamicObject_C : CGObject_C, CGDynamicObject
{
  __int32 m_haveStandSequence : 1;
  __int32 m_haveHoldSequence : 1;
  float m_dynamicScale;
  BlizzardObject *m_blizzardObject;
  Sound *m_sound;
};

/* 3455 */
struct __cppobj TSLink<BlizzardObject>
{
  TSLink<BlizzardObject> *m_prevlink;
  BlizzardObject *m_next;
};

/* 3457 */
struct __cppobj TSLinkedNode<BlizzardObject>
{
  TSLink<BlizzardObject> m_link;
};

/* 3458 */
struct __cppobj TSLink<BlizzardObject::Shard>
{
  TSLink<BlizzardObject::Shard> *m_prevlink;
  BlizzardObject::Shard *m_next;
};

/* 3461 */
struct __cppobj TSList<BlizzardObject::Shard,TSGetLink<BlizzardObject::Shard> >
{
  int m_linkoffset;
  TSLink<BlizzardObject::Shard> m_terminator;
};

/* 3456 */
struct __cppobj BlizzardObject : TSLinkedNode<BlizzardObject>
{
  HMODEL__ *shardModel;
  unsigned int hWorldObject;
  NTempest::C3Vector groundPos;
  float radius;
  float numEmitted;
  float emissionRate;
  unsigned __int8 dead;
  NTempest::CAaSphere boundSphere;
  TSList<BlizzardObject::Shard,TSGetLink<BlizzardObject::Shard> > shards;
};

/* 3459 */
struct __cppobj TSLinkedNode<BlizzardObject::Shard>
{
  TSLink<BlizzardObject::Shard> m_link;
};

/* 3460 */
struct __cppobj __unaligned __declspec(align(4)) BlizzardObject::Shard : TSLinkedNode<BlizzardObject::Shard>
{
  NTempest::C3Vector pos;
  HMODEL__ *hModel;
  unsigned int startTime;
};

/* 3462 */
struct /*VFT*/ CGDynamicObject_C_vtbl
{
  int (__thiscall *CGDynamicObject_C::UpdateModelLoadStatus)(CGDynamicObject_C *this);
  void (__thiscall *CGObject_C::Reenable)(struct CGDynamicObject_C *this);
  void (__thiscall *CGObject_C::PostReenable)(struct CGDynamicObject_C *this);
  CGBag_C *(__thiscall *CGObject_C::GetBag)(struct CGDynamicObject_C *this);
  _BYTE gap10[4];
  NTempest::C3Vector *(__thiscall *CGObject_C::GetPosition)(struct CGDynamicObject_C *this, NTempest::C3Vector *result);
  float (__thiscall *CGObject_C::GetFacing)(struct CGDynamicObject_C *this);
  float (__thiscall *CGObject_C::GetScale)(struct CGDynamicObject_C *this);
  NTempest::C3Vector *(__thiscall *CGObject_C::GetGroundNormal)(struct CGDynamicObject_C *this, NTempest::C3Vector *result);
  HMODEL__ *(__thiscall *CGObject_C::GetCharacterModel)(struct CGDynamicObject_C *this, int *);
  const char *(__thiscall *GetModelFileName)(struct CGDynamicObject_C *this);
  int (__thiscall *CGObject_C::GetSelectionHighlightColor)(struct CGDynamicObject_C *this, NTempest::CImVector *);
  void (__thiscall *CGObject_C::RenderTargetSelection)(struct CGDynamicObject_C *this);
  int (__thiscall *CGObject_C::UpdateModelLoadStatus)(struct CGDynamicObject_C *this);
  int (__thiscall *CGObject_C::UpdateAttachmentLoadStatus)(struct CGDynamicObject_C *this);
  int (__thiscall *CGObject_C::UpdateTexComponentLoadStatus)(struct CGDynamicObject_C *this);
  void (__thiscall *CGObject_C::PreRender)(struct CGDynamicObject_C *this, int, float);
  void (__thiscall *CGObject_C::PreAnimate)(struct CGDynamicObject_C *this, CGWorldFrame *);
  void (__thiscall *CGObject_C::PostAnimate)(struct CGDynamicObject_C *this, CGWorldFrame *);
  void (__thiscall *CGObject_C::GetWorldMatrix)(struct CGDynamicObject_C *this, NTempest::C34Matrix *);
  int (__thiscall *CGObject_C::ShouldRender)(struct CGDynamicObject_C *this, unsigned int);
  void (__thiscall *CGObject_C::ObjectPostAnimate)(struct CGDynamicObject_C *this, float, const NTempest::C3Vector *, const NTempest::C3Vector *) __declspec(align(8));
  void (__thiscall *CGObject_C::UpdateRenderFacing)(struct CGDynamicObject_C *this);
  float (__thiscall *CGObject_C::GetRenderFacing)(struct CGDynamicObject_C *this);
  void (__thiscall *CGObject_C::OnSpecialMountAnim)(struct CGDynamicObject_C *this);
  void (__thiscall *CGObject_C::UpdatePlayerName)(struct CGDynamicObject_C *this);
  int (__thiscall *CGObject_C::IsSolidSelectable)(struct CGDynamicObject_C *this);
  int (__thiscall *CGObject_C::IsSolidCollidable)(struct CGDynamicObject_C *this);
  int (__thiscall *CGObject_C::CanHighlight)(struct CGDynamicObject_C *this);
  int (__thiscall *CGObject_C::CanBeTargetted)(struct CGDynamicObject_C *this);
  int (__thiscall *CGObject_C::FloatingTooltip)(struct CGDynamicObject_C *this);
  void (__thiscall *CGObject_C::OnLeftClick)(struct CGDynamicObject_C *this);
  void (__thiscall *CGObject_C::OnRightClick)(struct CGDynamicObject_C *this);
  NTempest::C34Matrix *(__thiscall *CGObject_C::GetMatrix)(struct CGDynamicObject_C *this, NTempest::C34Matrix *result);
  int (__thiscall *CGObject_C::ShouldFadeIn)(struct CGDynamicObject_C *this);
  const char *(__thiscall *CGObject_C::GetObjectName)(struct CGDynamicObject_C *this);
  int (__thiscall *CGObject_C::GetPageTextID)(struct CGDynamicObject_C *this, void (__fastcall *)(int, const unsigned __int64 *, void *, unsigned __int8));
};

/* 3463 */
struct __cppobj CGCorpseData
{
  unsigned __int64 m_owner;
  float m_facing;
  NTempest::C3Vector m_position;
  unsigned int m_displayID;
  unsigned int m_items[19];
  unsigned __int8 m_unused;
  unsigned __int8 m_raceID;
  unsigned __int8 m_sex;
  unsigned __int8 m_skinID;
  unsigned __int8 m_faceID;
  unsigned __int8 m_hairStyleID;
  unsigned __int8 m_hairColorID;
  unsigned __int8 m_facialHairStyleID;
  unsigned int m_guildID;
  unsigned int m_level;
};

/* 3464 */
struct __cppobj CGCorpse
{
  CGCorpseData *m_corpse;
};

/* 3465 */
struct __cppobj CGCorpse_C : CGObject_C, CGCorpse
{
  HCHARGEOSET__ *m_geosetHandle;
  HTEXCOMPONENT__ *m_texComponent;
  unsigned int m_preferredGeosets[15];
  CORPSEANIMDATA *m_animData;
};

/* 3466 */
struct CORPSEANIMDATA
{
  unsigned __int64 guid;
};

/* 3467 */
struct /*VFT*/ CGCorpse_C_vtbl
{
  void (__thiscall *CGCorpse_C::OnRightClick)(CGCorpse_C *this);
  void (__thiscall *CGObject_C::Reenable)(struct CGCorpse_C *this);
  void (__thiscall *CGObject_C::PostReenable)(struct CGCorpse_C *this);
  CGBag_C *(__thiscall *CGObject_C::GetBag)(struct CGCorpse_C *this);
  _BYTE gap10[4];
  NTempest::C3Vector *(__thiscall *CGObject_C::GetPosition)(struct CGCorpse_C *this, NTempest::C3Vector *result);
  float (__thiscall *CGObject_C::GetFacing)(struct CGCorpse_C *this);
  float (__thiscall *CGObject_C::GetScale)(struct CGCorpse_C *this);
  NTempest::C3Vector *(__thiscall *CGObject_C::GetGroundNormal)(struct CGCorpse_C *this, NTempest::C3Vector *result);
  HMODEL__ *(__thiscall *CGObject_C::GetCharacterModel)(struct CGCorpse_C *this, int *);
  const char *(__thiscall *GetModelFileName)(struct CGCorpse_C *this);
  int (__thiscall *CGObject_C::GetSelectionHighlightColor)(struct CGCorpse_C *this, NTempest::CImVector *);
  void (__thiscall *CGObject_C::RenderTargetSelection)(struct CGCorpse_C *this);
  int (__thiscall *CGObject_C::UpdateModelLoadStatus)(struct CGCorpse_C *this);
  int (__thiscall *CGObject_C::UpdateAttachmentLoadStatus)(struct CGCorpse_C *this);
  int (__thiscall *CGObject_C::UpdateTexComponentLoadStatus)(struct CGCorpse_C *this);
  void (__thiscall *CGObject_C::PreRender)(struct CGCorpse_C *this, int, float);
  void (__thiscall *CGObject_C::PreAnimate)(struct CGCorpse_C *this, CGWorldFrame *);
  void (__thiscall *CGObject_C::PostAnimate)(struct CGCorpse_C *this, CGWorldFrame *);
  void (__thiscall *CGObject_C::GetWorldMatrix)(struct CGCorpse_C *this, NTempest::C34Matrix *);
  int (__thiscall *CGObject_C::ShouldRender)(struct CGCorpse_C *this, unsigned int);
  void (__thiscall *CGObject_C::ObjectPostAnimate)(struct CGCorpse_C *this, float, const NTempest::C3Vector *, const NTempest::C3Vector *) __declspec(align(8));
  void (__thiscall *CGObject_C::UpdateRenderFacing)(struct CGCorpse_C *this);
  float (__thiscall *CGObject_C::GetRenderFacing)(struct CGCorpse_C *this);
  void (__thiscall *CGObject_C::OnSpecialMountAnim)(struct CGCorpse_C *this);
  void (__thiscall *CGObject_C::UpdatePlayerName)(struct CGCorpse_C *this);
  int (__thiscall *CGObject_C::IsSolidSelectable)(struct CGCorpse_C *this);
  int (__thiscall *CGObject_C::IsSolidCollidable)(struct CGCorpse_C *this);
  int (__thiscall *CGObject_C::CanHighlight)(struct CGCorpse_C *this);
  int (__thiscall *CGObject_C::CanBeTargetted)(struct CGCorpse_C *this);
  int (__thiscall *CGObject_C::FloatingTooltip)(struct CGCorpse_C *this);
  void (__thiscall *CGObject_C::OnLeftClick)(struct CGCorpse_C *this);
  void (__thiscall *CGObject_C::OnRightClick)(struct CGCorpse_C *this);
  NTempest::C34Matrix *(__thiscall *CGObject_C::GetMatrix)(struct CGCorpse_C *this, NTempest::C34Matrix *result);
  int (__thiscall *CGObject_C::ShouldFadeIn)(struct CGCorpse_C *this);
  const char *(__thiscall *CGObject_C::GetObjectName)(struct CGCorpse_C *this);
  int (__thiscall *CGObject_C::GetPageTextID)(struct CGCorpse_C *this, void (__fastcall *)(int, const unsigned __int64 *, void *, unsigned __int8));
};

/* 3468 */
struct __cppobj ChrClassesRec
{
  int m_ID;
  int m_PlayerClass;
  int m_DamageBonusStat;
  int m_DisplayPower;
  const char *m_petNameToken;
  const char *m_name_lang[8];
  int m_name_flag;
};

/* 3469 */
struct __cppobj WowClientDB<ChrClassesRec>
{
  ChrClassesRec *m_records;
  int m_numRecords;
  ChrClassesRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3470 */
struct __cppobj AreaTableRec
{
  int m_ID;
  int m_AreaNumber;
  int m_ContinentID;
  int m_ParentAreaNum;
  int m_AreaBit;
  int m_flags;
  int m_SoundProviderPref;
  int m_SoundProviderPrefUnderwater;
  int m_MIDIAmbience;
  int m_MIDIAmbienceUnderwater;
  int m_ZoneMusic;
  int m_IntroSound;
  int m_IntroPriority;
  const char *m_AreaName_lang[8];
  int m_AreaName_flag;
};

/* 3471 */
struct __cppobj WowClientDB<AreaTableRec>
{
  AreaTableRec *m_records;
  int m_numRecords;
  AreaTableRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3472 */
struct __cppobj TSLink<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH>
{
  TSLink<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH> *m_prevlink;
  DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH *m_next;
};

/* 3474 */
struct __cppobj HASHKEY_INT
{
};

/* 3475 */
struct __cppobj __declspec(align(4)) TSHashObject<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
{
  unsigned int m_hashval;
  TSLink<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH> m_linktoslot;
  TSLink<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH> m_linktofull;
  HASHKEY_INT m_key;
};

/* 3476 */
struct __cppobj GuildStats
{
  unsigned int m_guildID;
  char m_guildName[24];
  int m_emblemStyle;
  int m_emblemColor;
  int m_borderStyle;
  int m_borderColor;
  int m_backgroundColor;
};

/* 3477 */
struct __cppobj GuildStats_C : GuildStats
{
};

/* 3478 */
struct __cppobj TSLink<DBCACHECALLBACK>
{
  TSLink<DBCACHECALLBACK> *m_prevlink;
  DBCACHECALLBACK *m_next;
};

/* 3481 */
struct __cppobj TSList<DBCACHECALLBACK,TSGetLink<DBCACHECALLBACK> >
{
  int m_linkoffset;
  TSLink<DBCACHECALLBACK> m_terminator;
};

/* 3473 */
struct __cppobj __declspec(align(4)) DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH : TSHashObject<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
{
  GuildStats_C m_record;
  int m_dbkey;
  unsigned __int8 m_haveData;
  TSList<DBCACHECALLBACK,TSGetLink<DBCACHECALLBACK> > m_callbacks;
  unsigned __int8 m_temp;
};

/* 3479 */
struct __cppobj TSLinkedNode<DBCACHECALLBACK>
{
  TSLink<DBCACHECALLBACK> m_link;
};

/* 3480 */
struct __cppobj __declspec(align(8)) DBCACHECALLBACK : TSLinkedNode<DBCACHECALLBACK>
{
  void (__fastcall *m_callback)(int, const unsigned __int64 *, void *, unsigned __int8);
  unsigned __int64 m_guid;
  void *m_cbArg;
};

/* 3483 */
struct __cppobj TSList<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,TSGetExplicitLink<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH> >
{
  int m_linkoffset;
  TSLink<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH> m_terminator;
};

/* 3484 */
struct __cppobj TSExplicitList<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> : TSList<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,TSGetExplicitLink<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH> >
{
};

/* 3486 */
struct __cppobj TSBaseArray<TSExplicitList<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >
{
  TSBaseArray<TSExplicitList<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> *m_data;
};

/* 3489 */
struct __cppobj TSFixedArray<TSExplicitList<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > : TSBaseArray<TSExplicitList<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >
{
};

/* 3491 */
struct __cppobj TSGrowableArray<TSExplicitList<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > : TSFixedArray<TSExplicitList<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >
{
  unsigned int m_chunk;
};

/* 3482 */
struct __cppobj TSHashTable<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
{
  TSHashTable<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>_vtbl *__vftable /*VFT*/;
  TSExplicitList<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 3485 */
struct /*VFT*/ TSHashTable<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>_vtbl
{
  void (__thiscall *TSHashTable<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>::InternalDelete)(TSHashTable<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this, DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH *);
  DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH *(__thiscall *TSHashTable<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>::InternalNew)(TSHashTable<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this, TSExplicitList<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>)(TSHashTable<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this);
  void (__thiscall *TSHashTable<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>::Destroy)(TSHashTable<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this);
};

/* 3487 */
struct /*VFT*/ TSBaseArray<TSExplicitList<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
};

/* 3488 */
struct /*VFT*/ TSFixedArray<TSExplicitList<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
};

/* 3490 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
};

/* 3492 */
struct __cppobj __declspec(align(4)) DBCache<GuildStats_C,int,HASHKEY_INT>
{
  TSHashTable<DBCache<GuildStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> m_table;
  unsigned int m_fileTag;
  const char *m_fileName;
  NETMESSAGE m_singleQueryMsg;
  NETMESSAGE m_multiQueryMsg;
  unsigned __int8 m_requireGuids;
  unsigned __int8 m_persistent;
};

/* 3493 */
struct __cppobj TSBaseArray<CHARINFO>
{
  TSBaseArray<CHARINFO>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CHARINFO *m_data;
};

/* 3494 */
struct /*VFT*/ TSBaseArray<CHARINFO>_vtbl
{
  const char *(__thiscall *TSBaseArray<CHARINFO>::MemFileName)(TSBaseArray<CHARINFO> *this);
  int (__thiscall *TSBaseArray<CHARINFO>::MemLineNo)(TSBaseArray<CHARINFO> *this);
};

/* 3495 */
struct __cppobj CHARINFO
{
  CHARACTER_INFO m_characterInfo;
  int m_eStyle;
  int m_eColor;
  int m_bStyle;
  int m_bColor;
  int m_background;
  HMODEL__ *m_characterModel;
  HTEXCOMPONENT__ *m_characterComponent;
  HMODEL__ *m_petModel;
};

/* 3496 */
struct /*VFT*/ TSFixedArray<CHARINFO>_vtbl
{
  const char *(__thiscall *TSBaseArray<CHARINFO>::MemFileName)(struct TSFixedArray<CHARINFO> *this);
  int (__thiscall *TSBaseArray<CHARINFO>::MemLineNo)(struct TSFixedArray<CHARINFO> *this);
};

/* 3497 */
struct __cppobj TSFixedArray<CHARINFO> : TSBaseArray<CHARINFO>
{
};

/* 3498 */
struct /*VFT*/ TSGrowableArray<CHARINFO>_vtbl
{
  const char *(__thiscall *TSBaseArray<CHARINFO>::MemFileName)(struct TSGrowableArray<CHARINFO> *this);
  int (__thiscall *TSBaseArray<CHARINFO>::MemLineNo)(struct TSGrowableArray<CHARINFO> *this);
};

/* 3499 */
struct __cppobj TSGrowableArray<CHARINFO> : TSFixedArray<CHARINFO>
{
  unsigned int m_chunk;
};

/* 3500 */
struct __cppobj WowClientDB<CreatureDisplayInfoRec>
{
  CreatureDisplayInfoRec *m_records;
  int m_numRecords;
  CreatureDisplayInfoRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3501 */
struct __cppobj WowClientDB<CreatureModelDataRec>
{
  CreatureModelDataRec *m_records;
  int m_numRecords;
  CreatureModelDataRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3502 */
struct __cppobj BEARDSTYLEDATA
{
  unsigned int beardGeoset;
  unsigned int sideBurnGeoset;
  unsigned int moustacheGeoset;
};

/* 3503 */
struct __cppobj CCharSelectInfo
{
};

/* 3504 */
struct __cppobj CharacterCreateCamerasRec
{
  int m_Race;
  int m_Sex;
  int m_Camera;
  float m_Height;
  float m_Radius;
  float m_Target;
  int m_generatedID;
};

/* 3505 */
struct __cppobj WowClientDB<CharacterCreateCamerasRec>
{
  CharacterCreateCamerasRec *m_records;
  int m_numRecords;
  CharacterCreateCamerasRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3506 */
struct __cppobj FactionGroupRec
{
  int m_ID;
  int m_maskID;
  const char *m_internalName;
  const char *m_name_lang[8];
  int m_name_flag;
};

/* 3507 */
struct __cppobj WowClientDB<FactionGroupRec>
{
  FactionGroupRec *m_records;
  int m_numRecords;
  FactionGroupRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3508 */
struct __cppobj FactionTemplateRec
{
  int m_ID;
  int m_faction;
  int m_factionGroup;
  int m_friendGroup;
  int m_enemyGroup;
  int m_enemies[4];
  int m_friend[4];
};

/* 3509 */
struct __cppobj WowClientDB<FactionTemplateRec>
{
  FactionTemplateRec *m_records;
  int m_numRecords;
  FactionTemplateRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3510 */
struct __cppobj CustomizationSelections
{
  unsigned int classID;
  unsigned int outfit;
  unsigned int skinColor;
  unsigned int hairColor;
  unsigned int hairStyle;
  unsigned int facialStyle;
  unsigned int face;
};

/* 3511 */
struct __cppobj CHARCREATEINFO
{
  HMODEL__ *characterModel[2];
  HCHARGEOSET__ *geosetHandle[2];
  HTEXCOMPONENT__ *characterComponent[2];
  CustomizationSelections selections[2];
  float cameraHeight[2][2];
  float cameraRadius[2][2];
  float targetHeight[2][2];
  unsigned int currentGeosets[3][15];
};

/* 3512 */
struct __cppobj CharBaseInfoRec
{
  unsigned __int8 m_raceID;
  unsigned __int8 m_classID;
  int m_proficiency;
  int m_generatedID;
};

/* 3513 */
struct __cppobj WowClientDB<CharBaseInfoRec>
{
  CharBaseInfoRec *m_records;
  int m_numRecords;
  CharBaseInfoRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3514 */
struct __cppobj CharStartOutfitRec
{
  int m_ID;
  unsigned __int8 m_raceID;
  unsigned __int8 m_classID;
  unsigned __int8 m_sexID;
  unsigned __int8 m_outfitID;
  int m_ItemID[12];
  int m_DisplayItemID[12];
  int m_InventoryType[12];
};

/* 3515 */
struct __cppobj WowClientDB<CharStartOutfitRec>
{
  CharStartOutfitRec *m_records;
  int m_numRecords;
  CharStartOutfitRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3516 */
struct __cppobj CCharCreateInfo
{
};

/* 3517 */
struct CHARACTER_CREATE_INFO
{
  char name[48];
  unsigned __int8 raceID;
  unsigned __int8 classID;
  unsigned __int8 sexID;
  unsigned __int8 skinID;
  unsigned __int8 faceID;
  unsigned __int8 hairStyleID;
  unsigned __int8 hairColorID;
  unsigned __int8 facialHairStyleID;
  unsigned __int8 outfitID;
};

/* 3518 */
struct __cppobj CGlueMgr
{
};

/* 3519 */
struct __cppobj CWOWClientStatus : CStatus
{
  HSLOG__ *m_logFile;
};

/* 3520 */
struct /*VFT*/ CWOWClientStatus_vtbl
{
  void (__thiscall *~CWOWClientStatus)(CWOWClientStatus *this);
  void (__thiscall *CStatus::Display)(struct CWOWClientStatus *this);
  _BYTE gap8[4];
  void (*CStatus::Add)(struct CWOWClientStatus *this, STATUS_TYPE, const char *, ...);
  void (*CStatus::Prepend)(struct CWOWClientStatus *this, STATUS_TYPE, const char *, ...);
};

/* 3521 */
struct GEOCOMPONENTINFO
{
  __int64 allowedSlots;
  int itemLinks[2];
  int altItemLinks[2];
};

/* 3522 */
struct LAYERIDS
{
  TEXCOMPONENT_LAYERS layers[10];
};

/* 3523 */
struct SECTIONPRIORITIES
{
  LAYERPRIORITY priorities[10];
};

/* 3524 */
struct SECTIONDESC
{
  char *m_columnName;
  unsigned int x;
  unsigned int y;
  unsigned int width;
  unsigned int height;
};

/* 3525 */
struct CSectionFileNames
{
  char path[6][260];
};

/* 3526 */
struct __cppobj SUBCOMPONENTDESC
{
  char *pathName;
  char *textureName;
  unsigned int connectionPointIndex;
};

/* 3527 */
struct __cppobj ItemVisualEffectsRec
{
  int m_ID;
  const char *m_Model;
};

/* 3528 */
struct __cppobj WowClientDB<ItemVisualEffectsRec>
{
  ItemVisualEffectsRec *m_records;
  int m_numRecords;
  ItemVisualEffectsRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3529 */
struct __cppobj HTEXTURECACHE__ : HOBJECT__
{
  int unused;
};

/* 3530 */
struct __cppobj NULLSTATUS : CStatus
{
};

/* 3531 */
struct /*VFT*/ NULLSTATUS_vtbl
{
  void (__thiscall *~NULLSTATUS)(NULLSTATUS *this);
  void (__thiscall *CStatus::Display)(struct NULLSTATUS *this);
  _BYTE gap8[4];
  void (*CStatus::Add)(struct NULLSTATUS *this, STATUS_TYPE, const char *, ...);
  void (*CStatus::Prepend)(struct NULLSTATUS *this, STATUS_TYPE, const char *, ...);
};

/* 3532 */
struct __cppobj HelmetGeosetVisDataRec
{
  int m_ID;
  int m_DefaultFlags[32];
  int m_PreferredFlags[32];
  int m_HideFlags[32];
};

/* 3533 */
struct __cppobj WowClientDB<HelmetGeosetVisDataRec>
{
  HelmetGeosetVisDataRec *m_records;
  int m_numRecords;
  HelmetGeosetVisDataRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3534 */
struct __cppobj WowClientDB<ItemVisualsRec>
{
  ItemVisualsRec *m_records;
  int m_numRecords;
  ItemVisualsRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3535 */
struct __cppobj HMIPPEDTEXTURE__ : HOBJECT__
{
  int unused;
};

/* 3538 */
struct $25065DAA4B14F6B0A592403B79E8E196
{
  _BYTE gap0[24];
  HMIPPEDTEXTURE__ *m_mippedTexture;
};

/* 3539 */
union $77C0449BDE8FB949EBAFCA32571276D2
{
  TEXTUREINFO m_textureInfo;
  $25065DAA4B14F6B0A592403B79E8E196 __s1;
};

/* 3536 */
struct __cppobj CTexturePiece : CHandleObject
{
  $77C0449BDE8FB949EBAFCA32571276D2 ___u1;
  unsigned int m_holds;
  char m_fileName[260];
};

/* 3537 */
struct /*VFT*/ CTexturePiece_vtbl
{
  void (__thiscall *~CTexturePiece)(CTexturePiece *this);
  const char *(__thiscall *CHandleObject::GetObjectName)(struct CTexturePiece *this);
};

/* 3540 */
struct __cppobj CTextureLayer
{
  CTexturePiece m_priorities[4];
};

/* 3541 */
struct __cppobj CSection
{
  CTextureLayer m_layers[4];
};

/* 3542 */
struct __cppobj CTexComponent : CTexturePiece
{
  HTEXTURE__ *m_texture;
  unsigned int m_dirtyFlags;
  CSection m_sections[10];
  unsigned int m_underwearHideCounts[2];
  unsigned int m_flags;
  char m_upperFaceTexture[260];
  char m_lowerFaceTexture[260];
  int m_emblemStyle;
  int m_emblemColor;
  int m_borderStyle;
  int m_borderColor;
  int m_background;
};

/* 3543 */
struct /*VFT*/ CTexComponent_vtbl
{
  void (__thiscall *~CTexComponent)(CTexComponent *this);
  const char *(__thiscall *CHandleObject::GetObjectName)(struct CTexComponent *this);
};

/* 3544 */
struct __cppobj TSBaseArray<TSFixedArray<VARIATIONS> >
{
  TSBaseArray<TSFixedArray<VARIATIONS> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSFixedArray<VARIATIONS> *m_data;
};

/* 3545 */
struct /*VFT*/ TSBaseArray<TSFixedArray<VARIATIONS> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSFixedArray<VARIATIONS> >::MemFileName)(TSBaseArray<TSFixedArray<VARIATIONS> > *this);
  int (__thiscall *TSBaseArray<TSFixedArray<VARIATIONS> >::MemLineNo)(TSBaseArray<TSFixedArray<VARIATIONS> > *this);
};

/* 3546 */
struct __cppobj TSBaseArray<VARIATIONS>
{
  TSBaseArray<VARIATIONS>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  VARIATIONS *m_data;
};

/* 3563 */
struct __cppobj TSFixedArray<VARIATIONS> : TSBaseArray<VARIATIONS>
{
};

/* 3547 */
struct /*VFT*/ TSBaseArray<VARIATIONS>_vtbl
{
  const char *(__thiscall *TSBaseArray<VARIATIONS>::MemFileName)(TSBaseArray<VARIATIONS> *this);
  int (__thiscall *TSBaseArray<VARIATIONS>::MemLineNo)(TSBaseArray<VARIATIONS> *this);
};

/* 3548 */
struct __cppobj TSBaseArray<FACIALGEOSETS>
{
  TSBaseArray<FACIALGEOSETS>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  FACIALGEOSETS *m_data;
};

/* 3552 */
struct __cppobj TSFixedArray<FACIALGEOSETS> : TSBaseArray<FACIALGEOSETS>
{
};

/* 3553 */
struct __cppobj FACIALVARIATIONS
{
  TSFixedArray<FACIALGEOSETS> facialGeosets;
};

/* 3554 */
struct __cppobj TSBaseArray<INTDATA>
{
  TSBaseArray<INTDATA>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  INTDATA *m_data;
};

/* 3558 */
struct __cppobj TSFixedArray<INTDATA> : TSBaseArray<INTDATA>
{
};

/* 3560 */
struct __cppobj TSGrowableArray<INTDATA> : TSFixedArray<INTDATA>
{
  unsigned int m_chunk;
};

/* 3561 */
struct __cppobj VARIATIONS
{
  unsigned int textureHolds[4];
  FACIALVARIATIONS facialVariations;
  TSGrowableArray<INTDATA> hairGeosets;
};

/* 3549 */
struct /*VFT*/ TSBaseArray<FACIALGEOSETS>_vtbl
{
  const char *(__thiscall *TSBaseArray<FACIALGEOSETS>::MemFileName)(TSBaseArray<FACIALGEOSETS> *this);
  int (__thiscall *TSBaseArray<FACIALGEOSETS>::MemLineNo)(TSBaseArray<FACIALGEOSETS> *this);
};

/* 3550 */
struct __cppobj FACIALGEOSETS
{
  unsigned int beardGeoset;
  unsigned int sideBurnGeoset;
  unsigned int moustacheGeoset;
};

/* 3555 */
struct /*VFT*/ TSBaseArray<INTDATA>_vtbl
{
  const char *(__thiscall *TSBaseArray<INTDATA>::MemFileName)(TSBaseArray<INTDATA> *this);
  int (__thiscall *TSBaseArray<INTDATA>::MemLineNo)(TSBaseArray<INTDATA> *this);
};

/* 3556 */
struct __cppobj INTDATA
{
  int theInt;
};

/* 3551 */
struct /*VFT*/ TSFixedArray<FACIALGEOSETS>_vtbl
{
  const char *(__thiscall *TSBaseArray<FACIALGEOSETS>::MemFileName)(struct TSFixedArray<FACIALGEOSETS> *this);
  int (__thiscall *TSBaseArray<FACIALGEOSETS>::MemLineNo)(struct TSFixedArray<FACIALGEOSETS> *this);
};

/* 3557 */
struct /*VFT*/ TSFixedArray<INTDATA>_vtbl
{
  const char *(__thiscall *TSBaseArray<INTDATA>::MemFileName)(struct TSFixedArray<INTDATA> *this);
  int (__thiscall *TSBaseArray<INTDATA>::MemLineNo)(struct TSFixedArray<INTDATA> *this);
};

/* 3559 */
struct /*VFT*/ TSGrowableArray<INTDATA>_vtbl
{
  const char *(__thiscall *TSBaseArray<INTDATA>::MemFileName)(struct TSGrowableArray<INTDATA> *this);
  int (__thiscall *TSBaseArray<INTDATA>::MemLineNo)(struct TSGrowableArray<INTDATA> *this);
};

/* 3562 */
struct /*VFT*/ TSFixedArray<VARIATIONS>_vtbl
{
  const char *(__thiscall *TSBaseArray<VARIATIONS>::MemFileName)(struct TSFixedArray<VARIATIONS> *this);
  int (__thiscall *TSBaseArray<VARIATIONS>::MemLineNo)(struct TSFixedArray<VARIATIONS> *this);
};

/* 3564 */
struct /*VFT*/ TSFixedArray<TSFixedArray<VARIATIONS> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSFixedArray<VARIATIONS> >::MemFileName)(struct TSFixedArray<TSFixedArray<VARIATIONS> > *this);
  int (__thiscall *TSBaseArray<TSFixedArray<VARIATIONS> >::MemLineNo)(struct TSFixedArray<TSFixedArray<VARIATIONS> > *this);
};

/* 3565 */
struct __cppobj TSFixedArray<TSFixedArray<VARIATIONS> > : TSBaseArray<TSFixedArray<VARIATIONS> >
{
};

/* 3566 */
struct __cppobj TSBaseArray<CAMERAFILENAMES>
{
  TSBaseArray<CAMERAFILENAMES>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CAMERAFILENAMES *m_data;
};

/* 3567 */
struct /*VFT*/ TSBaseArray<CAMERAFILENAMES>_vtbl
{
  const char *(__thiscall *TSBaseArray<CAMERAFILENAMES>::MemFileName)(TSBaseArray<CAMERAFILENAMES> *this);
  int (__thiscall *TSBaseArray<CAMERAFILENAMES>::MemLineNo)(TSBaseArray<CAMERAFILENAMES> *this);
};

/* 3568 */
struct __cppobj CAMERAFILENAMES
{
  char fileName[3][260];
};

/* 3569 */
struct /*VFT*/ TSFixedArray<CAMERAFILENAMES>_vtbl
{
  const char *(__thiscall *TSBaseArray<CAMERAFILENAMES>::MemFileName)(struct TSFixedArray<CAMERAFILENAMES> *this);
  int (__thiscall *TSBaseArray<CAMERAFILENAMES>::MemLineNo)(struct TSFixedArray<CAMERAFILENAMES> *this);
};

/* 3570 */
struct __cppobj TSFixedArray<CAMERAFILENAMES> : TSBaseArray<CAMERAFILENAMES>
{
};

/* 3571 */
struct __cppobj TSBaseArray<CHARACTERRACEVARIATIONS>
{
  TSBaseArray<CHARACTERRACEVARIATIONS>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CHARACTERRACEVARIATIONS *m_data;
};

/* 3572 */
struct /*VFT*/ TSBaseArray<CHARACTERRACEVARIATIONS>_vtbl
{
  const char *(__thiscall *TSBaseArray<CHARACTERRACEVARIATIONS>::MemFileName)(TSBaseArray<CHARACTERRACEVARIATIONS> *this);
  int (__thiscall *TSBaseArray<CHARACTERRACEVARIATIONS>::MemLineNo)(TSBaseArray<CHARACTERRACEVARIATIONS> *this);
};

/* 3573 */
struct __cppobj TSBaseArray<CHARACTERVARIATIONS>
{
  TSBaseArray<CHARACTERVARIATIONS>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CHARACTERVARIATIONS *m_data;
};

/* 3584 */
struct __cppobj TSFixedArray<CHARACTERVARIATIONS> : TSBaseArray<CHARACTERVARIATIONS>
{
};

/* 3586 */
struct __cppobj TSGrowableArray<CHARACTERVARIATIONS> : TSFixedArray<CHARACTERVARIATIONS>
{
  unsigned int m_chunk;
};

/* 3587 */
struct __cppobj CHARACTERSEXVARIATIONS
{
  TSGrowableArray<CHARACTERVARIATIONS> names[11];
  int firstNPCVar[11];
  int lastNPCVar[11];
};

/* 3588 */
struct __cppobj CHARACTERRACEVARIATIONS
{
  CHARACTERSEXVARIATIONS sex[3];
};

/* 3574 */
struct /*VFT*/ TSBaseArray<CHARACTERVARIATIONS>_vtbl
{
  const char *(__thiscall *TSBaseArray<CHARACTERVARIATIONS>::MemFileName)(TSBaseArray<CHARACTERVARIATIONS> *this);
  int (__thiscall *TSBaseArray<CHARACTERVARIATIONS>::MemLineNo)(TSBaseArray<CHARACTERVARIATIONS> *this);
};

/* 3575 */
struct __cppobj TSBaseArray<STRINGWANNABE>
{
  TSBaseArray<STRINGWANNABE>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  STRINGWANNABE *m_data;
};

/* 3579 */
struct __cppobj TSFixedArray<STRINGWANNABE> : TSBaseArray<STRINGWANNABE>
{
};

/* 3581 */
struct __cppobj TSGrowableArray<STRINGWANNABE> : TSFixedArray<STRINGWANNABE>
{
  unsigned int m_chunk;
};

/* 3582 */
struct __cppobj CHARACTERVARIATIONS
{
  TSGrowableArray<STRINGWANNABE> color;
};

/* 3576 */
struct /*VFT*/ TSBaseArray<STRINGWANNABE>_vtbl
{
  const char *(__thiscall *TSBaseArray<STRINGWANNABE>::MemFileName)(TSBaseArray<STRINGWANNABE> *this);
  int (__thiscall *TSBaseArray<STRINGWANNABE>::MemLineNo)(TSBaseArray<STRINGWANNABE> *this);
};

/* 3577 */
struct __cppobj STRINGWANNABE
{
  const char *string;
};

/* 3578 */
struct /*VFT*/ TSFixedArray<STRINGWANNABE>_vtbl
{
  const char *(__thiscall *TSBaseArray<STRINGWANNABE>::MemFileName)(struct TSFixedArray<STRINGWANNABE> *this);
  int (__thiscall *TSBaseArray<STRINGWANNABE>::MemLineNo)(struct TSFixedArray<STRINGWANNABE> *this);
};

/* 3580 */
struct /*VFT*/ TSGrowableArray<STRINGWANNABE>_vtbl
{
  const char *(__thiscall *TSBaseArray<STRINGWANNABE>::MemFileName)(struct TSGrowableArray<STRINGWANNABE> *this);
  int (__thiscall *TSBaseArray<STRINGWANNABE>::MemLineNo)(struct TSGrowableArray<STRINGWANNABE> *this);
};

/* 3583 */
struct /*VFT*/ TSFixedArray<CHARACTERVARIATIONS>_vtbl
{
  const char *(__thiscall *TSBaseArray<CHARACTERVARIATIONS>::MemFileName)(struct TSFixedArray<CHARACTERVARIATIONS> *this);
  int (__thiscall *TSBaseArray<CHARACTERVARIATIONS>::MemLineNo)(struct TSFixedArray<CHARACTERVARIATIONS> *this);
};

/* 3585 */
struct /*VFT*/ TSGrowableArray<CHARACTERVARIATIONS>_vtbl
{
  const char *(__thiscall *TSBaseArray<CHARACTERVARIATIONS>::MemFileName)(struct TSGrowableArray<CHARACTERVARIATIONS> *this);
  int (__thiscall *TSBaseArray<CHARACTERVARIATIONS>::MemLineNo)(struct TSGrowableArray<CHARACTERVARIATIONS> *this);
};

/* 3589 */
struct /*VFT*/ TSFixedArray<CHARACTERRACEVARIATIONS>_vtbl
{
  const char *(__thiscall *TSBaseArray<CHARACTERRACEVARIATIONS>::MemFileName)(struct TSFixedArray<CHARACTERRACEVARIATIONS> *this);
  int (__thiscall *TSBaseArray<CHARACTERRACEVARIATIONS>::MemLineNo)(struct TSFixedArray<CHARACTERRACEVARIATIONS> *this);
};

/* 3590 */
struct __cppobj TSFixedArray<CHARACTERRACEVARIATIONS> : TSBaseArray<CHARACTERRACEVARIATIONS>
{
};

/* 3591 */
struct /*VFT*/ TSGrowableArray<CHARACTERRACEVARIATIONS>_vtbl
{
  const char *(__thiscall *TSBaseArray<CHARACTERRACEVARIATIONS>::MemFileName)(struct TSGrowableArray<CHARACTERRACEVARIATIONS> *this);
  int (__thiscall *TSBaseArray<CHARACTERRACEVARIATIONS>::MemLineNo)(struct TSGrowableArray<CHARACTERRACEVARIATIONS> *this);
};

/* 3592 */
struct __cppobj TSGrowableArray<CHARACTERRACEVARIATIONS> : TSFixedArray<CHARACTERRACEVARIATIONS>
{
  unsigned int m_chunk;
};

/* 3593 */
struct $505CB3E6E7FC5C4EABFD15BDC19251F6
{
  unsigned int disableGeosetFlags[9];
};

/* 3594 */
struct HOLDINFO
{
  CHARACTER_ITEM_GEOSETS geosetGroup;
  TEXCOMPONENT_SECTIONS holdSection;
};

/* 3595 */
struct __cppobj INVHOLDINFO
{
  HOLDINFO holdInfo[2];
};

/* 3596 */
struct __cppobj CharVariationsRec
{
  int m_RaceID;
  int m_SexID;
  int m_TextureHoldLayer[4];
  int m_generatedID;
};

/* 3597 */
struct __cppobj WowClientDB<CharVariationsRec>
{
  CharVariationsRec *m_records;
  int m_numRecords;
  CharVariationsRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3598 */
struct __cppobj CharacterFacialHairStylesRec
{
  int m_RaceID;
  int m_SexID;
  int m_VariationID;
  int m_BeardGeoset;
  int m_MoustacheGeoset;
  int m_SideburnGeoset;
  int m_generatedID;
};

/* 3599 */
struct __cppobj WowClientDB<CharacterFacialHairStylesRec>
{
  CharacterFacialHairStylesRec *m_records;
  int m_numRecords;
  CharacterFacialHairStylesRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3600 */
struct __cppobj CharTextureVariationsV2Rec
{
  int m_ID;
  int m_RaceID;
  int m_SexID;
  int m_SectionID;
  int m_VariationID;
  int m_ColorID;
  int m_IsNPC;
  const char *m_TextureName;
};

/* 3601 */
struct __cppobj WowClientDB<CharTextureVariationsV2Rec>
{
  CharTextureVariationsV2Rec *m_records;
  int m_numRecords;
  CharTextureVariationsV2Rec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3602 */
struct ITEMGEOSETGROUPS
{
  CHARACTER_ITEM_GEOSETS geosetGroup[4];
};

/* 3603 */
struct __cppobj CharHairGeosetsRec
{
  int m_ID;
  int m_RaceID;
  int m_SexID;
  int m_VariationID;
  int m_GeosetID;
  int m_Showscalp;
};

/* 3604 */
struct __cppobj WowClientDB<CharHairGeosetsRec>
{
  CharHairGeosetsRec *m_records;
  int m_numRecords;
  CharHairGeosetsRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3605 */
struct __cppobj CharGeosetInfo
{
  int highestPriority[9];
  unsigned int currentGeosets[9];
  unsigned int geosetCurrentlyUsedBy[9];
  unsigned int disabledByFlags[9];
  unsigned int flags[9];
  unsigned int inventoryTypeGeosets[9][27];
};

/* 3606 */
struct __cppobj CCharGeoset : CHandleObject
{
  HMODEL__ *m_charModel;
  HMODEL__ *m_paperDollModel;
  CharGeosetInfo m_geosetInfo;
  CharGeosetInfo m_workingGeosetInfo;
  int m_flags;
  unsigned int m_currentGeosets[15];
};

/* 3607 */
struct /*VFT*/ CCharGeoset_vtbl
{
  void (__thiscall *~CCharGeoset)(CCharGeoset *this);
  const char *(__thiscall *CHandleObject::GetObjectName)(struct CCharGeoset *this);
};

/* 3608 */
struct __cppobj TSStackArray<int>
{
  unsigned int m_maxCount;
  unsigned int m_count;
  int *m_data;
};

/* 3609 */
struct __cppobj PageTextCache
{
  char m_text[500];
  int m_nextPage;
};

/* 3610 */
struct __cppobj PageTextCache_C : PageTextCache
{
};

/* 3611 */
struct __cppobj NPCText
{
  char *m_text;
  int m_soundID;
};

/* 3612 */
struct __cppobj ItemStats_C : ItemStats
{
};

/* 3613 */
struct __cppobj GameObjectStats_C : GameObjectStats
{
};

/* 3614 */
struct __cppobj __declspec(align(8)) CGPetition
{
  int m_petitionID;
  unsigned __int64 m_petitioner;
  char m_title[256];
  char m_bodyText[4096];
  int m_flags;
  int m_minSignatures;
  int m_maxSignatures;
  int m_deadLine;
  int m_issueDate;
  int m_allowedGuildID;
  int m_allowedClasses;
  int m_allowedRaces;
  __int16 m_allowedGender;
  int m_allowedMinLevel;
  int m_allowedMaxLevel;
  char m_choicetext[10][64];
  int m_numChoices;
  unsigned int m_muid;
};

/* 3615 */
struct CARgbColor
{
  unsigned __int8 a;
  unsigned __int8 r;
  unsigned __int8 g;
  unsigned __int8 b;
};

/* 3616 */
struct __cppobj TSBaseArray<enum FACET_COLOR>
{
  TSBaseArray<enum FACET_COLOR>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  FACET_COLOR *m_data;
};

/* 3617 */
struct /*VFT*/ TSBaseArray<enum FACET_COLOR>_vtbl
{
  const char *(__thiscall *TSBaseArray<enum FACET_COLOR>::MemFileName)(TSBaseArray<enum FACET_COLOR> *this);
  int (__thiscall *TSBaseArray<enum FACET_COLOR>::MemLineNo)(TSBaseArray<enum FACET_COLOR> *this);
};

/* 3618 */
struct /*VFT*/ TSFixedArray<enum FACET_COLOR>_vtbl
{
  const char *(__thiscall *TSBaseArray<enum FACET_COLOR>::MemFileName)(struct TSFixedArray<enum FACET_COLOR> *this);
  int (__thiscall *TSBaseArray<enum FACET_COLOR>::MemLineNo)(struct TSFixedArray<enum FACET_COLOR> *this);
};

/* 3619 */
struct __cppobj TSFixedArray<enum FACET_COLOR> : TSBaseArray<enum FACET_COLOR>
{
};

/* 3620 */
struct /*VFT*/ TSGrowableArray<enum FACET_COLOR>_vtbl
{
  const char *(__thiscall *TSBaseArray<enum FACET_COLOR>::MemFileName)(struct TSGrowableArray<enum FACET_COLOR> *this);
  int (__thiscall *TSBaseArray<enum FACET_COLOR>::MemLineNo)(struct TSGrowableArray<enum FACET_COLOR> *this);
};

/* 3621 */
struct __cppobj TSGrowableArray<enum FACET_COLOR> : TSFixedArray<enum FACET_COLOR>
{
  unsigned int m_chunk;
};

/* 3622 */
struct ObjDataDescriptor
{
  const char *debugName;
  unsigned int fieldName;
  unsigned int fieldSize;
  unsigned int fieldMirrorType;
  unsigned int fieldMirrorFlags;
};

/* 3623 */
struct __cppobj TSBaseArray<CWalkableSurface>
{
  TSBaseArray<CWalkableSurface>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CWalkableSurface *m_data;
};

/* 3624 */
struct /*VFT*/ TSBaseArray<CWalkableSurface>_vtbl
{
  const char *(__thiscall *TSBaseArray<CWalkableSurface>::MemFileName)(TSBaseArray<CWalkableSurface> *this);
  int (__thiscall *TSBaseArray<CWalkableSurface>::MemLineNo)(TSBaseArray<CWalkableSurface> *this);
};

/* 3625 */
struct __cppobj CWalkableSurface
{
  float closeDist;
  float farDist;
  NTempest::C3Vector firstPtOfContact;
  NTempest::C3Vector lastPtOfContact;
  unsigned int facetId;
  float highestElevation;
};

/* 3626 */
struct /*VFT*/ TSFixedArray<CWalkableSurface>_vtbl
{
  const char *(__thiscall *TSBaseArray<CWalkableSurface>::MemFileName)(struct TSFixedArray<CWalkableSurface> *this);
  int (__thiscall *TSBaseArray<CWalkableSurface>::MemLineNo)(struct TSFixedArray<CWalkableSurface> *this);
};

/* 3627 */
struct __cppobj TSFixedArray<CWalkableSurface> : TSBaseArray<CWalkableSurface>
{
};

/* 3628 */
struct /*VFT*/ TSGrowableArray<CWalkableSurface>_vtbl
{
  const char *(__thiscall *TSBaseArray<CWalkableSurface>::MemFileName)(struct TSGrowableArray<CWalkableSurface> *this);
  int (__thiscall *TSBaseArray<CWalkableSurface>::MemLineNo)(struct TSGrowableArray<CWalkableSurface> *this);
};

/* 3629 */
struct __cppobj TSGrowableArray<CWalkableSurface> : TSFixedArray<CWalkableSurface>
{
  unsigned int m_chunk;
};

/* 3630 */
struct __cppobj CClippedTriangle
{
  NTempest::C3Vector verts[9];
  unsigned int numVerts;
};

/* 3631 */
struct __cppobj CWFacetData
{
  TSGrowableArray<NTempest::CFacet> facets;
  TSGrowableArray<unsigned __int64> gameObjects;
};

/* 3632 */
struct __cppobj CMovement : CMovementData
{
};

/* 3633 */
struct __cppobj __declspec(align(8)) CRedirect
{
  NTempest::C3Vector hitPoint;
  NTempest::C3Vector surfaceNorm[2];
  unsigned __int64 gameObjHit;
  unsigned __int8 flags;
};

/* 3634 */
struct __cppobj CMoveState
{
  NTempest::C3Vector position;
  float facing;
  float pitch;
  unsigned int moveFlags;
  NTempest::C3Vector anchorPosition;
  float anchorFacing;
  float anchorPitch;
  unsigned int moveStartTime;
  NTempest::C3Vector direction;
  NTempest::C2Vector direction2d;
  float cosAnchorPitch;
  float sinAnchorPitch;
  NTempest::C3Vector reDirection;
  unsigned int fallStartTime;
  float fallStartElevation;
  float jumpVelocity;
};

/* 3635 */
struct __cppobj TSList<CMovementData,TSGetExplicitLink<CMovementData> >
{
  int m_linkoffset;
  TSLink<CMovementData> m_terminator;
};

/* 3636 */
struct __cppobj TSExplicitList<CMovementData,0> : TSList<CMovementData,TSGetExplicitLink<CMovementData> >
{
};

/* 3637 */
struct __cppobj TSLink<CPlayerMoveEvent>
{
  TSLink<CPlayerMoveEvent> *m_prevlink;
  CPlayerMoveEvent *m_next;
};

/* 3638 */
struct __cppobj TSLinkedNode<CPlayerMoveEvent>
{
  TSLink<CPlayerMoveEvent> m_link;
};

/* 3639 */
struct __cppobj CPlayerMoveEvent : TSLinkedNode<CPlayerMoveEvent>
{
  unsigned int timeStamp;
  PLAYER_MOVE_EVT eventType;
  unsigned int memHandle;
  float facing;
};

/* 3640 */
struct __cppobj TSList<CPlayerMoveEvent,TSGetLink<CPlayerMoveEvent> >
{
  int m_linkoffset;
  TSLink<CPlayerMoveEvent> m_terminator;
};

/* 3641 */
struct __cppobj CPlayerMoveQueue
{
  TSList<CPlayerMoveEvent,TSGetLink<CPlayerMoveEvent> > m_events;
};

/* 3642 */
struct __cppobj CMovementGlobals
{
  char logFileName[260];
  _iobuf *movementLog;
  _iobuf *fallingLog;
  TSExplicitList<CMovementData,0> movers;
  int numMovers;
  unsigned __int32 ignoreObstacles : 1;
  CMovement *currentLoading;
  CMovement *m_localMover;
  CPlayerMoveQueue m_localMoveQueue;
  unsigned int m_lastUpdateTime;
};

/* 3643 */
struct __cppobj __declspec(align(8)) CGNamePlateFrame : CSimpleButton
{
  unsigned __int64 m_unit;
  CSimpleTexture *m_highlight;
  CSimpleFontString *m_nameFrame;
  CGSimpleHealthBar *m_healthBar;
};

/* 3644 */
struct __cppobj __declspec(align(8)) CGSimpleHealthBar : CSimpleStatusBar
{
  unsigned __int64 m_unitGUID;
  int m_scaleColor;
};

/* 3645 */
struct /*VFT*/ CGSimpleHealthBar_vtbl
{
  void (__thiscall *CGSimpleHealthBar::SetStatusBarColor)(CGSimpleHealthBar *this, const NTempest::CImVector *);
  const char *(__thiscall *GetName)(struct CGSimpleHealthBar *this);
  _BYTE gap8[4];
  void (__thiscall *CSimpleFrame::DelayedDelete)(struct CGSimpleHealthBar *this);
  void (__thiscall *CSimpleFrame::PreLoadXML)(struct CGSimpleHealthBar *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::LoadXML_Scripts)(struct CGSimpleHealthBar *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::PostLoadXML)(struct CGSimpleHealthBar *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::SetAlpha)(struct CGSimpleHealthBar *this, unsigned __int8);
  int (__thiscall *CSimpleFrame::FrameDefPostInitialize)(struct CGSimpleHealthBar *this, unsigned int, void *);
  int (__thiscall *CSimpleFrame::TestHitRect)(struct CGSimpleHealthBar *this, const NTempest::C2Vector *);
  void (__thiscall *CSimpleFrame::OnLayerShow)(struct CGSimpleHealthBar *this);
  void (__thiscall *CSimpleFrame::OnLayerHide)(struct CGSimpleHealthBar *this);
  void (__thiscall *CSimpleFrame::OnLayerUpdate)(struct CGSimpleHealthBar *this, float);
  int (__thiscall *CSimpleFrame::OnLayerTrackUpdate)(struct CGSimpleHealthBar *this, const CMouseEvent *);
  _BYTE gap38[4];
  void (__thiscall *CSimpleFrame::OnFrameRender)(struct CGSimpleHealthBar *this, CRenderBatch *, unsigned int);
  _BYTE gap40[4];
  void (__thiscall *CSimpleFrame::OnLayerCursorEnter)(struct CGSimpleHealthBar *this);
  void (__thiscall *CSimpleFrame::OnLayerCursorExit)(struct CGSimpleHealthBar *this);
  int (__thiscall *CSimpleFrame::OnLayerIme)(struct CGSimpleHealthBar *this, CImeEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDownRepeat)(struct CGSimpleHealthBar *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerChar)(struct CGSimpleHealthBar *this, CCharEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDown)(struct CGSimpleHealthBar *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyUp)(struct CGSimpleHealthBar *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseDown)(struct CGSimpleHealthBar *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseUp)(struct CGSimpleHealthBar *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseWheel)(struct CGSimpleHealthBar *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseMoveRelative)(struct CGSimpleHealthBar *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStart)(struct CGSimpleHealthBar *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStop)(struct CGSimpleHealthBar *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnReceiveDrag)(struct CGSimpleHealthBar *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::LockHighlight)(struct CGSimpleHealthBar *this, int);
  int (__thiscall *CSimpleFrame::HideThis)(struct CGSimpleHealthBar *this);
  int (__thiscall *CSimpleFrame::ShowThis)(struct CGSimpleHealthBar *this);
  void (__thiscall *CSimpleFrame::ClearChildrenFromSimpleRegistry)(struct CGSimpleHealthBar *this);
  void (__thiscall *CSimpleStatusBar::SetValue)(struct CGSimpleHealthBar *this, float);
  void (__thiscall *CSimpleStatusBar::SetStatusBarColor)(struct CGSimpleHealthBar *this, const NTempest::CImVector *);
  float (__thiscall *CSimpleStatusBar::GetAnimValue)(struct CGSimpleHealthBar *this);
};

/* 3646 */
struct /*VFT*/ CGNamePlateFrame_vtbl
{
  void (__thiscall *~CGNamePlateFrame)(CGNamePlateFrame *this);
  const char *(__thiscall *GetName)(struct CGNamePlateFrame *this);
  _BYTE gap8[4];
  void (__thiscall *CSimpleFrame::DelayedDelete)(struct CGNamePlateFrame *this);
  void (__thiscall *CSimpleFrame::PreLoadXML)(struct CGNamePlateFrame *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::LoadXML_Scripts)(struct CGNamePlateFrame *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::PostLoadXML)(struct CGNamePlateFrame *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::SetAlpha)(struct CGNamePlateFrame *this, unsigned __int8);
  int (__thiscall *CSimpleFrame::FrameDefPostInitialize)(struct CGNamePlateFrame *this, unsigned int, void *);
  int (__thiscall *CSimpleFrame::TestHitRect)(struct CGNamePlateFrame *this, const NTempest::C2Vector *);
  void (__thiscall *CSimpleFrame::OnLayerShow)(struct CGNamePlateFrame *this);
  void (__thiscall *CSimpleFrame::OnLayerHide)(struct CGNamePlateFrame *this);
  void (__thiscall *CSimpleFrame::OnLayerUpdate)(struct CGNamePlateFrame *this, float);
  int (__thiscall *CSimpleFrame::OnLayerTrackUpdate)(struct CGNamePlateFrame *this, const CMouseEvent *);
  _BYTE gap38[4];
  void (__thiscall *CSimpleFrame::OnFrameRender)(struct CGNamePlateFrame *this, CRenderBatch *, unsigned int);
  _BYTE gap40[4];
  void (__thiscall *CSimpleFrame::OnLayerCursorEnter)(struct CGNamePlateFrame *this);
  void (__thiscall *CSimpleFrame::OnLayerCursorExit)(struct CGNamePlateFrame *this);
  int (__thiscall *CSimpleFrame::OnLayerIme)(struct CGNamePlateFrame *this, CImeEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDownRepeat)(struct CGNamePlateFrame *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerChar)(struct CGNamePlateFrame *this, CCharEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDown)(struct CGNamePlateFrame *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyUp)(struct CGNamePlateFrame *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseDown)(struct CGNamePlateFrame *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseUp)(struct CGNamePlateFrame *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseWheel)(struct CGNamePlateFrame *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseMoveRelative)(struct CGNamePlateFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStart)(struct CGNamePlateFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStop)(struct CGNamePlateFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnReceiveDrag)(struct CGNamePlateFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::LockHighlight)(struct CGNamePlateFrame *this, int);
  int (__thiscall *CSimpleFrame::HideThis)(struct CGNamePlateFrame *this);
  int (__thiscall *CSimpleFrame::ShowThis)(struct CGNamePlateFrame *this);
  void (__thiscall *CSimpleFrame::ClearChildrenFromSimpleRegistry)(struct CGNamePlateFrame *this);
  void (__thiscall *CSimpleButton::Enable)(struct CGNamePlateFrame *this, int);
  void (__thiscall *CSimpleButton::OnClick)(struct CGNamePlateFrame *this, MOUSEBUTTON);
  void (__thiscall *CSimpleButton::SetButtonState)(struct CGNamePlateFrame *this, CSimpleButtonState, int);
};

/* 3647 */
struct __cppobj TSLink<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH>
{
  TSLink<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH> *m_prevlink;
  DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH *m_next;
};

/* 3649 */
struct __cppobj TSHashObject<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,CHashKeyGUID>
{
  unsigned int m_hashval;
  TSLink<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH> m_linktoslot;
  TSLink<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH> m_linktofull;
  CHashKeyGUID m_key;
};

/* 3650 */
struct __cppobj NameCache
{
  char m_name[48];
  unsigned __int64 m_guid;
  unsigned int m_race;
  unsigned int m_sex;
  unsigned __int8 m_temp;
  unsigned int m_class;
};

/* 3648 */
struct __cppobj __declspec(align(8)) DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH : TSHashObject<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,CHashKeyGUID>
{
  NameCache m_record;
  unsigned __int64 m_dbkey;
  unsigned __int8 m_haveData;
  TSList<DBCACHECALLBACK,TSGetLink<DBCACHECALLBACK> > m_callbacks;
  unsigned __int8 m_temp;
};

/* 3652 */
struct __cppobj TSList<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,TSGetExplicitLink<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH> >
{
  int m_linkoffset;
  TSLink<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH> m_terminator;
};

/* 3653 */
struct __cppobj TSExplicitList<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,-572662307> : TSList<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,TSGetExplicitLink<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH> >
{
};

/* 3655 */
struct __cppobj TSBaseArray<TSExplicitList<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,-572662307> >
{
  TSBaseArray<TSExplicitList<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,-572662307> *m_data;
};

/* 3658 */
struct __cppobj TSFixedArray<TSExplicitList<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,-572662307> > : TSBaseArray<TSExplicitList<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,-572662307> >
{
};

/* 3660 */
struct __cppobj TSGrowableArray<TSExplicitList<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,-572662307> > : TSFixedArray<TSExplicitList<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,-572662307> >
{
  unsigned int m_chunk;
};

/* 3651 */
struct __cppobj TSHashTable<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,CHashKeyGUID>
{
  TSHashTable<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,CHashKeyGUID>_vtbl *__vftable /*VFT*/;
  TSExplicitList<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 3654 */
struct /*VFT*/ TSHashTable<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,CHashKeyGUID>_vtbl
{
  void (__thiscall *TSHashTable<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,CHashKeyGUID>::InternalDelete)(TSHashTable<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,CHashKeyGUID> *this, DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH *);
  DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH *(__thiscall *TSHashTable<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,CHashKeyGUID>::InternalNew)(TSHashTable<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,CHashKeyGUID> *this, TSExplicitList<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,CHashKeyGUID>)(TSHashTable<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,CHashKeyGUID> *this);
  void (__thiscall *TSHashTable<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,CHashKeyGUID>::Destroy)(TSHashTable<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,CHashKeyGUID> *this);
};

/* 3656 */
struct /*VFT*/ TSBaseArray<TSExplicitList<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,-572662307> > *this);
};

/* 3657 */
struct /*VFT*/ TSFixedArray<TSExplicitList<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,-572662307> > *this);
};

/* 3659 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,-572662307> > *this);
};

/* 3661 */
struct __cppobj __declspec(align(4)) DBCache<NameCache,unsigned __int64,CHashKeyGUID>
{
  TSHashTable<DBCache<NameCache,unsigned __int64,CHashKeyGUID>::DBCACHEHASH,CHashKeyGUID> m_table;
  unsigned int m_fileTag;
  const char *m_fileName;
  NETMESSAGE m_singleQueryMsg;
  NETMESSAGE m_multiQueryMsg;
  unsigned __int8 m_requireGuids;
  unsigned __int8 m_persistent;
};

/* 3662 */
struct __cppobj SpellRadiusRec
{
  int m_ID;
  float m_radius;
  float m_radiusPerLevel;
  float m_radiusMax;
};

/* 3663 */
struct __cppobj WowClientDB<SpellRadiusRec>
{
  SpellRadiusRec *m_records;
  int m_numRecords;
  SpellRadiusRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3664 */
struct __cppobj SpellDurationRec
{
  int m_ID;
  int m_duration;
  int m_durationPerLevel;
  int m_maxDuration;
};

/* 3665 */
struct __cppobj WowClientDB<SpellDurationRec>
{
  SpellDurationRec *m_records;
  int m_numRecords;
  SpellDurationRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3666 */
struct __cppobj SpellRangeRec
{
  int m_ID;
  float m_rangeMin;
  float m_rangeMax;
  int m_flags;
  const char *m_displayName_lang[8];
  int m_displayName_flag;
  const char *m_displayNameShort_lang[8];
  int m_displayNameShort_flag;
};

/* 3667 */
struct __cppobj WowClientDB<SpellRangeRec>
{
  SpellRangeRec *m_records;
  int m_numRecords;
  SpellRangeRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3668 */
struct $BFBA135444C725A18705AEEBF792AE32
{
  float blipSizeScale;
  unsigned int color;
};

/* 3669 */
struct __cppobj QUADINFO
{
  NTempest::C2Vector m_UL;
  NTempest::C2Vector m_LR;
  NTempest::C2Vector m_conversion;
};

/* 3670 */
struct __cppobj QUADDATA
{
  NTempest::C3Vector verts[4];
  NTempest::C2Vector texCoords[4];
  NTempest::C2Vector maskTexCoords[4];
  NTempest::CAaBox aaBox;
  QUADDATA *rLink;
  float sortz;
  HTEXTURE__ *m_texture;
  unsigned int m_flags;
  NTempest::C2iVector m_areaNum;
  unsigned int groupNum;
};

/* 3671 */
struct __cppobj __declspec(align(4)) MinimapTexParams
{
  unsigned __int8 inside;
  CGxTex *texture;
  unsigned __int8 updateTexture;
  float size;
  NTempest::C44Matrix worldRotation;
  NTempest::C44Matrix invMapObjMtx;
  NTempest::C3Vector localCenter;
  NTempest::C3Vector localOffset;
  unsigned __int8 asyncTexWait;
};

/* 3672 */
struct __cppobj TSBaseArray<POIINFO>
{
  TSBaseArray<POIINFO>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  POIINFO *m_data;
};

/* 3673 */
struct /*VFT*/ TSBaseArray<POIINFO>_vtbl
{
  const char *(__thiscall *TSBaseArray<POIINFO>::MemFileName)(TSBaseArray<POIINFO> *this);
  int (__thiscall *TSBaseArray<POIINFO>::MemLineNo)(TSBaseArray<POIINFO> *this);
};

/* 3674 */
struct __cppobj POIINFO
{
  unsigned int icon;
  NTempest::C3Vector vertices[4];
  NTempest::C2Vector position;
  const char *string;
};

/* 3675 */
struct /*VFT*/ TSFixedArray<POIINFO>_vtbl
{
  const char *(__thiscall *TSBaseArray<POIINFO>::MemFileName)(struct TSFixedArray<POIINFO> *this);
  int (__thiscall *TSBaseArray<POIINFO>::MemLineNo)(struct TSFixedArray<POIINFO> *this);
};

/* 3676 */
struct __cppobj TSFixedArray<POIINFO> : TSBaseArray<POIINFO>
{
};

/* 3677 */
struct /*VFT*/ TSGrowableArray<POIINFO>_vtbl
{
  const char *(__thiscall *TSBaseArray<POIINFO>::MemFileName)(struct TSGrowableArray<POIINFO> *this);
  int (__thiscall *TSBaseArray<POIINFO>::MemLineNo)(struct TSGrowableArray<POIINFO> *this);
};

/* 3678 */
struct __cppobj TSGrowableArray<POIINFO> : TSFixedArray<POIINFO>
{
  unsigned int m_chunk;
};

/* 3679 */
struct __cppobj TSBaseArray<POIDIRECTIONDATA>
{
  TSBaseArray<POIDIRECTIONDATA>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  POIDIRECTIONDATA *m_data;
};

/* 3680 */
struct /*VFT*/ TSBaseArray<POIDIRECTIONDATA>_vtbl
{
  const char *(__thiscall *TSBaseArray<POIDIRECTIONDATA>::MemFileName)(TSBaseArray<POIDIRECTIONDATA> *this);
  int (__thiscall *TSBaseArray<POIDIRECTIONDATA>::MemLineNo)(TSBaseArray<POIDIRECTIONDATA> *this);
};

/* 3681 */
struct POIDIRECTIONDATA
{
  char POIName[64];
  float rotation;
};

/* 3682 */
struct /*VFT*/ TSFixedArray<POIDIRECTIONDATA>_vtbl
{
  const char *(__thiscall *TSBaseArray<POIDIRECTIONDATA>::MemFileName)(struct TSFixedArray<POIDIRECTIONDATA> *this);
  int (__thiscall *TSBaseArray<POIDIRECTIONDATA>::MemLineNo)(struct TSFixedArray<POIDIRECTIONDATA> *this);
};

/* 3683 */
struct __cppobj TSFixedArray<POIDIRECTIONDATA> : TSBaseArray<POIDIRECTIONDATA>
{
};

/* 3684 */
struct /*VFT*/ TSGrowableArray<POIDIRECTIONDATA>_vtbl
{
  const char *(__thiscall *TSBaseArray<POIDIRECTIONDATA>::MemFileName)(struct TSGrowableArray<POIDIRECTIONDATA> *this);
  int (__thiscall *TSBaseArray<POIDIRECTIONDATA>::MemLineNo)(struct TSGrowableArray<POIDIRECTIONDATA> *this);
};

/* 3685 */
struct __cppobj TSGrowableArray<POIDIRECTIONDATA> : TSFixedArray<POIDIRECTIONDATA>
{
  unsigned int m_chunk;
};

/* 3686 */
struct __cppobj TSBaseArray<OBJINFO>
{
  TSBaseArray<OBJINFO>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  OBJINFO *m_data;
};

/* 3687 */
struct /*VFT*/ TSBaseArray<OBJINFO>_vtbl
{
  const char *(__thiscall *TSBaseArray<OBJINFO>::MemFileName)(TSBaseArray<OBJINFO> *this);
  int (__thiscall *TSBaseArray<OBJINFO>::MemLineNo)(TSBaseArray<OBJINFO> *this);
};

/* 3688 */
struct __cppobj OBJINFO
{
  unsigned __int64 object;
  NTempest::C2Vector position;
};

/* 3689 */
struct /*VFT*/ TSFixedArray<OBJINFO>_vtbl
{
  const char *(__thiscall *TSBaseArray<OBJINFO>::MemFileName)(struct TSFixedArray<OBJINFO> *this);
  int (__thiscall *TSBaseArray<OBJINFO>::MemLineNo)(struct TSFixedArray<OBJINFO> *this);
};

/* 3690 */
struct __cppobj TSFixedArray<OBJINFO> : TSBaseArray<OBJINFO>
{
};

/* 3691 */
struct /*VFT*/ TSGrowableArray<OBJINFO>_vtbl
{
  const char *(__thiscall *TSBaseArray<OBJINFO>::MemFileName)(struct TSGrowableArray<OBJINFO> *this);
  int (__thiscall *TSBaseArray<OBJINFO>::MemLineNo)(struct TSGrowableArray<OBJINFO> *this);
};

/* 3692 */
struct __cppobj TSGrowableArray<OBJINFO> : TSFixedArray<OBJINFO>
{
  unsigned int m_chunk;
};

/* 3693 */
struct __cppobj __declspec(align(8)) PARTYMEMBERINFO
{
  unsigned __int64 guid;
  char name[48];
  int showArrow;
  int showBlip;
  NTempest::C2Vector position;
  float rotation;
};

/* 3694 */
struct __cppobj CGMinimapFrame : CSimpleFrame
{
  CSimpleFrame *m_tooltip;
  CSimpleFontString *m_tooltipText;
  CSimpleModel *m_rotatingArrowFrame[3];
  CSimpleModel *m_rotatingPartyFrame[5];
  CSimpleModel *m_playerArrowFrame;
  float m_lastFacing;
  unsigned int m_lastBlipUpdate;
};

/* 3695 */
struct /*VFT*/ CGMinimapFrame_vtbl
{
  void (__thiscall *~CGMinimapFrame)(CGMinimapFrame *this);
  const char *(__thiscall *GetName)(struct CGMinimapFrame *this);
  _BYTE gap8[4];
  void (__thiscall *CSimpleFrame::DelayedDelete)(struct CGMinimapFrame *this);
  void (__thiscall *CSimpleFrame::PreLoadXML)(struct CGMinimapFrame *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::LoadXML_Scripts)(struct CGMinimapFrame *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::PostLoadXML)(struct CGMinimapFrame *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::SetAlpha)(struct CGMinimapFrame *this, unsigned __int8);
  int (__thiscall *CSimpleFrame::FrameDefPostInitialize)(struct CGMinimapFrame *this, unsigned int, void *);
  int (__thiscall *CSimpleFrame::TestHitRect)(struct CGMinimapFrame *this, const NTempest::C2Vector *);
  void (__thiscall *CSimpleFrame::OnLayerShow)(struct CGMinimapFrame *this);
  void (__thiscall *CSimpleFrame::OnLayerHide)(struct CGMinimapFrame *this);
  void (__thiscall *CSimpleFrame::OnLayerUpdate)(struct CGMinimapFrame *this, float);
  int (__thiscall *CSimpleFrame::OnLayerTrackUpdate)(struct CGMinimapFrame *this, const CMouseEvent *);
  _BYTE gap38[4];
  void (__thiscall *CSimpleFrame::OnFrameRender)(struct CGMinimapFrame *this, CRenderBatch *, unsigned int);
  _BYTE gap40[4];
  void (__thiscall *CSimpleFrame::OnLayerCursorEnter)(struct CGMinimapFrame *this);
  void (__thiscall *CSimpleFrame::OnLayerCursorExit)(struct CGMinimapFrame *this);
  int (__thiscall *CSimpleFrame::OnLayerIme)(struct CGMinimapFrame *this, CImeEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDownRepeat)(struct CGMinimapFrame *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerChar)(struct CGMinimapFrame *this, CCharEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDown)(struct CGMinimapFrame *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyUp)(struct CGMinimapFrame *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseDown)(struct CGMinimapFrame *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseUp)(struct CGMinimapFrame *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseWheel)(struct CGMinimapFrame *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseMoveRelative)(struct CGMinimapFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStart)(struct CGMinimapFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStop)(struct CGMinimapFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnReceiveDrag)(struct CGMinimapFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::LockHighlight)(struct CGMinimapFrame *this, int);
  int (__thiscall *CSimpleFrame::HideThis)(struct CGMinimapFrame *this);
  int (__thiscall *CSimpleFrame::ShowThis)(struct CGMinimapFrame *this);
  void (__thiscall *CSimpleFrame::ClearChildrenFromSimpleRegistry)(struct CGMinimapFrame *this);
};

/* 3696 */
struct __cppobj CurrentLight
{
  NTempest::CImVector DirectColor;
  NTempest::CImVector AmbientColor;
  NTempest::CImVector SkyArray[6];
  NTempest::CImVector CloudArray[5];
  NTempest::CImVector WaterArray[4];
  float FogEnd;
  float FogStartScalar;
  NTempest::CImVector ShadowOpacity;
  float Darkness;
  float CloudData[4];
};

/* 3697 */
struct __cppobj DNFogInfo
{
  NTempest::CImVector color;
  float start;
  float end;
};

/* 3698 */
struct __cppobj DNLightInfo
{
  NTempest::C3Vector dir;
  NTempest::CImVector dirColor;
  NTempest::CImVector ambColor;
  NTempest::CImVector windowDirColor;
  NTempest::CImVector windowAmbColor;
  NTempest::C4Vector shaderShadowColor;
};

/* 3699 */
struct __cppobj DNInfo
{
  unsigned int time;
  float dayProgression;
  float day;
  NTempest::C3Vector playerPos;
  NTempest::C3Vector cameraPos;
  NTempest::C3Vector cameraDir;
  float faceAngle;
  float nearClipScaled;
  float farClip;
  float elapsedSec;
  float stormPercentage;
  unsigned __int8 eclipseAmount;
  NTempest::CImVector eclipseColor;
  CurrentLight light;
  DNFogInfo fogInfo;
  unsigned __int8 intFog;
  DNFogInfo intFogInfo;
  DNLightInfo lightInfo;
  NTempest::CImVector shadowClr;
  float billbRescale;
  int showSky;
  CGxTex *cloudTex;
  NTempest::C2Vector sunPosTexPt;
  float sunMoonPath;
  float sidn;
  float unitSelect;
};

/* 3700 */
struct __cppobj TSBaseArray<AreaPOIRec const *>
{
  TSBaseArray<AreaPOIRec const *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  const AreaPOIRec **m_data;
};

/* 3701 */
struct /*VFT*/ TSBaseArray<AreaPOIRec const *>_vtbl
{
  const char *(__thiscall *TSBaseArray<AreaPOIRec const *>::MemFileName)(TSBaseArray<AreaPOIRec const *> *this);
  int (__thiscall *TSBaseArray<AreaPOIRec const *>::MemLineNo)(TSBaseArray<AreaPOIRec const *> *this);
};

/* 3702 */
const struct __cppobj AreaPOIRec
{
  int m_ID;
  int m_importance;
  int m_icon;
  int m_factionID;
  float m_x;
  float m_y;
  float m_z;
  int m_continentID;
  int m_flags;
  const char *m_name_lang[8];
  int m_name_flag;
};

/* 3703 */
struct /*VFT*/ TSFixedArray<AreaPOIRec const *>_vtbl
{
  const char *(__thiscall *TSBaseArray<AreaPOIRec const *>::MemFileName)(struct TSFixedArray<AreaPOIRec const *> *this);
  int (__thiscall *TSBaseArray<AreaPOIRec const *>::MemLineNo)(struct TSFixedArray<AreaPOIRec const *> *this);
};

/* 3704 */
struct __cppobj TSFixedArray<AreaPOIRec const *> : TSBaseArray<AreaPOIRec const *>
{
};

/* 3705 */
struct /*VFT*/ TSGrowableArray<AreaPOIRec const *>_vtbl
{
  const char *(__thiscall *TSBaseArray<AreaPOIRec const *>::MemFileName)(struct TSGrowableArray<AreaPOIRec const *> *this);
  int (__thiscall *TSBaseArray<AreaPOIRec const *>::MemLineNo)(struct TSGrowableArray<AreaPOIRec const *> *this);
};

/* 3706 */
struct __cppobj TSGrowableArray<AreaPOIRec const *> : TSFixedArray<AreaPOIRec const *>
{
  unsigned int m_chunk;
};

/* 3707 */
struct __cppobj MINIMAPINFO
{
  CGPlayer_C *player;
  NTempest::C3Vector currentPos;
  float radius;
  float layoutScale;
};

/* 3708 */
struct __cppobj __declspec(align(8)) CGCharacterModelBase : CSimpleModel
{
  unsigned __int64 m_unit;
  float m_rotationScale;
};

/* 3709 */
struct /*VFT*/ CGCharacterModelBase_vtbl
{
  int (__thiscall *CGCharacterModelBase::LookupScriptMethod)(CGCharacterModelBase *this, struct lua_State *, const char *);
  const char *(__thiscall *GetName)(struct CGCharacterModelBase *this);
  _BYTE gap8[4];
  void (__thiscall *CSimpleFrame::DelayedDelete)(struct CGCharacterModelBase *this);
  void (__thiscall *CSimpleFrame::PreLoadXML)(struct CGCharacterModelBase *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::LoadXML_Scripts)(struct CGCharacterModelBase *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::PostLoadXML)(struct CGCharacterModelBase *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::SetAlpha)(struct CGCharacterModelBase *this, unsigned __int8);
  int (__thiscall *CSimpleFrame::FrameDefPostInitialize)(struct CGCharacterModelBase *this, unsigned int, void *);
  int (__thiscall *CSimpleFrame::TestHitRect)(struct CGCharacterModelBase *this, const NTempest::C2Vector *);
  void (__thiscall *CSimpleFrame::OnLayerShow)(struct CGCharacterModelBase *this);
  void (__thiscall *CSimpleFrame::OnLayerHide)(struct CGCharacterModelBase *this);
  void (__thiscall *CSimpleFrame::OnLayerUpdate)(struct CGCharacterModelBase *this, float);
  int (__thiscall *CSimpleFrame::OnLayerTrackUpdate)(struct CGCharacterModelBase *this, const CMouseEvent *);
  _BYTE gap38[4];
  void (__thiscall *CSimpleFrame::OnFrameRender)(struct CGCharacterModelBase *this, CRenderBatch *, unsigned int);
  _BYTE gap40[4];
  void (__thiscall *CSimpleFrame::OnLayerCursorEnter)(struct CGCharacterModelBase *this);
  void (__thiscall *CSimpleFrame::OnLayerCursorExit)(struct CGCharacterModelBase *this);
  int (__thiscall *CSimpleFrame::OnLayerIme)(struct CGCharacterModelBase *this, CImeEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDownRepeat)(struct CGCharacterModelBase *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerChar)(struct CGCharacterModelBase *this, CCharEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDown)(struct CGCharacterModelBase *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyUp)(struct CGCharacterModelBase *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseDown)(struct CGCharacterModelBase *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseUp)(struct CGCharacterModelBase *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseWheel)(struct CGCharacterModelBase *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseMoveRelative)(struct CGCharacterModelBase *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStart)(struct CGCharacterModelBase *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStop)(struct CGCharacterModelBase *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnReceiveDrag)(struct CGCharacterModelBase *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::LockHighlight)(struct CGCharacterModelBase *this, int);
  int (__thiscall *CSimpleFrame::HideThis)(struct CGCharacterModelBase *this);
  int (__thiscall *CSimpleFrame::ShowThis)(struct CGCharacterModelBase *this);
  void (__thiscall *CSimpleFrame::ClearChildrenFromSimpleRegistry)(struct CGCharacterModelBase *this);
  void (__thiscall *CSimpleModel::UpdateModel)(struct CGCharacterModelBase *this);
  void (__thiscall *CGCharacterModelBase::InitializeModel)(CGCharacterModelBase *this, HMODEL__ *);
  unsigned __int8 (__thiscall *CGCharacterModelBase::GetUniquePaperDollModel)(CGCharacterModelBase *this);
};

/* 3710 */
struct __cppobj CGTabardModelFrame : CGCharacterModelBase
{
  int m_variations[5];
  HTEXCOMPONENT__ *m_charComponent;
};

/* 3711 */
struct /*VFT*/ CGTabardModelFrame_vtbl
{
  int (__thiscall *CGTabardModelFrame::LookupScriptMethod)(CGTabardModelFrame *this, struct lua_State *, const char *);
  const char *(__thiscall *GetName)(struct CGTabardModelFrame *this);
  _BYTE gap8[4];
  void (__thiscall *CSimpleFrame::DelayedDelete)(struct CGTabardModelFrame *this);
  void (__thiscall *CSimpleFrame::PreLoadXML)(struct CGTabardModelFrame *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::LoadXML_Scripts)(struct CGTabardModelFrame *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::PostLoadXML)(struct CGTabardModelFrame *this, const XMLNode *, CStatus *);
  void (__thiscall *CSimpleFrame::SetAlpha)(struct CGTabardModelFrame *this, unsigned __int8);
  int (__thiscall *CSimpleFrame::FrameDefPostInitialize)(struct CGTabardModelFrame *this, unsigned int, void *);
  int (__thiscall *CSimpleFrame::TestHitRect)(struct CGTabardModelFrame *this, const NTempest::C2Vector *);
  void (__thiscall *CSimpleFrame::OnLayerShow)(struct CGTabardModelFrame *this);
  void (__thiscall *CSimpleFrame::OnLayerHide)(struct CGTabardModelFrame *this);
  void (__thiscall *CSimpleFrame::OnLayerUpdate)(struct CGTabardModelFrame *this, float);
  int (__thiscall *CSimpleFrame::OnLayerTrackUpdate)(struct CGTabardModelFrame *this, const CMouseEvent *);
  _BYTE gap38[4];
  void (__thiscall *CSimpleFrame::OnFrameRender)(struct CGTabardModelFrame *this, CRenderBatch *, unsigned int);
  _BYTE gap40[4];
  void (__thiscall *CSimpleFrame::OnLayerCursorEnter)(struct CGTabardModelFrame *this);
  void (__thiscall *CSimpleFrame::OnLayerCursorExit)(struct CGTabardModelFrame *this);
  int (__thiscall *CSimpleFrame::OnLayerIme)(struct CGTabardModelFrame *this, CImeEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDownRepeat)(struct CGTabardModelFrame *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerChar)(struct CGTabardModelFrame *this, CCharEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyDown)(struct CGTabardModelFrame *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerKeyUp)(struct CGTabardModelFrame *this, CKeyEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseDown)(struct CGTabardModelFrame *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseUp)(struct CGTabardModelFrame *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseWheel)(struct CGTabardModelFrame *this, CMouseEvent *);
  int (__thiscall *CSimpleFrame::OnLayerMouseMoveRelative)(struct CGTabardModelFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStart)(struct CGTabardModelFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnDragStop)(struct CGTabardModelFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::OnReceiveDrag)(struct CGTabardModelFrame *this, CMouseEvent *);
  void (__thiscall *CSimpleFrame::LockHighlight)(struct CGTabardModelFrame *this, int);
  int (__thiscall *CSimpleFrame::HideThis)(struct CGTabardModelFrame *this);
  int (__thiscall *CSimpleFrame::ShowThis)(struct CGTabardModelFrame *this);
  void (__thiscall *CSimpleFrame::ClearChildrenFromSimpleRegistry)(struct CGTabardModelFrame *this);
  void (__thiscall *CSimpleModel::UpdateModel)(struct CGTabardModelFrame *this);
  void (__thiscall *CGCharacterModelBase::InitializeModel)(struct CGTabardModelFrame *this, HMODEL__ *);
  unsigned __int8 (__thiscall *CGCharacterModelBase::GetUniquePaperDollModel)(struct CGTabardModelFrame *this);
};

/* 3712 */
struct QuestInfo
{
  int id;
  int level;
  char name[64];
  int turnIn;
};

/* 3713 */
struct QuestItemInfo
{
  int rewardItemID;
  int rewardDisplayID;
  int rewardAmount;
  int choiceItemID;
  int choiceDisplayID;
  int choiceAmount;
  int requiredItemID;
  int requiredDisplayID;
  int requiredAmount;
};

/* 3714 */
struct __cppobj TSLink<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH>
{
  TSLink<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH> *m_prevlink;
  DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH *m_next;
};

/* 3716 */
struct __cppobj __declspec(align(4)) TSHashObject<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
{
  unsigned int m_hashval;
  TSLink<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH> m_linktoslot;
  TSLink<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH> m_linktofull;
  HASHKEY_INT m_key;
};

/* 3715 */
struct __cppobj __declspec(align(4)) DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH : TSHashObject<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
{
  ItemStats_C m_record;
  int m_dbkey;
  unsigned __int8 m_haveData;
  TSList<DBCACHECALLBACK,TSGetLink<DBCACHECALLBACK> > m_callbacks;
  unsigned __int8 m_temp;
};

/* 3718 */
struct __cppobj TSList<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,TSGetExplicitLink<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH> >
{
  int m_linkoffset;
  TSLink<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH> m_terminator;
};

/* 3719 */
struct __cppobj TSExplicitList<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> : TSList<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,TSGetExplicitLink<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH> >
{
};

/* 3721 */
struct __cppobj TSBaseArray<TSExplicitList<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >
{
  TSBaseArray<TSExplicitList<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> *m_data;
};

/* 3724 */
struct __cppobj TSFixedArray<TSExplicitList<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > : TSBaseArray<TSExplicitList<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >
{
};

/* 3726 */
struct __cppobj TSGrowableArray<TSExplicitList<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > : TSFixedArray<TSExplicitList<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >
{
  unsigned int m_chunk;
};

/* 3717 */
struct __cppobj TSHashTable<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
{
  TSHashTable<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>_vtbl *__vftable /*VFT*/;
  TSExplicitList<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 3720 */
struct /*VFT*/ TSHashTable<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>_vtbl
{
  void (__thiscall *TSHashTable<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>::InternalDelete)(TSHashTable<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this, DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH *);
  DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH *(__thiscall *TSHashTable<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>::InternalNew)(TSHashTable<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this, TSExplicitList<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>)(TSHashTable<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this);
  void (__thiscall *TSHashTable<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>::Destroy)(TSHashTable<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this);
};

/* 3722 */
struct /*VFT*/ TSBaseArray<TSExplicitList<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
};

/* 3723 */
struct /*VFT*/ TSFixedArray<TSExplicitList<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
};

/* 3725 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
};

/* 3727 */
struct __cppobj __declspec(align(4)) DBCache<ItemStats_C,int,HASHKEY_INT>
{
  TSHashTable<DBCache<ItemStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> m_table;
  unsigned int m_fileTag;
  const char *m_fileName;
  NETMESSAGE m_singleQueryMsg;
  NETMESSAGE m_multiQueryMsg;
  unsigned __int8 m_requireGuids;
  unsigned __int8 m_persistent;
};

/* 3728 */
struct __cppobj PageTextMaterialRec
{
  int m_ID;
  const char *m_name;
};

/* 3729 */
struct __cppobj WowClientDB<PageTextMaterialRec>
{
  PageTextMaterialRec *m_records;
  int m_numRecords;
  PageTextMaterialRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3730 */
struct __cppobj CGQuestInfo
{
};

/* 3731 */
struct __cppobj SkillLineRec
{
  int m_ID;
  int m_raceMask;
  int m_classMask;
  int m_excludeRace;
  int m_excludeClass;
  int m_categoryID;
  int m_skillType;
  int m_minCharLevel;
  int m_maxRank;
  int m_abandonable;
  const char *m_displayName_lang[8];
  int m_displayName_flag;
};

/* 3732 */
struct __cppobj WowClientDB<SkillLineRec>
{
  SkillLineRec *m_records;
  int m_numRecords;
  SkillLineRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3733 */
struct __cppobj ItemClassRec
{
  int m_classID;
  int m_subclassMapID;
  int m_flags;
  const char *m_className_lang[8];
  int m_className_flag;
  int m_generatedID;
};

/* 3734 */
struct __cppobj WowClientDB<ItemClassRec>
{
  ItemClassRec *m_records;
  int m_numRecords;
  ItemClassRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3735 */
struct __cppobj TSBaseArray<TradeSkillInfo *>
{
  TSBaseArray<TradeSkillInfo *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TradeSkillInfo **m_data;
};

/* 3736 */
struct /*VFT*/ TSBaseArray<TradeSkillInfo *>_vtbl
{
  const char *(__thiscall *TSBaseArray<TradeSkillInfo *>::MemFileName)(TSBaseArray<TradeSkillInfo *> *this);
  int (__thiscall *TSBaseArray<TradeSkillInfo *>::MemLineNo)(TSBaseArray<TradeSkillInfo *> *this);
};

/* 3737 */
struct TradeSkillInfo
{
  int spellID;
  TRADESKILL_CATEGORY category;
  int classID;
  int subClassID;
  int invSlots;
  int itemLevel;
  int numAvailable;
  int enabled;
};

/* 3738 */
struct /*VFT*/ TSFixedArray<TradeSkillInfo *>_vtbl
{
  const char *(__thiscall *TSBaseArray<TradeSkillInfo *>::MemFileName)(struct TSFixedArray<TradeSkillInfo *> *this);
  int (__thiscall *TSBaseArray<TradeSkillInfo *>::MemLineNo)(struct TSFixedArray<TradeSkillInfo *> *this);
};

/* 3739 */
struct __cppobj TSFixedArray<TradeSkillInfo *> : TSBaseArray<TradeSkillInfo *>
{
};

/* 3740 */
struct /*VFT*/ TSGrowableArray<TradeSkillInfo *>_vtbl
{
  const char *(__thiscall *TSBaseArray<TradeSkillInfo *>::MemFileName)(struct TSGrowableArray<TradeSkillInfo *> *this);
  int (__thiscall *TSBaseArray<TradeSkillInfo *>::MemLineNo)(struct TSGrowableArray<TradeSkillInfo *> *this);
};

/* 3741 */
struct __cppobj TSGrowableArray<TradeSkillInfo *> : TSFixedArray<TradeSkillInfo *>
{
  unsigned int m_chunk;
};

/* 3742 */
struct __cppobj ItemSubClassRec
{
  int m_classID;
  int m_subClassID;
  int m_prerequisiteProficiency;
  int m_postrequisiteProficiency;
  int m_flags;
  int m_displayFlags;
  int m_weaponParrySeq;
  int m_weaponReadySeq;
  int m_weaponAttackSeq;
  int m_WeaponSwingSize;
  const char *m_displayName_lang[8];
  int m_displayName_flag;
  const char *m_verboseName_lang[8];
  int m_verboseName_flag;
  int m_generatedID;
};

/* 3743 */
struct __cppobj WowClientDB<ItemSubClassRec>
{
  ItemSubClassRec *m_records;
  int m_numRecords;
  ItemSubClassRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3744 */
struct __cppobj TSBaseArray<TradeSkillSubClassInfo *>
{
  TSBaseArray<TradeSkillSubClassInfo *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TradeSkillSubClassInfo **m_data;
};

/* 3745 */
struct /*VFT*/ TSBaseArray<TradeSkillSubClassInfo *>_vtbl
{
  const char *(__thiscall *TSBaseArray<TradeSkillSubClassInfo *>::MemFileName)(TSBaseArray<TradeSkillSubClassInfo *> *this);
  int (__thiscall *TSBaseArray<TradeSkillSubClassInfo *>::MemLineNo)(TSBaseArray<TradeSkillSubClassInfo *> *this);
};

/* 3746 */
struct TradeSkillSubClassInfo
{
  int classID;
  int subClassID;
  int filteredCount;
  int enabled;
  int collapsed;
};

/* 3747 */
struct /*VFT*/ TSFixedArray<TradeSkillSubClassInfo *>_vtbl
{
  const char *(__thiscall *TSBaseArray<TradeSkillSubClassInfo *>::MemFileName)(struct TSFixedArray<TradeSkillSubClassInfo *> *this);
  int (__thiscall *TSBaseArray<TradeSkillSubClassInfo *>::MemLineNo)(struct TSFixedArray<TradeSkillSubClassInfo *> *this);
};

/* 3748 */
struct __cppobj TSFixedArray<TradeSkillSubClassInfo *> : TSBaseArray<TradeSkillSubClassInfo *>
{
};

/* 3749 */
struct /*VFT*/ TSGrowableArray<TradeSkillSubClassInfo *>_vtbl
{
  const char *(__thiscall *TSBaseArray<TradeSkillSubClassInfo *>::MemFileName)(struct TSGrowableArray<TradeSkillSubClassInfo *> *this);
  int (__thiscall *TSBaseArray<TradeSkillSubClassInfo *>::MemLineNo)(struct TSGrowableArray<TradeSkillSubClassInfo *> *this);
};

/* 3750 */
struct __cppobj TSGrowableArray<TradeSkillSubClassInfo *> : TSFixedArray<TradeSkillSubClassInfo *>
{
  unsigned int m_chunk;
};

/* 3751 */
struct __cppobj SpellFocusObjectRec
{
  int m_ID;
  const char *m_name_lang[8];
  int m_name_flag;
};

/* 3752 */
struct __cppobj WowClientDB<SpellFocusObjectRec>
{
  SpellFocusObjectRec *m_records;
  int m_numRecords;
  SpellFocusObjectRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3753 */
struct __cppobj CGTradeSkillInfo
{
};

/* 3754 */
struct __cppobj SkillLineAbilityRec
{
  int m_ID;
  int m_skillLine;
  int m_spell;
  int m_raceMask;
  int m_classMask;
  int m_excludeRace;
  int m_excludeClass;
  int m_minSkillLineRank;
  int m_supercededBySpell;
  int m_trivialSkillLineRankHigh;
  int m_trivialSkillLineRankLow;
  int m_abandonable;
};

/* 3755 */
struct VendorItem
{
  unsigned int m_muid;
  unsigned int m_itemType;
  unsigned int m_itemDisplayID;
  int m_quantity;
  int m_price;
  int m_durability;
  int m_stackCount;
};

/* 3756 */
struct __cppobj CGMerchantInfo
{
};

/* 3757 */
struct __cppobj __declspec(align(8)) FriendList::Friend
{
  unsigned __int8 m_connected;
  char *m_name;
  unsigned __int64 guid;
  int m_level;
  int m_class;
  int m_area;
};

/* 3758 */
struct __cppobj FriendList
{
  FriendList::Friend m_friends[50];
  unsigned int m_friendNamesPending;
  unsigned __int64 m_selectedFriend;
  unsigned __int64 m_ignore[25];
  unsigned int m_ignoreNamesPending;
  unsigned __int64 m_selectedIgnore;
};

/* 3759 */
struct __cppobj CGTradeInfo
{
};

/* 3760 */
struct TradeItemData
{
  unsigned int entryID;
  unsigned int displayID;
  unsigned int count;
  unsigned int enchantmentID;
  unsigned __int64 creator;
};

/* 3761 */
struct __cppobj CGContainerInfo
{
};

/* 3762 */
struct __cppobj BankBagSlotPricesRec
{
  int m_ID;
  int m_Cost;
};

/* 3763 */
struct __cppobj WowClientDB<BankBagSlotPricesRec>
{
  BankBagSlotPricesRec *m_records;
  int m_numRecords;
  BankBagSlotPricesRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3764 */
struct __cppobj CGBankInfo
{
};

/* 3765 */
struct __cppobj SpellIconRec
{
  int m_ID;
  const char *m_textureFilename;
};

/* 3766 */
struct __cppobj WowClientDB<SpellIconRec>
{
  SpellIconRec *m_records;
  int m_numRecords;
  SpellIconRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3767 */
struct __cppobj TSBaseArray<CraftInfo *>
{
  TSBaseArray<CraftInfo *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CraftInfo **m_data;
};

/* 3768 */
struct /*VFT*/ TSBaseArray<CraftInfo *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CraftInfo *>::MemFileName)(TSBaseArray<CraftInfo *> *this);
  int (__thiscall *TSBaseArray<CraftInfo *>::MemLineNo)(TSBaseArray<CraftInfo *> *this);
};

/* 3769 */
struct CraftInfo
{
  int spellID;
  int skillLine;
  CRAFT_LEVEL_CATEGORY category;
};

/* 3770 */
struct /*VFT*/ TSFixedArray<CraftInfo *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CraftInfo *>::MemFileName)(struct TSFixedArray<CraftInfo *> *this);
  int (__thiscall *TSBaseArray<CraftInfo *>::MemLineNo)(struct TSFixedArray<CraftInfo *> *this);
};

/* 3771 */
struct __cppobj TSFixedArray<CraftInfo *> : TSBaseArray<CraftInfo *>
{
};

/* 3772 */
struct /*VFT*/ TSGrowableArray<CraftInfo *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CraftInfo *>::MemFileName)(struct TSGrowableArray<CraftInfo *> *this);
  int (__thiscall *TSBaseArray<CraftInfo *>::MemLineNo)(struct TSGrowableArray<CraftInfo *> *this);
};

/* 3773 */
struct __cppobj TSGrowableArray<CraftInfo *> : TSFixedArray<CraftInfo *>
{
  unsigned int m_chunk;
};

/* 3774 */
struct __cppobj TSBaseArray<CraftSkillLineInfo *>
{
  TSBaseArray<CraftSkillLineInfo *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CraftSkillLineInfo **m_data;
};

/* 3775 */
struct /*VFT*/ TSBaseArray<CraftSkillLineInfo *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CraftSkillLineInfo *>::MemFileName)(TSBaseArray<CraftSkillLineInfo *> *this);
  int (__thiscall *TSBaseArray<CraftSkillLineInfo *>::MemLineNo)(TSBaseArray<CraftSkillLineInfo *> *this);
};

/* 3776 */
struct CraftSkillLineInfo
{
  int skillLine;
  int filteredCount;
  int collapsed;
};

/* 3777 */
struct /*VFT*/ TSFixedArray<CraftSkillLineInfo *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CraftSkillLineInfo *>::MemFileName)(struct TSFixedArray<CraftSkillLineInfo *> *this);
  int (__thiscall *TSBaseArray<CraftSkillLineInfo *>::MemLineNo)(struct TSFixedArray<CraftSkillLineInfo *> *this);
};

/* 3778 */
struct __cppobj TSFixedArray<CraftSkillLineInfo *> : TSBaseArray<CraftSkillLineInfo *>
{
};

/* 3779 */
struct /*VFT*/ TSGrowableArray<CraftSkillLineInfo *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CraftSkillLineInfo *>::MemFileName)(struct TSGrowableArray<CraftSkillLineInfo *> *this);
  int (__thiscall *TSBaseArray<CraftSkillLineInfo *>::MemLineNo)(struct TSGrowableArray<CraftSkillLineInfo *> *this);
};

/* 3780 */
struct __cppobj TSGrowableArray<CraftSkillLineInfo *> : TSFixedArray<CraftSkillLineInfo *>
{
  unsigned int m_chunk;
};

/* 3781 */
struct __cppobj CGCraftInfo
{
};

/* 3782 */
struct __cppobj FactionRec
{
  int m_ID;
  int m_reputationIndex;
  int m_reputationRaceMask[4];
  int m_reputationClassMask[4];
  int m_reputationBase[4];
  const char *m_name_lang[8];
  int m_name_flag;
};

/* 3783 */
struct __cppobj WowClientDB<FactionRec>
{
  FactionRec *m_records;
  int m_numRecords;
  FactionRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3784 */
struct __cppobj CGReputationInfo
{
};

/* 3785 */
struct __cppobj CGTabardCreationFrame
{
};

/* 3786 */
struct PetitionVendorItem
{
  unsigned int m_muid;
  unsigned int m_itemID;
  unsigned int m_itemDisplayID;
  int m_price;
  int m_flags;
};

/* 3787 */
struct __cppobj CGGuildRegistrar
{
};

/* 3788 */
struct __cppobj TSBaseArray<PetitionSignerInfo>
{
  TSBaseArray<PetitionSignerInfo>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  PetitionSignerInfo *m_data;
};

/* 3789 */
struct /*VFT*/ TSBaseArray<PetitionSignerInfo>_vtbl
{
  const char *(__thiscall *TSBaseArray<PetitionSignerInfo>::MemFileName)(TSBaseArray<PetitionSignerInfo> *this);
  int (__thiscall *TSBaseArray<PetitionSignerInfo>::MemLineNo)(TSBaseArray<PetitionSignerInfo> *this);
};

/* 3790 */
struct __declspec(align(8)) PetitionSignerInfo
{
  unsigned __int64 guid;
  int choice;
};

/* 3791 */
struct /*VFT*/ TSFixedArray<PetitionSignerInfo>_vtbl
{
  const char *(__thiscall *TSBaseArray<PetitionSignerInfo>::MemFileName)(struct TSFixedArray<PetitionSignerInfo> *this);
  int (__thiscall *TSBaseArray<PetitionSignerInfo>::MemLineNo)(struct TSFixedArray<PetitionSignerInfo> *this);
};

/* 3792 */
struct __cppobj TSFixedArray<PetitionSignerInfo> : TSBaseArray<PetitionSignerInfo>
{
};

/* 3793 */
struct /*VFT*/ TSGrowableArray<PetitionSignerInfo>_vtbl
{
  const char *(__thiscall *TSBaseArray<PetitionSignerInfo>::MemFileName)(struct TSGrowableArray<PetitionSignerInfo> *this);
  int (__thiscall *TSBaseArray<PetitionSignerInfo>::MemLineNo)(struct TSGrowableArray<PetitionSignerInfo> *this);
};

/* 3794 */
struct __cppobj TSGrowableArray<PetitionSignerInfo> : TSFixedArray<PetitionSignerInfo>
{
  unsigned int m_chunk;
};

/* 3795 */
struct __cppobj TSLink<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH>
{
  TSLink<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH> *m_prevlink;
  DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH *m_next;
};

/* 3797 */
struct __cppobj __declspec(align(4)) TSHashObject<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
{
  unsigned int m_hashval;
  TSLink<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH> m_linktoslot;
  TSLink<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH> m_linktofull;
  HASHKEY_INT m_key;
};

/* 3796 */
struct __cppobj __declspec(align(4)) DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH : TSHashObject<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
{
  CGPetition m_record;
  int m_dbkey;
  unsigned __int8 m_haveData;
  TSList<DBCACHECALLBACK,TSGetLink<DBCACHECALLBACK> > m_callbacks;
  unsigned __int8 m_temp;
};

/* 3799 */
struct __cppobj TSList<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,TSGetExplicitLink<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH> >
{
  int m_linkoffset;
  TSLink<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH> m_terminator;
};

/* 3800 */
struct __cppobj TSExplicitList<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,-572662307> : TSList<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,TSGetExplicitLink<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH> >
{
};

/* 3802 */
struct __cppobj TSBaseArray<TSExplicitList<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >
{
  TSBaseArray<TSExplicitList<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,-572662307> *m_data;
};

/* 3805 */
struct __cppobj TSFixedArray<TSExplicitList<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > : TSBaseArray<TSExplicitList<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >
{
};

/* 3807 */
struct __cppobj TSGrowableArray<TSExplicitList<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > : TSFixedArray<TSExplicitList<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >
{
  unsigned int m_chunk;
};

/* 3798 */
struct __cppobj TSHashTable<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
{
  TSHashTable<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>_vtbl *__vftable /*VFT*/;
  TSExplicitList<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 3801 */
struct /*VFT*/ TSHashTable<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>_vtbl
{
  void (__thiscall *TSHashTable<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>::InternalDelete)(TSHashTable<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this, DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH *);
  DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH *(__thiscall *TSHashTable<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>::InternalNew)(TSHashTable<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this, TSExplicitList<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>)(TSHashTable<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this);
  void (__thiscall *TSHashTable<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>::Destroy)(TSHashTable<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this);
};

/* 3803 */
struct /*VFT*/ TSBaseArray<TSExplicitList<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
};

/* 3804 */
struct /*VFT*/ TSFixedArray<TSExplicitList<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
};

/* 3806 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
};

/* 3808 */
struct __cppobj __declspec(align(4)) DBCache<CGPetition,int,HASHKEY_INT>
{
  TSHashTable<DBCache<CGPetition,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> m_table;
  unsigned int m_fileTag;
  const char *m_fileName;
  NETMESSAGE m_singleQueryMsg;
  NETMESSAGE m_multiQueryMsg;
  unsigned __int8 m_requireGuids;
  unsigned __int8 m_persistent;
};

/* 3809 */
struct __cppobj CGPetitionInfo
{
};

/* 3810 */
struct $412688F6288BF6A0F3A46CC387F81629
{
  unsigned int metaKey;
  const char *metaStr;
};

/* 3811 */
struct __cppobj TSLink<KEYBINDING>
{
  TSLink<KEYBINDING> *m_prevlink;
  KEYBINDING *m_next;
};

/* 3813 */
struct __cppobj TSHashObject<KEYBINDING,HASHKEY_STRI>
{
  unsigned int m_hashval;
  TSLink<KEYBINDING> m_linktoslot;
  TSLink<KEYBINDING> m_linktofull;
  HASHKEY_STRI m_key;
};

/* 3812 */
struct __cppobj KEYBINDING : TSHashObject<KEYBINDING,HASHKEY_STRI>
{
  int index;
  char *command;
};

/* 3815 */
struct __cppobj TSList<KEYBINDING,TSGetExplicitLink<KEYBINDING> >
{
  int m_linkoffset;
  TSLink<KEYBINDING> m_terminator;
};

/* 3816 */
struct __cppobj TSExplicitList<KEYBINDING,-572662307> : TSList<KEYBINDING,TSGetExplicitLink<KEYBINDING> >
{
};

/* 3818 */
struct __cppobj TSBaseArray<TSExplicitList<KEYBINDING,-572662307> >
{
  TSBaseArray<TSExplicitList<KEYBINDING,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<KEYBINDING,-572662307> *m_data;
};

/* 3821 */
struct __cppobj TSFixedArray<TSExplicitList<KEYBINDING,-572662307> > : TSBaseArray<TSExplicitList<KEYBINDING,-572662307> >
{
};

/* 3823 */
struct __cppobj TSGrowableArray<TSExplicitList<KEYBINDING,-572662307> > : TSFixedArray<TSExplicitList<KEYBINDING,-572662307> >
{
  unsigned int m_chunk;
};

/* 3814 */
struct __cppobj TSHashTable<KEYBINDING,HASHKEY_STRI>
{
  TSHashTable<KEYBINDING,HASHKEY_STRI>_vtbl *__vftable /*VFT*/;
  TSExplicitList<KEYBINDING,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<KEYBINDING,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 3817 */
struct /*VFT*/ TSHashTable<KEYBINDING,HASHKEY_STRI>_vtbl
{
  void (__thiscall *TSHashTable<KEYBINDING,HASHKEY_STRI>::InternalDelete)(TSHashTable<KEYBINDING,HASHKEY_STRI> *this, KEYBINDING *);
  KEYBINDING *(__thiscall *TSHashTable<KEYBINDING,HASHKEY_STRI>::InternalNew)(TSHashTable<KEYBINDING,HASHKEY_STRI> *this, TSExplicitList<KEYBINDING,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<KEYBINDING,HASHKEY_STRI>)(TSHashTable<KEYBINDING,HASHKEY_STRI> *this);
  void (__thiscall *TSHashTable<KEYBINDING,HASHKEY_STRI>::Destroy)(TSHashTable<KEYBINDING,HASHKEY_STRI> *this);
};

/* 3819 */
struct /*VFT*/ TSBaseArray<TSExplicitList<KEYBINDING,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<KEYBINDING,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<KEYBINDING,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<KEYBINDING,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<KEYBINDING,-572662307> > *this);
};

/* 3820 */
struct /*VFT*/ TSFixedArray<TSExplicitList<KEYBINDING,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<KEYBINDING,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<KEYBINDING,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<KEYBINDING,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<KEYBINDING,-572662307> > *this);
};

/* 3822 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<KEYBINDING,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<KEYBINDING,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<KEYBINDING,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<KEYBINDING,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<KEYBINDING,-572662307> > *this);
};

/* 3824 */
struct __cppobj TSLink<KEYCOMMAND>
{
  TSLink<KEYCOMMAND> *m_prevlink;
  KEYCOMMAND *m_next;
};

/* 3826 */
struct __cppobj TSHashObject<KEYCOMMAND,HASHKEY_STRI>
{
  unsigned int m_hashval;
  TSLink<KEYCOMMAND> m_linktoslot;
  TSLink<KEYCOMMAND> m_linktofull;
  HASHKEY_STRI m_key;
};

/* 3825 */
struct __cppobj KEYCOMMAND : TSHashObject<KEYCOMMAND,HASHKEY_STRI>
{
  int index;
  int headerIndex;
  int function;
  int runOnUp;
};

/* 3828 */
struct __cppobj TSList<KEYCOMMAND,TSGetExplicitLink<KEYCOMMAND> >
{
  int m_linkoffset;
  TSLink<KEYCOMMAND> m_terminator;
};

/* 3829 */
struct __cppobj TSExplicitList<KEYCOMMAND,-572662307> : TSList<KEYCOMMAND,TSGetExplicitLink<KEYCOMMAND> >
{
};

/* 3831 */
struct __cppobj TSBaseArray<TSExplicitList<KEYCOMMAND,-572662307> >
{
  TSBaseArray<TSExplicitList<KEYCOMMAND,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<KEYCOMMAND,-572662307> *m_data;
};

/* 3834 */
struct __cppobj TSFixedArray<TSExplicitList<KEYCOMMAND,-572662307> > : TSBaseArray<TSExplicitList<KEYCOMMAND,-572662307> >
{
};

/* 3836 */
struct __cppobj TSGrowableArray<TSExplicitList<KEYCOMMAND,-572662307> > : TSFixedArray<TSExplicitList<KEYCOMMAND,-572662307> >
{
  unsigned int m_chunk;
};

/* 3827 */
struct __cppobj TSHashTable<KEYCOMMAND,HASHKEY_STRI>
{
  TSHashTable<KEYCOMMAND,HASHKEY_STRI>_vtbl *__vftable /*VFT*/;
  TSExplicitList<KEYCOMMAND,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<KEYCOMMAND,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 3830 */
struct /*VFT*/ TSHashTable<KEYCOMMAND,HASHKEY_STRI>_vtbl
{
  void (__thiscall *TSHashTable<KEYCOMMAND,HASHKEY_STRI>::InternalDelete)(TSHashTable<KEYCOMMAND,HASHKEY_STRI> *this, KEYCOMMAND *);
  KEYCOMMAND *(__thiscall *TSHashTable<KEYCOMMAND,HASHKEY_STRI>::InternalNew)(TSHashTable<KEYCOMMAND,HASHKEY_STRI> *this, TSExplicitList<KEYCOMMAND,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<KEYCOMMAND,HASHKEY_STRI>)(TSHashTable<KEYCOMMAND,HASHKEY_STRI> *this);
  void (__thiscall *TSHashTable<KEYCOMMAND,HASHKEY_STRI>::Destroy)(TSHashTable<KEYCOMMAND,HASHKEY_STRI> *this);
};

/* 3832 */
struct /*VFT*/ TSBaseArray<TSExplicitList<KEYCOMMAND,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<KEYCOMMAND,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<KEYCOMMAND,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<KEYCOMMAND,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<KEYCOMMAND,-572662307> > *this);
};

/* 3833 */
struct /*VFT*/ TSFixedArray<TSExplicitList<KEYCOMMAND,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<KEYCOMMAND,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<KEYCOMMAND,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<KEYCOMMAND,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<KEYCOMMAND,-572662307> > *this);
};

/* 3835 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<KEYCOMMAND,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<KEYCOMMAND,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<KEYCOMMAND,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<KEYCOMMAND,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<KEYCOMMAND,-572662307> > *this);
};

/* 3837 */
struct __cppobj CGUIBindings
{
  int m_numCommands;
  int m_numHiddenCommands;
  TSHashTable<KEYBINDING,HASHKEY_STRI> m_bindings;
  TSHashTable<KEYCOMMAND,HASHKEY_STRI> m_commands;
};

/* 3838 */
struct __cppobj CGUIBindingsStatus : CStatus
{
};

/* 3839 */
struct /*VFT*/ CGUIBindingsStatus_vtbl
{
  void (__thiscall *~CGUIBindingsStatus)(CGUIBindingsStatus *this);
  void (__thiscall *CStatus::Display)(struct CGUIBindingsStatus *this);
  _BYTE gap8[4];
  void (*CStatus::Add)(struct CGUIBindingsStatus *this, STATUS_TYPE, const char *, ...);
  void (*CStatus::Prepend)(struct CGUIBindingsStatus *this, STATUS_TYPE, const char *, ...);
  void (*CGUIBindingsStatus::Add)(CGUIBindingsStatus *this, int, const char *, ...);
};

/* 3840 */
struct SkillInfo
{
  int isProf;
  int skillID;
  int profLevel;
  char profName[64];
};

/* 3841 */
struct __cppobj ChrProficiencyRec
{
  int m_ID;
  int m_proficiency_minLevel[16];
  int m_proficiency_acquireMethod[16];
  int m_proficiency_itemClass[16];
  int m_proficiency_itemSubClassMask[16];
};

/* 3842 */
struct __cppobj WowClientDB<ChrProficiencyRec>
{
  ChrProficiencyRec *m_records;
  int m_numRecords;
  ChrProficiencyRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3843 */
struct __cppobj PaperDollItemFrameRec
{
  const char *m_ItemButtonName;
  const char *m_SlotIcon;
  int m_SlotNumber;
  int m_generatedID;
};

/* 3844 */
struct __cppobj WowClientDB<PaperDollItemFrameRec>
{
  PaperDollItemFrameRec *m_records;
  int m_numRecords;
  PaperDollItemFrameRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3845 */
struct __cppobj CGCharacterInfo
{
};

/* 3846 */
struct ProficiencyInfo
{
  int minLevel;
  int slot;
};

/* 3847 */
struct __cppobj SpellShapeshiftFormRec
{
  int m_ID;
  int m_bonusActionBar;
  const char *m_name_lang[8];
  int m_name_flag;
  int m_flags;
};

/* 3848 */
struct __cppobj WowClientDB<SpellShapeshiftFormRec>
{
  SpellShapeshiftFormRec *m_records;
  int m_numRecords;
  SpellShapeshiftFormRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3849 */
struct __cppobj CGActionBar
{
};

/* 3850 */
struct __cppobj CGBuffDesc
{
  int m_auraIndex;
  int m_auraSpell;
  unsigned __int8 m_auraFlags;
  int m_untilCancelled;
};

/* 3851 */
struct __cppobj CGBuffBar
{
};

/* 3852 */
struct __cppobj TSLink<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH>
{
  TSLink<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH> *m_prevlink;
  DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH *m_next;
};

/* 3854 */
struct __cppobj __declspec(align(4)) TSHashObject<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
{
  unsigned int m_hashval;
  TSLink<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH> m_linktoslot;
  TSLink<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH> m_linktofull;
  HASHKEY_INT m_key;
};

/* 3853 */
struct __cppobj __declspec(align(4)) DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH : TSHashObject<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
{
  PageTextCache_C m_record;
  int m_dbkey;
  unsigned __int8 m_haveData;
  TSList<DBCACHECALLBACK,TSGetLink<DBCACHECALLBACK> > m_callbacks;
  unsigned __int8 m_temp;
};

/* 3856 */
struct __cppobj TSList<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,TSGetExplicitLink<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH> >
{
  int m_linkoffset;
  TSLink<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH> m_terminator;
};

/* 3857 */
struct __cppobj TSExplicitList<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> : TSList<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,TSGetExplicitLink<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH> >
{
};

/* 3859 */
struct __cppobj TSBaseArray<TSExplicitList<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >
{
  TSBaseArray<TSExplicitList<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> *m_data;
};

/* 3862 */
struct __cppobj TSFixedArray<TSExplicitList<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > : TSBaseArray<TSExplicitList<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >
{
};

/* 3864 */
struct __cppobj TSGrowableArray<TSExplicitList<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > : TSFixedArray<TSExplicitList<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >
{
  unsigned int m_chunk;
};

/* 3855 */
struct __cppobj TSHashTable<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
{
  TSHashTable<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>_vtbl *__vftable /*VFT*/;
  TSExplicitList<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 3858 */
struct /*VFT*/ TSHashTable<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>_vtbl
{
  void (__thiscall *TSHashTable<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>::InternalDelete)(TSHashTable<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this, DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH *);
  DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH *(__thiscall *TSHashTable<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>::InternalNew)(TSHashTable<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this, TSExplicitList<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>)(TSHashTable<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this);
  void (__thiscall *TSHashTable<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>::Destroy)(TSHashTable<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this);
};

/* 3860 */
struct /*VFT*/ TSBaseArray<TSExplicitList<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
};

/* 3861 */
struct /*VFT*/ TSFixedArray<TSExplicitList<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
};

/* 3863 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
};

/* 3865 */
struct __cppobj __declspec(align(4)) DBCache<PageTextCache_C,int,HASHKEY_INT>
{
  TSHashTable<DBCache<PageTextCache_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> m_table;
  unsigned int m_fileTag;
  const char *m_fileName;
  NETMESSAGE m_singleQueryMsg;
  NETMESSAGE m_multiQueryMsg;
  unsigned __int8 m_requireGuids;
  unsigned __int8 m_persistent;
};

/* 3866 */
struct __cppobj CGItemText
{
};

/* 3867 */
struct TaxiNode
{
  int id;
  float offsetx;
  float offsety;
};

/* 3868 */
struct __cppobj TSCArray<TaxiNode,64>
{
  unsigned int m_count;
  TaxiNode m_data[64];
};

/* 3869 */
struct __cppobj TaxiNodesRec
{
  int m_ID;
  int m_ContinentID;
  float m_X;
  float m_Y;
  float m_Z;
  const char *m_Name_lang[8];
  int m_Name_flag;
};

/* 3870 */
struct __cppobj WowClientDB<TaxiNodesRec>
{
  TaxiNodesRec *m_records;
  int m_numRecords;
  TaxiNodesRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3871 */
struct __cppobj CGTaxiMap
{
};

/* 3872 */
struct QuestLogInfo
{
  int questID;
  int logIndex;
  int isHeader;
};

/* 3873 */
struct __cppobj TSLink<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH>
{
  TSLink<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH> *m_prevlink;
  DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH *m_next;
};

/* 3875 */
struct __cppobj __declspec(align(4)) TSHashObject<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
{
  unsigned int m_hashval;
  TSLink<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH> m_linktoslot;
  TSLink<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH> m_linktofull;
  HASHKEY_INT m_key;
};

/* 3876 */
struct __cppobj QuestCache
{
  int m_questId;
  int m_questType;
  int m_questLevel;
  int m_questSortID;
  int m_questInfoID;
  int m_rewardNextQuest;
  int m_rewardMoney;
  int m_startItem;
  int m_rewardItems[4];
  int m_rewardAmount[4];
  int m_rewardChoiceItems[6];
  int m_rewardChoiceAmount[6];
  int m_POIContinent;
  float m_POIx;
  float m_POIy;
  int m_POIPriority;
  char m_logTitle[128];
  char m_logDescription[1024];
  char m_questDescription[1024];
  char m_areaDescription[128];
  int m_monsterToKill[4];
  int m_monsterToKillQuantity[4];
  int m_itemToGet[4];
  int m_itemToGetQuantity[4];
  char m_getDescription[4][64];
};

/* 3874 */
struct __cppobj __declspec(align(4)) DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH : TSHashObject<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
{
  QuestCache m_record;
  int m_dbkey;
  unsigned __int8 m_haveData;
  TSList<DBCACHECALLBACK,TSGetLink<DBCACHECALLBACK> > m_callbacks;
  unsigned __int8 m_temp;
};

/* 3878 */
struct __cppobj TSList<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,TSGetExplicitLink<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH> >
{
  int m_linkoffset;
  TSLink<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH> m_terminator;
};

/* 3879 */
struct __cppobj TSExplicitList<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> : TSList<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,TSGetExplicitLink<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH> >
{
};

/* 3881 */
struct __cppobj TSBaseArray<TSExplicitList<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >
{
  TSBaseArray<TSExplicitList<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> *m_data;
};

/* 3884 */
struct __cppobj TSFixedArray<TSExplicitList<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > : TSBaseArray<TSExplicitList<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >
{
};

/* 3886 */
struct __cppobj TSGrowableArray<TSExplicitList<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > : TSFixedArray<TSExplicitList<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >
{
  unsigned int m_chunk;
};

/* 3877 */
struct __cppobj TSHashTable<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
{
  TSHashTable<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>_vtbl *__vftable /*VFT*/;
  TSExplicitList<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 3880 */
struct /*VFT*/ TSHashTable<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>_vtbl
{
  void (__thiscall *TSHashTable<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>::InternalDelete)(TSHashTable<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this, DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH *);
  DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH *(__thiscall *TSHashTable<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>::InternalNew)(TSHashTable<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this, TSExplicitList<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>)(TSHashTable<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this);
  void (__thiscall *TSHashTable<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>::Destroy)(TSHashTable<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this);
};

/* 3882 */
struct /*VFT*/ TSBaseArray<TSExplicitList<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
};

/* 3883 */
struct /*VFT*/ TSFixedArray<TSExplicitList<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
};

/* 3885 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
};

/* 3887 */
struct __cppobj __declspec(align(4)) DBCache<QuestCache,int,HASHKEY_INT>
{
  TSHashTable<DBCache<QuestCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> m_table;
  unsigned int m_fileTag;
  const char *m_fileName;
  NETMESSAGE m_singleQueryMsg;
  NETMESSAGE m_multiQueryMsg;
  unsigned __int8 m_requireGuids;
  unsigned __int8 m_persistent;
};

/* 3888 */
struct __cppobj TSLink<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH>
{
  TSLink<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH> *m_prevlink;
  DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH *m_next;
};

/* 3890 */
struct __cppobj __declspec(align(4)) TSHashObject<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
{
  unsigned int m_hashval;
  TSLink<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH> m_linktoslot;
  TSLink<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH> m_linktofull;
  HASHKEY_INT m_key;
};

/* 3889 */
struct __cppobj __declspec(align(4)) DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH : TSHashObject<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
{
  CreatureStats_C m_record;
  int m_dbkey;
  unsigned __int8 m_haveData;
  TSList<DBCACHECALLBACK,TSGetLink<DBCACHECALLBACK> > m_callbacks;
  unsigned __int8 m_temp;
};

/* 3892 */
struct __cppobj TSList<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,TSGetExplicitLink<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH> >
{
  int m_linkoffset;
  TSLink<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH> m_terminator;
};

/* 3893 */
struct __cppobj TSExplicitList<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> : TSList<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,TSGetExplicitLink<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH> >
{
};

/* 3895 */
struct __cppobj TSBaseArray<TSExplicitList<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >
{
  TSBaseArray<TSExplicitList<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> *m_data;
};

/* 3898 */
struct __cppobj TSFixedArray<TSExplicitList<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > : TSBaseArray<TSExplicitList<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >
{
};

/* 3900 */
struct __cppobj TSGrowableArray<TSExplicitList<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > : TSFixedArray<TSExplicitList<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >
{
  unsigned int m_chunk;
};

/* 3891 */
struct __cppobj TSHashTable<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
{
  TSHashTable<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>_vtbl *__vftable /*VFT*/;
  TSExplicitList<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 3894 */
struct /*VFT*/ TSHashTable<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>_vtbl
{
  void (__thiscall *TSHashTable<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>::InternalDelete)(TSHashTable<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this, DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH *);
  DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH *(__thiscall *TSHashTable<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>::InternalNew)(TSHashTable<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this, TSExplicitList<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>)(TSHashTable<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this);
  void (__thiscall *TSHashTable<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>::Destroy)(TSHashTable<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this);
};

/* 3896 */
struct /*VFT*/ TSBaseArray<TSExplicitList<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
};

/* 3897 */
struct /*VFT*/ TSFixedArray<TSExplicitList<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
};

/* 3899 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
};

/* 3901 */
struct __cppobj __declspec(align(4)) DBCache<CreatureStats_C,int,HASHKEY_INT>
{
  TSHashTable<DBCache<CreatureStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> m_table;
  unsigned int m_fileTag;
  const char *m_fileName;
  NETMESSAGE m_singleQueryMsg;
  NETMESSAGE m_multiQueryMsg;
  unsigned __int8 m_requireGuids;
  unsigned __int8 m_persistent;
};

/* 3902 */
struct __cppobj QuestSortRec
{
  int m_ID;
  const char *m_SortName_lang[8];
  int m_SortName_flag;
};

/* 3903 */
struct __cppobj WowClientDB<QuestSortRec>
{
  QuestSortRec *m_records;
  int m_numRecords;
  QuestSortRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3904 */
struct __cppobj QuestInfoRec
{
  int m_ID;
  const char *m_InfoName_lang[8];
  int m_InfoName_flag;
};

/* 3905 */
struct __cppobj WowClientDB<QuestInfoRec>
{
  QuestInfoRec *m_records;
  int m_numRecords;
  QuestInfoRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3906 */
struct __cppobj TSLink<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH>
{
  TSLink<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH> *m_prevlink;
  DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH *m_next;
};

/* 3908 */
struct __cppobj __declspec(align(4)) TSHashObject<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
{
  unsigned int m_hashval;
  TSLink<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH> m_linktoslot;
  TSLink<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH> m_linktofull;
  HASHKEY_INT m_key;
};

/* 3907 */
struct __cppobj __declspec(align(4)) DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH : TSHashObject<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
{
  GameObjectStats_C m_record;
  int m_dbkey;
  unsigned __int8 m_haveData;
  TSList<DBCACHECALLBACK,TSGetLink<DBCACHECALLBACK> > m_callbacks;
  unsigned __int8 m_temp;
};

/* 3910 */
struct __cppobj TSList<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,TSGetExplicitLink<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH> >
{
  int m_linkoffset;
  TSLink<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH> m_terminator;
};

/* 3911 */
struct __cppobj TSExplicitList<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> : TSList<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,TSGetExplicitLink<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH> >
{
};

/* 3913 */
struct __cppobj TSBaseArray<TSExplicitList<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >
{
  TSBaseArray<TSExplicitList<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> *m_data;
};

/* 3916 */
struct __cppobj TSFixedArray<TSExplicitList<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > : TSBaseArray<TSExplicitList<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >
{
};

/* 3918 */
struct __cppobj TSGrowableArray<TSExplicitList<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > : TSFixedArray<TSExplicitList<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >
{
  unsigned int m_chunk;
};

/* 3909 */
struct __cppobj TSHashTable<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
{
  TSHashTable<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>_vtbl *__vftable /*VFT*/;
  TSExplicitList<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 3912 */
struct /*VFT*/ TSHashTable<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>_vtbl
{
  void (__thiscall *TSHashTable<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>::InternalDelete)(TSHashTable<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this, DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH *);
  DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH *(__thiscall *TSHashTable<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>::InternalNew)(TSHashTable<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this, TSExplicitList<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>)(TSHashTable<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this);
  void (__thiscall *TSHashTable<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>::Destroy)(TSHashTable<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this);
};

/* 3914 */
struct /*VFT*/ TSBaseArray<TSExplicitList<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
};

/* 3915 */
struct /*VFT*/ TSFixedArray<TSExplicitList<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
};

/* 3917 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
};

/* 3919 */
struct __cppobj __declspec(align(4)) DBCache<GameObjectStats_C,int,HASHKEY_INT>
{
  TSHashTable<DBCache<GameObjectStats_C,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> m_table;
  unsigned int m_fileTag;
  const char *m_fileName;
  NETMESSAGE m_singleQueryMsg;
  NETMESSAGE m_multiQueryMsg;
  unsigned __int8 m_requireGuids;
  unsigned __int8 m_persistent;
};

/* 3920 */
struct __cppobj CGQuestLog
{
};

/* 3921 */
struct __cppobj SpellCastTimesRec
{
  int m_ID;
  int m_base;
  int m_perLevel;
  int m_minimum;
};

/* 3922 */
struct __cppobj WowClientDB<SpellCastTimesRec>
{
  SpellCastTimesRec *m_records;
  int m_numRecords;
  SpellCastTimesRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3923 */
struct __cppobj SpellItemEnchantmentRec
{
  int m_ID;
  int m_effect[3];
  int m_effectPointsMin[3];
  int m_effectPointsMax[3];
  int m_effectArg[3];
  const char *m_name_lang[8];
  int m_name_flag;
  int m_itemVisual;
};

/* 3924 */
struct __cppobj WowClientDB<SpellItemEnchantmentRec>
{
  SpellItemEnchantmentRec *m_records;
  int m_numRecords;
  SpellItemEnchantmentRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3925 */
struct __cppobj TSBaseArray<TrainerServiceInfo *>
{
  TSBaseArray<TrainerServiceInfo *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TrainerServiceInfo **m_data;
};

/* 3926 */
struct /*VFT*/ TSBaseArray<TrainerServiceInfo *>_vtbl
{
  const char *(__thiscall *TSBaseArray<TrainerServiceInfo *>::MemFileName)(TSBaseArray<TrainerServiceInfo *> *this);
  int (__thiscall *TSBaseArray<TrainerServiceInfo *>::MemLineNo)(TSBaseArray<TrainerServiceInfo *> *this);
};

/* 3927 */
struct TrainerServiceInfo
{
  int spellID;
  int skillLine;
  unsigned int moneyCost;
  unsigned __int8 pointCost[2];
  unsigned __int8 reqLevel;
  unsigned int reqSkillLine;
  unsigned int reqSkillRank;
  unsigned int reqSkillStep;
  int reqAbility[3];
  unsigned __int8 usable;
  int enabled;
};

/* 3928 */
struct /*VFT*/ TSFixedArray<TrainerServiceInfo *>_vtbl
{
  const char *(__thiscall *TSBaseArray<TrainerServiceInfo *>::MemFileName)(struct TSFixedArray<TrainerServiceInfo *> *this);
  int (__thiscall *TSBaseArray<TrainerServiceInfo *>::MemLineNo)(struct TSFixedArray<TrainerServiceInfo *> *this);
};

/* 3929 */
struct __cppobj TSFixedArray<TrainerServiceInfo *> : TSBaseArray<TrainerServiceInfo *>
{
};

/* 3930 */
struct /*VFT*/ TSGrowableArray<TrainerServiceInfo *>_vtbl
{
  const char *(__thiscall *TSBaseArray<TrainerServiceInfo *>::MemFileName)(struct TSGrowableArray<TrainerServiceInfo *> *this);
  int (__thiscall *TSBaseArray<TrainerServiceInfo *>::MemLineNo)(struct TSGrowableArray<TrainerServiceInfo *> *this);
};

/* 3931 */
struct __cppobj TSGrowableArray<TrainerServiceInfo *> : TSFixedArray<TrainerServiceInfo *>
{
  unsigned int m_chunk;
};

/* 3932 */
struct __cppobj TSBaseArray<TrainerSkillLineInfo *>
{
  TSBaseArray<TrainerSkillLineInfo *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TrainerSkillLineInfo **m_data;
};

/* 3933 */
struct /*VFT*/ TSBaseArray<TrainerSkillLineInfo *>_vtbl
{
  const char *(__thiscall *TSBaseArray<TrainerSkillLineInfo *>::MemFileName)(TSBaseArray<TrainerSkillLineInfo *> *this);
  int (__thiscall *TSBaseArray<TrainerSkillLineInfo *>::MemLineNo)(TSBaseArray<TrainerSkillLineInfo *> *this);
};

/* 3934 */
struct TrainerSkillLineInfo
{
  int skillLine;
  unsigned int numSkills[6];
  int enabled;
  int collapsed;
  int allCostPoints;
};

/* 3935 */
struct /*VFT*/ TSFixedArray<TrainerSkillLineInfo *>_vtbl
{
  const char *(__thiscall *TSBaseArray<TrainerSkillLineInfo *>::MemFileName)(struct TSFixedArray<TrainerSkillLineInfo *> *this);
  int (__thiscall *TSBaseArray<TrainerSkillLineInfo *>::MemLineNo)(struct TSFixedArray<TrainerSkillLineInfo *> *this);
};

/* 3936 */
struct __cppobj TSFixedArray<TrainerSkillLineInfo *> : TSBaseArray<TrainerSkillLineInfo *>
{
};

/* 3937 */
struct /*VFT*/ TSGrowableArray<TrainerSkillLineInfo *>_vtbl
{
  const char *(__thiscall *TSBaseArray<TrainerSkillLineInfo *>::MemFileName)(struct TSGrowableArray<TrainerSkillLineInfo *> *this);
  int (__thiscall *TSBaseArray<TrainerSkillLineInfo *>::MemLineNo)(struct TSGrowableArray<TrainerSkillLineInfo *> *this);
};

/* 3938 */
struct __cppobj TSGrowableArray<TrainerSkillLineInfo *> : TSFixedArray<TrainerSkillLineInfo *>
{
  unsigned int m_chunk;
};

/* 3939 */
struct __cppobj CGClassTrainer
{
};

/* 3940 */
struct __cppobj PetAction
{
  unsigned int m_action;
};

/* 3941 */
struct __cppobj CGPetInfo
{
};

/* 3942 */
struct __cppobj TSBaseArray<WorldMapContinentInfo>
{
  TSBaseArray<WorldMapContinentInfo>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  WorldMapContinentInfo *m_data;
};

/* 3943 */
struct /*VFT*/ TSBaseArray<WorldMapContinentInfo>_vtbl
{
  const char *(__thiscall *TSBaseArray<WorldMapContinentInfo>::MemFileName)(TSBaseArray<WorldMapContinentInfo> *this);
  int (__thiscall *TSBaseArray<WorldMapContinentInfo>::MemLineNo)(TSBaseArray<WorldMapContinentInfo> *this);
};

/* 3944 */
struct __cppobj WorldMapContinentInfo
{
  int continentID;
  int mapAreaID;
  TSFixedArray<int> zoneList;
  int chunkZones[128][128];
  NTempest::CRect hitRect;
};

/* 3945 */
struct /*VFT*/ TSFixedArray<WorldMapContinentInfo>_vtbl
{
  const char *(__thiscall *TSBaseArray<WorldMapContinentInfo>::MemFileName)(struct TSFixedArray<WorldMapContinentInfo> *this);
  int (__thiscall *TSBaseArray<WorldMapContinentInfo>::MemLineNo)(struct TSFixedArray<WorldMapContinentInfo> *this);
};

/* 3946 */
struct __cppobj TSFixedArray<WorldMapContinentInfo> : TSBaseArray<WorldMapContinentInfo>
{
};

/* 3947 */
struct __cppobj TSBaseArray<WorldMapLandmarkInfo>
{
  TSBaseArray<WorldMapLandmarkInfo>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  WorldMapLandmarkInfo *m_data;
};

/* 3948 */
struct /*VFT*/ TSBaseArray<WorldMapLandmarkInfo>_vtbl
{
  const char *(__thiscall *TSBaseArray<WorldMapLandmarkInfo>::MemFileName)(TSBaseArray<WorldMapLandmarkInfo> *this);
  int (__thiscall *TSBaseArray<WorldMapLandmarkInfo>::MemLineNo)(TSBaseArray<WorldMapLandmarkInfo> *this);
};

/* 3949 */
struct WorldMapLandmarkInfo
{
  int entryID;
  float x;
  float y;
  int isPortLoc;
};

/* 3950 */
struct /*VFT*/ TSFixedArray<WorldMapLandmarkInfo>_vtbl
{
  const char *(__thiscall *TSBaseArray<WorldMapLandmarkInfo>::MemFileName)(struct TSFixedArray<WorldMapLandmarkInfo> *this);
  int (__thiscall *TSBaseArray<WorldMapLandmarkInfo>::MemLineNo)(struct TSFixedArray<WorldMapLandmarkInfo> *this);
};

/* 3951 */
struct __cppobj TSFixedArray<WorldMapLandmarkInfo> : TSBaseArray<WorldMapLandmarkInfo>
{
};

/* 3952 */
struct __cppobj WowClientDB<AreaPOIRec>
{
  AreaPOIRec *m_records;
  int m_numRecords;
  AreaPOIRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3953 */
struct __cppobj WorldMapAreaRec
{
  int m_ID;
  int m_mapID;
  int m_areaID;
  int m_leftBoundary;
  int m_rightBoundary;
  int m_topBoundary;
  int m_bottomBoundary;
  const char *m_areaName;
};

/* 3954 */
struct __cppobj WowClientDB<WorldMapAreaRec>
{
  WorldMapAreaRec *m_records;
  int m_numRecords;
  WorldMapAreaRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3955 */
struct __cppobj WorldMapContinentRec
{
  int m_ID;
  int m_mapID;
  int m_leftBoundary;
  int m_rightBoundary;
  int m_topBoundary;
  int m_bottomBoundary;
  float m_continentOffsetX;
  float m_continentOffsetY;
};

/* 3956 */
struct __cppobj WowClientDB<WorldMapContinentRec>
{
  WorldMapContinentRec *m_records;
  int m_numRecords;
  WorldMapContinentRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3957 */
struct __cppobj WorldSafeLocsRec
{
  int m_ID;
  int m_continent;
  float m_locX;
  float m_locY;
  float m_locZ;
  const char *m_AreaName_lang[8];
  int m_AreaName_flag;
};

/* 3958 */
struct __cppobj WowClientDB<WorldSafeLocsRec>
{
  WorldSafeLocsRec *m_records;
  int m_numRecords;
  WorldSafeLocsRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3959 */
struct __cppobj CGWorldMap
{
};

/* 3960 */
struct __cppobj CGDuelInfo
{
};

/* 3961 */
struct __cppobj TSBitField<TSFixedArray<unsigned int> >
{
  unsigned int m_numBits;
  TSFixedArray<unsigned int> m_array;
};

/* 3962 */
struct __cppobj FBitField : TSBitField<TSFixedArray<unsigned int> >
{
};

/* 3963 */
struct __cppobj CGTutorial
{
};

/* 3964 */
struct __declspec(align(4)) CGLootSlot
{
  int pending;
  int itemID;
  int itemDisplayID;
  int quantity;
  unsigned __int8 slot;
};

/* 3965 */
struct __cppobj CGLootInfo
{
};

/* 3966 */
struct __cppobj LanguagesRec
{
  int m_ID;
  const char *m_name_lang[8];
  int m_name_flag;
};

/* 3967 */
struct __cppobj WowClientDB<LanguagesRec>
{
  LanguagesRec *m_records;
  int m_numRecords;
  LanguagesRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 3968 */
struct __cppobj CGSpellBook
{
};

/* 3969 */
struct __cppobj CGPartyInfo::RemoteStats
{
  int health;
  int maxHealth;
  POWER_TYPE powerType;
  int power;
  int maxPower;
  int classID;
  int level;
  int mapID;
  int areaID;
  NTempest::C3Vector pos;
  int connected;
};

/* 3970 */
struct __cppobj CGPartyInfo
{
};

/* 3971 */
struct __cppobj TSLink<FADEOUTHASHOBJ>
{
  TSLink<FADEOUTHASHOBJ> *m_prevlink;
  FADEOUTHASHOBJ *m_next;
};

/* 3972 */
struct __cppobj TSHashObject<FADEOUTHASHOBJ,CHashKeyGUID>
{
  unsigned int m_hashval;
  __unaligned __declspec(align(1)) TSLink<FADEOUTHASHOBJ> m_linktoslot;
  __unaligned __declspec(align(1)) TSLink<FADEOUTHASHOBJ> m_linktofull;
  CHashKeyGUID m_key;
};

/* 3973 */
struct __cppobj __declspec(align(8)) FADEOUTHASHOBJ : TSHashObject<FADEOUTHASHOBJ,CHashKeyGUID>
{
  HMODEL__ *model;
  HTEXCOMPONENT__ *texture;
  NTempest::C34Matrix matrix;
  float renderScale;
  unsigned int startTime;
  unsigned __int8 startAlpha;
};

/* 3974 */
struct __cppobj TSList<FADEOUTHASHOBJ,TSGetExplicitLink<FADEOUTHASHOBJ> >
{
  int m_linkoffset;
  TSLink<FADEOUTHASHOBJ> m_terminator;
};

/* 3975 */
struct __cppobj TSExplicitList<FADEOUTHASHOBJ,-572662307> : TSList<FADEOUTHASHOBJ,TSGetExplicitLink<FADEOUTHASHOBJ> >
{
};

/* 3976 */
struct __cppobj TSBaseArray<TSExplicitList<FADEOUTHASHOBJ,-572662307> >
{
  TSBaseArray<TSExplicitList<FADEOUTHASHOBJ,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<FADEOUTHASHOBJ,-572662307> *m_data;
};

/* 3977 */
struct /*VFT*/ TSBaseArray<TSExplicitList<FADEOUTHASHOBJ,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<FADEOUTHASHOBJ,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<FADEOUTHASHOBJ,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<FADEOUTHASHOBJ,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<FADEOUTHASHOBJ,-572662307> > *this);
};

/* 3978 */
struct /*VFT*/ TSFixedArray<TSExplicitList<FADEOUTHASHOBJ,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<FADEOUTHASHOBJ,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<FADEOUTHASHOBJ,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<FADEOUTHASHOBJ,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<FADEOUTHASHOBJ,-572662307> > *this);
};

/* 3979 */
struct __cppobj TSFixedArray<TSExplicitList<FADEOUTHASHOBJ,-572662307> > : TSBaseArray<TSExplicitList<FADEOUTHASHOBJ,-572662307> >
{
};

/* 3980 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<FADEOUTHASHOBJ,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<FADEOUTHASHOBJ,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<FADEOUTHASHOBJ,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<FADEOUTHASHOBJ,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<FADEOUTHASHOBJ,-572662307> > *this);
};

/* 3981 */
struct __cppobj TSGrowableArray<TSExplicitList<FADEOUTHASHOBJ,-572662307> > : TSFixedArray<TSExplicitList<FADEOUTHASHOBJ,-572662307> >
{
  unsigned int m_chunk;
};

/* 3982 */
struct __cppobj TSHashTable<FADEOUTHASHOBJ,CHashKeyGUID>
{
  TSHashTable<FADEOUTHASHOBJ,CHashKeyGUID>_vtbl *__vftable /*VFT*/;
  TSExplicitList<FADEOUTHASHOBJ,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<FADEOUTHASHOBJ,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 3983 */
struct /*VFT*/ TSHashTable<FADEOUTHASHOBJ,CHashKeyGUID>_vtbl
{
  void (__thiscall *TSHashTable<FADEOUTHASHOBJ,CHashKeyGUID>::InternalDelete)(TSHashTable<FADEOUTHASHOBJ,CHashKeyGUID> *this, FADEOUTHASHOBJ *);
  FADEOUTHASHOBJ *(__thiscall *TSHashTable<FADEOUTHASHOBJ,CHashKeyGUID>::InternalNew)(TSHashTable<FADEOUTHASHOBJ,CHashKeyGUID> *this, TSExplicitList<FADEOUTHASHOBJ,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<FADEOUTHASHOBJ,CHashKeyGUID>)(TSHashTable<FADEOUTHASHOBJ,CHashKeyGUID> *this);
  void (__thiscall *TSHashTable<FADEOUTHASHOBJ,CHashKeyGUID>::Destroy)(TSHashTable<FADEOUTHASHOBJ,CHashKeyGUID> *this);
};

/* 3984 */
struct __cppobj CGWorldFrame::HitTestResult
{
  unsigned __int64 object;
  NTempest::C3Vector point;
  float distance;
};

/* 3985 */
struct CWorldClickEvent
{
  unsigned int button;
};

/* 3986 */
struct __cppobj CTerrainClickEvent
{
  NTempest::C3Vector point;
  unsigned int button;
};

/* 3987 */
struct __cppobj CSpriteClickEvent
{
  unsigned __int64 objectGUID;
  unsigned int button;
  unsigned int time;
  NTempest::C2Vector pos;
};

/* 3988 */
struct __cppobj CObjectTrackEvent
{
  unsigned __int64 object;
  unsigned __int64 oldGUID;
  float x;
  float y;
};

/* 3989 */
struct __cppobj WorldObjCollisionHandlerData
{
  HMODEL__ *model;
  NTempest::CAaBox collideExt;
  float scale;
  NTempest::C44Matrix matrix;
};

/* 3990 */
struct __cppobj TSLink<PENDINGCHAT>
{
  TSLink<PENDINGCHAT> *m_prevlink;
  PENDINGCHAT *m_next;
};

/* 3991 */
struct __cppobj TSLinkedNode<PENDINGCHAT>
{
  TSLink<PENDINGCHAT> m_link;
};

/* 3992 */
struct __cppobj __declspec(align(4)) PENDINGCHAT : TSLinkedNode<PENDINGCHAT>
{
  int slashCmd;
  unsigned __int64 guid;
  char *text;
  unsigned int language;
  int waitingForUI;
  int parse;
  char channel[128];
  unsigned __int64 guid2;
  char specialFlag[5];
};

/* 3993 */
struct __cppobj TSList<PENDINGCHAT,TSGetLink<PENDINGCHAT> >
{
  int m_linkoffset;
  TSLink<PENDINGCHAT> m_terminator;
};

/* 3994 */
struct __cppobj TSLink<PENDINGTEXTEMOTE>
{
  TSLink<PENDINGTEXTEMOTE> *m_prevlink;
  PENDINGTEXTEMOTE *m_next;
};

/* 3995 */
struct __cppobj TSLinkedNode<PENDINGTEXTEMOTE>
{
  TSLink<PENDINGTEXTEMOTE> m_link;
};

/* 3996 */
struct __cppobj __declspec(align(8)) PENDINGTEXTEMOTE : TSLinkedNode<PENDINGTEXTEMOTE>
{
  unsigned __int64 sender;
  int textEmoteID;
  char *target;
  int waitingForUI;
};

/* 3997 */
struct __cppobj TSList<PENDINGTEXTEMOTE,TSGetLink<PENDINGTEXTEMOTE> >
{
  int m_linkoffset;
  TSLink<PENDINGTEXTEMOTE> m_terminator;
};

/* 3998 */
struct __cppobj LanguageWordsRec
{
  int m_ID;
  int m_languageID;
  const char *m_word;
};

/* 3999 */
struct __cppobj WowClientDB<LanguageWordsRec>
{
  LanguageWordsRec *m_records;
  int m_numRecords;
  LanguageWordsRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4000 */
struct __cppobj EmotesTextRec
{
  int m_ID;
  const char *m_name;
  int m_emoteID;
  int m_emoteText[16];
};

/* 4001 */
struct __cppobj WowClientDB<EmotesTextRec>
{
  EmotesTextRec *m_records;
  int m_numRecords;
  EmotesTextRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4002 */
struct __cppobj EmotesTextDataRec
{
  int m_ID;
  const char *m_text_lang[8];
  int m_text_flag;
};

/* 4003 */
struct __cppobj WowClientDB<EmotesTextDataRec>
{
  EmotesTextDataRec *m_records;
  int m_numRecords;
  EmotesTextDataRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4004 */
struct __cppobj TSBaseArray<regex_t>
{
  TSBaseArray<regex_t>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  regex_t *m_data;
};

/* 4005 */
struct /*VFT*/ TSBaseArray<regex_t>_vtbl
{
  const char *(__thiscall *TSBaseArray<regex_t>::MemFileName)(TSBaseArray<regex_t> *this);
  int (__thiscall *TSBaseArray<regex_t>::MemLineNo)(TSBaseArray<regex_t> *this);
};

/* 4008 */
struct regex_t
{
  int re_magic;
  unsigned int re_nsub;
  const char *re_endp;
  re_guts *re_g;
};

/* 4007 */
struct __declspec(align(4)) re_guts
{
  int magic;
  int *strip;
  int csetsize;
  int ncsets;
  cset *sets;
  unsigned __int8 *setbits;
  int cflags;
  int nstates;
  int firststate;
  int laststate;
  int iflags;
  int nbol;
  int neol;
  int ncategories;
  unsigned __int8 *categories;
  char *must;
  int mlen;
  unsigned int nsub;
  int backrefs;
  int nplus;
  unsigned __int8 catspace[1];
};

/* 4006 */
struct cset
{
  unsigned __int8 *ptr;
  unsigned __int8 mask;
  unsigned __int8 hash;
  unsigned int smultis;
  char *multis;
};

/* 4009 */
struct /*VFT*/ TSFixedArray<regex_t>_vtbl
{
  const char *(__thiscall *TSBaseArray<regex_t>::MemFileName)(struct TSFixedArray<regex_t> *this);
  int (__thiscall *TSBaseArray<regex_t>::MemLineNo)(struct TSFixedArray<regex_t> *this);
};

/* 4010 */
struct __cppobj TSFixedArray<regex_t> : TSBaseArray<regex_t>
{
};

/* 4011 */
struct __cppobj TSLink<WORDLIST>
{
  TSLink<WORDLIST> *m_prevlink;
  WORDLIST *m_next;
};

/* 4012 */
struct __cppobj HASHKEY_LANGUAGE
{
  unsigned int m_languageID;
  unsigned int m_length;
};

/* 4013 */
struct __cppobj __unaligned __declspec(align(4)) TSHashObject<WORDLIST,HASHKEY_LANGUAGE>
{
  unsigned int m_hashval;
  TSLink<WORDLIST> m_linktoslot;
  TSLink<WORDLIST> m_linktofull;
  HASHKEY_LANGUAGE m_key;
};

/* 4014 */
struct __cppobj TSBaseArray<LanguageWordsRec const *>
{
  TSBaseArray<LanguageWordsRec const *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  const LanguageWordsRec **m_data;
};

/* 4017 */
struct __cppobj TSFixedArray<LanguageWordsRec const *> : TSBaseArray<LanguageWordsRec const *>
{
};

/* 4019 */
struct __cppobj TSGrowableArray<LanguageWordsRec const *> : TSFixedArray<LanguageWordsRec const *>
{
  unsigned int m_chunk;
};

/* 4020 */
struct __cppobj WORDLIST : TSHashObject<WORDLIST,HASHKEY_LANGUAGE>
{
  TSGrowableArray<LanguageWordsRec const *> m_words;
};

/* 4015 */
struct /*VFT*/ TSBaseArray<LanguageWordsRec const *>_vtbl
{
  const char *(__thiscall *TSBaseArray<LanguageWordsRec const *>::MemFileName)(TSBaseArray<LanguageWordsRec const *> *this);
  int (__thiscall *TSBaseArray<LanguageWordsRec const *>::MemLineNo)(TSBaseArray<LanguageWordsRec const *> *this);
};

/* 4016 */
struct /*VFT*/ TSFixedArray<LanguageWordsRec const *>_vtbl
{
  const char *(__thiscall *TSBaseArray<LanguageWordsRec const *>::MemFileName)(struct TSFixedArray<LanguageWordsRec const *> *this);
  int (__thiscall *TSBaseArray<LanguageWordsRec const *>::MemLineNo)(struct TSFixedArray<LanguageWordsRec const *> *this);
};

/* 4018 */
struct /*VFT*/ TSGrowableArray<LanguageWordsRec const *>_vtbl
{
  const char *(__thiscall *TSBaseArray<LanguageWordsRec const *>::MemFileName)(struct TSGrowableArray<LanguageWordsRec const *> *this);
  int (__thiscall *TSBaseArray<LanguageWordsRec const *>::MemLineNo)(struct TSGrowableArray<LanguageWordsRec const *> *this);
};

/* 4021 */
struct __cppobj TSList<WORDLIST,TSGetExplicitLink<WORDLIST> >
{
  int m_linkoffset;
  TSLink<WORDLIST> m_terminator;
};

/* 4022 */
struct __cppobj TSExplicitList<WORDLIST,-572662307> : TSList<WORDLIST,TSGetExplicitLink<WORDLIST> >
{
};

/* 4023 */
struct __cppobj TSBaseArray<TSExplicitList<WORDLIST,-572662307> >
{
  TSBaseArray<TSExplicitList<WORDLIST,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<WORDLIST,-572662307> *m_data;
};

/* 4024 */
struct /*VFT*/ TSBaseArray<TSExplicitList<WORDLIST,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<WORDLIST,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<WORDLIST,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<WORDLIST,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<WORDLIST,-572662307> > *this);
};

/* 4025 */
struct /*VFT*/ TSFixedArray<TSExplicitList<WORDLIST,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<WORDLIST,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<WORDLIST,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<WORDLIST,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<WORDLIST,-572662307> > *this);
};

/* 4026 */
struct __cppobj TSFixedArray<TSExplicitList<WORDLIST,-572662307> > : TSBaseArray<TSExplicitList<WORDLIST,-572662307> >
{
};

/* 4027 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<WORDLIST,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<WORDLIST,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<WORDLIST,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<WORDLIST,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<WORDLIST,-572662307> > *this);
};

/* 4028 */
struct __cppobj TSGrowableArray<TSExplicitList<WORDLIST,-572662307> > : TSFixedArray<TSExplicitList<WORDLIST,-572662307> >
{
  unsigned int m_chunk;
};

/* 4029 */
struct __cppobj TSHashTable<WORDLIST,HASHKEY_LANGUAGE>
{
  TSHashTable<WORDLIST,HASHKEY_LANGUAGE>_vtbl *__vftable /*VFT*/;
  TSExplicitList<WORDLIST,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<WORDLIST,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 4030 */
struct /*VFT*/ TSHashTable<WORDLIST,HASHKEY_LANGUAGE>_vtbl
{
  void (__thiscall *TSHashTable<WORDLIST,HASHKEY_LANGUAGE>::InternalDelete)(TSHashTable<WORDLIST,HASHKEY_LANGUAGE> *this, WORDLIST *);
  WORDLIST *(__thiscall *TSHashTable<WORDLIST,HASHKEY_LANGUAGE>::InternalNew)(TSHashTable<WORDLIST,HASHKEY_LANGUAGE> *this, TSExplicitList<WORDLIST,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<WORDLIST,HASHKEY_LANGUAGE>)(TSHashTable<WORDLIST,HASHKEY_LANGUAGE> *this);
  void (__thiscall *TSHashTable<WORDLIST,HASHKEY_LANGUAGE>::Destroy)(TSHashTable<WORDLIST,HASHKEY_LANGUAGE> *this);
};

/* 4031 */
struct __cppobj TSBaseArray<ChatChannel>
{
  TSBaseArray<ChatChannel>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  ChatChannel *m_data;
};

/* 4032 */
struct /*VFT*/ TSBaseArray<ChatChannel>_vtbl
{
  const char *(__thiscall *TSBaseArray<ChatChannel>::MemFileName)(TSBaseArray<ChatChannel> *this);
  int (__thiscall *TSBaseArray<ChatChannel>::MemLineNo)(TSBaseArray<ChatChannel> *this);
};

/* 4033 */
struct __cppobj TSLink<PENDINGUSERLIST>
{
  TSLink<PENDINGUSERLIST> *m_prevlink;
  PENDINGUSERLIST *m_next;
};

/* 4036 */
struct __cppobj TSList<PENDINGUSERLIST,TSGetLink<PENDINGUSERLIST> >
{
  int m_linkoffset;
  TSLink<PENDINGUSERLIST> m_terminator;
};

/* 4037 */
struct __cppobj __declspec(align(4)) ChatChannel
{
  int localID;
  char name[128];
  TSList<PENDINGUSERLIST,TSGetLink<PENDINGUSERLIST> > pendingNames;
  unsigned __int8 channelFlags;
};

/* 4034 */
struct __cppobj TSLinkedNode<PENDINGUSERLIST>
{
  TSLink<PENDINGUSERLIST> m_link;
};

/* 4035 */
struct __cppobj __declspec(align(8)) PENDINGUSERLIST : TSLinkedNode<PENDINGUSERLIST>
{
  unsigned __int64 guid;
  unsigned __int8 flags;
};

/* 4038 */
struct /*VFT*/ TSFixedArray<ChatChannel>_vtbl
{
  const char *(__thiscall *TSBaseArray<ChatChannel>::MemFileName)(struct TSFixedArray<ChatChannel> *this);
  int (__thiscall *TSBaseArray<ChatChannel>::MemLineNo)(struct TSFixedArray<ChatChannel> *this);
};

/* 4039 */
struct __cppobj TSFixedArray<ChatChannel> : TSBaseArray<ChatChannel>
{
};

/* 4040 */
struct /*VFT*/ TSGrowableArray<ChatChannel>_vtbl
{
  const char *(__thiscall *TSBaseArray<ChatChannel>::MemFileName)(struct TSGrowableArray<ChatChannel> *this);
  int (__thiscall *TSBaseArray<ChatChannel>::MemLineNo)(struct TSGrowableArray<ChatChannel> *this);
};

/* 4041 */
struct __cppobj TSGrowableArray<ChatChannel> : TSFixedArray<ChatChannel>
{
  unsigned int m_chunk;
};

/* 4042 */
struct __cppobj CGChat
{
};

/* 4043 */
struct regmatch_t
{
  int rm_so;
  int rm_eo;
};

/* 4044 */
struct $C2EE51B6E265B8022EFAA742B0C5841A
{
  SLASH_COMMAND_ID id;
  const char *string;
};

/* 4045 */
struct __cppobj CGCursor
{
  HMODEL__ *m_model;
  CURSORITEMTYPE m_heldItem;
  CURSORANIMATIONS m_cursorMode;
  CURSORANIMATIONS m_mouseOver;
};

/* 4046 */
struct __cppobj CinematicCameraRec
{
  int m_ID;
  const char *m_model;
  int m_soundID;
  float m_originX;
  float m_originY;
  float m_originZ;
  float m_originFacing;
};

/* 4047 */
struct __cppobj WowClientDB<CinematicCameraRec>
{
  CinematicCameraRec *m_records;
  int m_numRecords;
  CinematicCameraRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4048 */
struct __cppobj CinematicSequencesRec
{
  int m_ID;
  int m_soundID;
  int m_camera[8];
};

/* 4049 */
struct __cppobj WowClientDB<CinematicSequencesRec>
{
  CinematicSequencesRec *m_records;
  int m_numRecords;
  CinematicSequencesRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4050 */
struct __cppobj TSBaseArray<NearestEnemyData>
{
  TSBaseArray<NearestEnemyData>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  NearestEnemyData *m_data;
};

/* 4051 */
struct /*VFT*/ TSBaseArray<NearestEnemyData>_vtbl
{
  const char *(__thiscall *TSBaseArray<NearestEnemyData>::MemFileName)(TSBaseArray<NearestEnemyData> *this);
  int (__thiscall *TSBaseArray<NearestEnemyData>::MemLineNo)(TSBaseArray<NearestEnemyData> *this);
};

/* 4052 */
struct __declspec(align(8)) NearestEnemyData
{
  unsigned __int64 guid;
  float distSq;
};

/* 4053 */
struct /*VFT*/ TSFixedArray<NearestEnemyData>_vtbl
{
  const char *(__thiscall *TSBaseArray<NearestEnemyData>::MemFileName)(struct TSFixedArray<NearestEnemyData> *this);
  int (__thiscall *TSBaseArray<NearestEnemyData>::MemLineNo)(struct TSFixedArray<NearestEnemyData> *this);
};

/* 4054 */
struct __cppobj TSFixedArray<NearestEnemyData> : TSBaseArray<NearestEnemyData>
{
};

/* 4055 */
struct /*VFT*/ TSGrowableArray<NearestEnemyData>_vtbl
{
  const char *(__thiscall *TSBaseArray<NearestEnemyData>::MemFileName)(struct TSGrowableArray<NearestEnemyData> *this);
  int (__thiscall *TSBaseArray<NearestEnemyData>::MemLineNo)(struct TSGrowableArray<NearestEnemyData> *this);
};

/* 4056 */
struct __cppobj TSGrowableArray<NearestEnemyData> : TSFixedArray<NearestEnemyData>
{
  unsigned int m_chunk;
};

/* 4057 */
struct __cppobj GAMEERRORDESC
{
  const char *stringToken;
  ERROR_TEXT_PLACEMENT textPlacement;
  const char *soundName;
  VOCALUISOUNDS voiceID;
  int supressText;
  SLASH_COMMAND_ID slashCmd;
};

/* 4058 */
struct CinematicData
{
  const CinematicSequencesRec *sequence;
  Sound *sequenceMusic;
  int sequenceIndex;
  const CinematicCameraRec *camera;
  Sound *cameraMusic;
  int zoneMusicWasEnabled;
};

/* 4059 */
struct $C34CB3D2924EB656E7B70F230160FA58
{
  CURSORANIMATIONS animation;
  const char *string;
};

/* 4060 */
struct __cppobj CGGameUI
{
};

/* 4061 */
struct ClosestObjectMatchData
{
  OBJECT_TYPE type;
  const char *match;
  CGUnit_C *source;
  CGObject_C *object;
  int best_match;
  float best_distance;
};

/* 4062 */
struct __cppobj SPELLLOG : DAMAGELOGBASE
{
  unsigned int auraEffectID;
  unsigned int spellID;
  unsigned int damageType;
  float resistanceCoefficient;
};

/* 4063 */
struct /*VFT*/ SPELLLOG_vtbl
{
  void (__thiscall *SPELLLOG::UI)(SPELLLOG *this, CDataStore *);
  void (__thiscall *UI)(struct SPELLLOG *this, CDataStore *);
};

/* 4064 */
struct __cppobj TSLink<ITEMPORTRAIT>
{
  TSLink<ITEMPORTRAIT> *m_prevlink;
  ITEMPORTRAIT *m_next;
};

/* 4065 */
struct __cppobj TSHashObject<ITEMPORTRAIT,HASHKEY_STR>
{
  unsigned int m_hashval;
  __unaligned __declspec(align(1)) TSLink<ITEMPORTRAIT> m_linktoslot;
  __unaligned __declspec(align(1)) TSLink<ITEMPORTRAIT> m_linktofull;
  HASHKEY_STR m_key;
};

/* 4066 */
struct __cppobj PortraitData
{
  HTEXTURE__ *texture;
  TSGrowableArray<NTempest::CImVector> pixels;
};

/* 4067 */
struct __cppobj ITEMPORTRAIT : TSHashObject<ITEMPORTRAIT,HASHKEY_STR>
{
  PortraitData portrait;
};

/* 4068 */
struct __cppobj TSList<ITEMPORTRAIT,TSGetExplicitLink<ITEMPORTRAIT> >
{
  int m_linkoffset;
  TSLink<ITEMPORTRAIT> m_terminator;
};

/* 4069 */
struct __cppobj TSExplicitList<ITEMPORTRAIT,-572662307> : TSList<ITEMPORTRAIT,TSGetExplicitLink<ITEMPORTRAIT> >
{
};

/* 4070 */
struct __cppobj TSBaseArray<TSExplicitList<ITEMPORTRAIT,-572662307> >
{
  TSBaseArray<TSExplicitList<ITEMPORTRAIT,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<ITEMPORTRAIT,-572662307> *m_data;
};

/* 4071 */
struct /*VFT*/ TSBaseArray<TSExplicitList<ITEMPORTRAIT,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<ITEMPORTRAIT,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<ITEMPORTRAIT,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<ITEMPORTRAIT,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<ITEMPORTRAIT,-572662307> > *this);
};

/* 4072 */
struct /*VFT*/ TSFixedArray<TSExplicitList<ITEMPORTRAIT,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<ITEMPORTRAIT,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<ITEMPORTRAIT,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<ITEMPORTRAIT,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<ITEMPORTRAIT,-572662307> > *this);
};

/* 4073 */
struct __cppobj TSFixedArray<TSExplicitList<ITEMPORTRAIT,-572662307> > : TSBaseArray<TSExplicitList<ITEMPORTRAIT,-572662307> >
{
};

/* 4074 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<ITEMPORTRAIT,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<ITEMPORTRAIT,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<ITEMPORTRAIT,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<ITEMPORTRAIT,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<ITEMPORTRAIT,-572662307> > *this);
};

/* 4075 */
struct __cppobj TSGrowableArray<TSExplicitList<ITEMPORTRAIT,-572662307> > : TSFixedArray<TSExplicitList<ITEMPORTRAIT,-572662307> >
{
  unsigned int m_chunk;
};

/* 4076 */
struct __cppobj TSHashTable<ITEMPORTRAIT,HASHKEY_STR>
{
  TSHashTable<ITEMPORTRAIT,HASHKEY_STR>_vtbl *__vftable /*VFT*/;
  TSExplicitList<ITEMPORTRAIT,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<ITEMPORTRAIT,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 4077 */
struct /*VFT*/ TSHashTable<ITEMPORTRAIT,HASHKEY_STR>_vtbl
{
  void (__thiscall *TSHashTable<ITEMPORTRAIT,HASHKEY_STR>::InternalDelete)(TSHashTable<ITEMPORTRAIT,HASHKEY_STR> *this, ITEMPORTRAIT *);
  ITEMPORTRAIT *(__thiscall *TSHashTable<ITEMPORTRAIT,HASHKEY_STR>::InternalNew)(TSHashTable<ITEMPORTRAIT,HASHKEY_STR> *this, TSExplicitList<ITEMPORTRAIT,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<ITEMPORTRAIT,HASHKEY_STR>)(TSHashTable<ITEMPORTRAIT,HASHKEY_STR> *this);
  void (__thiscall *TSHashTable<ITEMPORTRAIT,HASHKEY_STR>::Destroy)(TSHashTable<ITEMPORTRAIT,HASHKEY_STR> *this);
};

/* 4078 */
struct __cppobj TSLink<PLAYERPORTRAIT>
{
  TSLink<PLAYERPORTRAIT> *m_prevlink;
  PLAYERPORTRAIT *m_next;
};

/* 4079 */
struct __cppobj TSHashObject<PLAYERPORTRAIT,CHashKeyGUID>
{
  unsigned int m_hashval;
  __unaligned __declspec(align(1)) TSLink<PLAYERPORTRAIT> m_linktoslot;
  __unaligned __declspec(align(1)) TSLink<PLAYERPORTRAIT> m_linktofull;
  CHashKeyGUID m_key;
};

/* 4080 */
struct __cppobj __declspec(align(8)) PLAYERPORTRAIT : TSHashObject<PLAYERPORTRAIT,CHashKeyGUID>
{
  unsigned __int8 dirty;
  PortraitData portrait;
};

/* 4081 */
struct __cppobj TSList<PLAYERPORTRAIT,TSGetExplicitLink<PLAYERPORTRAIT> >
{
  int m_linkoffset;
  TSLink<PLAYERPORTRAIT> m_terminator;
};

/* 4082 */
struct __cppobj TSExplicitList<PLAYERPORTRAIT,-572662307> : TSList<PLAYERPORTRAIT,TSGetExplicitLink<PLAYERPORTRAIT> >
{
};

/* 4083 */
struct __cppobj TSBaseArray<TSExplicitList<PLAYERPORTRAIT,-572662307> >
{
  TSBaseArray<TSExplicitList<PLAYERPORTRAIT,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<PLAYERPORTRAIT,-572662307> *m_data;
};

/* 4084 */
struct /*VFT*/ TSBaseArray<TSExplicitList<PLAYERPORTRAIT,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<PLAYERPORTRAIT,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<PLAYERPORTRAIT,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<PLAYERPORTRAIT,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<PLAYERPORTRAIT,-572662307> > *this);
};

/* 4085 */
struct /*VFT*/ TSFixedArray<TSExplicitList<PLAYERPORTRAIT,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<PLAYERPORTRAIT,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<PLAYERPORTRAIT,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<PLAYERPORTRAIT,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<PLAYERPORTRAIT,-572662307> > *this);
};

/* 4086 */
struct __cppobj TSFixedArray<TSExplicitList<PLAYERPORTRAIT,-572662307> > : TSBaseArray<TSExplicitList<PLAYERPORTRAIT,-572662307> >
{
};

/* 4087 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<PLAYERPORTRAIT,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<PLAYERPORTRAIT,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<PLAYERPORTRAIT,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<PLAYERPORTRAIT,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<PLAYERPORTRAIT,-572662307> > *this);
};

/* 4088 */
struct __cppobj TSGrowableArray<TSExplicitList<PLAYERPORTRAIT,-572662307> > : TSFixedArray<TSExplicitList<PLAYERPORTRAIT,-572662307> >
{
  unsigned int m_chunk;
};

/* 4089 */
struct __cppobj TSHashTable<PLAYERPORTRAIT,CHashKeyGUID>
{
  TSHashTable<PLAYERPORTRAIT,CHashKeyGUID>_vtbl *__vftable /*VFT*/;
  TSExplicitList<PLAYERPORTRAIT,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<PLAYERPORTRAIT,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 4090 */
struct /*VFT*/ TSHashTable<PLAYERPORTRAIT,CHashKeyGUID>_vtbl
{
  void (__thiscall *TSHashTable<PLAYERPORTRAIT,CHashKeyGUID>::InternalDelete)(TSHashTable<PLAYERPORTRAIT,CHashKeyGUID> *this, PLAYERPORTRAIT *);
  PLAYERPORTRAIT *(__thiscall *TSHashTable<PLAYERPORTRAIT,CHashKeyGUID>::InternalNew)(TSHashTable<PLAYERPORTRAIT,CHashKeyGUID> *this, TSExplicitList<PLAYERPORTRAIT,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<PLAYERPORTRAIT,CHashKeyGUID>)(TSHashTable<PLAYERPORTRAIT,CHashKeyGUID> *this);
  void (__thiscall *TSHashTable<PLAYERPORTRAIT,CHashKeyGUID>::Destroy)(TSHashTable<PLAYERPORTRAIT,CHashKeyGUID> *this);
};

/* 4091 */
struct $FDAF3F268BFC9319992E6F497B5DE79F
{
  int enable;
  int omni;
  float dirx;
  float diry;
  float dirz;
  float ambColorr;
  float ambColorg;
  float ambColorb;
  float dirColorr;
  float dirColorg;
  float dirColorb;
  float ambIntens;
  float dirIntens;
};

/* 4092 */
struct __cppobj TSLink<DIRTYFACE>
{
  TSLink<DIRTYFACE> *m_prevlink;
  DIRTYFACE *m_next;
};

/* 4093 */
struct __cppobj TSLinkedNode<DIRTYFACE>
{
  TSLink<DIRTYFACE> m_link;
};

/* 4094 */
struct __cppobj DIRTYFACE : TSLinkedNode<DIRTYFACE>
{
  unsigned __int64 guid;
};

/* 4095 */
struct __cppobj TSList<DIRTYFACE,TSGetLink<DIRTYFACE> >
{
  int m_linkoffset;
  TSLink<DIRTYFACE> m_terminator;
};

/* 4096 */
struct __cppobj TSLink<UNITPORTRAIT>
{
  TSLink<UNITPORTRAIT> *m_prevlink;
  UNITPORTRAIT *m_next;
};

/* 4097 */
struct __cppobj __declspec(align(4)) TSHashObject<UNITPORTRAIT,HASHKEY_NONE>
{
  unsigned int m_hashval;
  __unaligned __declspec(align(1)) TSLink<UNITPORTRAIT> m_linktoslot;
  __unaligned __declspec(align(1)) TSLink<UNITPORTRAIT> m_linktofull;
  HASHKEY_NONE m_key;
};

/* 4098 */
struct __cppobj UNITPORTRAIT : TSHashObject<UNITPORTRAIT,HASHKEY_NONE>
{
  PortraitData portrait;
};

/* 4099 */
struct __cppobj TSList<UNITPORTRAIT,TSGetExplicitLink<UNITPORTRAIT> >
{
  int m_linkoffset;
  TSLink<UNITPORTRAIT> m_terminator;
};

/* 4100 */
struct __cppobj TSExplicitList<UNITPORTRAIT,-572662307> : TSList<UNITPORTRAIT,TSGetExplicitLink<UNITPORTRAIT> >
{
};

/* 4101 */
struct __cppobj TSBaseArray<TSExplicitList<UNITPORTRAIT,-572662307> >
{
  TSBaseArray<TSExplicitList<UNITPORTRAIT,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<UNITPORTRAIT,-572662307> *m_data;
};

/* 4102 */
struct /*VFT*/ TSBaseArray<TSExplicitList<UNITPORTRAIT,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<UNITPORTRAIT,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<UNITPORTRAIT,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<UNITPORTRAIT,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<UNITPORTRAIT,-572662307> > *this);
};

/* 4103 */
struct /*VFT*/ TSFixedArray<TSExplicitList<UNITPORTRAIT,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<UNITPORTRAIT,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<UNITPORTRAIT,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<UNITPORTRAIT,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<UNITPORTRAIT,-572662307> > *this);
};

/* 4104 */
struct __cppobj TSFixedArray<TSExplicitList<UNITPORTRAIT,-572662307> > : TSBaseArray<TSExplicitList<UNITPORTRAIT,-572662307> >
{
};

/* 4105 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<UNITPORTRAIT,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<UNITPORTRAIT,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<UNITPORTRAIT,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<UNITPORTRAIT,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<UNITPORTRAIT,-572662307> > *this);
};

/* 4106 */
struct __cppobj TSGrowableArray<TSExplicitList<UNITPORTRAIT,-572662307> > : TSFixedArray<TSExplicitList<UNITPORTRAIT,-572662307> >
{
  unsigned int m_chunk;
};

/* 4107 */
struct __cppobj TSHashTable<UNITPORTRAIT,HASHKEY_NONE>
{
  TSHashTable<UNITPORTRAIT,HASHKEY_NONE>_vtbl *__vftable /*VFT*/;
  TSExplicitList<UNITPORTRAIT,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<UNITPORTRAIT,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 4108 */
struct /*VFT*/ TSHashTable<UNITPORTRAIT,HASHKEY_NONE>_vtbl
{
  void (__thiscall *TSHashTable<UNITPORTRAIT,HASHKEY_NONE>::InternalDelete)(TSHashTable<UNITPORTRAIT,HASHKEY_NONE> *this, UNITPORTRAIT *);
  UNITPORTRAIT *(__thiscall *TSHashTable<UNITPORTRAIT,HASHKEY_NONE>::InternalNew)(TSHashTable<UNITPORTRAIT,HASHKEY_NONE> *this, TSExplicitList<UNITPORTRAIT,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<UNITPORTRAIT,HASHKEY_NONE>)(TSHashTable<UNITPORTRAIT,HASHKEY_NONE> *this);
  void (__thiscall *TSHashTable<UNITPORTRAIT,HASHKEY_NONE>::Destroy)(TSHashTable<UNITPORTRAIT,HASHKEY_NONE> *this);
};

/* 4110 */
struct __cppobj TSLink<CACHEENTRY>
{
  TSLink<CACHEENTRY> *m_prevlink;
  CACHEENTRY *m_next;
};

/* 4116 */
struct __cppobj TSList<CACHEENTRY,TSGetExplicitLink<CACHEENTRY> >
{
  int m_linkoffset;
  TSLink<CACHEENTRY> m_terminator;
};

/* 4117 */
struct __cppobj TSExplicitList<CACHEENTRY,32> : TSList<CACHEENTRY,TSGetExplicitLink<CACHEENTRY> >
{
};

/* 4119 */
struct __cppobj TSExplicitList<CACHEENTRY,-572662307> : TSList<CACHEENTRY,TSGetExplicitLink<CACHEENTRY> >
{
};

/* 4121 */
struct __cppobj TSBaseArray<TSExplicitList<CACHEENTRY,-572662307> >
{
  TSBaseArray<TSExplicitList<CACHEENTRY,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<CACHEENTRY,-572662307> *m_data;
};

/* 4124 */
struct __cppobj TSFixedArray<TSExplicitList<CACHEENTRY,-572662307> > : TSBaseArray<TSExplicitList<CACHEENTRY,-572662307> >
{
};

/* 4126 */
struct __cppobj TSGrowableArray<TSExplicitList<CACHEENTRY,-572662307> > : TSFixedArray<TSExplicitList<CACHEENTRY,-572662307> >
{
  unsigned int m_chunk;
};

/* 4118 */
struct __cppobj TSHashTable<CACHEENTRY,HASHKEY_STRI>
{
  TSHashTable<CACHEENTRY,HASHKEY_STRI>_vtbl *__vftable /*VFT*/;
  TSExplicitList<CACHEENTRY,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<CACHEENTRY,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 4109 */
struct __cppobj CACHEOBJECT : CHandleObject
{
  TSExplicitList<CACHEENTRY,32> m_LRUList;
  TSHashTable<CACHEENTRY,HASHKEY_STRI> m_cacheTable;
  unsigned int m_cacheSize;
  unsigned int m_currentCacheSize;
  CACHEMODE m_cacheMode;
  unsigned int m_cacheEntries;
  unsigned int m_cacheTime;
};

/* 4111 */
struct __cppobj TSHashObject<CACHEENTRY,HASHKEY_STRI>
{
  unsigned int m_hashval;
  __unaligned __declspec(align(1)) TSLink<CACHEENTRY> m_linktoslot;
  __unaligned __declspec(align(1)) TSLink<CACHEENTRY> m_linktofull;
  HASHKEY_STRI m_key;
};

/* 4114 */
struct $3111B90C1AFE2BE367F042909965DA1E
{
  _BYTE gap0[24];
  unsigned int m_size;
};

/* 4115 */
union $1F74D6EB6FDFC0B8E801917C178665EA
{
  TEXTUREINFO m_textureInfo;
  $3111B90C1AFE2BE367F042909965DA1E __s1;
};

/* 4112 */
struct __cppobj __unaligned __declspec(align(4)) CACHEENTRY : CHandleObject, TSHashObject<CACHEENTRY,HASHKEY_STRI>
{
  TSLink<CACHEENTRY> m_cacheLink;
  HTEXTURE__ *m_texture;
  $1F74D6EB6FDFC0B8E801917C178665EA ___u4;
  unsigned int m_expireTime;
  int m_uncached;
  HMIPPEDTEXTURE__ *m_selfReference;
};

/* 4120 */
struct /*VFT*/ TSHashTable<CACHEENTRY,HASHKEY_STRI>_vtbl
{
  void (__thiscall *TSHashTable<CACHEENTRY,HASHKEY_STRI>::InternalDelete)(TSHashTable<CACHEENTRY,HASHKEY_STRI> *this, CACHEENTRY *);
  CACHEENTRY *(__thiscall *TSHashTable<CACHEENTRY,HASHKEY_STRI>::InternalNew)(TSHashTable<CACHEENTRY,HASHKEY_STRI> *this, TSExplicitList<CACHEENTRY,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<CACHEENTRY,HASHKEY_STRI>)(TSHashTable<CACHEENTRY,HASHKEY_STRI> *this);
  void (__thiscall *TSHashTable<CACHEENTRY,HASHKEY_STRI>::Destroy)(TSHashTable<CACHEENTRY,HASHKEY_STRI> *this);
};

/* 4122 */
struct /*VFT*/ TSBaseArray<TSExplicitList<CACHEENTRY,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CACHEENTRY,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<CACHEENTRY,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CACHEENTRY,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<CACHEENTRY,-572662307> > *this);
};

/* 4113 */
struct /*VFT*/ CACHEENTRY_vtbl
{
  void (__thiscall *~CACHEENTRY)(CACHEENTRY *this);
  const char *(__thiscall *CHandleObject::GetObjectName)(struct CACHEENTRY *this);
};

/* 4123 */
struct /*VFT*/ TSFixedArray<TSExplicitList<CACHEENTRY,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CACHEENTRY,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<CACHEENTRY,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CACHEENTRY,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<CACHEENTRY,-572662307> > *this);
};

/* 4125 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<CACHEENTRY,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CACHEENTRY,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<CACHEENTRY,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CACHEENTRY,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<CACHEENTRY,-572662307> > *this);
};

/* 4127 */
struct /*VFT*/ CACHEOBJECT_vtbl
{
  void (__thiscall *CACHEOBJECT::~CACHEOBJECT)(CACHEOBJECT *this);
  const char *(__thiscall *CHandleObject::GetObjectName)(struct CACHEOBJECT *this);
};

/* 4128 */
struct $29ED6DE908FDC5F7CB4247306ADEAAFA
{
  int absvalue;
  float speed[2];
};

/* 4129 */
struct __cppobj CGInputControl
{
  unsigned int m_initializeTime;
  unsigned int m_controlFlags;
  float m_mouseChangeX;
  float m_mouseChangeY;
  unsigned int m_lastFrameMouseMoved;
  unsigned int m_mouseDownTime;
  CGInputReleaseAction m_releaseAction;
};

/* 4130 */
struct $B11DDA1BE2BD44CB34DAF8CDB19606DC
{
  float slope;
  float angle;
};

/* 4131 */
const struct $D4F5797CA82ECBC8E772137FE577B23D
{
  float slope;
  float angle;
};

/* 4132 */
struct __cppobj CameraShakesRec
{
  int m_ID;
  int m_shakeType;
  int m_direction;
  float m_amplitude;
  float m_frequency;
  float m_duration;
  float m_phase;
  float m_coefficient;
};

/* 4133 */
struct __cppobj WowClientDB<CameraShakesRec>
{
  CameraShakesRec *m_records;
  int m_numRecords;
  CameraShakesRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4134 */
struct RangeList::range
{
  float m_min;
  float m_max;
};

/* 4135 */
struct __cppobj RangeList
{
  int m_numranges;
  RangeList::range m_ranges[4];
};

/* 4136 */
struct __cppobj TSLink<CWFrustum>
{
  TSLink<CWFrustum> *m_prevlink;
  CWFrustum *m_next;
};

/* 4137 */
struct __cppobj __unaligned __declspec(align(4)) CWFrustum
{
  NTempest::C4Plane planes[6];
  NTempest::C3Vector corners[8];
  NTempest::C3Vector lookPos;
  NTempest::C3Vector lookAt;
  NTempest::C3Vector lookUp;
  float fovy;
  float aspect;
  float minz;
  float maxz;
  TSLink<CWFrustum> sceneLink;
};

/* 4138 */
struct __cppobj SpellEffectNamesRec
{
  int m_EnumID;
  const char *m_name_lang[8];
  int m_name_flag;
  int m_generatedID;
};

/* 4139 */
struct __cppobj WowClientDB<SpellEffectNamesRec>
{
  SpellEffectNamesRec *m_records;
  int m_numRecords;
  SpellEffectNamesRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4140 */
struct __cppobj SpellAuraNamesRec
{
  int m_EnumID;
  int m_specialMiscValue;
  const char *m_globalstrings_tag;
  const char *m_name_lang[8];
  int m_name_flag;
  int m_generatedID;
};

/* 4141 */
struct __cppobj WowClientDB<SpellAuraNamesRec>
{
  SpellAuraNamesRec *m_records;
  int m_numRecords;
  SpellAuraNamesRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4142 */
struct __cppobj SpellDispelTypeRec
{
  int m_ID;
  const char *m_name_lang[8];
  int m_name_flag;
};

/* 4143 */
struct __cppobj WowClientDB<SpellDispelTypeRec>
{
  SpellDispelTypeRec *m_records;
  int m_numRecords;
  SpellDispelTypeRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4144 */
struct __cppobj CreatureTypeRec
{
  int m_ID;
  const char *m_name_lang[8];
  int m_name_flag;
};

/* 4145 */
struct __cppobj WowClientDB<CreatureTypeRec>
{
  CreatureTypeRec *m_records;
  int m_numRecords;
  CreatureTypeRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4146 */
struct __cppobj LockRec
{
  int m_ID;
  int m_Type[4];
  int m_Index[4];
  int m_Skill[4];
  int m_Action[4];
};

/* 4147 */
struct __cppobj WowClientDB<LockRec>
{
  LockRec *m_records;
  int m_numRecords;
  LockRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4148 */
struct __cppobj LockTypeRec
{
  int m_ID;
  const char *m_name_lang[8];
  int m_name_flag;
  const char *m_resourceName_lang[8];
  int m_resourceName_flag;
  const char *m_verb_lang[8];
  int m_verb_flag;
};

/* 4149 */
struct __cppobj WowClientDB<LockTypeRec>
{
  LockTypeRec *m_records;
  int m_numRecords;
  LockTypeRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4150 */
struct TooltipExtendedItemInfo
{
  int enchantment[5];
  unsigned int enchantmentExpiration[5];
  unsigned int cooldownTime;
  int proposedEnchantment;
  unsigned __int64 creator;
};

/* 4151 */
struct $1E7A116434EB22EAF378861928FB07C8
{
  NTempest::CRect *(__fastcall *function)(NTempest::CRect *result, SCREENRECTGRIDS, NTempest::CRect);
};

/* 4152 */
const struct $071383A467E74E415594247BC2EDED0C
{
  NTempest::CRect *(__fastcall *function)(NTempest::CRect *result, SCREENRECTGRIDS, NTempest::CRect);
};

/* 4153 */
struct __cppobj TSBaseArray<NTempest::CRect>
{
  TSBaseArray<NTempest::CRect>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  NTempest::CRect *m_data;
};

/* 4154 */
struct /*VFT*/ TSBaseArray<NTempest::CRect>_vtbl
{
  const char *(__thiscall *TSBaseArray<NTempest::CRect>::MemFileName)(TSBaseArray<NTempest::CRect> *this);
  int (__thiscall *TSBaseArray<NTempest::CRect>::MemLineNo)(TSBaseArray<NTempest::CRect> *this);
};

/* 4155 */
struct /*VFT*/ TSFixedArray<NTempest::CRect>_vtbl
{
  const char *(__thiscall *TSBaseArray<NTempest::CRect>::MemFileName)(struct TSFixedArray<NTempest::CRect> *this);
  int (__thiscall *TSBaseArray<NTempest::CRect>::MemLineNo)(struct TSFixedArray<NTempest::CRect> *this);
};

/* 4156 */
struct __cppobj TSFixedArray<NTempest::CRect> : TSBaseArray<NTempest::CRect>
{
};

/* 4157 */
struct /*VFT*/ TSGrowableArray<NTempest::CRect>_vtbl
{
  const char *(__thiscall *TSBaseArray<NTempest::CRect>::MemFileName)(struct TSGrowableArray<NTempest::CRect> *this);
  int (__thiscall *TSBaseArray<NTempest::CRect>::MemLineNo)(struct TSGrowableArray<NTempest::CRect> *this);
};

/* 4158 */
struct __cppobj TSGrowableArray<NTempest::CRect> : TSFixedArray<NTempest::CRect>
{
  unsigned int m_chunk;
};

/* 4159 */
struct __cppobj GRIDRECTLIST
{
  TSGrowableArray<NTempest::CRect> rectList;
};

/* 4160 */
struct __cppobj TSLink<BFSNODE>
{
  TSLink<BFSNODE> *m_prevlink;
  BFSNODE *m_next;
};

/* 4161 */
struct __cppobj TSLinkedNode<BFSNODE>
{
  TSLink<BFSNODE> m_link;
};

/* 4162 */
struct __cppobj __unaligned __declspec(align(4)) BFSNODE : TSLinkedNode<BFSNODE>
{
  NTempest::CRect nodeRect;
  TEST_DIRECTION dontTestDirection;
};

/* 4163 */
struct __cppobj TSList<BFSNODE,TSGetLink<BFSNODE> >
{
  int m_linkoffset;
  TSLink<BFSNODE> m_terminator;
};

/* 4164 */
struct __cppobj TSLink<NETCLIENTNODE>
{
  TSLink<NETCLIENTNODE> *m_prevlink;
  NETCLIENTNODE *m_next;
};

/* 4165 */
struct __cppobj TSLinkedNode<NETCLIENTNODE>
{
  TSLink<NETCLIENTNODE> m_link;
};

/* 4166 */
struct __cppobj __unaligned __declspec(align(4)) NETCLIENTNODE : TSLinkedNode<NETCLIENTNODE>
{
  NetClient *client;
};

/* 4167 */
struct __cppobj TSList<NETCLIENTNODE,TSGetLink<NETCLIENTNODE> >
{
  int m_linkoffset;
  TSLink<NETCLIENTNODE> m_terminator;
};

/* 4168 */
struct CLIENT_NETSTATS
{
  unsigned int bytesSent;
  unsigned int messagesSent;
  unsigned int sendTimestamp;
  unsigned int bytesReceived;
  unsigned int messagesReceived;
  unsigned int receivTimestamp;
  unsigned int logTimestamp;
};

/* 4169 */
struct __cppobj WMOAreaTableRec
{
  int m_ID;
  int m_WMOID;
  int m_NameSetID;
  int m_WMOGroupID;
  int m_DayAmbienceSoundID;
  int m_NightAmbienceSoundID;
  int m_SoundProviderPref;
  int m_SoundProviderPrefUnderwater;
  int m_MIDIAmbience;
  int m_MIDIAmbienceUnderwater;
  int m_ZoneMusic;
  int m_IntroSound;
  int m_IntroPriority;
  int m_Flags;
  const char *m_AreaName_lang[8];
  int m_AreaName_flag;
};

/* 4170 */
struct __cppobj WowClientDB<WMOAreaTableRec>
{
  WMOAreaTableRec *m_records;
  int m_numRecords;
  WMOAreaTableRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4171 */
struct __cppobj TSBaseArray<ItemSubClassRec const *>
{
  TSBaseArray<ItemSubClassRec const *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  const ItemSubClassRec **m_data;
};

/* 4172 */
struct /*VFT*/ TSBaseArray<ItemSubClassRec const *>_vtbl
{
  const char *(__thiscall *TSBaseArray<ItemSubClassRec const *>::MemFileName)(TSBaseArray<ItemSubClassRec const *> *this);
  int (__thiscall *TSBaseArray<ItemSubClassRec const *>::MemLineNo)(TSBaseArray<ItemSubClassRec const *> *this);
};

/* 4173 */
struct /*VFT*/ TSFixedArray<ItemSubClassRec const *>_vtbl
{
  const char *(__thiscall *TSBaseArray<ItemSubClassRec const *>::MemFileName)(struct TSFixedArray<ItemSubClassRec const *> *this);
  int (__thiscall *TSBaseArray<ItemSubClassRec const *>::MemLineNo)(struct TSFixedArray<ItemSubClassRec const *> *this);
};

/* 4174 */
struct __cppobj TSFixedArray<ItemSubClassRec const *> : TSBaseArray<ItemSubClassRec const *>
{
};

/* 4175 */
struct __cppobj NamesReservedRec
{
  int m_ID;
  const char *m_Name;
};

/* 4176 */
struct __cppobj NamesProfanityRec
{
  int m_ID;
  const char *m_Name;
};

/* 4177 */
struct __cppobj SpellChainEffectsRec
{
  int m_ID;
  float m_AvgSegLen;
  float m_Width;
  float m_NoiseScale;
  float m_TexCoordScale;
  int m_SegDuration;
  int m_SegDelay;
  const char *m_Texture;
};

/* 4178 */
struct __cppobj TransportAnimationRec
{
  int m_ID;
  int m_TransportID;
  int m_TimeIndex;
  float m_PosX;
  float m_PosY;
  float m_PosZ;
};

/* 4179 */
struct __cppobj SpellVisualPrecastTransitionsRec
{
  int m_ID;
  const char *m_PrecastLoadAnimName;
  const char *m_PrecastHoldAnimName;
};

/* 4180 */
struct __cppobj EmotesRec
{
  int m_ID;
  int m_EmoteAnimID;
  int m_EmoteFlags;
  int m_EmoteSpecProc;
  int m_EmoteSpecProcParam;
};

/* 4181 */
struct __cppobj EmoteAnimsRec
{
  int m_ID;
  int m_ProcessedAnimIndex;
  const char *m_AnimName;
};

/* 4182 */
struct __cppobj UnitBloodRec
{
  int m_ID;
  int m_CombatBloodSpurtFront[2];
  int m_CombatBloodSpurtBack[2];
  const char *m_GroundBlood[5];
};

/* 4183 */
struct __cppobj DeathThudLookupsRec
{
  int m_ID;
  int m_SizeClass;
  int m_TerrainTypeSoundID;
  int m_SoundEntryID;
  int m_SoundEntryIDWater;
};

/* 4184 */
struct __cppobj TaxiPathNodeRec
{
  int m_ID;
  int m_PathID;
  int m_NodeIndex;
  int m_ContinentID;
  float m_LocX;
  float m_LocY;
  float m_LocZ;
  int m_flags;
};

/* 4185 */
struct __cppobj TaxiPathRec
{
  int m_ID;
  int m_FromTaxiNode;
  int m_ToTaxiNode;
  int m_Cost;
};

/* 4186 */
struct __cppobj GameObjectDisplayInfoRec
{
  int m_ID;
  const char *m_modelName;
  int m_Sound[10];
};

/* 4187 */
struct __cppobj StringLookupsRec
{
  int m_ID;
  const char *m_String;
};

/* 4188 */
struct __cppobj SpellEffectCameraShakesRec
{
  int m_ID;
  int m_CameraShake[3];
};

/* 4189 */
struct __cppobj FootprintTexturesRec
{
  int m_ID;
  const char *m_FootstepFilename;
};

/* 4190 */
struct __cppobj UISoundLookupsRec
{
  int m_ID;
  int m_SoundID;
  const char *m_SoundName;
};

/* 4191 */
struct __cppobj AttackAnimTypesRec
{
  int m_AnimID;
  const char *m_AnimName;
};

/* 4192 */
struct __cppobj AttackAnimKitsRec
{
  int m_ID;
  int m_ItemSubclassID;
  int m_AnimTypeID;
  int m_AnimFrequency;
  int m_WhichHand;
};

/* 4193 */
struct __cppobj SpellVisualAnimNameRec
{
  int m_AnimID;
  const char *m_name;
  int m_generatedID;
};

/* 4194 */
struct __cppobj AreaTriggerRec
{
  int m_ID;
  int m_ContinentID;
  float m_x;
  float m_y;
  float m_z;
  float m_radius;
};

/* 4195 */
struct __cppobj SpellVisualEffectNameRec
{
  int m_ID;
  const char *m_fileName;
  int m_specialID;
  int m_specialAttachPoint;
  float m_areaEffectSize;
  int m_VisualEffectNameFlags;
};

/* 4196 */
struct __cppobj SpellVisualRec
{
  int m_ID;
  int m_precastKit;
  int m_castKit;
  int m_impactKit;
  int m_stateKit;
  int m_channelKit;
  int m_hasMissile;
  int m_missileModel;
  int m_missilePathType;
  int m_missileDestinationAttachment;
  int m_missileSound;
  int m_hasAreaEffect;
  int m_areaModel;
  int m_areaKit;
  int m_animEventSoundID;
  unsigned __int8 m_weaponTrailRed;
  unsigned __int8 m_weaponTrailGreen;
  unsigned __int8 m_weaponTrailBlue;
  unsigned __int8 m_weaponTrailAlpha;
  unsigned __int8 m_weaponTrailFadeoutRate;
  int m_weaponTrailDuration;
};

/* 4197 */
struct __cppobj TabardEmblemTexturesRec
{
  int m_ID;
  const char *m_TorsoTexture[2];
};

/* 4198 */
struct __cppobj TabardBackgroundTexturesRec
{
  int m_ID;
  const char *m_TorsoTexture[2];
};

/* 4199 */
struct __cppobj CreatureFamilyRec
{
  int m_ID;
  float m_minScale;
  int m_minScaleLevel;
  float m_maxScale;
  int m_maxScaleLevel;
  int m_skillLine[2];
};

/* 4200 */
struct __cppobj GroundEffectDoodadRec
{
  int m_ID;
  int m_doodadIdTag;
  const char *m_doodadpath;
};

/* 4201 */
struct __cppobj GroundEffectTextureRec
{
  int m_ID;
  int m_datestamp;
  int m_continentId;
  int m_zoneId;
  int m_textureId;
  const char *m_textureName;
  int m_doodadId[4];
  int m_density;
  int m_sound;
};

/* 4202 */
struct __cppobj TSLink<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH>
{
  TSLink<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH> *m_prevlink;
  DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH *m_next;
};

/* 4204 */
struct __cppobj __declspec(align(4)) TSHashObject<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
{
  unsigned int m_hashval;
  TSLink<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH> m_linktoslot;
  TSLink<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH> m_linktofull;
  HASHKEY_INT m_key;
};

/* 4203 */
struct __cppobj __declspec(align(4)) DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH : TSHashObject<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
{
  NPCText m_record;
  int m_dbkey;
  unsigned __int8 m_haveData;
  TSList<DBCACHECALLBACK,TSGetLink<DBCACHECALLBACK> > m_callbacks;
  unsigned __int8 m_temp;
};

/* 4206 */
struct __cppobj TSList<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,TSGetExplicitLink<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH> >
{
  int m_linkoffset;
  TSLink<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH> m_terminator;
};

/* 4207 */
struct __cppobj TSExplicitList<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,-572662307> : TSList<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,TSGetExplicitLink<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH> >
{
};

/* 4209 */
struct __cppobj TSBaseArray<TSExplicitList<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >
{
  TSBaseArray<TSExplicitList<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,-572662307> *m_data;
};

/* 4212 */
struct __cppobj TSFixedArray<TSExplicitList<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > : TSBaseArray<TSExplicitList<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >
{
};

/* 4214 */
struct __cppobj TSGrowableArray<TSExplicitList<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > : TSFixedArray<TSExplicitList<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >
{
  unsigned int m_chunk;
};

/* 4205 */
struct __cppobj TSHashTable<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
{
  TSHashTable<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>_vtbl *__vftable /*VFT*/;
  TSExplicitList<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 4208 */
struct /*VFT*/ TSHashTable<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>_vtbl
{
  void (__thiscall *TSHashTable<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>::InternalDelete)(TSHashTable<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this, DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH *);
  DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH *(__thiscall *TSHashTable<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>::InternalNew)(TSHashTable<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this, TSExplicitList<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>)(TSHashTable<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this);
  void (__thiscall *TSHashTable<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>::Destroy)(TSHashTable<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this);
};

/* 4210 */
struct /*VFT*/ TSBaseArray<TSExplicitList<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
};

/* 4211 */
struct /*VFT*/ TSFixedArray<TSExplicitList<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
};

/* 4213 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
};

/* 4215 */
struct __cppobj __declspec(align(4)) DBCache<NPCText,int,HASHKEY_INT>
{
  TSHashTable<DBCache<NPCText,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> m_table;
  unsigned int m_fileTag;
  const char *m_fileName;
  NETMESSAGE m_singleQueryMsg;
  NETMESSAGE m_multiQueryMsg;
  unsigned __int8 m_requireGuids;
  unsigned __int8 m_persistent;
};

/* 4216 */
struct __cppobj TSLink<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH>
{
  TSLink<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH> *m_prevlink;
  DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH *m_next;
};

/* 4218 */
struct __cppobj __declspec(align(4)) TSHashObject<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
{
  unsigned int m_hashval;
  TSLink<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH> m_linktoslot;
  TSLink<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH> m_linktofull;
  HASHKEY_INT m_key;
};

/* 4219 */
struct __cppobj PetNameCache
{
  char m_name[48];
  unsigned int m_ID;
  unsigned int m_timestamp;
};

/* 4217 */
struct __cppobj __declspec(align(4)) DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH : TSHashObject<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
{
  PetNameCache m_record;
  int m_dbkey;
  unsigned __int8 m_haveData;
  TSList<DBCACHECALLBACK,TSGetLink<DBCACHECALLBACK> > m_callbacks;
  unsigned __int8 m_temp;
};

/* 4221 */
struct __cppobj TSList<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,TSGetExplicitLink<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH> >
{
  int m_linkoffset;
  TSLink<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH> m_terminator;
};

/* 4222 */
struct __cppobj TSExplicitList<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> : TSList<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,TSGetExplicitLink<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH> >
{
};

/* 4224 */
struct __cppobj TSBaseArray<TSExplicitList<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >
{
  TSBaseArray<TSExplicitList<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> *m_data;
};

/* 4227 */
struct __cppobj TSFixedArray<TSExplicitList<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > : TSBaseArray<TSExplicitList<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >
{
};

/* 4229 */
struct __cppobj TSGrowableArray<TSExplicitList<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > : TSFixedArray<TSExplicitList<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >
{
  unsigned int m_chunk;
};

/* 4220 */
struct __cppobj TSHashTable<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>
{
  TSHashTable<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>_vtbl *__vftable /*VFT*/;
  TSExplicitList<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 4223 */
struct /*VFT*/ TSHashTable<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>_vtbl
{
  void (__thiscall *TSHashTable<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>::InternalDelete)(TSHashTable<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this, DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH *);
  DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH *(__thiscall *TSHashTable<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>::InternalNew)(TSHashTable<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this, TSExplicitList<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>)(TSHashTable<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this);
  void (__thiscall *TSHashTable<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT>::Destroy)(TSHashTable<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> *this);
};

/* 4225 */
struct /*VFT*/ TSBaseArray<TSExplicitList<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
};

/* 4226 */
struct /*VFT*/ TSFixedArray<TSExplicitList<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
};

/* 4228 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,-572662307> > *this);
};

/* 4230 */
struct __cppobj __declspec(align(4)) DBCache<PetNameCache,int,HASHKEY_INT>
{
  TSHashTable<DBCache<PetNameCache,int,HASHKEY_INT>::DBCACHEHASH,HASHKEY_INT> m_table;
  unsigned int m_fileTag;
  const char *m_fileName;
  NETMESSAGE m_singleQueryMsg;
  NETMESSAGE m_multiQueryMsg;
  unsigned __int8 m_requireGuids;
  unsigned __int8 m_persistent;
};

/* 4231 */
struct VARIATIONSECTIONS
{
  CHARTEXTURESECTIONID section[4];
};

/* 4232 */
struct __cppobj WowClientDB<NPCSoundsRec>
{
  NPCSoundsRec *m_records;
  int m_numRecords;
  NPCSoundsRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4233 */
struct __cppobj WowClientDB<StringLookupsRec>
{
  StringLookupsRec *m_records;
  int m_numRecords;
  StringLookupsRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4234 */
struct __cppobj WowClientDB<SkillLineAbilityRec>
{
  SkillLineAbilityRec *m_records;
  int m_numRecords;
  SkillLineAbilityRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4235 */
struct __cppobj WowClientDB<SpellChainEffectsRec>
{
  SpellChainEffectsRec *m_records;
  int m_numRecords;
  SpellChainEffectsRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4236 */
struct __cppobj WowClientDB<GameObjectDisplayInfoRec>
{
  GameObjectDisplayInfoRec *m_records;
  int m_numRecords;
  GameObjectDisplayInfoRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4237 */
struct __cppobj WowClientDB<GroundEffectTextureRec>
{
  GroundEffectTextureRec *m_records;
  int m_numRecords;
  GroundEffectTextureRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4238 */
struct __cppobj WowClientDB<EmotesRec>
{
  EmotesRec *m_records;
  int m_numRecords;
  EmotesRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4239 */
struct __cppobj WowClientDB<UnitBloodRec>
{
  UnitBloodRec *m_records;
  int m_numRecords;
  UnitBloodRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4240 */
struct __cppobj WowClientDB<UISoundLookupsRec>
{
  UISoundLookupsRec *m_records;
  int m_numRecords;
  UISoundLookupsRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4241 */
struct __cppobj WowClientDB<GroundEffectDoodadRec>
{
  GroundEffectDoodadRec *m_records;
  int m_numRecords;
  GroundEffectDoodadRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4242 */
struct __cppobj WowClientDB<UnitBloodLevelsRec>
{
  UnitBloodLevelsRec *m_records;
  int m_numRecords;
  UnitBloodLevelsRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4243 */
struct __cppobj WowClientDB<NamesProfanityRec>
{
  NamesProfanityRec *m_records;
  int m_numRecords;
  NamesProfanityRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4244 */
struct __cppobj WowClientDB<NamesReservedRec>
{
  NamesReservedRec *m_records;
  int m_numRecords;
  NamesReservedRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4245 */
struct __cppobj WowClientDB<AreaTriggerRec>
{
  AreaTriggerRec *m_records;
  int m_numRecords;
  AreaTriggerRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4246 */
struct __cppobj WowClientDB<EmoteAnimsRec>
{
  EmoteAnimsRec *m_records;
  int m_numRecords;
  EmoteAnimsRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4247 */
struct __cppobj WowClientDB<CreatureDisplayInfoExtraRec>
{
  CreatureDisplayInfoExtraRec *m_records;
  int m_numRecords;
  CreatureDisplayInfoExtraRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4248 */
struct __cppobj WowClientDB<SpellVisualAnimNameRec>
{
  SpellVisualAnimNameRec *m_records;
  int m_numRecords;
  SpellVisualAnimNameRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4249 */
struct __cppobj TSBaseArray<ResistancesRec const *>
{
  TSBaseArray<ResistancesRec const *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  const ResistancesRec **m_data;
};

/* 4250 */
struct /*VFT*/ TSBaseArray<ResistancesRec const *>_vtbl
{
  const char *(__thiscall *TSBaseArray<ResistancesRec const *>::MemFileName)(TSBaseArray<ResistancesRec const *> *this);
  int (__thiscall *TSBaseArray<ResistancesRec const *>::MemLineNo)(TSBaseArray<ResistancesRec const *> *this);
};

/* 4251 */
struct /*VFT*/ TSFixedArray<ResistancesRec const *>_vtbl
{
  const char *(__thiscall *TSBaseArray<ResistancesRec const *>::MemFileName)(struct TSFixedArray<ResistancesRec const *> *this);
  int (__thiscall *TSBaseArray<ResistancesRec const *>::MemLineNo)(struct TSFixedArray<ResistancesRec const *> *this);
};

/* 4252 */
struct __cppobj TSFixedArray<ResistancesRec const *> : TSBaseArray<ResistancesRec const *>
{
};

/* 4253 */
struct __cppobj WowClientDB<CreatureFamilyRec>
{
  CreatureFamilyRec *m_records;
  int m_numRecords;
  CreatureFamilyRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4254 */
struct __cppobj WowClientDB<SpellVisualRec>
{
  SpellVisualRec *m_records;
  int m_numRecords;
  SpellVisualRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4255 */
struct __cppobj WowClientDB<SpellVisualPrecastTransitionsRec>
{
  SpellVisualPrecastTransitionsRec *m_records;
  int m_numRecords;
  SpellVisualPrecastTransitionsRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4256 */
struct __cppobj WowClientDB<TaxiPathRec>
{
  TaxiPathRec *m_records;
  int m_numRecords;
  TaxiPathRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4257 */
struct __cppobj WowClientDB<SpellVisualEffectNameRec>
{
  SpellVisualEffectNameRec *m_records;
  int m_numRecords;
  SpellVisualEffectNameRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4258 */
struct __cppobj WowClientDB<TransportAnimationRec>
{
  TransportAnimationRec *m_records;
  int m_numRecords;
  TransportAnimationRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4259 */
struct __cppobj WowClientDB<TabardBackgroundTexturesRec>
{
  TabardBackgroundTexturesRec *m_records;
  int m_numRecords;
  TabardBackgroundTexturesRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4260 */
struct __cppobj WowClientDB<FootprintTexturesRec>
{
  FootprintTexturesRec *m_records;
  int m_numRecords;
  FootprintTexturesRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4261 */
struct __cppobj WowClientDB<TaxiPathNodeRec>
{
  TaxiPathNodeRec *m_records;
  int m_numRecords;
  TaxiPathNodeRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4262 */
struct __cppobj WowClientDB<CreatureSoundDataRec>
{
  CreatureSoundDataRec *m_records;
  int m_numRecords;
  CreatureSoundDataRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4263 */
struct __cppobj WowClientDB<SpellVisualKitRec>
{
  SpellVisualKitRec *m_records;
  int m_numRecords;
  SpellVisualKitRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4264 */
struct __cppobj WowClientDB<TabardEmblemTexturesRec>
{
  TabardEmblemTexturesRec *m_records;
  int m_numRecords;
  TabardEmblemTexturesRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4265 */
struct __cppobj WowClientDB<AttackAnimTypesRec>
{
  AttackAnimTypesRec *m_records;
  int m_numRecords;
  AttackAnimTypesRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4266 */
struct __cppobj WowClientDB<DeathThudLookupsRec>
{
  DeathThudLookupsRec *m_records;
  int m_numRecords;
  DeathThudLookupsRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4267 */
struct __cppobj WowClientDB<SpellEffectCameraShakesRec>
{
  SpellEffectCameraShakesRec *m_records;
  int m_numRecords;
  SpellEffectCameraShakesRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4268 */
struct __cppobj WowClientDB<AttackAnimKitsRec>
{
  AttackAnimKitsRec *m_records;
  int m_numRecords;
  AttackAnimKitsRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 4269 */
struct _D3DCOLORVALUE
{
  float r;
  float g;
  float b;
  float a;
};

/* 4270 */
struct _D3DVECTOR
{
  float x;
  float y;
  float z;
};

/* 4271 */
struct _D3DLIGHT9
{
  _D3DLIGHTTYPE Type;
  _D3DCOLORVALUE Diffuse;
  _D3DCOLORVALUE Specular;
  _D3DCOLORVALUE Ambient;
  _D3DVECTOR Position;
  _D3DVECTOR Direction;
  float Range;
  float Falloff;
  float Attenuation0;
  float Attenuation1;
  float Attenuation2;
  float Theta;
  float Phi;
};

/* 4272 */
struct _D3DMATERIAL9
{
  _D3DCOLORVALUE Diffuse;
  _D3DCOLORVALUE Ambient;
  _D3DCOLORVALUE Specular;
  _D3DCOLORVALUE Emissive;
  float Power;
};

/* 4287 */
struct __cppobj TSBaseArray<CGxPushedRenderState>
{
  TSBaseArray<CGxPushedRenderState>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CGxPushedRenderState *m_data;
};

/* 4292 */
struct __cppobj TSFixedArray<CGxPushedRenderState> : TSBaseArray<CGxPushedRenderState>
{
};

/* 4294 */
struct __cppobj TSGrowableArray<CGxPushedRenderState> : TSFixedArray<CGxPushedRenderState>
{
  unsigned int m_chunk;
};

/* 4296 */
struct __cppobj TSGrowableArray<unsigned long> : TSFixedArray<unsigned long>
{
  unsigned int m_chunk;
};

/* 4297 */
struct __cppobj TSBaseArray<enum EGxRenderState>
{
  TSBaseArray<enum EGxRenderState>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  EGxRenderState *m_data;
};

/* 4300 */
struct __cppobj TSFixedArray<enum EGxRenderState> : TSBaseArray<enum EGxRenderState>
{
};

/* 4302 */
struct __cppobj TSGrowableArray<enum EGxRenderState> : TSFixedArray<enum EGxRenderState>
{
  unsigned int m_chunk;
};

/* 4278 */
const struct __cppobj CGxFormat
{
  unsigned int apiSpecificModeID;
  unsigned __int8 hwTnL;
  unsigned __int8 fixLag;
  unsigned __int8 window;
  CGxFormat::Format depthFormat;
  NTempest::C2iVector size;
  CGxFormat::Format colorFormat;
  unsigned int refreshRate;
  unsigned __int8 vsync;
  NTempest::C2iVector pos;
};

/* 4303 */
struct __cppobj NTempest::CRange
{
  float l;
  float h;
};

/* 4304 */
struct __cppobj CBoundingBox
{
  NTempest::CRange x;
  NTempest::CRange y;
  NTempest::CRange z;
};

/* 4305 */
struct __cppobj CGxMatrixStack
{
  unsigned int m_level;
  unsigned __int8 m_dirty;
  NTempest::C44Matrix m_mtx[4];
  unsigned int m_flags[4];
};

/* 4280 */
struct __cppobj TSLink<CGxPixelShader>
{
  TSLink<CGxPixelShader> *m_prevlink;
  CGxPixelShader *m_next;
};

/* 4307 */
struct __cppobj TSList<CGxPixelShader,TSGetExplicitLink<CGxPixelShader> >
{
  int m_linkoffset;
  TSLink<CGxPixelShader> m_terminator;
};

/* 4308 */
struct __cppobj TSExplicitList<CGxPixelShader,-572662307> : TSList<CGxPixelShader,TSGetExplicitLink<CGxPixelShader> >
{
};

/* 4310 */
struct __cppobj TSBaseArray<TSExplicitList<CGxPixelShader,-572662307> >
{
  TSBaseArray<TSExplicitList<CGxPixelShader,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<CGxPixelShader,-572662307> *m_data;
};

/* 4313 */
struct __cppobj TSFixedArray<TSExplicitList<CGxPixelShader,-572662307> > : TSBaseArray<TSExplicitList<CGxPixelShader,-572662307> >
{
};

/* 4315 */
struct __cppobj TSGrowableArray<TSExplicitList<CGxPixelShader,-572662307> > : TSFixedArray<TSExplicitList<CGxPixelShader,-572662307> >
{
  unsigned int m_chunk;
};

/* 4306 */
struct __cppobj TSHashTable<CGxPixelShader,HASHKEY_STRI>
{
  TSHashTable<CGxPixelShader,HASHKEY_STRI>_vtbl *__vftable /*VFT*/;
  TSExplicitList<CGxPixelShader,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<CGxPixelShader,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 4316 */
struct __cppobj TSLink<TSHashObjectChunk<CGxPixelShader,HASHKEY_STRI> >
{
  TSLink<TSHashObjectChunk<CGxPixelShader,HASHKEY_STRI> > *m_prevlink;
  TSHashObjectChunk<CGxPixelShader,HASHKEY_STRI> *m_next;
};

/* 4324 */
struct __cppobj TSList<TSHashObjectChunk<CGxPixelShader,HASHKEY_STRI>,TSGetExplicitLink<TSHashObjectChunk<CGxPixelShader,HASHKEY_STRI> > >
{
  int m_linkoffset;
  TSLink<TSHashObjectChunk<CGxPixelShader,HASHKEY_STRI> > m_terminator;
};

/* 4325 */
struct __cppobj TSExplicitList<TSHashObjectChunk<CGxPixelShader,HASHKEY_STRI>,20> : TSList<TSHashObjectChunk<CGxPixelShader,HASHKEY_STRI>,TSGetExplicitLink<TSHashObjectChunk<CGxPixelShader,HASHKEY_STRI> > >
{
};

/* 4326 */
struct __cppobj TSHashTableReuse<CGxPixelShader,HASHKEY_STRI,1> : TSHashTable<CGxPixelShader,HASHKEY_STRI>
{
  TSExplicitList<CGxPixelShader,-572662307> m_reuseList;
  unsigned int m_chunkSize;
  TSExplicitList<TSHashObjectChunk<CGxPixelShader,HASHKEY_STRI>,20> m_chunkList;
};

/* 4283 */
struct __cppobj TSLink<CGxVertexShader>
{
  TSLink<CGxVertexShader> *m_prevlink;
  CGxVertexShader *m_next;
};

/* 4329 */
struct __cppobj TSList<CGxVertexShader,TSGetExplicitLink<CGxVertexShader> >
{
  int m_linkoffset;
  TSLink<CGxVertexShader> m_terminator;
};

/* 4330 */
struct __cppobj TSExplicitList<CGxVertexShader,-572662307> : TSList<CGxVertexShader,TSGetExplicitLink<CGxVertexShader> >
{
};

/* 4332 */
struct __cppobj TSBaseArray<TSExplicitList<CGxVertexShader,-572662307> >
{
  TSBaseArray<TSExplicitList<CGxVertexShader,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<CGxVertexShader,-572662307> *m_data;
};

/* 4335 */
struct __cppobj TSFixedArray<TSExplicitList<CGxVertexShader,-572662307> > : TSBaseArray<TSExplicitList<CGxVertexShader,-572662307> >
{
};

/* 4337 */
struct __cppobj TSGrowableArray<TSExplicitList<CGxVertexShader,-572662307> > : TSFixedArray<TSExplicitList<CGxVertexShader,-572662307> >
{
  unsigned int m_chunk;
};

/* 4328 */
struct __cppobj TSHashTable<CGxVertexShader,HASHKEY_STRI>
{
  TSHashTable<CGxVertexShader,HASHKEY_STRI>_vtbl *__vftable /*VFT*/;
  TSExplicitList<CGxVertexShader,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<CGxVertexShader,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 4338 */
struct __cppobj TSLink<TSHashObjectChunk<CGxVertexShader,HASHKEY_STRI> >
{
  TSLink<TSHashObjectChunk<CGxVertexShader,HASHKEY_STRI> > *m_prevlink;
  TSHashObjectChunk<CGxVertexShader,HASHKEY_STRI> *m_next;
};

/* 4346 */
struct __cppobj TSList<TSHashObjectChunk<CGxVertexShader,HASHKEY_STRI>,TSGetExplicitLink<TSHashObjectChunk<CGxVertexShader,HASHKEY_STRI> > >
{
  int m_linkoffset;
  TSLink<TSHashObjectChunk<CGxVertexShader,HASHKEY_STRI> > m_terminator;
};

/* 4347 */
struct __cppobj TSExplicitList<TSHashObjectChunk<CGxVertexShader,HASHKEY_STRI>,20> : TSList<TSHashObjectChunk<CGxVertexShader,HASHKEY_STRI>,TSGetExplicitLink<TSHashObjectChunk<CGxVertexShader,HASHKEY_STRI> > >
{
};

/* 4348 */
struct __cppobj TSHashTableReuse<CGxVertexShader,HASHKEY_STRI,1> : TSHashTable<CGxVertexShader,HASHKEY_STRI>
{
  TSExplicitList<CGxVertexShader,-572662307> m_reuseList;
  unsigned int m_chunkSize;
  TSExplicitList<TSHashObjectChunk<CGxVertexShader,HASHKEY_STRI>,20> m_chunkList;
};

/* 4350 */
struct __cppobj CGxStateRegister
{
  CGxLight m_lights[8];
  int m_lightsDirty[8];
  float m_lightLinearFalloff;
  float m_lightQuadraticFalloff;
  unsigned int m_masterEnables;
};

/* 4351 */
struct __cppobj TSList<CGxBuf,TSGetExplicitLink<CGxBuf> >
{
  int m_linkoffset;
  TSLink<CGxBuf> m_terminator;
};

/* 4352 */
struct __cppobj TSExplicitList<CGxBuf,0> : TSList<CGxBuf,TSGetExplicitLink<CGxBuf> >
{
};

/* 4353 */
struct __cppobj TSBaseArray<CGxAppRenderState>
{
  TSBaseArray<CGxAppRenderState>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CGxAppRenderState *m_data;
};

/* 4357 */
struct __cppobj TSFixedArray<CGxAppRenderState> : TSBaseArray<CGxAppRenderState>
{
};

/* 4358 */
struct __cppobj TSBaseArray<CGxStateBom>
{
  TSBaseArray<CGxStateBom>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CGxStateBom *m_data;
};

/* 4361 */
struct __cppobj TSFixedArray<CGxStateBom> : TSBaseArray<CGxStateBom>
{
};

/* 4362 */
struct __cppobj TSBaseArray<CGxTex *>
{
  TSBaseArray<CGxTex *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CGxTex **m_data;
};

/* 4365 */
struct __cppobj TSFixedArray<CGxTex *> : TSBaseArray<CGxTex *>
{
};

/* 4367 */
struct __cppobj TSGrowableArray<CGxTex *> : TSFixedArray<CGxTex *>
{
  unsigned int m_chunk;
};

/* 4368 */
struct CGxDevice::TextureTarget
{
  CGxTex *m_texture;
  unsigned int m_plane;
  void *m_apiSpecific;
};

/* 4273 */
struct __cppobj CGxDevice
{
  CGxDevice_vtbl *__vftable /*VFT*/;
  TSGrowableArray<CGxPushedRenderState> mPushedStates;
  TSGrowableArray<unsigned long> mStackOffsets;
  TSGrowableArray<enum EGxRenderState> mDirtyStates;
  unsigned int m_perfCountersLatched[13];
  unsigned int m_perfCountersAcc[13];
  EGxPrim m_primType;
  unsigned int m_primIndexCount;
  int m_indexLocked;
  int m_vertexLocked;
  int m_inBeginEnd;
  NTempest::C3Vector m_primVertex;
  NTempest::C2Vector m_primTexCoord[4];
  NTempest::C3Vector m_primNormal;
  NTempest::CImVector m_primColor;
  TSGrowableArray<NTempest::C3Vector> m_primVertexArray;
  TSGrowableArray<NTempest::C2Vector> m_primTexCoordArray[4];
  TSGrowableArray<NTempest::C3Vector> m_primNormalArray;
  TSGrowableArray<NTempest::CImVector> m_primColorArray;
  TSGrowableArray<unsigned short> m_primIndexArray;
  unsigned int m_primMask;
  NTempest::CRect m_defWindowRect;
  NTempest::CRect m_curWindowRect;
  int m_context;
  EGxApi m_api;
  unsigned int m_cpuFeatures;
  CGxFormat m_format;
  CGxCaps m_caps;
  unsigned int m_baseMipLevel;
  int m_force32BitTextures;
  NTempest::CImVector m_clearColor;
  CGxGammaRamp m_gammaRamp;
  CGxGammaRamp m_systemGammaRamp;
  int (__fastcall *m_windowProc)(void *, unsigned int, unsigned int, int);
  CBoundingBox m_viewport;
  NTempest::C44Matrix m_projection;
  const NTempest::C34Matrix *m_bones;
  unsigned int m_boneCount;
  CGxMatrixStack m_xforms[7];
  CGxMatrixStack m_texGen[4];
  EGxVertexShader m_vertexShader;
  EGxVertexBufferFormat m_vertexBufferFormat;
  CGxPixelShader::Target m_pixelShaderPlatform;
  TSHashTableReuse<CGxPixelShader,HASHKEY_STRI,1> m_pixelShaderList;
  TSHashTableReuse<CGxVertexShader,HASHKEY_STRI,1> m_vertexShaderList;
  CGxStateRegister m_appState;
  CGxStateRegister m_hwState;
  TSExplicitList<CGxBuf,0> m_bufList;
  CGxBuf *m_bufLocked;
  unsigned int m_VBReserve[4][9];
  unsigned int m_IBReserve[4][9];
  CGxBuf *m_dynBuf[9];
  TSFixedArray<CGxAppRenderState> mAppRenderStates;
  TSFixedArray<CGxStateBom> mHwRenderStates;
  TSGrowableArray<CGxTex *> m_textures;
  CGxDevice::TextureTarget m_textureTarget[2];
  int m_scrShotClick;
  unsigned int m_scrShotWidth;
  unsigned int m_scrShotHeight;
  TSGrowableArray<NTempest::CImVector> m_scrShotPixels;
};

/* 4286 */
struct /*VFT*/ CGxDevice_vtbl
{
  void (__thiscall *CGxDevice::ITexMarkAsUpdated)(CGxDevice *this, CGxTex *);
  void (__thiscall *IRsSendToHw)(CGxDevice *this, EGxRenderState);
  void (__thiscall *ISetShaderParamList)(CGxDevice *this, TSExplicitList<CGxShaderParam,108> *, int);
  void (__thiscall *CGxDevice::~CGxDevice)(CGxDevice *this);
  _BYTE gap10[4];
  int (__thiscall *CGxDevice::DeviceCreate)(CGxDevice *this, int (__fastcall *)(void *, unsigned int, unsigned int, int), const CGxFormat *);
  void (__thiscall *CGxDevice::DeviceDestroy)(CGxDevice *this);
  int (__thiscall *CGxDevice::DeviceSetFormat)(CGxDevice *this, const CGxFormat *);
  void (__thiscall *CGxDevice::DeviceSetBaseMipLevel)(CGxDevice *this, unsigned int);
  void (__thiscall *CGxDevice::DeviceSetGamma)(CGxDevice *this, float) __declspec(align(8));
  void (__thiscall *CGxDevice::DeviceSetTextureQuality)(CGxDevice *this, int);
  unsigned int (__thiscall *DeviceWindow)(CGxDevice *this);
  void (__thiscall *CGxDevice::DeviceTakeScreenShot)(CGxDevice *this);
  void (__thiscall *CGxDevice::DeviceReadScreenShot)(CGxDevice *this, unsigned int *, unsigned int *, const NTempest::CImVector **);
  void (__thiscall *DeviceReadPixels)(CGxDevice *this, NTempest::CiRect *, TSGrowableArray<NTempest::CImVector> *);
  void (__thiscall *DeviceReadDepths)(CGxDevice *this, NTempest::CiRect *, TSGrowableArray<float> *);
  void (__thiscall *DeviceWM)(CGxDevice *this, EGxWM, int, int);
  void (__thiscall *CGxDevice::DeviceSetRenderTarget)(CGxDevice *this, EGxBuffer, CGxTex *, unsigned int);
  void (__thiscall *CGxDevice::DeviceOverride)(CGxDevice *this, EGxOverride, unsigned int);
  void (__thiscall *CapsWindowSize)(CGxDevice *this, NTempest::CRect *);
  void (__thiscall *CapsWindowSizeInScreenCoords)(CGxDevice *this, NTempest::CRect *);
  int (__thiscall *CapsIsWindowVisible)(CGxDevice *this);
  void (__thiscall *CGxDevice::SceneSetClearColor)(CGxDevice *this, NTempest::CImVector);
  void (__thiscall *CGxDevice::ScenePresent)(CGxDevice *this, unsigned int);
  void (__thiscall *CGxDevice::SceneClear)(CGxDevice *this, unsigned int);
  void (__thiscall *CGxDevice::XformSetViewport)(CGxDevice *this, float, float, float, float, float, float);
  void (__thiscall *CGxDevice::XformSetProjection)(CGxDevice *this, const NTempest::C44Matrix *);
  void (__thiscall *CGxDevice::XformSetView)(CGxDevice *this, const NTempest::C44Matrix *);
  void (__thiscall *CGxDevice::XformSetBones)(CGxDevice *this, unsigned int, const NTempest::C34Matrix *);
  void (__thiscall *CGxDevice::VertexShaderSelect)(CGxDevice *this, EGxVertexShader);
  void (__thiscall *CGxDevice::PrimLockAndProcessVertexPtrs)(CGxDevice *this, unsigned int, const NTempest::C3Vector *, unsigned int, const NTempest::C3Vector *, unsigned int, const NTempest::CImVector *, unsigned int, const unsigned __int8 *, unsigned int, const NTempest::C2Vector *, unsigned int, const NTempest::C2Vector *, unsigned int);
  void (__thiscall *CGxDevice::PrimLockIndexPtr)(CGxDevice *this, EGxPrim, unsigned int, const unsigned __int16 *);
  void (__thiscall *CGxDevice::PrimDrawElements)(CGxDevice *this);
  void (__thiscall *CGxDevice::PrimUnlockIndexPtr)(CGxDevice *this);
  void (__thiscall *CGxDevice::PrimUnlockVertexPtrs)(CGxDevice *this);
  void (__thiscall *CGxDevice::PrimBegin)(CGxDevice *this, EGxPrim);
  void (__thiscall *CGxDevice::PrimEnd)(CGxDevice *this);
  void (__thiscall *CGxDevice::PrimVertex)(CGxDevice *this, const NTempest::C3Vector *);
  void (__thiscall *CGxDevice::PrimTexCoord)(CGxDevice *this, unsigned int, const NTempest::C2Vector *);
  void (__thiscall *CGxDevice::PrimNormal)(CGxDevice *this, const NTempest::C3Vector *);
  void (__thiscall *CGxDevice::PrimColor)(CGxDevice *this, const NTempest::CImVector *);
  void (__thiscall *CGxDevice::PrimPointSize)(CGxDevice *this, float);
  void (__thiscall *CGxDevice::PrimLineWidth)(CGxDevice *this, float);
  void (__thiscall *CGxDevice::LightSet)(CGxDevice *this, unsigned int, const CGxLight *, const NTempest::C3Vector *);
  void (__thiscall *CGxDevice::LightEnable)(CGxDevice *this, unsigned int, int);
  void (__thiscall *CGxDevice::MasterEnableSet)(CGxDevice *this, EGxMasterEnables, int);
  CGxBuf *(__thiscall *CGxDevice::BufCreate)(CGxDevice *this, EGxBufWriteFreq, EGxVertexBufferFormat, unsigned int, unsigned int, void (__fastcall *)(CGxBufCommand *, CGxBuf *), void *);
  void (__thiscall *CGxDevice::BufLock)(CGxDevice *this, CGxBuf *);
  void (__thiscall *CGxDevice::BufRender)(CGxDevice *this, const CGxBatch *, unsigned int);
  void (__thiscall *CGxDevice::BufUnlock)(CGxDevice *this);
  void (__thiscall *CGxDevice::BufDestroy)(CGxDevice *this, CGxBuf **);
  void (__thiscall *CGxDevice::BufReserve)(CGxDevice *this, EGxBufWriteFreq, EGxVertexBufferFormat, unsigned int, unsigned int);
  int (__thiscall *CGxDevice::TexCreate)(CGxDevice *this, unsigned int, unsigned int, EGxTexFormat, CGxTexFlags, void *, void (__fastcall *)(EGxTexCommand, unsigned int, unsigned int, unsigned int, unsigned int, void *, unsigned int *, const void **), CGxTex **) __declspec(align(8));
  void (__thiscall *CGxDevice::TexDestroy)(CGxDevice *this, CGxTex *);
  void (__thiscall *CGxDevice::PixelShaderCreate)(CGxDevice *this, CGxPixelShader **, const char *);
  void (__thiscall *CGxDevice::PixelShaderDestroy)(CGxDevice *this, CGxPixelShader **);
  void (__thiscall *CGxDevice::VertexShaderCreate)(CGxDevice *this, CGxVertexShader **, const char *);
  void (__thiscall *CGxDevice::VertexShaderDestroy)(CGxDevice *this, CGxVertexShader **);
};

/* 4288 */
struct /*VFT*/ TSBaseArray<CGxPushedRenderState>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxPushedRenderState>::MemFileName)(TSBaseArray<CGxPushedRenderState> *this);
  int (__thiscall *TSBaseArray<CGxPushedRenderState>::MemLineNo)(TSBaseArray<CGxPushedRenderState> *this);
};

/* 4289 */
struct CGxStateBom
{
  int mData[3];
  int filler;
};

/* 4290 */
struct CGxPushedRenderState
{
  EGxRenderState mWhich;
  CGxStateBom mValue;
  unsigned int mStackDepth;
};

/* 4298 */
struct /*VFT*/ TSBaseArray<enum EGxRenderState>_vtbl
{
  const char *(__thiscall *TSBaseArray<enum EGxRenderState>::MemFileName)(TSBaseArray<enum EGxRenderState> *this);
  int (__thiscall *TSBaseArray<enum EGxRenderState>::MemLineNo)(TSBaseArray<enum EGxRenderState> *this);
};

/* 4309 */
struct /*VFT*/ TSHashTable<CGxPixelShader,HASHKEY_STRI>_vtbl
{
  void (__thiscall *TSHashTable<CGxPixelShader,HASHKEY_STRI>::InternalDelete)(TSHashTable<CGxPixelShader,HASHKEY_STRI> *this, CGxPixelShader *);
  CGxPixelShader *(__thiscall *TSHashTable<CGxPixelShader,HASHKEY_STRI>::InternalNew)(TSHashTable<CGxPixelShader,HASHKEY_STRI> *this, TSExplicitList<CGxPixelShader,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *TSHashTable<CGxPixelShader,HASHKEY_STRI>::~TSHashTable<CGxPixelShader,HASHKEY_STRI>)(TSHashTable<CGxPixelShader,HASHKEY_STRI> *this);
  void (__thiscall *TSHashTable<CGxPixelShader,HASHKEY_STRI>::Destroy)(TSHashTable<CGxPixelShader,HASHKEY_STRI> *this);
};

/* 4274 */
struct __cppobj TSLink<CGxShaderParam>
{
  TSLink<CGxShaderParam> *m_prevlink;
  CGxShaderParam *m_next;
};

/* 4276 */
struct __cppobj TSList<CGxShaderParam,TSGetExplicitLink<CGxShaderParam> >
{
  int m_linkoffset;
  TSLink<CGxShaderParam> m_terminator;
};

/* 4277 */
struct __cppobj TSExplicitList<CGxShaderParam,108> : TSList<CGxShaderParam,TSGetExplicitLink<CGxShaderParam> >
{
};

/* 4279 */
struct __cppobj CGxShader
{
  unsigned int refCount;
  unsigned int apiSpecific;
  int valid;
  int paramsDirty;
  TSExplicitList<CGxShaderParam,108> consts;
  TSExplicitList<CGxShaderParam,108> params;
  TSGrowableArray<unsigned char> code;
};

/* 4282 */
struct __cppobj TSHashObject<CGxPixelShader,HASHKEY_STRI>
{
  unsigned int m_hashval;
  TSLink<CGxPixelShader> m_linktoslot;
  TSLink<CGxPixelShader> m_linktofull;
  HASHKEY_STRI m_key;
};

/* 4281 */
struct __cppobj CGxPixelShader : CGxShader, TSHashObject<CGxPixelShader,HASHKEY_STRI>
{
};

/* 4311 */
struct /*VFT*/ TSBaseArray<TSExplicitList<CGxPixelShader,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CGxPixelShader,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<CGxPixelShader,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CGxPixelShader,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<CGxPixelShader,-572662307> > *this);
};

/* 4317 */
struct __cppobj TSBaseArray<CGxPixelShader>
{
  TSBaseArray<CGxPixelShader>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CGxPixelShader *m_data;
};

/* 4320 */
struct __cppobj TSFixedArray<CGxPixelShader> : TSBaseArray<CGxPixelShader>
{
};

/* 4322 */
struct __cppobj TSGrowableArray<CGxPixelShader> : TSFixedArray<CGxPixelShader>
{
  unsigned int m_chunk;
};

/* 4323 */
struct __cppobj __unaligned __declspec(align(4)) TSHashObjectChunk<CGxPixelShader,HASHKEY_STRI>
{
  TSGrowableArray<CGxPixelShader> m_array;
  TSLink<TSHashObjectChunk<CGxPixelShader,HASHKEY_STRI> > m_link;
};

/* 4331 */
struct /*VFT*/ TSHashTable<CGxVertexShader,HASHKEY_STRI>_vtbl
{
  void (__thiscall *TSHashTable<CGxVertexShader,HASHKEY_STRI>::InternalDelete)(TSHashTable<CGxVertexShader,HASHKEY_STRI> *this, CGxVertexShader *);
  CGxVertexShader *(__thiscall *TSHashTable<CGxVertexShader,HASHKEY_STRI>::InternalNew)(TSHashTable<CGxVertexShader,HASHKEY_STRI> *this, TSExplicitList<CGxVertexShader,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *TSHashTable<CGxVertexShader,HASHKEY_STRI>::~TSHashTable<CGxVertexShader,HASHKEY_STRI>)(TSHashTable<CGxVertexShader,HASHKEY_STRI> *this);
  void (__thiscall *TSHashTable<CGxVertexShader,HASHKEY_STRI>::Destroy)(TSHashTable<CGxVertexShader,HASHKEY_STRI> *this);
};

/* 4285 */
struct __cppobj TSHashObject<CGxVertexShader,HASHKEY_STRI>
{
  unsigned int m_hashval;
  TSLink<CGxVertexShader> m_linktoslot;
  TSLink<CGxVertexShader> m_linktofull;
  HASHKEY_STRI m_key;
};

/* 4284 */
struct __cppobj CGxVertexShader : CGxShader, TSHashObject<CGxVertexShader,HASHKEY_STRI>
{
};

/* 4333 */
struct /*VFT*/ TSBaseArray<TSExplicitList<CGxVertexShader,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CGxVertexShader,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<CGxVertexShader,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CGxVertexShader,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<CGxVertexShader,-572662307> > *this);
};

/* 4339 */
struct __cppobj TSBaseArray<CGxVertexShader>
{
  TSBaseArray<CGxVertexShader>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CGxVertexShader *m_data;
};

/* 4342 */
struct __cppobj TSFixedArray<CGxVertexShader> : TSBaseArray<CGxVertexShader>
{
};

/* 4344 */
struct __cppobj TSGrowableArray<CGxVertexShader> : TSFixedArray<CGxVertexShader>
{
  unsigned int m_chunk;
};

/* 4345 */
struct __cppobj __unaligned __declspec(align(4)) TSHashObjectChunk<CGxVertexShader,HASHKEY_STRI>
{
  TSGrowableArray<CGxVertexShader> m_array;
  TSLink<TSHashObjectChunk<CGxVertexShader,HASHKEY_STRI> > m_link;
};

/* 4354 */
struct /*VFT*/ TSBaseArray<CGxAppRenderState>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxAppRenderState>::MemFileName)(TSBaseArray<CGxAppRenderState> *this);
  int (__thiscall *TSBaseArray<CGxAppRenderState>::MemLineNo)(TSBaseArray<CGxAppRenderState> *this);
};

/* 4355 */
struct __cppobj CGxAppRenderState
{
  CGxStateBom mValue;
  unsigned int mStackDepth;
  int mDirty;
};

/* 4359 */
struct /*VFT*/ TSBaseArray<CGxStateBom>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxStateBom>::MemFileName)(TSBaseArray<CGxStateBom> *this);
  int (__thiscall *TSBaseArray<CGxStateBom>::MemLineNo)(TSBaseArray<CGxStateBom> *this);
};

/* 4363 */
struct /*VFT*/ TSBaseArray<CGxTex *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxTex *>::MemFileName)(TSBaseArray<CGxTex *> *this);
  int (__thiscall *TSBaseArray<CGxTex *>::MemLineNo)(TSBaseArray<CGxTex *> *this);
};

/* 4275 */
struct __cppobj __unaligned __declspec(align(4)) CGxShaderParam
{
  char name[32];
  CGxShaderParam::Type type;
  unsigned int index;
  int dirty;
  float f[16];
  TSLink<CGxShaderParam> lameAssLink;
};

/* 4318 */
struct /*VFT*/ TSBaseArray<CGxPixelShader>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxPixelShader>::MemFileName)(TSBaseArray<CGxPixelShader> *this);
  int (__thiscall *TSBaseArray<CGxPixelShader>::MemLineNo)(TSBaseArray<CGxPixelShader> *this);
};

/* 4340 */
struct /*VFT*/ TSBaseArray<CGxVertexShader>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxVertexShader>::MemFileName)(TSBaseArray<CGxVertexShader> *this);
  int (__thiscall *TSBaseArray<CGxVertexShader>::MemLineNo)(TSBaseArray<CGxVertexShader> *this);
};

/* 4291 */
struct /*VFT*/ TSFixedArray<CGxPushedRenderState>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxPushedRenderState>::MemFileName)(struct TSFixedArray<CGxPushedRenderState> *this);
  int (__thiscall *TSBaseArray<CGxPushedRenderState>::MemLineNo)(struct TSFixedArray<CGxPushedRenderState> *this);
};

/* 4293 */
struct /*VFT*/ TSGrowableArray<CGxPushedRenderState>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxPushedRenderState>::MemFileName)(struct TSGrowableArray<CGxPushedRenderState> *this);
  int (__thiscall *TSBaseArray<CGxPushedRenderState>::MemLineNo)(struct TSGrowableArray<CGxPushedRenderState> *this);
};

/* 4295 */
struct /*VFT*/ TSGrowableArray<unsigned long>_vtbl
{
  const char *(__thiscall *TSBaseArray<unsigned long>::MemFileName)(struct TSGrowableArray<unsigned long> *this);
  int (__thiscall *TSBaseArray<unsigned long>::MemLineNo)(struct TSGrowableArray<unsigned long> *this);
};

/* 4299 */
struct /*VFT*/ TSFixedArray<enum EGxRenderState>_vtbl
{
  const char *(__thiscall *TSBaseArray<enum EGxRenderState>::MemFileName)(struct TSFixedArray<enum EGxRenderState> *this);
  int (__thiscall *TSBaseArray<enum EGxRenderState>::MemLineNo)(struct TSFixedArray<enum EGxRenderState> *this);
};

/* 4301 */
struct /*VFT*/ TSGrowableArray<enum EGxRenderState>_vtbl
{
  const char *(__thiscall *TSBaseArray<enum EGxRenderState>::MemFileName)(struct TSGrowableArray<enum EGxRenderState> *this);
  int (__thiscall *TSBaseArray<enum EGxRenderState>::MemLineNo)(struct TSGrowableArray<enum EGxRenderState> *this);
};

/* 4312 */
struct /*VFT*/ TSFixedArray<TSExplicitList<CGxPixelShader,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CGxPixelShader,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<CGxPixelShader,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CGxPixelShader,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<CGxPixelShader,-572662307> > *this);
};

/* 4314 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<CGxPixelShader,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CGxPixelShader,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<CGxPixelShader,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CGxPixelShader,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<CGxPixelShader,-572662307> > *this);
};

/* 4319 */
struct /*VFT*/ TSFixedArray<CGxPixelShader>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxPixelShader>::MemFileName)(struct TSFixedArray<CGxPixelShader> *this);
  int (__thiscall *TSBaseArray<CGxPixelShader>::MemLineNo)(struct TSFixedArray<CGxPixelShader> *this);
};

/* 4321 */
struct /*VFT*/ TSGrowableArray<CGxPixelShader>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxPixelShader>::MemFileName)(struct TSGrowableArray<CGxPixelShader> *this);
  int (__thiscall *TSBaseArray<CGxPixelShader>::MemLineNo)(struct TSGrowableArray<CGxPixelShader> *this);
};

/* 4327 */
struct /*VFT*/ TSHashTableReuse<CGxPixelShader,HASHKEY_STRI,1>_vtbl
{
  void (__thiscall *TSHashTableReuse<CGxPixelShader,HASHKEY_STRI,1>::Destroy)(TSHashTableReuse<CGxPixelShader,HASHKEY_STRI,1> *this);
  CGxPixelShader *(__thiscall *TSHashTable<CGxPixelShader,HASHKEY_STRI>::InternalNew)(struct TSHashTableReuse<CGxPixelShader,HASHKEY_STRI,1> *this, TSExplicitList<CGxPixelShader,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *TSHashTable<CGxPixelShader,HASHKEY_STRI>::~TSHashTable<CGxPixelShader,HASHKEY_STRI>)(struct TSHashTableReuse<CGxPixelShader,HASHKEY_STRI,1> *this);
  void (__thiscall *TSHashTable<CGxPixelShader,HASHKEY_STRI>::Destroy)(struct TSHashTableReuse<CGxPixelShader,HASHKEY_STRI,1> *this);
};

/* 4334 */
struct /*VFT*/ TSFixedArray<TSExplicitList<CGxVertexShader,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CGxVertexShader,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<CGxVertexShader,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CGxVertexShader,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<CGxVertexShader,-572662307> > *this);
};

/* 4336 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<CGxVertexShader,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CGxVertexShader,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<CGxVertexShader,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CGxVertexShader,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<CGxVertexShader,-572662307> > *this);
};

/* 4341 */
struct /*VFT*/ TSFixedArray<CGxVertexShader>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxVertexShader>::MemFileName)(struct TSFixedArray<CGxVertexShader> *this);
  int (__thiscall *TSBaseArray<CGxVertexShader>::MemLineNo)(struct TSFixedArray<CGxVertexShader> *this);
};

/* 4343 */
struct /*VFT*/ TSGrowableArray<CGxVertexShader>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxVertexShader>::MemFileName)(struct TSGrowableArray<CGxVertexShader> *this);
  int (__thiscall *TSBaseArray<CGxVertexShader>::MemLineNo)(struct TSGrowableArray<CGxVertexShader> *this);
};

/* 4349 */
struct /*VFT*/ TSHashTableReuse<CGxVertexShader,HASHKEY_STRI,1>_vtbl
{
  void (__thiscall *TSHashTableReuse<CGxVertexShader,HASHKEY_STRI,1>::Destroy)(TSHashTableReuse<CGxVertexShader,HASHKEY_STRI,1> *this);
  CGxVertexShader *(__thiscall *TSHashTable<CGxVertexShader,HASHKEY_STRI>::InternalNew)(struct TSHashTableReuse<CGxVertexShader,HASHKEY_STRI,1> *this, TSExplicitList<CGxVertexShader,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *TSHashTable<CGxVertexShader,HASHKEY_STRI>::~TSHashTable<CGxVertexShader,HASHKEY_STRI>)(struct TSHashTableReuse<CGxVertexShader,HASHKEY_STRI,1> *this);
  void (__thiscall *TSHashTable<CGxVertexShader,HASHKEY_STRI>::Destroy)(struct TSHashTableReuse<CGxVertexShader,HASHKEY_STRI,1> *this);
};

/* 4356 */
struct /*VFT*/ TSFixedArray<CGxAppRenderState>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxAppRenderState>::MemFileName)(struct TSFixedArray<CGxAppRenderState> *this);
  int (__thiscall *TSBaseArray<CGxAppRenderState>::MemLineNo)(struct TSFixedArray<CGxAppRenderState> *this);
};

/* 4360 */
struct /*VFT*/ TSFixedArray<CGxStateBom>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxStateBom>::MemFileName)(struct TSFixedArray<CGxStateBom> *this);
  int (__thiscall *TSBaseArray<CGxStateBom>::MemLineNo)(struct TSFixedArray<CGxStateBom> *this);
};

/* 4364 */
struct /*VFT*/ TSFixedArray<CGxTex *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxTex *>::MemFileName)(struct TSFixedArray<CGxTex *> *this);
  int (__thiscall *TSBaseArray<CGxTex *>::MemLineNo)(struct TSFixedArray<CGxTex *> *this);
};

/* 4366 */
struct /*VFT*/ TSGrowableArray<CGxTex *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxTex *>::MemFileName)(struct TSGrowableArray<CGxTex *> *this);
  int (__thiscall *TSBaseArray<CGxTex *>::MemLineNo)(struct TSGrowableArray<CGxTex *> *this);
};

/* 4369 */
struct __cppobj IDirect3D9 : IUnknown
{
};

/* 4370 */
struct __unaligned __declspec(align(4)) _D3DADAPTER_IDENTIFIER9
{
  char Driver[512];
  char Description[512];
  char DeviceName[32];
  _LARGE_INTEGER DriverVersion;
  unsigned int VendorId;
  unsigned int DeviceId;
  unsigned int SubSysId;
  unsigned int Revision;
  _GUID DeviceIdentifier;
  unsigned int WHQLLevel;
};

/* 4371 */
struct _D3DDISPLAYMODE
{
  unsigned int Width;
  unsigned int Height;
  unsigned int RefreshRate;
  _D3DFORMAT Format;
};

/* 4372 */
struct _D3DVSHADERCAPS2_0
{
  unsigned int Caps;
  int DynamicFlowControlDepth;
  int NumTemps;
  int StaticFlowControlDepth;
};

/* 4373 */
struct _D3DPSHADERCAPS2_0
{
  unsigned int Caps;
  int DynamicFlowControlDepth;
  int NumTemps;
  int StaticFlowControlDepth;
  int NumInstructionSlots;
};

/* 4374 */
struct _D3DCAPS9
{
  _D3DDEVTYPE DeviceType;
  unsigned int AdapterOrdinal;
  unsigned int Caps;
  unsigned int Caps2;
  unsigned int Caps3;
  unsigned int PresentationIntervals;
  unsigned int CursorCaps;
  unsigned int DevCaps;
  unsigned int PrimitiveMiscCaps;
  unsigned int RasterCaps;
  unsigned int ZCmpCaps;
  unsigned int SrcBlendCaps;
  unsigned int DestBlendCaps;
  unsigned int AlphaCmpCaps;
  unsigned int ShadeCaps;
  unsigned int TextureCaps;
  unsigned int TextureFilterCaps;
  unsigned int CubeTextureFilterCaps;
  unsigned int VolumeTextureFilterCaps;
  unsigned int TextureAddressCaps;
  unsigned int VolumeTextureAddressCaps;
  unsigned int LineCaps;
  unsigned int MaxTextureWidth;
  unsigned int MaxTextureHeight;
  unsigned int MaxVolumeExtent;
  unsigned int MaxTextureRepeat;
  unsigned int MaxTextureAspectRatio;
  unsigned int MaxAnisotropy;
  float MaxVertexW;
  float GuardBandLeft;
  float GuardBandTop;
  float GuardBandRight;
  float GuardBandBottom;
  float ExtentsAdjust;
  unsigned int StencilCaps;
  unsigned int FVFCaps;
  unsigned int TextureOpCaps;
  unsigned int MaxTextureBlendStages;
  unsigned int MaxSimultaneousTextures;
  unsigned int VertexProcessingCaps;
  unsigned int MaxActiveLights;
  unsigned int MaxUserClipPlanes;
  unsigned int MaxVertexBlendMatrices;
  unsigned int MaxVertexBlendMatrixIndex;
  float MaxPointSize;
  unsigned int MaxPrimitiveCount;
  unsigned int MaxVertexIndex;
  unsigned int MaxStreams;
  unsigned int MaxStreamStride;
  unsigned int VertexShaderVersion;
  unsigned int MaxVertexShaderConst;
  unsigned int PixelShaderVersion;
  float PixelShader1xMaxValue;
  unsigned int DevCaps2;
  float MaxNpatchTessellationLevel;
  unsigned int Reserved5;
  unsigned int MasterAdapterOrdinal;
  unsigned int AdapterOrdinalInGroup;
  unsigned int NumberOfAdaptersInGroup;
  unsigned int DeclTypes;
  unsigned int NumSimultaneousRTs;
  unsigned int StretchRectFilterCaps;
  _D3DVSHADERCAPS2_0 VS20Caps;
  _D3DPSHADERCAPS2_0 PS20Caps;
  unsigned int VertexTextureFilterCaps;
  unsigned int MaxVShaderInstructionsExecuted;
  unsigned int MaxPShaderInstructionsExecuted;
  unsigned int MaxVertexShader30InstructionSlots;
  unsigned int MaxPixelShader30InstructionSlots;
};

/* 4375 */
struct _D3DPRESENT_PARAMETERS_
{
  unsigned int BackBufferWidth;
  unsigned int BackBufferHeight;
  _D3DFORMAT BackBufferFormat;
  unsigned int BackBufferCount;
  _D3DMULTISAMPLE_TYPE MultiSampleType;
  unsigned int MultiSampleQuality;
  _D3DSWAPEFFECT SwapEffect;
  HWND__ *hDeviceWindow;
  int Windowed;
  int EnableAutoDepthStencil;
  _D3DFORMAT AutoDepthStencilFormat;
  unsigned int Flags;
  unsigned int FullScreen_RefreshRateInHz;
  unsigned int PresentationInterval;
};

/* 4376 */
struct __cppobj IDirect3DDevice9 : IUnknown
{
};

/* 4377 */
struct _D3DDEVICE_CREATION_PARAMETERS
{
  unsigned int AdapterOrdinal;
  _D3DDEVTYPE DeviceType;
  HWND__ *hFocusWindow;
  unsigned int BehaviorFlags;
};

/* 4378 */
struct __cppobj IDirect3DResource9 : IUnknown
{
};

/* 4379 */
struct /*VFT*/ IDirect3DResource9_vtbl
{
  unsigned int (__stdcall *Release)(struct IDirect3DResource9 *this);
  unsigned int (__stdcall *AddRef)(struct IDirect3DResource9 *);
  unsigned int (__stdcall *Release)(struct IDirect3DResource9 *);
  int (__stdcall *GetDevice)(struct IDirect3DResource9 *this, IDirect3DDevice9 **);
  int (__stdcall *SetPrivateData)(struct IDirect3DResource9 *this, const _GUID *, const void *, unsigned int, unsigned int);
  int (__stdcall *GetPrivateData)(struct IDirect3DResource9 *this, const _GUID *, void *, unsigned int *);
  int (__stdcall *FreePrivateData)(struct IDirect3DResource9 *this, const _GUID *);
  unsigned int (__stdcall *SetPriority)(struct IDirect3DResource9 *this, unsigned int);
  unsigned int (__stdcall *GetPriority)(struct IDirect3DResource9 *this);
  void (__stdcall *PreLoad)(struct IDirect3DResource9 *this);
  _D3DRESOURCETYPE (__stdcall *GetType)(struct IDirect3DResource9 *this);
};

/* 4380 */
struct __cppobj IDirect3DSurface9 : IDirect3DResource9
{
};

/* 4381 */
struct _D3DSURFACE_DESC
{
  _D3DFORMAT Format;
  _D3DRESOURCETYPE Type;
  unsigned int Usage;
  _D3DPOOL Pool;
  _D3DMULTISAMPLE_TYPE MultiSampleType;
  unsigned int MultiSampleQuality;
  unsigned int Width;
  unsigned int Height;
};

/* 4382 */
struct _D3DLOCKED_RECT
{
  int Pitch;
  void *pBits;
};

/* 4383 */
struct /*VFT*/ IDirect3DSurface9_vtbl
{
  _D3DRESOURCETYPE (__stdcall *GetType)(struct IDirect3DSurface9 *this);
  unsigned int (__stdcall *AddRef)(struct IDirect3DSurface9 *);
  unsigned int (__stdcall *Release)(struct IDirect3DSurface9 *);
  int (__stdcall *GetDevice)(struct IDirect3DSurface9 *this, IDirect3DDevice9 **);
  int (__stdcall *SetPrivateData)(struct IDirect3DSurface9 *this, const _GUID *, const void *, unsigned int, unsigned int);
  int (__stdcall *GetPrivateData)(struct IDirect3DSurface9 *this, const _GUID *, void *, unsigned int *);
  int (__stdcall *FreePrivateData)(struct IDirect3DSurface9 *this, const _GUID *);
  unsigned int (__stdcall *SetPriority)(struct IDirect3DSurface9 *this, unsigned int);
  unsigned int (__stdcall *GetPriority)(struct IDirect3DSurface9 *this);
  void (__stdcall *PreLoad)(struct IDirect3DSurface9 *this);
  _D3DRESOURCETYPE (__stdcall *GetType)(struct IDirect3DSurface9 *this);
  int (__stdcall *GetContainer)(struct IDirect3DSurface9 *this, const _GUID *, void **);
  int (__stdcall *GetDesc)(struct IDirect3DSurface9 *this, _D3DSURFACE_DESC *);
  int (__stdcall *LockRect)(struct IDirect3DSurface9 *this, _D3DLOCKED_RECT *, const tagRECT *, unsigned int);
  int (__stdcall *UnlockRect)(struct IDirect3DSurface9 *this);
  int (__stdcall *GetDC)(struct IDirect3DSurface9 *this, HDC__ **);
  int (__stdcall *ReleaseDC)(struct IDirect3DSurface9 *this, HDC__ *);
};

/* 4384 */
struct __cppobj IDirect3DSwapChain9 : IUnknown
{
};

/* 4385 */
struct _RGNDATAHEADER
{
  unsigned int dwSize;
  unsigned int iType;
  unsigned int nCount;
  unsigned int nRgnSize;
  tagRECT rcBound;
};

/* 4386 */
const struct __declspec(align(4)) _RGNDATA
{
  _RGNDATAHEADER rdh;
  char Buffer[1];
};

/* 4387 */
struct _D3DRASTER_STATUS
{
  int InVBlank;
  unsigned int ScanLine;
};

/* 4388 */
struct /*VFT*/ IDirect3DSwapChain9_vtbl
{
  unsigned int (__stdcall *Release)(struct IDirect3DSwapChain9 *this);
  unsigned int (__stdcall *AddRef)(struct IDirect3DSwapChain9 *);
  unsigned int (__stdcall *Release)(struct IDirect3DSwapChain9 *);
  int (__stdcall *Present)(struct IDirect3DSwapChain9 *this, const tagRECT *, const tagRECT *, HWND__ *, const _RGNDATA *, unsigned int);
  int (__stdcall *GetFrontBufferData)(struct IDirect3DSwapChain9 *this, IDirect3DSurface9 *);
  int (__stdcall *GetBackBuffer)(struct IDirect3DSwapChain9 *this, unsigned int, _D3DBACKBUFFER_TYPE, IDirect3DSurface9 **);
  int (__stdcall *GetRasterStatus)(struct IDirect3DSwapChain9 *this, _D3DRASTER_STATUS *);
  int (__stdcall *GetDisplayMode)(struct IDirect3DSwapChain9 *this, _D3DDISPLAYMODE *);
  int (__stdcall *GetDevice)(struct IDirect3DSwapChain9 *this, IDirect3DDevice9 **);
  int (__stdcall *GetPresentParameters)(struct IDirect3DSwapChain9 *this, _D3DPRESENT_PARAMETERS_ *);
};

/* 4389 */
const struct _D3DGAMMARAMP
{
  unsigned __int16 red[256];
  unsigned __int16 green[256];
  unsigned __int16 blue[256];
};

/* 4390 */
struct __cppobj IDirect3DBaseTexture9 : IDirect3DResource9
{
};

/* 4391 */
struct /*VFT*/ IDirect3DBaseTexture9_vtbl
{
  _D3DRESOURCETYPE (__stdcall *GetType)(struct IDirect3DBaseTexture9 *this);
  unsigned int (__stdcall *AddRef)(struct IDirect3DBaseTexture9 *);
  unsigned int (__stdcall *Release)(struct IDirect3DBaseTexture9 *);
  int (__stdcall *GetDevice)(struct IDirect3DBaseTexture9 *this, IDirect3DDevice9 **);
  int (__stdcall *SetPrivateData)(struct IDirect3DBaseTexture9 *this, const _GUID *, const void *, unsigned int, unsigned int);
  int (__stdcall *GetPrivateData)(struct IDirect3DBaseTexture9 *this, const _GUID *, void *, unsigned int *);
  int (__stdcall *FreePrivateData)(struct IDirect3DBaseTexture9 *this, const _GUID *);
  unsigned int (__stdcall *SetPriority)(struct IDirect3DBaseTexture9 *this, unsigned int);
  unsigned int (__stdcall *GetPriority)(struct IDirect3DBaseTexture9 *this);
  void (__stdcall *PreLoad)(struct IDirect3DBaseTexture9 *this);
  _D3DRESOURCETYPE (__stdcall *GetType)(struct IDirect3DBaseTexture9 *this);
  unsigned int (__stdcall *SetLOD)(struct IDirect3DBaseTexture9 *this, unsigned int);
  unsigned int (__stdcall *GetLOD)(struct IDirect3DBaseTexture9 *this);
  unsigned int (__stdcall *GetLevelCount)(struct IDirect3DBaseTexture9 *this);
  int (__stdcall *SetAutoGenFilterType)(struct IDirect3DBaseTexture9 *this, _D3DTEXTUREFILTERTYPE);
  _D3DTEXTUREFILTERTYPE (__stdcall *GetAutoGenFilterType)(struct IDirect3DBaseTexture9 *this);
  void (__stdcall *GenerateMipSubLevels)(struct IDirect3DBaseTexture9 *this);
};

/* 4392 */
struct __cppobj IDirect3DTexture9 : IDirect3DBaseTexture9
{
};

/* 4393 */
struct /*VFT*/ IDirect3DTexture9_vtbl
{
  void (__stdcall *GenerateMipSubLevels)(struct IDirect3DTexture9 *this);
  unsigned int (__stdcall *AddRef)(struct IDirect3DTexture9 *);
  unsigned int (__stdcall *Release)(struct IDirect3DTexture9 *);
  int (__stdcall *GetDevice)(struct IDirect3DTexture9 *this, IDirect3DDevice9 **);
  int (__stdcall *SetPrivateData)(struct IDirect3DTexture9 *this, const _GUID *, const void *, unsigned int, unsigned int);
  int (__stdcall *GetPrivateData)(struct IDirect3DTexture9 *this, const _GUID *, void *, unsigned int *);
  int (__stdcall *FreePrivateData)(struct IDirect3DTexture9 *this, const _GUID *);
  unsigned int (__stdcall *SetPriority)(struct IDirect3DTexture9 *this, unsigned int);
  unsigned int (__stdcall *GetPriority)(struct IDirect3DTexture9 *this);
  void (__stdcall *PreLoad)(struct IDirect3DTexture9 *this);
  _D3DRESOURCETYPE (__stdcall *GetType)(struct IDirect3DTexture9 *this);
  unsigned int (__stdcall *SetLOD)(struct IDirect3DTexture9 *this, unsigned int);
  unsigned int (__stdcall *GetLOD)(struct IDirect3DTexture9 *this);
  unsigned int (__stdcall *GetLevelCount)(struct IDirect3DTexture9 *this);
  int (__stdcall *SetAutoGenFilterType)(struct IDirect3DTexture9 *this, _D3DTEXTUREFILTERTYPE);
  _D3DTEXTUREFILTERTYPE (__stdcall *GetAutoGenFilterType)(struct IDirect3DTexture9 *this);
  void (__stdcall *GenerateMipSubLevels)(struct IDirect3DTexture9 *this);
  int (__stdcall *GetLevelDesc)(struct IDirect3DTexture9 *this, unsigned int, _D3DSURFACE_DESC *);
  int (__stdcall *GetSurfaceLevel)(struct IDirect3DTexture9 *this, unsigned int, IDirect3DSurface9 **);
  int (__stdcall *LockRect)(struct IDirect3DTexture9 *this, unsigned int, _D3DLOCKED_RECT *, const tagRECT *, unsigned int);
  int (__stdcall *UnlockRect)(struct IDirect3DTexture9 *this, unsigned int);
  int (__stdcall *AddDirtyRect)(struct IDirect3DTexture9 *this, const tagRECT *);
};

/* 4394 */
struct __cppobj IDirect3DVolumeTexture9 : IDirect3DBaseTexture9
{
};

/* 4395 */
struct _D3DVOLUME_DESC
{
  _D3DFORMAT Format;
  _D3DRESOURCETYPE Type;
  unsigned int Usage;
  _D3DPOOL Pool;
  unsigned int Width;
  unsigned int Height;
  unsigned int Depth;
};

/* 4396 */
struct __cppobj IDirect3DVolume9 : IUnknown
{
};

/* 4397 */
struct _D3DLOCKED_BOX
{
  int RowPitch;
  int SlicePitch;
  void *pBits;
};

/* 4398 */
const struct _D3DBOX
{
  unsigned int Left;
  unsigned int Top;
  unsigned int Right;
  unsigned int Bottom;
  unsigned int Front;
  unsigned int Back;
};

/* 4399 */
struct /*VFT*/ IDirect3DVolume9_vtbl
{
  unsigned int (__stdcall *Release)(struct IDirect3DVolume9 *this);
  unsigned int (__stdcall *AddRef)(struct IDirect3DVolume9 *);
  unsigned int (__stdcall *Release)(struct IDirect3DVolume9 *);
  int (__stdcall *GetDevice)(struct IDirect3DVolume9 *this, IDirect3DDevice9 **);
  int (__stdcall *SetPrivateData)(struct IDirect3DVolume9 *this, const _GUID *, const void *, unsigned int, unsigned int);
  int (__stdcall *GetPrivateData)(struct IDirect3DVolume9 *this, const _GUID *, void *, unsigned int *);
  int (__stdcall *FreePrivateData)(struct IDirect3DVolume9 *this, const _GUID *);
  int (__stdcall *GetContainer)(struct IDirect3DVolume9 *this, const _GUID *, void **);
  int (__stdcall *GetDesc)(struct IDirect3DVolume9 *this, _D3DVOLUME_DESC *);
  int (__stdcall *LockBox)(struct IDirect3DVolume9 *this, _D3DLOCKED_BOX *, const _D3DBOX *, unsigned int);
  int (__stdcall *UnlockBox)(struct IDirect3DVolume9 *this);
};

/* 4400 */
struct /*VFT*/ IDirect3DVolumeTexture9_vtbl
{
  void (__stdcall *GenerateMipSubLevels)(struct IDirect3DVolumeTexture9 *this);
  unsigned int (__stdcall *AddRef)(struct IDirect3DVolumeTexture9 *);
  unsigned int (__stdcall *Release)(struct IDirect3DVolumeTexture9 *);
  int (__stdcall *GetDevice)(struct IDirect3DVolumeTexture9 *this, IDirect3DDevice9 **);
  int (__stdcall *SetPrivateData)(struct IDirect3DVolumeTexture9 *this, const _GUID *, const void *, unsigned int, unsigned int);
  int (__stdcall *GetPrivateData)(struct IDirect3DVolumeTexture9 *this, const _GUID *, void *, unsigned int *);
  int (__stdcall *FreePrivateData)(struct IDirect3DVolumeTexture9 *this, const _GUID *);
  unsigned int (__stdcall *SetPriority)(struct IDirect3DVolumeTexture9 *this, unsigned int);
  unsigned int (__stdcall *GetPriority)(struct IDirect3DVolumeTexture9 *this);
  void (__stdcall *PreLoad)(struct IDirect3DVolumeTexture9 *this);
  _D3DRESOURCETYPE (__stdcall *GetType)(struct IDirect3DVolumeTexture9 *this);
  unsigned int (__stdcall *SetLOD)(struct IDirect3DVolumeTexture9 *this, unsigned int);
  unsigned int (__stdcall *GetLOD)(struct IDirect3DVolumeTexture9 *this);
  unsigned int (__stdcall *GetLevelCount)(struct IDirect3DVolumeTexture9 *this);
  int (__stdcall *SetAutoGenFilterType)(struct IDirect3DVolumeTexture9 *this, _D3DTEXTUREFILTERTYPE);
  _D3DTEXTUREFILTERTYPE (__stdcall *GetAutoGenFilterType)(struct IDirect3DVolumeTexture9 *this);
  void (__stdcall *GenerateMipSubLevels)(struct IDirect3DVolumeTexture9 *this);
  int (__stdcall *GetLevelDesc)(struct IDirect3DVolumeTexture9 *this, unsigned int, _D3DVOLUME_DESC *);
  int (__stdcall *GetVolumeLevel)(struct IDirect3DVolumeTexture9 *this, unsigned int, IDirect3DVolume9 **);
  int (__stdcall *LockBox)(struct IDirect3DVolumeTexture9 *this, unsigned int, _D3DLOCKED_BOX *, const _D3DBOX *, unsigned int);
  int (__stdcall *UnlockBox)(struct IDirect3DVolumeTexture9 *this, unsigned int);
  int (__stdcall *AddDirtyBox)(struct IDirect3DVolumeTexture9 *this, const _D3DBOX *);
};

/* 4401 */
struct __cppobj IDirect3DCubeTexture9 : IDirect3DBaseTexture9
{
};

/* 4402 */
struct /*VFT*/ IDirect3DCubeTexture9_vtbl
{
  void (__stdcall *GenerateMipSubLevels)(struct IDirect3DCubeTexture9 *this);
  unsigned int (__stdcall *AddRef)(struct IDirect3DCubeTexture9 *);
  unsigned int (__stdcall *Release)(struct IDirect3DCubeTexture9 *);
  int (__stdcall *GetDevice)(struct IDirect3DCubeTexture9 *this, IDirect3DDevice9 **);
  int (__stdcall *SetPrivateData)(struct IDirect3DCubeTexture9 *this, const _GUID *, const void *, unsigned int, unsigned int);
  int (__stdcall *GetPrivateData)(struct IDirect3DCubeTexture9 *this, const _GUID *, void *, unsigned int *);
  int (__stdcall *FreePrivateData)(struct IDirect3DCubeTexture9 *this, const _GUID *);
  unsigned int (__stdcall *SetPriority)(struct IDirect3DCubeTexture9 *this, unsigned int);
  unsigned int (__stdcall *GetPriority)(struct IDirect3DCubeTexture9 *this);
  void (__stdcall *PreLoad)(struct IDirect3DCubeTexture9 *this);
  _D3DRESOURCETYPE (__stdcall *GetType)(struct IDirect3DCubeTexture9 *this);
  unsigned int (__stdcall *SetLOD)(struct IDirect3DCubeTexture9 *this, unsigned int);
  unsigned int (__stdcall *GetLOD)(struct IDirect3DCubeTexture9 *this);
  unsigned int (__stdcall *GetLevelCount)(struct IDirect3DCubeTexture9 *this);
  int (__stdcall *SetAutoGenFilterType)(struct IDirect3DCubeTexture9 *this, _D3DTEXTUREFILTERTYPE);
  _D3DTEXTUREFILTERTYPE (__stdcall *GetAutoGenFilterType)(struct IDirect3DCubeTexture9 *this);
  void (__stdcall *GenerateMipSubLevels)(struct IDirect3DCubeTexture9 *this);
  int (__stdcall *GetLevelDesc)(struct IDirect3DCubeTexture9 *this, unsigned int, _D3DSURFACE_DESC *);
  int (__stdcall *GetCubeMapSurface)(struct IDirect3DCubeTexture9 *this, _D3DCUBEMAP_FACES, unsigned int, IDirect3DSurface9 **);
  int (__stdcall *LockRect)(struct IDirect3DCubeTexture9 *this, _D3DCUBEMAP_FACES, unsigned int, _D3DLOCKED_RECT *, const tagRECT *, unsigned int);
  int (__stdcall *UnlockRect)(struct IDirect3DCubeTexture9 *this, _D3DCUBEMAP_FACES, unsigned int);
  int (__stdcall *AddDirtyRect)(struct IDirect3DCubeTexture9 *this, _D3DCUBEMAP_FACES, const tagRECT *);
};

/* 4403 */
struct __cppobj IDirect3DVertexBuffer9 : IDirect3DResource9
{
};

/* 4404 */
struct _D3DVERTEXBUFFER_DESC
{
  _D3DFORMAT Format;
  _D3DRESOURCETYPE Type;
  unsigned int Usage;
  _D3DPOOL Pool;
  unsigned int Size;
  unsigned int FVF;
};

/* 4405 */
struct /*VFT*/ IDirect3DVertexBuffer9_vtbl
{
  _D3DRESOURCETYPE (__stdcall *GetType)(struct IDirect3DVertexBuffer9 *this);
  unsigned int (__stdcall *AddRef)(struct IDirect3DVertexBuffer9 *);
  unsigned int (__stdcall *Release)(struct IDirect3DVertexBuffer9 *);
  int (__stdcall *GetDevice)(struct IDirect3DVertexBuffer9 *this, IDirect3DDevice9 **);
  int (__stdcall *SetPrivateData)(struct IDirect3DVertexBuffer9 *this, const _GUID *, const void *, unsigned int, unsigned int);
  int (__stdcall *GetPrivateData)(struct IDirect3DVertexBuffer9 *this, const _GUID *, void *, unsigned int *);
  int (__stdcall *FreePrivateData)(struct IDirect3DVertexBuffer9 *this, const _GUID *);
  unsigned int (__stdcall *SetPriority)(struct IDirect3DVertexBuffer9 *this, unsigned int);
  unsigned int (__stdcall *GetPriority)(struct IDirect3DVertexBuffer9 *this);
  void (__stdcall *PreLoad)(struct IDirect3DVertexBuffer9 *this);
  _D3DRESOURCETYPE (__stdcall *GetType)(struct IDirect3DVertexBuffer9 *this);
  int (__stdcall *Lock)(struct IDirect3DVertexBuffer9 *this, unsigned int, unsigned int, void **, unsigned int);
  int (__stdcall *Unlock)(struct IDirect3DVertexBuffer9 *this);
  int (__stdcall *GetDesc)(struct IDirect3DVertexBuffer9 *this, _D3DVERTEXBUFFER_DESC *);
};

/* 4406 */
struct __cppobj IDirect3DIndexBuffer9 : IDirect3DResource9
{
};

/* 4407 */
struct _D3DINDEXBUFFER_DESC
{
  _D3DFORMAT Format;
  _D3DRESOURCETYPE Type;
  unsigned int Usage;
  _D3DPOOL Pool;
  unsigned int Size;
};

/* 4408 */
struct /*VFT*/ IDirect3DIndexBuffer9_vtbl
{
  _D3DRESOURCETYPE (__stdcall *GetType)(struct IDirect3DIndexBuffer9 *this);
  unsigned int (__stdcall *AddRef)(struct IDirect3DIndexBuffer9 *);
  unsigned int (__stdcall *Release)(struct IDirect3DIndexBuffer9 *);
  int (__stdcall *GetDevice)(struct IDirect3DIndexBuffer9 *this, IDirect3DDevice9 **);
  int (__stdcall *SetPrivateData)(struct IDirect3DIndexBuffer9 *this, const _GUID *, const void *, unsigned int, unsigned int);
  int (__stdcall *GetPrivateData)(struct IDirect3DIndexBuffer9 *this, const _GUID *, void *, unsigned int *);
  int (__stdcall *FreePrivateData)(struct IDirect3DIndexBuffer9 *this, const _GUID *);
  unsigned int (__stdcall *SetPriority)(struct IDirect3DIndexBuffer9 *this, unsigned int);
  unsigned int (__stdcall *GetPriority)(struct IDirect3DIndexBuffer9 *this);
  void (__stdcall *PreLoad)(struct IDirect3DIndexBuffer9 *this);
  _D3DRESOURCETYPE (__stdcall *GetType)(struct IDirect3DIndexBuffer9 *this);
  int (__stdcall *Lock)(struct IDirect3DIndexBuffer9 *this, unsigned int, unsigned int, void **, unsigned int);
  int (__stdcall *Unlock)(struct IDirect3DIndexBuffer9 *this);
  int (__stdcall *GetDesc)(struct IDirect3DIndexBuffer9 *this, _D3DINDEXBUFFER_DESC *);
};

/* 4409 */
const struct _D3DRECT
{
  int x1;
  int y1;
  int x2;
  int y2;
};

/* 4410 */
struct $40942CBCB8F0A1CDBC81269929B28324
{
  float _11;
  float _12;
  float _13;
  float _14;
  float _21;
  float _22;
  float _23;
  float _24;
  float _31;
  float _32;
  float _33;
  float _34;
  float _41;
  float _42;
  float _43;
  float _44;
};

/* 4411 */
union $5E47BEE74C4BE375D86E5B3816A426AF
{
  $40942CBCB8F0A1CDBC81269929B28324 __s0;
  float m[4][4];
};

/* 4412 */
const struct _D3DMATRIX
{
  $5E47BEE74C4BE375D86E5B3816A426AF ___u0;
};

/* 4413 */
const struct _D3DVIEWPORT9
{
  unsigned int X;
  unsigned int Y;
  unsigned int Width;
  unsigned int Height;
  float MinZ;
  float MaxZ;
};

/* 4414 */
struct __cppobj IDirect3DStateBlock9 : IUnknown
{
};

/* 4415 */
struct /*VFT*/ IDirect3DStateBlock9_vtbl
{
  unsigned int (__stdcall *Release)(struct IDirect3DStateBlock9 *this);
  unsigned int (__stdcall *AddRef)(struct IDirect3DStateBlock9 *);
  unsigned int (__stdcall *Release)(struct IDirect3DStateBlock9 *);
  int (__stdcall *GetDevice)(struct IDirect3DStateBlock9 *this, IDirect3DDevice9 **);
  int (__stdcall *Capture)(struct IDirect3DStateBlock9 *this);
  int (__stdcall *Apply)(struct IDirect3DStateBlock9 *this);
};

/* 4416 */
const struct _D3DCLIPSTATUS9
{
  unsigned int ClipUnion;
  unsigned int ClipIntersection;
};

/* 4417 */
struct __cppobj IDirect3DVertexDeclaration9 : IUnknown
{
};

/* 4418 */
struct _D3DVERTEXELEMENT9
{
  unsigned __int16 Stream;
  unsigned __int16 Offset;
  unsigned __int8 Type;
  unsigned __int8 Method;
  unsigned __int8 Usage;
  unsigned __int8 UsageIndex;
};

/* 4419 */
struct /*VFT*/ IDirect3DVertexDeclaration9_vtbl
{
  unsigned int (__stdcall *Release)(struct IDirect3DVertexDeclaration9 *this);
  unsigned int (__stdcall *AddRef)(struct IDirect3DVertexDeclaration9 *);
  unsigned int (__stdcall *Release)(struct IDirect3DVertexDeclaration9 *);
  int (__stdcall *GetDevice)(struct IDirect3DVertexDeclaration9 *this, IDirect3DDevice9 **);
  int (__stdcall *GetDeclaration)(struct IDirect3DVertexDeclaration9 *this, _D3DVERTEXELEMENT9 *, unsigned int *);
};

/* 4420 */
struct __cppobj IDirect3DVertexShader9 : IUnknown
{
};

/* 4421 */
struct /*VFT*/ IDirect3DVertexShader9_vtbl
{
  unsigned int (__stdcall *Release)(struct IDirect3DVertexShader9 *this);
  unsigned int (__stdcall *AddRef)(struct IDirect3DVertexShader9 *);
  unsigned int (__stdcall *Release)(struct IDirect3DVertexShader9 *);
  int (__stdcall *GetDevice)(struct IDirect3DVertexShader9 *this, IDirect3DDevice9 **);
  int (__stdcall *GetFunction)(struct IDirect3DVertexShader9 *this, void *, unsigned int *);
};

/* 4422 */
struct __cppobj IDirect3DPixelShader9 : IUnknown
{
};

/* 4423 */
struct /*VFT*/ IDirect3DPixelShader9_vtbl
{
  unsigned int (__stdcall *Release)(struct IDirect3DPixelShader9 *this);
  unsigned int (__stdcall *AddRef)(struct IDirect3DPixelShader9 *);
  unsigned int (__stdcall *Release)(struct IDirect3DPixelShader9 *);
  int (__stdcall *GetDevice)(struct IDirect3DPixelShader9 *this, IDirect3DDevice9 **);
  int (__stdcall *GetFunction)(struct IDirect3DPixelShader9 *this, void *, unsigned int *);
};

/* 4424 */
const struct _D3DRECTPATCH_INFO
{
  unsigned int StartVertexOffsetWidth;
  unsigned int StartVertexOffsetHeight;
  unsigned int Width;
  unsigned int Height;
  unsigned int Stride;
  _D3DBASISTYPE Basis;
  _D3DDEGREETYPE Degree;
};

/* 4425 */
const struct _D3DTRIPATCH_INFO
{
  unsigned int StartVertexOffset;
  unsigned int NumVertices;
  _D3DBASISTYPE Basis;
  _D3DDEGREETYPE Degree;
};

/* 4426 */
struct __cppobj IDirect3DQuery9 : IUnknown
{
};

/* 4427 */
struct /*VFT*/ IDirect3DQuery9_vtbl
{
  unsigned int (__stdcall *Release)(struct IDirect3DQuery9 *this);
  unsigned int (__stdcall *AddRef)(struct IDirect3DQuery9 *);
  unsigned int (__stdcall *Release)(struct IDirect3DQuery9 *);
  int (__stdcall *GetDevice)(struct IDirect3DQuery9 *this, IDirect3DDevice9 **);
  _D3DQUERYTYPE (__stdcall *GetType)(struct IDirect3DQuery9 *this);
  unsigned int (__stdcall *GetDataSize)(struct IDirect3DQuery9 *this);
  int (__stdcall *Issue)(struct IDirect3DQuery9 *this, unsigned int);
  int (__stdcall *GetData)(struct IDirect3DQuery9 *this, void *, unsigned int, unsigned int);
};

/* 4428 */
struct /*VFT*/ IDirect3DDevice9_vtbl
{
  unsigned int (__stdcall *Release)(struct IDirect3DDevice9 *this);
  unsigned int (__stdcall *AddRef)(struct IDirect3DDevice9 *);
  unsigned int (__stdcall *Release)(struct IDirect3DDevice9 *);
  int (__stdcall *TestCooperativeLevel)(struct IDirect3DDevice9 *this);
  unsigned int (__stdcall *GetAvailableTextureMem)(struct IDirect3DDevice9 *this);
  int (__stdcall *EvictManagedResources)(struct IDirect3DDevice9 *this);
  int (__stdcall *GetDirect3D)(struct IDirect3DDevice9 *this, IDirect3D9 **);
  int (__stdcall *GetDeviceCaps)(struct IDirect3DDevice9 *this, _D3DCAPS9 *);
  int (__stdcall *GetDisplayMode)(struct IDirect3DDevice9 *this, unsigned int, _D3DDISPLAYMODE *);
  int (__stdcall *GetCreationParameters)(struct IDirect3DDevice9 *this, _D3DDEVICE_CREATION_PARAMETERS *);
  int (__stdcall *SetCursorProperties)(struct IDirect3DDevice9 *this, unsigned int, unsigned int, IDirect3DSurface9 *);
  void (__stdcall *SetCursorPosition)(struct IDirect3DDevice9 *this, int, int, unsigned int);
  int (__stdcall *ShowCursor)(struct IDirect3DDevice9 *this, int);
  int (__stdcall *CreateAdditionalSwapChain)(struct IDirect3DDevice9 *this, _D3DPRESENT_PARAMETERS_ *, IDirect3DSwapChain9 **);
  int (__stdcall *GetSwapChain)(struct IDirect3DDevice9 *this, unsigned int, IDirect3DSwapChain9 **);
  unsigned int (__stdcall *GetNumberOfSwapChains)(struct IDirect3DDevice9 *this);
  int (__stdcall *Reset)(struct IDirect3DDevice9 *this, _D3DPRESENT_PARAMETERS_ *);
  int (__stdcall *Present)(struct IDirect3DDevice9 *this, const tagRECT *, const tagRECT *, HWND__ *, const _RGNDATA *);
  int (__stdcall *GetBackBuffer)(struct IDirect3DDevice9 *this, unsigned int, unsigned int, _D3DBACKBUFFER_TYPE, IDirect3DSurface9 **);
  int (__stdcall *GetRasterStatus)(struct IDirect3DDevice9 *this, unsigned int, _D3DRASTER_STATUS *);
  int (__stdcall *SetDialogBoxMode)(struct IDirect3DDevice9 *this, int);
  void (__stdcall *SetGammaRamp)(struct IDirect3DDevice9 *this, unsigned int, unsigned int, const _D3DGAMMARAMP *);
  void (__stdcall *GetGammaRamp)(struct IDirect3DDevice9 *this, unsigned int, _D3DGAMMARAMP *);
  int (__stdcall *CreateTexture)(struct IDirect3DDevice9 *this, unsigned int, unsigned int, unsigned int, unsigned int, _D3DFORMAT, _D3DPOOL, IDirect3DTexture9 **, void **);
  int (__stdcall *CreateVolumeTexture)(struct IDirect3DDevice9 *this, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, _D3DFORMAT, _D3DPOOL, IDirect3DVolumeTexture9 **, void **);
  int (__stdcall *CreateCubeTexture)(struct IDirect3DDevice9 *this, unsigned int, unsigned int, unsigned int, _D3DFORMAT, _D3DPOOL, IDirect3DCubeTexture9 **, void **);
  int (__stdcall *CreateVertexBuffer)(struct IDirect3DDevice9 *this, unsigned int, unsigned int, unsigned int, _D3DPOOL, IDirect3DVertexBuffer9 **, void **);
  int (__stdcall *CreateIndexBuffer)(struct IDirect3DDevice9 *this, unsigned int, unsigned int, _D3DFORMAT, _D3DPOOL, IDirect3DIndexBuffer9 **, void **);
  int (__stdcall *CreateRenderTarget)(struct IDirect3DDevice9 *this, unsigned int, unsigned int, _D3DFORMAT, _D3DMULTISAMPLE_TYPE, unsigned int, int, IDirect3DSurface9 **, void **);
  int (__stdcall *CreateDepthStencilSurface)(struct IDirect3DDevice9 *this, unsigned int, unsigned int, _D3DFORMAT, _D3DMULTISAMPLE_TYPE, unsigned int, int, IDirect3DSurface9 **, void **);
  int (__stdcall *UpdateSurface)(struct IDirect3DDevice9 *this, IDirect3DSurface9 *, const tagRECT *, IDirect3DSurface9 *, const tagPOINT *);
  int (__stdcall *UpdateTexture)(struct IDirect3DDevice9 *this, IDirect3DBaseTexture9 *, IDirect3DBaseTexture9 *);
  int (__stdcall *GetRenderTargetData)(struct IDirect3DDevice9 *this, IDirect3DSurface9 *, IDirect3DSurface9 *);
  int (__stdcall *GetFrontBufferData)(struct IDirect3DDevice9 *this, unsigned int, IDirect3DSurface9 *);
  int (__stdcall *StretchRect)(struct IDirect3DDevice9 *this, IDirect3DSurface9 *, const tagRECT *, IDirect3DSurface9 *, const tagRECT *, _D3DTEXTUREFILTERTYPE);
  int (__stdcall *ColorFill)(struct IDirect3DDevice9 *this, IDirect3DSurface9 *, const tagRECT *, unsigned int);
  int (__stdcall *CreateOffscreenPlainSurface)(struct IDirect3DDevice9 *this, unsigned int, unsigned int, _D3DFORMAT, _D3DPOOL, IDirect3DSurface9 **, void **);
  int (__stdcall *SetRenderTarget)(struct IDirect3DDevice9 *this, unsigned int, IDirect3DSurface9 *);
  int (__stdcall *GetRenderTarget)(struct IDirect3DDevice9 *this, unsigned int, IDirect3DSurface9 **);
  int (__stdcall *SetDepthStencilSurface)(struct IDirect3DDevice9 *this, IDirect3DSurface9 *);
  int (__stdcall *GetDepthStencilSurface)(struct IDirect3DDevice9 *this, IDirect3DSurface9 **);
  int (__stdcall *BeginScene)(struct IDirect3DDevice9 *this);
  int (__stdcall *EndScene)(struct IDirect3DDevice9 *this);
  int (__stdcall *Clear)(struct IDirect3DDevice9 *this, unsigned int, const _D3DRECT *, unsigned int, unsigned int, float, unsigned int);
  int (__stdcall *SetTransform)(struct IDirect3DDevice9 *this, _D3DTRANSFORMSTATETYPE, const _D3DMATRIX *);
  int (__stdcall *GetTransform)(struct IDirect3DDevice9 *this, _D3DTRANSFORMSTATETYPE, _D3DMATRIX *);
  int (__stdcall *MultiplyTransform)(struct IDirect3DDevice9 *this, _D3DTRANSFORMSTATETYPE, const _D3DMATRIX *);
  int (__stdcall *SetViewport)(struct IDirect3DDevice9 *this, const _D3DVIEWPORT9 *);
  int (__stdcall *GetViewport)(struct IDirect3DDevice9 *this, _D3DVIEWPORT9 *);
  int (__stdcall *SetMaterial)(struct IDirect3DDevice9 *this, const _D3DMATERIAL9 *);
  int (__stdcall *GetMaterial)(struct IDirect3DDevice9 *this, _D3DMATERIAL9 *);
  int (__stdcall *SetLight)(struct IDirect3DDevice9 *this, unsigned int, const _D3DLIGHT9 *);
  int (__stdcall *GetLight)(struct IDirect3DDevice9 *this, unsigned int, _D3DLIGHT9 *);
  int (__stdcall *LightEnable)(struct IDirect3DDevice9 *this, unsigned int, int);
  int (__stdcall *GetLightEnable)(struct IDirect3DDevice9 *this, unsigned int, int *);
  int (__stdcall *SetClipPlane)(struct IDirect3DDevice9 *this, unsigned int, const float *);
  int (__stdcall *GetClipPlane)(struct IDirect3DDevice9 *this, unsigned int, float *);
  int (__stdcall *SetRenderState)(struct IDirect3DDevice9 *this, _D3DRENDERSTATETYPE, unsigned int);
  int (__stdcall *GetRenderState)(struct IDirect3DDevice9 *this, _D3DRENDERSTATETYPE, unsigned int *);
  int (__stdcall *CreateStateBlock)(struct IDirect3DDevice9 *this, _D3DSTATEBLOCKTYPE, IDirect3DStateBlock9 **);
  int (__stdcall *BeginStateBlock)(struct IDirect3DDevice9 *this);
  int (__stdcall *EndStateBlock)(struct IDirect3DDevice9 *this, IDirect3DStateBlock9 **);
  int (__stdcall *SetClipStatus)(struct IDirect3DDevice9 *this, const _D3DCLIPSTATUS9 *);
  int (__stdcall *GetClipStatus)(struct IDirect3DDevice9 *this, _D3DCLIPSTATUS9 *);
  int (__stdcall *GetTexture)(struct IDirect3DDevice9 *this, unsigned int, IDirect3DBaseTexture9 **);
  int (__stdcall *SetTexture)(struct IDirect3DDevice9 *this, unsigned int, IDirect3DBaseTexture9 *);
  int (__stdcall *GetTextureStageState)(struct IDirect3DDevice9 *this, unsigned int, _D3DTEXTURESTAGESTATETYPE, unsigned int *);
  int (__stdcall *SetTextureStageState)(struct IDirect3DDevice9 *this, unsigned int, _D3DTEXTURESTAGESTATETYPE, unsigned int);
  int (__stdcall *GetSamplerState)(struct IDirect3DDevice9 *this, unsigned int, _D3DSAMPLERSTATETYPE, unsigned int *);
  int (__stdcall *SetSamplerState)(struct IDirect3DDevice9 *this, unsigned int, _D3DSAMPLERSTATETYPE, unsigned int);
  int (__stdcall *ValidateDevice)(struct IDirect3DDevice9 *this, unsigned int *);
  int (__stdcall *SetPaletteEntries)(struct IDirect3DDevice9 *this, unsigned int, const tagPALETTEENTRY *);
  int (__stdcall *GetPaletteEntries)(struct IDirect3DDevice9 *this, unsigned int, tagPALETTEENTRY *);
  int (__stdcall *SetCurrentTexturePalette)(struct IDirect3DDevice9 *this, unsigned int);
  int (__stdcall *GetCurrentTexturePalette)(struct IDirect3DDevice9 *this, unsigned int *);
  int (__stdcall *SetScissorRect)(struct IDirect3DDevice9 *this, const tagRECT *);
  int (__stdcall *GetScissorRect)(struct IDirect3DDevice9 *this, tagRECT *);
  int (__stdcall *SetSoftwareVertexProcessing)(struct IDirect3DDevice9 *this, int);
  int (__stdcall *GetSoftwareVertexProcessing)(struct IDirect3DDevice9 *this);
  int (__stdcall *SetNPatchMode)(struct IDirect3DDevice9 *this, float);
  float (__stdcall *GetNPatchMode)(struct IDirect3DDevice9 *this);
  int (__stdcall *DrawPrimitive)(struct IDirect3DDevice9 *this, _D3DPRIMITIVETYPE, unsigned int, unsigned int);
  int (__stdcall *DrawIndexedPrimitive)(struct IDirect3DDevice9 *this, _D3DPRIMITIVETYPE, int, unsigned int, unsigned int, unsigned int, unsigned int);
  int (__stdcall *DrawPrimitiveUP)(struct IDirect3DDevice9 *this, _D3DPRIMITIVETYPE, unsigned int, const void *, unsigned int);
  int (__stdcall *DrawIndexedPrimitiveUP)(struct IDirect3DDevice9 *this, _D3DPRIMITIVETYPE, unsigned int, unsigned int, unsigned int, const void *, _D3DFORMAT, const void *, unsigned int);
  int (__stdcall *ProcessVertices)(struct IDirect3DDevice9 *this, unsigned int, unsigned int, unsigned int, IDirect3DVertexBuffer9 *, IDirect3DVertexDeclaration9 *, unsigned int);
  int (__stdcall *CreateVertexDeclaration)(struct IDirect3DDevice9 *this, const _D3DVERTEXELEMENT9 *, IDirect3DVertexDeclaration9 **);
  int (__stdcall *SetVertexDeclaration)(struct IDirect3DDevice9 *this, IDirect3DVertexDeclaration9 *);
  int (__stdcall *GetVertexDeclaration)(struct IDirect3DDevice9 *this, IDirect3DVertexDeclaration9 **);
  int (__stdcall *SetFVF)(struct IDirect3DDevice9 *this, unsigned int);
  int (__stdcall *GetFVF)(struct IDirect3DDevice9 *this, unsigned int *);
  int (__stdcall *CreateVertexShader)(struct IDirect3DDevice9 *this, const unsigned int *, IDirect3DVertexShader9 **);
  int (__stdcall *SetVertexShader)(struct IDirect3DDevice9 *this, IDirect3DVertexShader9 *);
  int (__stdcall *GetVertexShader)(struct IDirect3DDevice9 *this, IDirect3DVertexShader9 **);
  int (__stdcall *SetVertexShaderConstantF)(struct IDirect3DDevice9 *this, unsigned int, const float *, unsigned int);
  int (__stdcall *GetVertexShaderConstantF)(struct IDirect3DDevice9 *this, unsigned int, float *, unsigned int);
  int (__stdcall *SetVertexShaderConstantI)(struct IDirect3DDevice9 *this, unsigned int, const int *, unsigned int);
  int (__stdcall *GetVertexShaderConstantI)(struct IDirect3DDevice9 *this, unsigned int, int *, unsigned int);
  int (__stdcall *SetVertexShaderConstantB)(struct IDirect3DDevice9 *this, unsigned int, const int *, unsigned int);
  int (__stdcall *GetVertexShaderConstantB)(struct IDirect3DDevice9 *this, unsigned int, int *, unsigned int);
  int (__stdcall *SetStreamSource)(struct IDirect3DDevice9 *this, unsigned int, IDirect3DVertexBuffer9 *, unsigned int, unsigned int);
  int (__stdcall *GetStreamSource)(struct IDirect3DDevice9 *this, unsigned int, IDirect3DVertexBuffer9 **, unsigned int *, unsigned int *);
  int (__stdcall *SetStreamSourceFreq)(struct IDirect3DDevice9 *this, unsigned int, unsigned int);
  int (__stdcall *GetStreamSourceFreq)(struct IDirect3DDevice9 *this, unsigned int, unsigned int *);
  int (__stdcall *SetIndices)(struct IDirect3DDevice9 *this, IDirect3DIndexBuffer9 *);
  int (__stdcall *GetIndices)(struct IDirect3DDevice9 *this, IDirect3DIndexBuffer9 **);
  int (__stdcall *CreatePixelShader)(struct IDirect3DDevice9 *this, const unsigned int *, IDirect3DPixelShader9 **);
  int (__stdcall *SetPixelShader)(struct IDirect3DDevice9 *this, IDirect3DPixelShader9 *);
  int (__stdcall *GetPixelShader)(struct IDirect3DDevice9 *this, IDirect3DPixelShader9 **);
  int (__stdcall *SetPixelShaderConstantF)(struct IDirect3DDevice9 *this, unsigned int, const float *, unsigned int);
  int (__stdcall *GetPixelShaderConstantF)(struct IDirect3DDevice9 *this, unsigned int, float *, unsigned int);
  int (__stdcall *SetPixelShaderConstantI)(struct IDirect3DDevice9 *this, unsigned int, const int *, unsigned int);
  int (__stdcall *GetPixelShaderConstantI)(struct IDirect3DDevice9 *this, unsigned int, int *, unsigned int);
  int (__stdcall *SetPixelShaderConstantB)(struct IDirect3DDevice9 *this, unsigned int, const int *, unsigned int);
  int (__stdcall *GetPixelShaderConstantB)(struct IDirect3DDevice9 *this, unsigned int, int *, unsigned int);
  int (__stdcall *DrawRectPatch)(struct IDirect3DDevice9 *this, unsigned int, const float *, const _D3DRECTPATCH_INFO *);
  int (__stdcall *DrawTriPatch)(struct IDirect3DDevice9 *this, unsigned int, const float *, const _D3DTRIPATCH_INFO *);
  int (__stdcall *DeletePatch)(struct IDirect3DDevice9 *this, unsigned int);
  int (__stdcall *CreateQuery)(struct IDirect3DDevice9 *this, _D3DQUERYTYPE, IDirect3DQuery9 **);
};

/* 4429 */
struct /*VFT*/ IDirect3D9_vtbl
{
  unsigned int (__stdcall *Release)(struct IDirect3D9 *this);
  unsigned int (__stdcall *AddRef)(struct IDirect3D9 *);
  unsigned int (__stdcall *Release)(struct IDirect3D9 *);
  int (__stdcall *RegisterSoftwareDevice)(struct IDirect3D9 *this, void *);
  unsigned int (__stdcall *GetAdapterCount)(struct IDirect3D9 *this);
  int (__stdcall *GetAdapterIdentifier)(struct IDirect3D9 *this, unsigned int, unsigned int, _D3DADAPTER_IDENTIFIER9 *);
  unsigned int (__stdcall *GetAdapterModeCount)(struct IDirect3D9 *this, unsigned int, _D3DFORMAT);
  int (__stdcall *EnumAdapterModes)(struct IDirect3D9 *this, unsigned int, _D3DFORMAT, unsigned int, _D3DDISPLAYMODE *);
  int (__stdcall *GetAdapterDisplayMode)(struct IDirect3D9 *this, unsigned int, _D3DDISPLAYMODE *);
  int (__stdcall *CheckDeviceType)(struct IDirect3D9 *this, unsigned int, _D3DDEVTYPE, _D3DFORMAT, _D3DFORMAT, int);
  int (__stdcall *CheckDeviceFormat)(struct IDirect3D9 *this, unsigned int, _D3DDEVTYPE, _D3DFORMAT, unsigned int, _D3DRESOURCETYPE, _D3DFORMAT);
  int (__stdcall *CheckDeviceMultiSampleType)(struct IDirect3D9 *this, unsigned int, _D3DDEVTYPE, _D3DFORMAT, int, _D3DMULTISAMPLE_TYPE, unsigned int *);
  int (__stdcall *CheckDepthStencilMatch)(struct IDirect3D9 *this, unsigned int, _D3DDEVTYPE, _D3DFORMAT, _D3DFORMAT, _D3DFORMAT);
  int (__stdcall *CheckDeviceFormatConversion)(struct IDirect3D9 *this, unsigned int, _D3DDEVTYPE, _D3DFORMAT, _D3DFORMAT);
  int (__stdcall *GetDeviceCaps)(struct IDirect3D9 *this, unsigned int, _D3DDEVTYPE, _D3DCAPS9 *);
  HMONITOR__ *(__stdcall *GetAdapterMonitor)(struct IDirect3D9 *this, unsigned int);
  int (__stdcall *CreateDevice)(struct IDirect3D9 *this, unsigned int, _D3DDEVTYPE, HWND__ *, unsigned int, _D3DPRESENT_PARAMETERS_ *, IDirect3DDevice9 **);
};

/* 4430 */
struct __cppobj TSBaseArray<CGxVertexBuffer_D3d *>
{
  TSBaseArray<CGxVertexBuffer_D3d *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CGxVertexBuffer_D3d **m_data;
};

/* 4431 */
struct /*VFT*/ TSBaseArray<CGxVertexBuffer_D3d *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxVertexBuffer_D3d *>::MemFileName)(TSBaseArray<CGxVertexBuffer_D3d *> *this);
  int (__thiscall *TSBaseArray<CGxVertexBuffer_D3d *>::MemLineNo)(TSBaseArray<CGxVertexBuffer_D3d *> *this);
};

/* 4434 */
struct __cppobj TSExplicitList<CGxBuf,-572662307> : TSList<CGxBuf,TSGetExplicitLink<CGxBuf> >
{
};

/* 4432 */
struct __cppobj CGxMemBuffer
{
  CGxMemBuffer_vtbl *__vftable /*VFT*/;
  unsigned int m_count;
  unsigned int m_base;
  unsigned int m_next;
  int m_discard;
  TSExplicitList<CGxBuf,-572662307> m_bufList;
};

/* 4435 */
struct __cppobj CGxVertexBuffer : CGxMemBuffer
{
};

/* 4437 */
struct __cppobj CGxVertexBuffer_D3d : CGxVertexBuffer
{
  IDirect3DVertexBuffer9 *m_d3dvb;
  EGxVertexBufferFormat m_vbFormat;
};

/* 4433 */
struct /*VFT*/ CGxMemBuffer_vtbl
{
  void (__thiscall *CGxMemBuffer::~CGxMemBuffer)(CGxMemBuffer *this);
  void (__thiscall *Lock)(CGxMemBuffer *this, void **, unsigned int, unsigned int);
  void (__thiscall *Unlock)(CGxMemBuffer *this);
};

/* 4436 */
struct /*VFT*/ CGxVertexBuffer_vtbl
{
  void (__thiscall *~CGxVertexBuffer)(CGxVertexBuffer *this);
  void (__thiscall *Lock)(struct CGxVertexBuffer *this, void **, unsigned int, unsigned int);
  void (__thiscall *Unlock)(struct CGxVertexBuffer *this);
};

/* 4438 */
struct /*VFT*/ CGxVertexBuffer_D3d_vtbl
{
  void (__thiscall *CGxVertexBuffer_D3d::~CGxVertexBuffer_D3d)(CGxVertexBuffer_D3d *this);
  void (__thiscall *Lock)(struct CGxVertexBuffer_D3d *this, void **, unsigned int, unsigned int);
  void (__thiscall *Unlock)(struct CGxVertexBuffer_D3d *this);
};

/* 4439 */
struct /*VFT*/ TSFixedArray<CGxVertexBuffer_D3d *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxVertexBuffer_D3d *>::MemFileName)(struct TSFixedArray<CGxVertexBuffer_D3d *> *this);
  int (__thiscall *TSBaseArray<CGxVertexBuffer_D3d *>::MemLineNo)(struct TSFixedArray<CGxVertexBuffer_D3d *> *this);
};

/* 4440 */
struct __cppobj TSFixedArray<CGxVertexBuffer_D3d *> : TSBaseArray<CGxVertexBuffer_D3d *>
{
};

/* 4441 */
struct /*VFT*/ TSGrowableArray<CGxVertexBuffer_D3d *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxVertexBuffer_D3d *>::MemFileName)(struct TSGrowableArray<CGxVertexBuffer_D3d *> *this);
  int (__thiscall *TSBaseArray<CGxVertexBuffer_D3d *>::MemLineNo)(struct TSGrowableArray<CGxVertexBuffer_D3d *> *this);
};

/* 4442 */
struct __cppobj TSGrowableArray<CGxVertexBuffer_D3d *> : TSFixedArray<CGxVertexBuffer_D3d *>
{
  unsigned int m_chunk;
};

/* 4443 */
struct __cppobj CVertexBufferList
{
  unsigned int m_maxContiguousVertices;
  unsigned int m_numVerts;
  unsigned int m_currentVB;
  TSGrowableArray<CGxVertexBuffer_D3d *> m_vbList;
};

/* 4444 */
struct __cppobj CGxIndexBuffer : CGxMemBuffer
{
};

/* 4445 */
struct /*VFT*/ CGxIndexBuffer_vtbl
{
  void (__thiscall *~CGxIndexBuffer)(CGxIndexBuffer *this);
  void (__thiscall *Lock)(struct CGxIndexBuffer *this, void **, unsigned int, unsigned int);
  void (__thiscall *Unlock)(struct CGxIndexBuffer *this);
};

/* 4446 */
struct __cppobj CGxIndexBuffer_D3d : CGxIndexBuffer
{
  IDirect3DIndexBuffer9 *m_d3dib;
};

/* 4447 */
struct /*VFT*/ CGxIndexBuffer_D3d_vtbl
{
  void (__thiscall *CGxIndexBuffer_D3d::~CGxIndexBuffer_D3d)(CGxIndexBuffer_D3d *this);
  void (__thiscall *Lock)(struct CGxIndexBuffer_D3d *this, void **, unsigned int, unsigned int);
  void (__thiscall *Unlock)(struct CGxIndexBuffer_D3d *this);
};

/* 4448 */
struct __cppobj CGxDeviceD3d::StateD3dLight
{
  unsigned int which;
  _D3DLIGHT9 val;
  int enabled;
  unsigned int chkSum;
};

/* 4449 */
struct __cppobj CGxDeviceD3d : CGxDevice
{
  HWND__ *m_hwnd;
  unsigned __int16 m_hwndClass;
  int m_ownhwnd;
  HINSTANCE__ *m_d3dLib;
  IDirect3D9 *m_d3d;
  IDirect3DDevice9 *m_d3dDevice;
  _D3DCAPS9 m_d3dCaps;
  int m_d3dIsHwDevice;
  int m_d3dNeedsReset;
  CVertexBufferList m_VBL[4][9];
  CGxIndexBuffer_D3d *m_IB[4][9];
  CGxVertexBuffer_D3d *m_vertexBuffer;
  EGxPrim m_primType;
  unsigned int m_primIndexCount;
  int m_processedVertexPtrs;
  int m_processedIndexPtrs;
  int m_windowVisible;
  _D3DDISPLAYMODE m_desktopDisplayMode;
  int m_deviceSupports32BitTextures;
  int m_inScene;
  _D3DFORMAT m_devDepthFormat;
  _D3DFORMAT m_devAdapterFormat;
  IDirect3DSurface9 *m_rttColorSurface;
  IDirect3DSurface9 *m_rttDepthSurface;
  IDirect3DSurface9 *m_defColorSurface;
  IDirect3DSurface9 *m_defDepthSurface;
  CGxDeviceD3d::StateD3dLight m_d3dStatesLight[8];
  unsigned int m_deviceState[34];
  unsigned __int8 m_texEnable[4];
};

/* 4450 */
struct /*VFT*/ CGxDeviceD3d_vtbl
{
  void (__thiscall *CGxDeviceD3d::PixelShaderDestroy)(CGxDeviceD3d *this, CGxPixelShader **);
  void (__thiscall *IRsSendToHw)(struct CGxDeviceD3d *this, EGxRenderState);
  void (__thiscall *ISetShaderParamList)(struct CGxDeviceD3d *this, TSExplicitList<CGxShaderParam,108> *, int);
  void (__thiscall *CGxDevice::~CGxDevice)(struct CGxDeviceD3d *this);
  _BYTE gap10[4];
  int (__thiscall *CGxDevice::DeviceCreate)(struct CGxDeviceD3d *this, int (__fastcall *)(void *, unsigned int, unsigned int, int), const CGxFormat *);
  void (__thiscall *CGxDevice::DeviceDestroy)(struct CGxDeviceD3d *this);
  int (__thiscall *CGxDevice::DeviceSetFormat)(struct CGxDeviceD3d *this, const CGxFormat *);
  void (__thiscall *CGxDevice::DeviceSetBaseMipLevel)(struct CGxDeviceD3d *this, unsigned int);
  void (__thiscall *CGxDevice::DeviceSetGamma)(struct CGxDeviceD3d *this, float) __declspec(align(8));
  void (__thiscall *CGxDevice::DeviceSetTextureQuality)(struct CGxDeviceD3d *this, int);
  unsigned int (__thiscall *DeviceWindow)(struct CGxDeviceD3d *this);
  void (__thiscall *CGxDevice::DeviceTakeScreenShot)(struct CGxDeviceD3d *this);
  void (__thiscall *CGxDevice::DeviceReadScreenShot)(struct CGxDeviceD3d *this, unsigned int *, unsigned int *, const NTempest::CImVector **);
  void (__thiscall *DeviceReadPixels)(struct CGxDeviceD3d *this, NTempest::CiRect *, TSGrowableArray<NTempest::CImVector> *);
  void (__thiscall *DeviceReadDepths)(struct CGxDeviceD3d *this, NTempest::CiRect *, TSGrowableArray<float> *);
  void (__thiscall *DeviceWM)(struct CGxDeviceD3d *this, EGxWM, int, int);
  void (__thiscall *CGxDevice::DeviceSetRenderTarget)(struct CGxDeviceD3d *this, EGxBuffer, CGxTex *, unsigned int);
  void (__thiscall *CGxDevice::DeviceOverride)(struct CGxDeviceD3d *this, EGxOverride, unsigned int);
  void (__thiscall *CapsWindowSize)(struct CGxDeviceD3d *this, NTempest::CRect *);
  void (__thiscall *CapsWindowSizeInScreenCoords)(struct CGxDeviceD3d *this, NTempest::CRect *);
  int (__thiscall *CapsIsWindowVisible)(struct CGxDeviceD3d *this);
  void (__thiscall *CGxDevice::SceneSetClearColor)(struct CGxDeviceD3d *this, NTempest::CImVector);
  void (__thiscall *CGxDevice::ScenePresent)(struct CGxDeviceD3d *this, unsigned int);
  void (__thiscall *CGxDevice::SceneClear)(struct CGxDeviceD3d *this, unsigned int);
  void (__thiscall *CGxDevice::XformSetViewport)(struct CGxDeviceD3d *this, float, float, float, float, float, float);
  void (__thiscall *CGxDevice::XformSetProjection)(struct CGxDeviceD3d *this, const NTempest::C44Matrix *);
  void (__thiscall *CGxDevice::XformSetView)(struct CGxDeviceD3d *this, const NTempest::C44Matrix *);
  void (__thiscall *CGxDevice::XformSetBones)(struct CGxDeviceD3d *this, unsigned int, const NTempest::C34Matrix *);
  void (__thiscall *CGxDevice::VertexShaderSelect)(struct CGxDeviceD3d *this, EGxVertexShader);
  void (__thiscall *CGxDevice::PrimLockAndProcessVertexPtrs)(struct CGxDeviceD3d *this, unsigned int, const NTempest::C3Vector *, unsigned int, const NTempest::C3Vector *, unsigned int, const NTempest::CImVector *, unsigned int, const unsigned __int8 *, unsigned int, const NTempest::C2Vector *, unsigned int, const NTempest::C2Vector *, unsigned int);
  void (__thiscall *CGxDevice::PrimLockIndexPtr)(struct CGxDeviceD3d *this, EGxPrim, unsigned int, const unsigned __int16 *);
  void (__thiscall *CGxDevice::PrimDrawElements)(struct CGxDeviceD3d *this);
  void (__thiscall *CGxDevice::PrimUnlockIndexPtr)(struct CGxDeviceD3d *this);
  void (__thiscall *CGxDevice::PrimUnlockVertexPtrs)(struct CGxDeviceD3d *this);
  void (__thiscall *CGxDevice::PrimBegin)(struct CGxDeviceD3d *this, EGxPrim);
  void (__thiscall *CGxDevice::PrimEnd)(struct CGxDeviceD3d *this);
  void (__thiscall *CGxDevice::PrimVertex)(struct CGxDeviceD3d *this, const NTempest::C3Vector *);
  void (__thiscall *CGxDevice::PrimTexCoord)(struct CGxDeviceD3d *this, unsigned int, const NTempest::C2Vector *);
  void (__thiscall *CGxDevice::PrimNormal)(struct CGxDeviceD3d *this, const NTempest::C3Vector *);
  void (__thiscall *CGxDevice::PrimColor)(struct CGxDeviceD3d *this, const NTempest::CImVector *);
  void (__thiscall *CGxDevice::PrimPointSize)(struct CGxDeviceD3d *this, float);
  void (__thiscall *CGxDevice::PrimLineWidth)(struct CGxDeviceD3d *this, float);
  void (__thiscall *CGxDevice::LightSet)(struct CGxDeviceD3d *this, unsigned int, const CGxLight *, const NTempest::C3Vector *);
  void (__thiscall *CGxDevice::LightEnable)(struct CGxDeviceD3d *this, unsigned int, int);
  void (__thiscall *CGxDevice::MasterEnableSet)(struct CGxDeviceD3d *this, EGxMasterEnables, int);
  CGxBuf *(__thiscall *CGxDevice::BufCreate)(struct CGxDeviceD3d *this, EGxBufWriteFreq, EGxVertexBufferFormat, unsigned int, unsigned int, void (__fastcall *)(CGxBufCommand *, CGxBuf *), void *);
  void (__thiscall *CGxDevice::BufLock)(struct CGxDeviceD3d *this, CGxBuf *);
  void (__thiscall *CGxDevice::BufRender)(struct CGxDeviceD3d *this, const CGxBatch *, unsigned int);
  void (__thiscall *CGxDevice::BufUnlock)(struct CGxDeviceD3d *this);
  void (__thiscall *CGxDevice::BufDestroy)(struct CGxDeviceD3d *this, CGxBuf **);
  void (__thiscall *CGxDevice::BufReserve)(struct CGxDeviceD3d *this, EGxBufWriteFreq, EGxVertexBufferFormat, unsigned int, unsigned int);
  int (__thiscall *CGxDevice::TexCreate)(struct CGxDeviceD3d *this, unsigned int, unsigned int, EGxTexFormat, CGxTexFlags, void *, void (__fastcall *)(EGxTexCommand, unsigned int, unsigned int, unsigned int, unsigned int, void *, unsigned int *, const void **), CGxTex **) __declspec(align(8));
  void (__thiscall *CGxDevice::TexDestroy)(struct CGxDeviceD3d *this, CGxTex *);
  void (__thiscall *CGxDevice::PixelShaderCreate)(struct CGxDeviceD3d *this, CGxPixelShader **, const char *);
  void (__thiscall *CGxDevice::PixelShaderDestroy)(struct CGxDeviceD3d *this, CGxPixelShader **);
  void (__thiscall *CGxDevice::VertexShaderCreate)(struct CGxDeviceD3d *this, CGxVertexShader **, const char *);
  void (__thiscall *CGxDevice::VertexShaderDestroy)(struct CGxDeviceD3d *this, CGxVertexShader **);
};

/* 4451 */
struct __cppobj D3DXMATRIX : _D3DMATRIX
{
};

/* 4452 */
struct __cppobj D3DXFLOAT16
{
  unsigned __int16 value;
};

/* 4453 */
struct __cppobj CGxBufD3d : CGxBuf
{
  CGxBufD3d_vtbl *__vftable /*VFT*/;
  CVertexBufferList *m_vbl;
  CGxVertexBuffer_D3d *m_vb;
  CGxIndexBuffer_D3d *m_ib;
};

/* 4454 */
struct /*VFT*/ CGxBufD3d_vtbl
{
  void (__thiscall *CGxBufD3d::~CGxBufD3d)(CGxBufD3d *this);
};

/* 4455 */
struct __cppobj ID3DXBuffer : IUnknown
{
};

/* 4456 */
struct /*VFT*/ ID3DXBuffer_vtbl
{
  unsigned int (__stdcall *Release)(ID3DXBuffer *this);
  unsigned int (__stdcall *AddRef)(struct ID3DXBuffer *);
  unsigned int (__stdcall *Release)(struct ID3DXBuffer *);
  void *(__stdcall *GetBufferPointer)(ID3DXBuffer *this);
  unsigned int (__stdcall *GetBufferSize)(ID3DXBuffer *this);
};

/* 4457 */
struct __cppobj CGxDeviceOpenGl::ColorSourceColor
{
  NTempest::CImVector m_color;
  int m_dirty;
};

/* 4458 */
struct __cppobj CGxDeviceOpenGl : CGxDevice
{
  unsigned int m_deviceState[43];
  unsigned int m_lockedArrays;
  CGxDeviceOpenGl::EColorSource m_colorSource;
  int m_colorSourceDirty;
  CGxDeviceOpenGl::ColorSourceColor m_colorSourceColor[3];
  void *m_nvvarMem;
  unsigned int m_nvvarBytes;
  unsigned int m_nvvarNext;
  int m_bufRealloc;
  HWND__ *m_hwnd;
  int m_ownhwnd;
  unsigned __int16 m_hwndClass;
  HDC__ *m_hdc;
  HGLRC__ *m_hglrc;
  HPBUFFERARB__ *m_hPbuffer;
  HDC__ *m_hPbufferDC;
  HGLRC__ *m_hPbufferRC;
  TSFixedArray<NTempest::C3Vector> m_primPos;
  TSFixedArray<NTempest::C3Vector> m_primNormal;
  TSFixedArray<NTempest::CImVector> m_primColor;
  TSFixedArray<NTempest::C2Vector> m_primT0;
  TSFixedArray<NTempest::C2Vector> m_primT1;
  CGxMemBuffer *m_vertexBuffer[4];
  CGxMemBuffer *m_indexBuffer[4];
  EGxPrim m_primType;
  unsigned int m_primIndexCount;
  const unsigned __int16 *m_primIndices;
  int m_worldViewChange;
};

/* 4459 */
struct HGLRC__
{
  int unused;
};

/* 4460 */
struct HPBUFFERARB__
{
  int unused;
};

/* 4461 */
struct /*VFT*/ CGxDeviceOpenGl_vtbl
{
  void (__thiscall *CGxDeviceOpenGl::PixelShaderDestroy)(CGxDeviceOpenGl *this, CGxPixelShader **);
  void (__thiscall *IRsSendToHw)(struct CGxDeviceOpenGl *this, EGxRenderState);
  void (__thiscall *ISetShaderParamList)(struct CGxDeviceOpenGl *this, TSExplicitList<CGxShaderParam,108> *, int);
  void (__thiscall *CGxDevice::~CGxDevice)(struct CGxDeviceOpenGl *this);
  _BYTE gap10[4];
  int (__thiscall *CGxDevice::DeviceCreate)(struct CGxDeviceOpenGl *this, int (__fastcall *)(void *, unsigned int, unsigned int, int), const CGxFormat *);
  void (__thiscall *CGxDevice::DeviceDestroy)(struct CGxDeviceOpenGl *this);
  int (__thiscall *CGxDevice::DeviceSetFormat)(struct CGxDeviceOpenGl *this, const CGxFormat *);
  void (__thiscall *CGxDevice::DeviceSetBaseMipLevel)(struct CGxDeviceOpenGl *this, unsigned int);
  void (__thiscall *CGxDevice::DeviceSetGamma)(struct CGxDeviceOpenGl *this, float) __declspec(align(8));
  void (__thiscall *CGxDevice::DeviceSetTextureQuality)(struct CGxDeviceOpenGl *this, int);
  unsigned int (__thiscall *DeviceWindow)(struct CGxDeviceOpenGl *this);
  void (__thiscall *CGxDevice::DeviceTakeScreenShot)(struct CGxDeviceOpenGl *this);
  void (__thiscall *CGxDevice::DeviceReadScreenShot)(struct CGxDeviceOpenGl *this, unsigned int *, unsigned int *, const NTempest::CImVector **);
  void (__thiscall *DeviceReadPixels)(struct CGxDeviceOpenGl *this, NTempest::CiRect *, TSGrowableArray<NTempest::CImVector> *);
  void (__thiscall *DeviceReadDepths)(struct CGxDeviceOpenGl *this, NTempest::CiRect *, TSGrowableArray<float> *);
  void (__thiscall *DeviceWM)(struct CGxDeviceOpenGl *this, EGxWM, int, int);
  void (__thiscall *CGxDevice::DeviceSetRenderTarget)(struct CGxDeviceOpenGl *this, EGxBuffer, CGxTex *, unsigned int);
  void (__thiscall *CGxDevice::DeviceOverride)(struct CGxDeviceOpenGl *this, EGxOverride, unsigned int);
  void (__thiscall *CapsWindowSize)(struct CGxDeviceOpenGl *this, NTempest::CRect *);
  void (__thiscall *CapsWindowSizeInScreenCoords)(struct CGxDeviceOpenGl *this, NTempest::CRect *);
  int (__thiscall *CapsIsWindowVisible)(struct CGxDeviceOpenGl *this);
  void (__thiscall *CGxDevice::SceneSetClearColor)(struct CGxDeviceOpenGl *this, NTempest::CImVector);
  void (__thiscall *CGxDevice::ScenePresent)(struct CGxDeviceOpenGl *this, unsigned int);
  void (__thiscall *CGxDevice::SceneClear)(struct CGxDeviceOpenGl *this, unsigned int);
  void (__thiscall *CGxDevice::XformSetViewport)(struct CGxDeviceOpenGl *this, float, float, float, float, float, float);
  void (__thiscall *CGxDevice::XformSetProjection)(struct CGxDeviceOpenGl *this, const NTempest::C44Matrix *);
  void (__thiscall *CGxDevice::XformSetView)(struct CGxDeviceOpenGl *this, const NTempest::C44Matrix *);
  void (__thiscall *CGxDevice::XformSetBones)(struct CGxDeviceOpenGl *this, unsigned int, const NTempest::C34Matrix *);
  void (__thiscall *CGxDevice::VertexShaderSelect)(struct CGxDeviceOpenGl *this, EGxVertexShader);
  void (__thiscall *CGxDevice::PrimLockAndProcessVertexPtrs)(struct CGxDeviceOpenGl *this, unsigned int, const NTempest::C3Vector *, unsigned int, const NTempest::C3Vector *, unsigned int, const NTempest::CImVector *, unsigned int, const unsigned __int8 *, unsigned int, const NTempest::C2Vector *, unsigned int, const NTempest::C2Vector *, unsigned int);
  void (__thiscall *CGxDevice::PrimLockIndexPtr)(struct CGxDeviceOpenGl *this, EGxPrim, unsigned int, const unsigned __int16 *);
  void (__thiscall *CGxDevice::PrimDrawElements)(struct CGxDeviceOpenGl *this);
  void (__thiscall *CGxDevice::PrimUnlockIndexPtr)(struct CGxDeviceOpenGl *this);
  void (__thiscall *CGxDevice::PrimUnlockVertexPtrs)(struct CGxDeviceOpenGl *this);
  void (__thiscall *CGxDevice::PrimBegin)(struct CGxDeviceOpenGl *this, EGxPrim);
  void (__thiscall *CGxDevice::PrimEnd)(struct CGxDeviceOpenGl *this);
  void (__thiscall *CGxDevice::PrimVertex)(struct CGxDeviceOpenGl *this, const NTempest::C3Vector *);
  void (__thiscall *CGxDevice::PrimTexCoord)(struct CGxDeviceOpenGl *this, unsigned int, const NTempest::C2Vector *);
  void (__thiscall *CGxDevice::PrimNormal)(struct CGxDeviceOpenGl *this, const NTempest::C3Vector *);
  void (__thiscall *CGxDevice::PrimColor)(struct CGxDeviceOpenGl *this, const NTempest::CImVector *);
  void (__thiscall *CGxDevice::PrimPointSize)(struct CGxDeviceOpenGl *this, float);
  void (__thiscall *CGxDevice::PrimLineWidth)(struct CGxDeviceOpenGl *this, float);
  void (__thiscall *CGxDevice::LightSet)(struct CGxDeviceOpenGl *this, unsigned int, const CGxLight *, const NTempest::C3Vector *);
  void (__thiscall *CGxDevice::LightEnable)(struct CGxDeviceOpenGl *this, unsigned int, int);
  void (__thiscall *CGxDevice::MasterEnableSet)(struct CGxDeviceOpenGl *this, EGxMasterEnables, int);
  CGxBuf *(__thiscall *CGxDevice::BufCreate)(struct CGxDeviceOpenGl *this, EGxBufWriteFreq, EGxVertexBufferFormat, unsigned int, unsigned int, void (__fastcall *)(CGxBufCommand *, CGxBuf *), void *);
  void (__thiscall *CGxDevice::BufLock)(struct CGxDeviceOpenGl *this, CGxBuf *);
  void (__thiscall *CGxDevice::BufRender)(struct CGxDeviceOpenGl *this, const CGxBatch *, unsigned int);
  void (__thiscall *CGxDevice::BufUnlock)(struct CGxDeviceOpenGl *this);
  void (__thiscall *CGxDevice::BufDestroy)(struct CGxDeviceOpenGl *this, CGxBuf **);
  void (__thiscall *CGxDevice::BufReserve)(struct CGxDeviceOpenGl *this, EGxBufWriteFreq, EGxVertexBufferFormat, unsigned int, unsigned int);
  int (__thiscall *CGxDevice::TexCreate)(struct CGxDeviceOpenGl *this, unsigned int, unsigned int, EGxTexFormat, CGxTexFlags, void *, void (__fastcall *)(EGxTexCommand, unsigned int, unsigned int, unsigned int, unsigned int, void *, unsigned int *, const void **), CGxTex **) __declspec(align(8));
  void (__thiscall *CGxDevice::TexDestroy)(struct CGxDeviceOpenGl *this, CGxTex *);
  void (__thiscall *CGxDevice::PixelShaderCreate)(struct CGxDeviceOpenGl *this, CGxPixelShader **, const char *);
  void (__thiscall *CGxDevice::PixelShaderDestroy)(struct CGxDeviceOpenGl *this, CGxPixelShader **);
  void (__thiscall *CGxDevice::VertexShaderCreate)(struct CGxDeviceOpenGl *this, CGxVertexShader **, const char *);
  void (__thiscall *CGxDevice::VertexShaderDestroy)(struct CGxDeviceOpenGl *this, CGxVertexShader **);
};

/* 4462 */
struct __cppobj CGxBufOgl : CGxBuf
{
  CGxMemBuffer *m_vb;
  CGxMemBuffer *m_ib;
  void *vertexPtr[7];
  unsigned __int16 *indexPtr;
};

/* 4463 */
struct RegisterCombiners::CombinerVariable
{
  unsigned int input;
  unsigned int mapping;
  unsigned int component;
};

/* 4464 */
struct __declspec(align(2)) RegisterCombiners::CombinerOutput
{
  unsigned int abOutput;
  unsigned int cdOutput;
  unsigned int sumOutput;
  unsigned int scale;
  unsigned int bias;
  unsigned __int8 abDotProduct;
  unsigned __int8 cdDotProduct;
  unsigned __int8 muxSum;
};

/* 4465 */
struct RegisterCombiners::CombinerPortion
{
  RegisterCombiners::CombinerVariable variable[4];
  RegisterCombiners::CombinerOutput output;
};

/* 4466 */
struct __cppobj RegisterCombiners::GeneralCombiner
{
  RegisterCombiners::CombinerPortion portion[2];
  NTempest::C4Vector constants[2];
};

/* 4467 */
struct RegisterCombiners::FinalCombiner
{
  RegisterCombiners::CombinerVariable variable[7];
};

/* 4468 */
struct __cppobj CGxMemBuffer_VAR : CGxMemBuffer
{
  void *m_mem;
  unsigned int m_fence;
};

/* 4469 */
struct /*VFT*/ CGxMemBuffer_VAR_vtbl
{
  void (__thiscall *CGxMemBuffer_VAR::~CGxMemBuffer_VAR)(CGxMemBuffer_VAR *this);
  void (__thiscall *Lock)(struct CGxMemBuffer_VAR *this, void **, unsigned int, unsigned int);
  void (__thiscall *Unlock)(struct CGxMemBuffer_VAR *this);
};

/* 4470 */
struct __cppobj CGxDeviceOpenGl::PixelFormatAttribute<int>
{
  int attribute;
  int value;
};

/* 4471 */
struct __cppobj TSBaseArray<CGxFormat>
{
  TSBaseArray<CGxFormat>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CGxFormat *m_data;
};

/* 4472 */
struct /*VFT*/ TSBaseArray<CGxFormat>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxFormat>::MemFileName)(TSBaseArray<CGxFormat> *this);
  int (__thiscall *TSBaseArray<CGxFormat>::MemLineNo)(TSBaseArray<CGxFormat> *this);
};

/* 4473 */
struct /*VFT*/ TSFixedArray<CGxFormat>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxFormat>::MemFileName)(struct TSFixedArray<CGxFormat> *this);
  int (__thiscall *TSBaseArray<CGxFormat>::MemLineNo)(struct TSFixedArray<CGxFormat> *this);
};

/* 4474 */
struct __cppobj TSFixedArray<CGxFormat> : TSBaseArray<CGxFormat>
{
};

/* 4475 */
struct /*VFT*/ TSGrowableArray<CGxFormat>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxFormat>::MemFileName)(struct TSGrowableArray<CGxFormat> *this);
  int (__thiscall *TSBaseArray<CGxFormat>::MemLineNo)(struct TSGrowableArray<CGxFormat> *this);
};

/* 4476 */
struct __cppobj TSGrowableArray<CGxFormat> : TSFixedArray<CGxFormat>
{
  unsigned int m_chunk;
};

/* 4477 */
struct __cppobj TSBaseArray<CGxMonitorMode>
{
  TSBaseArray<CGxMonitorMode>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CGxMonitorMode *m_data;
};

/* 4478 */
struct /*VFT*/ TSBaseArray<CGxMonitorMode>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxMonitorMode>::MemFileName)(TSBaseArray<CGxMonitorMode> *this);
  int (__thiscall *TSBaseArray<CGxMonitorMode>::MemLineNo)(TSBaseArray<CGxMonitorMode> *this);
};

/* 4479 */
struct __cppobj CGxMonitorMode
{
  NTempest::C2iVector size;
  unsigned int bpp;
  unsigned int refreshRate;
};

/* 4480 */
struct /*VFT*/ TSFixedArray<CGxMonitorMode>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxMonitorMode>::MemFileName)(struct TSFixedArray<CGxMonitorMode> *this);
  int (__thiscall *TSBaseArray<CGxMonitorMode>::MemLineNo)(struct TSFixedArray<CGxMonitorMode> *this);
};

/* 4481 */
struct __cppobj TSFixedArray<CGxMonitorMode> : TSBaseArray<CGxMonitorMode>
{
};

/* 4482 */
struct /*VFT*/ TSGrowableArray<CGxMonitorMode>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxMonitorMode>::MemFileName)(struct TSGrowableArray<CGxMonitorMode> *this);
  int (__thiscall *TSBaseArray<CGxMonitorMode>::MemLineNo)(struct TSGrowableArray<CGxMonitorMode> *this);
};

/* 4483 */
struct __cppobj TSGrowableArray<CGxMonitorMode> : TSFixedArray<CGxMonitorMode>
{
  unsigned int m_chunk;
};

/* 4484 */
struct __cppobj CGxTexParms
{
  unsigned int width;
  unsigned int height;
  EGxTexFormat format;
  CGxTexFlags flags;
  void *userArg;
  void (__fastcall *userFunc)(EGxTexCommand, unsigned int, unsigned int, unsigned int, unsigned int, void *, unsigned int *, const void **);
};

/* 4485 */
struct CGxShader::DirEntry
{
  unsigned int start;
  unsigned int count;
};

/* 4486 */
struct __cppobj DxtColorBlock::Tables
{
  unsigned __int16 dt135[32];
  unsigned __int16 dt235[32];
  unsigned __int16 dt136[64];
  unsigned __int16 dt236[64];
};

/* 4487 */
struct __cppobj C4LargePixel
{
  int b;
  int g;
  int r;
  int a;
};

/* 4488 */
struct __cppobj DxtBlock
{
};

/* 4489 */
struct __cppobj Dxt3AlphaBlock : DxtBlock
{
  unsigned __int16 row[4];
};

/* 4490 */
struct __cppobj DxtColorBlock : DxtBlock
{
  NTempest::CRgb565 color0;
  NTempest::CRgb565 color1;
  unsigned __int8 row[4];
};

/* 4491 */
struct __cppobj Dxt3Block : DxtBlock
{
  Dxt3AlphaBlock alpha;
  DxtColorBlock color;
};

/* 4492 */
struct __cppobj DxtRect
{
  unsigned int l;
  unsigned int t;
  unsigned int r;
  unsigned int b;
  unsigned int w;
  unsigned int h;
};

/* 4493 */
struct __cppobj Dxt1Block : DxtBlock
{
  DxtColorBlock color;
};

/* 4494 */
union FT_StreamDesc_
{
  int value;
  void *pointer;
};

/* 4495 */
struct FT_StreamRec_
{
  unsigned __int8 *base;
  unsigned int size;
  unsigned int pos;
  FT_StreamDesc_ descriptor;
  FT_StreamDesc_ pathname;
  unsigned int (__fastcall *read)(FT_StreamRec_ *, unsigned int, unsigned __int8 *, unsigned int);
  void (__fastcall *close)(FT_StreamRec_ *);
  FT_MemoryRec_ *memory;
  unsigned __int8 *cursor;
  unsigned __int8 *limit;
};

/* 4496 */
struct FT_MemoryRec_
{
  void *user;
  void *(__fastcall *alloc)(FT_MemoryRec_ *, int);
  void (__fastcall *free)(FT_MemoryRec_ *, void *);
  void *(__fastcall *realloc)(FT_MemoryRec_ *, int, int, void *);
};

/* 4499 */
struct FT_Generic_
{
  void *data;
  void (__fastcall *finalizer)(void *);
};

/* 4497 */
struct FT_ModuleRec_
{
  FT_Module_Class_ *clazz;
  FT_LibraryRec_ *library;
  FT_MemoryRec_ *memory;
  FT_Generic_ generic;
};

/* 4498 */
struct FT_Module_Class_
{
  unsigned int module_flags;
  int module_size;
  const char *module_name;
  int module_version;
  int module_requires;
  const void *module_interface;
  int (__fastcall *module_init)(FT_ModuleRec_ *);
  void (__fastcall *module_done)(FT_ModuleRec_ *);
  void (__fastcall *(__fastcall *get_interface)(FT_ModuleRec_ *, const char *))();
};

/* 4501 */
struct FT_ListRec_
{
  FT_ListNodeRec_ *head;
  FT_ListNodeRec_ *tail;
};

/* 4503 */
struct FT_LibraryRec_
{
  FT_MemoryRec_ *memory;
  FT_Generic_ generic;
  unsigned int num_modules;
  FT_ModuleRec_ *modules[16];
  FT_ListRec_ renderers;
  FT_RendererRec_ *cur_renderer;
  FT_ModuleRec_ *auto_hinter;
  unsigned __int8 *raster_pool;
  unsigned int raster_pool_size;
  void (__fastcall *debug_hooks[4])(void *);
};

/* 4500 */
struct FT_ListNodeRec_
{
  FT_ListNodeRec_ *prev;
  FT_ListNodeRec_ *next;
  void *data;
};

/* 4528 */
struct FT_Glyph_Class_
{
  unsigned int glyph_size;
  int glyph_format;
  int (__fastcall *glyph_init)(FT_GlyphRec_ *, FT_GlyphSlotRec_ *);
  void (__fastcall *glyph_done)(FT_GlyphRec_ *);
  int (__fastcall *glyph_copy)(FT_GlyphRec_ *, FT_GlyphRec_ *);
  void (__fastcall *glyph_transform)(FT_GlyphRec_ *, FT_Matrix_ *, FT_Vector_ *);
  void (__fastcall *glyph_bbox)(FT_GlyphRec_ *, FT_BBox_ *);
  int (__fastcall *glyph_prepare)(FT_GlyphRec_ *, FT_GlyphSlotRec_ *);
};

/* 4502 */
struct FT_RendererRec_
{
  FT_ModuleRec_ root;
  FT_Renderer_Class_ *clazz;
  int glyph_format;
  FT_Glyph_Class_ glyph_class;
  struct FT_RasterRec_ *raster;
  int (__fastcall *raster_render)(struct FT_RasterRec_ *, FT_Raster_Params_ *);
  int (__fastcall *render)(FT_RendererRec_ *, FT_GlyphSlotRec_ *, unsigned int, FT_Vector_ *);
};

/* 4527 */
struct FT_Renderer_Class_
{
  FT_Module_Class_ root;
  int glyph_format;
  int (__fastcall *render_glyph)(FT_RendererRec_ *, FT_GlyphSlotRec_ *, unsigned int, FT_Vector_ *);
  int (__fastcall *transform_glyph)(FT_RendererRec_ *, FT_GlyphSlotRec_ *, FT_Matrix_ *, FT_Vector_ *);
  void (__fastcall *get_glyph_cbox)(FT_RendererRec_ *, FT_GlyphSlotRec_ *, FT_BBox_ *);
  int (__fastcall *set_mode)(FT_RendererRec_ *, unsigned int, void *);
  FT_Raster_Funcs_ *raster_class;
};

/* 4512 */
struct FT_Vector_
{
  int x;
  int y;
};

/* 4529 */
struct FT_GlyphRec_
{
  FT_LibraryRec_ *library;
  const FT_Glyph_Class_ *clazz;
  int format;
  FT_Vector_ advance;
};

/* 4521 */
struct FT_Glyph_Metrics_
{
  int width;
  int height;
  int horiBearingX;
  int horiBearingY;
  int horiAdvance;
  int vertBearingX;
  int vertBearingY;
  int vertAdvance;
};

/* 4522 */
struct FT_Bitmap_
{
  int rows;
  int width;
  int pitch;
  unsigned __int8 *buffer;
  __int16 num_grays;
  char pixel_mode;
  char palette_mode;
  void *palette;
};

/* 4514 */
struct FT_Outline_
{
  __int16 n_contours;
  __int16 n_points;
  FT_Vector_ *points;
  char *tags;
  __int16 *contours;
  int flags;
};

/* 4508 */
struct FT_GlyphSlotRec_
{
  FT_LibraryRec_ *library;
  FT_FaceRec_ *face;
  FT_GlyphSlotRec_ *next;
  unsigned int flags;
  FT_Generic_ generic;
  FT_Glyph_Metrics_ metrics;
  int linearHoriAdvance;
  int linearVertAdvance;
  FT_Vector_ advance;
  int format;
  FT_Bitmap_ bitmap;
  int bitmap_left;
  int bitmap_top;
  FT_Outline_ outline;
  unsigned int num_subglyphs;
  FT_SubGlyph_ *subglyphs;
  void *control_data;
  int control_len;
  void *other;
  FT_Slot_InternalRec_ *internal;
};

/* 4515 */
struct FT_Matrix_
{
  int xx;
  int xy;
  int yx;
  int yy;
};

/* 4507 */
struct FT_BBox_
{
  int xMin;
  int yMin;
  int xMax;
  int yMax;
};

/* 4525 */
struct FT_Raster_Params_
{
  FT_Bitmap_ *target;
  void *source;
  int flags;
  void (__fastcall *gray_spans)(int, int, FT_Span_ *, void *);
  void (__fastcall *black_spans)(int, int, FT_Span_ *, void *);
  int (__fastcall *bit_test)(int, int, void *);
  void (__fastcall *bit_set)(int, int, void *);
  void *user;
};

/* 4526 */
struct FT_Raster_Funcs_
{
  int glyph_format;
  int (__fastcall *raster_new)(void *, struct FT_RasterRec_ **);
  void (__fastcall *raster_reset)(struct FT_RasterRec_ *, unsigned __int8 *, unsigned int);
  int (__fastcall *raster_set_mode)(struct FT_RasterRec_ *, unsigned int, void *);
  int (__fastcall *raster_render)(struct FT_RasterRec_ *, FT_Raster_Params_ *);
  void (__fastcall *raster_done)(struct FT_RasterRec_ *);
};

/* 4505 */
struct FT_FaceRec_
{
  int num_faces;
  int face_index;
  int face_flags;
  int style_flags;
  int num_glyphs;
  char *family_name;
  char *style_name;
  int num_fixed_sizes;
  FT_Bitmap_Size_ *available_sizes;
  int num_charmaps;
  FT_CharMapRec_ **charmaps;
  FT_Generic_ generic;
  FT_BBox_ bbox;
  unsigned __int16 units_per_EM;
  __int16 ascender;
  __int16 descender;
  __int16 height;
  __int16 max_advance_width;
  __int16 max_advance_height;
  __int16 underline_position;
  __int16 underline_thickness;
  FT_GlyphSlotRec_ *glyph;
  FT_SizeRec_ *size;
  FT_CharMapRec_ *charmap;
  FT_DriverRec_ *driver;
  FT_MemoryRec_ *memory;
  FT_StreamRec_ *stream;
  FT_ListRec_ sizes_list;
  FT_Generic_ autohint;
  void *extensions;
  FT_Face_InternalRec_ *internal;
};

/* 4516 */
struct FT_SubGlyph_
{
  int index;
  unsigned __int16 flags;
  int arg1;
  int arg2;
  FT_Matrix_ transform;
};

/* 4523 */
struct FT_Slot_InternalRec_
{
  FT_GlyphLoader_ *loader;
  unsigned __int8 glyph_transformed;
  FT_Matrix_ glyph_matrix;
  FT_Vector_ glyph_delta;
};

/* 4524 */
struct __declspec(align(2)) FT_Span_
{
  __int16 x;
  unsigned __int16 len;
  unsigned __int8 coverage;
};

/* 4504 */
struct FT_Bitmap_Size_
{
  __int16 height;
  __int16 width;
};

/* 4506 */
struct FT_CharMapRec_
{
  FT_FaceRec_ *face;
  int encoding;
  unsigned __int16 platform_id;
  unsigned __int16 encoding_id;
};

/* 4509 */
struct FT_Size_Metrics_
{
  unsigned __int16 x_ppem;
  unsigned __int16 y_ppem;
  int x_scale;
  int y_scale;
  int ascender;
  int descender;
  int height;
  int max_advance;
};

/* 4510 */
struct FT_SizeRec_
{
  FT_FaceRec_ *face;
  FT_Generic_ generic;
  FT_Size_Metrics_ metrics;
  struct FT_Size_InternalRec_ *internal;
};

/* 4519 */
struct FT_DriverRec_
{
  FT_ModuleRec_ root;
  FT_Driver_Class_ *clazz;
  FT_ListRec_ faces_list;
  void *extensions;
  FT_GlyphLoader_ *glyph_loader;
};

/* 4520 */
struct FT_Face_InternalRec_
{
  unsigned __int16 max_points;
  __int16 max_contours;
  FT_Matrix_ transform_matrix;
  FT_Vector_ transform_delta;
  int transform_flags;
};

/* 4517 */
struct FT_GlyphLoad_
{
  FT_Outline_ outline;
  unsigned int num_subglyphs;
  FT_SubGlyph_ *subglyphs;
  FT_Vector_ *extra_points;
};

/* 4518 */
struct FT_GlyphLoader_
{
  FT_MemoryRec_ *memory;
  unsigned int max_points;
  unsigned int max_contours;
  unsigned int max_subglyphs;
  unsigned __int8 use_extra;
  FT_GlyphLoad_ base;
  FT_GlyphLoad_ current;
  void *other;
};

/* 4513 */
struct FT_Driver_Class_
{
  FT_Module_Class_ root;
  int face_object_size;
  int size_object_size;
  int slot_object_size;
  int (__fastcall *init_face)(FT_StreamRec_ *, FT_FaceRec_ *, int, int, FT_Parameter_ *);
  void (__fastcall *done_face)(FT_FaceRec_ *);
  int (__fastcall *init_size)(FT_SizeRec_ *);
  void (__fastcall *done_size)(FT_SizeRec_ *);
  int (__fastcall *init_slot)(FT_GlyphSlotRec_ *);
  void (__fastcall *done_slot)(FT_GlyphSlotRec_ *);
  int (__fastcall *set_char_sizes)(FT_SizeRec_ *, int, int, unsigned int, unsigned int);
  int (__fastcall *set_pixel_sizes)(FT_SizeRec_ *, unsigned int, unsigned int);
  int (__fastcall *load_glyph)(FT_GlyphSlotRec_ *, FT_SizeRec_ *, unsigned int, int);
  unsigned int (__fastcall *get_char_index)(FT_CharMapRec_ *, int);
  int (__fastcall *get_kerning)(FT_FaceRec_ *, unsigned int, unsigned int, FT_Vector_ *);
  int (__fastcall *attach_file)(FT_FaceRec_ *, FT_StreamRec_ *);
  int (__fastcall *get_advances)(FT_FaceRec_ *, unsigned int, unsigned int, unsigned __int8, unsigned __int16 *);
};

/* 4511 */
struct FT_Parameter_
{
  unsigned int tag;
  void *data;
};

/* 4530 */
struct AH_Globals_
{
  int num_widths;
  int num_heights;
  int widths[12];
  int heights[12];
  int blue_refs[5];
  int blue_shoots[5];
};

/* 4531 */
struct __declspec(align(4)) AH_Face_Globals_
{
  FT_FaceRec_ *face;
  AH_Globals_ design;
  AH_Globals_ scaled;
  int x_scale;
  int y_scale;
  unsigned __int8 control_overshoot;
};

/* 4532 */
struct AH_Point
{
  int flags;
  int ox;
  int oy;
  int fx;
  int fy;
  int x;
  int y;
  int u;
  int v;
  int in_dir;
  int out_dir;
  int in_angle;
  int out_angle;
  AH_Point *next;
  AH_Point *prev;
};

/* 4533 */
struct AH_Edge
{
  int flags;
  int dir;
  AH_Segment *first;
  AH_Segment *last;
  int fpos;
  int opos;
  int pos;
  AH_Edge *link;
  AH_Edge *serif;
  int num_linked;
  int score;
  int *blue_edge;
};

/* 4534 */
struct AH_Segment
{
  int flags;
  int dir;
  AH_Point *first;
  AH_Point *last;
  AH_Point **contour;
  int pos;
  int min_coord;
  int max_coord;
  AH_Edge *edge;
  AH_Segment *edge_next;
  AH_Segment *link;
  AH_Segment *serif;
  int num_linked;
  int score;
};

/* 4535 */
struct AH_Outline_
{
  FT_MemoryRec_ *memory;
  int vert_major_dir;
  int horz_major_dir;
  int x_scale;
  int y_scale;
  int edge_distance_threshold;
  int max_points;
  int num_points;
  AH_Point *points;
  int max_contours;
  int num_contours;
  AH_Point **contours;
  int num_hedges;
  AH_Edge *horz_edges;
  int num_vedges;
  AH_Edge *vert_edges;
  int num_hsegments;
  AH_Segment *horz_segments;
  int num_vsegments;
  AH_Segment *vert_segments;
};

/* 4536 */
struct AH_Hinter
{
  FT_MemoryRec_ *memory;
  int flags;
  int algorithm;
  FT_FaceRec_ *face;
  AH_Face_Globals_ *globals;
  AH_Outline_ *glyph;
  FT_GlyphLoader_ *loader;
  FT_Vector_ pp1;
  FT_Vector_ pp2;
};

/* 4537 */
struct FT_AutoHinterRec_
{
  FT_ModuleRec_ root;
  AH_Hinter *hinter;
};

/* 4538 */
struct FT_AutoHinter_Interface
{
  void (__fastcall *reset_face)(FT_AutoHinterRec_ *, FT_FaceRec_ *);
  int (__fastcall *load_glyph)(FT_AutoHinterRec_ *, FT_GlyphSlotRec_ *, FT_SizeRec_ *, unsigned int, unsigned int);
  void (__fastcall *get_global_hints)(FT_AutoHinterRec_ *, FT_FaceRec_ *, void **, int *);
  void (__fastcall *done_global_hints)(FT_AutoHinterRec_ *, void *);
};

/* 4539 */
struct FT_Frame_Field_
{
  int value;
  unsigned __int8 size;
  unsigned __int16 offset;
};

/* 4540 */
struct TEncoding
{
  int platform_id;
  int encoding_id;
  int encoding;
};

/* 4541 */
struct T2_Parser_
{
  unsigned __int8 *start;
  unsigned __int8 *limit;
  unsigned __int8 *cursor;
  unsigned __int8 *stack[97];
  unsigned __int8 **top;
  unsigned int object_code;
  void *object;
};

/* 4542 */
struct T2_Field_Handler_
{
  int kind;
  int code;
  unsigned int offset;
  unsigned __int8 size;
  int (__fastcall *reader)(T2_Parser_ *);
  unsigned int array_max;
  unsigned int count_offset;
};

/* 4543 */
struct TTC_Header_
{
  unsigned int tag;
  int version;
  int count;
  unsigned int *offsets;
};

/* 4544 */
struct TT_Table_
{
  unsigned int Tag;
  unsigned int CheckSum;
  unsigned int Offset;
  unsigned int Length;
};

/* 4545 */
struct __declspec(align(4)) TT_Header_
{
  int Table_Version;
  int Font_Revision;
  int CheckSum_Adjust;
  int Magic_Number;
  unsigned __int16 Flags;
  unsigned __int16 Units_Per_EM;
  int Created[2];
  int Modified[2];
  __int16 xMin;
  __int16 yMin;
  __int16 xMax;
  __int16 yMax;
  unsigned __int16 Mac_Style;
  unsigned __int16 Lowest_Rec_PPEM;
  __int16 Font_Direction;
  __int16 Index_To_Loc_Format;
  __int16 Glyph_Data_Format;
};

/* 4546 */
struct TT_HoriHeader_
{
  int Version;
  __int16 Ascender;
  __int16 Descender;
  __int16 Line_Gap;
  unsigned __int16 advance_Width_Max;
  __int16 min_Left_Side_Bearing;
  __int16 min_Right_Side_Bearing;
  __int16 xMax_Extent;
  __int16 caret_Slope_Rise;
  __int16 caret_Slope_Run;
  __int16 caret_Offset;
  __int16 Reserved[4];
  __int16 metric_Data_Format;
  unsigned __int16 number_Of_HMetrics;
  void *long_metrics;
  void *short_metrics;
};

/* 4547 */
struct TT_MaxProfile_
{
  int version;
  unsigned __int16 numGlyphs;
  unsigned __int16 maxPoints;
  unsigned __int16 maxContours;
  unsigned __int16 maxCompositePoints;
  unsigned __int16 maxCompositeContours;
  unsigned __int16 maxZones;
  unsigned __int16 maxTwilightPoints;
  unsigned __int16 maxStorage;
  unsigned __int16 maxFunctionDefs;
  unsigned __int16 maxInstructionDefs;
  unsigned __int16 maxStackElements;
  unsigned __int16 maxSizeOfInstructions;
  unsigned __int16 maxComponentElements;
  unsigned __int16 maxComponentDepth;
};

/* 4548 */
struct TT_VertHeader_
{
  int Version;
  __int16 Ascender;
  __int16 Descender;
  __int16 Line_Gap;
  unsigned __int16 advance_Height_Max;
  __int16 min_Top_Side_Bearing;
  __int16 min_Bottom_Side_Bearing;
  __int16 yMax_Extent;
  __int16 caret_Slope_Rise;
  __int16 caret_Slope_Run;
  __int16 caret_Offset;
  __int16 Reserved[4];
  __int16 metric_Data_Format;
  unsigned __int16 number_Of_VMetrics;
  void *long_metrics;
  void *short_metrics;
};

/* 4549 */
struct TT_NameRec_
{
  unsigned __int16 platformID;
  unsigned __int16 encodingID;
  unsigned __int16 languageID;
  unsigned __int16 nameID;
  unsigned __int16 stringLength;
  unsigned __int16 stringOffset;
  unsigned __int8 *string;
};

/* 4550 */
struct TT_NameTable_
{
  unsigned __int16 format;
  unsigned __int16 numNameRecords;
  unsigned __int16 storageOffset;
  TT_NameRec_ *names;
  unsigned __int8 *storage;
};

/* 4551 */
struct __declspec(align(4)) TT_OS2_
{
  unsigned __int16 version;
  __int16 xAvgCharWidth;
  unsigned __int16 usWeightClass;
  unsigned __int16 usWidthClass;
  __int16 fsType;
  __int16 ySubscriptXSize;
  __int16 ySubscriptYSize;
  __int16 ySubscriptXOffset;
  __int16 ySubscriptYOffset;
  __int16 ySuperscriptXSize;
  __int16 ySuperscriptYSize;
  __int16 ySuperscriptXOffset;
  __int16 ySuperscriptYOffset;
  __int16 yStrikeoutSize;
  __int16 yStrikeoutPosition;
  __int16 sFamilyClass;
  unsigned __int8 panose[10];
  unsigned int ulUnicodeRange1;
  unsigned int ulUnicodeRange2;
  unsigned int ulUnicodeRange3;
  unsigned int ulUnicodeRange4;
  char achVendID[4];
  unsigned __int16 fsSelection;
  unsigned __int16 usFirstCharIndex;
  unsigned __int16 usLastCharIndex;
  __int16 sTypoAscender;
  __int16 sTypoDescender;
  __int16 sTypoLineGap;
  unsigned __int16 usWinAscent;
  unsigned __int16 usWinDescent;
  unsigned int ulCodePageRange1;
  unsigned int ulCodePageRange2;
  __int16 sxHeight;
  __int16 sCapHeight;
  unsigned __int16 usDefaultChar;
  unsigned __int16 usBreakChar;
  unsigned __int16 usMaxContext;
};

/* 4552 */
struct TT_Postscript_
{
  int FormatType;
  int italicAngle;
  __int16 underlinePosition;
  __int16 underlineThickness;
  unsigned int isFixedPitch;
  unsigned int minMemType42;
  unsigned int maxMemType42;
  unsigned int minMemType1;
  unsigned int maxMemType1;
};

/* 4553 */
struct TT_CMap0_
{
  unsigned __int8 *glyphIdArray;
};

/* 4554 */
struct TT_CMap2SubHeader_
{
  unsigned __int16 firstCode;
  unsigned __int16 entryCount;
  __int16 idDelta;
  unsigned __int16 idRangeOffset;
};

/* 4555 */
struct __declspec(align(4)) TT_CMap2_
{
  unsigned __int16 *subHeaderKeys;
  TT_CMap2SubHeader_ *subHeaders;
  unsigned __int16 *glyphIdArray;
  unsigned __int16 numGlyphId;
};

/* 4556 */
struct TT_CMap4Segment_
{
  unsigned __int16 endCount;
  unsigned __int16 startCount;
  __int16 idDelta;
  unsigned __int16 idRangeOffset;
};

/* 4557 */
struct TT_CMap4_
{
  unsigned __int16 segCountX2;
  unsigned __int16 searchRange;
  unsigned __int16 entrySelector;
  unsigned __int16 rangeShift;
  TT_CMap4Segment_ *segments;
  unsigned __int16 *glyphIdArray;
  unsigned __int16 numGlyphId;
  TT_CMap4Segment_ *last_segment;
};

/* 4558 */
struct TT_CMap6_
{
  unsigned __int16 firstCode;
  unsigned __int16 entryCount;
  unsigned __int16 *glyphIdArray;
};

/* 4559 */
union $57E2544405917D5781E52BB867CB93A7
{
  TT_CMap0_ cmap0;
  TT_CMap2_ cmap2;
  TT_CMap4_ cmap4;
  TT_CMap6_ cmap6;
};

/* 4560 */
struct TT_CMapTable_
{
  unsigned __int16 platformID;
  unsigned __int16 platformEncodingID;
  unsigned __int16 format;
  unsigned __int16 length;
  unsigned __int16 version;
  unsigned __int8 loaded;
  unsigned int offset;
  $57E2544405917D5781E52BB867CB93A7 c;
  unsigned int (__fastcall *get_index)(TT_CMapTable_ *, unsigned int);
};

/* 4561 */
struct TT_CharMapRec_
{
  FT_CharMapRec_ root;
  TT_CMapTable_ cmap;
};

/* 4566 */
struct TT_Hdmx_
{
  unsigned __int16 version;
  __int16 num_records;
  TT_HdmxRec_ *records;
};

/* 4568 */
struct TT_Gasp_
{
  unsigned __int16 version;
  unsigned __int16 numRanges;
  TT_GaspRange_ *gaspRanges;
};

/* 4569 */
struct __declspec(align(4)) TT_PCLT_
{
  int Version;
  unsigned int FontNumber;
  unsigned __int16 Pitch;
  unsigned __int16 xHeight;
  unsigned __int16 Style;
  unsigned __int16 TypeFamily;
  unsigned __int16 CapHeight;
  unsigned __int16 SymbolSet;
  char TypeFace[16];
  char CharacterComplement[8];
  char FileName[6];
  char StrokeWeight;
  char WidthType;
  unsigned __int8 SerifStyle;
  unsigned __int8 Reserved;
};

/* 4575 */
struct TT_Post_20_
{
  unsigned __int16 num_glyphs;
  unsigned __int16 num_names;
  unsigned __int16 *glyph_indices;
  char **glyph_names;
};

/* 4576 */
struct TT_Post_25_
{
  unsigned __int16 num_glyphs;
  char *offsets;
};

/* 4577 */
union $3352F316020739C8D5559006C4AA7664
{
  TT_Post_20_ format_20;
  TT_Post_25_ format_25;
};

/* 4578 */
struct TT_Post_Names_
{
  unsigned __int8 loaded;
  $3352F316020739C8D5559006C4AA7664 names;
};

/* 4562 */
struct TT_FaceRec_
{
  FT_FaceRec_ root;
  TTC_Header_ ttc_header;
  unsigned int format_tag;
  unsigned __int16 num_tables;
  TT_Table_ *dir_tables;
  TT_Header_ header;
  TT_HoriHeader_ horizontal;
  TT_MaxProfile_ max_profile;
  unsigned int max_components;
  unsigned __int8 vertical_info;
  TT_VertHeader_ vertical;
  unsigned __int16 num_names;
  TT_NameTable_ name_table;
  TT_OS2_ os2;
  TT_Postscript_ postscript;
  int num_charmaps;
  TT_CharMapRec_ *charmaps;
  int (__fastcall *goto_table)(TT_FaceRec_ *, unsigned int, FT_StreamRec_ *, unsigned int *);
  int (__fastcall *access_glyph_frame)(TT_Loader_ *, unsigned int, unsigned int, unsigned int);
  int (__fastcall *read_glyph_header)(TT_Loader_ *);
  int (__fastcall *read_simple_glyph)(TT_Loader_ *);
  int (__fastcall *read_composite_glyph)(TT_Loader_ *);
  void (__fastcall *forget_glyph_frame)(TT_Loader_ *);
  void *sfnt;
  void *psnames;
  TT_Hdmx_ hdmx;
  TT_Gasp_ gasp;
  TT_PCLT_ pclt;
  int num_sbit_strikes;
  TT_SBit_Strike_ *sbit_strikes;
  int num_sbit_scales;
  TT_SBit_Scale_ *sbit_scales;
  TT_Post_Names_ postscript_names;
  unsigned __int16 num_locations;
  int *glyph_locations;
  unsigned int font_program_size;
  unsigned __int8 *font_program;
  unsigned int cvt_program_size;
  unsigned __int8 *cvt_program;
  unsigned int cvt_size;
  __int16 *cvt;
  int num_kern_pairs;
  int kern_table_index;
  TT_Kern_0_Pair_ *kern_pairs;
  int (__fastcall *interpreter)(void *);
  FT_Generic_ extra;
};

/* 4563 */
struct TT_GlyphZone_
{
  FT_MemoryRec_ *memory;
  unsigned __int16 max_points;
  unsigned __int16 max_contours;
  unsigned __int16 n_points;
  __int16 n_contours;
  FT_Vector_ *org;
  FT_Vector_ *cur;
  unsigned __int8 *tags;
  unsigned __int16 *contours;
};

/* 4564 */
struct TT_Loader_
{
  FT_FaceRec_ *face;
  FT_SizeRec_ *size;
  FT_GlyphSlotRec_ *glyph;
  FT_GlyphLoader_ *gloader;
  unsigned int load_flags;
  unsigned int glyph_index;
  FT_StreamRec_ *stream;
  int byte_len;
  __int16 n_contours;
  FT_BBox_ bbox;
  int left_bearing;
  int advance;
  unsigned __int8 preserve_pps;
  FT_Vector_ pp1;
  FT_Vector_ pp2;
  unsigned int glyf_offset;
  TT_GlyphZone_ base;
  TT_GlyphZone_ zone;
  struct TT_ExecContextRec_ *exec;
  unsigned __int8 *instructions;
  unsigned int ins_pos;
  void *other;
};

/* 4565 */
struct TT_HdmxRec_
{
  unsigned __int8 ppem;
  unsigned __int8 max_width;
  unsigned __int8 *widths;
};

/* 4567 */
struct TT_GaspRange_
{
  unsigned __int16 maxPPEM;
  unsigned __int16 gaspFlag;
};

/* 4572 */
struct TT_SBit_Line_Metrics_
{
  char ascender;
  char descender;
  unsigned __int8 max_width;
  char caret_slope_numerator;
  char caret_slope_denominator;
  char caret_offset;
  char min_origin_SB;
  char min_advance_SB;
  char max_before_BL;
  char min_after_BL;
  char pads[2];
};

/* 4573 */
struct TT_SBit_Strike_
{
  int num_ranges;
  TT_SBit_Range *sbit_ranges;
  unsigned int ranges_offset;
  unsigned int color_ref;
  TT_SBit_Line_Metrics_ hori;
  TT_SBit_Line_Metrics_ vert;
  unsigned __int16 start_glyph;
  unsigned __int16 end_glyph;
  unsigned __int8 x_ppem;
  unsigned __int8 y_ppem;
  unsigned __int8 bit_depth;
  char flags;
};

/* 4574 */
struct TT_SBit_Scale_
{
  TT_SBit_Line_Metrics_ hori;
  TT_SBit_Line_Metrics_ vert;
  unsigned __int8 x_ppem;
  unsigned __int8 y_ppem;
  unsigned __int8 x_ppem_substitute;
  unsigned __int8 y_ppem_substitute;
};

/* 4579 */
struct TT_Kern_0_Pair_
{
  unsigned __int16 left;
  unsigned __int16 right;
  __int16 value;
};

/* 4570 */
struct TT_SBit_Metrics_
{
  unsigned __int8 height;
  unsigned __int8 width;
  char horiBearingX;
  char horiBearingY;
  unsigned __int8 horiAdvance;
  char vertBearingX;
  char vertBearingY;
  unsigned __int8 vertAdvance;
};

/* 4571 */
struct TT_SBit_Range
{
  unsigned __int16 first_glyph;
  unsigned __int16 last_glyph;
  unsigned __int16 index_format;
  unsigned __int16 image_format;
  unsigned int image_offset;
  unsigned int image_size;
  TT_SBit_Metrics_ metrics;
  unsigned int num_glyphs;
  unsigned int *glyph_offsets;
  unsigned __int16 *glyph_codes;
  unsigned int table_offset;
};

/* 4580 */
struct T2_GlyphSlotRec_
{
  FT_GlyphSlotRec_ root;
  unsigned __int8 hint;
  unsigned __int8 scaled;
  int x_scale;
  int y_scale;
};

/* 4581 */
struct T2_DriverRec_
{
  FT_DriverRec_ root;
  void *extension_component;
};

/* 4582 */
struct SFNT_Header_
{
  unsigned int format_tag;
  unsigned __int16 num_tables;
  unsigned __int16 search_range;
  unsigned __int16 entry_selector;
  unsigned __int16 range_shift;
};

/* 4583 */
struct SFNT_Interface_
{
  int (__fastcall *goto_table)(TT_FaceRec_ *, unsigned int, FT_StreamRec_ *, unsigned int *);
  int (__fastcall *init_face)(FT_StreamRec_ *, TT_FaceRec_ *, int, int, FT_Parameter_ *);
  int (__fastcall *load_face)(FT_StreamRec_ *, TT_FaceRec_ *, int, int, FT_Parameter_ *);
  void (__fastcall *done_face)(TT_FaceRec_ *);
  void (__fastcall *(__fastcall *get_interface)(FT_ModuleRec_ *, const char *))();
  int (__fastcall *load_any)(TT_FaceRec_ *, unsigned int, int, unsigned __int8 *, unsigned int *);
  int (__fastcall *load_sfnt_header)(TT_FaceRec_ *, FT_StreamRec_ *, int, SFNT_Header_ *);
  int (__fastcall *load_directory)(TT_FaceRec_ *, FT_StreamRec_ *, SFNT_Header_ *);
  int (__fastcall *load_header)(TT_FaceRec_ *, FT_StreamRec_ *);
  int (__fastcall *load_metrics)(TT_FaceRec_ *, FT_StreamRec_ *, unsigned __int8);
  int (__fastcall *load_charmaps)(TT_FaceRec_ *, FT_StreamRec_ *);
  int (__fastcall *load_max_profile)(TT_FaceRec_ *, FT_StreamRec_ *);
  int (__fastcall *load_os2)(TT_FaceRec_ *, FT_StreamRec_ *);
  int (__fastcall *load_psnames)(TT_FaceRec_ *, FT_StreamRec_ *);
  int (__fastcall *load_names)(TT_FaceRec_ *, FT_StreamRec_ *);
  void (__fastcall *free_names)(TT_FaceRec_ *);
  int (__fastcall *load_hdmx)(TT_FaceRec_ *, FT_StreamRec_ *);
  void (__fastcall *free_hdmx)(TT_FaceRec_ *);
  int (__fastcall *load_kerning)(TT_FaceRec_ *, FT_StreamRec_ *);
  int (__fastcall *load_gasp)(TT_FaceRec_ *, FT_StreamRec_ *);
  int (__fastcall *load_pclt)(TT_FaceRec_ *, FT_StreamRec_ *);
  int (__fastcall *load_bitmap_header)(TT_FaceRec_ *, FT_StreamRec_ *);
  int (__fastcall *set_sbit_strike)(TT_FaceRec_ *, int, int, unsigned int *);
  int (__fastcall *load_sbits)(TT_FaceRec_ *, FT_StreamRec_ *);
  int (__fastcall *load_sbit_image)(TT_FaceRec_ *, unsigned int, unsigned int, unsigned int, FT_StreamRec_ *, FT_Bitmap_ *, TT_SBit_Metrics_ *);
  void (__fastcall *free_sbits)(TT_FaceRec_ *);
  int (__fastcall *get_psname)(TT_FaceRec_ *, unsigned int, char **);
  void (__fastcall *free_psnames)(TT_FaceRec_ *);
  int (__fastcall *load_charmap)(TT_FaceRec_ *, TT_CMapTable_ *, FT_StreamRec_ *);
  int (__fastcall *free_charmap)(TT_FaceRec_ *, TT_CMapTable_ *);
};

/* 4584 */
struct PS_UniMap_
{
  unsigned int unicode;
  unsigned int glyph_index;
};

/* 4585 */
struct PS_Unicodes_
{
  unsigned int num_maps;
  PS_UniMap_ *maps;
};

/* 4586 */
struct PSNames_Interface_
{
  unsigned int (__fastcall *unicode_value)(const char *);
  int (__fastcall *build_unicodes)(FT_MemoryRec_ *, unsigned int, const char **, PS_Unicodes_ *);
  unsigned int (__fastcall *lookup_unicode)(PS_Unicodes_ *, unsigned int);
  const char *(__fastcall *macintosh_name)(unsigned int);
  const char *(__fastcall *adobe_std_strings)(unsigned int);
  const unsigned __int16 *adobe_std_encoding;
  const unsigned __int16 *adobe_expert_encoding;
};

/* 4587 */
struct CFF_Index_
{
  FT_StreamRec_ *stream;
  unsigned int count;
  unsigned __int8 off_size;
  unsigned int data_offset;
  unsigned int *offsets;
  unsigned __int8 *bytes;
};

/* 4588 */
struct CFF_Font_Dict_
{
  unsigned int version;
  unsigned int notice;
  unsigned int copyright;
  unsigned int full_name;
  unsigned int family_name;
  unsigned int weight;
  unsigned __int8 is_fixed_pitch;
  int italic_angle;
  int underline_position;
  int underline_thickness;
  int paint_type;
  int charstring_type;
  FT_Matrix_ font_matrix;
  unsigned int unique_id;
  FT_BBox_ font_bbox;
  int stroke_width;
  unsigned int charset_offset;
  unsigned int encoding_offset;
  unsigned int charstrings_offset;
  unsigned int private_offset;
  unsigned int private_size;
  int synthetic_base;
  unsigned int embedded_postscript;
  unsigned int base_font_name;
  unsigned int postscript;
  unsigned int cid_registry;
  unsigned int cid_ordering;
  unsigned int cid_supplement;
  int cid_font_version;
  int cid_font_revision;
  int cid_font_type;
  int cid_count;
  unsigned int cid_uid_base;
  unsigned int cid_fd_array_offset;
  unsigned int cid_fd_select_offset;
  unsigned int cid_font_name;
};

/* 4589 */
struct CFF_Private_
{
  unsigned __int8 num_blue_values;
  unsigned __int8 num_other_blues;
  unsigned __int8 num_family_blues;
  unsigned __int8 num_family_other_blues;
  int blue_values[14];
  int other_blues[10];
  int family_blues[14];
  int family_other_blues[10];
  int blue_scale;
  int blue_shift;
  int blue_fuzz;
  int standard_width;
  int standard_height;
  unsigned __int8 num_snap_widths;
  unsigned __int8 num_snap_heights;
  int snap_widths[13];
  int snap_heights[13];
  unsigned __int8 force_bold;
  int force_bold_threshold;
  int lenIV;
  int language_group;
  int expansion_factor;
  int initial_random_seed;
  unsigned int local_subrs_offset;
  int default_width;
  int nominal_width;
};

/* 4590 */
struct CFF_SubFont_
{
  CFF_Font_Dict_ font_dict;
  CFF_Private_ private_dict;
  CFF_Index_ local_subrs_index;
  unsigned int num_local_subrs;
  unsigned __int8 **local_subrs;
};

/* 4591 */
struct __declspec(align(4)) CFF_FD_Select_
{
  unsigned __int8 format;
  unsigned int range_count;
  unsigned __int8 *data;
  unsigned int data_size;
  unsigned int cache_first;
  unsigned int cache_count;
  unsigned __int8 cache_fd;
};

/* 4592 */
struct CFF_Font_
{
  FT_StreamRec_ *stream;
  FT_MemoryRec_ *memory;
  unsigned int num_faces;
  unsigned int num_glyphs;
  unsigned __int8 version_major;
  unsigned __int8 version_minor;
  unsigned __int8 header_size;
  unsigned __int8 absolute_offsize;
  CFF_Index_ name_index;
  CFF_Index_ top_dict_index;
  CFF_Index_ string_index;
  CFF_Index_ global_subrs_index;
  CFF_Index_ charstrings_index;
  CFF_Index_ font_dict_index;
  CFF_Index_ private_index;
  CFF_Index_ local_subrs_index;
  char *font_name;
  unsigned int num_global_subrs;
  unsigned __int8 **global_subrs;
  CFF_SubFont_ top_font;
  unsigned int num_subfonts;
  CFF_SubFont_ *subfonts[16];
  CFF_FD_Select_ fd_select;
};

/* 4593 */
struct __declspec(align(4)) T2_Builder_
{
  FT_MemoryRec_ *memory;
  TT_FaceRec_ *face;
  T2_GlyphSlotRec_ *glyph;
  FT_GlyphLoader_ *loader;
  FT_Outline_ *base;
  FT_Outline_ *current;
  FT_Vector_ last;
  int scale_x;
  int scale_y;
  int pos_x;
  int pos_y;
  FT_Vector_ left_bearing;
  FT_Vector_ advance;
  FT_BBox_ bbox;
  unsigned __int8 path_begun;
  unsigned __int8 load_points;
  unsigned __int8 no_recurse;
  int error;
  unsigned __int8 metrics_only;
};

/* 4594 */
struct T2_Decoder_Zone_
{
  unsigned __int8 *base;
  unsigned __int8 *limit;
  unsigned __int8 *cursor;
};

/* 4595 */
struct T2_Decoder_
{
  T2_Builder_ builder;
  CFF_Font_ *cff;
  int stack[49];
  int *top;
  T2_Decoder_Zone_ zones[33];
  T2_Decoder_Zone_ *zone;
  int flex_state;
  int num_flex_vectors;
  FT_Vector_ flex_vectors[7];
  int glyph_width;
  int nominal_width;
  unsigned __int8 read_width;
  int num_hints;
  int *buildchar;
  int len_buildchar;
  unsigned int num_locals;
  unsigned int num_globals;
  int locals_bias;
  int globals_bias;
  unsigned __int8 **locals;
  unsigned __int8 **globals;
};

/* 4596 */
struct T1_Field_
{
  const char *ident;
  int location;
  int type;
  void (__fastcall *reader)(FT_FaceRec_ *, void *);
  unsigned int offset;
  unsigned __int8 size;
  unsigned int array_max;
  unsigned int count_offset;
};

/* 4597 */
struct __declspec(align(4)) T1_FontInfo
{
  char *version;
  char *notice;
  char *full_name;
  char *family_name;
  char *weight;
  int italic_angle;
  unsigned __int8 is_fixed_pitch;
  __int16 underline_position;
  unsigned __int16 underline_thickness;
};

/* 4598 */
struct T1_Private
{
  int unique_id;
  int lenIV;
  unsigned __int8 num_blue_values;
  unsigned __int8 num_other_blues;
  unsigned __int8 num_family_blues;
  unsigned __int8 num_family_other_blues;
  __int16 blue_values[14];
  __int16 other_blues[10];
  __int16 family_blues[14];
  __int16 family_other_blues[10];
  int blue_scale;
  int blue_shift;
  int blue_fuzz;
  unsigned __int16 standard_width[1];
  unsigned __int16 standard_height[1];
  unsigned __int8 num_snap_widths;
  unsigned __int8 num_snap_heights;
  unsigned __int8 force_bold;
  unsigned __int8 round_stem_up;
  __int16 snap_widths[13];
  __int16 snap_heights[13];
  int language_group;
  int password;
  __int16 min_feature[2];
};

/* 4599 */
struct CID_FontDict_
{
  T1_Private private_dict;
  unsigned int len_buildchar;
  int forcebold_threshold;
  int stroke_width;
  int expansion_factor;
  unsigned __int8 paint_type;
  unsigned __int8 font_type;
  FT_Matrix_ font_matrix;
  FT_Vector_ font_offset;
  unsigned int num_subrs;
  unsigned int subrmap_offset;
  int sd_bytes;
};

/* 4600 */
struct CID_Info_
{
  char *cid_font_name;
  int cid_version;
  int cid_font_type;
  char *registry;
  char *ordering;
  int supplement;
  T1_FontInfo font_info;
  FT_BBox_ font_bbox;
  unsigned int uid_base;
  int num_xuid;
  unsigned int xuid[16];
  unsigned int cidmap_offset;
  int fd_bytes;
  int gd_bytes;
  unsigned int cid_count;
  int num_dicts;
  CID_FontDict_ *font_dicts;
  unsigned int data_offset;
};

/* 4601 */
struct CID_Subrs_
{
  unsigned int num_subrs;
  unsigned __int8 **code;
};

/* 4602 */
struct CID_FaceRec_
{
  FT_FaceRec_ root;
  void *psnames;
  void *psaux;
  CID_Info_ cid;
  void *afm_data;
  CID_Subrs_ *subrs;
};

/* 4605 */
struct T1_Parser_Funcs_
{
  void (__fastcall *init)(T1_Parser_ *, unsigned __int8 *, unsigned __int8 *, FT_MemoryRec_ *);
  void (__fastcall *done)(T1_Parser_ *);
  void (__fastcall *skip_spaces)(T1_Parser_ *);
  void (__fastcall *skip_alpha)(T1_Parser_ *);
  int (__fastcall *to_int)(T1_Parser_ *);
  int (__fastcall *to_fixed)(T1_Parser_ *, int);
  int (__fastcall *to_coord_array)(T1_Parser_ *, int, __int16 *);
  int (__fastcall *to_fixed_array)(T1_Parser_ *, int, int *, int);
  void (__fastcall *to_token)(T1_Parser_ *, T1_Token_ *);
  void (__fastcall *to_token_array)(T1_Parser_ *, T1_Token_ *, unsigned int, int *);
  int (__fastcall *load_field)(T1_Parser_ *, const T1_Field_ *, void **, unsigned int, unsigned int *);
  int (__fastcall *load_field_table)(T1_Parser_ *, const T1_Field_ *, void **, unsigned int, unsigned int *);
};

/* 4603 */
struct T1_Parser_
{
  unsigned __int8 *cursor;
  unsigned __int8 *base;
  unsigned __int8 *limit;
  int error;
  FT_MemoryRec_ *memory;
  T1_Parser_Funcs_ funcs;
};

/* 4604 */
struct T1_Token_
{
  unsigned __int8 *start;
  unsigned __int8 *limit;
  int type;
};

/* 4606 */
struct CID_Parser_
{
  T1_Parser_ root;
  FT_StreamRec_ *stream;
  unsigned __int8 *postscript;
  int postscript_len;
  unsigned int data_offset;
  CID_Info_ *cid;
  int num_dict;
};

/* 4607 */
struct CID_Loader_
{
  CID_Parser_ parser;
  int num_chars;
};

/* 4608 */
const struct PS_Table_Funcs_
{
  int (__fastcall *init)(PS_Table_ *, int, FT_MemoryRec_ *);
  void (__fastcall *done)(PS_Table_ *);
  int (__fastcall *add)(PS_Table_ *, int, void *, int);
  void (__fastcall *release)(PS_Table_ *);
};

/* 4609 */
struct __unaligned __declspec(align(4)) PS_Table_
{
  unsigned __int8 *block;
  int cursor;
  int capacity;
  int init;
  int max_elems;
  int num_elems;
  unsigned __int8 **elements;
  int *lengths;
  FT_MemoryRec_ *memory;
  PS_Table_Funcs_ funcs;
};

/* 4610 */
const struct T1_Builder_Funcs_
{
  void (__fastcall *init)(T1_Builder_ *, FT_FaceRec_ *, FT_SizeRec_ *, FT_GlyphSlotRec_ *);
  void (__fastcall *done)(T1_Builder_ *);
  int (__fastcall *check_points)(T1_Builder_ *, int);
  void (__fastcall *add_point)(T1_Builder_ *, int, int, unsigned __int8);
  int (__fastcall *add_point1)(T1_Builder_ *, int, int);
  int (__fastcall *add_contour)(T1_Builder_ *);
  int (__fastcall *start_point)(T1_Builder_ *, int, int);
  void (__fastcall *close_contour)(T1_Builder_ *);
};

/* 4611 */
struct __unaligned __declspec(align(4)) T1_Builder_
{
  FT_MemoryRec_ *memory;
  FT_FaceRec_ *face;
  FT_GlyphSlotRec_ *glyph;
  FT_GlyphLoader_ *loader;
  FT_Outline_ *base;
  FT_Outline_ *current;
  FT_Vector_ last;
  int scale_x;
  int scale_y;
  int pos_x;
  int pos_y;
  FT_Vector_ left_bearing;
  FT_Vector_ advance;
  FT_BBox_ bbox;
  unsigned __int8 path_begun;
  unsigned __int8 load_points;
  unsigned __int8 no_recurse;
  unsigned __int8 shift;
  int error;
  unsigned __int8 metrics_only;
  __declspec(align(4)) T1_Builder_Funcs_ funcs;
};

/* 4612 */
struct T1_Decoder_Zone_
{
  unsigned __int8 *cursor;
  unsigned __int8 *base;
  unsigned __int8 *limit;
};

/* 4613 */
struct T1_DesignMap_
{
  unsigned __int8 num_points;
  int *design_points;
  int *blend_points;
};

/* 4614 */
struct T1_Blend_
{
  unsigned int num_designs;
  unsigned int num_axis;
  char *axis_names[4];
  int *design_pos[16];
  T1_DesignMap_ design_map[4];
  int *weight_vector;
  int *default_weight_vector;
  T1_FontInfo *font_infos[17];
  T1_Private *privates[17];
  unsigned int blend_bitflags;
};

/* 4616 */
const struct T1_Decoder_Funcs_
{
  int (__fastcall *init)(T1_Decoder_ *, FT_FaceRec_ *, FT_SizeRec_ *, FT_GlyphSlotRec_ *, unsigned __int8 **, T1_Blend_ *, int (__fastcall *)(T1_Decoder_ *, unsigned int));
  void (__fastcall *done)(T1_Decoder_ *);
  int (__fastcall *parse_charstrings)(T1_Decoder_ *, unsigned __int8 *, unsigned int);
};

/* 4615 */
struct T1_Decoder_
{
  T1_Builder_ builder;
  int stack[256];
  int *top;
  T1_Decoder_Zone_ zones[17];
  T1_Decoder_Zone_ *zone;
  PSNames_Interface_ *psnames;
  unsigned int num_glyphs;
  unsigned __int8 **glyph_names;
  unsigned int lenIV;
  unsigned int num_subrs;
  unsigned __int8 **subrs;
  int *subrs_len;
  FT_Matrix_ font_matrix;
  FT_Vector_ font_offset;
  int flex_state;
  int num_flex_vectors;
  FT_Vector_ flex_vectors[7];
  T1_Blend_ *blend;
  int (__fastcall *parse_callback)(T1_Decoder_ *, unsigned int);
  __unaligned __declspec(align(1)) T1_Decoder_Funcs_ funcs;
};

/* 4617 */
struct PSAux_Interface_
{
  const PS_Table_Funcs_ *ps_table_funcs;
  const T1_Parser_Funcs_ *t1_parser_funcs;
  const T1_Builder_Funcs_ *t1_builder_funcs;
  const T1_Decoder_Funcs_ *t1_decoder_funcs;
  void (__fastcall *t1_decrypt)(unsigned __int8 *, int, unsigned __int16);
};

/* 4618 */
struct CID_GlyphSlotRec_
{
  FT_GlyphSlotRec_ root;
  unsigned __int8 hint;
  unsigned __int8 scaled;
  int x_scale;
  int y_scale;
};

/* 4619 */
struct __declspec(align(4)) CID_SizeRec_
{
  FT_SizeRec_ root;
  unsigned __int8 valid;
};

/* 4620 */
struct TPoint_
{
  int x;
  int y;
};

/* 4621 */
struct TProfile_
{
  int X;
  TProfile_ *link;
  int *offset;
  int flow;
  int height;
  int start;
  unsigned __int16 countL;
  TProfile_ *next;
};

/* 4623 */
struct TBand_
{
  __int16 y_min;
  __int16 y_max;
};

/* 4622 */
struct TRaster_Instance_
{
  int precision_bits;
  int precision;
  int precision_half;
  int precision_mask;
  int precision_shift;
  int precision_step;
  int precision_jitter;
  int scale_shift;
  int *buff;
  int *sizeBuff;
  int *maxBuff;
  int *top;
  int error;
  int numTurns;
  TPoint_ *arc;
  unsigned __int16 bWidth;
  unsigned __int8 *bTarget;
  unsigned __int8 *gTarget;
  int lastX;
  int lastY;
  int minY;
  int maxY;
  unsigned __int16 num_Profs;
  char fresh;
  char joint;
  TProfile_ *cProfile;
  TProfile_ *fProfile;
  TProfile_ *gProfile;
  int state;
  FT_Bitmap_ target;
  FT_Outline_ outline;
  int traceOfs;
  int traceG;
  __int16 traceIncr;
  __int16 gray_min_x;
  __int16 gray_max_x;
  void (__fastcall *Proc_Sweep_Init)(TRaster_Instance_ *, __int16 *, __int16 *);
  void (__fastcall *Proc_Sweep_Span)(TRaster_Instance_ *, __int16, int, int, TProfile_ *, TProfile_ *);
  void (__fastcall *Proc_Sweep_Drop)(TRaster_Instance_ *, __int16, int, int, TProfile_ *, TProfile_ *);
  void (__fastcall *Proc_Sweep_Step)(TRaster_Instance_ *);
  unsigned __int8 dropOutControl;
  char second_pass;
  TPoint_ arcs[65];
  TBand_ band_stack[16];
  int band_top;
  int count_table[256];
  void *memory;
};

/* 4624 */
struct TT_LongMetrics_
{
  unsigned __int16 advance;
  __int16 bearing;
};

/* 4625 */
struct TT_CMapDir_
{
  unsigned __int16 tableVersionNumber;
  unsigned __int16 numCMaps;
};

/* 4626 */
struct TT_SBit_Component_
{
  unsigned __int16 glyph_code;
  char x_offset;
  char y_offset;
};

/* 4627 */
struct TT_SBit_Small_Metrics_
{
  unsigned __int8 height;
  unsigned __int8 width;
  char bearingX;
  char bearingY;
  unsigned __int8 advance;
};

/* 4628 */
struct FT_Outline_Funcs_
{
  int (__fastcall *move_to)(FT_Vector_ *, void *);
  int (__fastcall *line_to)(FT_Vector_ *, void *);
  int (__fastcall *conic_to)(FT_Vector_ *, FT_Vector_ *, void *);
  int (__fastcall *cubic_to)(FT_Vector_ *, FT_Vector_ *, FT_Vector_ *, void *);
  int shift;
  int delta;
};

/* 4629 */
struct TCell_
{
  int x;
  int y;
  int cover;
  int area;
};

/* 4630 */
struct TRaster_
{
  TCell_ *cells;
  int max_cells;
  int num_cells;
  int min_ex;
  int max_ex;
  int min_ey;
  int max_ey;
  int area;
  int cover;
  int invalid;
  int ex;
  int ey;
  int cx;
  int cy;
  int x;
  int y;
  int last_ey;
  FT_Vector_ bez_stack[96];
  int lev_stack[32];
  FT_Outline_ outline;
  FT_Bitmap_ target;
  FT_Span_ gray_spans[32];
  int num_gray_spans;
  void (__fastcall *render_span)(int, int, FT_Span_ *, void *);
  void *render_span_data;
  int span_y;
  int band_size;
  int band_shoot;
  int conic_level;
  int cubic_level;
  void *memory;
};

/* 4631 */
struct __declspec(align(2)) TT_Size_Metrics_
{
  int x_ratio;
  int y_ratio;
  unsigned __int16 ppem;
  int ratio;
  int scale;
  int compensations[4];
  unsigned __int8 valid;
  unsigned __int8 rotated;
  unsigned __int8 stretched;
};

/* 4632 */
struct __declspec(align(4)) TT_SizeRec_
{
  FT_SizeRec_ root;
  TT_Size_Metrics_ ttmetrics;
  unsigned int strike_index;
  FT_Size_Metrics_ strike_metrics;
  unsigned __int8 debug;
};

/* 4633 */
struct TT_DriverRec_
{
  FT_DriverRec_ root;
  struct TT_ExecContextRec_ *context;
  TT_GlyphZone_ zone;
  void *extension_component;
};

/* 4634 */
struct T1_Encoding_
{
  int num_chars;
  int code_first;
  int code_last;
  unsigned __int16 *char_index;
  char **char_name;
};

/* 4635 */
struct T1_Font_
{
  T1_FontInfo font_info;
  T1_Private private_dict;
  char *font_name;
  int encoding_type;
  T1_Encoding_ encoding;
  unsigned __int8 *subrs_block;
  unsigned __int8 *charstrings_block;
  unsigned __int8 *glyph_names_block;
  int num_subrs;
  unsigned __int8 **subrs;
  int *subrs_len;
  int num_glyphs;
  char **glyph_names;
  unsigned __int8 **charstrings;
  int *charstrings_len;
  unsigned __int8 paint_type;
  unsigned __int8 font_type;
  FT_Matrix_ font_matrix;
  FT_Vector_ font_offset;
  FT_BBox_ font_bbox;
  int font_id;
  int stroke_width;
};

/* 4636 */
struct T1_FaceRec_
{
  FT_FaceRec_ root;
  T1_Font_ type1;
  void *psnames;
  void *psaux;
  void *afm_data;
  FT_CharMapRec_ charmaprecs[2];
  FT_CharMapRec_ *charmaps[2];
  PS_Unicodes_ unicode_map;
  T1_Blend_ *blend;
};

/* 4637 */
struct __declspec(align(2)) T1_ParserRec_
{
  T1_Parser_ root;
  FT_StreamRec_ *stream;
  unsigned __int8 *base_dict;
  int base_len;
  unsigned __int8 *private_dict;
  int private_len;
  unsigned __int8 in_pfb;
  unsigned __int8 in_memory;
  unsigned __int8 single_block;
};

/* 4638 */
struct __declspec(align(4)) T1_Loader_
{
  T1_ParserRec_ parser;
  int num_chars;
  PS_Table_ encoding_table;
  int num_glyphs;
  PS_Table_ glyph_names;
  PS_Table_ charstrings;
  int num_subrs;
  PS_Table_ subrs;
  unsigned __int8 fontdata;
};

/* 4639 */
struct PFB_Tag_
{
  unsigned __int16 tag;
  int size;
};

/* 4640 */
struct FT_MM_Axis_
{
  char *name;
  int minimum;
  int maximum;
};

/* 4641 */
struct FT_Multi_Master_
{
  unsigned int num_axis;
  unsigned int num_designs;
  FT_MM_Axis_ axis[4];
};

/* 4642 */
struct T1_GlyphSlotRec_
{
  FT_GlyphSlotRec_ root;
  unsigned __int8 hint;
  unsigned __int8 scaled;
  int max_points;
  int max_contours;
  int x_scale;
  int y_scale;
  struct T1_Glyph_Hints_ *hints;
};

/* 4643 */
struct T1_SizeRec_
{
  FT_SizeRec_ root;
  unsigned __int8 valid;
  struct T1_Size_Hints_ *hints;
};

/* 4644 */
struct T1_Kern_Pair_
{
  unsigned int glyph1;
  unsigned int glyph2;
  FT_Vector_ kerning;
};

/* 4645 */
struct T1_AFM_
{
  int num_pairs;
  T1_Kern_Pair_ *kern_pairs;
};

/* 4646 */
struct WinFNT_Header_
{
  unsigned __int16 version;
  unsigned int file_size;
  unsigned __int8 copyright[60];
  unsigned __int16 file_type;
  unsigned __int16 nominal_point_size;
  unsigned __int16 vertical_resolution;
  unsigned __int16 horizontal_resolution;
  unsigned __int16 ascent;
  unsigned __int16 internal_leading;
  unsigned __int16 external_leading;
  unsigned __int8 italic;
  unsigned __int8 underline;
  unsigned __int8 strike_out;
  unsigned __int16 weight;
  unsigned __int8 charset;
  unsigned __int16 pixel_width;
  unsigned __int16 pixel_height;
  unsigned __int8 pitch_and_family;
  unsigned __int16 avg_width;
  unsigned __int16 max_width;
  unsigned __int8 first_char;
  unsigned __int8 last_char;
  unsigned __int8 default_char;
  unsigned __int8 break_char;
  unsigned __int16 bytes_per_row;
  unsigned int device_offset;
  unsigned int face_name_offset;
  unsigned int bits_pointer;
  unsigned int bits_offset;
  unsigned __int8 reserved;
  unsigned int flags;
  unsigned __int16 A_space;
  unsigned __int16 B_space;
  unsigned __int16 C_space;
  unsigned __int16 color_table_offset;
  unsigned __int8 reserved2[4];
};

/* 4647 */
struct FNT_Font_
{
  unsigned int offset;
  int size_shift;
  WinFNT_Header_ header;
  unsigned __int8 *fnt_frame;
  unsigned int fnt_size;
};

/* 4648 */
struct FNT_FaceRec_
{
  FT_FaceRec_ root;
  unsigned int num_fonts;
  FNT_Font_ *fonts;
  FT_CharMapRec_ *charmap_handle;
  FT_CharMapRec_ charmap;
};

/* 4649 */
struct WinMZ_Header_
{
  unsigned __int16 magic;
  unsigned __int16 lfanew;
};

/* 4650 */
struct WinNE_Header_
{
  unsigned __int16 magic;
  unsigned __int16 resource_tab_offset;
  unsigned __int16 rname_tab_offset;
};

/* 4651 */
struct FNT_SizeRec_
{
  FT_SizeRec_ root;
  FNT_Font_ *font;
};

/* 4652 */
struct FT_Int64_
{
  unsigned int lo;
  unsigned int hi;
};

/* 4653 */
struct FT_Open_Args_
{
  int flags;
  unsigned __int8 *memory_base;
  int memory_size;
  char *pathname;
  FT_StreamRec_ *stream;
  FT_ModuleRec_ *driver;
  int num_params;
  FT_Parameter_ *params;
};

/* 4654 */
struct FT_Extension_Class_
{
  const char *id;
  unsigned int size;
  int (__fastcall *init)(void *, FT_FaceRec_ *);
  void (__fastcall *finalize)(void *, FT_FaceRec_ *);
  void *interface;
  unsigned int offset;
};

/* 4655 */
struct FT_Extension_Registry_
{
  int num_extensions;
  int cur_offset;
  FT_Extension_Class_ classes[8];
};

/* 4656 */
struct FT_SfntName_
{
  unsigned __int16 platform_id;
  unsigned __int16 encoding_id;
  unsigned __int16 language_id;
  unsigned __int16 name_id;
  unsigned __int8 *string;
  unsigned int string_len;
};

/* 4657 */
struct __cppobj TSGrowableArray_<unsigned char,1112297538,85> : TSGrowableArray<unsigned char>
{
};

/* 4658 */
struct /*VFT*/ TSGrowableArray_<unsigned char,1112297538,85>_vtbl
{
  int (__thiscall *TSGrowableArray_<unsigned char,1112297538,85>::MemLineNo)(TSGrowableArray_<unsigned char,1112297538,85> *this);
  int (__thiscall *TSBaseArray<unsigned char>::MemLineNo)(struct TSGrowableArray_<unsigned char,1112297538,85> *this);
};

/* 4659 */
struct WhoListEntry
{
  char name[48];
  char guild[96];
  int level;
  int raceID;
  int classID;
  int areaID;
  PARTY_STATUS partyStatus;
};

/* 4660 */
struct WhoSortType
{
  WHO_SORT_TYPE type;
  int reverse;
};

/* 4661 */
struct __cppobj SRP6_Random
{
  unsigned __int8 m_randkey1[20];
  unsigned __int8 m_randkey2[20];
  unsigned __int8 m_randpool[20];
  unsigned int m_inpool;
};

/* 4662 */
struct SHA1_CONTEXT
{
  unsigned int state[5];
  unsigned int count[2];
  unsigned __int8 buffer[64];
};

/* 4664 */
struct __cppobj __declspec(align(4)) WowConnectionNet::Worker
{
  WowConnectionNet *owner;
  SThread thread;
  int id;
  WowConnection *serviceConn;
  SEvent event;
  unsigned __int8 quit;
  SCritSect lock;
};

/* 4665 */
struct __cppobj TSList<WowConnection,TSGetExplicitLink<WowConnection> >
{
  int m_linkoffset;
  TSLink<WowConnection> m_terminator;
};

/* 4666 */
struct __cppobj TSExplicitList<WowConnection,188> : TSList<WowConnection,TSGetExplicitLink<WowConnection> >
{
};

/* 4667 */
struct __cppobj SSemaphore : SSyncObject
{
};

/* 4663 */
struct __cppobj WowConnectionNet
{
  SThread m_thread;
  SEvent m_stopEvent;
  unsigned __int8 m_stop;
  int m_numWorkers;
  WowConnectionNet::Worker m_workers[8];
  TSExplicitList<WowConnection,188> m_connections;
  SCritSect m_connectionsLock;
  SSemaphore m_workerSem;
  void (__fastcall *m_threadinit)();
  void *m_connectionsChangedEvent;
};

/* 4668 */
struct __cppobj TSBaseArray<WowConnection *>
{
  TSBaseArray<WowConnection *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  WowConnection **m_data;
};

/* 4669 */
struct /*VFT*/ TSBaseArray<WowConnection *>_vtbl
{
  const char *(__thiscall *TSBaseArray<WowConnection *>::MemFileName)(TSBaseArray<WowConnection *> *this);
  int (__thiscall *TSBaseArray<WowConnection *>::MemLineNo)(TSBaseArray<WowConnection *> *this);
};

/* 4670 */
struct /*VFT*/ TSFixedArray<WowConnection *>_vtbl
{
  const char *(__thiscall *TSBaseArray<WowConnection *>::MemFileName)(struct TSFixedArray<WowConnection *> *this);
  int (__thiscall *TSBaseArray<WowConnection *>::MemLineNo)(struct TSFixedArray<WowConnection *> *this);
};

/* 4671 */
struct __cppobj TSFixedArray<WowConnection *> : TSBaseArray<WowConnection *>
{
};

/* 4672 */
struct /*VFT*/ TSGrowableArray<WowConnection *>_vtbl
{
  const char *(__thiscall *TSBaseArray<WowConnection *>::MemFileName)(struct TSGrowableArray<WowConnection *> *this);
  int (__thiscall *TSBaseArray<WowConnection *>::MemLineNo)(struct TSGrowableArray<WowConnection *> *this);
};

/* 4673 */
struct __cppobj TSGrowableArray<WowConnection *> : TSFixedArray<WowConnection *>
{
  unsigned int m_chunk;
};

/* 4674 */
struct __cppobj TObjectAlloc<WDataStoreBuffer<768> >
{
  unsigned int m_ID;
};

/* 4675 */
struct __cppobj TObjectAlloc<WDataStoreBuffer<16384> >
{
  unsigned int m_ID;
};

/* 4676 */
struct __cppobj WowConnectionInitializer
{
};

/* 4677 */
struct __cppobj GLYPHDATA
{
  void *data;
  unsigned int dataSize;
  unsigned int freeTypeGlyphWidth;
  unsigned int freeTypeGlyphHeight;
  unsigned int freeTypeGlyphPitch;
  int freeTypeGlyphAdvance;
  float freeTypeGlyphBearing;
  unsigned int yOffset;
  unsigned int yStart;
};

/* 4678 */
struct __cppobj TSLink<FACEDATA>
{
  TSLink<FACEDATA> *m_prevlink;
  FACEDATA *m_next;
};

/* 4679 */
struct __cppobj TSHashObject<FACEDATA,HASHKEY_STRI>
{
  unsigned int m_hashval;
  __unaligned __declspec(align(1)) TSLink<FACEDATA> m_linktoslot;
  __unaligned __declspec(align(1)) TSLink<FACEDATA> m_linktofull;
  HASHKEY_STRI m_key;
};

/* 4680 */
struct __cppobj __unaligned __declspec(align(4)) FACEDATA : CHandleObject, TSHashObject<FACEDATA,HASHKEY_STRI>
{
  void *data;
  FT_FaceRec_ *face;
  HFACE__ *selfReference;
};

/* 4681 */
struct /*VFT*/ FACEDATA_vtbl
{
  void (__thiscall *~FACEDATA)(FACEDATA *this);
  const char *(__thiscall *CHandleObject::GetObjectName)(struct FACEDATA *this);
};

/* 4682 */
struct __cppobj TSList<FACEDATA,TSGetExplicitLink<FACEDATA> >
{
  int m_linkoffset;
  TSLink<FACEDATA> m_terminator;
};

/* 4683 */
struct __cppobj TSExplicitList<FACEDATA,-572662307> : TSList<FACEDATA,TSGetExplicitLink<FACEDATA> >
{
};

/* 4684 */
struct __cppobj TSBaseArray<TSExplicitList<FACEDATA,-572662307> >
{
  TSBaseArray<TSExplicitList<FACEDATA,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<FACEDATA,-572662307> *m_data;
};

/* 4685 */
struct /*VFT*/ TSBaseArray<TSExplicitList<FACEDATA,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<FACEDATA,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<FACEDATA,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<FACEDATA,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<FACEDATA,-572662307> > *this);
};

/* 4686 */
struct /*VFT*/ TSFixedArray<TSExplicitList<FACEDATA,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<FACEDATA,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<FACEDATA,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<FACEDATA,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<FACEDATA,-572662307> > *this);
};

/* 4687 */
struct __cppobj TSFixedArray<TSExplicitList<FACEDATA,-572662307> > : TSBaseArray<TSExplicitList<FACEDATA,-572662307> >
{
};

/* 4688 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<FACEDATA,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<FACEDATA,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<FACEDATA,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<FACEDATA,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<FACEDATA,-572662307> > *this);
};

/* 4689 */
struct __cppobj TSGrowableArray<TSExplicitList<FACEDATA,-572662307> > : TSFixedArray<TSExplicitList<FACEDATA,-572662307> >
{
  unsigned int m_chunk;
};

/* 4690 */
struct __cppobj TSHashTable<FACEDATA,HASHKEY_STRI>
{
  TSHashTable<FACEDATA,HASHKEY_STRI>_vtbl *__vftable /*VFT*/;
  TSExplicitList<FACEDATA,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<FACEDATA,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 4691 */
struct /*VFT*/ TSHashTable<FACEDATA,HASHKEY_STRI>_vtbl
{
  void (__thiscall *TSHashTable<FACEDATA,HASHKEY_STRI>::InternalDelete)(TSHashTable<FACEDATA,HASHKEY_STRI> *this, FACEDATA *);
  FACEDATA *(__thiscall *TSHashTable<FACEDATA,HASHKEY_STRI>::InternalNew)(TSHashTable<FACEDATA,HASHKEY_STRI> *this, TSExplicitList<FACEDATA,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<FACEDATA,HASHKEY_STRI>)(TSHashTable<FACEDATA,HASHKEY_STRI> *this);
  void (__thiscall *TSHashTable<FACEDATA,HASHKEY_STRI>::Destroy)(TSHashTable<FACEDATA,HASHKEY_STRI> *this);
};

/* 4692 */
struct __cppobj TSList<TEXTLINETEXTURE,TSGetLink<TEXTLINETEXTURE> >
{
  int m_linkoffset;
  TSLink<TEXTLINETEXTURE> m_terminator;
};

/* 4693 */
struct __cppobj TSList<IGXUTEXTLINE,TSGetLink<IGXUTEXTLINE> >
{
  int m_linkoffset;
  TSLink<IGXUTEXTLINE> m_terminator;
};

/* 4694 */
struct __cppobj TSLink<STRINGVIEWMATRICES>
{
  TSLink<STRINGVIEWMATRICES> *m_prevlink;
  STRINGVIEWMATRICES *m_next;
};

/* 4695 */
struct __cppobj TSHashObject<STRINGVIEWMATRICES,HASHKEY_PTR>
{
  unsigned int m_hashval;
  __unaligned __declspec(align(1)) TSLink<STRINGVIEWMATRICES> m_linktoslot;
  __unaligned __declspec(align(1)) TSLink<STRINGVIEWMATRICES> m_linktofull;
  HASHKEY_PTR m_key;
};

/* 4696 */
struct __cppobj STRINGVIEWMATRICES : TSHashObject<STRINGVIEWMATRICES,HASHKEY_PTR>
{
  TSLink<STRINGVIEWMATRICES> m_freeLink;
  NTempest::C44Matrix projection;
  NTempest::C44Matrix view;
};

/* 4697 */
struct __cppobj TSList<STRINGVIEWMATRICES,TSGetExplicitLink<STRINGVIEWMATRICES> >
{
  int m_linkoffset;
  TSLink<STRINGVIEWMATRICES> m_terminator;
};

/* 4698 */
struct __cppobj TSExplicitList<STRINGVIEWMATRICES,-572662307> : TSList<STRINGVIEWMATRICES,TSGetExplicitLink<STRINGVIEWMATRICES> >
{
};

/* 4699 */
struct __cppobj TSBaseArray<TSExplicitList<STRINGVIEWMATRICES,-572662307> >
{
  TSBaseArray<TSExplicitList<STRINGVIEWMATRICES,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<STRINGVIEWMATRICES,-572662307> *m_data;
};

/* 4700 */
struct /*VFT*/ TSBaseArray<TSExplicitList<STRINGVIEWMATRICES,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<STRINGVIEWMATRICES,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<STRINGVIEWMATRICES,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<STRINGVIEWMATRICES,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<STRINGVIEWMATRICES,-572662307> > *this);
};

/* 4701 */
struct /*VFT*/ TSFixedArray<TSExplicitList<STRINGVIEWMATRICES,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<STRINGVIEWMATRICES,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<STRINGVIEWMATRICES,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<STRINGVIEWMATRICES,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<STRINGVIEWMATRICES,-572662307> > *this);
};

/* 4702 */
struct __cppobj TSFixedArray<TSExplicitList<STRINGVIEWMATRICES,-572662307> > : TSBaseArray<TSExplicitList<STRINGVIEWMATRICES,-572662307> >
{
};

/* 4703 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<STRINGVIEWMATRICES,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<STRINGVIEWMATRICES,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<STRINGVIEWMATRICES,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<STRINGVIEWMATRICES,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<STRINGVIEWMATRICES,-572662307> > *this);
};

/* 4704 */
struct __cppobj TSGrowableArray<TSExplicitList<STRINGVIEWMATRICES,-572662307> > : TSFixedArray<TSExplicitList<STRINGVIEWMATRICES,-572662307> >
{
  unsigned int m_chunk;
};

/* 4705 */
struct __cppobj TSHashTable<STRINGVIEWMATRICES,HASHKEY_PTR>
{
  TSHashTable<STRINGVIEWMATRICES,HASHKEY_PTR>_vtbl *__vftable /*VFT*/;
  TSExplicitList<STRINGVIEWMATRICES,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<STRINGVIEWMATRICES,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 4706 */
struct /*VFT*/ TSHashTable<STRINGVIEWMATRICES,HASHKEY_PTR>_vtbl
{
  void (__thiscall *TSHashTable<STRINGVIEWMATRICES,HASHKEY_PTR>::InternalDelete)(TSHashTable<STRINGVIEWMATRICES,HASHKEY_PTR> *this, STRINGVIEWMATRICES *);
  STRINGVIEWMATRICES *(__thiscall *TSHashTable<STRINGVIEWMATRICES,HASHKEY_PTR>::InternalNew)(TSHashTable<STRINGVIEWMATRICES,HASHKEY_PTR> *this, TSExplicitList<STRINGVIEWMATRICES,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<STRINGVIEWMATRICES,HASHKEY_PTR>)(TSHashTable<STRINGVIEWMATRICES,HASHKEY_PTR> *this);
  void (__thiscall *TSHashTable<STRINGVIEWMATRICES,HASHKEY_PTR>::Destroy)(TSHashTable<STRINGVIEWMATRICES,HASHKEY_PTR> *this);
};

/* 4707 */
struct __cppobj TSList<CGxString,TSGetLink<CGxString> >
{
  int m_linkoffset;
  TSLink<CGxString> m_terminator;
};

/* 4708 */
struct __cppobj TSExplicitList<STRINGVIEWMATRICES,24> : TSList<STRINGVIEWMATRICES,TSGetExplicitLink<STRINGVIEWMATRICES> >
{
};

/* 4709 */
struct __cppobj HYPERLINKPARSEINFO
{
  HYPERLINKPARSEMODE hyperlinkParseMode;
  GXUFONTHYPERLINKINFO currentParseInfo;
  const char *lastLinkStartPtr;
  unsigned int lastLinkLength;
};

/* 4710 */
struct $A6679E610291522F088B237E78375D2B
{
  unsigned int stripFlags;
  char charCode;
  int addEscapeChar;
};

/* 4711 */
struct __cppobj TSList<CGxFont,TSGetLink<CGxFont> >
{
  int m_linkoffset;
  TSLink<CGxFont> m_terminator;
};

/* 4712 */
struct __cppobj TSList<CGxStringBatch,TSGetLink<CGxStringBatch> >
{
  int m_linkoffset;
  TSLink<CGxStringBatch> m_terminator;
};

/* 4713 */
struct __cppobj TSFixedArray_<NTempest::C3Vector,1199076692,759> : TSFixedArray<NTempest::C3Vector>
{
};

/* 4714 */
struct /*VFT*/ TSFixedArray_<NTempest::C3Vector,1199076692,759>_vtbl
{
  int (__thiscall *TSFixedArray_<NTempest::C3Vector,1199076692,759>::MemLineNo)(TSFixedArray_<NTempest::C3Vector,1199076692,759> *this);
  int (__thiscall *TSBaseArray<NTempest::C3Vector>::MemLineNo)(struct TSFixedArray_<NTempest::C3Vector,1199076692,759> *this);
};

/* 4715 */
struct __cppobj TSBaseArray<CGxuLight *>
{
  TSBaseArray<CGxuLight *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CGxuLight **m_data;
};

/* 4716 */
struct /*VFT*/ TSBaseArray<CGxuLight *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxuLight *>::MemFileName)(TSBaseArray<CGxuLight *> *this);
  int (__thiscall *TSBaseArray<CGxuLight *>::MemLineNo)(TSBaseArray<CGxuLight *> *this);
};

/* 4717 */
struct __cppobj TSLink<CGxuLight>
{
  TSLink<CGxuLight> *m_prevlink;
  CGxuLight *m_next;
};

/* 4719 */
struct __cppobj TSLinkedNode<CGxuLight>
{
  TSLink<CGxuLight> m_link;
};

/* 4720 */
struct __cppobj TSLink<CGxuLightLink>
{
  TSLink<CGxuLightLink> *m_prevlink;
  CGxuLightLink *m_next;
};

/* 4725 */
struct __cppobj TSList<CGxuLightLink,TSGetExplicitLink<CGxuLightLink> >
{
  int m_linkoffset;
  TSLink<CGxuLightLink> m_terminator;
};

/* 4728 */
struct __cppobj TSExplicitList<CGxuLightLink,12> : TSList<CGxuLightLink,TSGetExplicitLink<CGxuLightLink> >
{
};

/* 4718 */
struct __cppobj CGxuLight : TSLinkedNode<CGxuLight>
{
  CGxLight m_light;
  unsigned int m_hwLight;
  unsigned int m_selectionCount;
  int m_lockCount;
  TSExplicitList<CGxuLightLink,12> m_links;
};

/* 4727 */
struct __cppobj __unaligned __declspec(align(4)) CGxuLightLink
{
  CGxuLight *m_light;
  CLightList *m_list;
  float m_fitness;
  TSLink<CGxuLightLink> m_lightLink;
  TSLink<CGxuLightLink> m_listLink;
};

/* 4721 */
struct __cppobj TSLink<CLightList>
{
  TSLink<CLightList> *m_prevlink;
  CLightList *m_next;
};

/* 4723 */
struct __cppobj HASHKEY_DWORD
{
  unsigned int m_key;
};

/* 4724 */
struct __cppobj TSHashObject<CLightList,HASHKEY_DWORD>
{
  unsigned int m_hashval;
  TSLink<CLightList> m_linktoslot;
  TSLink<CLightList> m_linktofull;
  HASHKEY_DWORD m_key;
};

/* 4726 */
struct __cppobj __unaligned __declspec(align(4)) TSExplicitList<CGxuLightLink,20> : TSList<CGxuLightLink,TSGetExplicitLink<CGxuLightLink> >
{
};

/* 4722 */
struct __cppobj __unaligned __declspec(align(4)) CLightList : TSHashObject<CLightList,HASHKEY_DWORD>
{
  TSExplicitList<CGxuLightLink,20> m_links;
};

/* 4729 */
struct /*VFT*/ TSFixedArray<CGxuLight *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxuLight *>::MemFileName)(struct TSFixedArray<CGxuLight *> *this);
  int (__thiscall *TSBaseArray<CGxuLight *>::MemLineNo)(struct TSFixedArray<CGxuLight *> *this);
};

/* 4730 */
struct __cppobj TSFixedArray<CGxuLight *> : TSBaseArray<CGxuLight *>
{
};

/* 4731 */
struct /*VFT*/ TSGrowableArray<CGxuLight *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxuLight *>::MemFileName)(struct TSGrowableArray<CGxuLight *> *this);
  int (__thiscall *TSBaseArray<CGxuLight *>::MemLineNo)(struct TSGrowableArray<CGxuLight *> *this);
};

/* 4732 */
struct __cppobj TSGrowableArray<CGxuLight *> : TSFixedArray<CGxuLight *>
{
  unsigned int m_chunk;
};

/* 4734 */
struct __cppobj TSList<CLightList,TSGetExplicitLink<CLightList> >
{
  int m_linkoffset;
  TSLink<CLightList> m_terminator;
};

/* 4735 */
struct __cppobj TSExplicitList<CLightList,-572662307> : TSList<CLightList,TSGetExplicitLink<CLightList> >
{
};

/* 4737 */
struct __cppobj TSBaseArray<TSExplicitList<CLightList,-572662307> >
{
  TSBaseArray<TSExplicitList<CLightList,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<CLightList,-572662307> *m_data;
};

/* 4740 */
struct __cppobj TSFixedArray<TSExplicitList<CLightList,-572662307> > : TSBaseArray<TSExplicitList<CLightList,-572662307> >
{
};

/* 4742 */
struct __cppobj TSGrowableArray<TSExplicitList<CLightList,-572662307> > : TSFixedArray<TSExplicitList<CLightList,-572662307> >
{
  unsigned int m_chunk;
};

/* 4733 */
struct __cppobj TSHashTable<CLightList,HASHKEY_DWORD>
{
  TSHashTable<CLightList,HASHKEY_DWORD>_vtbl *__vftable /*VFT*/;
  TSExplicitList<CLightList,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<CLightList,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 4736 */
struct /*VFT*/ TSHashTable<CLightList,HASHKEY_DWORD>_vtbl
{
  void (__thiscall *TSHashTable<CLightList,HASHKEY_DWORD>::InternalDelete)(TSHashTable<CLightList,HASHKEY_DWORD> *this, CLightList *);
  CLightList *(__thiscall *TSHashTable<CLightList,HASHKEY_DWORD>::InternalNew)(TSHashTable<CLightList,HASHKEY_DWORD> *this, TSExplicitList<CLightList,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<CLightList,HASHKEY_DWORD>)(TSHashTable<CLightList,HASHKEY_DWORD> *this);
  void (__thiscall *TSHashTable<CLightList,HASHKEY_DWORD>::Destroy)(TSHashTable<CLightList,HASHKEY_DWORD> *this);
};

/* 4738 */
struct /*VFT*/ TSBaseArray<TSExplicitList<CLightList,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CLightList,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<CLightList,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CLightList,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<CLightList,-572662307> > *this);
};

/* 4739 */
struct /*VFT*/ TSFixedArray<TSExplicitList<CLightList,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CLightList,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<CLightList,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CLightList,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<CLightList,-572662307> > *this);
};

/* 4741 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<CLightList,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CLightList,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<CLightList,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CLightList,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<CLightList,-572662307> > *this);
};

/* 4743 */
struct __cppobj TSLink<TSHashObjectChunk<CLightList,HASHKEY_DWORD> >
{
  TSLink<TSHashObjectChunk<CLightList,HASHKEY_DWORD> > *m_prevlink;
  TSHashObjectChunk<CLightList,HASHKEY_DWORD> *m_next;
};

/* 4744 */
struct __cppobj TSBaseArray<CLightList>
{
  TSBaseArray<CLightList>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CLightList *m_data;
};

/* 4747 */
struct __cppobj TSFixedArray<CLightList> : TSBaseArray<CLightList>
{
};

/* 4749 */
struct __cppobj TSGrowableArray<CLightList> : TSFixedArray<CLightList>
{
  unsigned int m_chunk;
};

/* 4750 */
struct __cppobj __unaligned __declspec(align(4)) TSHashObjectChunk<CLightList,HASHKEY_DWORD>
{
  TSGrowableArray<CLightList> m_array;
  TSLink<TSHashObjectChunk<CLightList,HASHKEY_DWORD> > m_link;
};

/* 4745 */
struct /*VFT*/ TSBaseArray<CLightList>_vtbl
{
  const char *(__thiscall *TSBaseArray<CLightList>::MemFileName)(TSBaseArray<CLightList> *this);
  int (__thiscall *TSBaseArray<CLightList>::MemLineNo)(TSBaseArray<CLightList> *this);
};

/* 4746 */
struct /*VFT*/ TSFixedArray<CLightList>_vtbl
{
  const char *(__thiscall *TSBaseArray<CLightList>::MemFileName)(struct TSFixedArray<CLightList> *this);
  int (__thiscall *TSBaseArray<CLightList>::MemLineNo)(struct TSFixedArray<CLightList> *this);
};

/* 4748 */
struct /*VFT*/ TSGrowableArray<CLightList>_vtbl
{
  const char *(__thiscall *TSBaseArray<CLightList>::MemFileName)(struct TSGrowableArray<CLightList> *this);
  int (__thiscall *TSBaseArray<CLightList>::MemLineNo)(struct TSGrowableArray<CLightList> *this);
};

/* 4751 */
struct __cppobj TSList<TSHashObjectChunk<CLightList,HASHKEY_DWORD>,TSGetExplicitLink<TSHashObjectChunk<CLightList,HASHKEY_DWORD> > >
{
  int m_linkoffset;
  TSLink<TSHashObjectChunk<CLightList,HASHKEY_DWORD> > m_terminator;
};

/* 4752 */
struct __cppobj TSExplicitList<TSHashObjectChunk<CLightList,HASHKEY_DWORD>,20> : TSList<TSHashObjectChunk<CLightList,HASHKEY_DWORD>,TSGetExplicitLink<TSHashObjectChunk<CLightList,HASHKEY_DWORD> > >
{
};

/* 4753 */
struct __cppobj TSHashTableReuse<CLightList,HASHKEY_DWORD,1> : TSHashTable<CLightList,HASHKEY_DWORD>
{
  TSExplicitList<CLightList,-572662307> m_reuseList;
  unsigned int m_chunkSize;
  TSExplicitList<TSHashObjectChunk<CLightList,HASHKEY_DWORD>,20> m_chunkList;
};

/* 4754 */
struct /*VFT*/ TSHashTableReuse<CLightList,HASHKEY_DWORD,1>_vtbl
{
  void (__thiscall *TSHashTableReuse<CLightList,HASHKEY_DWORD,1>::Destroy)(TSHashTableReuse<CLightList,HASHKEY_DWORD,1> *this);
  CLightList *(__thiscall *TSHashTable<CLightList,HASHKEY_DWORD>::InternalNew)(struct TSHashTableReuse<CLightList,HASHKEY_DWORD,1> *this, TSExplicitList<CLightList,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTableReuse<CLightList,HASHKEY_DWORD,1>)(struct TSHashTableReuse<CLightList,HASHKEY_DWORD,1> *this);
  void (__thiscall *TSHashTable<CLightList,HASHKEY_DWORD>::Destroy)(struct TSHashTableReuse<CLightList,HASHKEY_DWORD,1> *this);
};

/* 4755 */
struct __cppobj TSList<CGxuLight,TSGetLink<CGxuLight> >
{
  int m_linkoffset;
  TSLink<CGxuLight> m_terminator;
};

/* 4756 */
struct __cppobj NTempest::CMemBlockT<CGxuLight *> : NTempest::CMemBlock
{
};

/* 4757 */
struct /*VFT*/ NTempest::CMemBlockT<CGxuLight *>_vtbl
{
  void (__thiscall *~NTempest::CMemBlockT<CGxuLight *>)(NTempest::CMemBlockT<CGxuLight *> *this);
};

/* 4758 */
struct __cppobj NTempest::CDynTable<CGxuLight *> : NTempest::CMemBlockT<CGxuLight *>
{
  unsigned int expand;
  unsigned int iallocated;
  unsigned int iused;
};

/* 4759 */
struct /*VFT*/ NTempest::CDynTable<CGxuLight *>_vtbl
{
  void (__thiscall *~NTempest::CDynTable<CGxuLight *>)(NTempest::CDynTable<CGxuLight *> *this);
};

/* 4760 */
struct __cppobj NTempest::CPriorityQ<CGxuLight *,CGxuLight> : NTempest::CDynTable<CGxuLight *>
{
};

/* 4761 */
struct /*VFT*/ NTempest::CPriorityQ<CGxuLight *,CGxuLight>_vtbl
{
  void (__thiscall *~NTempest::CPriorityQ<CGxuLight *,CGxuLight>)(NTempest::CPriorityQ<CGxuLight *,CGxuLight> *this);
};

/* 4762 */
union SHA1_Transform::CHAR64LONG16
{
  unsigned __int8 c[64];
  unsigned int l[16];
};

/* 4763 */
struct $260594E446D41F0F24FF5698B29C8FA4
{
  int ltime;
  unsigned int msec;
  int random;
};

/* 4764 */
struct PropertyInfo
{
  int typeId;
  const char *name;
  int valueType;
  int valueBaseType;
};

/* 4765 */
struct CGameObjectDef::EnumValue
{
  int count;
  const char **list;
  int defaultIndex;
};

/* 4766 */
struct CGameObjectDef::NumberValue
{
  float min;
  float max;
  float step;
  float defaultValue;
};

/* 4767 */
struct CGameObjectDef::StringValue
{
  const char *defaultValue;
};

/* 4768 */
union CGameObjectDef::ValueInfo
{
  CGameObjectDef::EnumValue e;
  CGameObjectDef::NumberValue n;
  CGameObjectDef::StringValue s;
};

/* 4769 */
struct ObjectInfo
{
  int typeId;
  const char *name;
  int numProperties;
  int *propertyInfo;
  const CGameObjectDef::ValueInfo **valueInfo;
};

/* 4770 */
struct __cppobj CGameObjectDef
{
};

/* 4771 */
struct $5F12FF5D1450166AE6FB14881116DCEC
{
  const char *animName;
  ANIMENUMERATION anim;
};

/* 4772 */
const struct $E1CAB69ECD8076F2A83E4E25F939E820
{
  const char *animName;
  ANIMENUMERATION anim;
};

/* 4773 */
struct __cppobj TSLink<ANIMKIT>
{
  TSLink<ANIMKIT> *m_prevlink;
  ANIMKIT *m_next;
};

/* 4774 */
struct __cppobj __declspec(align(4)) TSHashObject<ANIMKIT,HASHKEY_NONE>
{
  unsigned int m_hashval;
  __unaligned __declspec(align(1)) TSLink<ANIMKIT> m_linktoslot;
  __unaligned __declspec(align(1)) TSLink<ANIMKIT> m_linktofull;
  HASHKEY_NONE m_key;
};

/* 4775 */
struct __cppobj TSBaseArray<CHANCES>
{
  TSBaseArray<CHANCES>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CHANCES *m_data;
};

/* 4779 */
struct __cppobj TSFixedArray<CHANCES> : TSBaseArray<CHANCES>
{
};

/* 4781 */
struct __cppobj TSGrowableArray<CHANCES> : TSFixedArray<CHANCES>
{
  unsigned int m_chunk;
};

/* 4782 */
struct __cppobj WEAPONHANDCHANCES
{
  unsigned int total;
  TSGrowableArray<CHANCES> chances;
};

/* 4783 */
struct __cppobj ANIMKIT : TSHashObject<ANIMKIT,HASHKEY_NONE>
{
  WEAPONHANDCHANCES chancesArray[2];
};

/* 4776 */
struct /*VFT*/ TSBaseArray<CHANCES>_vtbl
{
  const char *(__thiscall *TSBaseArray<CHANCES>::MemFileName)(TSBaseArray<CHANCES> *this);
  int (__thiscall *TSBaseArray<CHANCES>::MemLineNo)(TSBaseArray<CHANCES> *this);
};

/* 4777 */
struct CHANCES
{
  unsigned int seq;
  unsigned int frequency;
};

/* 4778 */
struct /*VFT*/ TSFixedArray<CHANCES>_vtbl
{
  const char *(__thiscall *TSBaseArray<CHANCES>::MemFileName)(struct TSFixedArray<CHANCES> *this);
  int (__thiscall *TSBaseArray<CHANCES>::MemLineNo)(struct TSFixedArray<CHANCES> *this);
};

/* 4780 */
struct /*VFT*/ TSGrowableArray<CHANCES>_vtbl
{
  const char *(__thiscall *TSBaseArray<CHANCES>::MemFileName)(struct TSGrowableArray<CHANCES> *this);
  int (__thiscall *TSBaseArray<CHANCES>::MemLineNo)(struct TSGrowableArray<CHANCES> *this);
};

/* 4784 */
struct __cppobj TSList<ANIMKIT,TSGetExplicitLink<ANIMKIT> >
{
  int m_linkoffset;
  TSLink<ANIMKIT> m_terminator;
};

/* 4785 */
struct __cppobj TSExplicitList<ANIMKIT,-572662307> : TSList<ANIMKIT,TSGetExplicitLink<ANIMKIT> >
{
};

/* 4786 */
struct __cppobj TSBaseArray<TSExplicitList<ANIMKIT,-572662307> >
{
  TSBaseArray<TSExplicitList<ANIMKIT,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<ANIMKIT,-572662307> *m_data;
};

/* 4787 */
struct /*VFT*/ TSBaseArray<TSExplicitList<ANIMKIT,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<ANIMKIT,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<ANIMKIT,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<ANIMKIT,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<ANIMKIT,-572662307> > *this);
};

/* 4788 */
struct /*VFT*/ TSFixedArray<TSExplicitList<ANIMKIT,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<ANIMKIT,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<ANIMKIT,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<ANIMKIT,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<ANIMKIT,-572662307> > *this);
};

/* 4789 */
struct __cppobj TSFixedArray<TSExplicitList<ANIMKIT,-572662307> > : TSBaseArray<TSExplicitList<ANIMKIT,-572662307> >
{
};

/* 4790 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<ANIMKIT,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<ANIMKIT,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<ANIMKIT,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<ANIMKIT,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<ANIMKIT,-572662307> > *this);
};

/* 4791 */
struct __cppobj TSGrowableArray<TSExplicitList<ANIMKIT,-572662307> > : TSFixedArray<TSExplicitList<ANIMKIT,-572662307> >
{
  unsigned int m_chunk;
};

/* 4792 */
struct __cppobj TSHashTable<ANIMKIT,HASHKEY_NONE>
{
  TSHashTable<ANIMKIT,HASHKEY_NONE>_vtbl *__vftable /*VFT*/;
  TSExplicitList<ANIMKIT,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<ANIMKIT,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 4793 */
struct /*VFT*/ TSHashTable<ANIMKIT,HASHKEY_NONE>_vtbl
{
  void (__thiscall *TSHashTable<ANIMKIT,HASHKEY_NONE>::InternalDelete)(TSHashTable<ANIMKIT,HASHKEY_NONE> *this, ANIMKIT *);
  ANIMKIT *(__thiscall *TSHashTable<ANIMKIT,HASHKEY_NONE>::InternalNew)(TSHashTable<ANIMKIT,HASHKEY_NONE> *this, TSExplicitList<ANIMKIT,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<ANIMKIT,HASHKEY_NONE>)(TSHashTable<ANIMKIT,HASHKEY_NONE> *this);
  void (__thiscall *TSHashTable<ANIMKIT,HASHKEY_NONE>::Destroy)(TSHashTable<ANIMKIT,HASHKEY_NONE> *this);
};

/* 4794 */
struct __cppobj ENVIRONMENTALDAMAGE : LOGBASE
{
  unsigned __int64 victim;
  int school;
  int amount;
};

/* 4795 */
struct /*VFT*/ ENVIRONMENTALDAMAGE_vtbl
{
  void (__thiscall *ENVIRONMENTALDAMAGE::UI)(ENVIRONMENTALDAMAGE *this, CDataStore *);
  void (__thiscall *UI)(struct ENVIRONMENTALDAMAGE *this, CDataStore *);
};

/* 4796 */
struct __cppobj __declspec(align(8)) ENCHANTMENTLOG : LOGBASE
{
  unsigned __int64 attacker;
  unsigned __int64 victim;
  int enchantment;
  int itemID;
  int flags;
};

/* 4797 */
struct /*VFT*/ ENCHANTMENTLOG_vtbl
{
  void (__thiscall *ENCHANTMENTLOG::UI)(ENCHANTMENTLOG *this, CDataStore *);
  void (__thiscall *UI)(struct ENCHANTMENTLOG *this, CDataStore *);
};

/* 4798 */
struct __cppobj __declspec(align(8)) RESISTLOG : LOGBASE
{
  unsigned __int64 attacker;
  unsigned __int64 victim;
  int spell;
  float resistRollNeeded;
  float resistRoll;
  int flags;
  int castLevel;
};

/* 4799 */
struct /*VFT*/ RESISTLOG_vtbl
{
  void (__thiscall *RESISTLOG::UI)(RESISTLOG *this, CDataStore *);
  void (__thiscall *UI)(struct RESISTLOG *this, CDataStore *);
};

/* 4800 */
struct __cppobj PARTYKILLLOG : LOGBASE
{
  unsigned __int64 killer;
  unsigned __int64 victim;
};

/* 4801 */
struct /*VFT*/ PARTYKILLLOG_vtbl
{
  void (__thiscall *PARTYKILLLOG::UI)(PARTYKILLLOG *this, CDataStore *);
  void (__thiscall *UI)(struct PARTYKILLLOG *this, CDataStore *);
};

/* 4802 */
struct __cppobj __declspec(align(8)) SPELLMISSLOG : LOGBASE
{
  unsigned __int64 attacker;
  unsigned __int64 victim;
  unsigned int spellID;
  unsigned int reason;
  float hitRoll;
  float hitRollNeeded;
  float dodgeRoll;
  float dodgeRollNeeded;
  float parryRoll;
  float parryRollNeeded;
  float blockRoll;
  float blockRollNeeded;
  unsigned int flags;
};

/* 4803 */
struct /*VFT*/ SPELLMISSLOG_vtbl
{
  void (__thiscall *SPELLMISSLOG::UI)(SPELLMISSLOG *this, CDataStore *);
  void (__thiscall *UI)(struct SPELLMISSLOG *this, CDataStore *);
};

/* 4804 */
struct __cppobj TSLink<HITSPRITE>
{
  TSLink<HITSPRITE> *m_prevlink;
  HITSPRITE *m_next;
};

/* 4806 */
struct __cppobj TSLinkedNode<HITSPRITE>
{
  TSLink<HITSPRITE> m_link;
};

/* 4805 */
struct __cppobj HITSPRITE : TSLinkedNode<HITSPRITE>
{
  unsigned int start;
  unsigned int duration;
  HMODEL__ *model;
};

/* 4807 */
struct COMBATMESSAGEPRONOUNS
{
  char attackerName[48];
  char victimName[48];
};

/* 4808 */
struct RESULTTYPEHANDLERDESC
{
  void (__fastcall *handler)(COMBATMESSAGEPRONOUNS *, const ATTACKROUNDINFO *, char *, unsigned int);
  unsigned int flags;
};

/* 4809 */
struct __cppobj TSBaseArray<ENCHANTMENTLOGDESC>
{
  TSBaseArray<ENCHANTMENTLOGDESC>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  ENCHANTMENTLOGDESC *m_data;
};

/* 4810 */
struct /*VFT*/ TSBaseArray<ENCHANTMENTLOGDESC>_vtbl
{
  const char *(__thiscall *TSBaseArray<ENCHANTMENTLOGDESC>::MemFileName)(TSBaseArray<ENCHANTMENTLOGDESC> *this);
  int (__thiscall *TSBaseArray<ENCHANTMENTLOGDESC>::MemLineNo)(TSBaseArray<ENCHANTMENTLOGDESC> *this);
};

/* 4811 */
struct __cppobj ENCHANTMENTLOGDESC
{
  unsigned __int8 valid;
  ENCHANTMENTLOG log;
};

/* 4812 */
struct /*VFT*/ TSFixedArray<ENCHANTMENTLOGDESC>_vtbl
{
  const char *(__thiscall *TSBaseArray<ENCHANTMENTLOGDESC>::MemFileName)(struct TSFixedArray<ENCHANTMENTLOGDESC> *this);
  int (__thiscall *TSBaseArray<ENCHANTMENTLOGDESC>::MemLineNo)(struct TSFixedArray<ENCHANTMENTLOGDESC> *this);
};

/* 4813 */
struct __cppobj TSFixedArray<ENCHANTMENTLOGDESC> : TSBaseArray<ENCHANTMENTLOGDESC>
{
};

/* 4814 */
struct /*VFT*/ TSGrowableArray<ENCHANTMENTLOGDESC>_vtbl
{
  const char *(__thiscall *TSBaseArray<ENCHANTMENTLOGDESC>::MemFileName)(struct TSGrowableArray<ENCHANTMENTLOGDESC> *this);
  int (__thiscall *TSBaseArray<ENCHANTMENTLOGDESC>::MemLineNo)(struct TSGrowableArray<ENCHANTMENTLOGDESC> *this);
};

/* 4815 */
struct __cppobj TSGrowableArray<ENCHANTMENTLOGDESC> : TSFixedArray<ENCHANTMENTLOGDESC>
{
  unsigned int m_chunk;
};

/* 4816 */
struct __cppobj TSLink<UNITHASHOBJ>
{
  TSLink<UNITHASHOBJ> *m_prevlink;
  UNITHASHOBJ *m_next;
};

/* 4818 */
struct __cppobj TSHashObject<UNITHASHOBJ,CHashKeyGUID>
{
  unsigned int m_hashval;
  TSLink<UNITHASHOBJ> m_linktoslot;
  TSLink<UNITHASHOBJ> m_linktofull;
  CHashKeyGUID m_key;
};

/* 4817 */
struct __cppobj __declspec(align(8)) UNITHASHOBJ : TSHashObject<UNITHASHOBJ,CHashKeyGUID>
{
  unsigned int count;
};

/* 4820 */
struct __cppobj TSList<UNITHASHOBJ,TSGetExplicitLink<UNITHASHOBJ> >
{
  int m_linkoffset;
  TSLink<UNITHASHOBJ> m_terminator;
};

/* 4821 */
struct __cppobj TSExplicitList<UNITHASHOBJ,-572662307> : TSList<UNITHASHOBJ,TSGetExplicitLink<UNITHASHOBJ> >
{
};

/* 4823 */
struct __cppobj TSBaseArray<TSExplicitList<UNITHASHOBJ,-572662307> >
{
  TSBaseArray<TSExplicitList<UNITHASHOBJ,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<UNITHASHOBJ,-572662307> *m_data;
};

/* 4826 */
struct __cppobj TSFixedArray<TSExplicitList<UNITHASHOBJ,-572662307> > : TSBaseArray<TSExplicitList<UNITHASHOBJ,-572662307> >
{
};

/* 4828 */
struct __cppobj TSGrowableArray<TSExplicitList<UNITHASHOBJ,-572662307> > : TSFixedArray<TSExplicitList<UNITHASHOBJ,-572662307> >
{
  unsigned int m_chunk;
};

/* 4819 */
struct __cppobj TSHashTable<UNITHASHOBJ,CHashKeyGUID>
{
  TSHashTable<UNITHASHOBJ,CHashKeyGUID>_vtbl *__vftable /*VFT*/;
  TSExplicitList<UNITHASHOBJ,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<UNITHASHOBJ,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 4822 */
struct /*VFT*/ TSHashTable<UNITHASHOBJ,CHashKeyGUID>_vtbl
{
  void (__thiscall *TSHashTable<UNITHASHOBJ,CHashKeyGUID>::InternalDelete)(TSHashTable<UNITHASHOBJ,CHashKeyGUID> *this, UNITHASHOBJ *);
  UNITHASHOBJ *(__thiscall *TSHashTable<UNITHASHOBJ,CHashKeyGUID>::InternalNew)(TSHashTable<UNITHASHOBJ,CHashKeyGUID> *this, TSExplicitList<UNITHASHOBJ,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<UNITHASHOBJ,CHashKeyGUID>)(TSHashTable<UNITHASHOBJ,CHashKeyGUID> *this);
  void (__thiscall *TSHashTable<UNITHASHOBJ,CHashKeyGUID>::Destroy)(TSHashTable<UNITHASHOBJ,CHashKeyGUID> *this);
};

/* 4824 */
struct /*VFT*/ TSBaseArray<TSExplicitList<UNITHASHOBJ,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<UNITHASHOBJ,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<UNITHASHOBJ,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<UNITHASHOBJ,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<UNITHASHOBJ,-572662307> > *this);
};

/* 4825 */
struct /*VFT*/ TSFixedArray<TSExplicitList<UNITHASHOBJ,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<UNITHASHOBJ,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<UNITHASHOBJ,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<UNITHASHOBJ,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<UNITHASHOBJ,-572662307> > *this);
};

/* 4827 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<UNITHASHOBJ,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<UNITHASHOBJ,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<UNITHASHOBJ,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<UNITHASHOBJ,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<UNITHASHOBJ,-572662307> > *this);
};

/* 4829 */
struct __cppobj COMBATLOGDESC
{
  unsigned int totalDamageDoneByEntity;
  unsigned int totalDamageReducedByVictim;
  unsigned int totalAttemptsByEntity;
  unsigned int totalMisses;
  unsigned int totalHits;
  unsigned int totalVictimStatesByEntity[9];
  unsigned int parryAttempts;
  unsigned int dodgeAttempts;
  unsigned int blockAttempts;
  unsigned int totalTimeDelayed;
  unsigned int criticalHits;
  unsigned int spellCritsAttempted;
  unsigned int spellCritsSucceeded;
  unsigned int spellCritsSuffered;
  int totalHealthHealed;
  int totalReflectedDamageSuffered;
  int totalDamageSuffered;
  int totalHealingProvided;
  int totalReflectedDamageProvided;
  int totalDamageProvided;
  float totalSpellDamageReducedByVictim;
  float totalSpellDamageReduced;
  TSHashTable<UNITHASHOBJ,CHashKeyGUID> victims;
  TSHashTable<UNITHASHOBJ,CHashKeyGUID> attackers;
  char m_name[48];
};

/* 4830 */
struct $15A43440C5F200CDDBFCBC96BAC4336D
{
  const char *cvarname;
  const char *defaultvalue;
};

/* 4831 */
struct $4D66302A3500CBF38EEE01F07E995EBB
{
  int hitRollValid;
  char *actionString;
  char *optionalString;
};

/* 4832 */
const struct $02863AE4F417AFABA551377B17619288
{
  int hitRollValid;
  char *actionString;
  char *optionalString;
};

/* 4833 */
struct GetItemTypeCountData
{
  int entryID;
  int count;
};

/* 4834 */
struct __cppobj FindItemClassData
{
  int classID;
  int subclassMask;
};

/* 4835 */
struct __cppobj TSBaseArray<PERSISTENTTEXTURE>
{
  TSBaseArray<PERSISTENTTEXTURE>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  PERSISTENTTEXTURE *m_data;
};

/* 4836 */
struct /*VFT*/ TSBaseArray<PERSISTENTTEXTURE>_vtbl
{
  const char *(__thiscall *TSBaseArray<PERSISTENTTEXTURE>::MemFileName)(TSBaseArray<PERSISTENTTEXTURE> *this);
  int (__thiscall *TSBaseArray<PERSISTENTTEXTURE>::MemLineNo)(TSBaseArray<PERSISTENTTEXTURE> *this);
};

/* 4839 */
struct __cppobj TSLink<SPLATDATA>
{
  TSLink<SPLATDATA> *m_prevlink;
  SPLATDATA *m_next;
};

/* 4850 */
struct __cppobj TSList<SPLATDATA,TSGetExplicitLink<SPLATDATA> >
{
  int m_linkoffset;
  TSLink<SPLATDATA> m_terminator;
};

/* 4853 */
struct __cppobj TSExplicitList<SPLATDATA,68> : TSList<SPLATDATA,TSGetExplicitLink<SPLATDATA> >
{
};

/* 4847 */
struct __cppobj TSLink<CHUNKDATA>
{
  TSLink<CHUNKDATA> *m_prevlink;
  CHUNKDATA *m_next;
};

/* 4854 */
struct __cppobj TSList<CHUNKDATA,TSGetLink<CHUNKDATA> >
{
  int m_linkoffset;
  TSLink<CHUNKDATA> m_terminator;
};

/* 4837 */
struct __cppobj LISTBASE
{
  LISTBASE_vtbl *__vftable /*VFT*/;
  TSExplicitList<SPLATDATA,68> m_splatOrder;
  TSList<CHUNKDATA,TSGetLink<CHUNKDATA> > m_chunks;
  HTEXTURE__ *m_texture;
  int m_currentCount;
  int m_maxCount;
  int m_flags;
};

/* 4855 */
struct __cppobj PERSISTENTTEXTURE : LISTBASE
{
};

/* 4838 */
struct /*VFT*/ LISTBASE_vtbl
{
  unsigned __int8 (__thiscall *MakeSpace)(LISTBASE *this);
};

/* 4840 */
struct __cppobj TSBaseArray<VERTDATA>
{
  TSBaseArray<VERTDATA>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  VERTDATA *m_data;
};

/* 4844 */
struct __cppobj TSFixedArray<VERTDATA> : TSBaseArray<VERTDATA>
{
};

/* 4846 */
struct __cppobj TSGrowableArray<VERTDATA> : TSFixedArray<VERTDATA>
{
  unsigned int m_chunk;
};

/* 4852 */
struct __cppobj __unaligned __declspec(align(4)) SPLATDATA
{
  TSGrowableArray<VERTDATA> data;
  TSGrowableArray<unsigned short> indices;
  int startTime;
  NTempest::C3Vector position;
  unsigned __int8 skip;
  NTempest::CImVector color;
  __declspec(align(4)) CHUNKDATA *chunk;
  TSLink<SPLATDATA> orderLink;
  TSLink<SPLATDATA> normalLink;
};

/* 4849 */
struct __cppobj TSLinkedNode<CHUNKDATA>
{
  TSLink<CHUNKDATA> m_link;
};

/* 4851 */
struct __cppobj __unaligned __declspec(align(4)) TSExplicitList<SPLATDATA,76> : TSList<SPLATDATA,TSGetExplicitLink<SPLATDATA> >
{
};

/* 4848 */
struct __cppobj CHUNKDATA : TSLinkedNode<CHUNKDATA>
{
  int m_sourceID;
  __unaligned __declspec(align(1)) TSExplicitList<SPLATDATA,76> m_splats;
  int m_flags;
  int m_vertCount;
  int m_indexCount;
  int m_numSplats;
  NTempest::C44Matrix m_matrix;
};

/* 4841 */
struct /*VFT*/ TSBaseArray<VERTDATA>_vtbl
{
  const char *(__thiscall *TSBaseArray<VERTDATA>::MemFileName)(TSBaseArray<VERTDATA> *this);
  int (__thiscall *TSBaseArray<VERTDATA>::MemLineNo)(TSBaseArray<VERTDATA> *this);
};

/* 4842 */
struct __cppobj VERTDATA
{
  NTempest::C3Vector p;
  NTempest::C2Vector t[2];
};

/* 4843 */
struct /*VFT*/ TSFixedArray<VERTDATA>_vtbl
{
  const char *(__thiscall *TSBaseArray<VERTDATA>::MemFileName)(struct TSFixedArray<VERTDATA> *this);
  int (__thiscall *TSBaseArray<VERTDATA>::MemLineNo)(struct TSFixedArray<VERTDATA> *this);
};

/* 4845 */
struct /*VFT*/ TSGrowableArray<VERTDATA>_vtbl
{
  const char *(__thiscall *TSBaseArray<VERTDATA>::MemFileName)(struct TSGrowableArray<VERTDATA> *this);
  int (__thiscall *TSBaseArray<VERTDATA>::MemLineNo)(struct TSGrowableArray<VERTDATA> *this);
};

/* 4856 */
struct /*VFT*/ PERSISTENTTEXTURE_vtbl
{
  unsigned __int8 (__thiscall *PERSISTENTTEXTURE::MakeSpace)(PERSISTENTTEXTURE *this);
};

/* 4857 */
struct /*VFT*/ TSFixedArray<PERSISTENTTEXTURE>_vtbl
{
  const char *(__thiscall *TSBaseArray<PERSISTENTTEXTURE>::MemFileName)(struct TSFixedArray<PERSISTENTTEXTURE> *this);
  int (__thiscall *TSBaseArray<PERSISTENTTEXTURE>::MemLineNo)(struct TSFixedArray<PERSISTENTTEXTURE> *this);
};

/* 4858 */
struct __cppobj TSFixedArray<PERSISTENTTEXTURE> : TSBaseArray<PERSISTENTTEXTURE>
{
};

/* 4859 */
struct /*VFT*/ TSGrowableArray<PERSISTENTTEXTURE>_vtbl
{
  const char *(__thiscall *TSBaseArray<PERSISTENTTEXTURE>::MemFileName)(struct TSGrowableArray<PERSISTENTTEXTURE> *this);
  int (__thiscall *TSBaseArray<PERSISTENTTEXTURE>::MemLineNo)(struct TSGrowableArray<PERSISTENTTEXTURE> *this);
};

/* 4860 */
struct __cppobj TSGrowableArray<PERSISTENTTEXTURE> : TSFixedArray<PERSISTENTTEXTURE>
{
  unsigned int m_chunk;
};

/* 4861 */
struct __cppobj TSBaseArray<TIMEDTEXTURE>
{
  TSBaseArray<TIMEDTEXTURE>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TIMEDTEXTURE *m_data;
};

/* 4862 */
struct /*VFT*/ TSBaseArray<TIMEDTEXTURE>_vtbl
{
  const char *(__thiscall *TSBaseArray<TIMEDTEXTURE>::MemFileName)(TSBaseArray<TIMEDTEXTURE> *this);
  int (__thiscall *TSBaseArray<TIMEDTEXTURE>::MemLineNo)(TSBaseArray<TIMEDTEXTURE> *this);
};

/* 4863 */
struct __cppobj TIMEDTEXTURE : LISTBASE
{
};

/* 4864 */
struct /*VFT*/ TIMEDTEXTURE_vtbl
{
  unsigned __int8 (__thiscall *TIMEDTEXTURE::MakeSpace)(TIMEDTEXTURE *this);
};

/* 4865 */
struct /*VFT*/ TSFixedArray<TIMEDTEXTURE>_vtbl
{
  const char *(__thiscall *TSBaseArray<TIMEDTEXTURE>::MemFileName)(struct TSFixedArray<TIMEDTEXTURE> *this);
  int (__thiscall *TSBaseArray<TIMEDTEXTURE>::MemLineNo)(struct TSFixedArray<TIMEDTEXTURE> *this);
};

/* 4866 */
struct __cppobj TSFixedArray<TIMEDTEXTURE> : TSBaseArray<TIMEDTEXTURE>
{
};

/* 4867 */
struct /*VFT*/ TSGrowableArray<TIMEDTEXTURE>_vtbl
{
  const char *(__thiscall *TSBaseArray<TIMEDTEXTURE>::MemFileName)(struct TSGrowableArray<TIMEDTEXTURE> *this);
  int (__thiscall *TSBaseArray<TIMEDTEXTURE>::MemLineNo)(struct TSGrowableArray<TIMEDTEXTURE> *this);
};

/* 4868 */
struct __cppobj TSGrowableArray<TIMEDTEXTURE> : TSFixedArray<TIMEDTEXTURE>
{
  unsigned int m_chunk;
};

/* 4869 */
struct __cppobj TInstanceAllocator<CHUNKDATA> : CDataAllocator
{
};

/* 4870 */
struct CWTriData::Batch
{
  const NTempest::C44Matrix *matrix;
  const NTempest::C3Vector *vertices;
  const NTempest::C3Vector *normals;
  const unsigned __int16 *vertexIndices;
  const unsigned __int16 *triIndices;
  unsigned __int16 indexCount;
  unsigned __int16 triCount;
  unsigned __int16 minIndex;
  unsigned __int16 maxIndex;
  unsigned int sourceID;
};

/* 4871 */
struct __cppobj CWTriData
{
};

/* 4872 */
struct __cppobj TSLink<UNITONESHOTEFFECTDESC>
{
  TSLink<UNITONESHOTEFFECTDESC> *m_prevlink;
  UNITONESHOTEFFECTDESC *m_next;
};

/* 4873 */
struct __cppobj TSHashObject<UNITONESHOTEFFECTDESC,CHashKeyGUID>
{
  unsigned int m_hashval;
  __unaligned __declspec(align(1)) TSLink<UNITONESHOTEFFECTDESC> m_linktoslot;
  __unaligned __declspec(align(1)) TSLink<UNITONESHOTEFFECTDESC> m_linktofull;
  CHashKeyGUID m_key;
};

/* 4874 */
struct __cppobj TSLink<ONESHOTEFFECTNODE>
{
  TSLink<ONESHOTEFFECTNODE> *m_prevlink;
  ONESHOTEFFECTNODE *m_next;
};

/* 4880 */
struct __cppobj TSList<ONESHOTEFFECTNODE,TSGetExplicitLink<ONESHOTEFFECTNODE> >
{
  int m_linkoffset;
  TSLink<ONESHOTEFFECTNODE> m_terminator;
};

/* 4881 */
struct __cppobj TSExplicitList<ONESHOTEFFECTNODE,4> : TSList<ONESHOTEFFECTNODE,TSGetExplicitLink<ONESHOTEFFECTNODE> >
{
};

/* 4882 */
struct __cppobj __declspec(align(8)) UNITONESHOTEFFECTDESC : TSHashObject<UNITONESHOTEFFECTDESC,CHashKeyGUID>
{
  TSExplicitList<ONESHOTEFFECTNODE,4> m_effects;
};

/* 4877 */
struct __cppobj TSLink<NODEBASE>
{
  TSLink<NODEBASE> *m_prevlink;
  NODEBASE *m_next;
};

/* 4875 */
struct __cppobj NODEBASE
{
  NODEBASE_vtbl *__vftable /*VFT*/;
  TSLink<NODEBASE> node;
  HMODEL__ *model;
  unsigned int flags;
  unsigned int deathHoldTimer;
};

/* 4878 */
struct __cppobj __declspec(align(4)) ONESHOTEFFECTNODE : NODEBASE
{
  HMODEL__ *objectModel;
  unsigned int objectModelAttachmentPoint;
  unsigned __int64 objectGUID;
  int spellID;
  unsigned __int8 isCastEffect;
};

/* 4876 */
struct /*VFT*/ NODEBASE_vtbl
{
  void (__thiscall *ReleaseDeathHolds)(NODEBASE *this);
};

/* 4879 */
struct /*VFT*/ ONESHOTEFFECTNODE_vtbl
{
  void (__thiscall *ONESHOTEFFECTNODE::ReleaseDeathHolds)(ONESHOTEFFECTNODE *this);
};

/* 4883 */
struct __cppobj TSList<UNITONESHOTEFFECTDESC,TSGetExplicitLink<UNITONESHOTEFFECTDESC> >
{
  int m_linkoffset;
  TSLink<UNITONESHOTEFFECTDESC> m_terminator;
};

/* 4884 */
struct __cppobj TSExplicitList<UNITONESHOTEFFECTDESC,-572662307> : TSList<UNITONESHOTEFFECTDESC,TSGetExplicitLink<UNITONESHOTEFFECTDESC> >
{
};

/* 4885 */
struct __cppobj TSBaseArray<TSExplicitList<UNITONESHOTEFFECTDESC,-572662307> >
{
  TSBaseArray<TSExplicitList<UNITONESHOTEFFECTDESC,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<UNITONESHOTEFFECTDESC,-572662307> *m_data;
};

/* 4886 */
struct /*VFT*/ TSBaseArray<TSExplicitList<UNITONESHOTEFFECTDESC,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<UNITONESHOTEFFECTDESC,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<UNITONESHOTEFFECTDESC,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<UNITONESHOTEFFECTDESC,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<UNITONESHOTEFFECTDESC,-572662307> > *this);
};

/* 4887 */
struct /*VFT*/ TSFixedArray<TSExplicitList<UNITONESHOTEFFECTDESC,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<UNITONESHOTEFFECTDESC,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<UNITONESHOTEFFECTDESC,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<UNITONESHOTEFFECTDESC,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<UNITONESHOTEFFECTDESC,-572662307> > *this);
};

/* 4888 */
struct __cppobj TSFixedArray<TSExplicitList<UNITONESHOTEFFECTDESC,-572662307> > : TSBaseArray<TSExplicitList<UNITONESHOTEFFECTDESC,-572662307> >
{
};

/* 4889 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<UNITONESHOTEFFECTDESC,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<UNITONESHOTEFFECTDESC,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<UNITONESHOTEFFECTDESC,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<UNITONESHOTEFFECTDESC,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<UNITONESHOTEFFECTDESC,-572662307> > *this);
};

/* 4890 */
struct __cppobj TSGrowableArray<TSExplicitList<UNITONESHOTEFFECTDESC,-572662307> > : TSFixedArray<TSExplicitList<UNITONESHOTEFFECTDESC,-572662307> >
{
  unsigned int m_chunk;
};

/* 4891 */
struct __cppobj TSHashTable<UNITONESHOTEFFECTDESC,CHashKeyGUID>
{
  TSHashTable<UNITONESHOTEFFECTDESC,CHashKeyGUID>_vtbl *__vftable /*VFT*/;
  TSExplicitList<UNITONESHOTEFFECTDESC,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<UNITONESHOTEFFECTDESC,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 4892 */
struct /*VFT*/ TSHashTable<UNITONESHOTEFFECTDESC,CHashKeyGUID>_vtbl
{
  void (__thiscall *TSHashTable<UNITONESHOTEFFECTDESC,CHashKeyGUID>::InternalDelete)(TSHashTable<UNITONESHOTEFFECTDESC,CHashKeyGUID> *this, UNITONESHOTEFFECTDESC *);
  UNITONESHOTEFFECTDESC *(__thiscall *TSHashTable<UNITONESHOTEFFECTDESC,CHashKeyGUID>::InternalNew)(TSHashTable<UNITONESHOTEFFECTDESC,CHashKeyGUID> *this, TSExplicitList<UNITONESHOTEFFECTDESC,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<UNITONESHOTEFFECTDESC,CHashKeyGUID>)(TSHashTable<UNITONESHOTEFFECTDESC,CHashKeyGUID> *this);
  void (__thiscall *TSHashTable<UNITONESHOTEFFECTDESC,CHashKeyGUID>::Destroy)(TSHashTable<UNITONESHOTEFFECTDESC,CHashKeyGUID> *this);
};

/* 4893 */
struct __cppobj TSLink<ONESHOTSTANDALONEEFFECTNODE>
{
  TSLink<ONESHOTSTANDALONEEFFECTNODE> *m_prevlink;
  ONESHOTSTANDALONEEFFECTNODE *m_next;
};

/* 4894 */
struct __cppobj ONESHOTSTANDALONEEFFECTNODE : NODEBASE
{
  NTempest::C3Vector position;
  TSFixedArray<unsigned __int64> objects;
  float facing;
  float scale;
  unsigned int worldObject;
  int expireTime;
};

/* 4895 */
struct /*VFT*/ ONESHOTSTANDALONEEFFECTNODE_vtbl
{
  void (__thiscall *ONESHOTSTANDALONEEFFECTNODE::ReleaseDeathHolds)(ONESHOTSTANDALONEEFFECTNODE *this);
};

/* 4896 */
struct __cppobj TSList<ONESHOTSTANDALONEEFFECTNODE,TSGetExplicitLink<ONESHOTSTANDALONEEFFECTNODE> >
{
  int m_linkoffset;
  TSLink<ONESHOTSTANDALONEEFFECTNODE> m_terminator;
};

/* 4897 */
struct __cppobj TSExplicitList<ONESHOTSTANDALONEEFFECTNODE,4> : TSList<ONESHOTSTANDALONEEFFECTNODE,TSGetExplicitLink<ONESHOTSTANDALONEEFFECTNODE> >
{
};

/* 4898 */
struct __cppobj TSLink<MISSILENODE>
{
  TSLink<MISSILENODE> *m_prevlink;
  MISSILENODE *m_next;
};

/* 4899 */
struct __cppobj TSLinkedNode<MISSILENODE>
{
  TSLink<MISSILENODE> m_link;
};

/* 4900 */
struct __cppobj MISSILENODE : TSLinkedNode<MISSILENODE>
{
  HMODEL__ *model;
  unsigned __int64 caster;
  NTempest::C3Vector startPosition;
  NTempest::C3Vector position;
  NTempest::C3Vector endPosition;
  NTempest::C3Vector normal;
  unsigned __int64 target;
  unsigned int startTime;
  unsigned int travelTime;
  NTempest::C3Vector facing;
  unsigned int spellID;
  unsigned int victimEffect;
  unsigned int pathType;
  unsigned __int8 miss;
  MISS_REASON missReason;
  int flags;
  Sound *sound;
};

/* 4901 */
struct __cppobj TSList<MISSILENODE,TSGetLink<MISSILENODE> >
{
  int m_linkoffset;
  TSLink<MISSILENODE> m_terminator;
};

/* 4902 */
struct __cppobj TInstanceAllocator<ONESHOTSTANDALONEEFFECTNODE> : CDataAllocator
{
};

/* 4903 */
struct __cppobj TInstanceAllocator<MISSILENODE> : CDataAllocator
{
};

/* 4905 */
struct __cppobj TSLink<PERSISTENTUNITEFFECT>
{
  TSLink<PERSISTENTUNITEFFECT> *m_prevlink;
  PERSISTENTUNITEFFECT *m_next;
};

/* 4904 */
struct __cppobj PERSISTENTUNITEFFECT : CHandleObject
{
  HMODEL__ *effectModel;
  HMODEL__ *objectModel;
  GEOCOMPONENTLINKS linkPoint;
  NTempest::C3Vector position;
  TSLink<PERSISTENTUNITEFFECT> m_listLink;
};

/* 4906 */
struct /*VFT*/ PERSISTENTUNITEFFECT_vtbl
{
  void (__thiscall *~PERSISTENTUNITEFFECT)(PERSISTENTUNITEFFECT *this);
  const char *(__thiscall *CHandleObject::GetObjectName)(struct PERSISTENTUNITEFFECT *this);
};

/* 4907 */
struct __cppobj TSStackArray<unsigned __int64>
{
  unsigned int m_maxCount;
  unsigned int m_count;
  unsigned __int64 *m_data;
};

/* 4908 */
struct __cppobj TSList<CGGameObject_C,TSGetExplicitLink<CGGameObject_C> >
{
  int m_linkoffset;
  TSLink<CGGameObject_C> m_terminator;
};

/* 4909 */
struct __cppobj TSExplicitList<CGGameObject_C,52> : TSList<CGGameObject_C,TSGetExplicitLink<CGGameObject_C> >
{
};

/* 4910 */
struct __cppobj TInstanceAllocator<CORPSEANIMDATA> : CDataAllocator
{
};

/* 4911 */
struct __cppobj TSBaseArray<DEATTHUDSOUNDINFO>
{
  TSBaseArray<DEATTHUDSOUNDINFO>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  DEATTHUDSOUNDINFO *m_data;
};

/* 4912 */
struct /*VFT*/ TSBaseArray<DEATTHUDSOUNDINFO>_vtbl
{
  const char *(__thiscall *TSBaseArray<DEATTHUDSOUNDINFO>::MemFileName)(TSBaseArray<DEATTHUDSOUNDINFO> *this);
  int (__thiscall *TSBaseArray<DEATTHUDSOUNDINFO>::MemLineNo)(TSBaseArray<DEATTHUDSOUNDINFO> *this);
};

/* 4913 */
struct __cppobj DEATTHUDSOUNDINFO
{
  unsigned int landSound;
  unsigned int waterSound;
};

/* 4914 */
struct /*VFT*/ TSFixedArray<DEATTHUDSOUNDINFO>_vtbl
{
  const char *(__thiscall *TSBaseArray<DEATTHUDSOUNDINFO>::MemFileName)(struct TSFixedArray<DEATTHUDSOUNDINFO> *this);
  int (__thiscall *TSBaseArray<DEATTHUDSOUNDINFO>::MemLineNo)(struct TSFixedArray<DEATTHUDSOUNDINFO> *this);
};

/* 4915 */
struct __cppobj TSFixedArray<DEATTHUDSOUNDINFO> : TSBaseArray<DEATTHUDSOUNDINFO>
{
};

/* 4916 */
struct SEQFINISHINFO
{
  int (__fastcall *handler)(void *, CGUnit_C *);
  unsigned int callbackFlags;
  unsigned int flags;
};

/* 4917 */
struct $5894B90C3C92DD4992830DADB09913AD
{
  const char *animName;
  ANIMENUMERATION anim;
  int crit;
};

/* 4918 */
const struct $D08BC74C2ED5FAD3355F9D93B61979EA
{
  const char *animName;
  ANIMENUMERATION anim;
  int crit;
};

/* 4919 */
struct __cppobj TSLink<NAMEPLATEDESC>
{
  TSLink<NAMEPLATEDESC> *m_prevlink;
  NAMEPLATEDESC *m_next;
};

/* 4920 */
struct __cppobj TSHashObject<NAMEPLATEDESC,CHashKeyGUID>
{
  unsigned int m_hashval;
  __unaligned __declspec(align(1)) TSLink<NAMEPLATEDESC> m_linktoslot;
  __unaligned __declspec(align(1)) TSLink<NAMEPLATEDESC> m_linktofull;
  CHashKeyGUID m_key;
};

/* 4921 */
struct __cppobj __declspec(align(8)) NAMEPLATEDESC : TSHashObject<NAMEPLATEDESC,CHashKeyGUID>
{
  TSLink<NAMEPLATEDESC> m_sortLink;
  float screenSortOrder;
  CGUnit_C *unit;
  CGNamePlateFrame *namePlate;
  NTempest::C2Vector screenCoords;
};

/* 4922 */
struct __cppobj TSList<NAMEPLATEDESC,TSGetExplicitLink<NAMEPLATEDESC> >
{
  int m_linkoffset;
  TSLink<NAMEPLATEDESC> m_terminator;
};

/* 4923 */
struct __cppobj TSExplicitList<NAMEPLATEDESC,32> : TSList<NAMEPLATEDESC,TSGetExplicitLink<NAMEPLATEDESC> >
{
};

/* 4924 */
struct $F3EA3EB2FC1A482B4D67E45C76F5A96D
{
  unsigned __int8 hasMovement;
  float disengageDistance;
};

/* 4925 */
struct __cppobj TSLink<FREENAMEPLATE>
{
  TSLink<FREENAMEPLATE> *m_prevlink;
  FREENAMEPLATE *m_next;
};

/* 4926 */
struct __cppobj TSLinkedNode<FREENAMEPLATE>
{
  TSLink<FREENAMEPLATE> m_link;
};

/* 4927 */
struct __cppobj __unaligned __declspec(align(4)) FREENAMEPLATE : TSLinkedNode<FREENAMEPLATE>
{
  CGNamePlateFrame *namePlate;
};

/* 4928 */
struct __cppobj TSList<FREENAMEPLATE,TSGetLink<FREENAMEPLATE> >
{
  int m_linkoffset;
  TSLink<FREENAMEPLATE> m_terminator;
};

/* 4929 */
struct __cppobj TSExplicitList<NAMEPLATEDESC,-572662307> : TSList<NAMEPLATEDESC,TSGetExplicitLink<NAMEPLATEDESC> >
{
};

/* 4930 */
struct __cppobj TSBaseArray<TSExplicitList<NAMEPLATEDESC,-572662307> >
{
  TSBaseArray<TSExplicitList<NAMEPLATEDESC,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<NAMEPLATEDESC,-572662307> *m_data;
};

/* 4931 */
struct /*VFT*/ TSBaseArray<TSExplicitList<NAMEPLATEDESC,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<NAMEPLATEDESC,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<NAMEPLATEDESC,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<NAMEPLATEDESC,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<NAMEPLATEDESC,-572662307> > *this);
};

/* 4932 */
struct /*VFT*/ TSFixedArray<TSExplicitList<NAMEPLATEDESC,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<NAMEPLATEDESC,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<NAMEPLATEDESC,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<NAMEPLATEDESC,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<NAMEPLATEDESC,-572662307> > *this);
};

/* 4933 */
struct __cppobj TSFixedArray<TSExplicitList<NAMEPLATEDESC,-572662307> > : TSBaseArray<TSExplicitList<NAMEPLATEDESC,-572662307> >
{
};

/* 4934 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<NAMEPLATEDESC,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<NAMEPLATEDESC,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<NAMEPLATEDESC,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<NAMEPLATEDESC,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<NAMEPLATEDESC,-572662307> > *this);
};

/* 4935 */
struct __cppobj TSGrowableArray<TSExplicitList<NAMEPLATEDESC,-572662307> > : TSFixedArray<TSExplicitList<NAMEPLATEDESC,-572662307> >
{
  unsigned int m_chunk;
};

/* 4936 */
struct __cppobj TSHashTable<NAMEPLATEDESC,CHashKeyGUID>
{
  TSHashTable<NAMEPLATEDESC,CHashKeyGUID>_vtbl *__vftable /*VFT*/;
  TSExplicitList<NAMEPLATEDESC,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<NAMEPLATEDESC,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 4937 */
struct /*VFT*/ TSHashTable<NAMEPLATEDESC,CHashKeyGUID>_vtbl
{
  void (__thiscall *TSHashTable<NAMEPLATEDESC,CHashKeyGUID>::InternalDelete)(TSHashTable<NAMEPLATEDESC,CHashKeyGUID> *this, NAMEPLATEDESC *);
  NAMEPLATEDESC *(__thiscall *TSHashTable<NAMEPLATEDESC,CHashKeyGUID>::InternalNew)(TSHashTable<NAMEPLATEDESC,CHashKeyGUID> *this, TSExplicitList<NAMEPLATEDESC,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<NAMEPLATEDESC,CHashKeyGUID>)(TSHashTable<NAMEPLATEDESC,CHashKeyGUID> *this);
  void (__thiscall *TSHashTable<NAMEPLATEDESC,CHashKeyGUID>::Destroy)(TSHashTable<NAMEPLATEDESC,CHashKeyGUID> *this);
};

/* 4938 */
struct __cppobj INTERACTICONTYPEINFO
{
  HMODEL__ *model;
  STRINGLOOKUP string;
};

/* 4939 */
struct __cppobj TSLink<AuraDecayNode>
{
  TSLink<AuraDecayNode> *m_prevlink;
  AuraDecayNode *m_next;
};

/* 4940 */
struct __cppobj TSLinkedNode<AuraDecayNode>
{
  TSLink<AuraDecayNode> m_link;
};

/* 4941 */
struct __cppobj __declspec(align(8)) AuraDecayNode : TSLinkedNode<AuraDecayNode>
{
  AuraVisual visual;
  unsigned __int64 unit;
  UNITEFFECTATTACHPPOINT attach;
};

/* 4942 */
struct __cppobj TSList<AuraDecayNode,TSGetLink<AuraDecayNode> >
{
  int m_linkoffset;
  TSLink<AuraDecayNode> m_terminator;
};

/* 4943 */
struct __cppobj TInstanceAllocator<SPELLEFFECTDESC> : CDataAllocator
{
};

/* 4944 */
struct __cppobj TInstanceAllocator<ANIMENDDATA> : CDataAllocator
{
};

/* 4945 */
struct __cppobj TInstanceAllocator<ANIMQUEUENODE> : CDataAllocator
{
};

/* 4946 */
struct __cppobj TInstanceAllocator<ACTIVEAURAINFO> : CDataAllocator
{
};

/* 4947 */
struct __cppobj TInstanceAllocator<ACTIVEATTACHMENTINFO> : CDataAllocator
{
};

/* 4948 */
struct __cppobj TInstanceAllocator<AuraDecayNode> : CDataAllocator
{
};

/* 4949 */
struct __cppobj TInstanceAllocator<IMPACTEFFECTDESC> : CDataAllocator
{
};

/* 4950 */
struct __cppobj UnitAnimationInfo
{
  unsigned int state;
  const char *name;
  unsigned int flags;
  int basePriority;
  int priorityOffset;
  unsigned int statePreempts;
};

/* 4951 */
struct __cppobj CGUnit_C::AddWorldText::WORLDTEXTINFO
{
  const char *string;
  WORLDTEXTTYPE type;
};

/* 4952 */
struct __cppobj TSStackArray<QUESTGIVEREMOTENODE>
{
  unsigned int m_maxCount;
  unsigned int m_count;
  QUESTGIVEREMOTENODE *m_data;
};

/* 4953 */
struct __cppobj CGGameObject_C_Type_Null : CGGameObject_C_TypeBase
{
};

/* 4954 */
struct /*VFT*/ CGGameObject_C_Type_Null_vtbl
{
  void (__thiscall *~CGGameObject_C_Type_Null)(CGGameObject_C_Type_Null *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanHighlight)(struct CGGameObject_C_Type_Null *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanChangeCursor)(struct CGGameObject_C_Type_Null *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUse)(struct CGGameObject_C_Type_Null *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUseNow)(struct CGGameObject_C_Type_Null *this, GAME_ERROR_TYPE *);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::Use)(struct CGGameObject_C_Type_Null *this, const unsigned __int64 *);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateState)(struct CGGameObject_C_Type_Null *this, int, int);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimEvent)(struct CGGameObject_C_Type_Null *this, const char *, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimFinished)(struct CGGameObject_C_Type_Null *this);
  const char *(__thiscall *CGGameObject_C_TypeBase::DebugStatus)(struct CGGameObject_C_Type_Null *this);
  void (__thiscall *CGGameObject_C_TypeBase::ActivateCustomAnim)(struct CGGameObject_C_Type_Null *this, unsigned int);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetPosition)(struct CGGameObject_C_Type_Null *this, NTempest::C3Vector *result);
  float (__thiscall *CGGameObject_C_TypeBase::GetFacing)(struct CGGameObject_C_Type_Null *this);
  void (__thiscall *CGGameObject_C_TypeBase::AddPassenger)(struct CGGameObject_C_Type_Null *this, CMovementData *);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetCurrentMoveVector)(struct CGGameObject_C_Type_Null *this, NTempest::C3Vector *result);
  int (__thiscall *CGGameObject_C_TypeBase::IsPointInside)(struct CGGameObject_C_Type_Null *this, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::PostInit)(struct CGGameObject_C_Type_Null *this);
  void (__thiscall *CGGameObject_C_TypeBase::Reenable)(struct CGGameObject_C_Type_Null *this);
  void (__thiscall *CGGameObject_C_TypeBase::Disable)(struct CGGameObject_C_Type_Null *this, int);
  void (__thiscall *CGGameObject_C_TypeBase::PostReenable)(struct CGGameObject_C_Type_Null *this);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateMovement)(struct CGGameObject_C_Type_Null *this, unsigned int, float);
  void (__thiscall *CGGameObject_C_TypeBase::ModelJustLoaded)(struct CGGameObject_C_Type_Null *this);
  void (__thiscall *CGGameObject_C_TypeBase::StartInteraction)(struct CGGameObject_C_Type_Null *this);
  void (__thiscall *CGGameObject_C_TypeBase::CloseInteraction)(struct CGGameObject_C_Type_Null *this);
};

/* 4955 */
struct __declspec(align(2)) StateAnimInfo
{
  unsigned int seq;
  unsigned __int8 reverse;
  unsigned __int8 setAtEnd;
  unsigned __int8 neverUseFallback;
};

/* 4956 */
struct __cppobj CGGameObject_C_TypeAnimated : CGGameObject_C_TypeBase
{
  unsigned int m_animState;
  unsigned __int8 m_useFallbackAnim[11];
  Sound *m_loopingSound;
  unsigned int m_animPresent;
};

/* 4957 */
struct /*VFT*/ CGGameObject_C_TypeAnimated_vtbl
{
  void (__thiscall *CGGameObject_C_TypeAnimated::ModelJustLoaded)(CGGameObject_C_TypeAnimated *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanHighlight)(struct CGGameObject_C_TypeAnimated *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanChangeCursor)(struct CGGameObject_C_TypeAnimated *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUse)(struct CGGameObject_C_TypeAnimated *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUseNow)(struct CGGameObject_C_TypeAnimated *this, GAME_ERROR_TYPE *);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::Use)(struct CGGameObject_C_TypeAnimated *this, const unsigned __int64 *);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateState)(struct CGGameObject_C_TypeAnimated *this, int, int);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimEvent)(struct CGGameObject_C_TypeAnimated *this, const char *, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimFinished)(struct CGGameObject_C_TypeAnimated *this);
  const char *(__thiscall *CGGameObject_C_TypeBase::DebugStatus)(struct CGGameObject_C_TypeAnimated *this);
  void (__thiscall *CGGameObject_C_TypeBase::ActivateCustomAnim)(struct CGGameObject_C_TypeAnimated *this, unsigned int);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetPosition)(struct CGGameObject_C_TypeAnimated *this, NTempest::C3Vector *result);
  float (__thiscall *CGGameObject_C_TypeBase::GetFacing)(struct CGGameObject_C_TypeAnimated *this);
  void (__thiscall *CGGameObject_C_TypeBase::AddPassenger)(struct CGGameObject_C_TypeAnimated *this, CMovementData *);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetCurrentMoveVector)(struct CGGameObject_C_TypeAnimated *this, NTempest::C3Vector *result);
  int (__thiscall *CGGameObject_C_TypeBase::IsPointInside)(struct CGGameObject_C_TypeAnimated *this, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::PostInit)(struct CGGameObject_C_TypeAnimated *this);
  void (__thiscall *CGGameObject_C_TypeBase::Reenable)(struct CGGameObject_C_TypeAnimated *this);
  void (__thiscall *CGGameObject_C_TypeBase::Disable)(struct CGGameObject_C_TypeAnimated *this, int);
  void (__thiscall *CGGameObject_C_TypeBase::PostReenable)(struct CGGameObject_C_TypeAnimated *this);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateMovement)(struct CGGameObject_C_TypeAnimated *this, unsigned int, float);
  void (__thiscall *CGGameObject_C_TypeBase::ModelJustLoaded)(struct CGGameObject_C_TypeAnimated *this);
  void (__thiscall *CGGameObject_C_TypeBase::StartInteraction)(struct CGGameObject_C_TypeAnimated *this);
  void (__thiscall *CGGameObject_C_TypeBase::CloseInteraction)(struct CGGameObject_C_TypeAnimated *this);
  void (__thiscall *CGGameObject_C_TypeAnimated::UpdateAnimState)(CGGameObject_C_TypeAnimated *this, unsigned int);
};

/* 4958 */
struct __cppobj CGGameObject_C_Type_Door : CGGameObject_C_TypeAnimated
{
};

/* 4959 */
struct /*VFT*/ CGGameObject_C_Type_Door_vtbl
{
  void (__thiscall *~CGGameObject_C_Type_Door)(CGGameObject_C_Type_Door *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanHighlight)(struct CGGameObject_C_Type_Door *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanChangeCursor)(struct CGGameObject_C_Type_Door *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUse)(struct CGGameObject_C_Type_Door *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUseNow)(struct CGGameObject_C_Type_Door *this, GAME_ERROR_TYPE *);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::Use)(struct CGGameObject_C_Type_Door *this, const unsigned __int64 *);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateState)(struct CGGameObject_C_Type_Door *this, int, int);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimEvent)(struct CGGameObject_C_Type_Door *this, const char *, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimFinished)(struct CGGameObject_C_Type_Door *this);
  const char *(__thiscall *CGGameObject_C_TypeBase::DebugStatus)(struct CGGameObject_C_Type_Door *this);
  void (__thiscall *CGGameObject_C_TypeBase::ActivateCustomAnim)(struct CGGameObject_C_Type_Door *this, unsigned int);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetPosition)(struct CGGameObject_C_Type_Door *this, NTempest::C3Vector *result);
  float (__thiscall *CGGameObject_C_TypeBase::GetFacing)(struct CGGameObject_C_Type_Door *this);
  void (__thiscall *CGGameObject_C_TypeBase::AddPassenger)(struct CGGameObject_C_Type_Door *this, CMovementData *);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetCurrentMoveVector)(struct CGGameObject_C_Type_Door *this, NTempest::C3Vector *result);
  int (__thiscall *CGGameObject_C_TypeBase::IsPointInside)(struct CGGameObject_C_Type_Door *this, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::PostInit)(struct CGGameObject_C_Type_Door *this);
  void (__thiscall *CGGameObject_C_TypeBase::Reenable)(struct CGGameObject_C_Type_Door *this);
  void (__thiscall *CGGameObject_C_TypeBase::Disable)(struct CGGameObject_C_Type_Door *this, int);
  void (__thiscall *CGGameObject_C_TypeBase::PostReenable)(struct CGGameObject_C_Type_Door *this);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateMovement)(struct CGGameObject_C_Type_Door *this, unsigned int, float);
  void (__thiscall *CGGameObject_C_TypeBase::ModelJustLoaded)(struct CGGameObject_C_Type_Door *this);
  void (__thiscall *CGGameObject_C_TypeBase::StartInteraction)(struct CGGameObject_C_Type_Door *this);
  void (__thiscall *CGGameObject_C_TypeBase::CloseInteraction)(struct CGGameObject_C_Type_Door *this);
  void (__thiscall *CGGameObject_C_TypeAnimated::UpdateAnimState)(struct CGGameObject_C_Type_Door *this, unsigned int);
};

/* 4960 */
struct __cppobj CGGameObject_C_Type_Button : CGGameObject_C_TypeAnimated
{
};

/* 4961 */
struct /*VFT*/ CGGameObject_C_Type_Button_vtbl
{
  void (__thiscall *~CGGameObject_C_Type_Button)(CGGameObject_C_Type_Button *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanHighlight)(struct CGGameObject_C_Type_Button *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanChangeCursor)(struct CGGameObject_C_Type_Button *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUse)(struct CGGameObject_C_Type_Button *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUseNow)(struct CGGameObject_C_Type_Button *this, GAME_ERROR_TYPE *);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::Use)(struct CGGameObject_C_Type_Button *this, const unsigned __int64 *);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateState)(struct CGGameObject_C_Type_Button *this, int, int);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimEvent)(struct CGGameObject_C_Type_Button *this, const char *, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimFinished)(struct CGGameObject_C_Type_Button *this);
  const char *(__thiscall *CGGameObject_C_TypeBase::DebugStatus)(struct CGGameObject_C_Type_Button *this);
  void (__thiscall *CGGameObject_C_TypeBase::ActivateCustomAnim)(struct CGGameObject_C_Type_Button *this, unsigned int);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetPosition)(struct CGGameObject_C_Type_Button *this, NTempest::C3Vector *result);
  float (__thiscall *CGGameObject_C_TypeBase::GetFacing)(struct CGGameObject_C_Type_Button *this);
  void (__thiscall *CGGameObject_C_TypeBase::AddPassenger)(struct CGGameObject_C_Type_Button *this, CMovementData *);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetCurrentMoveVector)(struct CGGameObject_C_Type_Button *this, NTempest::C3Vector *result);
  int (__thiscall *CGGameObject_C_TypeBase::IsPointInside)(struct CGGameObject_C_Type_Button *this, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::PostInit)(struct CGGameObject_C_Type_Button *this);
  void (__thiscall *CGGameObject_C_TypeBase::Reenable)(struct CGGameObject_C_Type_Button *this);
  void (__thiscall *CGGameObject_C_TypeBase::Disable)(struct CGGameObject_C_Type_Button *this, int);
  void (__thiscall *CGGameObject_C_TypeBase::PostReenable)(struct CGGameObject_C_Type_Button *this);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateMovement)(struct CGGameObject_C_Type_Button *this, unsigned int, float);
  void (__thiscall *CGGameObject_C_TypeBase::ModelJustLoaded)(struct CGGameObject_C_Type_Button *this);
  void (__thiscall *CGGameObject_C_TypeBase::StartInteraction)(struct CGGameObject_C_Type_Button *this);
  void (__thiscall *CGGameObject_C_TypeBase::CloseInteraction)(struct CGGameObject_C_Type_Button *this);
  void (__thiscall *CGGameObject_C_TypeAnimated::UpdateAnimState)(struct CGGameObject_C_Type_Button *this, unsigned int);
};

/* 4962 */
struct __cppobj CGGameObject_C_Type_Chest : CGGameObject_C_TypeAnimated
{
};

/* 4963 */
struct /*VFT*/ CGGameObject_C_Type_Chest_vtbl
{
  void (__thiscall *~CGGameObject_C_Type_Chest)(CGGameObject_C_Type_Chest *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanHighlight)(struct CGGameObject_C_Type_Chest *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanChangeCursor)(struct CGGameObject_C_Type_Chest *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUse)(struct CGGameObject_C_Type_Chest *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUseNow)(struct CGGameObject_C_Type_Chest *this, GAME_ERROR_TYPE *);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::Use)(struct CGGameObject_C_Type_Chest *this, const unsigned __int64 *);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateState)(struct CGGameObject_C_Type_Chest *this, int, int);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimEvent)(struct CGGameObject_C_Type_Chest *this, const char *, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimFinished)(struct CGGameObject_C_Type_Chest *this);
  const char *(__thiscall *CGGameObject_C_TypeBase::DebugStatus)(struct CGGameObject_C_Type_Chest *this);
  void (__thiscall *CGGameObject_C_TypeBase::ActivateCustomAnim)(struct CGGameObject_C_Type_Chest *this, unsigned int);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetPosition)(struct CGGameObject_C_Type_Chest *this, NTempest::C3Vector *result);
  float (__thiscall *CGGameObject_C_TypeBase::GetFacing)(struct CGGameObject_C_Type_Chest *this);
  void (__thiscall *CGGameObject_C_TypeBase::AddPassenger)(struct CGGameObject_C_Type_Chest *this, CMovementData *);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetCurrentMoveVector)(struct CGGameObject_C_Type_Chest *this, NTempest::C3Vector *result);
  int (__thiscall *CGGameObject_C_TypeBase::IsPointInside)(struct CGGameObject_C_Type_Chest *this, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::PostInit)(struct CGGameObject_C_Type_Chest *this);
  void (__thiscall *CGGameObject_C_TypeBase::Reenable)(struct CGGameObject_C_Type_Chest *this);
  void (__thiscall *CGGameObject_C_TypeBase::Disable)(struct CGGameObject_C_Type_Chest *this, int);
  void (__thiscall *CGGameObject_C_TypeBase::PostReenable)(struct CGGameObject_C_Type_Chest *this);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateMovement)(struct CGGameObject_C_Type_Chest *this, unsigned int, float);
  void (__thiscall *CGGameObject_C_TypeBase::ModelJustLoaded)(struct CGGameObject_C_Type_Chest *this);
  void (__thiscall *CGGameObject_C_TypeBase::StartInteraction)(struct CGGameObject_C_Type_Chest *this);
  void (__thiscall *CGGameObject_C_TypeBase::CloseInteraction)(struct CGGameObject_C_Type_Chest *this);
  void (__thiscall *CGGameObject_C_TypeAnimated::UpdateAnimState)(struct CGGameObject_C_Type_Chest *this, unsigned int);
};

/* 4964 */
struct __cppobj CGGameObject_C_Type_Trap : CGGameObject_C_TypeAnimated
{
};

/* 4965 */
struct /*VFT*/ CGGameObject_C_Type_Trap_vtbl
{
  void (__thiscall *~CGGameObject_C_Type_Trap)(CGGameObject_C_Type_Trap *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanHighlight)(struct CGGameObject_C_Type_Trap *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanChangeCursor)(struct CGGameObject_C_Type_Trap *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUse)(struct CGGameObject_C_Type_Trap *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUseNow)(struct CGGameObject_C_Type_Trap *this, GAME_ERROR_TYPE *);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::Use)(struct CGGameObject_C_Type_Trap *this, const unsigned __int64 *);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateState)(struct CGGameObject_C_Type_Trap *this, int, int);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimEvent)(struct CGGameObject_C_Type_Trap *this, const char *, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimFinished)(struct CGGameObject_C_Type_Trap *this);
  const char *(__thiscall *CGGameObject_C_TypeBase::DebugStatus)(struct CGGameObject_C_Type_Trap *this);
  void (__thiscall *CGGameObject_C_TypeBase::ActivateCustomAnim)(struct CGGameObject_C_Type_Trap *this, unsigned int);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetPosition)(struct CGGameObject_C_Type_Trap *this, NTempest::C3Vector *result);
  float (__thiscall *CGGameObject_C_TypeBase::GetFacing)(struct CGGameObject_C_Type_Trap *this);
  void (__thiscall *CGGameObject_C_TypeBase::AddPassenger)(struct CGGameObject_C_Type_Trap *this, CMovementData *);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetCurrentMoveVector)(struct CGGameObject_C_Type_Trap *this, NTempest::C3Vector *result);
  int (__thiscall *CGGameObject_C_TypeBase::IsPointInside)(struct CGGameObject_C_Type_Trap *this, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::PostInit)(struct CGGameObject_C_Type_Trap *this);
  void (__thiscall *CGGameObject_C_TypeBase::Reenable)(struct CGGameObject_C_Type_Trap *this);
  void (__thiscall *CGGameObject_C_TypeBase::Disable)(struct CGGameObject_C_Type_Trap *this, int);
  void (__thiscall *CGGameObject_C_TypeBase::PostReenable)(struct CGGameObject_C_Type_Trap *this);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateMovement)(struct CGGameObject_C_Type_Trap *this, unsigned int, float);
  void (__thiscall *CGGameObject_C_TypeBase::ModelJustLoaded)(struct CGGameObject_C_Type_Trap *this);
  void (__thiscall *CGGameObject_C_TypeBase::StartInteraction)(struct CGGameObject_C_Type_Trap *this);
  void (__thiscall *CGGameObject_C_TypeBase::CloseInteraction)(struct CGGameObject_C_Type_Trap *this);
  void (__thiscall *CGGameObject_C_TypeAnimated::UpdateAnimState)(struct CGGameObject_C_Type_Trap *this, unsigned int);
};

/* 4966 */
struct __cppobj CGGameObject_C_Type_AreaDamage : CGGameObject_C_TypeAnimated
{
};

/* 4967 */
struct /*VFT*/ CGGameObject_C_Type_AreaDamage_vtbl
{
  void (__thiscall *~CGGameObject_C_Type_AreaDamage)(CGGameObject_C_Type_AreaDamage *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanHighlight)(struct CGGameObject_C_Type_AreaDamage *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanChangeCursor)(struct CGGameObject_C_Type_AreaDamage *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUse)(struct CGGameObject_C_Type_AreaDamage *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUseNow)(struct CGGameObject_C_Type_AreaDamage *this, GAME_ERROR_TYPE *);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::Use)(struct CGGameObject_C_Type_AreaDamage *this, const unsigned __int64 *);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateState)(struct CGGameObject_C_Type_AreaDamage *this, int, int);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimEvent)(struct CGGameObject_C_Type_AreaDamage *this, const char *, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimFinished)(struct CGGameObject_C_Type_AreaDamage *this);
  const char *(__thiscall *CGGameObject_C_TypeBase::DebugStatus)(struct CGGameObject_C_Type_AreaDamage *this);
  void (__thiscall *CGGameObject_C_TypeBase::ActivateCustomAnim)(struct CGGameObject_C_Type_AreaDamage *this, unsigned int);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetPosition)(struct CGGameObject_C_Type_AreaDamage *this, NTempest::C3Vector *result);
  float (__thiscall *CGGameObject_C_TypeBase::GetFacing)(struct CGGameObject_C_Type_AreaDamage *this);
  void (__thiscall *CGGameObject_C_TypeBase::AddPassenger)(struct CGGameObject_C_Type_AreaDamage *this, CMovementData *);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetCurrentMoveVector)(struct CGGameObject_C_Type_AreaDamage *this, NTempest::C3Vector *result);
  int (__thiscall *CGGameObject_C_TypeBase::IsPointInside)(struct CGGameObject_C_Type_AreaDamage *this, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::PostInit)(struct CGGameObject_C_Type_AreaDamage *this);
  void (__thiscall *CGGameObject_C_TypeBase::Reenable)(struct CGGameObject_C_Type_AreaDamage *this);
  void (__thiscall *CGGameObject_C_TypeBase::Disable)(struct CGGameObject_C_Type_AreaDamage *this, int);
  void (__thiscall *CGGameObject_C_TypeBase::PostReenable)(struct CGGameObject_C_Type_AreaDamage *this);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateMovement)(struct CGGameObject_C_Type_AreaDamage *this, unsigned int, float);
  void (__thiscall *CGGameObject_C_TypeBase::ModelJustLoaded)(struct CGGameObject_C_Type_AreaDamage *this);
  void (__thiscall *CGGameObject_C_TypeBase::StartInteraction)(struct CGGameObject_C_Type_AreaDamage *this);
  void (__thiscall *CGGameObject_C_TypeBase::CloseInteraction)(struct CGGameObject_C_Type_AreaDamage *this);
  void (__thiscall *CGGameObject_C_TypeAnimated::UpdateAnimState)(struct CGGameObject_C_Type_AreaDamage *this, unsigned int);
};

/* 4968 */
struct __cppobj CGGameObject_C_Type_QuestGiver : CGGameObject_C_TypeAnimated
{
};

/* 4969 */
struct /*VFT*/ CGGameObject_C_Type_QuestGiver_vtbl
{
  void (__thiscall *~CGGameObject_C_Type_QuestGiver)(CGGameObject_C_Type_QuestGiver *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanHighlight)(struct CGGameObject_C_Type_QuestGiver *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanChangeCursor)(struct CGGameObject_C_Type_QuestGiver *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUse)(struct CGGameObject_C_Type_QuestGiver *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUseNow)(struct CGGameObject_C_Type_QuestGiver *this, GAME_ERROR_TYPE *);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::Use)(struct CGGameObject_C_Type_QuestGiver *this, const unsigned __int64 *);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateState)(struct CGGameObject_C_Type_QuestGiver *this, int, int);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimEvent)(struct CGGameObject_C_Type_QuestGiver *this, const char *, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimFinished)(struct CGGameObject_C_Type_QuestGiver *this);
  const char *(__thiscall *CGGameObject_C_TypeBase::DebugStatus)(struct CGGameObject_C_Type_QuestGiver *this);
  void (__thiscall *CGGameObject_C_TypeBase::ActivateCustomAnim)(struct CGGameObject_C_Type_QuestGiver *this, unsigned int);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetPosition)(struct CGGameObject_C_Type_QuestGiver *this, NTempest::C3Vector *result);
  float (__thiscall *CGGameObject_C_TypeBase::GetFacing)(struct CGGameObject_C_Type_QuestGiver *this);
  void (__thiscall *CGGameObject_C_TypeBase::AddPassenger)(struct CGGameObject_C_Type_QuestGiver *this, CMovementData *);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetCurrentMoveVector)(struct CGGameObject_C_Type_QuestGiver *this, NTempest::C3Vector *result);
  int (__thiscall *CGGameObject_C_TypeBase::IsPointInside)(struct CGGameObject_C_Type_QuestGiver *this, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::PostInit)(struct CGGameObject_C_Type_QuestGiver *this);
  void (__thiscall *CGGameObject_C_TypeBase::Reenable)(struct CGGameObject_C_Type_QuestGiver *this);
  void (__thiscall *CGGameObject_C_TypeBase::Disable)(struct CGGameObject_C_Type_QuestGiver *this, int);
  void (__thiscall *CGGameObject_C_TypeBase::PostReenable)(struct CGGameObject_C_Type_QuestGiver *this);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateMovement)(struct CGGameObject_C_Type_QuestGiver *this, unsigned int, float);
  void (__thiscall *CGGameObject_C_TypeBase::ModelJustLoaded)(struct CGGameObject_C_Type_QuestGiver *this);
  void (__thiscall *CGGameObject_C_TypeBase::StartInteraction)(struct CGGameObject_C_Type_QuestGiver *this);
  void (__thiscall *CGGameObject_C_TypeBase::CloseInteraction)(struct CGGameObject_C_Type_QuestGiver *this);
  void (__thiscall *CGGameObject_C_TypeAnimated::UpdateAnimState)(struct CGGameObject_C_Type_QuestGiver *this, unsigned int);
};

/* 4970 */
struct __cppobj CGGameObject_C_Type_Binder : CGGameObject_C_TypeBase
{
};

/* 4971 */
struct /*VFT*/ CGGameObject_C_Type_Binder_vtbl
{
  void (__thiscall *~CGGameObject_C_Type_Binder)(CGGameObject_C_Type_Binder *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanHighlight)(struct CGGameObject_C_Type_Binder *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanChangeCursor)(struct CGGameObject_C_Type_Binder *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUse)(struct CGGameObject_C_Type_Binder *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUseNow)(struct CGGameObject_C_Type_Binder *this, GAME_ERROR_TYPE *);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::Use)(struct CGGameObject_C_Type_Binder *this, const unsigned __int64 *);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateState)(struct CGGameObject_C_Type_Binder *this, int, int);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimEvent)(struct CGGameObject_C_Type_Binder *this, const char *, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimFinished)(struct CGGameObject_C_Type_Binder *this);
  const char *(__thiscall *CGGameObject_C_TypeBase::DebugStatus)(struct CGGameObject_C_Type_Binder *this);
  void (__thiscall *CGGameObject_C_TypeBase::ActivateCustomAnim)(struct CGGameObject_C_Type_Binder *this, unsigned int);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetPosition)(struct CGGameObject_C_Type_Binder *this, NTempest::C3Vector *result);
  float (__thiscall *CGGameObject_C_TypeBase::GetFacing)(struct CGGameObject_C_Type_Binder *this);
  void (__thiscall *CGGameObject_C_TypeBase::AddPassenger)(struct CGGameObject_C_Type_Binder *this, CMovementData *);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetCurrentMoveVector)(struct CGGameObject_C_Type_Binder *this, NTempest::C3Vector *result);
  int (__thiscall *CGGameObject_C_TypeBase::IsPointInside)(struct CGGameObject_C_Type_Binder *this, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::PostInit)(struct CGGameObject_C_Type_Binder *this);
  void (__thiscall *CGGameObject_C_TypeBase::Reenable)(struct CGGameObject_C_Type_Binder *this);
  void (__thiscall *CGGameObject_C_TypeBase::Disable)(struct CGGameObject_C_Type_Binder *this, int);
  void (__thiscall *CGGameObject_C_TypeBase::PostReenable)(struct CGGameObject_C_Type_Binder *this);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateMovement)(struct CGGameObject_C_Type_Binder *this, unsigned int, float);
  void (__thiscall *CGGameObject_C_TypeBase::ModelJustLoaded)(struct CGGameObject_C_Type_Binder *this);
  void (__thiscall *CGGameObject_C_TypeBase::StartInteraction)(struct CGGameObject_C_Type_Binder *this);
  void (__thiscall *CGGameObject_C_TypeBase::CloseInteraction)(struct CGGameObject_C_Type_Binder *this);
};

/* 4972 */
struct __cppobj CGGameObject_C_Type_Generic : CGGameObject_C_TypeBase
{
};

/* 4973 */
struct /*VFT*/ CGGameObject_C_Type_Generic_vtbl
{
  void (__thiscall *~CGGameObject_C_Type_Generic)(CGGameObject_C_Type_Generic *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanHighlight)(struct CGGameObject_C_Type_Generic *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanChangeCursor)(struct CGGameObject_C_Type_Generic *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUse)(struct CGGameObject_C_Type_Generic *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUseNow)(struct CGGameObject_C_Type_Generic *this, GAME_ERROR_TYPE *);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::Use)(struct CGGameObject_C_Type_Generic *this, const unsigned __int64 *);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateState)(struct CGGameObject_C_Type_Generic *this, int, int);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimEvent)(struct CGGameObject_C_Type_Generic *this, const char *, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimFinished)(struct CGGameObject_C_Type_Generic *this);
  const char *(__thiscall *CGGameObject_C_TypeBase::DebugStatus)(struct CGGameObject_C_Type_Generic *this);
  void (__thiscall *CGGameObject_C_TypeBase::ActivateCustomAnim)(struct CGGameObject_C_Type_Generic *this, unsigned int);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetPosition)(struct CGGameObject_C_Type_Generic *this, NTempest::C3Vector *result);
  float (__thiscall *CGGameObject_C_TypeBase::GetFacing)(struct CGGameObject_C_Type_Generic *this);
  void (__thiscall *CGGameObject_C_TypeBase::AddPassenger)(struct CGGameObject_C_Type_Generic *this, CMovementData *);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetCurrentMoveVector)(struct CGGameObject_C_Type_Generic *this, NTempest::C3Vector *result);
  int (__thiscall *CGGameObject_C_TypeBase::IsPointInside)(struct CGGameObject_C_Type_Generic *this, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::PostInit)(struct CGGameObject_C_Type_Generic *this);
  void (__thiscall *CGGameObject_C_TypeBase::Reenable)(struct CGGameObject_C_Type_Generic *this);
  void (__thiscall *CGGameObject_C_TypeBase::Disable)(struct CGGameObject_C_Type_Generic *this, int);
  void (__thiscall *CGGameObject_C_TypeBase::PostReenable)(struct CGGameObject_C_Type_Generic *this);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateMovement)(struct CGGameObject_C_Type_Generic *this, unsigned int, float);
  void (__thiscall *CGGameObject_C_TypeBase::ModelJustLoaded)(struct CGGameObject_C_Type_Generic *this);
  void (__thiscall *CGGameObject_C_TypeBase::StartInteraction)(struct CGGameObject_C_Type_Generic *this);
  void (__thiscall *CGGameObject_C_TypeBase::CloseInteraction)(struct CGGameObject_C_Type_Generic *this);
};

/* 4974 */
struct __cppobj CGGameObject_C_Type_MapObj : CGGameObject_C_TypeBase
{
  unsigned int m_objectId;
};

/* 4975 */
struct /*VFT*/ CGGameObject_C_Type_MapObj_vtbl
{
  unsigned __int8 (__thiscall *CGGameObject_C_Type_MapObj::CanUse)(CGGameObject_C_Type_MapObj *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanHighlight)(struct CGGameObject_C_Type_MapObj *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanChangeCursor)(struct CGGameObject_C_Type_MapObj *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUse)(struct CGGameObject_C_Type_MapObj *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUseNow)(struct CGGameObject_C_Type_MapObj *this, GAME_ERROR_TYPE *);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::Use)(struct CGGameObject_C_Type_MapObj *this, const unsigned __int64 *);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateState)(struct CGGameObject_C_Type_MapObj *this, int, int);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimEvent)(struct CGGameObject_C_Type_MapObj *this, const char *, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimFinished)(struct CGGameObject_C_Type_MapObj *this);
  const char *(__thiscall *CGGameObject_C_TypeBase::DebugStatus)(struct CGGameObject_C_Type_MapObj *this);
  void (__thiscall *CGGameObject_C_TypeBase::ActivateCustomAnim)(struct CGGameObject_C_Type_MapObj *this, unsigned int);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetPosition)(struct CGGameObject_C_Type_MapObj *this, NTempest::C3Vector *result);
  float (__thiscall *CGGameObject_C_TypeBase::GetFacing)(struct CGGameObject_C_Type_MapObj *this);
  void (__thiscall *CGGameObject_C_TypeBase::AddPassenger)(struct CGGameObject_C_Type_MapObj *this, CMovementData *);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetCurrentMoveVector)(struct CGGameObject_C_Type_MapObj *this, NTempest::C3Vector *result);
  int (__thiscall *CGGameObject_C_TypeBase::IsPointInside)(struct CGGameObject_C_Type_MapObj *this, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::PostInit)(struct CGGameObject_C_Type_MapObj *this);
  void (__thiscall *CGGameObject_C_TypeBase::Reenable)(struct CGGameObject_C_Type_MapObj *this);
  void (__thiscall *CGGameObject_C_TypeBase::Disable)(struct CGGameObject_C_Type_MapObj *this, int);
  void (__thiscall *CGGameObject_C_TypeBase::PostReenable)(struct CGGameObject_C_Type_MapObj *this);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateMovement)(struct CGGameObject_C_Type_MapObj *this, unsigned int, float);
  void (__thiscall *CGGameObject_C_TypeBase::ModelJustLoaded)(struct CGGameObject_C_Type_MapObj *this);
  void (__thiscall *CGGameObject_C_TypeBase::StartInteraction)(struct CGGameObject_C_Type_MapObj *this);
  void (__thiscall *CGGameObject_C_TypeBase::CloseInteraction)(struct CGGameObject_C_Type_MapObj *this);
};

/* 4977 */
struct __cppobj TSExplicitList<CMovementData,8> : TSList<CMovementData,TSGetExplicitLink<CMovementData> >
{
};

/* 4976 */
struct __cppobj CGGameObject_C_Type_MapObjTransport : CGGameObject_C_Type_MapObj
{
  TSExplicitList<CMovementData,8> m_passengers;
  NTempest::C3Spline_CatmullRom m_path[2];
  unsigned int m_tripTime[2];
  NTempest::C3Vector m_position;
  float m_facing;
};

/* 4978 */
struct /*VFT*/ CGGameObject_C_Type_MapObjTransport_vtbl
{
  int (__thiscall *CGGameObject_C_Type_MapObjTransport::IsPointInside)(CGGameObject_C_Type_MapObjTransport *this, const NTempest::C3Vector *);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanHighlight)(struct CGGameObject_C_Type_MapObjTransport *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanChangeCursor)(struct CGGameObject_C_Type_MapObjTransport *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUse)(struct CGGameObject_C_Type_MapObjTransport *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUseNow)(struct CGGameObject_C_Type_MapObjTransport *this, GAME_ERROR_TYPE *);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::Use)(struct CGGameObject_C_Type_MapObjTransport *this, const unsigned __int64 *);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateState)(struct CGGameObject_C_Type_MapObjTransport *this, int, int);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimEvent)(struct CGGameObject_C_Type_MapObjTransport *this, const char *, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimFinished)(struct CGGameObject_C_Type_MapObjTransport *this);
  const char *(__thiscall *CGGameObject_C_TypeBase::DebugStatus)(struct CGGameObject_C_Type_MapObjTransport *this);
  void (__thiscall *CGGameObject_C_TypeBase::ActivateCustomAnim)(struct CGGameObject_C_Type_MapObjTransport *this, unsigned int);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetPosition)(struct CGGameObject_C_Type_MapObjTransport *this, NTempest::C3Vector *result);
  float (__thiscall *CGGameObject_C_TypeBase::GetFacing)(struct CGGameObject_C_Type_MapObjTransport *this);
  void (__thiscall *CGGameObject_C_TypeBase::AddPassenger)(struct CGGameObject_C_Type_MapObjTransport *this, CMovementData *);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetCurrentMoveVector)(struct CGGameObject_C_Type_MapObjTransport *this, NTempest::C3Vector *result);
  int (__thiscall *CGGameObject_C_TypeBase::IsPointInside)(struct CGGameObject_C_Type_MapObjTransport *this, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::PostInit)(struct CGGameObject_C_Type_MapObjTransport *this);
  void (__thiscall *CGGameObject_C_TypeBase::Reenable)(struct CGGameObject_C_Type_MapObjTransport *this);
  void (__thiscall *CGGameObject_C_TypeBase::Disable)(struct CGGameObject_C_Type_MapObjTransport *this, int);
  void (__thiscall *CGGameObject_C_TypeBase::PostReenable)(struct CGGameObject_C_Type_MapObjTransport *this);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateMovement)(struct CGGameObject_C_Type_MapObjTransport *this, unsigned int, float);
  void (__thiscall *CGGameObject_C_TypeBase::ModelJustLoaded)(struct CGGameObject_C_Type_MapObjTransport *this);
  void (__thiscall *CGGameObject_C_TypeBase::StartInteraction)(struct CGGameObject_C_Type_MapObjTransport *this);
  void (__thiscall *CGGameObject_C_TypeBase::CloseInteraction)(struct CGGameObject_C_Type_MapObjTransport *this);
};

/* 4979 */
struct __cppobj CGGameObject_C_Type_Chair : CGGameObject_C_TypeBase
{
  NTempest::C3Vector m_slotPositions[5];
};

/* 4980 */
struct /*VFT*/ CGGameObject_C_Type_Chair_vtbl
{
  void (__thiscall *~CGGameObject_C_Type_Chair)(CGGameObject_C_Type_Chair *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanHighlight)(struct CGGameObject_C_Type_Chair *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanChangeCursor)(struct CGGameObject_C_Type_Chair *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUse)(struct CGGameObject_C_Type_Chair *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUseNow)(struct CGGameObject_C_Type_Chair *this, GAME_ERROR_TYPE *);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::Use)(struct CGGameObject_C_Type_Chair *this, const unsigned __int64 *);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateState)(struct CGGameObject_C_Type_Chair *this, int, int);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimEvent)(struct CGGameObject_C_Type_Chair *this, const char *, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimFinished)(struct CGGameObject_C_Type_Chair *this);
  const char *(__thiscall *CGGameObject_C_TypeBase::DebugStatus)(struct CGGameObject_C_Type_Chair *this);
  void (__thiscall *CGGameObject_C_TypeBase::ActivateCustomAnim)(struct CGGameObject_C_Type_Chair *this, unsigned int);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetPosition)(struct CGGameObject_C_Type_Chair *this, NTempest::C3Vector *result);
  float (__thiscall *CGGameObject_C_TypeBase::GetFacing)(struct CGGameObject_C_Type_Chair *this);
  void (__thiscall *CGGameObject_C_TypeBase::AddPassenger)(struct CGGameObject_C_Type_Chair *this, CMovementData *);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetCurrentMoveVector)(struct CGGameObject_C_Type_Chair *this, NTempest::C3Vector *result);
  int (__thiscall *CGGameObject_C_TypeBase::IsPointInside)(struct CGGameObject_C_Type_Chair *this, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::PostInit)(struct CGGameObject_C_Type_Chair *this);
  void (__thiscall *CGGameObject_C_TypeBase::Reenable)(struct CGGameObject_C_Type_Chair *this);
  void (__thiscall *CGGameObject_C_TypeBase::Disable)(struct CGGameObject_C_Type_Chair *this, int);
  void (__thiscall *CGGameObject_C_TypeBase::PostReenable)(struct CGGameObject_C_Type_Chair *this);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateMovement)(struct CGGameObject_C_Type_Chair *this, unsigned int, float);
  void (__thiscall *CGGameObject_C_TypeBase::ModelJustLoaded)(struct CGGameObject_C_Type_Chair *this);
  void (__thiscall *CGGameObject_C_TypeBase::StartInteraction)(struct CGGameObject_C_Type_Chair *this);
  void (__thiscall *CGGameObject_C_TypeBase::CloseInteraction)(struct CGGameObject_C_Type_Chair *this);
};

/* 4981 */
struct __cppobj CGGameObject_C_Type_SpellFocus : CGGameObject_C_TypeAnimated
{
};

/* 4982 */
struct /*VFT*/ CGGameObject_C_Type_SpellFocus_vtbl
{
  void (__thiscall *~CGGameObject_C_Type_SpellFocus)(CGGameObject_C_Type_SpellFocus *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanHighlight)(struct CGGameObject_C_Type_SpellFocus *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanChangeCursor)(struct CGGameObject_C_Type_SpellFocus *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUse)(struct CGGameObject_C_Type_SpellFocus *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUseNow)(struct CGGameObject_C_Type_SpellFocus *this, GAME_ERROR_TYPE *);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::Use)(struct CGGameObject_C_Type_SpellFocus *this, const unsigned __int64 *);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateState)(struct CGGameObject_C_Type_SpellFocus *this, int, int);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimEvent)(struct CGGameObject_C_Type_SpellFocus *this, const char *, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimFinished)(struct CGGameObject_C_Type_SpellFocus *this);
  const char *(__thiscall *CGGameObject_C_TypeBase::DebugStatus)(struct CGGameObject_C_Type_SpellFocus *this);
  void (__thiscall *CGGameObject_C_TypeBase::ActivateCustomAnim)(struct CGGameObject_C_Type_SpellFocus *this, unsigned int);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetPosition)(struct CGGameObject_C_Type_SpellFocus *this, NTempest::C3Vector *result);
  float (__thiscall *CGGameObject_C_TypeBase::GetFacing)(struct CGGameObject_C_Type_SpellFocus *this);
  void (__thiscall *CGGameObject_C_TypeBase::AddPassenger)(struct CGGameObject_C_Type_SpellFocus *this, CMovementData *);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetCurrentMoveVector)(struct CGGameObject_C_Type_SpellFocus *this, NTempest::C3Vector *result);
  int (__thiscall *CGGameObject_C_TypeBase::IsPointInside)(struct CGGameObject_C_Type_SpellFocus *this, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::PostInit)(struct CGGameObject_C_Type_SpellFocus *this);
  void (__thiscall *CGGameObject_C_TypeBase::Reenable)(struct CGGameObject_C_Type_SpellFocus *this);
  void (__thiscall *CGGameObject_C_TypeBase::Disable)(struct CGGameObject_C_Type_SpellFocus *this, int);
  void (__thiscall *CGGameObject_C_TypeBase::PostReenable)(struct CGGameObject_C_Type_SpellFocus *this);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateMovement)(struct CGGameObject_C_Type_SpellFocus *this, unsigned int, float);
  void (__thiscall *CGGameObject_C_TypeBase::ModelJustLoaded)(struct CGGameObject_C_Type_SpellFocus *this);
  void (__thiscall *CGGameObject_C_TypeBase::StartInteraction)(struct CGGameObject_C_Type_SpellFocus *this);
  void (__thiscall *CGGameObject_C_TypeBase::CloseInteraction)(struct CGGameObject_C_Type_SpellFocus *this);
  void (__thiscall *CGGameObject_C_TypeAnimated::UpdateAnimState)(struct CGGameObject_C_Type_SpellFocus *this, unsigned int);
};

/* 4983 */
struct __cppobj CGGameObject_C_Type_Text : CGGameObject_C_TypeAnimated
{
};

/* 4984 */
struct /*VFT*/ CGGameObject_C_Type_Text_vtbl
{
  void (__thiscall *~CGGameObject_C_Type_Text)(CGGameObject_C_Type_Text *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanHighlight)(struct CGGameObject_C_Type_Text *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanChangeCursor)(struct CGGameObject_C_Type_Text *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUse)(struct CGGameObject_C_Type_Text *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUseNow)(struct CGGameObject_C_Type_Text *this, GAME_ERROR_TYPE *);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::Use)(struct CGGameObject_C_Type_Text *this, const unsigned __int64 *);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateState)(struct CGGameObject_C_Type_Text *this, int, int);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimEvent)(struct CGGameObject_C_Type_Text *this, const char *, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimFinished)(struct CGGameObject_C_Type_Text *this);
  const char *(__thiscall *CGGameObject_C_TypeBase::DebugStatus)(struct CGGameObject_C_Type_Text *this);
  void (__thiscall *CGGameObject_C_TypeBase::ActivateCustomAnim)(struct CGGameObject_C_Type_Text *this, unsigned int);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetPosition)(struct CGGameObject_C_Type_Text *this, NTempest::C3Vector *result);
  float (__thiscall *CGGameObject_C_TypeBase::GetFacing)(struct CGGameObject_C_Type_Text *this);
  void (__thiscall *CGGameObject_C_TypeBase::AddPassenger)(struct CGGameObject_C_Type_Text *this, CMovementData *);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetCurrentMoveVector)(struct CGGameObject_C_Type_Text *this, NTempest::C3Vector *result);
  int (__thiscall *CGGameObject_C_TypeBase::IsPointInside)(struct CGGameObject_C_Type_Text *this, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::PostInit)(struct CGGameObject_C_Type_Text *this);
  void (__thiscall *CGGameObject_C_TypeBase::Reenable)(struct CGGameObject_C_Type_Text *this);
  void (__thiscall *CGGameObject_C_TypeBase::Disable)(struct CGGameObject_C_Type_Text *this, int);
  void (__thiscall *CGGameObject_C_TypeBase::PostReenable)(struct CGGameObject_C_Type_Text *this);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateMovement)(struct CGGameObject_C_Type_Text *this, unsigned int, float);
  void (__thiscall *CGGameObject_C_TypeBase::ModelJustLoaded)(struct CGGameObject_C_Type_Text *this);
  void (__thiscall *CGGameObject_C_TypeBase::StartInteraction)(struct CGGameObject_C_Type_Text *this);
  void (__thiscall *CGGameObject_C_TypeBase::CloseInteraction)(struct CGGameObject_C_Type_Text *this);
  void (__thiscall *CGGameObject_C_TypeAnimated::UpdateAnimState)(struct CGGameObject_C_Type_Text *this, unsigned int);
};

/* 4985 */
struct __cppobj CGGameObject_C_Type_Goober : CGGameObject_C_TypeAnimated
{
};

/* 4986 */
struct /*VFT*/ CGGameObject_C_Type_Goober_vtbl
{
  void (__thiscall *~CGGameObject_C_Type_Goober)(CGGameObject_C_Type_Goober *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanHighlight)(struct CGGameObject_C_Type_Goober *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanChangeCursor)(struct CGGameObject_C_Type_Goober *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUse)(struct CGGameObject_C_Type_Goober *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUseNow)(struct CGGameObject_C_Type_Goober *this, GAME_ERROR_TYPE *);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::Use)(struct CGGameObject_C_Type_Goober *this, const unsigned __int64 *);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateState)(struct CGGameObject_C_Type_Goober *this, int, int);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimEvent)(struct CGGameObject_C_Type_Goober *this, const char *, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimFinished)(struct CGGameObject_C_Type_Goober *this);
  const char *(__thiscall *CGGameObject_C_TypeBase::DebugStatus)(struct CGGameObject_C_Type_Goober *this);
  void (__thiscall *CGGameObject_C_TypeBase::ActivateCustomAnim)(struct CGGameObject_C_Type_Goober *this, unsigned int);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetPosition)(struct CGGameObject_C_Type_Goober *this, NTempest::C3Vector *result);
  float (__thiscall *CGGameObject_C_TypeBase::GetFacing)(struct CGGameObject_C_Type_Goober *this);
  void (__thiscall *CGGameObject_C_TypeBase::AddPassenger)(struct CGGameObject_C_Type_Goober *this, CMovementData *);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetCurrentMoveVector)(struct CGGameObject_C_Type_Goober *this, NTempest::C3Vector *result);
  int (__thiscall *CGGameObject_C_TypeBase::IsPointInside)(struct CGGameObject_C_Type_Goober *this, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::PostInit)(struct CGGameObject_C_Type_Goober *this);
  void (__thiscall *CGGameObject_C_TypeBase::Reenable)(struct CGGameObject_C_Type_Goober *this);
  void (__thiscall *CGGameObject_C_TypeBase::Disable)(struct CGGameObject_C_Type_Goober *this, int);
  void (__thiscall *CGGameObject_C_TypeBase::PostReenable)(struct CGGameObject_C_Type_Goober *this);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateMovement)(struct CGGameObject_C_Type_Goober *this, unsigned int, float);
  void (__thiscall *CGGameObject_C_TypeBase::ModelJustLoaded)(struct CGGameObject_C_Type_Goober *this);
  void (__thiscall *CGGameObject_C_TypeBase::StartInteraction)(struct CGGameObject_C_Type_Goober *this);
  void (__thiscall *CGGameObject_C_TypeBase::CloseInteraction)(struct CGGameObject_C_Type_Goober *this);
  void (__thiscall *CGGameObject_C_TypeAnimated::UpdateAnimState)(struct CGGameObject_C_Type_Goober *this, unsigned int);
};

/* 4988 */
struct __cppobj TSBaseArray<NTempest::C4Plane>
{
  TSBaseArray<NTempest::C4Plane>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  NTempest::C4Plane *m_data;
};

/* 4991 */
struct __cppobj TSFixedArray<NTempest::C4Plane> : TSBaseArray<NTempest::C4Plane>
{
};

/* 4993 */
struct __cppobj TSGrowableArray<NTempest::C4Plane> : TSFixedArray<NTempest::C4Plane>
{
  unsigned int m_chunk;
};

/* 4987 */
struct __cppobj CGGameObject_C_Type_Transport : CGGameObject_C_TypeAnimated
{
  TSExplicitList<CMovementData,8> m_passengers;
  const TransportAnimationRec *m_keys;
  unsigned int m_numKeys;
  unsigned int m_currKey;
  NTempest::C3Vector m_position;
  float m_currSpeed;
  NTempest::C3Vector m_currDirection;
  TSGrowableArray<NTempest::C4Plane> m_interior;
};

/* 4989 */
struct /*VFT*/ TSBaseArray<NTempest::C4Plane>_vtbl
{
  const char *(__thiscall *TSBaseArray<NTempest::C4Plane>::MemFileName)(TSBaseArray<NTempest::C4Plane> *this);
  int (__thiscall *TSBaseArray<NTempest::C4Plane>::MemLineNo)(TSBaseArray<NTempest::C4Plane> *this);
};

/* 4990 */
struct /*VFT*/ TSFixedArray<NTempest::C4Plane>_vtbl
{
  const char *(__thiscall *TSBaseArray<NTempest::C4Plane>::MemFileName)(struct TSFixedArray<NTempest::C4Plane> *this);
  int (__thiscall *TSBaseArray<NTempest::C4Plane>::MemLineNo)(struct TSFixedArray<NTempest::C4Plane> *this);
};

/* 4992 */
struct /*VFT*/ TSGrowableArray<NTempest::C4Plane>_vtbl
{
  const char *(__thiscall *TSBaseArray<NTempest::C4Plane>::MemFileName)(struct TSGrowableArray<NTempest::C4Plane> *this);
  int (__thiscall *TSBaseArray<NTempest::C4Plane>::MemLineNo)(struct TSGrowableArray<NTempest::C4Plane> *this);
};

/* 4994 */
struct /*VFT*/ CGGameObject_C_Type_Transport_vtbl
{
  void (__thiscall *~CGGameObject_C_Type_Transport)(CGGameObject_C_Type_Transport *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanHighlight)(struct CGGameObject_C_Type_Transport *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanChangeCursor)(struct CGGameObject_C_Type_Transport *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUse)(struct CGGameObject_C_Type_Transport *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUseNow)(struct CGGameObject_C_Type_Transport *this, GAME_ERROR_TYPE *);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::Use)(struct CGGameObject_C_Type_Transport *this, const unsigned __int64 *);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateState)(struct CGGameObject_C_Type_Transport *this, int, int);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimEvent)(struct CGGameObject_C_Type_Transport *this, const char *, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimFinished)(struct CGGameObject_C_Type_Transport *this);
  const char *(__thiscall *CGGameObject_C_TypeBase::DebugStatus)(struct CGGameObject_C_Type_Transport *this);
  void (__thiscall *CGGameObject_C_TypeBase::ActivateCustomAnim)(struct CGGameObject_C_Type_Transport *this, unsigned int);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetPosition)(struct CGGameObject_C_Type_Transport *this, NTempest::C3Vector *result);
  float (__thiscall *CGGameObject_C_TypeBase::GetFacing)(struct CGGameObject_C_Type_Transport *this);
  void (__thiscall *CGGameObject_C_TypeBase::AddPassenger)(struct CGGameObject_C_Type_Transport *this, CMovementData *);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetCurrentMoveVector)(struct CGGameObject_C_Type_Transport *this, NTempest::C3Vector *result);
  int (__thiscall *CGGameObject_C_TypeBase::IsPointInside)(struct CGGameObject_C_Type_Transport *this, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::PostInit)(struct CGGameObject_C_Type_Transport *this);
  void (__thiscall *CGGameObject_C_TypeBase::Reenable)(struct CGGameObject_C_Type_Transport *this);
  void (__thiscall *CGGameObject_C_TypeBase::Disable)(struct CGGameObject_C_Type_Transport *this, int);
  void (__thiscall *CGGameObject_C_TypeBase::PostReenable)(struct CGGameObject_C_Type_Transport *this);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateMovement)(struct CGGameObject_C_Type_Transport *this, unsigned int, float);
  void (__thiscall *CGGameObject_C_TypeBase::ModelJustLoaded)(struct CGGameObject_C_Type_Transport *this);
  void (__thiscall *CGGameObject_C_TypeBase::StartInteraction)(struct CGGameObject_C_Type_Transport *this);
  void (__thiscall *CGGameObject_C_TypeBase::CloseInteraction)(struct CGGameObject_C_Type_Transport *this);
  void (__thiscall *CGGameObject_C_TypeAnimated::UpdateAnimState)(struct CGGameObject_C_Type_Transport *this, unsigned int);
};

/* 4995 */
struct __cppobj CGGameObject_C_Type_Camera : CGGameObject_C_TypeBase
{
};

/* 4996 */
struct /*VFT*/ CGGameObject_C_Type_Camera_vtbl
{
  void (__thiscall *~CGGameObject_C_Type_Camera)(CGGameObject_C_Type_Camera *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanHighlight)(struct CGGameObject_C_Type_Camera *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanChangeCursor)(struct CGGameObject_C_Type_Camera *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUse)(struct CGGameObject_C_Type_Camera *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUseNow)(struct CGGameObject_C_Type_Camera *this, GAME_ERROR_TYPE *);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::Use)(struct CGGameObject_C_Type_Camera *this, const unsigned __int64 *);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateState)(struct CGGameObject_C_Type_Camera *this, int, int);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimEvent)(struct CGGameObject_C_Type_Camera *this, const char *, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimFinished)(struct CGGameObject_C_Type_Camera *this);
  const char *(__thiscall *CGGameObject_C_TypeBase::DebugStatus)(struct CGGameObject_C_Type_Camera *this);
  void (__thiscall *CGGameObject_C_TypeBase::ActivateCustomAnim)(struct CGGameObject_C_Type_Camera *this, unsigned int);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetPosition)(struct CGGameObject_C_Type_Camera *this, NTempest::C3Vector *result);
  float (__thiscall *CGGameObject_C_TypeBase::GetFacing)(struct CGGameObject_C_Type_Camera *this);
  void (__thiscall *CGGameObject_C_TypeBase::AddPassenger)(struct CGGameObject_C_Type_Camera *this, CMovementData *);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetCurrentMoveVector)(struct CGGameObject_C_Type_Camera *this, NTempest::C3Vector *result);
  int (__thiscall *CGGameObject_C_TypeBase::IsPointInside)(struct CGGameObject_C_Type_Camera *this, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::PostInit)(struct CGGameObject_C_Type_Camera *this);
  void (__thiscall *CGGameObject_C_TypeBase::Reenable)(struct CGGameObject_C_Type_Camera *this);
  void (__thiscall *CGGameObject_C_TypeBase::Disable)(struct CGGameObject_C_Type_Camera *this, int);
  void (__thiscall *CGGameObject_C_TypeBase::PostReenable)(struct CGGameObject_C_Type_Camera *this);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateMovement)(struct CGGameObject_C_Type_Camera *this, unsigned int, float);
  void (__thiscall *CGGameObject_C_TypeBase::ModelJustLoaded)(struct CGGameObject_C_Type_Camera *this);
  void (__thiscall *CGGameObject_C_TypeBase::StartInteraction)(struct CGGameObject_C_Type_Camera *this);
  void (__thiscall *CGGameObject_C_TypeBase::CloseInteraction)(struct CGGameObject_C_Type_Camera *this);
};

/* 4997 */
struct __cppobj CGGameObject_C_Type_DuelArbiter : CGGameObject_C_TypeBase
{
};

/* 4998 */
struct /*VFT*/ CGGameObject_C_Type_DuelArbiter_vtbl
{
  void (__thiscall *~CGGameObject_C_Type_DuelArbiter)(CGGameObject_C_Type_DuelArbiter *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanHighlight)(struct CGGameObject_C_Type_DuelArbiter *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanChangeCursor)(struct CGGameObject_C_Type_DuelArbiter *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUse)(struct CGGameObject_C_Type_DuelArbiter *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUseNow)(struct CGGameObject_C_Type_DuelArbiter *this, GAME_ERROR_TYPE *);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::Use)(struct CGGameObject_C_Type_DuelArbiter *this, const unsigned __int64 *);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateState)(struct CGGameObject_C_Type_DuelArbiter *this, int, int);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimEvent)(struct CGGameObject_C_Type_DuelArbiter *this, const char *, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimFinished)(struct CGGameObject_C_Type_DuelArbiter *this);
  const char *(__thiscall *CGGameObject_C_TypeBase::DebugStatus)(struct CGGameObject_C_Type_DuelArbiter *this);
  void (__thiscall *CGGameObject_C_TypeBase::ActivateCustomAnim)(struct CGGameObject_C_Type_DuelArbiter *this, unsigned int);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetPosition)(struct CGGameObject_C_Type_DuelArbiter *this, NTempest::C3Vector *result);
  float (__thiscall *CGGameObject_C_TypeBase::GetFacing)(struct CGGameObject_C_Type_DuelArbiter *this);
  void (__thiscall *CGGameObject_C_TypeBase::AddPassenger)(struct CGGameObject_C_Type_DuelArbiter *this, CMovementData *);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetCurrentMoveVector)(struct CGGameObject_C_Type_DuelArbiter *this, NTempest::C3Vector *result);
  int (__thiscall *CGGameObject_C_TypeBase::IsPointInside)(struct CGGameObject_C_Type_DuelArbiter *this, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::PostInit)(struct CGGameObject_C_Type_DuelArbiter *this);
  void (__thiscall *CGGameObject_C_TypeBase::Reenable)(struct CGGameObject_C_Type_DuelArbiter *this);
  void (__thiscall *CGGameObject_C_TypeBase::Disable)(struct CGGameObject_C_Type_DuelArbiter *this, int);
  void (__thiscall *CGGameObject_C_TypeBase::PostReenable)(struct CGGameObject_C_Type_DuelArbiter *this);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateMovement)(struct CGGameObject_C_Type_DuelArbiter *this, unsigned int, float);
  void (__thiscall *CGGameObject_C_TypeBase::ModelJustLoaded)(struct CGGameObject_C_Type_DuelArbiter *this);
  void (__thiscall *CGGameObject_C_TypeBase::StartInteraction)(struct CGGameObject_C_Type_DuelArbiter *this);
  void (__thiscall *CGGameObject_C_TypeBase::CloseInteraction)(struct CGGameObject_C_Type_DuelArbiter *this);
};

/* 4999 */
struct __cppobj CGGameObject_C_Type_FishingNode : CGGameObject_C_TypeAnimated
{
};

/* 5000 */
struct /*VFT*/ CGGameObject_C_Type_FishingNode_vtbl
{
  void (__thiscall *~CGGameObject_C_Type_FishingNode)(CGGameObject_C_Type_FishingNode *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanHighlight)(struct CGGameObject_C_Type_FishingNode *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanChangeCursor)(struct CGGameObject_C_Type_FishingNode *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUse)(struct CGGameObject_C_Type_FishingNode *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUseNow)(struct CGGameObject_C_Type_FishingNode *this, GAME_ERROR_TYPE *);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::Use)(struct CGGameObject_C_Type_FishingNode *this, const unsigned __int64 *);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateState)(struct CGGameObject_C_Type_FishingNode *this, int, int);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimEvent)(struct CGGameObject_C_Type_FishingNode *this, const char *, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimFinished)(struct CGGameObject_C_Type_FishingNode *this);
  const char *(__thiscall *CGGameObject_C_TypeBase::DebugStatus)(struct CGGameObject_C_Type_FishingNode *this);
  void (__thiscall *CGGameObject_C_TypeBase::ActivateCustomAnim)(struct CGGameObject_C_Type_FishingNode *this, unsigned int);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetPosition)(struct CGGameObject_C_Type_FishingNode *this, NTempest::C3Vector *result);
  float (__thiscall *CGGameObject_C_TypeBase::GetFacing)(struct CGGameObject_C_Type_FishingNode *this);
  void (__thiscall *CGGameObject_C_TypeBase::AddPassenger)(struct CGGameObject_C_Type_FishingNode *this, CMovementData *);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetCurrentMoveVector)(struct CGGameObject_C_Type_FishingNode *this, NTempest::C3Vector *result);
  int (__thiscall *CGGameObject_C_TypeBase::IsPointInside)(struct CGGameObject_C_Type_FishingNode *this, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::PostInit)(struct CGGameObject_C_Type_FishingNode *this);
  void (__thiscall *CGGameObject_C_TypeBase::Reenable)(struct CGGameObject_C_Type_FishingNode *this);
  void (__thiscall *CGGameObject_C_TypeBase::Disable)(struct CGGameObject_C_Type_FishingNode *this, int);
  void (__thiscall *CGGameObject_C_TypeBase::PostReenable)(struct CGGameObject_C_Type_FishingNode *this);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateMovement)(struct CGGameObject_C_Type_FishingNode *this, unsigned int, float);
  void (__thiscall *CGGameObject_C_TypeBase::ModelJustLoaded)(struct CGGameObject_C_Type_FishingNode *this);
  void (__thiscall *CGGameObject_C_TypeBase::StartInteraction)(struct CGGameObject_C_Type_FishingNode *this);
  void (__thiscall *CGGameObject_C_TypeBase::CloseInteraction)(struct CGGameObject_C_Type_FishingNode *this);
  void (__thiscall *CGGameObject_C_TypeAnimated::UpdateAnimState)(struct CGGameObject_C_Type_FishingNode *this, unsigned int);
};

/* 5001 */
struct __cppobj CGGameObject_C_Type_Ritual : CGGameObject_C_TypeAnimated
{
};

/* 5002 */
struct /*VFT*/ CGGameObject_C_Type_Ritual_vtbl
{
  void (__thiscall *~CGGameObject_C_Type_Ritual)(CGGameObject_C_Type_Ritual *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanHighlight)(struct CGGameObject_C_Type_Ritual *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanChangeCursor)(struct CGGameObject_C_Type_Ritual *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUse)(struct CGGameObject_C_Type_Ritual *this);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::CanUseNow)(struct CGGameObject_C_Type_Ritual *this, GAME_ERROR_TYPE *);
  unsigned __int8 (__thiscall *CGGameObject_C_TypeBase::Use)(struct CGGameObject_C_Type_Ritual *this, const unsigned __int64 *);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateState)(struct CGGameObject_C_Type_Ritual *this, int, int);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimEvent)(struct CGGameObject_C_Type_Ritual *this, const char *, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::HandleAnimFinished)(struct CGGameObject_C_Type_Ritual *this);
  const char *(__thiscall *CGGameObject_C_TypeBase::DebugStatus)(struct CGGameObject_C_Type_Ritual *this);
  void (__thiscall *CGGameObject_C_TypeBase::ActivateCustomAnim)(struct CGGameObject_C_Type_Ritual *this, unsigned int);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetPosition)(struct CGGameObject_C_Type_Ritual *this, NTempest::C3Vector *result);
  float (__thiscall *CGGameObject_C_TypeBase::GetFacing)(struct CGGameObject_C_Type_Ritual *this);
  void (__thiscall *CGGameObject_C_TypeBase::AddPassenger)(struct CGGameObject_C_Type_Ritual *this, CMovementData *);
  NTempest::C3Vector *(__thiscall *CGGameObject_C_TypeBase::GetCurrentMoveVector)(struct CGGameObject_C_Type_Ritual *this, NTempest::C3Vector *result);
  int (__thiscall *CGGameObject_C_TypeBase::IsPointInside)(struct CGGameObject_C_Type_Ritual *this, const NTempest::C3Vector *);
  void (__thiscall *CGGameObject_C_TypeBase::PostInit)(struct CGGameObject_C_Type_Ritual *this);
  void (__thiscall *CGGameObject_C_TypeBase::Reenable)(struct CGGameObject_C_Type_Ritual *this);
  void (__thiscall *CGGameObject_C_TypeBase::Disable)(struct CGGameObject_C_Type_Ritual *this, int);
  void (__thiscall *CGGameObject_C_TypeBase::PostReenable)(struct CGGameObject_C_Type_Ritual *this);
  void (__thiscall *CGGameObject_C_TypeBase::UpdateMovement)(struct CGGameObject_C_Type_Ritual *this, unsigned int, float);
  void (__thiscall *CGGameObject_C_TypeBase::ModelJustLoaded)(struct CGGameObject_C_Type_Ritual *this);
  void (__thiscall *CGGameObject_C_TypeBase::StartInteraction)(struct CGGameObject_C_Type_Ritual *this);
  void (__thiscall *CGGameObject_C_TypeBase::CloseInteraction)(struct CGGameObject_C_Type_Ritual *this);
  void (__thiscall *CGGameObject_C_TypeAnimated::UpdateAnimState)(struct CGGameObject_C_Type_Ritual *this, unsigned int);
};

/* 5003 */
struct __cppobj TSBaseArray<InitialSpellStruct>
{
  TSBaseArray<InitialSpellStruct>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  InitialSpellStruct *m_data;
};

/* 5004 */
struct /*VFT*/ TSBaseArray<InitialSpellStruct>_vtbl
{
  const char *(__thiscall *TSBaseArray<InitialSpellStruct>::MemFileName)(TSBaseArray<InitialSpellStruct> *this);
  int (__thiscall *TSBaseArray<InitialSpellStruct>::MemLineNo)(TSBaseArray<InitialSpellStruct> *this);
};

/* 5005 */
struct InitialSpellStruct
{
  unsigned __int16 spellID;
  __int16 slot;
};

/* 5006 */
struct /*VFT*/ TSFixedArray<InitialSpellStruct>_vtbl
{
  const char *(__thiscall *TSBaseArray<InitialSpellStruct>::MemFileName)(struct TSFixedArray<InitialSpellStruct> *this);
  int (__thiscall *TSBaseArray<InitialSpellStruct>::MemLineNo)(struct TSFixedArray<InitialSpellStruct> *this);
};

/* 5007 */
struct __cppobj TSFixedArray<InitialSpellStruct> : TSBaseArray<InitialSpellStruct>
{
};

/* 5008 */
struct /*VFT*/ TSGrowableArray<InitialSpellStruct>_vtbl
{
  const char *(__thiscall *TSBaseArray<InitialSpellStruct>::MemFileName)(struct TSGrowableArray<InitialSpellStruct> *this);
  int (__thiscall *TSBaseArray<InitialSpellStruct>::MemLineNo)(struct TSGrowableArray<InitialSpellStruct> *this);
};

/* 5009 */
struct __cppobj TSGrowableArray<InitialSpellStruct> : TSFixedArray<InitialSpellStruct>
{
  unsigned int m_chunk;
};

/* 5010 */
struct __cppobj TSCArray<int,120>
{
  unsigned int m_count;
  int m_data[120];
};

/* 5011 */
struct LootItem
{
  unsigned int m_itemID;
  unsigned int m_displayID;
  unsigned int m_quantity;
};

/* 5012 */
struct __cppobj TSLink<ITEMEXPIRATION>
{
  TSLink<ITEMEXPIRATION> *m_prevlink;
  ITEMEXPIRATION *m_next;
};

/* 5013 */
struct __cppobj TSHashObject<ITEMEXPIRATION,CHashKeyGUID>
{
  unsigned int m_hashval;
  __unaligned __declspec(align(1)) TSLink<ITEMEXPIRATION> m_linktoslot;
  __unaligned __declspec(align(1)) TSLink<ITEMEXPIRATION> m_linktofull;
  CHashKeyGUID m_key;
};

/* 5014 */
struct __cppobj ITEMEXPIRATION : TSHashObject<ITEMEXPIRATION,CHashKeyGUID>
{
  int timeLeft;
  int enchantmentTimeLeft[5];
};

/* 5015 */
struct __cppobj TSList<ITEMEXPIRATION,TSGetExplicitLink<ITEMEXPIRATION> >
{
  int m_linkoffset;
  TSLink<ITEMEXPIRATION> m_terminator;
};

/* 5016 */
struct __cppobj TSExplicitList<ITEMEXPIRATION,-572662307> : TSList<ITEMEXPIRATION,TSGetExplicitLink<ITEMEXPIRATION> >
{
};

/* 5017 */
struct __cppobj TSBaseArray<TSExplicitList<ITEMEXPIRATION,-572662307> >
{
  TSBaseArray<TSExplicitList<ITEMEXPIRATION,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<ITEMEXPIRATION,-572662307> *m_data;
};

/* 5018 */
struct /*VFT*/ TSBaseArray<TSExplicitList<ITEMEXPIRATION,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<ITEMEXPIRATION,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<ITEMEXPIRATION,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<ITEMEXPIRATION,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<ITEMEXPIRATION,-572662307> > *this);
};

/* 5019 */
struct /*VFT*/ TSFixedArray<TSExplicitList<ITEMEXPIRATION,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<ITEMEXPIRATION,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<ITEMEXPIRATION,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<ITEMEXPIRATION,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<ITEMEXPIRATION,-572662307> > *this);
};

/* 5020 */
struct __cppobj TSFixedArray<TSExplicitList<ITEMEXPIRATION,-572662307> > : TSBaseArray<TSExplicitList<ITEMEXPIRATION,-572662307> >
{
};

/* 5021 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<ITEMEXPIRATION,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<ITEMEXPIRATION,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<ITEMEXPIRATION,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<ITEMEXPIRATION,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<ITEMEXPIRATION,-572662307> > *this);
};

/* 5022 */
struct __cppobj TSGrowableArray<TSExplicitList<ITEMEXPIRATION,-572662307> > : TSFixedArray<TSExplicitList<ITEMEXPIRATION,-572662307> >
{
  unsigned int m_chunk;
};

/* 5023 */
struct __cppobj TSHashTable<ITEMEXPIRATION,CHashKeyGUID>
{
  TSHashTable<ITEMEXPIRATION,CHashKeyGUID>_vtbl *__vftable /*VFT*/;
  TSExplicitList<ITEMEXPIRATION,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<ITEMEXPIRATION,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 5024 */
struct /*VFT*/ TSHashTable<ITEMEXPIRATION,CHashKeyGUID>_vtbl
{
  void (__thiscall *TSHashTable<ITEMEXPIRATION,CHashKeyGUID>::InternalDelete)(TSHashTable<ITEMEXPIRATION,CHashKeyGUID> *this, ITEMEXPIRATION *);
  ITEMEXPIRATION *(__thiscall *TSHashTable<ITEMEXPIRATION,CHashKeyGUID>::InternalNew)(TSHashTable<ITEMEXPIRATION,CHashKeyGUID> *this, TSExplicitList<ITEMEXPIRATION,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<ITEMEXPIRATION,CHashKeyGUID>)(TSHashTable<ITEMEXPIRATION,CHashKeyGUID> *this);
  void (__thiscall *TSHashTable<ITEMEXPIRATION,CHashKeyGUID>::Destroy)(TSHashTable<ITEMEXPIRATION,CHashKeyGUID> *this);
};

/* 5025 */
struct __cppobj TSBaseArray<ITEMSWAP>
{
  TSBaseArray<ITEMSWAP>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  ITEMSWAP *m_data;
};

/* 5026 */
struct /*VFT*/ TSBaseArray<ITEMSWAP>_vtbl
{
  const char *(__thiscall *TSBaseArray<ITEMSWAP>::MemFileName)(TSBaseArray<ITEMSWAP> *this);
  int (__thiscall *TSBaseArray<ITEMSWAP>::MemLineNo)(TSBaseArray<ITEMSWAP> *this);
};

/* 5027 */
struct __cppobj __declspec(align(8)) ITEMSWAP
{
  unsigned __int64 bagA;
  unsigned __int64 bagB;
  int slotA;
  int slotB;
  int pendingID;
};

/* 5028 */
struct /*VFT*/ TSFixedArray<ITEMSWAP>_vtbl
{
  const char *(__thiscall *TSBaseArray<ITEMSWAP>::MemFileName)(struct TSFixedArray<ITEMSWAP> *this);
  int (__thiscall *TSBaseArray<ITEMSWAP>::MemLineNo)(struct TSFixedArray<ITEMSWAP> *this);
};

/* 5029 */
struct __cppobj TSFixedArray<ITEMSWAP> : TSBaseArray<ITEMSWAP>
{
};

/* 5030 */
struct /*VFT*/ TSGrowableArray<ITEMSWAP>_vtbl
{
  const char *(__thiscall *TSBaseArray<ITEMSWAP>::MemFileName)(struct TSGrowableArray<ITEMSWAP> *this);
  int (__thiscall *TSBaseArray<ITEMSWAP>::MemLineNo)(struct TSGrowableArray<ITEMSWAP> *this);
};

/* 5031 */
struct __cppobj TSGrowableArray<ITEMSWAP> : TSFixedArray<ITEMSWAP>
{
  unsigned int m_chunk;
};

/* 5032 */
struct __cppobj TSLink<DEFERREDDAMAGE>
{
  TSLink<DEFERREDDAMAGE> *m_prevlink;
  DEFERREDDAMAGE *m_next;
};

/* 5033 */
struct __cppobj TSLinkedNode<DEFERREDDAMAGE>
{
  TSLink<DEFERREDDAMAGE> m_link;
};

/* 5034 */
struct __cppobj DEFERREDDAMAGE : TSLinkedNode<DEFERREDDAMAGE>
{
  int normal;
  unsigned int flags;
  unsigned int damage;
  unsigned __int64 victim;
};

/* 5035 */
struct __cppobj TSList<DEFERREDDAMAGE,TSGetLink<DEFERREDDAMAGE> >
{
  int m_linkoffset;
  TSLink<DEFERREDDAMAGE> m_terminator;
};

/* 5036 */
struct __cppobj TSLink<DEFERREDSPELLMISS>
{
  TSLink<DEFERREDSPELLMISS> *m_prevlink;
  DEFERREDSPELLMISS *m_next;
};

/* 5037 */
struct __cppobj TSLinkedNode<DEFERREDSPELLMISS>
{
  TSLink<DEFERREDSPELLMISS> m_link;
};

/* 5038 */
struct __cppobj DEFERREDSPELLMISS : TSLinkedNode<DEFERREDSPELLMISS>
{
  unsigned __int64 victim;
  MISS_REASON reason;
  int spellID;
};

/* 5039 */
struct __cppobj TSList<DEFERREDSPELLMISS,TSGetLink<DEFERREDSPELLMISS> >
{
  int m_linkoffset;
  TSLink<DEFERREDSPELLMISS> m_terminator;
};

/* 5040 */
struct __cppobj TInstanceAllocator<DEFERREDDAMAGE> : CDataAllocator
{
};

/* 5041 */
struct __cppobj TInstanceAllocator<DEFERREDSPELLMISS> : CDataAllocator
{
};

/* 5042 */
struct __cppobj TSStackArray<unsigned char>
{
  unsigned int m_maxCount;
  unsigned int m_count;
  unsigned __int8 *m_data;
};

/* 5043 */
struct RandomRollInfo
{
  int min;
  int max;
  int result;
};

/* 5044 */
struct __cppobj TSLink<INVENTORYART>
{
  TSLink<INVENTORYART> *m_prevlink;
  INVENTORYART *m_next;
};

/* 5045 */
struct __cppobj __declspec(align(4)) TSHashObject<INVENTORYART,HASHKEY_NONE>
{
  unsigned int m_hashval;
  __unaligned __declspec(align(1)) TSLink<INVENTORYART> m_linktoslot;
  __unaligned __declspec(align(1)) TSLink<INVENTORYART> m_linktofull;
  HASHKEY_NONE m_key;
};

/* 5046 */
struct __cppobj __unaligned __declspec(align(4)) INVENTORYART : TSHashObject<INVENTORYART,HASHKEY_NONE>
{
  char *textureName;
};

/* 5047 */
struct __cppobj TSList<INVENTORYART,TSGetExplicitLink<INVENTORYART> >
{
  int m_linkoffset;
  TSLink<INVENTORYART> m_terminator;
};

/* 5048 */
struct __cppobj TSExplicitList<INVENTORYART,-572662307> : TSList<INVENTORYART,TSGetExplicitLink<INVENTORYART> >
{
};

/* 5049 */
struct __cppobj TSBaseArray<TSExplicitList<INVENTORYART,-572662307> >
{
  TSBaseArray<TSExplicitList<INVENTORYART,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<INVENTORYART,-572662307> *m_data;
};

/* 5050 */
struct /*VFT*/ TSBaseArray<TSExplicitList<INVENTORYART,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<INVENTORYART,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<INVENTORYART,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<INVENTORYART,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<INVENTORYART,-572662307> > *this);
};

/* 5051 */
struct /*VFT*/ TSFixedArray<TSExplicitList<INVENTORYART,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<INVENTORYART,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<INVENTORYART,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<INVENTORYART,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<INVENTORYART,-572662307> > *this);
};

/* 5052 */
struct __cppobj TSFixedArray<TSExplicitList<INVENTORYART,-572662307> > : TSBaseArray<TSExplicitList<INVENTORYART,-572662307> >
{
};

/* 5053 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<INVENTORYART,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<INVENTORYART,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<INVENTORYART,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<INVENTORYART,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<INVENTORYART,-572662307> > *this);
};

/* 5054 */
struct __cppobj TSGrowableArray<TSExplicitList<INVENTORYART,-572662307> > : TSFixedArray<TSExplicitList<INVENTORYART,-572662307> >
{
  unsigned int m_chunk;
};

/* 5055 */
struct __cppobj TSHashTable<INVENTORYART,HASHKEY_NONE>
{
  TSHashTable<INVENTORYART,HASHKEY_NONE>_vtbl *__vftable /*VFT*/;
  TSExplicitList<INVENTORYART,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<INVENTORYART,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 5056 */
struct /*VFT*/ TSHashTable<INVENTORYART,HASHKEY_NONE>_vtbl
{
  void (__thiscall *TSHashTable<INVENTORYART,HASHKEY_NONE>::InternalDelete)(TSHashTable<INVENTORYART,HASHKEY_NONE> *this, INVENTORYART *);
  INVENTORYART *(__thiscall *TSHashTable<INVENTORYART,HASHKEY_NONE>::InternalNew)(TSHashTable<INVENTORYART,HASHKEY_NONE> *this, TSExplicitList<INVENTORYART,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<INVENTORYART,HASHKEY_NONE>)(TSHashTable<INVENTORYART,HASHKEY_NONE> *this);
  void (__thiscall *TSHashTable<INVENTORYART,HASHKEY_NONE>::Destroy)(TSHashTable<INVENTORYART,HASHKEY_NONE> *this);
};

/* 5057 */
struct __cppobj VideoHardwareRec
{
  int m_vendorID;
  int m_deviceID;
  int m_farclipIdx;
  int m_terrainLODDistIdx;
  int m_terrainShadowLOD;
  int m_detailDoodadDensityIdx;
  int m_detailDoodadAlpha;
  int m_animatingDoodadIdx;
  int m_trilinear;
  int m_numLights;
  int m_specularity;
  int m_waterLODIdx;
  int m_particleDensityIdx;
  int m_unitDrawDistIdx;
  int m_smallCullDistIdx;
  int m_resolutionIdx;
  int m_baseMipLevel;
  int m_oglPixelShader;
  int m_d3dPixelShader;
  int m_generatedID;
};

/* 5058 */
struct __cppobj WowClientDB<VideoHardwareRec>
{
  VideoHardwareRec *m_records;
  int m_numRecords;
  VideoHardwareRec **m_recordsById;
  int m_maxID;
  int m_loaded;
};

/* 5059 */
struct _PCI_VENTABLE
{
  unsigned __int16 VenId;
  char *VenShort;
  char *VenFull;
};

/* 5060 */
struct _PCI_CLASSCODETABLE
{
  unsigned __int8 BaseClass;
  unsigned __int8 SubClass;
  unsigned __int8 ProgIf;
  char *BaseDesc;
  char *SubDesc;
  char *ProgDesc;
};

/* 5061 */
struct CpuHardware
{
  unsigned int farclipIdx;
  unsigned int animatingDoodadIdx;
  unsigned int waterLODIdx;
  unsigned int particleDensityIdx;
  unsigned int smallCullDistIdx;
  unsigned int unitDrawDistIdx;
};

/* 5062 */
struct __declspec(align(4)) SoundHardware
{
  unsigned int numChannels;
  unsigned __int8 fivePointOne;
};

/* 5063 */
struct _PCI_DEVTABLE
{
  unsigned __int16 VenId;
  unsigned __int16 DevId;
  char *Chip;
  char *ChipDesc;
};

/* 5064 */
struct Hardware::Device
{
  unsigned __int16 vendorID;
  unsigned __int16 deviceID;
  unsigned int driverVersionHi;
  unsigned int driverVersionLo;
};

/* 5065 */
struct Hardware
{
  Hardware::Device videoDevice;
  Hardware::Device soundDevice;
  unsigned int cpuIdx;
  unsigned int videoIdx;
  unsigned int soundIdx;
  unsigned int memIdx;
  const VideoHardwareRec *videoHw;
  const CpuHardware *cpuHw;
  const SoundHardware *soundHw;
};

/* 5066 */
struct __declspec(align(4)) DefaultSettings
{
  float farClip;
  float terrainLODDist;
  unsigned int terrainShadowLOD;
  unsigned int detailDoodadDensity;
  unsigned int detailDoodadAlpha;
  unsigned __int8 animatingDoodads;
  unsigned __int8 trilinear;
  unsigned int numLights;
  unsigned __int8 specularity;
  unsigned int waterLOD;
  float particleDensity;
  float unitDrawDist;
  float smallCull;
  float distCull;
  const CGxFormat *format;
  unsigned int baseMipLevel;
  unsigned int numChannels;
  unsigned __int8 fivePointOne;
};

/* 5067 */
struct __cppobj TSLink<CONSOLECOMMAND>
{
  TSLink<CONSOLECOMMAND> *m_prevlink;
  CONSOLECOMMAND *m_next;
};

/* 5068 */
struct __cppobj TSHashObject<CONSOLECOMMAND,HASHKEY_CONSTSTRI>
{
  unsigned int m_hashval;
  __unaligned __declspec(align(1)) TSLink<CONSOLECOMMAND> m_linktoslot;
  __unaligned __declspec(align(1)) TSLink<CONSOLECOMMAND> m_linktofull;
  HASHKEY_CONSTSTRI m_key;
};

/* 5069 */
struct __cppobj __unaligned __declspec(align(4)) CONSOLECOMMAND : TSHashObject<CONSOLECOMMAND,HASHKEY_CONSTSTRI>
{
  int (__fastcall *m_handler)(const char *, const char *);
  const char *m_helpText;
  CATEGORY m_category;
};

/* 5070 */
struct __cppobj TSList<CONSOLECOMMAND,TSGetExplicitLink<CONSOLECOMMAND> >
{
  int m_linkoffset;
  TSLink<CONSOLECOMMAND> m_terminator;
};

/* 5071 */
struct __cppobj TSExplicitList<CONSOLECOMMAND,-572662307> : TSList<CONSOLECOMMAND,TSGetExplicitLink<CONSOLECOMMAND> >
{
};

/* 5072 */
struct __cppobj TSBaseArray<TSExplicitList<CONSOLECOMMAND,-572662307> >
{
  TSBaseArray<TSExplicitList<CONSOLECOMMAND,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<CONSOLECOMMAND,-572662307> *m_data;
};

/* 5073 */
struct /*VFT*/ TSBaseArray<TSExplicitList<CONSOLECOMMAND,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CONSOLECOMMAND,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<CONSOLECOMMAND,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CONSOLECOMMAND,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<CONSOLECOMMAND,-572662307> > *this);
};

/* 5074 */
struct /*VFT*/ TSFixedArray<TSExplicitList<CONSOLECOMMAND,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CONSOLECOMMAND,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<CONSOLECOMMAND,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CONSOLECOMMAND,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<CONSOLECOMMAND,-572662307> > *this);
};

/* 5075 */
struct __cppobj TSFixedArray<TSExplicitList<CONSOLECOMMAND,-572662307> > : TSBaseArray<TSExplicitList<CONSOLECOMMAND,-572662307> >
{
};

/* 5076 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<CONSOLECOMMAND,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CONSOLECOMMAND,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<CONSOLECOMMAND,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CONSOLECOMMAND,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<CONSOLECOMMAND,-572662307> > *this);
};

/* 5077 */
struct __cppobj TSGrowableArray<TSExplicitList<CONSOLECOMMAND,-572662307> > : TSFixedArray<TSExplicitList<CONSOLECOMMAND,-572662307> >
{
  unsigned int m_chunk;
};

/* 5078 */
struct __cppobj TSHashTable<CONSOLECOMMAND,HASHKEY_CONSTSTRI>
{
  TSHashTable<CONSOLECOMMAND,HASHKEY_CONSTSTRI>_vtbl *__vftable /*VFT*/;
  TSExplicitList<CONSOLECOMMAND,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<CONSOLECOMMAND,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 5079 */
struct /*VFT*/ TSHashTable<CONSOLECOMMAND,HASHKEY_CONSTSTRI>_vtbl
{
  void (__thiscall *TSHashTable<CONSOLECOMMAND,HASHKEY_CONSTSTRI>::InternalDelete)(TSHashTable<CONSOLECOMMAND,HASHKEY_CONSTSTRI> *this, CONSOLECOMMAND *);
  CONSOLECOMMAND *(__thiscall *TSHashTable<CONSOLECOMMAND,HASHKEY_CONSTSTRI>::InternalNew)(TSHashTable<CONSOLECOMMAND,HASHKEY_CONSTSTRI> *this, TSExplicitList<CONSOLECOMMAND,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<CONSOLECOMMAND,HASHKEY_CONSTSTRI>)(TSHashTable<CONSOLECOMMAND,HASHKEY_CONSTSTRI> *this);
  void (__thiscall *TSHashTable<CONSOLECOMMAND,HASHKEY_CONSTSTRI>::Destroy)(TSHashTable<CONSOLECOMMAND,HASHKEY_CONSTSTRI> *this);
};

/* 5080 */
struct CategoryTranslation
{
  CATEGORY categoryValue;
  char categoryString[20];
};

/* 5081 */
struct __cppobj TSList<CVar,TSGetExplicitLink<CVar> >
{
  int m_linkoffset;
  TSLink<CVar> m_terminator;
};

/* 5082 */
struct __cppobj TSExplicitList<CVar,-572662307> : TSList<CVar,TSGetExplicitLink<CVar> >
{
};

/* 5083 */
struct __cppobj TSBaseArray<TSExplicitList<CVar,-572662307> >
{
  TSBaseArray<TSExplicitList<CVar,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<CVar,-572662307> *m_data;
};

/* 5084 */
struct /*VFT*/ TSBaseArray<TSExplicitList<CVar,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CVar,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<CVar,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CVar,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<CVar,-572662307> > *this);
};

/* 5085 */
struct /*VFT*/ TSFixedArray<TSExplicitList<CVar,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CVar,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<CVar,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CVar,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<CVar,-572662307> > *this);
};

/* 5086 */
struct __cppobj TSFixedArray<TSExplicitList<CVar,-572662307> > : TSBaseArray<TSExplicitList<CVar,-572662307> >
{
};

/* 5087 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<CVar,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CVar,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<CVar,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CVar,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<CVar,-572662307> > *this);
};

/* 5088 */
struct __cppobj TSGrowableArray<TSExplicitList<CVar,-572662307> > : TSFixedArray<TSExplicitList<CVar,-572662307> >
{
  unsigned int m_chunk;
};

/* 5089 */
struct __cppobj TSHashTable<CVar,HASHKEY_STRI>
{
  TSHashTable<CVar,HASHKEY_STRI>_vtbl *__vftable /*VFT*/;
  TSExplicitList<CVar,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<CVar,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 5090 */
struct /*VFT*/ TSHashTable<CVar,HASHKEY_STRI>_vtbl
{
  void (__thiscall *TSHashTable<CVar,HASHKEY_STRI>::InternalDelete)(TSHashTable<CVar,HASHKEY_STRI> *this, CVar *);
  CVar *(__thiscall *TSHashTable<CVar,HASHKEY_STRI>::InternalNew)(TSHashTable<CVar,HASHKEY_STRI> *this, TSExplicitList<CVar,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<CVar,HASHKEY_STRI>)(TSHashTable<CVar,HASHKEY_STRI> *this);
  void (__thiscall *TSHashTable<CVar,HASHKEY_STRI>::Destroy)(TSHashTable<CVar,HASHKEY_STRI> *this);
};

/* 5091 */
struct __cppobj TSLink<CONSOLELINE>
{
  TSLink<CONSOLELINE> *m_prevlink;
  CONSOLELINE *m_next;
};

/* 5092 */
struct __cppobj TSLinkedNode<CONSOLELINE>
{
  TSLink<CONSOLELINE> m_link;
};

/* 5093 */
struct __cppobj __unaligned __declspec(align(4)) CONSOLELINE : TSLinkedNode<CONSOLELINE>
{
  char *buffer;
  unsigned int chars;
  unsigned int charsalloc;
  unsigned int inputpos;
  unsigned int inputstart;
  COLOR_T colorType;
  CGxString *fontPointer;
};

/* 5094 */
struct __cppobj TSList<CONSOLELINE,TSGetLink<CONSOLELINE> >
{
  int m_linkoffset;
  TSLink<CONSOLELINE> m_terminator;
};

/* 5095 */
struct __cppobj __declspec(align(4)) SpellCast
{
  unsigned __int64 caster;
  unsigned __int64 casterUnit;
  int spellID;
  unsigned __int16 targets;
  unsigned __int64 unitTarget;
  unsigned __int64 itemTarget;
  unsigned __int64 selectedTarget;
  NTempest::C3Vector sourceLocation;
  NTempest::C3Vector destLocation;
  float destFacing;
  unsigned int destZoneID;
  unsigned int castTime;
  unsigned int castEndTime;
  int spellIndex;
  unsigned int spellLevel;
  unsigned __int64 ammoItem;
  unsigned __int64 reflector;
  char targetString[128];
  int overrideRank;
  unsigned __int16 flags;
};

/* 5096 */
struct __cppobj BigBuffer
{
  TSGrowableArray<unsigned int> m_data;
  unsigned int m_offset;
};

/* 5097 */
struct __cppobj BigStack
{
  BigBuffer m_buffer[16];
  unsigned int m_used;
};

/* 5098 */
struct __cppobj TSGrowableArray_<unsigned char,1396853063,102> : TSGrowableArray<unsigned char>
{
};

/* 5099 */
struct /*VFT*/ TSGrowableArray_<unsigned char,1396853063,102>_vtbl
{
  int (__thiscall *TSGrowableArray_<unsigned char,1396853063,102>::MemLineNo)(TSGrowableArray_<unsigned char,1396853063,102> *this);
  int (__thiscall *TSBaseArray<unsigned char>::MemLineNo)(struct TSGrowableArray_<unsigned char,1396853063,102> *this);
};

/* 5100 */
struct __cppobj BigData
{
  BigBuffer m_primary;
  BigStack m_stack;
  TSGrowableArray_<unsigned char,1396853063,102> m_output;
};

/* 5101 */
struct __cppobj BigNum
{
  BigData *m_data;
};

/* 5102 */
struct __cppobj Crypt::RSA
{
  BigNum m_modulus;
  BigNum m_exponent;
};

/* 5103 */
struct __declspec(align(8)) Sha1
{
  unsigned __int64 m_size;
  unsigned int m_hash[5];
  unsigned __int8 m_data[64];
};

/* 5104 */
struct SSignatureData
{
  unsigned int modulusSize;
  unsigned int pubExponentSize;
  unsigned int magicBufferUsed;
  unsigned int magicBufferSize;
  unsigned __int8 *magicBuffer;
  Sha1 sha;
};

/* 5105 */
struct __cppobj TSList<ZipFileDirEntry,TSGetExplicitLink<ZipFileDirEntry> >
{
  int m_linkoffset;
  TSLink<ZipFileDirEntry> m_terminator;
};

/* 5106 */
struct __cppobj TSExplicitList<ZipFileDirEntry,-572662307> : TSList<ZipFileDirEntry,TSGetExplicitLink<ZipFileDirEntry> >
{
};

/* 5107 */
struct __cppobj TSBaseArray<TSExplicitList<ZipFileDirEntry,-572662307> >
{
  TSBaseArray<TSExplicitList<ZipFileDirEntry,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<ZipFileDirEntry,-572662307> *m_data;
};

/* 5108 */
struct /*VFT*/ TSBaseArray<TSExplicitList<ZipFileDirEntry,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<ZipFileDirEntry,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<ZipFileDirEntry,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<ZipFileDirEntry,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<ZipFileDirEntry,-572662307> > *this);
};

/* 5109 */
struct /*VFT*/ TSFixedArray<TSExplicitList<ZipFileDirEntry,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<ZipFileDirEntry,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<ZipFileDirEntry,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<ZipFileDirEntry,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<ZipFileDirEntry,-572662307> > *this);
};

/* 5110 */
struct __cppobj TSFixedArray<TSExplicitList<ZipFileDirEntry,-572662307> > : TSBaseArray<TSExplicitList<ZipFileDirEntry,-572662307> >
{
};

/* 5111 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<ZipFileDirEntry,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<ZipFileDirEntry,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<ZipFileDirEntry,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<ZipFileDirEntry,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<ZipFileDirEntry,-572662307> > *this);
};

/* 5112 */
struct __cppobj TSGrowableArray<TSExplicitList<ZipFileDirEntry,-572662307> > : TSFixedArray<TSExplicitList<ZipFileDirEntry,-572662307> >
{
  unsigned int m_chunk;
};

/* 5113 */
struct __cppobj TSHashTable<ZipFileDirEntry,HASHKEY_CONSTSTRI>
{
  TSHashTable<ZipFileDirEntry,HASHKEY_CONSTSTRI>_vtbl *__vftable /*VFT*/;
  TSExplicitList<ZipFileDirEntry,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<ZipFileDirEntry,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 5114 */
struct /*VFT*/ TSHashTable<ZipFileDirEntry,HASHKEY_CONSTSTRI>_vtbl
{
  void (__thiscall *TSHashTable<ZipFileDirEntry,HASHKEY_CONSTSTRI>::InternalDelete)(TSHashTable<ZipFileDirEntry,HASHKEY_CONSTSTRI> *this, ZipFileDirEntry *);
  ZipFileDirEntry *(__thiscall *TSHashTable<ZipFileDirEntry,HASHKEY_CONSTSTRI>::InternalNew)(TSHashTable<ZipFileDirEntry,HASHKEY_CONSTSTRI> *this, TSExplicitList<ZipFileDirEntry,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *TSHashTable<ZipFileDirEntry,HASHKEY_CONSTSTRI>::~TSHashTable<ZipFileDirEntry,HASHKEY_CONSTSTRI>)(TSHashTable<ZipFileDirEntry,HASHKEY_CONSTSTRI> *this);
  void (__thiscall *TSHashTable<ZipFileDirEntry,HASHKEY_CONSTSTRI>::Destroy)(TSHashTable<ZipFileDirEntry,HASHKEY_CONSTSTRI> *this);
};

/* 5115 */
struct __cppobj WowFileSystemProvider
{
  WowFileSystemProvider_vtbl *__vftable /*VFT*/;
};

/* 5117 */
struct /*VFT*/ WowFileSystemProvider_vtbl
{
  WowFile *(__thiscall *Open)(WowFileSystemProvider *this, const char *);
  unsigned __int8 (__thiscall *Close)(WowFileSystemProvider *this, WowFile *);
};

/* 5116 */
struct __cppobj WowFile
{
  WowFileSystemProvider *m_provider;
};

/* 5118 */
struct __cppobj WowFileSystem
{
  WowFileSystemProvider *m_providerList;
};

/* 5119 */
struct __cppobj TestFileSystemProvider : WowFileSystemProvider
{
};

/* 5120 */
struct /*VFT*/ TestFileSystemProvider_vtbl
{
  unsigned __int8 (__thiscall *TestFileSystemProvider::Close)(TestFileSystemProvider *this, WowFile *);
  unsigned __int8 (__thiscall *Close)(struct TestFileSystemProvider *this, WowFile *);
};

/* 5121 */
struct __cppobj TSList<ZipFileArchive,TSGetLink<ZipFileArchive> >
{
  int m_linkoffset;
  TSLink<ZipFileArchive> m_terminator;
};

/* 5122 */
struct __unaligned __declspec(align(2)) CentralDirectoryHeader
{
  char signature[4];
  unsigned __int16 thisDiskNumber;
  unsigned __int16 directoryStartDiskNumber;
  unsigned __int16 directoryEntriesThisDisk;
  unsigned __int16 directoryEntriesTotal;
  unsigned int centralDirectorySize;
  unsigned int centralDirectoryOffset;
  unsigned __int16 commentLength;
};

/* 5123 */
struct __unaligned __declspec(align(2)) LocalFileHeader
{
  char signature[4];
  unsigned __int16 versionRequired;
  unsigned __int16 generalFlags;
  unsigned __int16 compressionMethod;
  unsigned __int16 modifiedTime;
  unsigned __int16 modifiedDate;
  unsigned int z_crc32;
  unsigned int compressedSize;
  unsigned int uncompressedSize;
  unsigned __int16 filenameSize;
  unsigned __int16 extraFieldSize;
};

/* 5124 */
struct __unaligned __declspec(align(2)) CentralDirectoryFileHeader
{
  char signature[4];
  unsigned __int16 versionMadeBy;
  unsigned __int16 versionRequired;
  unsigned __int16 generalFlags;
  unsigned __int16 compressionMethod;
  unsigned __int16 modifiedTime;
  unsigned __int16 modifiedDate;
  unsigned int z_crc32;
  unsigned int compressedSize;
  unsigned int uncompressedSize;
  unsigned __int16 filenameSize;
  unsigned __int16 extraFieldSize;
  unsigned __int16 commentSize;
  unsigned __int16 diskNumberStart;
  unsigned __int16 internalFileAttributes;
  unsigned int externalFileAttributes;
  unsigned int localHeaderOffset;
};

/* 5125 */
struct DataDescriptor
{
  unsigned int z_crc32;
  unsigned int compressedSize;
  unsigned int uncompressedSize;
};

/* 5126 */
struct __cppobj TestFile : WowFile
{
  _iobuf *m_f;
};

/* 5127 */
struct __cppobj TSGetLink<ZipFileArchive>
{
};

/* 5128 */
struct __cppobj TSGetExplicitLink<ZipFileDirEntry>
{
};

/* 5129 */
struct SDIRENT
{
  char d_name[260];
};

/* 5130 */
struct SDIR
{
  char name[260];
  void *handle;
  _WIN32_FIND_DATAA findData;
  SDIRENT dirent;
};

/* 5131 */
struct _stat
{
  unsigned int st_dev;
  unsigned __int16 st_ino;
  unsigned __int16 st_mode;
  __int16 st_nlink;
  __int16 st_uid;
  __int16 st_gid;
  unsigned int st_rdev;
  int st_size;
  int st_atime;
  int st_mtime;
  int st_ctime;
};

/* 5132 */
struct __cppobj TSLink<BREAKCMD>
{
  TSLink<BREAKCMD> *m_prevlink;
  BREAKCMD *m_next;
};

/* 5133 */
struct __cppobj TSLinkedNode<BREAKCMD>
{
  TSLink<BREAKCMD> m_link;
};

/* 5134 */
struct __cppobj __unaligned __declspec(align(4)) BREAKCMD : TSLinkedNode<BREAKCMD>
{
  void *data;
};

/* 5135 */
struct __cppobj TSList<BREAKCMD,TSGetLink<BREAKCMD> >
{
  int m_linkoffset;
  TSLink<BREAKCMD> m_terminator;
};

/* 5136 */
struct _IDHASHENTRY
{
  unsigned int id;
  unsigned int sequence;
  void (__stdcall *handler)(void *);
  _IDHASHENTRY *next;
};

/* 5137 */
struct _IDHASHTABLE
{
  _IDHASHENTRY **data;
  unsigned int size;
  unsigned int used;
  _IDHASHTABLE *next;
};

/* 5138 */
struct _TYPEHASHENTRY
{
  unsigned int type;
  unsigned int subtype;
  unsigned int sequence;
  _IDHASHTABLE *idhashtable;
  _TYPEHASHENTRY *next;
};

/* 5139 */
struct __cppobj TSGetLink<BREAKCMD>
{
};

/* 5140 */
struct _AUTHCOMPANYINFO
{
  const char *keyname;
  unsigned int authresult;
};

/* 5141 */
struct __cppobj TSLink<REQUEST>
{
  TSLink<REQUEST> *m_prevlink;
  REQUEST *m_next;
};

/* 5142 */
struct __cppobj TSLinkedNode<REQUEST>
{
  TSLink<REQUEST> m_link;
};

/* 5158 */
struct __cppobj __unaligned __declspec(align(4)) REQUEST : TSLinkedNode<REQUEST>
{
  void *event;
  Storm::SFile::FILEREC *file;
  unsigned int location;
  unsigned int approxarchivelocation;
  unsigned int requiredcompletiontime;
  int urgent;
  void *buffer;
  void *bufferbegin;
  IDirectSoundBuffer *soundbuffer;
  unsigned int soundbufferoffset;
  Storm::SFile::AUDIOSTREAM *stream;
  unsigned int bytestoread;
  int autodelrequest;
  unsigned int bytesread;
  _TASYNCPARAMBLOCK *asyncparam;
};

/* 5143 */
struct __cppobj TSLink<Storm::SFile::FILEREC>
{
  TSLink<Storm::SFile::FILEREC> *m_prevlink;
  Storm::SFile::FILEREC *m_next;
};

/* 5145 */
struct __cppobj TSLinkedNode<Storm::SFile::FILEREC>
{
  TSLink<Storm::SFile::FILEREC> m_link;
};

/* 5152 */
struct __cppobj _BLOCKENTRY
{
  unsigned int offset;
  unsigned int sizealloc;
  unsigned int sizefile;
  unsigned int flags;
  _FILETIME time;
  unsigned int crc;
  MD5 md5;
};

/* 5144 */
struct __cppobj Storm::SFile::FILEREC : TSLinkedNode<Storm::SFile::FILEREC>
{
  CCritSect sync;
  int refcount;
  char name[260];
  char *actualName;
  void *handle;
  Storm::SFile::ARCHIVEREC *archive;
  _BLOCKENTRY block;
  unsigned int key;
  unsigned int location;
  unsigned int lastlocation;
  unsigned int sectors;
  unsigned int *sectoroffsettable;
  int sectoroffsettablevalid;
  int dda;
  void *readaheadbuffer;
  unsigned int readaheadoffset;
  unsigned int readaheadbytes;
  unsigned int crc;
  int crcavail;
  unsigned int crcstate;
  unsigned int crcexpected;
};

/* 5154 */
struct __cppobj TSLink<Storm::SFile::AUDIOSTREAM>
{
  TSLink<Storm::SFile::AUDIOSTREAM> *m_prevlink;
  Storm::SFile::AUDIOSTREAM *m_next;
};

/* 5156 */
struct __cppobj TSLinkedNode<Storm::SFile::AUDIOSTREAM>
{
  TSLink<Storm::SFile::AUDIOSTREAM> m_link;
};

/* 5155 */
struct __cppobj Storm::SFile::AUDIOSTREAM : TSLinkedNode<Storm::SFile::AUDIOSTREAM>
{
  Storm::SFile::FILEREC *file;
  unsigned int nextwrite;
  unsigned int bytespersecond;
  int loop;
  unsigned int fillstatus;
  unsigned int bytespastend;
  unsigned int waveheadersize;
  unsigned int wavedatasize;
  unsigned int startingoffset;
  unsigned int playcursor;
  unsigned int writecursor;
  int volume;
  int pan;
  IDirectSoundBuffer *soundbuffer;
  unsigned int soundbuffersize;
  int soundbufferlocal;
  unsigned __int8 fillvalue;
  int refcount;
};

/* 5157 */
struct _TASYNCPARAMBLOCK
{
  void *pvCallback;
};

/* 5146 */
struct __cppobj TSLink<Storm::SFile::ARCHIVEREC>
{
  TSLink<Storm::SFile::ARCHIVEREC> *m_prevlink;
  Storm::SFile::ARCHIVEREC *m_next;
};

/* 5148 */
struct __cppobj TSLinkedNode<Storm::SFile::ARCHIVEREC>
{
  TSLink<Storm::SFile::ARCHIVEREC> m_link;
};

/* 5149 */
struct _ARCHIVEHEADER
{
  unsigned int signature;
  unsigned int headersize;
  unsigned int archivesize;
  unsigned __int16 version;
  unsigned __int16 sectorsizeid;
  unsigned int hashoffset;
  unsigned int blockoffset;
  unsigned int hashcount;
  unsigned int blockcount;
};

/* 5147 */
struct __cppobj Storm::SFile::ARCHIVEREC : TSLinkedNode<Storm::SFile::ARCHIVEREC>
{
  CCritSect sync;
  int refcount;
  char archivename[260];
  void *handle;
  int dontCheckDisk;
  int priority;
  _ARCHIVEHEADER header;
  HSFILE__ *ownerarchivefile;
  HSARCHIVE__ *parentArchive;
  char pathPrefix[260];
  void *sectorfile;
  unsigned int sectorlocation;
  unsigned int sectorsize;
  unsigned __int8 *sectorbuffer;
  unsigned int sectorbytesread;
  unsigned int startinglocation;
  unsigned int endinglocation;
  _BLOCKENTRY *blocktable;
  _HASHENTRY *hashtable;
  unsigned int lastlocation;
  int disableCount;
  unsigned int cdrom;
};

/* 5150 */
struct HSFILE__
{
  int unused;
};

/* 5151 */
struct HSARCHIVE__
{
  int unused;
};

/* 5153 */
struct _HASHENTRY
{
  unsigned int hashcheck[2];
  unsigned __int16 languageId;
  unsigned __int8 platformId;
  unsigned __int8 reserved;
  unsigned int block;
};

/* 5159 */
struct __cppobj TSList<REQUEST,TSGetLink<REQUEST> >
{
  int m_linkoffset;
  TSLink<REQUEST> m_terminator;
};

/* 5160 */
struct __cppobj TSLink<EVENTREC>
{
  TSLink<EVENTREC> *m_prevlink;
  EVENTREC *m_next;
};

/* 5161 */
struct __cppobj TSLinkedNode<EVENTREC>
{
  TSLink<EVENTREC> m_link;
};

/* 5162 */
struct __cppobj __unaligned __declspec(align(4)) EVENTREC : TSLinkedNode<EVENTREC>
{
  void *event;
};

/* 5163 */
struct __cppobj TSList<EVENTREC,TSGetLink<EVENTREC> >
{
  int m_linkoffset;
  TSLink<EVENTREC> m_terminator;
};

/* 5164 */
struct __cppobj TSList<Storm::SFile::AUDIOSTREAM,TSGetLink<Storm::SFile::AUDIOSTREAM> >
{
  int m_linkoffset;
  TSLink<Storm::SFile::AUDIOSTREAM> m_terminator;
};

/* 5165 */
struct _STORMOPTIONS
{
  int smemleaksilentwarning;
  int serrleaksilentwarning;
  unsigned int wavechunksize;
  int alignstreamingwavedata;
  int echotooutputdebugstring;
  int serrsuppresslogs;
  int crcenabled;
  int orderedprintfenabled;
};

/* 5166 */
struct __cppobj TSList<Storm::SFile::ARCHIVEREC,TSGetLink<Storm::SFile::ARCHIVEREC> >
{
  int m_linkoffset;
  TSLink<Storm::SFile::ARCHIVEREC> m_terminator;
};

/* 5167 */
struct __cppobj TSList<Storm::SFile::FILEREC,TSGetLink<Storm::SFile::FILEREC> >
{
  int m_linkoffset;
  TSLink<Storm::SFile::FILEREC> m_terminator;
};

/* 5168 */
struct Storm::SFile::StormGlobals
{
  unsigned int s_ioerrormode;
  int (__stdcall *s_ioerrorproc)(const char *, unsigned int, unsigned int);
  unsigned __int16 s_languageId;
  unsigned __int8 s_platformId;
  unsigned int s_dataChunkSize;
  int s_seekOptimize;
  unsigned int WAVECHUNKSIZE;
  unsigned int s_asyncBudget;
  unsigned int s_directaccess;
  char s_basepath[260];
  void (__stdcall *s_loadNotifyProc)(const char *, void *);
  void *s_loadNotifyData;
};

/* 5169 */
struct __cppobj Storm::SFile::ArchivePtr
{
  Storm::SFile::ARCHIVEREC *archive;
  int locked;
};

/* 5170 */
struct __cppobj Storm::SFile::ArchivePtrLocked : Storm::SFile::ArchivePtr
{
};

/* 5171 */
struct __cppobj Storm::SFile::FilePtr
{
  Storm::SFile::FILEREC *file;
  int locked;
};

/* 5172 */
struct __cppobj Storm::SFile::FilePtrLocked : Storm::SFile::FilePtr
{
};

/* 5173 */
struct __cppobj Storm::SFile::UseGlob
{
  Storm::SFile::StormGlobals *globptr;
};

/* 5174 */
struct _DECOMPRESSIONINFO
{
  void *sourcebuffer;
  unsigned int sourceoffset;
  void *destbuffer;
  unsigned int destoffset;
  unsigned int bytes;
};

/* 5175 */
struct CKINFO
{
  unsigned int size;
  unsigned int offset;
};

/* 5176 */
struct __unaligned __declspec(align(2)) waveformat_tag
{
  unsigned __int16 wFormatTag;
  unsigned __int16 nChannels;
  unsigned int nSamplesPerSec;
  unsigned int nAvgBytesPerSec;
  unsigned __int16 nBlockAlign;
};

/* 5177 */
struct pcmwaveformat_tag
{
  waveformat_tag wf;
  unsigned __int16 wBitsPerSample;
};

/* 5178 */
struct _MMCKINFO
{
  unsigned int ckid;
  unsigned int cksize;
  unsigned int fccType;
  unsigned int dwDataOffset;
  unsigned int dwFlags;
};

/* 5179 */
struct $07235A069B75914621D5ABCE08571773
{
  unsigned int ckid;
  unsigned int size;
};

/* 5180 */
struct __cppobj TSGetLink<REQUEST>
{
};

/* 5181 */
struct __cppobj TSGetLink<EVENTREC>
{
};

/* 5182 */
struct __cppobj TSGetLink<Storm::SFile::AUDIOSTREAM>
{
};

/* 5183 */
struct __cppobj TSGetLink<Storm::SFile::ARCHIVEREC>
{
};

/* 5184 */
struct __cppobj TSGetLink<Storm::SFile::FILEREC>
{
};

/* 5185 */
union ArgumentType
{
  int asInt;
  void *asPointer;
  __int64 asLongLong;
  long double asDouble;
};

/* 5186 */
struct SpecifierRange
{
  const char *begin;
  int length;
  int argument;
};

/* 5187 */
struct _tagADDRESS
{
  unsigned int Offset;
  unsigned __int16 Segment;
  ADDRESS_MODE Mode;
};

/* 5188 */
struct _KDHELP
{
  unsigned int Thread;
  unsigned int ThCallbackStack;
  unsigned int NextCallback;
  unsigned int FramePointer;
  unsigned int KiCallUserMode;
  unsigned int KeUserCallbackDispatcher;
  unsigned int SystemRangeStart;
  unsigned int ThCallbackBStore;
  unsigned int Reserved[8];
};

/* 5189 */
struct _tagSTACKFRAME
{
  _tagADDRESS AddrPC;
  _tagADDRESS AddrReturn;
  _tagADDRESS AddrFrame;
  _tagADDRESS AddrStack;
  void *FuncTableEntry;
  unsigned int Params[4];
  int Far;
  int Virtual;
  unsigned int Reserved[3];
  _KDHELP KdHelp;
  _tagADDRESS AddrBStore;
};

/* 5190 */
struct _IMAGEHLP_LINE
{
  unsigned int SizeOfStruct;
  void *Key;
  unsigned int LineNumber;
  char *FileName;
  unsigned int Address;
};

/* 5191 */
struct _IMAGEHLP_MODULE
{
  unsigned int SizeOfStruct;
  unsigned int BaseOfImage;
  unsigned int ImageSize;
  unsigned int TimeDateStamp;
  unsigned int CheckSum;
  unsigned int NumSyms;
  SYM_TYPE SymType;
  char ModuleName[32];
  char ImageName[256];
  char LoadedImageName[256];
};

/* 5192 */
struct __declspec(align(4)) _IMAGEHLP_SYMBOL
{
  unsigned int SizeOfStruct;
  unsigned int Address;
  unsigned int Size;
  unsigned int Flags;
  unsigned int MaxNameLength;
  char Name[1];
};

/* 5193 */
struct _EXCEPTION_RECORD
{
  unsigned int ExceptionCode;
  unsigned int ExceptionFlags;
  _EXCEPTION_RECORD *ExceptionRecord;
  void *ExceptionAddress;
  unsigned int NumberParameters;
  unsigned int ExceptionInformation[15];
};

/* 5194 */
struct _EXCEPTION_POINTERS
{
  _EXCEPTION_RECORD *ExceptionRecord;
  _CONTEXT *ContextRecord;
};

/* 5195 */
struct _MINIDUMP_EXCEPTION_INFORMATION
{
  unsigned int ThreadId;
  _EXCEPTION_POINTERS *ExceptionPointers;
  int ClientPointers;
};

/* 5196 */
struct _MINIDUMP_USER_STREAM
{
  unsigned int Type;
  unsigned int BufferSize;
  void *Buffer;
};

/* 5197 */
struct _MINIDUMP_USER_STREAM_INFORMATION
{
  unsigned int UserStreamCount;
  _MINIDUMP_USER_STREAM *UserStreamArray;
};

/* 5198 */
struct _MINIDUMP_THREAD_CALLBACK
{
  unsigned int ThreadId;
  void *ThreadHandle;
  _CONTEXT Context;
  unsigned int SizeOfContext;
  unsigned __int64 StackBase;
  unsigned __int64 StackEnd;
};

/* 5199 */
struct _MINIDUMP_THREAD_EX_CALLBACK
{
  unsigned int ThreadId;
  void *ThreadHandle;
  _CONTEXT Context;
  unsigned int SizeOfContext;
  unsigned __int64 StackBase;
  unsigned __int64 StackEnd;
  unsigned __int64 BackingStoreBase;
  unsigned __int64 BackingStoreEnd;
};

/* 5200 */
struct tagVS_FIXEDFILEINFO
{
  unsigned int dwSignature;
  unsigned int dwStrucVersion;
  unsigned int dwFileVersionMS;
  unsigned int dwFileVersionLS;
  unsigned int dwProductVersionMS;
  unsigned int dwProductVersionLS;
  unsigned int dwFileFlagsMask;
  unsigned int dwFileFlags;
  unsigned int dwFileOS;
  unsigned int dwFileType;
  unsigned int dwFileSubtype;
  unsigned int dwFileDateMS;
  unsigned int dwFileDateLS;
};

/* 5201 */
struct __unaligned __declspec(align(4)) _MINIDUMP_MODULE_CALLBACK
{
  unsigned __int16 *FullPath;
  unsigned __int64 BaseOfImage;
  unsigned int SizeOfImage;
  unsigned int CheckSum;
  unsigned int TimeDateStamp;
  tagVS_FIXEDFILEINFO VersionInfo;
  void *CvRecord;
  unsigned int SizeOfCvRecord;
  void *MiscRecord;
  unsigned int SizeOfMiscRecord;
};

/* 5202 */
struct _MINIDUMP_INCLUDE_THREAD_CALLBACK
{
  unsigned int ThreadId;
};

/* 5203 */
struct _MINIDUMP_INCLUDE_MODULE_CALLBACK
{
  unsigned __int64 BaseOfImage;
};

/* 5204 */
union $71C3BC7AA0A02797A82E81AC74C3A670
{
  _MINIDUMP_THREAD_CALLBACK Thread;
  _MINIDUMP_THREAD_EX_CALLBACK ThreadEx;
  _MINIDUMP_MODULE_CALLBACK Module;
  _MINIDUMP_INCLUDE_THREAD_CALLBACK IncludeThread;
  _MINIDUMP_INCLUDE_MODULE_CALLBACK IncludeModule;
};

/* 5205 */
struct __unaligned __declspec(align(4)) _MINIDUMP_CALLBACK_INPUT
{
  unsigned int ProcessId;
  void *ProcessHandle;
  unsigned int CallbackType;
  $71C3BC7AA0A02797A82E81AC74C3A670 ___u3;
};

/* 5206 */
union $DD82D2F84ECA88824B89F98F568C2145
{
  unsigned int ModuleWriteFlags;
  unsigned int ThreadWriteFlags;
};

/* 5207 */
struct _MINIDUMP_CALLBACK_OUTPUT
{
  $DD82D2F84ECA88824B89F98F568C2145 ___u0;
};

/* 5208 */
struct _MINIDUMP_CALLBACK_INFORMATION
{
  int (__stdcall *CallbackRoutine)(void *, _MINIDUMP_CALLBACK_INPUT *const, _MINIDUMP_CALLBACK_OUTPUT *);
  void *CallbackParam;
};

/* 5209 */
struct __cppobj CDbgHelpDll
{
  HINSTANCE__ *hInstance;
  unsigned int loadCount;
  int (__stdcall *StackWalk)(unsigned int, void *, void *, _tagSTACKFRAME *, void *, int (__stdcall *)(void *, unsigned int, void *, unsigned int, unsigned int *), void *(__stdcall *)(void *, unsigned int), unsigned int (__stdcall *)(void *, unsigned int), unsigned int (__stdcall *)(void *, void *, _tagADDRESS *));
  void *(__stdcall *SymFunctionTableAccess)(void *, unsigned int);
  int (__stdcall *SymGetLineFromAddr)(void *, unsigned int, unsigned int *, _IMAGEHLP_LINE *);
  unsigned int (__stdcall *SymGetModuleBase)(void *, unsigned int);
  int (__stdcall *SymGetModuleInfo)(void *, unsigned int, _IMAGEHLP_MODULE *);
  unsigned int (__stdcall *SymGetOptions)();
  int (__stdcall *SymGetSymFromAddr)(void *, unsigned int, unsigned int *, _IMAGEHLP_SYMBOL *);
  int (__stdcall *SymInitialize)(void *, char *, int);
  int (__stdcall *SymCleanup)(void *);
  unsigned int (__stdcall *SymSetOptions)(unsigned int);
  int (__stdcall *SymEnumerateModules)(void *, int (__stdcall *)(char *, unsigned int, void *), void *);
  int (__stdcall *SymEnumerateSymbols)(void *, unsigned int, int (__stdcall *)(char *, unsigned int, unsigned int, void *), void *);
  int (__stdcall *MiniDumpWriteDump)(void *, unsigned int, void *, _MINIDUMP_TYPE, _MINIDUMP_EXCEPTION_INFORMATION *const, _MINIDUMP_USER_STREAM_INFORMATION *const, _MINIDUMP_CALLBACK_INFORMATION *const);
};

/* 5210 */
struct MEMDUMP
{
  void (*logLineProc)(void *, const char *, ...);
  void *logLineProcParam;
};

/* 5211 */
struct ModuleData
{
  char name[256];
  unsigned int baseAddress;
};

/* 5212 */
struct EnumModuleData
{
  unsigned int count;
  ModuleData modules[256];
};

/* 5213 */
struct LogLineParams
{
  void (*logLineProc)(void *, const char *, ...);
  void *logLineProcParam;
};

/* 5214 */
struct MiniDumpParam
{
  void *logfile;
  _EXCEPTION_POINTERS *exceptionPointers;
  unsigned int threadId;
  int result;
  unsigned int userStringCount;
  char **userStrings;
};

/* 5215 */
struct __cppobj TSLink<WNDREC>
{
  TSLink<WNDREC> *m_prevlink;
  WNDREC *m_next;
};

/* 5216 */
struct __cppobj TSLinkedNode<WNDREC>
{
  TSLink<WNDREC> m_link;
};

/* 5217 */
struct __cppobj __unaligned __declspec(align(4)) WNDREC : TSLinkedNode<WNDREC>
{
  HWND__ *window;
};

/* 5218 */
struct __cppobj TSList<WNDREC,TSGetLink<WNDREC> >
{
  int m_linkoffset;
  TSLink<WNDREC> m_terminator;
};

/* 5219 */
struct _PARAMS
{
  void *window;
  unsigned int message;
  unsigned int wparam;
  int lparam;
  unsigned int notifycode;
  void *extra;
  int useresult;
  int result;
};

/* 5220 */
struct __cppobj TSGetLink<WNDREC>
{
};

/* 5221 */
struct _COMPRESSALGORITHM
{
  unsigned int id;
  void (__fastcall *func)(void *, unsigned int *, const void *, unsigned int, unsigned int *, unsigned int);
};

/* 5222 */
struct _DECOMPRESSALGORITHM
{
  unsigned int id;
  void (__fastcall *func)(void *, unsigned int *, const void *, unsigned int, const char *);
};

/* 5223 */
struct __cppobj CBitInput
{
  const unsigned int *m_currsource;
  unsigned int m_rack;
  unsigned int m_rackbits;
};

/* 5224 */
struct __cppobj CBitOutput
{
  unsigned __int8 *m_basedest;
  unsigned int m_bytesleft;
  unsigned __int8 *m_currdest;
  unsigned int m_rack;
  unsigned int m_rackbits;
};

/* 5225 */
struct __cppobj TSLink<HUFFNODE>
{
  TSLink<HUFFNODE> *m_prevlink;
  HUFFNODE *m_next;
};

/* 5227 */
struct __cppobj TSLinkedNode<HUFFNODE>
{
  TSLink<HUFFNODE> m_link;
};

/* 5226 */
struct __cppobj HUFFNODE : TSLinkedNode<HUFFNODE>
{
  int symbol;
  unsigned int weight;
  HUFFNODE *parent;
  HUFFNODE *child;
};

/* 5228 */
struct __cppobj TSList<HUFFNODE,TSGetLink<HUFFNODE> >
{
  int m_linkoffset;
  TSLink<HUFFNODE> m_terminator;
};

/* 5229 */
struct __cppobj CHuffman
{
  int m_adaptive;
  unsigned int m_changesequence;
  HUFFNODE m_nodebuffer[515];
  TSList<HUFFNODE,TSGetLink<HUFFNODE> > m_nodefreelist;
  TSList<HUFFNODE,TSGetLink<HUFFNODE> > m_nodelist;
  unsigned int m_nodesused;
  HUFFNODE *m_symbol[258];
};

/* 5230 */
union $523B455E5BD3397A708E8653568BDA17
{
  int symbol;
  HUFFNODE *nodeptr;
};

/* 5231 */
struct _CACHEREC
{
  unsigned int sequence;
  unsigned int bits;
  $523B455E5BD3397A708E8653568BDA17 ___u2;
};

/* 5232 */
struct __cppobj CHuffmanDecoder : CHuffman
{
  _CACHEREC m_cache[128];
};

/* 5233 */
struct __cppobj CHuffmanEncoder : CHuffman
{
};

/* 5234 */
struct _PKWAREINFO
{
  void *dest;
  unsigned int destpos;
  unsigned int destsize;
  const void *source;
  unsigned int sourcepos;
  unsigned int sourcesize;
};

/* 5235 */
struct ZlibAllocBufferHeader
{
  unsigned __int8 *nextPtr;
  unsigned int bufSize;
  unsigned __int8 *bufStart;
};

/* 5236 */
struct __cppobj ZlibCompressAllocBuffer : ZlibAllocBufferHeader
{
  unsigned __int8 buf[300000];
};

/* 5237 */
struct __cppobj ZlibUncompressAllocBuffer : ZlibAllocBufferHeader
{
  unsigned __int8 buf[47000];
};

/* 5238 */
struct _IMAHEADER
{
  unsigned __int8 reserved;
  unsigned __int8 roundshift;
};

/* 5239 */
struct __cppobj TSGetLink<HUFFNODE>
{
};

/* 5240 */
struct __cppobj TSLink<RGN>
{
  TSLink<RGN> *m_prevlink;
  RGN *m_next;
};

/* 5242 */
struct __cppobj __declspec(align(4)) TSHashObject<RGN,HASHKEY_NONE>
{
  unsigned int m_hashval;
  TSLink<RGN> m_linktoslot;
  TSLink<RGN> m_linktofull;
  HASHKEY_NONE m_key;
};

/* 5243 */
struct __cppobj TSBaseArray<_SOURCE>
{
  TSBaseArray<_SOURCE>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  _SOURCE *m_data;
};

/* 5247 */
struct __cppobj TSFixedArray<_SOURCE> : TSBaseArray<_SOURCE>
{
};

/* 5249 */
struct __cppobj TSGrowableArray<_SOURCE> : TSFixedArray<_SOURCE>
{
  unsigned int m_chunk;
};

/* 5250 */
struct __cppobj TSBaseArray<RECTF>
{
  TSBaseArray<RECTF>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  RECTF *m_data;
};

/* 5253 */
struct __cppobj TSFixedArray<RECTF> : TSBaseArray<RECTF>
{
};

/* 5255 */
struct __cppobj TSGrowableArray<RECTF> : TSFixedArray<RECTF>
{
  unsigned int m_chunk;
};

/* 5256 */
struct __cppobj TSBaseArray<_FOUNDPARAM>
{
  TSBaseArray<_FOUNDPARAM>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  _FOUNDPARAM *m_data;
};

/* 5260 */
struct __cppobj TSFixedArray<_FOUNDPARAM> : TSBaseArray<_FOUNDPARAM>
{
};

/* 5262 */
struct __cppobj TSGrowableArray<_FOUNDPARAM> : TSFixedArray<_FOUNDPARAM>
{
  unsigned int m_chunk;
};

/* 5241 */
struct __cppobj RGN : TSHashObject<RGN,HASHKEY_NONE>
{
  TSGrowableArray<_SOURCE> source;
  TSGrowableArray<RECTF> combined;
  TSGrowableArray<_FOUNDPARAM> foundparams;
  RECTF foundparamsrect;
  int sequence;
  int dirty;
};

/* 5244 */
struct /*VFT*/ TSBaseArray<_SOURCE>_vtbl
{
  const char *(__thiscall *TSBaseArray<_SOURCE>::MemFileName)(TSBaseArray<_SOURCE> *this);
  int (__thiscall *TSBaseArray<_SOURCE>::MemLineNo)(TSBaseArray<_SOURCE> *this);
};

/* 5245 */
struct _SOURCE
{
  RECTF rect;
  void *param;
  int sequence;
  unsigned int flags;
};

/* 5251 */
struct /*VFT*/ TSBaseArray<RECTF>_vtbl
{
  const char *(__thiscall *TSBaseArray<RECTF>::MemFileName)(TSBaseArray<RECTF> *this);
  int (__thiscall *TSBaseArray<RECTF>::MemLineNo)(TSBaseArray<RECTF> *this);
};

/* 5257 */
struct /*VFT*/ TSBaseArray<_FOUNDPARAM>_vtbl
{
  const char *(__thiscall *TSBaseArray<_FOUNDPARAM>::MemFileName)(TSBaseArray<_FOUNDPARAM> *this);
  int (__thiscall *TSBaseArray<_FOUNDPARAM>::MemLineNo)(TSBaseArray<_FOUNDPARAM> *this);
};

/* 5258 */
struct _FOUNDPARAM
{
  void *param;
  int sequence;
};

/* 5246 */
struct /*VFT*/ TSFixedArray<_SOURCE>_vtbl
{
  const char *(__thiscall *TSBaseArray<_SOURCE>::MemFileName)(struct TSFixedArray<_SOURCE> *this);
  int (__thiscall *TSBaseArray<_SOURCE>::MemLineNo)(struct TSFixedArray<_SOURCE> *this);
};

/* 5248 */
struct /*VFT*/ TSGrowableArray<_SOURCE>_vtbl
{
  const char *(__thiscall *TSBaseArray<_SOURCE>::MemFileName)(struct TSGrowableArray<_SOURCE> *this);
  int (__thiscall *TSBaseArray<_SOURCE>::MemLineNo)(struct TSGrowableArray<_SOURCE> *this);
};

/* 5252 */
struct /*VFT*/ TSFixedArray<RECTF>_vtbl
{
  const char *(__thiscall *TSBaseArray<RECTF>::MemFileName)(struct TSFixedArray<RECTF> *this);
  int (__thiscall *TSBaseArray<RECTF>::MemLineNo)(struct TSFixedArray<RECTF> *this);
};

/* 5254 */
struct /*VFT*/ TSGrowableArray<RECTF>_vtbl
{
  const char *(__thiscall *TSBaseArray<RECTF>::MemFileName)(struct TSGrowableArray<RECTF> *this);
  int (__thiscall *TSBaseArray<RECTF>::MemLineNo)(struct TSGrowableArray<RECTF> *this);
};

/* 5259 */
struct /*VFT*/ TSFixedArray<_FOUNDPARAM>_vtbl
{
  const char *(__thiscall *TSBaseArray<_FOUNDPARAM>::MemFileName)(struct TSFixedArray<_FOUNDPARAM> *this);
  int (__thiscall *TSBaseArray<_FOUNDPARAM>::MemLineNo)(struct TSFixedArray<_FOUNDPARAM> *this);
};

/* 5261 */
struct /*VFT*/ TSGrowableArray<_FOUNDPARAM>_vtbl
{
  const char *(__thiscall *TSBaseArray<_FOUNDPARAM>::MemFileName)(struct TSGrowableArray<_FOUNDPARAM> *this);
  int (__thiscall *TSBaseArray<_FOUNDPARAM>::MemLineNo)(struct TSGrowableArray<_FOUNDPARAM> *this);
};

/* 5264 */
struct __cppobj TSList<RGN,TSGetExplicitLink<RGN> >
{
  int m_linkoffset;
  TSLink<RGN> m_terminator;
};

/* 5265 */
struct __cppobj TSExplicitList<RGN,-572662307> : TSList<RGN,TSGetExplicitLink<RGN> >
{
};

/* 5267 */
struct __cppobj TSBaseArray<TSExplicitList<RGN,-572662307> >
{
  TSBaseArray<TSExplicitList<RGN,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<RGN,-572662307> *m_data;
};

/* 5270 */
struct __cppobj TSFixedArray<TSExplicitList<RGN,-572662307> > : TSBaseArray<TSExplicitList<RGN,-572662307> >
{
};

/* 5272 */
struct __cppobj TSGrowableArray<TSExplicitList<RGN,-572662307> > : TSFixedArray<TSExplicitList<RGN,-572662307> >
{
  unsigned int m_chunk;
};

/* 5263 */
struct __cppobj TSHashTable<RGN,HASHKEY_NONE>
{
  TSHashTable<RGN,HASHKEY_NONE>_vtbl *__vftable /*VFT*/;
  TSExplicitList<RGN,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<RGN,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 5266 */
struct /*VFT*/ TSHashTable<RGN,HASHKEY_NONE>_vtbl
{
  void (__thiscall *TSHashTable<RGN,HASHKEY_NONE>::InternalDelete)(TSHashTable<RGN,HASHKEY_NONE> *this, RGN *);
  RGN *(__thiscall *TSHashTable<RGN,HASHKEY_NONE>::InternalNew)(TSHashTable<RGN,HASHKEY_NONE> *this, TSExplicitList<RGN,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *TSHashTable<RGN,HASHKEY_NONE>::~TSHashTable<RGN,HASHKEY_NONE>)(TSHashTable<RGN,HASHKEY_NONE> *this);
  void (__thiscall *TSHashTable<RGN,HASHKEY_NONE>::Destroy)(TSHashTable<RGN,HASHKEY_NONE> *this);
};

/* 5268 */
struct /*VFT*/ TSBaseArray<TSExplicitList<RGN,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<RGN,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<RGN,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<RGN,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<RGN,-572662307> > *this);
};

/* 5269 */
struct /*VFT*/ TSFixedArray<TSExplicitList<RGN,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<RGN,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<RGN,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<RGN,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<RGN,-572662307> > *this);
};

/* 5271 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<RGN,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<RGN,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<RGN,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<RGN,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<RGN,-572662307> > *this);
};

/* 5273 */
struct __cppobj TSLink<TSHashObjectChunk<RGN,HASHKEY_NONE> >
{
  TSLink<TSHashObjectChunk<RGN,HASHKEY_NONE> > *m_prevlink;
  TSHashObjectChunk<RGN,HASHKEY_NONE> *m_next;
};

/* 5274 */
struct __cppobj TSBaseArray<RGN>
{
  TSBaseArray<RGN>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  RGN *m_data;
};

/* 5277 */
struct __cppobj TSFixedArray<RGN> : TSBaseArray<RGN>
{
};

/* 5279 */
struct __cppobj TSGrowableArray<RGN> : TSFixedArray<RGN>
{
  unsigned int m_chunk;
};

/* 5280 */
struct __cppobj __unaligned __declspec(align(4)) TSHashObjectChunk<RGN,HASHKEY_NONE>
{
  TSGrowableArray<RGN> m_array;
  TSLink<TSHashObjectChunk<RGN,HASHKEY_NONE> > m_link;
};

/* 5275 */
struct /*VFT*/ TSBaseArray<RGN>_vtbl
{
  const char *(__thiscall *TSBaseArray<RGN>::MemFileName)(TSBaseArray<RGN> *this);
  int (__thiscall *TSBaseArray<RGN>::MemLineNo)(TSBaseArray<RGN> *this);
};

/* 5276 */
struct /*VFT*/ TSFixedArray<RGN>_vtbl
{
  const char *(__thiscall *TSBaseArray<RGN>::MemFileName)(struct TSFixedArray<RGN> *this);
  int (__thiscall *TSBaseArray<RGN>::MemLineNo)(struct TSFixedArray<RGN> *this);
};

/* 5278 */
struct /*VFT*/ TSGrowableArray<RGN>_vtbl
{
  const char *(__thiscall *TSBaseArray<RGN>::MemFileName)(struct TSGrowableArray<RGN> *this);
  int (__thiscall *TSBaseArray<RGN>::MemLineNo)(struct TSGrowableArray<RGN> *this);
};

/* 5281 */
struct __cppobj TSList<TSHashObjectChunk<RGN,HASHKEY_NONE>,TSGetExplicitLink<TSHashObjectChunk<RGN,HASHKEY_NONE> > >
{
  int m_linkoffset;
  TSLink<TSHashObjectChunk<RGN,HASHKEY_NONE> > m_terminator;
};

/* 5282 */
struct __cppobj TSExplicitList<TSHashObjectChunk<RGN,HASHKEY_NONE>,20> : TSList<TSHashObjectChunk<RGN,HASHKEY_NONE>,TSGetExplicitLink<TSHashObjectChunk<RGN,HASHKEY_NONE> > >
{
};

/* 5283 */
struct __cppobj TSHashTableReuse<RGN,HASHKEY_NONE,1> : TSHashTable<RGN,HASHKEY_NONE>
{
  TSExplicitList<RGN,-572662307> m_reuseList;
  unsigned int m_chunkSize;
  TSExplicitList<TSHashObjectChunk<RGN,HASHKEY_NONE>,20> m_chunkList;
};

/* 5284 */
struct /*VFT*/ TSHashTableReuse<RGN,HASHKEY_NONE,1>_vtbl
{
  void (__thiscall *TSHashTableReuse<RGN,HASHKEY_NONE,1>::Destroy)(TSHashTableReuse<RGN,HASHKEY_NONE,1> *this);
  RGN *(__thiscall *TSHashTable<RGN,HASHKEY_NONE>::InternalNew)(struct TSHashTableReuse<RGN,HASHKEY_NONE,1> *this, TSExplicitList<RGN,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *TSHashTable<RGN,HASHKEY_NONE>::~TSHashTable<RGN,HASHKEY_NONE>)(struct TSHashTableReuse<RGN,HASHKEY_NONE,1> *this);
  void (__thiscall *TSHashTable<RGN,HASHKEY_NONE>::Destroy)(struct TSHashTableReuse<RGN,HASHKEY_NONE,1> *this);
};

/* 5285 */
struct __cppobj TSExportTableSimple<RGN,HSRGN__ *,1> : TSHashTableReuse<RGN,HASHKEY_NONE,1>
{
  HASHKEY_NONE m_key;
  unsigned int m_sequence;
  int m_wrapped;
};

/* 5286 */
struct /*VFT*/ TSExportTableSimple<RGN,HSRGN__ *,1>_vtbl
{
  void (__thiscall *TSExportTableSimple<RGN,HSRGN__ *,1>::~TSExportTableSimple<RGN,HSRGN__ *,1>)(TSExportTableSimple<RGN,HSRGN__ *,1> *this);
  RGN *(__thiscall *TSHashTable<RGN,HASHKEY_NONE>::InternalNew)(struct TSExportTableSimple<RGN,HSRGN__ *,1> *this, TSExplicitList<RGN,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *TSHashTable<RGN,HASHKEY_NONE>::~TSHashTable<RGN,HASHKEY_NONE>)(struct TSExportTableSimple<RGN,HSRGN__ *,1> *this);
  void (__thiscall *TSHashTable<RGN,HASHKEY_NONE>::Destroy)(struct TSExportTableSimple<RGN,HSRGN__ *,1> *this);
};

/* 5287 */
struct __cppobj TSExportTableSync<RGN,HSRGN__ *,HLOCKEDRGN__ *,CCritSect,1> : TSExportTableSimple<RGN,HSRGN__ *,1>
{
  CCritSect m_sync;
};

/* 5288 */
struct /*VFT*/ TSExportTableSync<RGN,HSRGN__ *,HLOCKEDRGN__ *,CCritSect,1>_vtbl
{
  void (__thiscall *TSExportTableSync<RGN,HSRGN__ *,HLOCKEDRGN__ *,CCritSect,1>::~TSExportTableSync<RGN,HSRGN__ *,HLOCKEDRGN__ *,CCritSect,1>)(TSExportTableSync<RGN,HSRGN__ *,HLOCKEDRGN__ *,CCritSect,1> *this);
  RGN *(__thiscall *TSHashTable<RGN,HASHKEY_NONE>::InternalNew)(struct TSExportTableSync<RGN,HSRGN__ *,HLOCKEDRGN__ *,CCritSect,1> *this, TSExplicitList<RGN,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *TSHashTable<RGN,HASHKEY_NONE>::~TSHashTable<RGN,HASHKEY_NONE>)(struct TSExportTableSync<RGN,HSRGN__ *,HLOCKEDRGN__ *,CCritSect,1> *this);
  void (__thiscall *TSHashTable<RGN,HASHKEY_NONE>::Destroy)(struct TSExportTableSync<RGN,HSRGN__ *,HLOCKEDRGN__ *,CCritSect,1> *this);
};

/* 5289 */
struct HLOCKEDRGN__
{
  int unused;
};

/* 5290 */
struct __cppobj TSGetExplicitLink<RGN>
{
};

/* 5291 */
struct __cppobj TSGetExplicitLink<TSHashObjectChunk<RGN,HASHKEY_NONE> >
{
};

/* 5292 */
struct _LOG
{
  HSLOG__ *log;
  _LOG *next;
  char filename[260];
  void *file;
  unsigned int flags;
  unsigned int bufferused;
  unsigned int pendpoint;
  int indent;
  int timeStamp;
  char buffer[65536];
};

/* 5293 */
struct HLOCKEDLOG__
{
  int unused;
};

/* 5294 */
struct CDebugLockData
{
  unsigned int m_entries;
  CDebugLockData *m_prevLock;
  CDebugLockData *m_nextLock;
};

/* 5295 */
struct CDebugLockEntry
{
  unsigned int m_time;
  unsigned int m_threadId;
  unsigned int m_next;
  const char *m_fileName;
  unsigned int m_line;
};

/* 5296 */
struct __cppobj CDebugSCritSect : SCritSect
{
  unsigned __int8 m_debugData[12];
};

/* 5297 */
struct SInitCritSect
{
  int m_spinLock;
  SCritSect *m_critsect;
  unsigned __int8 m_critsectData[24];
};

/* 5298 */
struct SRWLock::SUNNLOCK
{
  int m_state;
  int m_event;
};

/* 5299 */
struct SRWLock::SURWLOCK
{
  SRWLock::SUNNLOCK m_mutex;
  int m_readerEvent;
};

/* 5300 */
struct __cppobj CDebugSRWLock : CSRWLock
{
  unsigned __int8 m_debugData[12];
};

/* 5301 */
struct __cppobj SMutex : SSyncObject
{
};

/* 5302 */
struct __cppobj CDebugLock<CDebugSCritSect> : CDebugSCritSect
{
};

/* 5303 */
struct __cppobj CDebugLock<CDebugSRWLock> : CDebugSRWLock
{
};

/* 5304 */
struct S_Thread::SThreadTrack
{
  int suspended;
  int live;
  unsigned int threadId;
  void *threadH;
  char name[16];
};

/* 5305 */
struct $9E20CC6BD41CE95A79487458F31A02A7
{
  unsigned int cdThreadId;
  void *cdThreadH;
};

/* 5306 */
struct __cppobj TSLink<CMDDEF>
{
  TSLink<CMDDEF> *m_prevlink;
  CMDDEF *m_next;
};

/* 5307 */
struct __cppobj TSLinkedNode<CMDDEF>
{
  TSLink<CMDDEF> m_link;
};

/* 5308 */
union $93E8CE4F905E26971D3C395C31581DBA
{
  unsigned int currvalue;
  char *currvaluestr;
};

/* 5309 */
struct __cppobj CMDDEF : TSLinkedNode<CMDDEF>
{
  unsigned int flags;
  unsigned int id;
  char name[16];
  int namelength;
  unsigned int setvalue;
  unsigned int setmask;
  void *variableptr;
  unsigned int variablebytes;
  int (__stdcall *callback)(_CMDPARAMS *, const char *);
  int found;
  $93E8CE4F905E26971D3C395C31581DBA ___u11;
};

/* 5310 */
struct __cppobj TSList<CMDDEF,TSGetLink<CMDDEF> >
{
  int m_linkoffset;
  TSLink<CMDDEF> m_terminator;
};

/* 5311 */
struct _CMDERROR
{
  unsigned int errorcode;
  const char *itemstr;
  const char *errorstr;
};

/* 5312 */
struct _PROCESSING
{
  CMDDEF *ptr;
  char name[16];
  int namelength;
};

/* 5313 */
struct __cppobj TSGetLink<CMDDEF>
{
};

/* 5314 */
struct __cppobj TSLink<FILEMAP>
{
  TSLink<FILEMAP> *m_prevlink;
  FILEMAP *m_next;
};

/* 5315 */
struct __cppobj TSHashObject<FILEMAP,HASHKEY_STRI>
{
  unsigned int m_hashval;
  __unaligned __declspec(align(1)) TSLink<FILEMAP> m_linktoslot;
  __unaligned __declspec(align(1)) TSLink<FILEMAP> m_linktofull;
  HASHKEY_STRI m_key;
};

/* 5316 */
struct __cppobj FILEMAP : TSHashObject<FILEMAP,HASHKEY_STRI>
{
  char *realname;
  SFILE_TYPE type;
};

/* 5317 */
struct __cppobj TSList<FILEMAP,TSGetExplicitLink<FILEMAP> >
{
  int m_linkoffset;
  TSLink<FILEMAP> m_terminator;
};

/* 5318 */
struct __cppobj TSExplicitList<FILEMAP,-572662307> : TSList<FILEMAP,TSGetExplicitLink<FILEMAP> >
{
};

/* 5319 */
struct __cppobj TSBaseArray<TSExplicitList<FILEMAP,-572662307> >
{
  TSBaseArray<TSExplicitList<FILEMAP,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<FILEMAP,-572662307> *m_data;
};

/* 5320 */
struct /*VFT*/ TSBaseArray<TSExplicitList<FILEMAP,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<FILEMAP,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<FILEMAP,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<FILEMAP,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<FILEMAP,-572662307> > *this);
};

/* 5321 */
struct /*VFT*/ TSFixedArray<TSExplicitList<FILEMAP,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<FILEMAP,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<FILEMAP,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<FILEMAP,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<FILEMAP,-572662307> > *this);
};

/* 5322 */
struct __cppobj TSFixedArray<TSExplicitList<FILEMAP,-572662307> > : TSBaseArray<TSExplicitList<FILEMAP,-572662307> >
{
};

/* 5323 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<FILEMAP,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<FILEMAP,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<FILEMAP,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<FILEMAP,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<FILEMAP,-572662307> > *this);
};

/* 5324 */
struct __cppobj TSGrowableArray<TSExplicitList<FILEMAP,-572662307> > : TSFixedArray<TSExplicitList<FILEMAP,-572662307> >
{
  unsigned int m_chunk;
};

/* 5325 */
struct __cppobj TSHashTable<FILEMAP,HASHKEY_STRI>
{
  TSHashTable<FILEMAP,HASHKEY_STRI>_vtbl *__vftable /*VFT*/;
  TSExplicitList<FILEMAP,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<FILEMAP,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 5326 */
struct /*VFT*/ TSHashTable<FILEMAP,HASHKEY_STRI>_vtbl
{
  void (__thiscall *TSHashTable<FILEMAP,HASHKEY_STRI>::InternalDelete)(TSHashTable<FILEMAP,HASHKEY_STRI> *this, FILEMAP *);
  FILEMAP *(__thiscall *TSHashTable<FILEMAP,HASHKEY_STRI>::InternalNew)(TSHashTable<FILEMAP,HASHKEY_STRI> *this, TSExplicitList<FILEMAP,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *TSHashTable<FILEMAP,HASHKEY_STRI>::~TSHashTable<FILEMAP,HASHKEY_STRI>)(TSHashTable<FILEMAP,HASHKEY_STRI> *this);
  void (__thiscall *TSHashTable<FILEMAP,HASHKEY_STRI>::Destroy)(TSHashTable<FILEMAP,HASHKEY_STRI> *this);
};

/* 5327 */
struct __cppobj TSLink<ASYNCREAD>
{
  TSLink<ASYNCREAD> *m_prevlink;
  ASYNCREAD *m_next;
};

/* 5328 */
struct __cppobj TSLinkedNode<ASYNCREAD>
{
  TSLink<ASYNCREAD> m_link;
};

/* 5329 */
struct __cppobj ASYNCREAD : TSLinkedNode<ASYNCREAD>
{
  SFile *fileptr;
  void *buffer;
  unsigned int bytestoread;
  SOVERLAPPED *overlapped;
};

/* 5330 */
struct __cppobj TSList<ASYNCREAD,TSGetLink<ASYNCREAD> >
{
  int m_linkoffset;
  TSLink<ASYNCREAD> m_terminator;
};

/* 5331 */
struct __cppobj NoPaqCompHdr
{
  unsigned int uncompressedSize;
  char signature[4];
  MD5 md5;
};

/* 5332 */
struct __cppobj TSGetLink<ASYNCREAD>
{
};

/* 5333 */
struct __cppobj TSGetExplicitLink<FILEMAP>
{
};

/* 5334 */
struct APPFATINFO
{
  const char *filename;
  int linenumber;
  unsigned int threadId;
};

/* 5335 */
struct __cppobj TSLink<HANDLER>
{
  TSLink<HANDLER> *m_prevlink;
  HANDLER *m_next;
};

/* 5336 */
struct __cppobj TSLinkedNode<HANDLER>
{
  TSLink<HANDLER> m_link;
};

/* 5337 */
struct __cppobj __unaligned __declspec(align(4)) HANDLER : TSLinkedNode<HANDLER>
{
  int (__stdcall *handler)(unsigned int, const char *, const char *, int, const char *);
};

/* 5338 */
struct __cppobj TSList<HANDLER,TSGetLink<HANDLER> >
{
  int m_linkoffset;
  TSLink<HANDLER> m_terminator;
};

/* 5339 */
struct __cppobj TSListWinHeap<HANDLER,TSGetLink<HANDLER> > : TSList<HANDLER,TSGetLink<HANDLER> >
{
};

/* 5340 */
struct _MSGSRC
{
  unsigned __int16 facility;
  unsigned __int16 reserved;
  HINSTANCE__ *module;
  _MSGSRC *next;
};

/* 5341 */
struct __cppobj TSGetLink<HANDLER>
{
};

/* 5342 */
struct __declspec(align(4)) _HEAP
{
  _HEAP *next;
  HSHEAP__ *handle;
  unsigned int slot;
  unsigned int addrsig;
  int active;
  unsigned int allocatedblocks;
  unsigned int allocatedbytes;
  _BLOCK *firstblock;
  _BLOCK *termblock;
  unsigned int uncombinedfree;
  unsigned int chunksize;
  unsigned int committedbytes;
  unsigned int reservedbytes;
  unsigned int externalbytes;
  unsigned int cumulativeAllocs;
  unsigned int cumulativeFrees;
  unsigned int cumulativeReallocs;
  unsigned int mark_externalbytes;
  unsigned int mark_allocatedblocks;
  unsigned int mark_allocatedbytes;
  unsigned int mark_committedbytes;
  unsigned int mark_cumulativeAllocs;
  unsigned int mark_cumulativeFrees;
  unsigned int mark_cumulativeReallocs;
  _FREEBLOCK *firstfreeblock[9];
  int linenumber;
  char filename[1];
};

/* 5343 */
struct _BASEBLOCK
{
  unsigned __int16 bytes;
  unsigned __int8 padding;
  unsigned __int8 flags;
};

/* 5344 */
struct __cppobj _BLOCK : _BASEBLOCK
{
  unsigned __int16 heapaddr;
  unsigned __int16 signature1;
};

/* 5345 */
struct __cppobj _FREEBLOCK : _BASEBLOCK
{
  _FREEBLOCK *next;
};

/* 5346 */
struct HLOCKEDHEAP__
{
  int unused;
};

/* 5347 */
struct _SMEMHEAPDETAILS2
{
  unsigned int size;
  HSHEAP__ *handle;
  char filename[260];
  int linenumber;
  unsigned int regions;
  unsigned int committedbytes;
  unsigned int reservedbytes;
  unsigned int maximumsize;
  unsigned int cumulativeAllocs;
  unsigned int cumulativeFrees;
  unsigned int cumulativeReallocs;
  unsigned int allocatedblocks;
  unsigned int allocatedbytes;
  unsigned int mark_allocatedblocks;
  unsigned int mark_allocatedbytes;
  unsigned int mark_committedbytes;
  unsigned int mark_cumulativeAllocs;
  unsigned int mark_cumulativeFrees;
  unsigned int mark_cumulativeReallocs;
};

/* 5348 */
struct SMemReportByCallerInfo
{
  unsigned int numSubHeaps;
  unsigned int cumulativeAllocs;
  unsigned int cumulativeFrees;
  unsigned int cumulativeReallocs;
  unsigned int allocatedBlocks;
  unsigned int allocatedBytes;
  unsigned int committedBytes;
  unsigned int reservedBytes;
  unsigned int mark_allocatedBlocks;
  unsigned int mark_allocatedBytes;
  unsigned int mark_committedBytes;
  unsigned int mark_cumulativeAllocs;
  unsigned int mark_cumulativeFrees;
  unsigned int mark_cumulativeReallocs;
  int lineNumber;
  char fileName[256];
};

/* 5349 */
struct _SMEMBLOCKDETAILS
{
  unsigned int size;
  void *ptr;
  int allocated;
  int valid;
  unsigned int bytes;
  unsigned int overhead;
  unsigned int flags;
};

/* 5352 */
struct __cppobj TSLink<CMapBaseObj>
{
  TSLink<CMapBaseObj> *m_prevlink;
  CMapBaseObj *m_next;
};

/* 5353 */
struct __cppobj TSLink<CMapBaseObjLink>
{
  TSLink<CMapBaseObjLink> *m_prevlink;
  CMapBaseObjLink *m_next;
};

/* 5355 */
struct __cppobj TSList<CMapBaseObjLink,TSGetExplicitLink<CMapBaseObjLink> >
{
  int m_linkoffset;
  TSLink<CMapBaseObjLink> m_terminator;
};

/* 5356 */
struct __cppobj TSExplicitList<CMapBaseObjLink,16> : TSList<CMapBaseObjLink,TSGetExplicitLink<CMapBaseObjLink> >
{
};

/* 5350 */
struct __cppobj CMapBaseObj
{
  CMapBaseObj_vtbl *__vftable /*VFT*/;
  unsigned int type;
  TSLink<CMapBaseObj> lameAssLink;
  TSExplicitList<CMapBaseObjLink,16> parentLinkList;
  NTempest::C3Vector pos;
  float scale;
  NTempest::C4Quaternion rot;
  NTempest::CAaBox aaBox;
  NTempest::CAaSphere aaSphere;
  NTempest::C3Vector corner;
  float camDist;
  unsigned __int16 flags;
  __int16 refCount;
};

/* 5351 */
struct /*VFT*/ CMapBaseObj_vtbl
{
  void (__thiscall *CMapBaseObj::SelectLights)(CMapBaseObj *this);
};

/* 5354 */
struct __cppobj CMapBaseObjLink
{
  CMapBaseObj *owner;
  CMapBaseObj *ref;
  TSLink<CMapBaseObjLink> refLink;
  TSLink<CMapBaseObjLink> ownerLink;
};

/* 5357 */
struct __cppobj TSLink<CDetailDoodadGeom>
{
  TSLink<CDetailDoodadGeom> *m_prevlink;
  CDetailDoodadGeom *m_next;
};

/* 5358 */
struct __cppobj CDetailDoodadGeom
{
  HTEXTURE__ *texture;
  TSGrowableArray<NTempest::C3Vector> vertexList;
  TSGrowableArray<NTempest::C3Vector> normalList;
  TSGrowableArray<NTempest::C2Vector> tVertexList;
  TSGrowableArray<NTempest::CImVector> cVertexList;
  TSGrowableArray<unsigned short> indexList;
  TSLink<CDetailDoodadGeom> lameAssLink;
};

/* 5359 */
struct __cppobj CDetailDoodadInst
{
  CDetailDoodadGeom *geom[2];
  CGxBuf *gxBuf[2];
  TSLink<CDetailDoodadGeom> lameAssLink;
};

/* 5362 */
struct __cppobj TSExplicitList<CMapBaseObjLink,8> : TSList<CMapBaseObjLink,TSGetExplicitLink<CMapBaseObjLink> >
{
};

/* 5363 */
struct __cppobj TSLink<CMapSoundEmitter>
{
  TSLink<CMapSoundEmitter> *m_prevlink;
  CMapSoundEmitter *m_next;
};

/* 5366 */
struct __cppobj TSList<CMapSoundEmitter,TSGetExplicitLink<CMapSoundEmitter> >
{
  int m_linkoffset;
  TSLink<CMapSoundEmitter> m_terminator;
};

/* 5367 */
struct __cppobj TSExplicitList<CMapSoundEmitter,76> : TSList<CMapSoundEmitter,TSGetExplicitLink<CMapSoundEmitter> >
{
};

/* 5360 */
struct __cppobj CMapChunk : CMapBaseObj
{
  unsigned int infoIndex;
  unsigned __int16 holes;
  unsigned __int16 pad;
  unsigned int lod;
  unsigned int remapLod;
  CDetailDoodadInst *detailDoodadInst;
  CMapChunk *neighbor[4];
  TSLink<CMapChunk> sceneLink;
  TSExplicitList<CMapBaseObjLink,8> doodadDefLinkList;
  TSExplicitList<CMapBaseObjLink,8> mapObjDefLinkList;
  TSExplicitList<CMapBaseObjLink,8> entityLinkList;
  TSExplicitList<CMapBaseObjLink,8> lightLinkList;
  TSExplicitList<CMapSoundEmitter,76> soundEmitterList;
  CChunkLiquid *liquids[4];
  NTempest::C2iVector aIndex;
  NTempest::C2iVector sOffset;
  NTempest::C2iVector cOffset;
  float freeTime;
  int bLoaded;
  CChunkLayer *layerList[4];
  unsigned int nLayers;
  CChunkTex *shadowTexture;
  CGxTex *shadowGxTexture;
  unsigned __int8 *shadowOffs;
  unsigned int shadowSize;
  CGxBuf *gxBuf;
  CChunkTex *shaderTexture;
  CGxTex *shaderGxTexture;
  CAsyncObject *asyncObject;
  unsigned int fileOffset;
  unsigned int fileSize;
  NTempest::CRndSeed rSeed;
  unsigned int zoneId;
  unsigned __int16 predTex[8];
  unsigned __int8 noEffectDoodad[8];
  NTempest::C3Vector normalList[145];
  NTempest::C3Vector vertexList[145];
  NTempest::C4Plane planeList[256];
  unsigned int shadowBits[32];
};

/* 5361 */
struct __cppobj TSLink<CMapChunk>
{
  TSLink<CMapChunk> *m_prevlink;
  CMapChunk *m_next;
};

/* 5364 */
struct __cppobj CWSoundEmitter
{
  unsigned int soundPointID;
  unsigned int soundNameID;
  NTempest::C3Vector pos;
  float minDistance;
  float maxDistance;
  float cutoffDistance;
  unsigned int startTime;
  unsigned int endTime;
  unsigned int mode;
  unsigned int groupSilenceMin;
  unsigned int groupSilenceMax;
  unsigned int playInstancesMin;
  unsigned int playInstancesMax;
  unsigned int loopCountMin;
  unsigned int loopCountMax;
  unsigned int interSoundGapMin;
  unsigned int interSoundGapMax;
};

/* 5365 */
struct __cppobj __unaligned __declspec(align(4)) CMapSoundEmitter
{
  CWSoundEmitter data;
  TSLink<CMapSoundEmitter> lameAssLink;
};

/* 5368 */
struct SWVert
{
  unsigned __int8 depth;
  unsigned __int8 flow0Pct;
  unsigned __int8 flow1Pct;
  unsigned __int8 filler;
  float height;
};

/* 5369 */
struct SOVert
{
  unsigned __int8 depth;
  unsigned __int8 foam;
  unsigned __int8 wet;
  unsigned __int8 filler;
};

/* 5370 */
struct SMVert
{
  unsigned __int16 s;
  unsigned __int16 t;
  float height;
};

/* 5371 */
union $C15AB334462CA30BDE6162715AA52E10
{
  SWVert waterVert;
  SOVert oceanVert;
  SMVert magmaVert;
};

/* 5372 */
struct SLVert
{
  $C15AB334462CA30BDE6162715AA52E10 ___u0;
};

/* 5373 */
struct SLTiles
{
  unsigned __int8 tiles[8][8];
};

/* 5374 */
struct __cppobj SWFlowv
{
  NTempest::CAaSphere sphere;
  NTempest::C3Vector dir;
  float velocity;
  float amplitude;
  float frequency;
};

/* 5375 */
struct __cppobj TSLink<CChunkLiquid>
{
  TSLink<CChunkLiquid> *m_prevlink;
  CChunkLiquid *m_next;
};

/* 5376 */
struct __cppobj CChunkLiquid
{
  NTempest::CRange height;
  SLVert verts[81];
  SLTiles tiles;
  unsigned int nFlowvs;
  SWFlowv flowvs[2];
  CMapChunk *chunk;
  TSLink<CChunkLiquid> sceneLink;
  TSLink<CChunkLiquid> lameAssLink;
};

/* 5377 */
struct __cppobj TSLink<CChunkLayer>
{
  TSLink<CChunkLayer> *m_prevlink;
  CChunkLayer *m_next;
};

/* 5379 */
struct __cppobj TSLinkedNode<CChunkLayer>
{
  TSLink<CChunkLayer> m_link;
};

/* 5378 */
struct __cppobj CChunkLayer : TSLinkedNode<CChunkLayer>
{
  unsigned __int16 props;
  unsigned __int16 effectId;
  HTEXTURE__ *texId;
  unsigned __int8 *offsAlpha;
  CChunkTex *tex;
  CGxTex *gxTexture;
  CMapChunk *chunk;
};

/* 5380 */
struct __cppobj TSLink<CChunkTex>
{
  TSLink<CChunkTex> *m_prevlink;
  CChunkTex *m_next;
};

/* 5382 */
struct __cppobj TSLinkedNode<CChunkTex>
{
  TSLink<CChunkTex> m_link;
};

/* 5381 */
struct __cppobj CChunkTex : TSLinkedNode<CChunkTex>
{
  unsigned int pixels[4096];
};

/* 5383 */
struct /*VFT*/ CMapChunk_vtbl
{
  void (__thiscall *CMapChunk::SelectLights)(CMapChunk *this);
};

/* 5384 */
struct __cppobj CMap
{
};

/* 5385 */
struct __cppobj TSLink<CMapObj>
{
  TSLink<CMapObj> *m_prevlink;
  CMapObj *m_next;
};

/* 5387 */
struct __cppobj __declspec(align(4)) TSHashObject<CMapObj,HASHKEY_NONE>
{
  unsigned int m_hashval;
  TSLink<CMapObj> m_linktoslot;
  TSLink<CMapObj> m_linktofull;
  HASHKEY_NONE m_key;
};

/* 5398 */
struct __cppobj SIffChunk
{
  unsigned int token;
  unsigned int size;
};

/* 5399 */
struct __cppobj CMapObjHeader
{
  SIffChunk iffChunkVersion;
  unsigned int version;
  SIffChunk iffChunkHeader;
};

/* 5402 */
struct __cppobj TSLink<CMapObjGroup>
{
  TSLink<CMapObjGroup> *m_prevlink;
  CMapObjGroup *m_next;
};

/* 5417 */
struct __cppobj TSList<CMapObjGroup,TSGetExplicitLink<CMapObjGroup> >
{
  int m_linkoffset;
  TSLink<CMapObjGroup> m_terminator;
};

/* 5418 */
struct __cppobj TSExplicitList<CMapObjGroup,428> : TSList<CMapObjGroup,TSGetExplicitLink<CMapObjGroup> >
{
};

/* 5419 */
struct __cppobj TSCArray<CMapObjGroup *,384>
{
  unsigned int m_count;
  CMapObjGroup *m_data[384];
};

/* 5386 */
struct __cppobj CMapObj : TSHashObject<CMapObj,HASHKEY_NONE>
{
  char name[260];
  SMOHeader *header;
  char *textureNameList;
  char *groupNameList;
  SMOGroupInfo *groupInfoList;
  NTempest::C3Vector *portalVertexList;
  SMOPortal *portalList;
  SMOPortalRef *portalRefList;
  SMOLight *lightList;
  SMODoodadSet *doodadSetList;
  char *doodadNameList;
  SMODoodadDef *doodadDefList;
  SMOFog *fogList;
  NTempest::C4Plane *convexVolumePlanes;
  unsigned int textureNameCount;
  unsigned int groupNameCount;
  unsigned int groupCount;
  unsigned int portalVertexCount;
  unsigned int portalCount;
  unsigned int portalRefCount;
  unsigned int lightCount;
  unsigned int doodadSetCount;
  unsigned int doodadNameCount;
  unsigned int doodadDefCount;
  unsigned int fogCount;
  unsigned int volumePlaneCount;
  NTempest::CImVector ambColor;
  int version;
  NTempest::CAaBox aaBox;
  SFile *file;
  TSLink<CMapObj> lameAssLink;
  CMapObjHeader fileHeader;
  unsigned __int8 *data;
  unsigned int dataBytes;
  int refCount;
  float flushTime;
  CAsyncObject *asyncObject;
  unsigned __int8 bLoaded;
  SMOMaterial *materialList;
  unsigned int materialCount;
  unsigned int nGroupsRead;
  TSExplicitList<CMapObjGroup,428> groupList;
  TSCArray<CMapObjGroup *,384> groupPtrList;
};

/* 5388 */
struct __cppobj SMOHeader
{
  unsigned int nTextures;
  unsigned int nGroups;
  unsigned int nPortals;
  unsigned int nLights;
  unsigned int nDoodadNames;
  unsigned int nDoodadDefs;
  unsigned int nDoodadSets;
  NTempest::CImVector ambColor;
  unsigned int wmoID;
  unsigned __int8 pad[28];
};

/* 5389 */
struct __cppobj SMOGroupInfo
{
  unsigned int offset;
  unsigned int size;
  unsigned int flags;
  NTempest::CAaBox aaBox;
  unsigned int nameIndex;
};

/* 5390 */
struct __cppobj SMOPortal
{
  unsigned __int16 startVertex;
  unsigned __int16 count;
  NTempest::C4Plane plane;
};

/* 5391 */
struct SMOPortalRef
{
  unsigned __int16 portalIndex;
  unsigned __int16 groupIndex;
  __int16 side;
  unsigned __int16 filler;
};

/* 5392 */
struct __cppobj SMOLight
{
  unsigned __int8 type;
  unsigned __int8 useAtten;
  unsigned __int8 pad[2];
  NTempest::CImVector color;
  NTempest::C3Vector position;
  float intensity;
  float attenStart;
  float attenEnd;
};

/* 5393 */
struct SMODoodadSet
{
  char name[20];
  unsigned int startIndex;
  unsigned int count;
  unsigned __int8 pad[4];
};

/* 5394 */
struct __cppobj SMODoodadDef
{
  unsigned int nameIndex;
  NTempest::C3Vector pos;
  NTempest::C4Quaternion rot;
  float scale;
  NTempest::CImVector color;
};

/* 5395 */
struct __cppobj SMOFog::Fog
{
  float end;
  float startScalar;
  NTempest::CImVector color;
};

/* 5396 */
struct __cppobj SMOFog::Fogs
{
  SMOFog::Fog fog[2];
};

/* 5397 */
struct __cppobj SMOFog
{
  unsigned int flags;
  NTempest::C3Vector pos;
  float start;
  float end;
  SMOFog::Fogs fogs;
};

/* 5400 */
union $DF5DCC6C0B23627A940F78EAD5BCA235
{
  unsigned __int8 inMemPad[8];
  HTEXTURE__ *hMaps[2];
};

/* 5401 */
struct __cppobj SMOMaterial
{
  unsigned int version;
  unsigned int flags;
  unsigned int blendMode;
  unsigned int diffuseNameIndex;
  NTempest::CImVector sidnColor;
  NTempest::CImVector frameSidnColor;
  unsigned int envNameIndex;
  NTempest::CImVector diffColor;
  unsigned int groundType;
  $DF5DCC6C0B23627A940F78EAD5BCA235 ___u9;
};

/* 5403 */
struct SMOGxBatch
{
  unsigned __int16 vertStart;
  unsigned __int16 vertCount;
  unsigned __int16 batchStart;
  unsigned __int16 batchCount;
};

/* 5405 */
struct __cppobj CAaBsp
{
  CAaBspNode *rootNode;
  CAaBspNode *nodes;
  unsigned __int16 *nodeFaceIndices;
  unsigned int nNodes;
  unsigned int nNodeFaceIndices;
  unsigned __int16 *faceVertexIndices;
  unsigned int nFaceVertexIndices;
  NTempest::C3Vector *vertices;
  unsigned int nVertices;
  unsigned int nodeSize;
  unsigned int nodeNext;
  unsigned int nodeFaceIndicesSize;
  unsigned int nodeFaceIndicesNext;
  unsigned __int16 *buildFaceIndices;
  unsigned int buildFaceIndicesSize;
  unsigned int buildFaceIndicesNext;
  unsigned int treeDepth;
  unsigned int avgNodeFaces;
  int bFree;
  NTempest::CAaBox aaBox;
};

/* 5416 */
struct __cppobj __unaligned __declspec(align(4)) CMapObjGroup
{
  unsigned int flags;
  NTempest::CAaBox aaBox;
  unsigned int portalStart;
  unsigned int portalCount;
  unsigned __int8 fogIds[4];
  unsigned int groupLiquid;
  SMOGxBatch intBatch[4];
  SMOGxBatch extBatch[4];
  CGxBuf *intGxBuf[4];
  CGxBuf *extGxBuf[4];
  CAaBsp aaBsp;
  unsigned int frameCount;
  unsigned int rLevel;
  unsigned int minimapTag;
  float lightmapTexFlushTime;
  char *dbgName;
  NTempest::C4Plane *planeList;
  SMOPoly *polyList;
  NTempest::C3Vector *vertexList;
  NTempest::C3Vector *normalList;
  NTempest::C2Vector *textureVertexList;
  unsigned __int16 *indexList;
  SMOBatch *batchList;
  unsigned __int16 *lightRefList;
  unsigned __int16 *doodadRefList;
  NTempest::CImVector *colorVertexList;
  NTempest::C2Vector *lightmapVertexList;
  SMOLightmap *lightmapList;
  SMOLightmapTex *lightmapTexList;
  NTempest::C2iVector liquidVerts;
  NTempest::C2iVector liquidTiles;
  NTempest::C3Vector liquidCorner;
  unsigned __int16 liquidMtlId;
  __declspec(align(4)) SMOLVert *liquidVertexList;
  SMOLTile *liquidTileList;
  unsigned int planeCount;
  unsigned int polyCount;
  unsigned int vertexCount;
  unsigned int normalCount;
  unsigned int textureVertexCount;
  unsigned int indexCount;
  unsigned int batchCount;
  unsigned int lightRefCount;
  unsigned int doodadRefCount;
  unsigned int colorVertexCount;
  unsigned int lightmapVertexCount;
  unsigned int lightmapCount;
  unsigned int lightmapTexCount;
  int uniqueID;
  unsigned __int8 *data;
  CMapObj *parent;
  float flushTime;
  CAsyncObject *asyncObject;
  unsigned __int8 bLoaded;
  __declspec(align(4)) TSLink<CMapObjGroup> lameAssLink;
};

/* 5404 */
struct __cppobj CAaBspNode
{
  unsigned __int16 flags;
  unsigned __int16 negChild;
  unsigned __int16 posChild;
  unsigned __int16 nFaces;
  unsigned int faceStart;
  float planeDist;
};

/* 5406 */
struct SMOPoly
{
  unsigned __int8 flags;
  unsigned __int8 lightmapTex;
  unsigned __int8 mtlId;
  unsigned __int8 pad[1];
};

/* 5407 */
struct SMOBatch
{
  unsigned __int8 lightMap;
  unsigned __int8 texture;
  __int16 bx;
  __int16 by;
  __int16 bz;
  __int16 tx;
  __int16 ty;
  __int16 tz;
  unsigned __int16 startIndex;
  unsigned __int16 count;
  unsigned __int16 minIndex;
  unsigned __int16 maxIndex;
  unsigned __int8 flags;
  unsigned __int8 pad[1];
};

/* 5408 */
struct SMOLightmap
{
  unsigned __int8 x;
  unsigned __int8 y;
  char width;
  char height;
};

/* 5409 */
union $1659B1EAE5D34414C32932D19D391B9E
{
  unsigned __int8 inMemPad[4];
  CGxTex *gxTexture;
  HTEXTURE__ *hTexture;
};

/* 5410 */
struct SMOLightmapTex
{
  unsigned __int8 texels[32768];
  $1659B1EAE5D34414C32932D19D391B9E ___u1;
};

/* 5411 */
struct SMOWVert
{
  unsigned __int8 flow1;
  unsigned __int8 flow2;
  unsigned __int8 flow1Pct;
  unsigned __int8 filler;
  float height;
};

/* 5412 */
struct SMOMVert
{
  __int16 s;
  __int16 t;
  float height;
};

/* 5413 */
union $8BF43F7752AB07239222D54B9CCCD95D
{
  SMOWVert waterVert;
  SMOMVert magmaVert;
};

/* 5414 */
struct SMOLVert
{
  $8BF43F7752AB07239222D54B9CCCD95D ___u0;
};

/* 5415 */
struct SMOLTile
{
  unsigned __int8 liquid;
};

/* 5420 */
struct __cppobj CFaceQuery
{
  unsigned __int16 *indices;
  unsigned int maxCount;
  unsigned int count;
  unsigned __int8 faceBits[8192];
};

/* 5421 */
struct /*VFT*/ CMapLight_vtbl
{
  void (__thiscall *CMapBaseObj::SelectLights)(struct CMapLight *this);
};

/* 5422 */
struct __cppobj __declspec(align(4)) CMapLight : CMapBaseObj
{
  CGxLight gxLight;
  float attenStart;
  float attenEnd;
  float attenDenom;
  unsigned __int8 dynamic;
};

/* 5423 */
struct __cppobj TSList<CWFrustum,TSGetExplicitLink<CWFrustum> >
{
  int m_linkoffset;
  TSLink<CWFrustum> m_terminator;
};

/* 5424 */
struct __cppobj TSExplicitList<CWFrustum,244> : TSList<CWFrustum,TSGetExplicitLink<CWFrustum> >
{
};

/* 5425 */
struct __cppobj TSLink<CMapObjDefGroup>
{
  TSLink<CMapObjDefGroup> *m_prevlink;
  CMapObjDefGroup *m_next;
};

/* 5426 */
struct __cppobj CMapObjDefGroup : CMapBaseObj
{
  unsigned int groupNum;
  unsigned int doodadRefStart;
  unsigned int nDoodadRefs;
  NTempest::CImVector ambient;
  const char *subzoneName;
  unsigned int level;
  int rDrawSharedLiquidToggle;
  TSExplicitList<CWFrustum,244> frustumList;
  TSExplicitList<CMapBaseObjLink,8> doodadDefLinkList;
  TSExplicitList<CMapBaseObjLink,8> entityLinkList;
  TSExplicitList<CMapBaseObjLink,8> lightLinkList;
  TSLink<CMapObjDefGroup> sceneLink;
};

/* 5427 */
struct /*VFT*/ CMapObjDefGroup_vtbl
{
  void (__thiscall *CMapObjDefGroup::SelectLights)(CMapObjDefGroup *this);
};

/* 5428 */
struct __cppobj TSLink<CMapObjDef>
{
  TSLink<CMapObjDef> *m_prevlink;
  CMapObjDef *m_next;
};

/* 5430 */
struct __cppobj __declspec(align(4)) TSHashObject<CMapObjDef,HASHKEY_NONE>
{
  unsigned int m_hashval;
  TSLink<CMapObjDef> m_linktoslot;
  TSLink<CMapObjDef> m_linktofull;
  HASHKEY_NONE m_key;
};

/* 5431 */
struct __cppobj TSBaseArray<CMapLight *>
{
  TSBaseArray<CMapLight *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CMapLight **m_data;
};

/* 5434 */
struct __cppobj TSFixedArray<CMapLight *> : TSBaseArray<CMapLight *>
{
};

/* 5436 */
struct __cppobj TSGrowableArray<CMapLight *> : TSFixedArray<CMapLight *>
{
  unsigned int m_chunk;
};

/* 5437 */
struct __cppobj TSLink<CMapStaticEntity>
{
  TSLink<CMapStaticEntity> *m_prevlink;
  CMapStaticEntity *m_next;
};

/* 5429 */
struct __cppobj CMapObjDef : CMapBaseObj, TSHashObject<CMapObjDef,HASHKEY_NONE>
{
  NTempest::C44Matrix mat;
  NTempest::C44Matrix invMat;
  unsigned int nameId;
  CMapObj *mapObj;
  unsigned __int16 tDoodadRefs;
  unsigned __int16 firstDoodadRef;
  unsigned int doodadSet;
  unsigned __int16 nameSet;
  const char *zoneName;
  TSExplicitList<CMapBaseObjLink,8> groupLinkList;
  TSGrowableArray<CMapLight *> lightList;
  unsigned int rCount;
  NTempest::CImVector ambient;
  unsigned __int64 param64;
  TSLink<CMapStaticEntity> sceneLink;
};

/* 5432 */
struct /*VFT*/ TSBaseArray<CMapLight *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CMapLight *>::MemFileName)(TSBaseArray<CMapLight *> *this);
  int (__thiscall *TSBaseArray<CMapLight *>::MemLineNo)(TSBaseArray<CMapLight *> *this);
};

/* 5438 */
struct __cppobj TSLink<CMapCacheLight>
{
  TSLink<CMapCacheLight> *m_prevlink;
  CMapCacheLight *m_next;
};

/* 5440 */
struct __cppobj TSList<CMapCacheLight,TSGetExplicitLink<CMapCacheLight> >
{
  int m_linkoffset;
  TSLink<CMapCacheLight> m_terminator;
};

/* 5441 */
struct __cppobj TSExplicitList<CMapCacheLight,72> : TSList<CMapCacheLight,TSGetExplicitLink<CMapCacheLight> >
{
};

/* 5442 */
struct __cppobj CMapStaticEntity : CMapBaseObj
{
  TSExplicitList<CMapCacheLight,72> cacheLightList;
  NTempest::CImVector ambient;
  NTempest::CImVector interiorDirColor;
  float dirLightScale;
  HMODEL__ *model;
  unsigned __int32 flagInside : 1;
  unsigned __int32 flagVisible : 1;
  unsigned __int32 flagCollidable : 1;
  unsigned __int32 flagHidden : 1;
  unsigned __int32 flagShadowed : 1;
  unsigned __int32 flagInLiquid : 1;
  unsigned __int32 flagDeepLiquid : 1;
  unsigned __int32 flagAlwaysAnimate : 1;
  unsigned __int32 flagCastShadow : 1;
};

/* 5439 */
struct __cppobj CMapCacheLight
{
  CGxLight gxLight;
  float attenStart;
  float attenEnd;
  float attenDenom;
  TSLink<CMapCacheLight> lameAssLink;
};

/* 5433 */
struct /*VFT*/ TSFixedArray<CMapLight *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CMapLight *>::MemFileName)(struct TSFixedArray<CMapLight *> *this);
  int (__thiscall *TSBaseArray<CMapLight *>::MemLineNo)(struct TSFixedArray<CMapLight *> *this);
};

/* 5435 */
struct /*VFT*/ TSGrowableArray<CMapLight *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CMapLight *>::MemFileName)(struct TSGrowableArray<CMapLight *> *this);
  int (__thiscall *TSBaseArray<CMapLight *>::MemLineNo)(struct TSGrowableArray<CMapLight *> *this);
};

/* 5443 */
struct /*VFT*/ CMapStaticEntity_vtbl
{
  void (__thiscall *CMapStaticEntity::SelectLights)(CMapStaticEntity *this);
  void (__thiscall *QueryLightmap)(CMapStaticEntity *this, CMapObjDef *, CMapObjGroup *);
};

/* 5444 */
struct /*VFT*/ CMapObjDef_vtbl
{
  void (__thiscall *CMapBaseObj::SelectLights)(struct CMapObjDef *this);
};

/* 5445 */
struct __cppobj TSCArray<unsigned char,163840>
{
  unsigned int m_count;
  unsigned __int8 m_data[163840];
};

/* 5446 */
union $1041A8BACDCFB6FE367C3CA1D7C5EBC7
{
  unsigned __int8 pad[4];
  unsigned int asyncId;
};

/* 5447 */
struct SMAreaInfo
{
  unsigned int offset;
  unsigned int size;
  unsigned int flags;
  $1041A8BACDCFB6FE367C3CA1D7C5EBC7 ___u3;
};

/* 5448 */
struct SMAreaHeader
{
  unsigned int offsInfo;
  unsigned int offsTex;
  unsigned int sizeTex;
  unsigned int offsDoo;
  unsigned int sizeDoo;
  unsigned int offsMob;
  unsigned int sizeMob;
  unsigned __int8 pad[36];
};

/* 5449 */
struct __cppobj TSCArray<HTEXTURE__ *,96>
{
  unsigned int m_count;
  HTEXTURE__ *m_data[96];
};

/* 5450 */
struct __cppobj TSBaseArray<SMDoodadDef>
{
  TSBaseArray<SMDoodadDef>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  SMDoodadDef *m_data;
};

/* 5451 */
struct /*VFT*/ TSBaseArray<SMDoodadDef>_vtbl
{
  const char *(__thiscall *TSBaseArray<SMDoodadDef>::MemFileName)(TSBaseArray<SMDoodadDef> *this);
  int (__thiscall *TSBaseArray<SMDoodadDef>::MemLineNo)(TSBaseArray<SMDoodadDef> *this);
};

/* 5452 */
struct __cppobj SMDoodadDef
{
  unsigned int nameId;
  unsigned int uniqueId;
  NTempest::C3Vector pos;
  NTempest::C3Vector rot;
  unsigned __int16 scale;
  unsigned __int16 flags;
};

/* 5453 */
struct /*VFT*/ TSFixedArray<SMDoodadDef>_vtbl
{
  const char *(__thiscall *TSBaseArray<SMDoodadDef>::MemFileName)(struct TSFixedArray<SMDoodadDef> *this);
  int (__thiscall *TSBaseArray<SMDoodadDef>::MemLineNo)(struct TSFixedArray<SMDoodadDef> *this);
};

/* 5454 */
struct __cppobj TSFixedArray<SMDoodadDef> : TSBaseArray<SMDoodadDef>
{
};

/* 5455 */
struct /*VFT*/ TSGrowableArray<SMDoodadDef>_vtbl
{
  const char *(__thiscall *TSBaseArray<SMDoodadDef>::MemFileName)(struct TSGrowableArray<SMDoodadDef> *this);
  int (__thiscall *TSBaseArray<SMDoodadDef>::MemLineNo)(struct TSGrowableArray<SMDoodadDef> *this);
};

/* 5456 */
struct __cppobj TSGrowableArray<SMDoodadDef> : TSFixedArray<SMDoodadDef>
{
  unsigned int m_chunk;
};

/* 5457 */
struct __cppobj TSBaseArray<SMMapObjDef>
{
  TSBaseArray<SMMapObjDef>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  SMMapObjDef *m_data;
};

/* 5458 */
struct /*VFT*/ TSBaseArray<SMMapObjDef>_vtbl
{
  const char *(__thiscall *TSBaseArray<SMMapObjDef>::MemFileName)(TSBaseArray<SMMapObjDef> *this);
  int (__thiscall *TSBaseArray<SMMapObjDef>::MemLineNo)(TSBaseArray<SMMapObjDef> *this);
};

/* 5459 */
struct __cppobj SMMapObjDef
{
  unsigned int nameId;
  unsigned int uniqueId;
  NTempest::C3Vector pos;
  NTempest::C3Vector rot;
  NTempest::CAaBox extents;
  unsigned __int16 flags;
  unsigned __int16 doodadSet;
  unsigned __int16 nameSet;
  unsigned __int16 pad;
};

/* 5460 */
struct /*VFT*/ TSFixedArray<SMMapObjDef>_vtbl
{
  const char *(__thiscall *TSBaseArray<SMMapObjDef>::MemFileName)(struct TSFixedArray<SMMapObjDef> *this);
  int (__thiscall *TSBaseArray<SMMapObjDef>::MemLineNo)(struct TSFixedArray<SMMapObjDef> *this);
};

/* 5461 */
struct __cppobj TSFixedArray<SMMapObjDef> : TSBaseArray<SMMapObjDef>
{
};

/* 5462 */
struct /*VFT*/ TSGrowableArray<SMMapObjDef>_vtbl
{
  const char *(__thiscall *TSBaseArray<SMMapObjDef>::MemFileName)(struct TSGrowableArray<SMMapObjDef> *this);
  int (__thiscall *TSBaseArray<SMMapObjDef>::MemLineNo)(struct TSGrowableArray<SMMapObjDef> *this);
};

/* 5463 */
struct __cppobj TSGrowableArray<SMMapObjDef> : TSFixedArray<SMMapObjDef>
{
  unsigned int m_chunk;
};

/* 5464 */
struct SMChunkInfo
{
  unsigned int offset;
  unsigned int size;
  unsigned int flags;
  $1041A8BACDCFB6FE367C3CA1D7C5EBC7 ___u3;
};

/* 5465 */
struct /*VFT*/ CMapArea_vtbl
{
  void (__thiscall *CMapBaseObj::SelectLights)(struct CMapArea *this);
};

/* 5466 */
struct __cppobj CMapArea : CMapBaseObj
{
  TSExplicitList<CMapBaseObjLink,8> chunkLinkList;
  unsigned int infoIndex;
  NTempest::C2iVector mIndex;
  NTempest::C2iVector cOffset;
  NTempest::CiRect localRect;
  unsigned int texCount;
  SMAreaHeader header;
  CAsyncObject *asyncObject;
  TSCArray<HTEXTURE__ *,96> texIdTable;
  TSGrowableArray<SMDoodadDef> doodadDefList;
  TSGrowableArray<SMMapObjDef> mapObjDefList;
  SMChunkInfo chunkInfo[256];
  CMapChunk *chunkTable[256];
};

/* 5467 */
struct __cppobj TSLink<CSimpleDoodad>
{
  TSLink<CSimpleDoodad> *m_prevlink;
  CSimpleDoodad *m_next;
};

/* 5468 */
struct __cppobj __declspec(align(4)) TSHashObject<CSimpleDoodad,HASHKEY_NONE>
{
  unsigned int m_hashval;
  __unaligned __declspec(align(1)) TSLink<CSimpleDoodad> m_linktoslot;
  __unaligned __declspec(align(1)) TSLink<CSimpleDoodad> m_linktofull;
  HASHKEY_NONE m_key;
};

/* 5469 */
struct __cppobj CSimpleDoodadMat
{
  unsigned int texture[4];
  unsigned int nTextures;
  unsigned int props;
};

/* 5470 */
struct __cppobj CSimpleDoodadGeoset
{
  TSGrowableArray<NTempest::C3Vector> vertexList;
  TSGrowableArray<NTempest::C3Vector> normalList;
  TSGrowableArray<NTempest::C2Vector> tVertexList;
  TSGrowableArray<unsigned short> indexList;
  unsigned int material;
};

/* 5471 */
struct __cppobj TSBaseArray<NTempest::C44Matrix>
{
  TSBaseArray<NTempest::C44Matrix>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  NTempest::C44Matrix *m_data;
};

/* 5474 */
struct __cppobj TSFixedArray<NTempest::C44Matrix> : TSBaseArray<NTempest::C44Matrix>
{
};

/* 5476 */
struct __cppobj TSGrowableArray<NTempest::C44Matrix> : TSFixedArray<NTempest::C44Matrix>
{
  unsigned int m_chunk;
};

/* 5477 */
struct __cppobj TSBaseArray<CMapDoodadDef *>
{
  TSBaseArray<CMapDoodadDef *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CMapDoodadDef **m_data;
};

/* 5484 */
struct __cppobj TSFixedArray<CMapDoodadDef *> : TSBaseArray<CMapDoodadDef *>
{
};

/* 5486 */
struct __cppobj TSGrowableArray<CMapDoodadDef *> : TSFixedArray<CMapDoodadDef *>
{
  unsigned int m_chunk;
};

/* 5487 */
struct __cppobj CSimpleDoodad : TSHashObject<CSimpleDoodad,HASHKEY_NONE>
{
  HTEXTURE__ *textures[4];
  CSimpleDoodadMat materials[4];
  CSimpleDoodadGeoset geosets[4];
  TSGrowableArray<NTempest::C44Matrix> matrixList;
  TSGrowableArray<CMapDoodadDef *> doodadDefList;
  unsigned int nTextures;
  unsigned int nMaterials;
  unsigned int nGeosets;
  int refCount;
  float flushTime;
  CGxBuf *gxBuf;
  TSLink<CSimpleDoodad> sceneLink;
  NTempest::CAaBox extents;
  NTempest::CAaSphere bounds;
};

/* 5472 */
struct /*VFT*/ TSBaseArray<NTempest::C44Matrix>_vtbl
{
  const char *(__thiscall *TSBaseArray<NTempest::C44Matrix>::MemFileName)(TSBaseArray<NTempest::C44Matrix> *this);
  int (__thiscall *TSBaseArray<NTempest::C44Matrix>::MemLineNo)(TSBaseArray<NTempest::C44Matrix> *this);
};

/* 5478 */
struct /*VFT*/ TSBaseArray<CMapDoodadDef *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CMapDoodadDef *>::MemFileName)(TSBaseArray<CMapDoodadDef *> *this);
  int (__thiscall *TSBaseArray<CMapDoodadDef *>::MemLineNo)(TSBaseArray<CMapDoodadDef *> *this);
};

/* 5479 */
struct __cppobj TSLink<CMapDoodadDef>
{
  TSLink<CMapDoodadDef> *m_prevlink;
  CMapDoodadDef *m_next;
};

/* 5481 */
struct __cppobj TSHashObject<CMapDoodadDef,HASHKEY_DWORD>
{
  unsigned int m_hashval;
  TSLink<CMapDoodadDef> m_linktoslot;
  TSLink<CMapDoodadDef> m_linktofull;
  HASHKEY_DWORD m_key;
};

/* 5480 */
struct __cppobj CMapDoodadDef : CMapStaticEntity, TSHashObject<CMapDoodadDef,HASHKEY_DWORD>
{
  NTempest::C44Matrix lMat;
  NTempest::C44Matrix mat;
  NTempest::CAaBox collideExt;
  const char *modelName;
  unsigned int rCount;
  unsigned int cCount;
  int doodadSoundHandle;
  TSLink<CMapDoodadDef> sceneLink;
  void (__fastcall *RenderCB)(void *, const NTempest::C44Matrix *);
  void *renderCBParam;
};

/* 5473 */
struct /*VFT*/ TSFixedArray<NTempest::C44Matrix>_vtbl
{
  const char *(__thiscall *TSBaseArray<NTempest::C44Matrix>::MemFileName)(struct TSFixedArray<NTempest::C44Matrix> *this);
  int (__thiscall *TSBaseArray<NTempest::C44Matrix>::MemLineNo)(struct TSFixedArray<NTempest::C44Matrix> *this);
};

/* 5475 */
struct /*VFT*/ TSGrowableArray<NTempest::C44Matrix>_vtbl
{
  const char *(__thiscall *TSBaseArray<NTempest::C44Matrix>::MemFileName)(struct TSGrowableArray<NTempest::C44Matrix> *this);
  int (__thiscall *TSBaseArray<NTempest::C44Matrix>::MemLineNo)(struct TSGrowableArray<NTempest::C44Matrix> *this);
};

/* 5482 */
struct /*VFT*/ CMapDoodadDef_vtbl
{
  void (__thiscall *CMapDoodadDef::QueryLightmap)(CMapDoodadDef *this, CMapObjDef *, CMapObjGroup *);
  void (__thiscall *QueryLightmap)(struct CMapDoodadDef *this, CMapObjDef *, CMapObjGroup *);
};

/* 5483 */
struct /*VFT*/ TSFixedArray<CMapDoodadDef *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CMapDoodadDef *>::MemFileName)(struct TSFixedArray<CMapDoodadDef *> *this);
  int (__thiscall *TSBaseArray<CMapDoodadDef *>::MemLineNo)(struct TSFixedArray<CMapDoodadDef *> *this);
};

/* 5485 */
struct /*VFT*/ TSGrowableArray<CMapDoodadDef *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CMapDoodadDef *>::MemFileName)(struct TSGrowableArray<CMapDoodadDef *> *this);
  int (__thiscall *TSBaseArray<CMapDoodadDef *>::MemLineNo)(struct TSGrowableArray<CMapDoodadDef *> *this);
};

/* 5488 */
struct __cppobj TSList<CSimpleDoodad,TSGetExplicitLink<CSimpleDoodad> >
{
  int m_linkoffset;
  TSLink<CSimpleDoodad> m_terminator;
};

/* 5489 */
struct __cppobj TSExplicitList<CSimpleDoodad,536> : TSList<CSimpleDoodad,TSGetExplicitLink<CSimpleDoodad> >
{
};

/* 5490 */
struct __cppobj TSExplicitList<CSimpleDoodad,-572662307> : TSList<CSimpleDoodad,TSGetExplicitLink<CSimpleDoodad> >
{
};

/* 5491 */
struct __cppobj TSBaseArray<TSExplicitList<CSimpleDoodad,-572662307> >
{
  TSBaseArray<TSExplicitList<CSimpleDoodad,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<CSimpleDoodad,-572662307> *m_data;
};

/* 5492 */
struct /*VFT*/ TSBaseArray<TSExplicitList<CSimpleDoodad,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CSimpleDoodad,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<CSimpleDoodad,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CSimpleDoodad,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<CSimpleDoodad,-572662307> > *this);
};

/* 5493 */
struct /*VFT*/ TSFixedArray<TSExplicitList<CSimpleDoodad,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CSimpleDoodad,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<CSimpleDoodad,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CSimpleDoodad,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<CSimpleDoodad,-572662307> > *this);
};

/* 5494 */
struct __cppobj TSFixedArray<TSExplicitList<CSimpleDoodad,-572662307> > : TSBaseArray<TSExplicitList<CSimpleDoodad,-572662307> >
{
};

/* 5495 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<CSimpleDoodad,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CSimpleDoodad,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<CSimpleDoodad,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CSimpleDoodad,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<CSimpleDoodad,-572662307> > *this);
};

/* 5496 */
struct __cppobj TSGrowableArray<TSExplicitList<CSimpleDoodad,-572662307> > : TSFixedArray<TSExplicitList<CSimpleDoodad,-572662307> >
{
  unsigned int m_chunk;
};

/* 5497 */
struct __cppobj TSHashTable<CSimpleDoodad,HASHKEY_NONE>
{
  TSHashTable<CSimpleDoodad,HASHKEY_NONE>_vtbl *__vftable /*VFT*/;
  TSExplicitList<CSimpleDoodad,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<CSimpleDoodad,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 5498 */
struct /*VFT*/ TSHashTable<CSimpleDoodad,HASHKEY_NONE>_vtbl
{
  void (__thiscall *TSHashTable<CSimpleDoodad,HASHKEY_NONE>::InternalDelete)(TSHashTable<CSimpleDoodad,HASHKEY_NONE> *this, CSimpleDoodad *);
  CSimpleDoodad *(__thiscall *TSHashTable<CSimpleDoodad,HASHKEY_NONE>::InternalNew)(TSHashTable<CSimpleDoodad,HASHKEY_NONE> *this, TSExplicitList<CSimpleDoodad,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<CSimpleDoodad,HASHKEY_NONE>)(TSHashTable<CSimpleDoodad,HASHKEY_NONE> *this);
  void (__thiscall *TSHashTable<CSimpleDoodad,HASHKEY_NONE>::Destroy)(TSHashTable<CSimpleDoodad,HASHKEY_NONE> *this);
};

/* 5499 */
struct __cppobj CGxVertexPNT0
{
  NTempest::C3Vector p;
  NTempest::C3Vector n;
  NTempest::C2Vector tc[1];
};

/* 5500 */
struct STPrimRemap
{
  unsigned __int16 nIndicies;
  unsigned __int16 *indicies;
};

/* 5501 */
struct STPrimGroup
{
  unsigned __int16 nIndicies;
  unsigned __int16 primType;
  unsigned __int16 *indicies;
};

/* 5502 */
struct __cppobj CGxVertexPN
{
  NTempest::C3Vector p;
  NTempest::C3Vector n;
};

/* 5503 */
struct __cppobj TSList<CDetailDoodadGeom,TSGetExplicitLink<CDetailDoodadGeom> >
{
  int m_linkoffset;
  TSLink<CDetailDoodadGeom> m_terminator;
};

/* 5504 */
struct __cppobj TSExplicitList<CDetailDoodadGeom,104> : TSList<CDetailDoodadGeom,TSGetExplicitLink<CDetailDoodadGeom> >
{
};

/* 5505 */
struct __cppobj TSLink<CDetailDoodadInst>
{
  TSLink<CDetailDoodadInst> *m_prevlink;
  CDetailDoodadInst *m_next;
};

/* 5506 */
struct __cppobj TSList<CDetailDoodadInst,TSGetExplicitLink<CDetailDoodadInst> >
{
  int m_linkoffset;
  TSLink<CDetailDoodadInst> m_terminator;
};

/* 5507 */
struct __cppobj TSExplicitList<CDetailDoodadInst,16> : TSList<CDetailDoodadInst,TSGetExplicitLink<CDetailDoodadInst> >
{
};

/* 5508 */
struct __cppobj TSBaseArray<CDetailDoodadData *>
{
  TSBaseArray<CDetailDoodadData *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CDetailDoodadData **m_data;
};

/* 5509 */
struct /*VFT*/ TSBaseArray<CDetailDoodadData *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CDetailDoodadData *>::MemFileName)(TSBaseArray<CDetailDoodadData *> *this);
  int (__thiscall *TSBaseArray<CDetailDoodadData *>::MemLineNo)(TSBaseArray<CDetailDoodadData *> *this);
};

/* 5510 */
struct __cppobj CDetailDoodadData
{
  const char *fileName;
  int loaded;
  HTEXTURE__ *texture;
  CDetailDoodadGeom *geom;
};

/* 5511 */
struct /*VFT*/ TSFixedArray<CDetailDoodadData *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CDetailDoodadData *>::MemFileName)(struct TSFixedArray<CDetailDoodadData *> *this);
  int (__thiscall *TSBaseArray<CDetailDoodadData *>::MemLineNo)(struct TSFixedArray<CDetailDoodadData *> *this);
};

/* 5512 */
struct __cppobj TSFixedArray<CDetailDoodadData *> : TSBaseArray<CDetailDoodadData *>
{
};

/* 5513 */
struct /*VFT*/ TSGrowableArray<CDetailDoodadData *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CDetailDoodadData *>::MemFileName)(struct TSGrowableArray<CDetailDoodadData *> *this);
  int (__thiscall *TSBaseArray<CDetailDoodadData *>::MemLineNo)(struct TSGrowableArray<CDetailDoodadData *> *this);
};

/* 5514 */
struct __cppobj TSGrowableArray<CDetailDoodadData *> : TSFixedArray<CDetailDoodadData *>
{
  unsigned int m_chunk;
};

/* 5515 */
struct __cppobj TSBaseArray<CGxBuf *>
{
  TSBaseArray<CGxBuf *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CGxBuf **m_data;
};

/* 5516 */
struct /*VFT*/ TSBaseArray<CGxBuf *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxBuf *>::MemFileName)(TSBaseArray<CGxBuf *> *this);
  int (__thiscall *TSBaseArray<CGxBuf *>::MemLineNo)(TSBaseArray<CGxBuf *> *this);
};

/* 5517 */
struct /*VFT*/ TSFixedArray<CGxBuf *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxBuf *>::MemFileName)(struct TSFixedArray<CGxBuf *> *this);
  int (__thiscall *TSBaseArray<CGxBuf *>::MemLineNo)(struct TSFixedArray<CGxBuf *> *this);
};

/* 5518 */
struct __cppobj TSFixedArray<CGxBuf *> : TSBaseArray<CGxBuf *>
{
};

/* 5519 */
struct /*VFT*/ TSGrowableArray<CGxBuf *>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxBuf *>::MemFileName)(struct TSGrowableArray<CGxBuf *> *this);
  int (__thiscall *TSBaseArray<CGxBuf *>::MemLineNo)(struct TSGrowableArray<CGxBuf *> *this);
};

/* 5520 */
struct __cppobj TSGrowableArray<CGxBuf *> : TSFixedArray<CGxBuf *>
{
  unsigned int m_chunk;
};

/* 5521 */
struct __cppobj CDetailDoodad
{
};

/* 5522 */
struct __cppobj TSBaseArray<SGroupPtr>
{
  TSBaseArray<SGroupPtr>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  SGroupPtr *m_data;
};

/* 5523 */
struct /*VFT*/ TSBaseArray<SGroupPtr>_vtbl
{
  const char *(__thiscall *TSBaseArray<SGroupPtr>::MemFileName)(TSBaseArray<SGroupPtr> *this);
  int (__thiscall *TSBaseArray<SGroupPtr>::MemLineNo)(TSBaseArray<SGroupPtr> *this);
};

/* 5524 */
struct SGroupPtr
{
  CMapObjDef *mapObjDef;
  CMapObjDefGroup *mapObjDefGroup;
};

/* 5525 */
struct /*VFT*/ TSFixedArray<SGroupPtr>_vtbl
{
  const char *(__thiscall *TSBaseArray<SGroupPtr>::MemFileName)(struct TSFixedArray<SGroupPtr> *this);
  int (__thiscall *TSBaseArray<SGroupPtr>::MemLineNo)(struct TSFixedArray<SGroupPtr> *this);
};

/* 5526 */
struct __cppobj TSFixedArray<SGroupPtr> : TSBaseArray<SGroupPtr>
{
};

/* 5527 */
struct /*VFT*/ TSGrowableArray<SGroupPtr>_vtbl
{
  const char *(__thiscall *TSBaseArray<SGroupPtr>::MemFileName)(struct TSGrowableArray<SGroupPtr> *this);
  int (__thiscall *TSBaseArray<SGroupPtr>::MemLineNo)(struct TSGrowableArray<SGroupPtr> *this);
};

/* 5528 */
struct __cppobj TSGrowableArray<SGroupPtr> : TSFixedArray<SGroupPtr>
{
  unsigned int m_chunk;
};

/* 5529 */
struct __cppobj TSBaseArray<CGxVertexPC>
{
  TSBaseArray<CGxVertexPC>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CGxVertexPC *m_data;
};

/* 5530 */
struct /*VFT*/ TSBaseArray<CGxVertexPC>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxVertexPC>::MemFileName)(TSBaseArray<CGxVertexPC> *this);
  int (__thiscall *TSBaseArray<CGxVertexPC>::MemLineNo)(TSBaseArray<CGxVertexPC> *this);
};

/* 5531 */
struct __cppobj CGxVertexPC
{
  NTempest::C3Vector p;
  NTempest::CImVector c;
};

/* 5532 */
struct /*VFT*/ TSFixedArray<CGxVertexPC>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxVertexPC>::MemFileName)(struct TSFixedArray<CGxVertexPC> *this);
  int (__thiscall *TSBaseArray<CGxVertexPC>::MemLineNo)(struct TSFixedArray<CGxVertexPC> *this);
};

/* 5533 */
struct __cppobj TSFixedArray<CGxVertexPC> : TSBaseArray<CGxVertexPC>
{
};

/* 5534 */
struct /*VFT*/ TSGrowableArray<CGxVertexPC>_vtbl
{
  const char *(__thiscall *TSBaseArray<CGxVertexPC>::MemFileName)(struct TSGrowableArray<CGxVertexPC> *this);
  int (__thiscall *TSBaseArray<CGxVertexPC>::MemLineNo)(struct TSGrowableArray<CGxVertexPC> *this);
};

/* 5535 */
struct __cppobj TSGrowableArray<CGxVertexPC> : TSFixedArray<CGxVertexPC>
{
  unsigned int m_chunk;
};

/* 5536 */
struct __cppobj TSLink<CMapAreaLow>
{
  TSLink<CMapAreaLow> *m_prevlink;
  CMapAreaLow *m_next;
};

/* 5537 */
struct __cppobj CMapAreaLow
{
  NTempest::CAaBox aaBox;
  NTempest::CAaSphere aaSphere;
  NTempest::C3Vector corner;
  NTempest::C2iVector mIndex;
  float heights[545];
  TSLink<CMapAreaLow> sceneLink;
};

/* 5538 */
struct __cppobj GlareBase
{
  GlareBase_vtbl *__vftable /*VFT*/;
  int m_enabled;
  NTempest::C3Vector m_pos;
  NTempest::CImVector m_color;
  HTEXTURE__ *m_texid;
  float m_baseScale;
  float m_curScale;
  float m_fadeRate;
  float m_opacity;
  float m_targetOpacity;
};

/* 5539 */
struct /*VFT*/ GlareBase_vtbl
{
  void (__thiscall *Update)(GlareBase *this, float);
  void (__thiscall *Render)(GlareBase *this);
  int (__thiscall *IsVisible)(GlareBase *this);
};

/* 5540 */
struct __cppobj DNGlare : GlareBase
{
  NTempest::C2Vector m_fadeTable[4];
  float m_scaleMin;
  float m_scaleMax;
  float m_dotMin;
  float m_alphaMin;
  float m_alphaMax;
};

/* 5541 */
struct /*VFT*/ DNGlare_vtbl
{
  int (__thiscall *DNGlare::IsVisible)(DNGlare *this);
  void (__thiscall *Render)(struct DNGlare *this);
  int (__thiscall *IsVisible)(struct DNGlare *this);
  float (__thiscall *GetCloudDensityFade)(DNGlare *this);
};

/* 5542 */
struct __cppobj DNPlanet
{
  NTempest::C3Vector m_pos;
  NTempest::CImVector m_color;
  HTEXTURE__ *m_texid;
  float m_scale;
  float m_baseScale;
  float m_period;
};

/* 5543 */
struct __cppobj DNClouds
{
  unsigned int m_lastTime;
  float m_sharpness;
  unsigned __int8 m_density;
  float m_densityOverride;
  unsigned int m_lod;
  unsigned int m_updateSize;
  unsigned int m_updateRow;
  unsigned int m_tmSize;
  unsigned int m_tmShift;
  unsigned int m_wrapMask;
  unsigned int m_nOctaves;
  unsigned int m_nLayers;
  TSFixedArray<NTempest::CImVector> m_texels;
  TSFixedArray<unsigned char> m_height;
  TSFixedArray<float> m_noise;
  TSFixedArray<float> m_lastBumpNoiseY;
  TSFixedArray<NTempest::C2Vector> m_bump;
  TSFixedArray<NTempest::C3Vector> m_geoVerts;
  TSFixedArray<NTempest::C2Vector> m_texVerts;
  TSFixedArray<unsigned short> m_indices;
  unsigned __int16 m_nIndices;
  unsigned __int16 m_nVerts;
  unsigned __int16 m_timeX;
  DNFogInfo m_fogInfo;
  float m_waitTime;
  CGxTex *m_texid;
};

/* 5544 */
struct __cppobj DNSky
{
  TSFixedArray<NTempest::C3Vector> m_geoVerts;
  TSFixedArray<NTempest::CImVector> m_clrVerts;
  TSFixedArray<unsigned short> m_indices;
  int m_sphThetaTess;
  unsigned __int16 m_nVerts;
  unsigned __int16 m_nIndices;
  float m_sphRadius;
};

/* 5545 */
struct __cppobj DNStars
{
  HMODEL__ *m_hModel;
  NTempest::CImVector m_color;
  NTempest::C3Vector m_pos;
};

/* 5546 */
struct __cppobj TSCArray<NTempest::CRect,16>
{
  unsigned int m_count;
  NTempest::CRect m_data[16];
};

/* 5547 */
struct __cppobj SPortalExt
{
  unsigned __int16 flags;
  unsigned __int16 rLevel;
  NTempest::CRect sRect;
  unsigned int xformTag;
  unsigned int visitedTag;
};

/* 5548 */
struct __cppobj TSCArray<SPortalExt,2048>
{
  unsigned int m_count;
  SPortalExt m_data[2048];
};

/* 5549 */
struct __cppobj TSList<CMapObj,TSGetExplicitLink<CMapObj> >
{
  int m_linkoffset;
  TSLink<CMapObj> m_terminator;
};

/* 5550 */
struct __cppobj TSExplicitList<CMapObj,-572662307> : TSList<CMapObj,TSGetExplicitLink<CMapObj> >
{
};

/* 5551 */
struct __cppobj TSBaseArray<TSExplicitList<CMapObj,-572662307> >
{
  TSBaseArray<TSExplicitList<CMapObj,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<CMapObj,-572662307> *m_data;
};

/* 5552 */
struct /*VFT*/ TSBaseArray<TSExplicitList<CMapObj,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CMapObj,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<CMapObj,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CMapObj,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<CMapObj,-572662307> > *this);
};

/* 5553 */
struct /*VFT*/ TSFixedArray<TSExplicitList<CMapObj,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CMapObj,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<CMapObj,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CMapObj,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<CMapObj,-572662307> > *this);
};

/* 5554 */
struct __cppobj TSFixedArray<TSExplicitList<CMapObj,-572662307> > : TSBaseArray<TSExplicitList<CMapObj,-572662307> >
{
};

/* 5555 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<CMapObj,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CMapObj,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<CMapObj,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CMapObj,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<CMapObj,-572662307> > *this);
};

/* 5556 */
struct __cppobj TSGrowableArray<TSExplicitList<CMapObj,-572662307> > : TSFixedArray<TSExplicitList<CMapObj,-572662307> >
{
  unsigned int m_chunk;
};

/* 5557 */
struct __cppobj TSHashTable<CMapObj,HASHKEY_NONE>
{
  TSHashTable<CMapObj,HASHKEY_NONE>_vtbl *__vftable /*VFT*/;
  TSExplicitList<CMapObj,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<CMapObj,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 5558 */
struct /*VFT*/ TSHashTable<CMapObj,HASHKEY_NONE>_vtbl
{
  void (__thiscall *TSHashTable<CMapObj,HASHKEY_NONE>::InternalDelete)(TSHashTable<CMapObj,HASHKEY_NONE> *this, CMapObj *);
  CMapObj *(__thiscall *TSHashTable<CMapObj,HASHKEY_NONE>::InternalNew)(TSHashTable<CMapObj,HASHKEY_NONE> *this, TSExplicitList<CMapObj,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<CMapObj,HASHKEY_NONE>)(TSHashTable<CMapObj,HASHKEY_NONE> *this);
  void (__thiscall *TSHashTable<CMapObj,HASHKEY_NONE>::Destroy)(TSHashTable<CMapObj,HASHKEY_NONE> *this);
};

/* 5559 */
struct __cppobj CGxVertexPNT0T1
{
  NTempest::C3Vector p;
  NTempest::C3Vector n;
  NTempest::C2Vector tc[2];
};

/* 5560 */
struct __cppobj CGxVertexPCT0
{
  NTempest::C3Vector p;
  NTempest::CImVector c;
  NTempest::C2Vector tc[1];
};

/* 5561 */
struct __cppobj TSLink<CMapLight>
{
  TSLink<CMapLight> *m_prevlink;
  CMapLight *m_next;
};

/* 5562 */
struct __cppobj TSList<CMapLight,TSGetExplicitLink<CMapLight> >
{
  int m_linkoffset;
  TSLink<CMapLight> m_terminator;
};

/* 5563 */
struct __cppobj TSExplicitList<CMapLight,8> : TSList<CMapLight,TSGetExplicitLink<CMapLight> >
{
};

/* 5564 */
struct __cppobj TSCArray<unsigned char,15000>
{
  unsigned int m_count;
  unsigned __int8 m_data[15000];
};

/* 5565 */
struct SMChunk
{
  unsigned int flags;
  unsigned int indexX;
  unsigned int indexY;
  float radius;
  unsigned int nLayers;
  unsigned int nDoodadRefs;
  unsigned int offsHeight;
  unsigned int offsNormal;
  unsigned int offsLayer;
  unsigned int offsRefs;
  unsigned int offsAlpha;
  unsigned int sizeAlpha;
  unsigned int offsShadow;
  unsigned int sizeShadow;
  unsigned int areaid;
  unsigned int nMapObjRefs;
  unsigned __int16 holes;
  unsigned __int16 pad0;
  unsigned __int16 predTex[8];
  unsigned __int8 noEffectDoodad[8];
  unsigned int offsSndEmitters;
  unsigned int nSndEmitters;
  unsigned int offsLiquid;
  unsigned __int8 pad1[24];
};

/* 5566 */
struct SMLayer
{
  unsigned int textureId;
  unsigned int props;
  unsigned int offsAlpha;
  unsigned __int16 effectId;
  unsigned __int8 pad[2];
};

/* 5567 */
struct SMNormal
{
  char n[145][3];
  char pad[13];
};

/* 5568 */
struct __cppobj TSCArray<CGxBuf *,512>
{
  unsigned int m_count;
  CGxBuf *m_data[512];
};

/* 5569 */
struct __cppobj CWorld::MinimapQuad
{
  unsigned int groupNum;
  NTempest::C2iVector quad;
  NTempest::CAaBox aaBox;
};

/* 5570 */
struct __cppobj TSStackArray<CWorld::MinimapQuad>
{
  unsigned int m_maxCount;
  unsigned int m_count;
  CWorld::MinimapQuad *m_data;
};

/* 5571 */
struct __cppobj TSList<CMapDoodadDef,TSGetExplicitLink<CMapDoodadDef> >
{
  int m_linkoffset;
  TSLink<CMapDoodadDef> m_terminator;
};

/* 5572 */
struct __cppobj TSExplicitList<CMapDoodadDef,-572662307> : TSList<CMapDoodadDef,TSGetExplicitLink<CMapDoodadDef> >
{
};

/* 5573 */
struct __cppobj TSBaseArray<TSExplicitList<CMapDoodadDef,-572662307> >
{
  TSBaseArray<TSExplicitList<CMapDoodadDef,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<CMapDoodadDef,-572662307> *m_data;
};

/* 5574 */
struct /*VFT*/ TSBaseArray<TSExplicitList<CMapDoodadDef,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CMapDoodadDef,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<CMapDoodadDef,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CMapDoodadDef,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<CMapDoodadDef,-572662307> > *this);
};

/* 5575 */
struct /*VFT*/ TSFixedArray<TSExplicitList<CMapDoodadDef,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CMapDoodadDef,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<CMapDoodadDef,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CMapDoodadDef,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<CMapDoodadDef,-572662307> > *this);
};

/* 5576 */
struct __cppobj TSFixedArray<TSExplicitList<CMapDoodadDef,-572662307> > : TSBaseArray<TSExplicitList<CMapDoodadDef,-572662307> >
{
};

/* 5577 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<CMapDoodadDef,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CMapDoodadDef,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<CMapDoodadDef,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CMapDoodadDef,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<CMapDoodadDef,-572662307> > *this);
};

/* 5578 */
struct __cppobj TSGrowableArray<TSExplicitList<CMapDoodadDef,-572662307> > : TSFixedArray<TSExplicitList<CMapDoodadDef,-572662307> >
{
  unsigned int m_chunk;
};

/* 5579 */
struct __cppobj TSHashTable<CMapDoodadDef,HASHKEY_DWORD>
{
  TSHashTable<CMapDoodadDef,HASHKEY_DWORD>_vtbl *__vftable /*VFT*/;
  TSExplicitList<CMapDoodadDef,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<CMapDoodadDef,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 5580 */
struct /*VFT*/ TSHashTable<CMapDoodadDef,HASHKEY_DWORD>_vtbl
{
  void (__thiscall *TSHashTable<CMapDoodadDef,HASHKEY_DWORD>::InternalDelete)(TSHashTable<CMapDoodadDef,HASHKEY_DWORD> *this, CMapDoodadDef *);
  CMapDoodadDef *(__thiscall *TSHashTable<CMapDoodadDef,HASHKEY_DWORD>::InternalNew)(TSHashTable<CMapDoodadDef,HASHKEY_DWORD> *this, TSExplicitList<CMapDoodadDef,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<CMapDoodadDef,HASHKEY_DWORD>)(TSHashTable<CMapDoodadDef,HASHKEY_DWORD> *this);
  void (__thiscall *TSHashTable<CMapDoodadDef,HASHKEY_DWORD>::Destroy)(TSHashTable<CMapDoodadDef,HASHKEY_DWORD> *this);
};

/* 5581 */
struct __cppobj TSLink<CMapEntity>
{
  TSLink<CMapEntity> *m_prevlink;
  CMapEntity *m_next;
};

/* 5582 */
struct __cppobj CMapEntity : CMapStaticEntity
{
  int (__fastcall *handler)(void *, unsigned int, unsigned __int64, unsigned int);
  unsigned __int64 param64;
  unsigned int param32;
  NTempest::C3Vector oldPos;
  unsigned int rFrameCount;
  NTempest::C3Vector lqDirection;
  float lqSurface;
  unsigned int lqWhich;
  NTempest::CImVector ambientTarget;
  float dirLightScaleTarget;
  TSLink<CMapDoodadDef> sceneLink;
};

/* 5583 */
struct /*VFT*/ CMapEntity_vtbl
{
  void (__thiscall *CMapEntity::QueryLightmap)(CMapEntity *this, CMapObjDef *, CMapObjGroup *);
  void (__thiscall *QueryLightmap)(struct CMapEntity *this, CMapObjDef *, CMapObjGroup *);
};

/* 5584 */
struct __cppobj TSList<CMapEntity,TSGetExplicitLink<CMapEntity> >
{
  int m_linkoffset;
  TSLink<CMapEntity> m_terminator;
};

/* 5585 */
struct __cppobj TSExplicitList<CMapEntity,8> : TSList<CMapEntity,TSGetExplicitLink<CMapEntity> >
{
};

/* 5586 */
struct __cppobj TSList<CMapObjDefGroup,TSGetExplicitLink<CMapObjDefGroup> >
{
  int m_linkoffset;
  TSLink<CMapObjDefGroup> m_terminator;
};

/* 5587 */
struct __cppobj TSExplicitList<CMapObjDefGroup,8> : TSList<CMapObjDefGroup,TSGetExplicitLink<CMapObjDefGroup> >
{
};

/* 5588 */
struct __cppobj TSExplicitList<CMapObj,420> : TSList<CMapObj,TSGetExplicitLink<CMapObj> >
{
};

/* 5589 */
struct __cppobj TSLink<CMapArea>
{
  TSLink<CMapArea> *m_prevlink;
  CMapArea *m_next;
};

/* 5590 */
struct __cppobj TSList<CMapArea,TSGetExplicitLink<CMapArea> >
{
  int m_linkoffset;
  TSLink<CMapArea> m_terminator;
};

/* 5591 */
struct __cppobj TSExplicitList<CMapArea,8> : TSList<CMapArea,TSGetExplicitLink<CMapArea> >
{
};

/* 5592 */
struct __cppobj TSList<CMapChunk,TSGetExplicitLink<CMapChunk> >
{
  int m_linkoffset;
  TSLink<CMapChunk> m_terminator;
};

/* 5593 */
struct __cppobj TSExplicitList<CMapChunk,8> : TSList<CMapChunk,TSGetExplicitLink<CMapChunk> >
{
};

/* 5594 */
struct __cppobj TSList<CMapObjDef,TSGetExplicitLink<CMapObjDef> >
{
  int m_linkoffset;
  TSLink<CMapObjDef> m_terminator;
};

/* 5595 */
struct __cppobj TSExplicitList<CMapObjDef,-572662307> : TSList<CMapObjDef,TSGetExplicitLink<CMapObjDef> >
{
};

/* 5596 */
struct __cppobj TSBaseArray<TSExplicitList<CMapObjDef,-572662307> >
{
  TSBaseArray<TSExplicitList<CMapObjDef,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<CMapObjDef,-572662307> *m_data;
};

/* 5597 */
struct /*VFT*/ TSBaseArray<TSExplicitList<CMapObjDef,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CMapObjDef,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<CMapObjDef,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CMapObjDef,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<CMapObjDef,-572662307> > *this);
};

/* 5598 */
struct /*VFT*/ TSFixedArray<TSExplicitList<CMapObjDef,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CMapObjDef,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<CMapObjDef,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CMapObjDef,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<CMapObjDef,-572662307> > *this);
};

/* 5599 */
struct __cppobj TSFixedArray<TSExplicitList<CMapObjDef,-572662307> > : TSBaseArray<TSExplicitList<CMapObjDef,-572662307> >
{
};

/* 5600 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<CMapObjDef,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<CMapObjDef,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<CMapObjDef,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<CMapObjDef,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<CMapObjDef,-572662307> > *this);
};

/* 5601 */
struct __cppobj TSGrowableArray<TSExplicitList<CMapObjDef,-572662307> > : TSFixedArray<TSExplicitList<CMapObjDef,-572662307> >
{
  unsigned int m_chunk;
};

/* 5602 */
struct __cppobj TSHashTable<CMapObjDef,HASHKEY_NONE>
{
  TSHashTable<CMapObjDef,HASHKEY_NONE>_vtbl *__vftable /*VFT*/;
  TSExplicitList<CMapObjDef,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<CMapObjDef,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 5603 */
struct /*VFT*/ TSHashTable<CMapObjDef,HASHKEY_NONE>_vtbl
{
  void (__thiscall *TSHashTable<CMapObjDef,HASHKEY_NONE>::InternalDelete)(TSHashTable<CMapObjDef,HASHKEY_NONE> *this, CMapObjDef *);
  CMapObjDef *(__thiscall *TSHashTable<CMapObjDef,HASHKEY_NONE>::InternalNew)(TSHashTable<CMapObjDef,HASHKEY_NONE> *this, TSExplicitList<CMapObjDef,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<CMapObjDef,HASHKEY_NONE>)(TSHashTable<CMapObjDef,HASHKEY_NONE> *this);
  void (__thiscall *TSHashTable<CMapObjDef,HASHKEY_NONE>::Destroy)(TSHashTable<CMapObjDef,HASHKEY_NONE> *this);
};

/* 5604 */
struct __cppobj TSList<CChunkLiquid,TSGetExplicitLink<CChunkLiquid> >
{
  int m_linkoffset;
  TSLink<CChunkLiquid> m_terminator;
};

/* 5605 */
struct __cppobj TSExplicitList<CChunkLiquid,816> : TSList<CChunkLiquid,TSGetExplicitLink<CChunkLiquid> >
{
};

/* 5606 */
struct __cppobj TSExplicitList<CMapDoodadDef,8> : TSList<CMapDoodadDef,TSGetExplicitLink<CMapDoodadDef> >
{
};

/* 5607 */
struct __cppobj TSList<CChunkLayer,TSGetLink<CChunkLayer> >
{
  int m_linkoffset;
  TSLink<CChunkLayer> m_terminator;
};

/* 5608 */
struct __cppobj TSList<CChunkTex,TSGetLink<CChunkTex> >
{
  int m_linkoffset;
  TSLink<CChunkTex> m_terminator;
};

/* 5609 */
struct __cppobj TSExplicitList<CMapObjDef,8> : TSList<CMapObjDef,TSGetExplicitLink<CMapObjDef> >
{
};

/* 5610 */
struct __cppobj BspQuery
{
};

/* 5611 */
struct __cppobj __declspec(align(4)) BspQuery_Volume<NTempest::CAaBox> : BspQuery
{
  SMOPoly *faces;
  const NTempest::C3Vector *vertexList;
  const NTempest::CAaBox *volume;
  unsigned __int16 faceIgnoreFlags;
};

/* 5612 */
struct __cppobj __declspec(align(4)) BspQuery_Segment : BspQuery
{
  SMOPoly *faces;
  const NTempest::C3Vector *vertexList;
  float *hitT;
  float origHitT;
  NTempest::C3Ray ray;
  float oosegMag;
  float maxT;
  unsigned __int16 faceIgnoreFlags;
};

/* 5613 */
struct __cppobj __declspec(align(4)) BspQuery_Volume<CWFrustum> : BspQuery
{
  SMOPoly *faces;
  const NTempest::C3Vector *vertexList;
  const CWFrustum *volume;
  unsigned __int16 faceIgnoreFlags;
};

/* 5614 */
struct __cppobj CAaBsp_Query<BspQuery_Volume<NTempest::CAaBox> >
{
  const CAaBsp *aaBsp;
  BspQuery_Volume<NTempest::CAaBox> *f;
};

/* 5615 */
struct __cppobj CAaBsp_Query_AaBox<BspQuery_Volume<NTempest::CAaBox> > : CAaBsp_Query<BspQuery_Volume<NTempest::CAaBox> >
{
};

/* 5616 */
struct __cppobj CAaBsp_Query<BspQuery_Segment>
{
  const CAaBsp *aaBsp;
  BspQuery_Segment *f;
};

/* 5617 */
struct __cppobj CAaBsp_Query_Segment<BspQuery_Segment> : CAaBsp_Query<BspQuery_Segment>
{
};

/* 5618 */
struct __cppobj CAaBsp_Query<BspQuery_Volume<CWFrustum> >
{
  const CAaBsp *aaBsp;
  BspQuery_Volume<CWFrustum> *f;
};

/* 5619 */
struct __cppobj CAaBsp_Query_AaBox<BspQuery_Volume<CWFrustum> > : CAaBsp_Query<BspQuery_Volume<CWFrustum> >
{
};

/* 5620 */
struct __cppobj NTempest::CMemBlockT<FogQ> : NTempest::CMemBlock
{
};

/* 5621 */
struct /*VFT*/ NTempest::CMemBlockT<FogQ>_vtbl
{
  void (__thiscall *~NTempest::CMemBlockT<FogQ>)(NTempest::CMemBlockT<FogQ> *this);
};

/* 5622 */
struct __cppobj NTempest::CDynTable<FogQ> : NTempest::CMemBlockT<FogQ>
{
  unsigned int expand;
  unsigned int iallocated;
  unsigned int iused;
};

/* 5623 */
struct /*VFT*/ NTempest::CDynTable<FogQ>_vtbl
{
  void (__thiscall *~NTempest::CDynTable<FogQ>)(NTempest::CDynTable<FogQ> *this);
};

/* 5624 */
struct __cppobj NTempest::CPriorityQ<FogQ,FogQ> : NTempest::CDynTable<FogQ>
{
};

/* 5625 */
struct /*VFT*/ NTempest::CPriorityQ<FogQ,FogQ>_vtbl
{
  void (__thiscall *~NTempest::CPriorityQ<FogQ,FogQ>)(NTempest::CPriorityQ<FogQ,FogQ> *this);
};

/* 5626 */
struct __cppobj FogQ
{
  float dist;
  int subscript;
};

/* 5627 */
struct __cppobj TSLink<WaterRadWave>
{
  TSLink<WaterRadWave> *m_prevlink;
  WaterRadWave *m_next;
};

/* 5628 */
struct __cppobj TSLinkedNode<WaterRadWave>
{
  TSLink<WaterRadWave> m_link;
};

/* 5629 */
struct __cppobj WaterRadWave : TSLinkedNode<WaterRadWave>
{
  float decay;
  float curTime;
  float ra;
  float rb;
  float ooLength;
  float ooTimeLength;
  NTempest::C3Vector pos;
  float length;
  float timeLength;
  float amplitude;
  float velocity;
  float frequency;
};

/* 5630 */
struct __cppobj TSList<WaterRadWave,TSGetLink<WaterRadWave> >
{
  int m_linkoffset;
  TSLink<WaterRadWave> m_terminator;
};

/* 5631 */
struct SMMapHeader
{
  unsigned int nDoodadNames;
  unsigned int offsDoodadNames;
  unsigned int nMapObjNames;
  unsigned int offsMapObjNames;
  unsigned __int8 pad[112];
};

/* 5632 */
struct __cppobj WaterVert
{
  NTempest::C3Vector direction;
  float magnitude;
  float amplitude;
  float height;
};

/* 5633 */
struct __cppobj WaveTrain
{
  NTempest::C2Vector pos;
  NTempest::C2Vector halfSize;
  float radiusSq;
  NTempest::C2iVector phaseSize;
  NTempest::C22Matrix localToWorld;
  float speed;
  float phaseGrid[512];
};

/* 5634 */
struct __cppobj TSBaseArray<LODArrays>
{
  TSBaseArray<LODArrays>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  LODArrays *m_data;
};

/* 5635 */
struct /*VFT*/ TSBaseArray<LODArrays>_vtbl
{
  const char *(__thiscall *TSBaseArray<LODArrays>::MemFileName)(TSBaseArray<LODArrays> *this);
  int (__thiscall *TSBaseArray<LODArrays>::MemLineNo)(TSBaseArray<LODArrays> *this);
};

/* 5636 */
struct __cppobj TSBaseArray<LODIndexFix>
{
  TSBaseArray<LODIndexFix>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  LODIndexFix *m_data;
};

/* 5640 */
struct __cppobj TSFixedArray<LODIndexFix> : TSBaseArray<LODIndexFix>
{
};

/* 5642 */
struct __cppobj TSGrowableArray<LODIndexFix> : TSFixedArray<LODIndexFix>
{
  unsigned int m_chunk;
};

/* 5643 */
struct __cppobj LODArrays
{
  TSGrowableArray<NTempest::C2Vector> geov;
  TSGrowableArray<NTempest::C2Vector> texv;
  TSGrowableArray<unsigned short> idx;
  unsigned int nFixes;
  TSGrowableArray<LODIndexFix> fixes;
};

/* 5637 */
struct /*VFT*/ TSBaseArray<LODIndexFix>_vtbl
{
  const char *(__thiscall *TSBaseArray<LODIndexFix>::MemFileName)(TSBaseArray<LODIndexFix> *this);
  int (__thiscall *TSBaseArray<LODIndexFix>::MemLineNo)(TSBaseArray<LODIndexFix> *this);
};

/* 5638 */
struct LODIndexFix
{
  unsigned __int16 from;
  unsigned __int16 to;
};

/* 5639 */
struct /*VFT*/ TSFixedArray<LODIndexFix>_vtbl
{
  const char *(__thiscall *TSBaseArray<LODIndexFix>::MemFileName)(struct TSFixedArray<LODIndexFix> *this);
  int (__thiscall *TSBaseArray<LODIndexFix>::MemLineNo)(struct TSFixedArray<LODIndexFix> *this);
};

/* 5641 */
struct /*VFT*/ TSGrowableArray<LODIndexFix>_vtbl
{
  const char *(__thiscall *TSBaseArray<LODIndexFix>::MemFileName)(struct TSGrowableArray<LODIndexFix> *this);
  int (__thiscall *TSBaseArray<LODIndexFix>::MemLineNo)(struct TSGrowableArray<LODIndexFix> *this);
};

/* 5644 */
struct /*VFT*/ TSFixedArray<LODArrays>_vtbl
{
  const char *(__thiscall *TSBaseArray<LODArrays>::MemFileName)(struct TSFixedArray<LODArrays> *this);
  int (__thiscall *TSBaseArray<LODArrays>::MemLineNo)(struct TSFixedArray<LODArrays> *this);
};

/* 5645 */
struct __cppobj TSFixedArray<LODArrays> : TSBaseArray<LODArrays>
{
};

/* 5646 */
struct /*VFT*/ TSGrowableArray<LODArrays>_vtbl
{
  const char *(__thiscall *TSBaseArray<LODArrays>::MemFileName)(struct TSGrowableArray<LODArrays> *this);
  int (__thiscall *TSBaseArray<LODArrays>::MemLineNo)(struct TSGrowableArray<LODArrays> *this);
};

/* 5647 */
struct __cppobj TSGrowableArray<LODArrays> : TSFixedArray<LODArrays>
{
  unsigned int m_chunk;
};

/* 5648 */
struct ChunkLodIdx::StartCount
{
  unsigned __int16 start;
  unsigned __int16 count;
};

/* 5649 */
struct __cppobj ChunkLodIdx
{
  TSGrowableArray<unsigned short> indices;
  ChunkLodIdx::StartCount edges[4];
  ChunkLodIdx::StartCount links[4];
  ChunkLodIdx::StartCount center;
};

/* 5650 */
struct __cppobj __declspec(align(4)) CChunkLiquid::UserArg
{
  CChunkLiquid *liquid;
  unsigned int liquidType;
  unsigned __int16 indexCount;
};

/* 5651 */
struct __cppobj Particulate::Particle
{
  NTempest::C3Vector pos;
  float scale;
};

/* 5652 */
struct __cppobj Particulate::Movement
{
  NTempest::C3Vector dir;
  float freq;
  float time;
  float amplitude;
};

/* 5653 */
struct __cppobj Particulate
{
  Particulate::Particle particles[4000];
  unsigned int numParticles;
  NTempest::C3Vector lastCamPos;
  HTEXTURE__ *texture;
  unsigned __int8 show;
  float scale;
  float boxSize;
  float percent;
  unsigned int liquid;
  Particulate::Movement movement;
};

/* 5654 */
struct __cppobj CWorld
{
};

/* 5655 */
struct __cppobj CWorldParam
{
};

/* 5656 */
struct __cppobj TSExplicitList<CMapChunk,156> : TSList<CMapChunk,TSGetExplicitLink<CMapChunk> >
{
};

/* 5657 */
struct __cppobj TSExplicitList<CMapDoodadDef,344> : TSList<CMapDoodadDef,TSGetExplicitLink<CMapDoodadDef> >
{
};

/* 5658 */
struct __cppobj TSExplicitList<CMapObjDef,344> : TSList<CMapObjDef,TSGetExplicitLink<CMapObjDef> >
{
};

/* 5659 */
struct __cppobj TSExplicitList<CChunkLiquid,808> : TSList<CChunkLiquid,TSGetExplicitLink<CChunkLiquid> >
{
};

/* 5660 */
struct __cppobj TSExplicitList<CMapEntity,216> : TSList<CMapEntity,TSGetExplicitLink<CMapEntity> >
{
};

/* 5661 */
struct __cppobj CSortEntry
{
  TSExplicitList<CWFrustum,244> frustumList;
  TSExplicitList<CMapChunk,156> chunkList;
  TSExplicitList<CMapDoodadDef,344> doodadDefList;
  TSExplicitList<CMapObjDef,344> mapObjDefList;
  TSExplicitList<CChunkLiquid,808> liquidList[4];
  TSExplicitList<CMapEntity,216> entityList;
};

/* 5662 */
struct __cppobj TSList<CMapAreaLow,TSGetExplicitLink<CMapAreaLow> >
{
  int m_linkoffset;
  TSLink<CMapAreaLow> m_terminator;
};

/* 5663 */
struct __cppobj TSExplicitList<CMapAreaLow,2240> : TSList<CMapAreaLow,TSGetExplicitLink<CMapAreaLow> >
{
};

/* 5664 */
struct __cppobj TSExplicitList<CMapObjDefGroup,196> : TSList<CMapObjDefGroup,TSGetExplicitLink<CMapObjDefGroup> >
{
};

/* 5665 */
struct __cppobj CSortTable
{
  CSortEntry table[26];
  TSExplicitList<CWFrustum,244> frustumList;
  TSExplicitList<CMapAreaLow,2240> visAreaLowList;
  TSExplicitList<CMapChunk,156> visChunkList;
  TSExplicitList<CMapDoodadDef,344> visDoodadList;
  TSExplicitList<CMapObjDefGroup,196> visMapObjDefGroupList;
  TSExplicitList<CMapEntity,216> visEntityList;
  TSExplicitList<CChunkLiquid,808> visLiquidList[4];
  TSExplicitList<CMapEntity,216> nonVisEntityList;
  TSExplicitList<CMapChunk,156> updateChunkList;
};

/* 5666 */
struct __cppobj CWorldScene
{
};

/* 5667 */
struct ClipInfo
{
  float bc[6];
  unsigned int mask;
  unsigned int filler;
};

/* 5668 */
struct __cppobj ClipFrame
{
  NTempest::C3Vector **points;
  ClipInfo **info;
  unsigned int count;
};

/* 5669 */
struct __cppobj TSLink<AREAHASHOBJECT>
{
  TSLink<AREAHASHOBJECT> *m_prevlink;
  AREAHASHOBJECT *m_next;
};

/* 5670 */
struct __cppobj TSHashObject<AREAHASHOBJECT,AREAHASHKEY>
{
  unsigned int m_hashval;
  __unaligned __declspec(align(1)) TSLink<AREAHASHOBJECT> m_linktoslot;
  __unaligned __declspec(align(1)) TSLink<AREAHASHOBJECT> m_linktofull;
  AREAHASHKEY m_key;
};

/* 5671 */
struct __cppobj __unaligned __declspec(align(4)) AREAHASHOBJECT : TSHashObject<AREAHASHOBJECT,AREAHASHKEY>
{
  const AreaTableRec *rec;
  int midi;
  int midiUnderwater;
  int zoneMusic;
  int reverb;
  int reverbUnderwater;
  int zoneIntroID;
  int zoneIntroIDPriority;
  unsigned int continent;
  unsigned int area;
  unsigned int subArea;
};

/* 5672 */
struct __cppobj TSList<AREAHASHOBJECT,TSGetExplicitLink<AREAHASHOBJECT> >
{
  int m_linkoffset;
  TSLink<AREAHASHOBJECT> m_terminator;
};

/* 5673 */
struct __cppobj TSExplicitList<AREAHASHOBJECT,-572662307> : TSList<AREAHASHOBJECT,TSGetExplicitLink<AREAHASHOBJECT> >
{
};

/* 5674 */
struct __cppobj TSBaseArray<TSExplicitList<AREAHASHOBJECT,-572662307> >
{
  TSBaseArray<TSExplicitList<AREAHASHOBJECT,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<AREAHASHOBJECT,-572662307> *m_data;
};

/* 5675 */
struct /*VFT*/ TSBaseArray<TSExplicitList<AREAHASHOBJECT,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<AREAHASHOBJECT,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<AREAHASHOBJECT,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<AREAHASHOBJECT,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<AREAHASHOBJECT,-572662307> > *this);
};

/* 5676 */
struct /*VFT*/ TSFixedArray<TSExplicitList<AREAHASHOBJECT,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<AREAHASHOBJECT,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<AREAHASHOBJECT,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<AREAHASHOBJECT,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<AREAHASHOBJECT,-572662307> > *this);
};

/* 5677 */
struct __cppobj TSFixedArray<TSExplicitList<AREAHASHOBJECT,-572662307> > : TSBaseArray<TSExplicitList<AREAHASHOBJECT,-572662307> >
{
};

/* 5678 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<AREAHASHOBJECT,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<AREAHASHOBJECT,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<AREAHASHOBJECT,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<AREAHASHOBJECT,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<AREAHASHOBJECT,-572662307> > *this);
};

/* 5679 */
struct __cppobj TSGrowableArray<TSExplicitList<AREAHASHOBJECT,-572662307> > : TSFixedArray<TSExplicitList<AREAHASHOBJECT,-572662307> >
{
  unsigned int m_chunk;
};

/* 5680 */
struct __cppobj TSHashTable<AREAHASHOBJECT,AREAHASHKEY>
{
  TSHashTable<AREAHASHOBJECT,AREAHASHKEY>_vtbl *__vftable /*VFT*/;
  TSExplicitList<AREAHASHOBJECT,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<AREAHASHOBJECT,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 5681 */
struct /*VFT*/ TSHashTable<AREAHASHOBJECT,AREAHASHKEY>_vtbl
{
  void (__thiscall *TSHashTable<AREAHASHOBJECT,AREAHASHKEY>::InternalDelete)(TSHashTable<AREAHASHOBJECT,AREAHASHKEY> *this, AREAHASHOBJECT *);
  AREAHASHOBJECT *(__thiscall *TSHashTable<AREAHASHOBJECT,AREAHASHKEY>::InternalNew)(TSHashTable<AREAHASHOBJECT,AREAHASHKEY> *this, TSExplicitList<AREAHASHOBJECT,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<AREAHASHOBJECT,AREAHASHKEY>)(TSHashTable<AREAHASHOBJECT,AREAHASHKEY> *this);
  void (__thiscall *TSHashTable<AREAHASHOBJECT,AREAHASHKEY>::Destroy)(TSHashTable<AREAHASHOBJECT,AREAHASHKEY> *this);
};

/* 5682 */
struct __cppobj TSBaseArray<LightData>
{
  TSBaseArray<LightData>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  LightData *m_data;
};

/* 5683 */
struct /*VFT*/ TSBaseArray<LightData>_vtbl
{
  const char *(__thiscall *TSBaseArray<LightData>::MemFileName)(TSBaseArray<LightData> *this);
  int (__thiscall *TSBaseArray<LightData>::MemLineNo)(TSBaseArray<LightData> *this);
};

/* 5684 */
struct __cppobj LightListData
{
  NTempest::C2iVector m_chunk;
  int m_chunkRadius;
  NTempest::C3Vector m_lightLocation;
  float m_lightRadius;
  float m_lightDropoff;
  char m_lightName[32];
};

/* 5685 */
struct __cppobj TSBaseArray<LightMarker>
{
  TSBaseArray<LightMarker>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  LightMarker *m_data;
};

/* 5689 */
struct __cppobj TSFixedArray<LightMarker> : TSBaseArray<LightMarker>
{
};

/* 5690 */
struct __cppobj TSBaseArray<LightDataSky>
{
  TSBaseArray<LightDataSky>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  LightDataSky *m_data;
};

/* 5694 */
struct __cppobj TSFixedArray<LightDataSky> : TSBaseArray<LightDataSky>
{
};

/* 5695 */
struct __cppobj TSBaseArray<LightDataFog>
{
  TSBaseArray<LightDataFog>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  LightDataFog *m_data;
};

/* 5699 */
struct __cppobj TSFixedArray<LightDataFog> : TSBaseArray<LightDataFog>
{
};

/* 5700 */
struct __cppobj LightDataItem
{
  TSFixedArray<LightMarker> m_highlightMarker[18];
  TSFixedArray<LightDataSky> m_skyData;
  TSFixedArray<LightDataFog> m_fogData;
  int m_highlightSky;
  int m_cloudMask;
};

/* 5701 */
struct __cppobj LightData
{
  LightListData m_lightlist;
  LightDataItem m_lightdata;
  LightDataItem m_stormdata;
  LightDataItem m_lightdataWater;
  LightDataItem m_stormdataWater;
};

/* 5686 */
struct /*VFT*/ TSBaseArray<LightMarker>_vtbl
{
  const char *(__thiscall *TSBaseArray<LightMarker>::MemFileName)(TSBaseArray<LightMarker> *this);
  int (__thiscall *TSBaseArray<LightMarker>::MemLineNo)(TSBaseArray<LightMarker> *this);
};

/* 5687 */
struct __cppobj LightMarker
{
  int time;
  NTempest::CImVector color;
};

/* 5691 */
struct /*VFT*/ TSBaseArray<LightDataSky>_vtbl
{
  const char *(__thiscall *TSBaseArray<LightDataSky>::MemFileName)(TSBaseArray<LightDataSky> *this);
  int (__thiscall *TSBaseArray<LightDataSky>::MemLineNo)(TSBaseArray<LightDataSky> *this);
};

/* 5692 */
struct LightDataSky
{
  float m_skyData[4];
};

/* 5696 */
struct /*VFT*/ TSBaseArray<LightDataFog>_vtbl
{
  const char *(__thiscall *TSBaseArray<LightDataFog>::MemFileName)(TSBaseArray<LightDataFog> *this);
  int (__thiscall *TSBaseArray<LightDataFog>::MemLineNo)(TSBaseArray<LightDataFog> *this);
};

/* 5697 */
struct LightDataFog
{
  float m_fogEnd;
  float m_fogStartScaler;
};

/* 5688 */
struct /*VFT*/ TSFixedArray<LightMarker>_vtbl
{
  const char *(__thiscall *TSBaseArray<LightMarker>::MemFileName)(struct TSFixedArray<LightMarker> *this);
  int (__thiscall *TSBaseArray<LightMarker>::MemLineNo)(struct TSFixedArray<LightMarker> *this);
};

/* 5693 */
struct /*VFT*/ TSFixedArray<LightDataSky>_vtbl
{
  const char *(__thiscall *TSBaseArray<LightDataSky>::MemFileName)(struct TSFixedArray<LightDataSky> *this);
  int (__thiscall *TSBaseArray<LightDataSky>::MemLineNo)(struct TSFixedArray<LightDataSky> *this);
};

/* 5698 */
struct /*VFT*/ TSFixedArray<LightDataFog>_vtbl
{
  const char *(__thiscall *TSBaseArray<LightDataFog>::MemFileName)(struct TSFixedArray<LightDataFog> *this);
  int (__thiscall *TSBaseArray<LightDataFog>::MemLineNo)(struct TSFixedArray<LightDataFog> *this);
};

/* 5702 */
struct /*VFT*/ TSFixedArray<LightData>_vtbl
{
  const char *(__thiscall *TSBaseArray<LightData>::MemFileName)(struct TSFixedArray<LightData> *this);
  int (__thiscall *TSBaseArray<LightData>::MemLineNo)(struct TSFixedArray<LightData> *this);
};

/* 5703 */
struct __cppobj TSFixedArray<LightData> : TSBaseArray<LightData>
{
};

/* 5704 */
struct __cppobj LightGroup
{
  TSFixedArray<LightData> m_lightData;
};

/* 5705 */
struct __cppobj DiskLightDataItem
{
  int m_highlightCount[18];
  LightMarker m_highlightMarker[18][32];
  float m_fogEnd[32];
  float m_fogStartScaler[32];
  int m_highlightSky;
  float m_skyData[4][32];
  int m_cloudMask;
};

/* 5706 */
struct $407AD26146B296551617CCC784A4D2BB
{
  unsigned int xIncrement;
  unsigned int yIncrement;
};

/* 5707 */
const struct $2D1749811B5AB09306E4C05ACB79410E
{
  unsigned int xIncrement;
  unsigned int yIncrement;
};

/* 5708 */
struct __cppobj TSLink<MINIMAPMD5NAME>
{
  TSLink<MINIMAPMD5NAME> *m_prevlink;
  MINIMAPMD5NAME *m_next;
};

/* 5709 */
struct __cppobj TSHashObject<MINIMAPMD5NAME,HASHKEY_STRI>
{
  unsigned int m_hashval;
  __unaligned __declspec(align(1)) TSLink<MINIMAPMD5NAME> m_linktoslot;
  __unaligned __declspec(align(1)) TSLink<MINIMAPMD5NAME> m_linktofull;
  HASHKEY_STRI m_key;
};

/* 5710 */
struct __cppobj MINIMAPMD5NAME : TSHashObject<MINIMAPMD5NAME,HASHKEY_STRI>
{
  char filename[40];
};

/* 5711 */
struct __cppobj TSList<MINIMAPMD5NAME,TSGetExplicitLink<MINIMAPMD5NAME> >
{
  int m_linkoffset;
  TSLink<MINIMAPMD5NAME> m_terminator;
};

/* 5712 */
struct __cppobj TSExplicitList<MINIMAPMD5NAME,-572662307> : TSList<MINIMAPMD5NAME,TSGetExplicitLink<MINIMAPMD5NAME> >
{
};

/* 5713 */
struct __cppobj TSBaseArray<TSExplicitList<MINIMAPMD5NAME,-572662307> >
{
  TSBaseArray<TSExplicitList<MINIMAPMD5NAME,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<MINIMAPMD5NAME,-572662307> *m_data;
};

/* 5714 */
struct /*VFT*/ TSBaseArray<TSExplicitList<MINIMAPMD5NAME,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<MINIMAPMD5NAME,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<MINIMAPMD5NAME,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<MINIMAPMD5NAME,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<MINIMAPMD5NAME,-572662307> > *this);
};

/* 5715 */
struct /*VFT*/ TSFixedArray<TSExplicitList<MINIMAPMD5NAME,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<MINIMAPMD5NAME,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<MINIMAPMD5NAME,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<MINIMAPMD5NAME,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<MINIMAPMD5NAME,-572662307> > *this);
};

/* 5716 */
struct __cppobj TSFixedArray<TSExplicitList<MINIMAPMD5NAME,-572662307> > : TSBaseArray<TSExplicitList<MINIMAPMD5NAME,-572662307> >
{
};

/* 5717 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<MINIMAPMD5NAME,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<MINIMAPMD5NAME,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<MINIMAPMD5NAME,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<MINIMAPMD5NAME,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<MINIMAPMD5NAME,-572662307> > *this);
};

/* 5718 */
struct __cppobj TSGrowableArray<TSExplicitList<MINIMAPMD5NAME,-572662307> > : TSFixedArray<TSExplicitList<MINIMAPMD5NAME,-572662307> >
{
  unsigned int m_chunk;
};

/* 5719 */
struct __cppobj TSHashTable<MINIMAPMD5NAME,HASHKEY_STRI>
{
  TSHashTable<MINIMAPMD5NAME,HASHKEY_STRI>_vtbl *__vftable /*VFT*/;
  TSExplicitList<MINIMAPMD5NAME,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<MINIMAPMD5NAME,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 5720 */
struct /*VFT*/ TSHashTable<MINIMAPMD5NAME,HASHKEY_STRI>_vtbl
{
  void (__thiscall *TSHashTable<MINIMAPMD5NAME,HASHKEY_STRI>::InternalDelete)(TSHashTable<MINIMAPMD5NAME,HASHKEY_STRI> *this, MINIMAPMD5NAME *);
  MINIMAPMD5NAME *(__thiscall *TSHashTable<MINIMAPMD5NAME,HASHKEY_STRI>::InternalNew)(TSHashTable<MINIMAPMD5NAME,HASHKEY_STRI> *this, TSExplicitList<MINIMAPMD5NAME,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<MINIMAPMD5NAME,HASHKEY_STRI>)(TSHashTable<MINIMAPMD5NAME,HASHKEY_STRI> *this);
  void (__thiscall *TSHashTable<MINIMAPMD5NAME,HASHKEY_STRI>::Destroy)(TSHashTable<MINIMAPMD5NAME,HASHKEY_STRI> *this);
};

/* 5721 */
struct __cppobj TSCArray<NTempest::CImVector,512>
{
  unsigned int m_count;
  NTempest::CImVector m_data[512];
};

/* 5722 */
struct DNClouds::Vector3us
{
  unsigned __int16 x;
  unsigned __int16 y;
  unsigned __int16 z;
};

/* 5723 */
struct DNClouds::Octave
{
  DNClouds::Vector3us value;
  DNClouds::Vector3us delta;
  DNClouds::Vector3us min;
  DNClouds::Vector3us max;
  float amplitude;
  unsigned int permy00;
  unsigned int permy10;
  unsigned int permy01;
  unsigned int permy11;
  float x000;
  float x100;
  float x010;
  float x110;
  float x001;
  float x101;
  float x011;
  float x111;
  unsigned int iv;
  unsigned int lastiv;
};

/* 5724 */
struct __cppobj DNSunGlare : DNGlare
{
};

/* 5725 */
struct /*VFT*/ DNSunGlare_vtbl
{
  float (__thiscall *DNSunGlare::GetCloudDensityFade)(DNSunGlare *this);
  void (__thiscall *Render)(struct DNSunGlare *this);
  int (__thiscall *IsVisible)(struct DNSunGlare *this);
  float (__thiscall *GetCloudDensityFade)(struct DNSunGlare *this);
};

/* 5726 */
struct __cppobj DNMoonGlare : DNGlare
{
};

/* 5727 */
struct /*VFT*/ DNMoonGlare_vtbl
{
  float (__thiscall *DNMoonGlare::GetCloudDensityFade)(DNMoonGlare *this);
  void (__thiscall *Render)(struct DNMoonGlare *this);
  int (__thiscall *IsVisible)(struct DNMoonGlare *this);
  float (__thiscall *GetCloudDensityFade)(struct DNMoonGlare *this);
};

/* 5728 */
struct __cppobj NTempest::CMemBlockT<LightQE> : NTempest::CMemBlock
{
};

/* 5729 */
struct /*VFT*/ NTempest::CMemBlockT<LightQE>_vtbl
{
  void (__thiscall *~NTempest::CMemBlockT<LightQE>)(NTempest::CMemBlockT<LightQE> *this);
};

/* 5730 */
struct __cppobj NTempest::CDynTable<LightQE> : NTempest::CMemBlockT<LightQE>
{
  unsigned int expand;
  unsigned int iallocated;
  unsigned int iused;
};

/* 5731 */
struct /*VFT*/ NTempest::CDynTable<LightQE>_vtbl
{
  void (__thiscall *~NTempest::CDynTable<LightQE>)(NTempest::CDynTable<LightQE> *this);
};

/* 5732 */
struct __cppobj NTempest::CPriorityQ<LightQE,LightQE> : NTempest::CDynTable<LightQE>
{
};

/* 5733 */
struct /*VFT*/ NTempest::CPriorityQ<LightQE,LightQE>_vtbl
{
  void (__thiscall *NTempest::CPriorityQ<LightQE,LightQE>::~CPriorityQ<LightQE,LightQE>)(NTempest::CPriorityQ<LightQE,LightQE> *this);
};

/* 5734 */
struct __cppobj LightQE
{
  float dist;
  int subscript;
};

/* 5735 */
struct $6E9E7BB2AEECC988DF9BB6DCEF90EF8D
{
  float startProgress;
  float endProgress;
  float heightScale;
};

/* 5736 */
struct $A60C59F275751FDDD3027E61CCBCE259
{
  float startProgress;
  float endProgress;
  float startHeightScale;
  float endHeightScaleScale;
};

/* 5737 */
const struct $FAA512291EC179CE65CF43C15D0E634B
{
  float startProgress;
  float endProgress;
  float startHeightScale;
  float endHeightScaleScale;
};

/* 5738 */
struct $7128D95EEEA85C397719982100F00F50
{
  float startProgress;
  float endProgress;
  float startAlpha;
  float endAlpha;
};

/* 5739 */
const struct $9F0021D4A8C53DE09469635B43DE98AA
{
  float startProgress;
  float endProgress;
  float startAlpha;
  float endAlpha;
};

/* 5740 */
struct $445D3B159D72490EDE5758786A63E469
{
  int r;
  int g;
  int b;
  float startProgress;
  float endProgress;
};

/* 5741 */
struct __cppobj TSLink<WORLDTEXTSTRING>
{
  TSLink<WORLDTEXTSTRING> *m_prevlink;
  WORLDTEXTSTRING *m_next;
};

/* 5742 */
struct __cppobj WORLDTEXTCREATEPARAMS
{
  float ascendDistance;
  unsigned int totalTime;
  unsigned int fadeInTime;
  unsigned int fadeOutTime;
  NTempest::CImVector fontColor;
  NTempest::C2Vector shadowOffset;
  NTempest::CImVector shadowColor;
  float charSpacing;
  float heightScale;
  float zOffset;
  NTempest::C2Vector border;
  float startFontHeight;
  float endFontHeight;
  unsigned int enlargeTime;
  unsigned int shrinkTime;
  unsigned int flags;
  char fontName[260];
  float fontHeight;
};

/* 5743 */
struct __cppobj WORLDTEXTSTRING : CHandleObject
{
  WORLDTEXTTYPE worldTextType;
  WORLDTEXTCREATEPARAMS params;
  unsigned int elapsedTime;
  unsigned int totalTime;
  unsigned __int64 object;
  float textWidth;
  float textHeight;
  float heightScale;
  float zOffset;
  TSLink<WORLDTEXTSTRING> link;
  int hidden;
  unsigned int m_flags;
  CGxString *string;
  float savedStringHeight;
  char savedStringText[64];
};

/* 5744 */
struct /*VFT*/ WORLDTEXTSTRING_vtbl
{
  void (__thiscall *~WORLDTEXTSTRING)(WORLDTEXTSTRING *this);
  const char *(__thiscall *CHandleObject::GetObjectName)(struct WORLDTEXTSTRING *this);
};

/* 5745 */
struct __cppobj TSList<WORLDTEXTSTRING,TSGetExplicitLink<WORLDTEXTSTRING> >
{
  int m_linkoffset;
  TSLink<WORLDTEXTSTRING> m_terminator;
};

/* 5746 */
struct __cppobj TSExplicitList<WORLDTEXTSTRING,384> : TSList<WORLDTEXTSTRING,TSGetExplicitLink<WORLDTEXTSTRING> >
{
};

/* 5747 */
struct $4728814CF739805B9F30EE2F9FAF47B1
{
  unsigned int fadeInTime;
  unsigned int fadeOutTime;
  unsigned int totalTime;
  float ascendDist;
  float smallFontHeight;
  float largeFontontHeight;
  float heightScale;
  float heightOffset;
  unsigned int enlargeTime;
  unsigned int shrinkTime;
};

/* 5748 */
struct __cppobj HWORLDTEXT__ : HOBJECT__
{
  int unused;
};

/* 5749 */
struct __cppobj TSLink<PLAYERNAMEDESC>
{
  TSLink<PLAYERNAMEDESC> *m_prevlink;
  PLAYERNAMEDESC *m_next;
};

/* 5750 */
struct __cppobj __unaligned __declspec(align(4)) PLAYERNAMEDESC : CHandleObject
{
  TSLink<PLAYERNAMEDESC> m_link;
  CGxString *m_string;
  unsigned int m_customGeosetID;
  NTempest::CImVector m_stringColor;
  unsigned int m_lastUpdateTime;
  NTempest::C3Vector m_basePos;
  CGUnit_C *m_unitPtr;
  unsigned int m_flags;
  unsigned int m_lastRenderFrame;
  HWORLDTEXT__ *m_worldTextHandles[4];
  float m_heightOffset;
};

/* 5751 */
struct /*VFT*/ PLAYERNAMEDESC_vtbl
{
  void (__thiscall *PLAYERNAMEDESC::~PLAYERNAMEDESC)(PLAYERNAMEDESC *this);
  const char *(__thiscall *CHandleObject::GetObjectName)(struct PLAYERNAMEDESC *this);
};

/* 5752 */
struct __cppobj TSList<PLAYERNAMEDESC,TSGetExplicitLink<PLAYERNAMEDESC> >
{
  int m_linkoffset;
  TSLink<PLAYERNAMEDESC> m_terminator;
};

/* 5753 */
struct __cppobj TSExplicitList<PLAYERNAMEDESC,8> : TSList<PLAYERNAMEDESC,TSGetExplicitLink<PLAYERNAMEDESC> >
{
};

/* 5754 */
struct CVARINFO
{
  UNITNAME_SHOWTYPE_GROUPS group;
  UNIT_UNITNAME_SHOWTYPE showType;
};

/* 5755 */
struct UNITNAMESTRINGS
{
  const char *cvarName;
  const char *cvarDefaultValue;
  const char *cvarHelp;
};

/* 5756 */
struct __cppobj TSLink<WTOBJECT>
{
  TSLink<WTOBJECT> *m_prevlink;
  WTOBJECT *m_next;
};

/* 5758 */
struct __cppobj TSLink<SWING>
{
  TSLink<SWING> *m_prevlink;
  SWING *m_next;
};

/* 5768 */
struct __cppobj TSList<SWING,TSGetLink<SWING> >
{
  int m_linkoffset;
  TSLink<SWING> m_terminator;
};

/* 5757 */
struct __cppobj WTOBJECT
{
  TSLink<WTOBJECT> m_explicitLink;
  TSList<SWING,TSGetLink<SWING> > m_swings;
  HMODEL__ *m_model;
  unsigned int m_geosetID;
  NTempest::C3Vector m_bottomCoord;
  NTempest::C3Vector m_topCoord;
  NTempest::CImVector m_color;
  int m_fadeOutRate;
  unsigned int m_flags;
  unsigned int m_timer;
  int m_currentAlpha;
};

/* 5759 */
struct __cppobj TSLinkedNode<SWING>
{
  TSLink<SWING> m_link;
};

/* 5760 */
struct __cppobj TSBaseArray<VERTEX>
{
  TSBaseArray<VERTEX>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  VERTEX *m_data;
};

/* 5764 */
struct __cppobj TSFixedArray<VERTEX> : TSBaseArray<VERTEX>
{
};

/* 5766 */
struct __cppobj TSGrowableArray<VERTEX> : TSFixedArray<VERTEX>
{
  unsigned int m_chunk;
};

/* 5767 */
struct __cppobj __unaligned __declspec(align(4)) SWING : TSLinkedNode<SWING>
{
  TSGrowableArray<VERTEX> m_trail;
  TSGrowableArray<unsigned short> m_vertexIndices;
  unsigned int m_flags;
  NTempest::C44Matrix m_lastMatrix;
};

/* 5761 */
struct /*VFT*/ TSBaseArray<VERTEX>_vtbl
{
  const char *(__thiscall *TSBaseArray<VERTEX>::MemFileName)(TSBaseArray<VERTEX> *this);
  int (__thiscall *TSBaseArray<VERTEX>::MemLineNo)(TSBaseArray<VERTEX> *this);
};

/* 5762 */
struct __cppobj VERTEX
{
  NTempest::C3Vector v;
  NTempest::CImVector c;
};

/* 5763 */
struct /*VFT*/ TSFixedArray<VERTEX>_vtbl
{
  const char *(__thiscall *TSBaseArray<VERTEX>::MemFileName)(struct TSFixedArray<VERTEX> *this);
  int (__thiscall *TSBaseArray<VERTEX>::MemLineNo)(struct TSFixedArray<VERTEX> *this);
};

/* 5765 */
struct /*VFT*/ TSGrowableArray<VERTEX>_vtbl
{
  const char *(__thiscall *TSBaseArray<VERTEX>::MemFileName)(struct TSGrowableArray<VERTEX> *this);
  int (__thiscall *TSBaseArray<VERTEX>::MemLineNo)(struct TSGrowableArray<VERTEX> *this);
};

/* 5769 */
struct __cppobj TInstanceAllocator<WTOBJECT> : CDataAllocator
{
};

/* 5770 */
struct __cppobj TInstanceAllocator<SWING> : CDataAllocator
{
};

/* 5771 */
struct __cppobj TSBaseArray<TAXILINE>
{
  TSBaseArray<TAXILINE>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TAXILINE *m_data;
};

/* 5772 */
struct /*VFT*/ TSBaseArray<TAXILINE>_vtbl
{
  const char *(__thiscall *TSBaseArray<TAXILINE>::MemFileName)(TSBaseArray<TAXILINE> *this);
  int (__thiscall *TSBaseArray<TAXILINE>::MemLineNo)(TSBaseArray<TAXILINE> *this);
};

/* 5773 */
struct __cppobj TAXILINE
{
  NTempest::C2Vector src;
  NTempest::C2Vector dst;
};

/* 5774 */
struct /*VFT*/ TSFixedArray<TAXILINE>_vtbl
{
  const char *(__thiscall *TSBaseArray<TAXILINE>::MemFileName)(struct TSFixedArray<TAXILINE> *this);
  int (__thiscall *TSBaseArray<TAXILINE>::MemLineNo)(struct TSFixedArray<TAXILINE> *this);
};

/* 5775 */
struct __cppobj TSFixedArray<TAXILINE> : TSBaseArray<TAXILINE>
{
};

/* 5776 */
struct /*VFT*/ TSGrowableArray<TAXILINE>_vtbl
{
  const char *(__thiscall *TSBaseArray<TAXILINE>::MemFileName)(struct TSGrowableArray<TAXILINE> *this);
  int (__thiscall *TSBaseArray<TAXILINE>::MemLineNo)(struct TSGrowableArray<TAXILINE> *this);
};

/* 5777 */
struct __cppobj TSGrowableArray<TAXILINE> : TSFixedArray<TAXILINE>
{
  unsigned int m_chunk;
};

/* 5778 */
struct __cppobj CWorldMath
{
};

/* 5779 */
struct __cppobj TSLink<ITEMCOOLDOWNHASHNODE>
{
  TSLink<ITEMCOOLDOWNHASHNODE> *m_prevlink;
  ITEMCOOLDOWNHASHNODE *m_next;
};

/* 5780 */
struct __cppobj __declspec(align(4)) TSHashObject<ITEMCOOLDOWNHASHNODE,HASHKEY_NONE>
{
  unsigned int m_hashval;
  __unaligned __declspec(align(1)) TSLink<ITEMCOOLDOWNHASHNODE> m_linktoslot;
  __unaligned __declspec(align(1)) TSLink<ITEMCOOLDOWNHASHNODE> m_linktofull;
  HASHKEY_NONE m_key;
};

/* 5781 */
struct __cppobj __unaligned __declspec(align(4)) ITEMCOOLDOWNHASHNODE : TSHashObject<ITEMCOOLDOWNHASHNODE,HASHKEY_NONE>
{
  int spellID;
  unsigned int startTime;
  unsigned __int8 needsEvent;
};

/* 5782 */
struct __cppobj TSList<ITEMCOOLDOWNHASHNODE,TSGetExplicitLink<ITEMCOOLDOWNHASHNODE> >
{
  int m_linkoffset;
  TSLink<ITEMCOOLDOWNHASHNODE> m_terminator;
};

/* 5783 */
struct __cppobj TSExplicitList<ITEMCOOLDOWNHASHNODE,-572662307> : TSList<ITEMCOOLDOWNHASHNODE,TSGetExplicitLink<ITEMCOOLDOWNHASHNODE> >
{
};

/* 5784 */
struct __cppobj TSBaseArray<TSExplicitList<ITEMCOOLDOWNHASHNODE,-572662307> >
{
  TSBaseArray<TSExplicitList<ITEMCOOLDOWNHASHNODE,-572662307> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSExplicitList<ITEMCOOLDOWNHASHNODE,-572662307> *m_data;
};

/* 5785 */
struct /*VFT*/ TSBaseArray<TSExplicitList<ITEMCOOLDOWNHASHNODE,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<ITEMCOOLDOWNHASHNODE,-572662307> >::MemFileName)(TSBaseArray<TSExplicitList<ITEMCOOLDOWNHASHNODE,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<ITEMCOOLDOWNHASHNODE,-572662307> >::MemLineNo)(TSBaseArray<TSExplicitList<ITEMCOOLDOWNHASHNODE,-572662307> > *this);
};

/* 5786 */
struct /*VFT*/ TSFixedArray<TSExplicitList<ITEMCOOLDOWNHASHNODE,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<ITEMCOOLDOWNHASHNODE,-572662307> >::MemFileName)(struct TSFixedArray<TSExplicitList<ITEMCOOLDOWNHASHNODE,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<ITEMCOOLDOWNHASHNODE,-572662307> >::MemLineNo)(struct TSFixedArray<TSExplicitList<ITEMCOOLDOWNHASHNODE,-572662307> > *this);
};

/* 5787 */
struct __cppobj TSFixedArray<TSExplicitList<ITEMCOOLDOWNHASHNODE,-572662307> > : TSBaseArray<TSExplicitList<ITEMCOOLDOWNHASHNODE,-572662307> >
{
};

/* 5788 */
struct /*VFT*/ TSGrowableArray<TSExplicitList<ITEMCOOLDOWNHASHNODE,-572662307> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSExplicitList<ITEMCOOLDOWNHASHNODE,-572662307> >::MemFileName)(struct TSGrowableArray<TSExplicitList<ITEMCOOLDOWNHASHNODE,-572662307> > *this);
  int (__thiscall *TSBaseArray<TSExplicitList<ITEMCOOLDOWNHASHNODE,-572662307> >::MemLineNo)(struct TSGrowableArray<TSExplicitList<ITEMCOOLDOWNHASHNODE,-572662307> > *this);
};

/* 5789 */
struct __cppobj TSGrowableArray<TSExplicitList<ITEMCOOLDOWNHASHNODE,-572662307> > : TSFixedArray<TSExplicitList<ITEMCOOLDOWNHASHNODE,-572662307> >
{
  unsigned int m_chunk;
};

/* 5790 */
struct __cppobj TSHashTable<ITEMCOOLDOWNHASHNODE,HASHKEY_NONE>
{
  TSHashTable<ITEMCOOLDOWNHASHNODE,HASHKEY_NONE>_vtbl *__vftable /*VFT*/;
  TSExplicitList<ITEMCOOLDOWNHASHNODE,-572662307> m_fulllist;
  unsigned int m_fullnessIndicator;
  TSGrowableArray<TSExplicitList<ITEMCOOLDOWNHASHNODE,-572662307> > m_slotlistarray;
  unsigned int m_slotmask;
};

/* 5791 */
struct /*VFT*/ TSHashTable<ITEMCOOLDOWNHASHNODE,HASHKEY_NONE>_vtbl
{
  void (__thiscall *TSHashTable<ITEMCOOLDOWNHASHNODE,HASHKEY_NONE>::InternalDelete)(TSHashTable<ITEMCOOLDOWNHASHNODE,HASHKEY_NONE> *this, ITEMCOOLDOWNHASHNODE *);
  ITEMCOOLDOWNHASHNODE *(__thiscall *TSHashTable<ITEMCOOLDOWNHASHNODE,HASHKEY_NONE>::InternalNew)(TSHashTable<ITEMCOOLDOWNHASHNODE,HASHKEY_NONE> *this, TSExplicitList<ITEMCOOLDOWNHASHNODE,-572662307> *, unsigned int, unsigned int);
  void (__thiscall *~TSHashTable<ITEMCOOLDOWNHASHNODE,HASHKEY_NONE>)(TSHashTable<ITEMCOOLDOWNHASHNODE,HASHKEY_NONE> *this);
  void (__thiscall *TSHashTable<ITEMCOOLDOWNHASHNODE,HASHKEY_NONE>::Destroy)(TSHashTable<ITEMCOOLDOWNHASHNODE,HASHKEY_NONE> *this);
};

/* 5792 */
struct __cppobj TSLink<SPELLHISTORY>
{
  TSLink<SPELLHISTORY> *m_prevlink;
  SPELLHISTORY *m_next;
};

/* 5793 */
struct __cppobj TSLinkedNode<SPELLHISTORY>
{
  TSLink<SPELLHISTORY> m_link;
};

/* 5794 */
struct __cppobj SPELLHISTORY : TSLinkedNode<SPELLHISTORY>
{
  int spellID;
  int itemID;
  unsigned int recoveryStart;
  unsigned int recoveryTime;
  int category;
  unsigned int categoryRecoveryStart;
  unsigned int categoryRecoveryTime;
  unsigned __int8 onHold;
  int startRecoveryCategory;
  unsigned int startRecoveryTime;
};

/* 5795 */
struct __cppobj TSList<SPELLHISTORY,TSGetLink<SPELLHISTORY> >
{
  int m_linkoffset;
  TSLink<SPELLHISTORY> m_terminator;
};

/* 5796 */
struct __cppobj SpellHistory
{
  TSList<SPELLHISTORY,TSGetLink<SPELLHISTORY> > m_spellHistory;
  TSList<SPELLHISTORY,TSGetLink<SPELLHISTORY> > m_freeList;
};

/* 5797 */
struct __declspec(align(4)) FindAmmoData
{
  int ammoType;
  unsigned __int8 exoticAmmo;
};

/* 5798 */
struct __cppobj TSStackArray<enum MISS_REASON>
{
  unsigned int m_maxCount;
  unsigned int m_count;
  MISS_REASON *m_data;
};

/* 5799 */
struct __cppobj TSList<BlizzardObject,TSGetLink<BlizzardObject> >
{
  int m_linkoffset;
  TSLink<BlizzardObject> m_terminator;
};

/* 5800 */
struct __cppobj TSBaseArray<SpellAuraNamesRec const *>
{
  TSBaseArray<SpellAuraNamesRec const *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  const SpellAuraNamesRec **m_data;
};

/* 5801 */
struct /*VFT*/ TSBaseArray<SpellAuraNamesRec const *>_vtbl
{
  const char *(__thiscall *TSBaseArray<SpellAuraNamesRec const *>::MemFileName)(TSBaseArray<SpellAuraNamesRec const *> *this);
  int (__thiscall *TSBaseArray<SpellAuraNamesRec const *>::MemLineNo)(TSBaseArray<SpellAuraNamesRec const *> *this);
};

/* 5802 */
struct /*VFT*/ TSFixedArray<SpellAuraNamesRec const *>_vtbl
{
  const char *(__thiscall *TSBaseArray<SpellAuraNamesRec const *>::MemFileName)(struct TSFixedArray<SpellAuraNamesRec const *> *this);
  int (__thiscall *TSBaseArray<SpellAuraNamesRec const *>::MemLineNo)(struct TSFixedArray<SpellAuraNamesRec const *> *this);
};

/* 5803 */
struct __cppobj TSFixedArray<SpellAuraNamesRec const *> : TSBaseArray<SpellAuraNamesRec const *>
{
};

/* 5804 */
struct /*VFT*/ TSGrowableArray<SpellAuraNamesRec const *>_vtbl
{
  const char *(__thiscall *TSBaseArray<SpellAuraNamesRec const *>::MemFileName)(struct TSGrowableArray<SpellAuraNamesRec const *> *this);
  int (__thiscall *TSBaseArray<SpellAuraNamesRec const *>::MemLineNo)(struct TSGrowableArray<SpellAuraNamesRec const *> *this);
};

/* 5805 */
struct __cppobj TSGrowableArray<SpellAuraNamesRec const *> : TSFixedArray<SpellAuraNamesRec const *>
{
  unsigned int m_chunk;
};

/* 5806 */
struct __cppobj TInstanceAllocator<FishingLineObject> : CDataAllocator
{
};

/* 5807 */
struct __cppobj EclipseObject
{
  NTempest::CImVector color;
  unsigned int startTime;
  unsigned int fadeInTime;
  unsigned int fadeOutTime;
  unsigned int endTime;
};

/* 5808 */
struct __cppobj TSList<FishingLineObject,TSGetLink<FishingLineObject> >
{
  int m_linkoffset;
  TSLink<FishingLineObject> m_terminator;
};

/* 5809 */
struct __cppobj __declspec(align(4)) TSCArray<unsigned short,201>
{
  unsigned int m_count;
  unsigned __int16 m_data[201];
};

/* 5810 */
struct __cppobj TSCArray<float,201>
{
  unsigned int m_count;
  float m_data[201];
};

/* 5811 */
struct __cppobj TSBaseArray<enum ANIMENUMERATION>
{
  TSBaseArray<enum ANIMENUMERATION>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  ANIMENUMERATION *m_data;
};

/* 5812 */
struct /*VFT*/ TSBaseArray<enum ANIMENUMERATION>_vtbl
{
  const char *(__thiscall *TSBaseArray<enum ANIMENUMERATION>::MemFileName)(TSBaseArray<enum ANIMENUMERATION> *this);
  int (__thiscall *TSBaseArray<enum ANIMENUMERATION>::MemLineNo)(TSBaseArray<enum ANIMENUMERATION> *this);
};

/* 5813 */
struct /*VFT*/ TSFixedArray<enum ANIMENUMERATION>_vtbl
{
  const char *(__thiscall *TSBaseArray<enum ANIMENUMERATION>::MemFileName)(struct TSFixedArray<enum ANIMENUMERATION> *this);
  int (__thiscall *TSBaseArray<enum ANIMENUMERATION>::MemLineNo)(struct TSFixedArray<enum ANIMENUMERATION> *this);
};

/* 5814 */
struct __cppobj TSFixedArray<enum ANIMENUMERATION> : TSBaseArray<enum ANIMENUMERATION>
{
};

/* 5815 */
struct __cppobj TSList<LightningObject,TSGetLink<LightningObject> >
{
  int m_linkoffset;
  TSLink<LightningObject> m_terminator;
};

/* 5816 */
struct __cppobj TSLink<SPELLVISUALNODE>
{
  TSLink<SPELLVISUALNODE> *m_prevlink;
  SPELLVISUALNODE *m_next;
};

/* 5818 */
struct __cppobj __declspec(align(4)) TSHashObject<SPELLVISUALNODE,HASHKEY_NONE>
{
  unsigned int m_hashval;
  TSLink<SPELLVISUALNODE> m_linktoslot;
  TSLink<SPELLVISUALNODE> m_linktofull;
  HASHKEY_NONE m_key;
};

/* 5817 */
struct __cppobj SPELLVISUALNODE : TSHashObject<SPELLVISUALNODE,HASHKEY_NONE>
{
  unsigned int m_effects[15];
  ANIMENUMERATION m_anims[2];
};

/* 5819 */
struct __cppobj TSBaseArray<TSFixedArray<SkillLineAbilityRec const *> >
{
  TSBaseArray<TSFixedArray<SkillLineAbilityRec const *> >_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  TSFixedArray<SkillLineAbilityRec const *> *m_data;
};

/* 5820 */
struct /*VFT*/ TSBaseArray<TSFixedArray<SkillLineAbilityRec const *> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSFixedArray<SkillLineAbilityRec const *> >::MemFileName)(TSBaseArray<TSFixedArray<SkillLineAbilityRec const *> > *this);
  int (__thiscall *TSBaseArray<TSFixedArray<SkillLineAbilityRec const *> >::MemLineNo)(TSBaseArray<TSFixedArray<SkillLineAbilityRec const *> > *this);
};

/* 5821 */
struct __cppobj TSBaseArray<SkillLineAbilityRec const *>
{
  TSBaseArray<SkillLineAbilityRec const *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  const SkillLineAbilityRec **m_data;
};

/* 5824 */
struct __cppobj TSFixedArray<SkillLineAbilityRec const *> : TSBaseArray<SkillLineAbilityRec const *>
{
};

/* 5822 */
struct /*VFT*/ TSBaseArray<SkillLineAbilityRec const *>_vtbl
{
  const char *(__thiscall *TSBaseArray<SkillLineAbilityRec const *>::MemFileName)(TSBaseArray<SkillLineAbilityRec const *> *this);
  int (__thiscall *TSBaseArray<SkillLineAbilityRec const *>::MemLineNo)(TSBaseArray<SkillLineAbilityRec const *> *this);
};

/* 5823 */
struct /*VFT*/ TSFixedArray<SkillLineAbilityRec const *>_vtbl
{
  const char *(__thiscall *TSBaseArray<SkillLineAbilityRec const *>::MemFileName)(struct TSFixedArray<SkillLineAbilityRec const *> *this);
  int (__thiscall *TSBaseArray<SkillLineAbilityRec const *>::MemLineNo)(struct TSFixedArray<SkillLineAbilityRec const *> *this);
};

/* 5825 */
struct /*VFT*/ TSFixedArray<TSFixedArray<SkillLineAbilityRec const *> >_vtbl
{
  const char *(__thiscall *TSBaseArray<TSFixedArray<SkillLineAbilityRec const *> >::MemFileName)(struct TSFixedArray<TSFixedArray<SkillLineAbilityRec const *> > *this);
  int (__thiscall *TSBaseArray<TSFixedArray<SkillLineAbilityRec const *> >::MemLineNo)(struct TSFixedArray<TSFixedArray<SkillLineAbilityRec const *> > *this);
};

/* 5826 */
struct __cppobj TSFixedArray<TSFixedArray<SkillLineAbilityRec const *> > : TSBaseArray<TSFixedArray<SkillLineAbilityRec const *> >
{
};

/* 5827 */
struct __cppobj SkillLineTable
{
  TSFixedArray<TSFixedArray<SkillLineAbilityRec const *> > m_abilities;
};

/* 5828 */
struct cclass
{
  char *name;
  char *chars;
  char *multis;
};

/* 5829 */
struct __declspec(align(4)) cname
{
  char *name;
  char code;
};

/* 5830 */
struct parse
{
  char *next;
  char *end;
  int error;
  int *strip;
  int ssize;
  int slen;
  int ncsalloc;
  re_guts *g;
  int pbegin[10];
  int pend[10];
};

/* 5831 */
struct smat
{
  re_guts *g;
  int eflags;
  regmatch_t *pmatch;
  char *offp;
  char *beginp;
  char *endp;
  char *coldp;
  char **lastpos;
  int dummy;
  unsigned int st;
  unsigned int fresh;
  unsigned int tmp;
  unsigned int empty;
};

/* 5832 */
struct lmat
{
  re_guts *g;
  int eflags;
  regmatch_t *pmatch;
  char *offp;
  char *beginp;
  char *endp;
  char *coldp;
  char **lastpos;
  int vn;
  char *space;
  char *st;
  char *fresh;
  char *tmp;
  char *empty;
};

/* 5833 */
struct __cppobj NTempest::CIterator
{
  unsigned int iscan;
};

/* 5834 */
struct __cppobj EventReg::EventIterator
{
  EventReg *m_reg;
  EventReg::EVENTDISPATCHREG *m_ptr;
};

/* 5835 */
struct $DA753B4D80B69BEF66724A19E1392802
{
  unsigned __int8 s_b1;
  unsigned __int8 s_b2;
  unsigned __int8 s_b3;
  unsigned __int8 s_b4;
};

/* 5836 */
struct $CC608A129C88F312E26B04B0A6BA5EDC
{
  unsigned __int16 s_w1;
  unsigned __int16 s_w2;
};

/* 5837 */
union $E4983E6BFADC2558F88B9C3DC51358FC
{
  $DA753B4D80B69BEF66724A19E1392802 S_un_b;
  $CC608A129C88F312E26B04B0A6BA5EDC S_un_w;
  unsigned int S_addr;
};

/* 5838 */
struct TObjectAllocMemHandle
{
  unsigned int memHandle;
};

/* 5839 */
struct __cppobj WDataStoreBuffer<768> : TObjectAllocMemHandle
{
  unsigned __int8 buf[768];
};

/* 5840 */
struct __cppobj WDataStoreBuffer<16384> : TObjectAllocMemHandle
{
  unsigned __int8 buf[16384];
};

/* 5841 */
struct __cppobj CGxDeviceOpenGl::PixelFormatAttribute<T>
{
  int attribute;
};

/* 5842 */
struct __cppobj TSBaseArray<CSeqInfo>
{
  TSBaseArray<CSeqInfo>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CSeqInfo *m_data;
};

/* 5843 */
struct /*VFT*/ TSBaseArray<CSeqInfo>_vtbl
{
  const char *(__thiscall *MemFileName)(TSBaseArray<CSeqInfo> *this);
  int (__thiscall *MemLineNo)(TSBaseArray<CSeqInfo> *this);
};

/* 5844 */
struct /*VFT*/ TSFixedArray<CSeqInfo>_vtbl
{
  const char *(__thiscall *MemFileName)(struct TSFixedArray<CSeqInfo> *this);
  int (__thiscall *MemLineNo)(struct TSFixedArray<CSeqInfo> *this);
};

/* 5845 */
struct __cppobj TSFixedArray<CSeqInfo> : TSBaseArray<CSeqInfo>
{
};

/* 5846 */
struct __cppobj TSBaseArray<CAnimObjStatus *>
{
  TSBaseArray<CAnimObjStatus *>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CAnimObjStatus **m_data;
};

/* 5847 */
struct /*VFT*/ TSBaseArray<CAnimObjStatus *>_vtbl
{
  const char *(__thiscall *MemFileName)(TSBaseArray<CAnimObjStatus *> *this);
  int (__thiscall *MemLineNo)(TSBaseArray<CAnimObjStatus *> *this);
};

/* 5848 */
struct /*VFT*/ TSFixedArray<CAnimObjStatus *>_vtbl
{
  const char *(__thiscall *MemFileName)(struct TSFixedArray<CAnimObjStatus *> *this);
  int (__thiscall *MemLineNo)(struct TSFixedArray<CAnimObjStatus *> *this);
};

/* 5849 */
struct __cppobj TSFixedArray<CAnimObjStatus *> : TSBaseArray<CAnimObjStatus *>
{
};

/* 5850 */
struct __cppobj TSBaseArray<CAnimObjStatus>
{
  TSBaseArray<CAnimObjStatus>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CAnimObjStatus *m_data;
};

/* 5851 */
struct /*VFT*/ TSBaseArray<CAnimObjStatus>_vtbl
{
  const char *(__thiscall *MemFileName)(TSBaseArray<CAnimObjStatus> *this);
  int (__thiscall *MemLineNo)(TSBaseArray<CAnimObjStatus> *this);
};

/* 5852 */
struct /*VFT*/ TSFixedArray<CAnimObjStatus>_vtbl
{
  const char *(__thiscall *MemFileName)(struct TSFixedArray<CAnimObjStatus> *this);
  int (__thiscall *MemLineNo)(struct TSFixedArray<CAnimObjStatus> *this);
};

/* 5853 */
struct __cppobj TSFixedArray<CAnimObjStatus> : TSBaseArray<CAnimObjStatus>
{
};

/* 5854 */
struct __cppobj TSBaseArray<CAnimGeosetObjStatus>
{
  TSBaseArray<CAnimGeosetObjStatus>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CAnimGeosetObjStatus *m_data;
};

/* 5855 */
struct /*VFT*/ TSBaseArray<CAnimGeosetObjStatus>_vtbl
{
  const char *(__thiscall *MemFileName)(TSBaseArray<CAnimGeosetObjStatus> *this);
  int (__thiscall *MemLineNo)(TSBaseArray<CAnimGeosetObjStatus> *this);
};

/* 5856 */
struct /*VFT*/ TSFixedArray<CAnimGeosetObjStatus>_vtbl
{
  const char *(__thiscall *MemFileName)(struct TSFixedArray<CAnimGeosetObjStatus> *this);
  int (__thiscall *MemLineNo)(struct TSFixedArray<CAnimGeosetObjStatus> *this);
};

/* 5857 */
struct __cppobj TSFixedArray<CAnimGeosetObjStatus> : TSBaseArray<CAnimGeosetObjStatus>
{
};

/* 5858 */
struct __cppobj TSBaseArray<CAnimModelObjStatus>
{
  TSBaseArray<CAnimModelObjStatus>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CAnimModelObjStatus *m_data;
};

/* 5859 */
struct /*VFT*/ TSBaseArray<CAnimModelObjStatus>_vtbl
{
  const char *(__thiscall *MemFileName)(TSBaseArray<CAnimModelObjStatus> *this);
  int (__thiscall *MemLineNo)(TSBaseArray<CAnimModelObjStatus> *this);
};

/* 5860 */
struct /*VFT*/ TSFixedArray<CAnimModelObjStatus>_vtbl
{
  const char *(__thiscall *MemFileName)(struct TSFixedArray<CAnimModelObjStatus> *this);
  int (__thiscall *MemLineNo)(struct TSFixedArray<CAnimModelObjStatus> *this);
};

/* 5861 */
struct __cppobj TSFixedArray<CAnimModelObjStatus> : TSBaseArray<CAnimModelObjStatus>
{
};

/* 5862 */
struct __cppobj TSBaseArray<CAnimObjBlendStatus>
{
  TSBaseArray<CAnimObjBlendStatus>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CAnimObjBlendStatus *m_data;
};

/* 5863 */
struct /*VFT*/ TSBaseArray<CAnimObjBlendStatus>_vtbl
{
  const char *(__thiscall *MemFileName)(TSBaseArray<CAnimObjBlendStatus> *this);
  int (__thiscall *MemLineNo)(TSBaseArray<CAnimObjBlendStatus> *this);
};

/* 5864 */
struct /*VFT*/ TSFixedArray<CAnimObjBlendStatus>_vtbl
{
  const char *(__thiscall *MemFileName)(struct TSFixedArray<CAnimObjBlendStatus> *this);
  int (__thiscall *MemLineNo)(struct TSFixedArray<CAnimObjBlendStatus> *this);
};

/* 5865 */
struct __cppobj TSFixedArray<CAnimObjBlendStatus> : TSBaseArray<CAnimObjBlendStatus>
{
};

/* 5866 */
struct __cppobj TSBaseArray<CAnimLightObjStatus>
{
  TSBaseArray<CAnimLightObjStatus>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CAnimLightObjStatus *m_data;
};

/* 5867 */
struct /*VFT*/ TSBaseArray<CAnimLightObjStatus>_vtbl
{
  const char *(__thiscall *MemFileName)(TSBaseArray<CAnimLightObjStatus> *this);
  int (__thiscall *MemLineNo)(TSBaseArray<CAnimLightObjStatus> *this);
};

/* 5868 */
struct /*VFT*/ TSFixedArray<CAnimLightObjStatus>_vtbl
{
  const char *(__thiscall *MemFileName)(struct TSFixedArray<CAnimLightObjStatus> *this);
  int (__thiscall *MemLineNo)(struct TSFixedArray<CAnimLightObjStatus> *this);
};

/* 5869 */
struct __cppobj TSFixedArray<CAnimLightObjStatus> : TSBaseArray<CAnimLightObjStatus>
{
};

/* 5870 */
struct __cppobj TSBaseArray<CAnimEmitter2ObjStatus>
{
  TSBaseArray<CAnimEmitter2ObjStatus>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CAnimEmitter2ObjStatus *m_data;
};

/* 5871 */
struct /*VFT*/ TSBaseArray<CAnimEmitter2ObjStatus>_vtbl
{
  const char *(__thiscall *MemFileName)(TSBaseArray<CAnimEmitter2ObjStatus> *this);
  int (__thiscall *MemLineNo)(TSBaseArray<CAnimEmitter2ObjStatus> *this);
};

/* 5872 */
struct /*VFT*/ TSFixedArray<CAnimEmitter2ObjStatus>_vtbl
{
  const char *(__thiscall *MemFileName)(struct TSFixedArray<CAnimEmitter2ObjStatus> *this);
  int (__thiscall *MemLineNo)(struct TSFixedArray<CAnimEmitter2ObjStatus> *this);
};

/* 5873 */
struct __cppobj TSFixedArray<CAnimEmitter2ObjStatus> : TSBaseArray<CAnimEmitter2ObjStatus>
{
};

/* 5874 */
struct __cppobj TSBaseArray<CAnimRibbonObjStatus>
{
  TSBaseArray<CAnimRibbonObjStatus>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CAnimRibbonObjStatus *m_data;
};

/* 5875 */
struct /*VFT*/ TSBaseArray<CAnimRibbonObjStatus>_vtbl
{
  const char *(__thiscall *MemFileName)(TSBaseArray<CAnimRibbonObjStatus> *this);
  int (__thiscall *MemLineNo)(TSBaseArray<CAnimRibbonObjStatus> *this);
};

/* 5876 */
struct /*VFT*/ TSFixedArray<CAnimRibbonObjStatus>_vtbl
{
  const char *(__thiscall *MemFileName)(struct TSFixedArray<CAnimRibbonObjStatus> *this);
  int (__thiscall *MemLineNo)(struct TSFixedArray<CAnimRibbonObjStatus> *this);
};

/* 5877 */
struct __cppobj TSFixedArray<CAnimRibbonObjStatus> : TSBaseArray<CAnimRibbonObjStatus>
{
};

/* 5878 */
struct __cppobj TSBaseArray<CAnimCameraObjStatus>
{
  TSBaseArray<CAnimCameraObjStatus>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CAnimCameraObjStatus *m_data;
};

/* 5879 */
struct /*VFT*/ TSBaseArray<CAnimCameraObjStatus>_vtbl
{
  const char *(__thiscall *MemFileName)(TSBaseArray<CAnimCameraObjStatus> *this);
  int (__thiscall *MemLineNo)(TSBaseArray<CAnimCameraObjStatus> *this);
};

/* 5880 */
struct /*VFT*/ TSFixedArray<CAnimCameraObjStatus>_vtbl
{
  const char *(__thiscall *MemFileName)(struct TSFixedArray<CAnimCameraObjStatus> *this);
  int (__thiscall *MemLineNo)(struct TSFixedArray<CAnimCameraObjStatus> *this);
};

/* 5881 */
struct __cppobj TSFixedArray<CAnimCameraObjStatus> : TSBaseArray<CAnimCameraObjStatus>
{
};

/* 5882 */
struct __cppobj TSBaseArray<CAnimEventObjStatus>
{
  TSBaseArray<CAnimEventObjStatus>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CAnimEventObjStatus *m_data;
};

/* 5883 */
struct /*VFT*/ TSBaseArray<CAnimEventObjStatus>_vtbl
{
  const char *(__thiscall *MemFileName)(TSBaseArray<CAnimEventObjStatus> *this);
  int (__thiscall *MemLineNo)(TSBaseArray<CAnimEventObjStatus> *this);
};

/* 5884 */
struct /*VFT*/ TSFixedArray<CAnimEventObjStatus>_vtbl
{
  const char *(__thiscall *MemFileName)(struct TSFixedArray<CAnimEventObjStatus> *this);
  int (__thiscall *MemLineNo)(struct TSFixedArray<CAnimEventObjStatus> *this);
};

/* 5885 */
struct __cppobj TSFixedArray<CAnimEventObjStatus> : TSBaseArray<CAnimEventObjStatus>
{
};

/* 5886 */
struct __cppobj TSBaseArray<CAnimLayerStatus>
{
  TSBaseArray<CAnimLayerStatus>_vtbl *__vftable /*VFT*/;
  unsigned int m_alloc;
  unsigned int m_count;
  CAnimLayerStatus *m_data;
};

/* 5887 */
struct /*VFT*/ TSBaseArray<CAnimLayerStatus>_vtbl
{
  const char *(__thiscall *MemFileName)(TSBaseArray<CAnimLayerStatus> *this);
  int (__thiscall *MemLineNo)(TSBaseArray<CAnimLayerStatus> *this);
};

/* 5888 */
struct /*VFT*/ TSFixedArray<CAnimLayerStatus>_vtbl
{
  const char *(__thiscall *MemFileName)(struct TSFixedArray<CAnimLayerStatus> *this);
  int (__thiscall *MemLineNo)(struct TSFixedArray<CAnimLayerStatus> *this);
};

/* 5889 */
struct __cppobj TSFixedArray<CAnimLayerStatus> : TSBaseArray<CAnimLayerStatus>
{
};

/* 5890 */
typedef unsigned __int16 wchar_t;

/* 5891 */
typedef __int64 *LPREFERENCE_TIME;

/* 5892 */
typedef unsigned int HCRYPTHASH;

/* 5893 */
typedef unsigned int (__stdcall *LPOFNHOOKPROC)(HWND__ *, unsigned int, unsigned int, int);

/* 5894 */
typedef HKEY__ **PHKEY;

/* 5895 */
typedef unsigned __int16 PROPVAR_PAD2;

/* 5896 */
typedef int (__stdcall *VERIFY_SIGNATURE_FN)(_SecHandle *, _SecBufferDesc *, unsigned int, unsigned int *);

/* 5897 */
typedef unsigned int MDLTOKEN;

/* 5898 */
typedef tagKERNINGPAIR *LPKERNINGPAIR;

/* 5899 */
typedef int *LPFXPT16DOT16;

/* 5900 */
typedef unsigned __int64 *PDWORDLONG;

/* 5901 */
typedef void *LOCALHANDLE;

/* 5902 */
typedef int (__stdcall *FARPROC)();

/* 5903 */
typedef _IMAGE_EXPORT_DIRECTORY *PIMAGE_EXPORT_DIRECTORY;

/* 5904 */
typedef __int16 FT_F2Dot14;

/* 5905 */
typedef void *HCERTSTOREPROV;

/* 5906 */
typedef tagGCP_RESULTSW *LPGCP_RESULTSW;

/* 5907 */
typedef tagHELPINFO *LPHELPINFO;

/* 5908 */
typedef char *PTCH;

/* 5909 */
typedef unsigned __int64 *PUINT64;

/* 5910 */
typedef void *HGDIOBJ;

/* 5911 */
typedef int (__stdcall *COMPLETE_AUTH_TOKEN_FN)(_SecHandle *, _SecBufferDesc *);

/* 5912 */
typedef tagOLEUIPASTEENTRYW *LPOLEUIPASTEENTRYW;

/* 5913 */
typedef unsigned int *PULONG32;

/* 5914 */
typedef int T1_Operator;

/* 5915 */
typedef HCONV__ *HCONV;

/* 5916 */
typedef tagLOGCOLORSPACEW *LPLOGCOLORSPACEW;

/* 5917 */
typedef int *PBOOL;

/* 5918 */
typedef float FLOAT;

/* 5919 */
typedef _OUTLINETEXTMETRICW *LPOUTLINETEXTMETRICW;

/* 5920 */
typedef unsigned __int8 cat_t;

/* 5921 */
typedef unsigned __int8 uint8;

/* 5922 */
typedef unsigned __int8 UINT8;

/* 5923 */
typedef int nint;

/* 5924 */
typedef char *PINT8;

/* 5925 */
typedef float *PFLOAT;

/* 5926 */
typedef unsigned int uint;

/* 5927 */
typedef unsigned int *PULONG;

/* 5928 */
typedef unsigned __int16 BAD_TRACK_NUMBER;

/* 5929 */
typedef int *PINT;

/* 5930 */
typedef tagOLEUIBUSYW *LPOLEUIBUSYW;

/* 5931 */
typedef _GLYPHMETRICS *LPGLYPHMETRICS;

/* 5932 */
typedef unsigned __int16 GLushort;

/* 5933 */
typedef unsigned int FT_UInt;

/* 5934 */
typedef unsigned int EXECUTION_STATE;

/* 5935 */
typedef unsigned int RPC_LENGTH;

/* 5936 */
typedef tagOLEUILINKPROPSW *LPOLEUILINKPROPSW;

/* 5937 */
typedef unsigned int FOURCC;

/* 5938 */
typedef int AH_Blue;

/* 5939 */
typedef IOleUIObjInfoW *LPOLEUIOBJINFOW;

/* 5940 */
typedef int *LPFXPT2DOT30;

/* 5941 */
typedef HMONITOR__ *HMONITOR;

/* 5942 */
typedef void *IJL_HANDLE;

/* 5943 */
typedef int LCSCSTYPE;

/* 5944 */
typedef int LCSGAMUTMATCH;

/* 5945 */
typedef long double GLdouble;

/* 5946 */
typedef int (__stdcall *HOOKPROC)(int, unsigned int, int);

/* 5947 */
typedef _DISPLAY_DEVICEW *PDISPLAY_DEVICEW;

/* 5948 */
typedef _COMMCONFIG *LPCOMMCONFIG;

/* 5949 */
typedef unsigned __int16 PROPVAR_PAD3;

/* 5950 */
typedef int AH_Edge_Flags;

/* 5951 */
typedef unsigned int *LPSCARDCONTEXT;

/* 5952 */
typedef unsigned int COLORREF;

/* 5953 */
typedef unsigned __int16 *PWCHAR;

/* 5954 */
typedef unsigned __int64 *PULONGLONG;

/* 5955 */
typedef unsigned __int16 *PUSHORT;

/* 5956 */
typedef __int16 int16;

/* 5957 */
typedef __int16 INT16;

/* 5958 */
typedef HMIXEROBJ__ *HMIXEROBJ;

/* 5959 */
typedef const tagMENUITEMINFOW *LPCMENUITEMINFOW;

/* 5960 */
typedef unsigned int *PSECURITY_INFORMATION;

/* 5961 */
typedef _INPUT_RECORD *PINPUT_RECORD;

/* 5962 */
typedef int HRESULT;

/* 5963 */
typedef unsigned int *PKAFFINITY;

/* 5964 */
typedef int GEOID;

/* 5965 */
typedef int (__stdcall *CODEPAGE_ENUMPROCW)(unsigned __int16 *);

/* 5966 */
typedef unsigned int udword;

/* 5967 */
typedef unsigned int *PDWORD;

/* 5968 */
typedef LIST_ENTRY32 *PLIST_ENTRY32;

/* 5969 */
typedef unsigned int LCTYPE;

/* 5970 */
typedef unsigned int *PDWORD32;

/* 5971 */
typedef __int64 LONG64;

/* 5972 */
typedef int PCENT;

/* 5973 */
typedef int TCENT;

/* 5974 */
typedef unsigned int RPCOLEDATAREP;

/* 5975 */
typedef int (__stdcall *QUERY_SECURITY_PACKAGE_INFO_FN_W)(unsigned __int16 *, _SecPkgInfoW **);

/* 5976 */
typedef int GCENT;

/* 5977 */
typedef IOleClientSite *LPOLECLIENTSITE;

/* 5978 */
typedef char *va_list;

/* 5979 */
typedef __int16 HALF_PTR;

/* 5980 */
typedef unsigned int RVA;

/* 5981 */
typedef HACCEL__ *HACCEL;

/* 5982 */
typedef _PROPSHEETHEADERW *LPPROPSHEETHEADERW;

/* 5983 */
typedef tagSIZE *LPSIZE;

/* 5984 */
typedef void *handle_t;

/* 5985 */
typedef char *PTCHAR;

/* 5986 */
typedef _WIN32_FIND_DATAW *LPWIN32_FIND_DATAW;

/* 5987 */
typedef tagOLEUICHANGESOURCEW *LPOLEUICHANGESOURCEW;

/* 5988 */
typedef int (__stdcall *QUERY_CONTEXT_ATTRIBUTES_FN_W)(_SecHandle *, unsigned int, void *);

/* 5989 */
typedef tagMIXERCONTROLW *LPMIXERCONTROLW;

/* 5990 */
typedef unsigned int SWAIT;

/* 5991 */
typedef tagOLEUIVIEWPROPSW *LPOLEUIVIEWPROPSW;

/* 5992 */
typedef int (__stdcall *MAKE_SIGNATURE_FN)(_SecHandle *, unsigned int, _SecBufferDesc *, unsigned int);

/* 5993 */
typedef int FT_Sfnt_Tag;

/* 5994 */
typedef unsigned int *LPCOLORREF;

/* 5995 */
typedef void (__stdcall *MSGBOXCALLBACK)(tagHELPINFO *);

/* 5996 */
typedef int FXPT16DOT16;

/* 5997 */
typedef unsigned __int8 byte;

/* 5998 */
typedef unsigned __int8 Byte;

/* 5999 */
typedef unsigned int (__stdcall *LPPAGEPAINTHOOK)(HWND__ *, unsigned int, unsigned int, int);

/* 6000 */
typedef int (__stdcall *PFNPROPSHEETCALLBACK)(HWND__ *, unsigned int, int);

/* 6001 */
typedef tagDRAWTEXTPARAMS *LPDRAWTEXTPARAMS;

/* 6002 */
typedef int AH_UV;

/* 6003 */
typedef int AH_Hinter_Flags;

/* 6004 */
typedef unsigned __int16 OLECHAR;

/* 6005 */
typedef unsigned int uint32;

/* 6006 */
typedef unsigned int UINT32;

/* 6007 */
typedef tagMIDIINCAPSW *LPMIDIINCAPSW;

/* 6008 */
typedef unsigned int BoltID;

/* 6009 */
typedef int *PINT32;

/* 6010 */
typedef int sint32;

/* 6011 */
typedef tagBITMAPINFOHEADER *LPBITMAPINFOHEADER;

/* 6012 */
typedef unsigned int MCIERROR;

/* 6013 */
typedef unsigned int SERVICETYPE;

/* 6014 */
typedef _CONNECTDLGSTRUCTW *LPCONNECTDLGSTRUCTW;

/* 6015 */
typedef int (__stdcall *DATEFMT_ENUMPROCW)(unsigned __int16 *);

/* 6016 */
typedef unsigned __int16 PROPVAR_PAD1;

/* 6017 */
typedef int DISPID;

/* 6018 */
typedef unsigned __int8 *PUCHAR;

/* 6019 */
typedef _SECURITY_ATTRIBUTES *LPSECURITY_ATTRIBUTES;

/* 6020 */
typedef unsigned __int64 DWORDLONG;

/* 6021 */
typedef unsigned int HZIPARCHIVE;

/* 6022 */
typedef unsigned int INSTANCEID;

/* 6023 */
typedef tagOLEUIEDITLINKSW *LPOLEUIEDITLINKSW;

/* 6024 */
typedef const void *LPCVOID;

/* 6025 */
typedef unsigned __int16 *PWCH;

/* 6026 */
typedef int *LPINT;

/* 6027 */
typedef int int32;

/* 6028 */
typedef int INT32;

/* 6029 */
typedef _NETCONNECTINFOSTRUCT *LPNETCONNECTINFOSTRUCT;

/* 6030 */
typedef unsigned int GEOCLASS;

/* 6031 */
typedef _SHELLEXECUTEINFOW *LPSHELLEXECUTEINFOW;

/* 6032 */
typedef unsigned int z_uLong;

/* 6033 */
typedef unsigned int MMVERSION;

/* 6034 */
typedef int T2_Operator;

/* 6035 */
typedef unsigned __int8 *PBOOLEAN;

/* 6036 */
typedef unsigned int SCARDCONTEXT;

/* 6037 */
typedef void *SC_LOCK;

/* 6038 */
typedef unsigned int GLenum;

/* 6039 */
typedef unsigned int *LPUINT;

/* 6040 */
typedef int (__stdcall *DRAWSTATEPROC)(HDC__ *, int, unsigned int, int, int);

/* 6041 */
typedef unsigned __int8 *PTBYTE;

/* 6042 */
typedef unsigned __int16 *PARAM_OFFSETTABLE;

/* 6043 */
typedef struct _PSP *HPROPSHEETPAGE;

/* 6044 */
typedef tagLOGFONTW *LPLOGFONTW;

/* 6045 */
typedef __int64 *PLONGLONG;

/* 6046 */
typedef unsigned __int64 ULONGLONG;

/* 6047 */
typedef int (__stdcall *QUERY_CREDENTIALS_ATTRIBUTES_FN_W)(_SecHandle *, unsigned int, void *);

/* 6048 */
typedef unsigned int HANDLE_PTR;

/* 6049 */
typedef char *LPCH;

/* 6050 */
typedef int (__stdcall *CALINFO_ENUMPROCW)(unsigned __int16 *);

/* 6051 */
typedef unsigned int SECURITY_INFORMATION;

/* 6052 */
typedef void *HGLOBAL;

/* 6053 */
typedef void **LPHANDLE;

/* 6054 */
typedef void *HCRYPTDEFAULTCONTEXT;

/* 6055 */
typedef unsigned __int16 wint_t;

/* 6056 */
typedef unsigned __int8 CGxPrimBone;

/* 6057 */
typedef unsigned __int8 GLubyte;

/* 6058 */
typedef int AH_Direction;

/* 6059 */
typedef _SHFILEOPSTRUCTW *LPSHFILEOPSTRUCTW;

/* 6060 */
typedef void *PVOID64;

/* 6061 */
typedef LIST_ENTRY64 *PLIST_ENTRY64;

/* 6062 */
typedef __int64 *PINT64;

/* 6063 */
typedef unsigned __int64 uint64;

/* 6064 */
typedef unsigned __int64 UINT64;

/* 6065 */
typedef IOleUILinkContainerW *LPOLEUILINKCONTAINERW;

/* 6066 */
typedef void *HPROFILE;

/* 6067 */
typedef int T1_Field_Location;

/* 6068 */
typedef int (__stdcall *LPMMIOPROC)(char *, unsigned int, int, int);

/* 6069 */
typedef void *BigInteger;

/* 6070 */
typedef unsigned int (__stdcall *LPSETUPHOOKPROC)(HWND__ *, unsigned int, unsigned int, int);

/* 6071 */
typedef HDROP__ *HDROP;

/* 6072 */
typedef tagOLEUIOBJECTPROPSW *LPOLEUIOBJECTPROPSW;

/* 6073 */
typedef float real;

/* 6074 */
typedef _SecHandle *PSecHandle;

/* 6075 */
typedef unsigned int *LPSCARDHANDLE;

/* 6076 */
typedef int *PSCODE;

/* 6077 */
typedef _SecBuffer *PSecBuffer;

/* 6078 */
typedef __int16 *PSHORT;

/* 6079 */
typedef unsigned __int16 UShort;

/* 6080 */
typedef int (__stdcall *LOCALE_ENUMPROCW)(unsigned __int16 *);

/* 6081 */
typedef tagAUXCAPSW *LPAUXCAPSW;

/* 6082 */
typedef unsigned __int16 FSHORT;

/* 6083 */
typedef tagOLEUIPASTESPECIALW *LPOLEUIPASTESPECIALW;

/* 6084 */
typedef void *HCRYPTASYNC;

/* 6085 */
typedef unsigned int *PUINT32;

/* 6086 */
typedef tagWAVEINCAPSW *LPWAVEINCAPSW;

/* 6087 */
typedef _OSVERSIONINFOW *LPOSVERSIONINFOW;

/* 6088 */
typedef int MEMBERID;

/* 6089 */
typedef int SHANDLE_PTR;

/* 6090 */
typedef tagMIXERCAPSW *LPMIXERCAPSW;

/* 6091 */
typedef int off_t;

/* 6092 */
typedef _cpinfo *LPCPINFO;

/* 6093 */
typedef value_entW *PVALENTW;

/* 6094 */
typedef unsigned __int16 *LPWORD;

/* 6095 */
typedef tagMIXERLINECONTROLSW *LPMIXERLINECONTROLSW;

/* 6096 */
typedef int GLintptrARB;

/* 6097 */
typedef tagMENUITEMINFOW *LPMENUITEMINFOW;

/* 6098 */
typedef HFONT__ *HFONT;

/* 6099 */
typedef int Long;

/* 6100 */
typedef int *LPLONG;

/* 6101 */
typedef unsigned __int16 *PPARAM_OFFSETTABLE;

/* 6102 */
typedef unsigned int CALID;

/* 6103 */
typedef HRASCONN__ *HRASCONN;

/* 6104 */
typedef int (__stdcall *FREE_CONTEXT_BUFFER_FN)(void *);

/* 6105 */
typedef int time_t;

/* 6106 */
typedef unsigned __int16 SECURITY_DESCRIPTOR_CONTROL;

/* 6107 */
typedef unsigned __int64 *PULONG64;

/* 6108 */
typedef tagMIXERLINEW *LPMIXERLINEW;

/* 6109 */
typedef int PERCENT;

/* 6110 */
typedef tagCONVINFO *PCONVINFO;

/* 6111 */
typedef int (__stdcall *PFNrqvea)(HKEY__ *, const char *, unsigned int *, unsigned int *, unsigned __int8 *, unsigned int *);

/* 6112 */
typedef unsigned int *PUINT;

/* 6113 */
typedef _STARTUPINFOW *LPSTARTUPINFOW;

/* 6114 */
typedef __int64 int64;

/* 6115 */
typedef __int64 INT64;

/* 6116 */
typedef _NETINFOSTRUCT *LPNETINFOSTRUCT;

/* 6117 */
typedef tagCHOOSEFONTW *LPCHOOSEFONTW;

/* 6118 */
typedef HCONVLIST__ *HCONVLIST;

/* 6119 */
typedef unsigned __int16 FILEOP_FLAGS;

/* 6120 */
typedef unsigned __int16 *LPCLIPFORMAT;

/* 6121 */
typedef int (__stdcall *PROPENUMPROCEXW)(HWND__ *, unsigned __int16 *, void *, unsigned int);

/* 6122 */
typedef const _ITEMIDLIST *LPCITEMIDLIST;

/* 6123 */
typedef unsigned __int16 *PUHALF_PTR;

/* 6124 */
typedef int (__stdcall *PROPENUMPROCEXA)(HWND__ *, char *, void *, unsigned int);

/* 6125 */
typedef _PROCESS_INFORMATION *LPPROCESS_INFORMATION;

/* 6126 */
typedef int FT_Int;

/* 6127 */
typedef HMETAFILE__ *HMETAFILE;

/* 6128 */
typedef unsigned __int16 uint16;

/* 6129 */
typedef unsigned __int16 UINT16;

/* 6130 */
typedef void *RPC_AUTH_IDENTITY_HANDLE;

/* 6131 */
typedef __int16 *PINT16;

/* 6132 */
typedef void *PMIDL_XMIT_TYPE;

/* 6133 */
typedef int FT_Int32;

/* 6134 */
typedef unsigned int KSPIN_LOCK;

/* 6135 */
typedef int (__stdcall *IMPORT_SECURITY_CONTEXT_FN_W)(unsigned __int16 *, _SecBuffer *, void *, _SecHandle *);

/* 6136 */
typedef void *z_voidpf;

/* 6137 */
typedef unsigned __int8 FT_Bool;

/* 6138 */
typedef long double DOUBLE;

/* 6139 */
typedef tagFORMATETC *LPFORMATETC;

/* 6140 */
typedef char *PSZ;

/* 6141 */
typedef int FT_Error;

/* 6142 */
typedef _DISCDLGSTRUCTW *LPDISCDLGSTRUCTW;

/* 6143 */
typedef char *PCH;

/* 6144 */
typedef __int64 USN;

/* 6145 */
typedef unsigned __int8 uch;

/* 6146 */
typedef IStorage *LPSTORAGE;

/* 6147 */
typedef HSZ__ *HSZ;

/* 6148 */
typedef unsigned int HELPPOLY;

/* 6149 */
typedef tagOLEUIGNRLPROPSW *LPOLEUIGNRLPROPSW;

/* 6150 */
typedef HDDEDATA__ *HDDEDATA;

/* 6151 */
typedef unsigned int size_t;

/* 6152 */
typedef unsigned __int16 *LPPATCHARRAY;

/* 6153 */
typedef __int16 TT_ShortMetrics;

/* 6154 */
typedef unsigned int GLbitfield;

/* 6155 */
typedef __int16 VARIANT_BOOL;

/* 6156 */
typedef _COMMTIMEOUTS *LPCOMMTIMEOUTS;

/* 6157 */
typedef IOleUILinkInfoW *LPOLEUILINKINFOW;

/* 6158 */
typedef _FILETIME *PFILETIME;

/* 6159 */
typedef int HFILE;

/* 6160 */
typedef unsigned __int64 *PDWORD64;

/* 6161 */
typedef void *OsGuiTreeItem;

/* 6162 */
typedef unsigned int *PUINT_PTR;

/* 6163 */
typedef int (__stdcall *ICMENUMPROCW)(unsigned __int16 *, int);

/* 6164 */
typedef unsigned __int16 *PUINT16;

/* 6165 */
typedef int (__stdcall *ENCRYPT_MESSAGE_FN)(_SecHandle *, unsigned int, _SecBufferDesc *, unsigned int);

/* 6166 */
typedef unsigned __int8 SECURITY_CONTEXT_TRACKING_MODE;

/* 6167 */
typedef __int16 SHORT;

/* 6168 */
typedef __int16 Short;

/* 6169 */
typedef _SecHandle *PCtxtHandle;

/* 6170 */
typedef tagQOCINFO *LPQOCINFO;

/* 6171 */
typedef unsigned int REGSAM;

/* 6172 */
typedef const DLGTEMPLATE *PROPSHEETPAGE_RESOURCE;

/* 6173 */
typedef _MMIOINFO *LPMMIOINFO;

/* 6174 */
typedef int (__stdcall *FONTENUMPROCW)(const tagLOGFONTW *, const tagTEXTMETRICW *, unsigned int, int);

/* 6175 */
typedef int LONG32;

/* 6176 */
typedef void *RPC_BINDING_HANDLE;

/* 6177 */
typedef int __stdcall MMIOPROC(char *, unsigned int, int, int);

/* 6178 */
typedef int OsJoystickID;

/* 6179 */
typedef void *I_RPC_MUTEX;

/* 6180 */
typedef int T1_EncodingType;

/* 6181 */
typedef unsigned __int64 large;

/* 6182 */
typedef int RPC_STATUS;

/* 6183 */
typedef int T1_Token_Type;

/* 6184 */
typedef tagOLEUICHANGEICONW *LPOLEUICHANGEICONW;

/* 6185 */
typedef _SECURITY_FUNCTION_TABLE_W *PSecurityFunctionTableW;

/* 6186 */
typedef int (__stdcall *TIMEFMT_ENUMPROCW)(unsigned __int16 *);

/* 6187 */
typedef unsigned __int16 *NWPSTR;

/* 6188 */
typedef const unsigned __int16 *LPCOLESTR;

/* 6189 */
typedef int *PINT_PTR;

/* 6190 */
typedef unsigned int *PDWORD_PTR;

/* 6191 */
typedef __int16 GLshort;

/* 6192 */
typedef unsigned __int16 *LPKEYARRAY;

/* 6193 */
typedef _CHAR_INFO *PCHAR_INFO;

/* 6194 */
typedef unsigned int *PACCESS_MASK;

/* 6195 */
typedef tagWNDCLASSW *LPWNDCLASSW;

/* 6196 */
typedef tagWNDCLASSEXW *LPWNDCLASSEXW;

/* 6197 */
typedef char int8;

/* 6198 */
typedef char INT8;

/* 6199 */
typedef unsigned int CALTYPE;

/* 6200 */
typedef tagMONITORINFO *LPMONITORINFO;

/* 6201 */
typedef _IMAGE_NT_HEADERS *PIMAGE_NT_HEADERS;

/* 6202 */
typedef unsigned int KAFFINITY;

/* 6203 */
typedef unsigned int OSWAIT;

/* 6204 */
typedef int (__stdcall *REVERT_SECURITY_CONTEXT_FN)(_SecHandle *);

/* 6205 */
typedef unsigned __int16 *PWORD;

/* 6206 */
typedef int FT_Pos;

/* 6207 */
typedef unsigned __int16 UWORD;

/* 6208 */
typedef void *OsGuiHandle;

/* 6209 */
typedef unsigned int *LPMONTHDAYSTATE;

/* 6210 */
typedef HINSTANCE__ *HMODULE;

/* 6211 */
typedef unsigned int *PULONG_PTR;

/* 6212 */
typedef unsigned int *PLCID;

/* 6213 */
typedef char *pointer;

/* 6214 */
typedef void *PIMAGEHLP_CONTEXT;

/* 6215 */
typedef unsigned __int8 u_char;

/* 6216 */
typedef void *RPC_NS_HANDLE;

/* 6217 */
typedef int FT_Fixed;

/* 6218 */
typedef _SMALL_RECT *PSMALL_RECT;

/* 6219 */
typedef unsigned __int8 TBYTE;

/* 6220 */
typedef unsigned int UCS4;

/* 6221 */
typedef unsigned __int8 *PBYTE;

/* 6222 */
typedef unsigned __int8 *PByte;

/* 6223 */
typedef unsigned __int16 UHALF_PTR;

/* 6224 */
typedef _GUID *LPCLSID;

/* 6225 */
typedef __int16 *PHALF_PTR;

/* 6226 */
typedef unsigned int FT_UInt32;

/* 6227 */
typedef tagPSDW *LPPAGESETUPDLGW;

/* 6228 */
typedef unsigned int *LPDWORD;

/* 6229 */
typedef int TStates;

/* 6230 */
typedef _LIST_ENTRY *PLIST_ENTRY;

/* 6231 */
typedef void GLvoid;

/* 6232 */
typedef HCOLORSPACE__ *HCOLORSPACE;

/* 6233 */
typedef void (__stdcall *SEC_GET_KEY_FN)(void *, void *, unsigned int, void **, int *);

/* 6234 */
typedef __int16 FT_Short;

/* 6235 */
typedef unsigned __int64 ULONG64;

/* 6236 */
typedef __int64 *PLONG64;

/* 6237 */
typedef unsigned __int16 GLhalfNV;

/* 6238 */
typedef char FT_Char;

/* 6239 */
typedef HMMIO__ *HMMIO;

/* 6240 */
typedef int FT_Long;

/* 6241 */
typedef unsigned int (__stdcall *LPPRINTHOOKPROC)(HWND__ *, unsigned int, unsigned int, int);

/* 6242 */
typedef const _PROPSHEETPAGEW *LPCPROPSHEETPAGEW_V3;

/* 6243 */
typedef unsigned int *PSCARDCONTEXT;

/* 6244 */
typedef int INT;

/* 6245 */
typedef int Int;

/* 6246 */
typedef int (__stdcall *SET_CONTEXT_ATTRIBUTES_FN_W)(_SecHandle *, unsigned int, void *, unsigned int);

/* 6247 */
typedef _NOTIFYICONDATAW *PNOTIFYICONDATAW;

/* 6248 */
typedef unsigned int LCID;

/* 6249 */
typedef tagACCEL *LPACCEL;

/* 6250 */
typedef char *HPSTR;

/* 6251 */
typedef char *NPSTR;

/* 6252 */
typedef void *PSID;

/* 6253 */
typedef float D3DVALUE;

/* 6254 */
typedef int *npointer;

/* 6255 */
typedef void *vpointer;

/* 6256 */
typedef unsigned __int8 *upointer;

/* 6257 */
typedef _NETRESOURCEW *LPNETRESOURCEW;

/* 6258 */
typedef tagWAVEOUTCAPSW *LPWAVEOUTCAPSW;

/* 6259 */
typedef _SecHandle *PCredHandle;

/* 6260 */
typedef int FT_F26Dot6;

/* 6261 */
typedef unsigned __int16 *LPOLESTR;

/* 6262 */
typedef unsigned int (__stdcall *LPCCHOOKPROC)(HWND__ *, unsigned int, unsigned int, int);

/* 6263 */
typedef void *gzFile;

/* 6264 */
typedef long double DATE;

/* 6265 */
typedef unsigned __int8 GLboolean;

/* 6266 */
typedef void *HCRYPTMSG;

/* 6267 */
typedef HHOOK__ *HHOOK;

/* 6268 */
typedef unsigned int GROUP;

/* 6269 */
typedef int SCODE;

/* 6270 */
typedef unsigned __int16 *PUWSTR;

/* 6271 */
typedef __int64 fpos_t;

/* 6272 */
typedef long double lua_Number;

/* 6273 */
typedef tagCHOOSECOLORW *LPCHOOSECOLORW;

/* 6274 */
typedef char *PUTSTR;

/* 6275 */
typedef unsigned int u_long;

/* 6276 */
typedef __int64 REFERENCE_TIME;

/* 6277 */
typedef void *z_voidp;

/* 6278 */
typedef unsigned __int8 cs_byte;

/* 6279 */
typedef void *HCONTEXT;

/* 6280 */
typedef unsigned int *PSCARDHANDLE;

/* 6281 */
typedef _ABCFLOAT *LPABCFLOAT;

/* 6282 */
typedef tagOFNW *LPOPENFILENAMEW;

/* 6283 */
typedef int (__stdcall *DELETE_SECURITY_CONTEXT_FN)(_SecHandle *);

/* 6284 */
typedef void *HDWP;

/* 6285 */
typedef int FT_Glyph_Format;

/* 6286 */
typedef int sop;

/* 6287 */
typedef int AH_Flags;

/* 6288 */
typedef tagOLEUICONVERTW *LPOLEUICONVERTW;

/* 6289 */
typedef int SSIZE_T;

/* 6290 */
typedef unsigned int *PSIZE_T;

/* 6291 */
typedef void *PACCESS_TOKEN;

/* 6292 */
typedef tagTEXTMETRICW *LPTEXTMETRICW;

/* 6293 */
typedef unsigned __int64 SAMPLE_TIME;

/* 6294 */
typedef unsigned __int16 VARTYPE;

/* 6295 */
typedef int (__stdcall *IMPERSONATE_SECURITY_CONTEXT_FN)(_SecHandle *);

/* 6296 */
typedef tagHW_PROFILE_INFOW *LPHW_PROFILE_INFOW;

/* 6297 */
typedef int (__stdcall *DATEFMT_ENUMPROCEXW)(unsigned __int16 *, unsigned int);

/* 6298 */
typedef HTASK__ *HTASK;

/* 6299 */
typedef unsigned int D3DCOLOR;

/* 6300 */
typedef int SECURITY_STATUS;

/* 6301 */
typedef unsigned __int16 u_short;

/* 6302 */
typedef void *RPC_AUTHZ_HANDLE;

/* 6303 */
typedef int (__stdcall *PFNrokea)(HKEY__ *, const char *, unsigned int, unsigned int, HKEY__ **);

/* 6304 */
typedef void *HDEVNOTIFY;

/* 6305 */
typedef unsigned __int16 *PBAD_TRACK_NUMBER;

/* 6306 */
typedef tagPDW *LPPRINTDLGW;

/* 6307 */
typedef tMIXERCONTROLDETAILS *LPMIXERCONTROLDETAILS;

/* 6308 */
typedef int INT_PTR;

/* 6309 */
typedef unsigned int ALG_ID;

/* 6310 */
typedef _SecBufferDesc *PSecBufferDesc;

/* 6311 */
typedef int MUSIC_TIME;

/* 6312 */
typedef _PRINTER_DEFAULTSW *LPPRINTER_DEFAULTSW;

/* 6313 */
typedef HPALETTE__ *HPALETTE;

/* 6314 */
typedef int FXPT2DOT30;

/* 6315 */
typedef void *NDR_CCONTEXT;

/* 6316 */
typedef unsigned int PROPID;

/* 6317 */
typedef void *RPC_SS_THREAD_HANDLE;

/* 6318 */
typedef unsigned int DWORD32;

/* 6319 */
typedef _IMAGE_NT_HEADERS *PIMAGE_NT_HEADERS32;

/* 6320 */
typedef unsigned int (__stdcall *LPFRHOOKPROC)(HWND__ *, unsigned int, unsigned int, int);

/* 6321 */
typedef HENHMETAFILE__ *HENHMETAFILE;

/* 6322 */
typedef unsigned int error_status_t;

/* 6323 */
typedef void *HCERTCHAINENGINE;

/* 6324 */
typedef int socklen_t;

/* 6325 */
typedef char GLbyte;

/* 6326 */
typedef int (__stdcall *ACCEPT_SECURITY_CONTEXT_FN)(_SecHandle *, _SecHandle *, _SecBufferDesc *, unsigned int, unsigned int, _SecHandle *, _SecBufferDesc *, unsigned int *, _LARGE_INTEGER *);

/* 6327 */
typedef int sock_t;

/* 6328 */
typedef int (__stdcall *APPLY_CONTROL_TOKEN_FN)(_SecHandle *, _SecBufferDesc *);

/* 6329 */
typedef unsigned __int64 RVA64;

/* 6330 */
typedef int (__stdcall *CALINFO_ENUMPROCEXW)(unsigned __int16 *, unsigned int);

/* 6331 */
typedef int (__stdcall *GRAYSTRINGPROC)(HDC__ *, int, int);

/* 6332 */
typedef void *RPC_IF_HANDLE;

/* 6333 */
typedef HDDEDATA__ *(__stdcall *PFNCALLBACK)(unsigned int, unsigned int, HCONV__ *, HSZ__ *, HSZ__ *, HDDEDATA__ *, unsigned int, unsigned int);

/* 6334 */
typedef _devicemodeW *PDEVMODEW;

/* 6335 */
typedef unsigned int HSCHEDULERTHREAD;

/* 6336 */
typedef unsigned int HCRYPTKEY;

/* 6337 */
typedef int (__stdcall *DECRYPT_MESSAGE_FN)(_SecHandle *, _SecBufferDesc *, unsigned int, unsigned int *);

/* 6338 */
typedef unsigned int APARTMENTID;

/* 6339 */
typedef unsigned int ACCESS_MASK;

/* 6340 */
typedef int *PLONG32;

/* 6341 */
typedef unsigned int ULONG32;

/* 6342 */
typedef __int16 FT_FWord;

/* 6343 */
typedef unsigned __int16 COLOR16;

/* 6344 */
typedef unsigned int z_uInt;

/* 6345 */
typedef unsigned __int8 *RPC_BUFPTR;

/* 6346 */
typedef _LARGE_INTEGER *PTimeStamp;

/* 6347 */
typedef unsigned int GEOTYPE;

/* 6348 */
typedef void *HMETAFILEPICT;

/* 6349 */
typedef int (__stdcall *ACQUIRE_CREDENTIALS_HANDLE_FN_W)(unsigned __int16 *, unsigned __int16 *, unsigned int, void *, void *, void (__stdcall *)(void *, void *, unsigned int, void **, int *), void *, _SecHandle *, _LARGE_INTEGER *);

/* 6350 */
typedef HIC__ *HIC;

/* 6351 */
typedef tagOLEVERB *LPOLEVERB;

/* 6352 */
typedef unsigned int DXFILELOADOPTIONS;

/* 6353 */
typedef unsigned int LGRPID;

/* 6354 */
typedef tagMIDIOUTCAPSW *LPMIDIOUTCAPSW;

/* 6355 */
typedef const DLGTEMPLATE *LPCDLGTEMPLATE;

/* 6356 */
typedef unsigned __int16 *PWSTR;

/* 6357 */
typedef unsigned __int16 CLIPFORMAT;

/* 6358 */
typedef unsigned __int16 SEC_WCHAR;

/* 6359 */
typedef unsigned int z_uLongf;

/* 6360 */
typedef int (__stdcall *BFFCALLBACK)(HWND__ *, unsigned int, int, int);

/* 6361 */
typedef unsigned __int16 FT_UShort;

/* 6362 */
typedef unsigned int (__stdcall *LPPAGESETUPHOOK)(HWND__ *, unsigned int, unsigned int, int);

/* 6363 */
typedef int (__stdcall *INITIALIZE_SECURITY_CONTEXT_FN_W)(_SecHandle *, _SecHandle *, unsigned __int16 *, unsigned int, unsigned int, unsigned int, _SecBufferDesc *, unsigned int, _SecHandle *, _SecBufferDesc *, unsigned int *, _LARGE_INTEGER *);

/* 6364 */
typedef unsigned int unint;

/* 6365 */
typedef __int16 RCStringIndex;

/* 6366 */
typedef const DLGTEMPLATE *LPCDLGTEMPLATEA;

/* 6367 */
typedef unsigned int (__stdcall *LPPROGRESS_ROUTINE)(_LARGE_INTEGER, _LARGE_INTEGER, _LARGE_INTEGER, _LARGE_INTEGER, unsigned int, unsigned int, void *, void *, void *);

/* 6368 */
typedef float GLclampf;

/* 6369 */
typedef void *FT_Pointer;

/* 6370 */
typedef const tagRECT *LPCRECT;

/* 6371 */
typedef int AH_Angle;

/* 6372 */
typedef const DLGTEMPLATE *LPCDLGTEMPLATEW;

/* 6373 */
typedef unsigned int small;

/* 6374 */
typedef char FT_String;

/* 6375 */
typedef unsigned __int16 *PSECURITY_DESCRIPTOR_CONTROL;

/* 6376 */
typedef int (__stdcall *QUERY_SECURITY_CONTEXT_TOKEN_FN)(_SecHandle *, void **);

/* 6377 */
typedef _ULARGE_INTEGER *PULARGE_INTEGER;

/* 6378 */
typedef unsigned __int16 *LPWCH;

/* 6379 */
typedef unsigned __int16 *LPUWSTR;

/* 6380 */
typedef unsigned __int16 PRINTEROP_FLAGS;

/* 6381 */
typedef void *HCRYPTOIDFUNCSET;

/* 6382 */
typedef _cpinfoexW *LPCPINFOEXW;

/* 6383 */
typedef unsigned int (__stdcall *LPFNOLEUIHOOK)(HWND__ *, unsigned int, unsigned int, int);

/* 6384 */
typedef char *LPTCH;

/* 6385 */
typedef float GLfloat;

/* 6386 */
typedef unsigned __int8 FT_Byte;

/* 6387 */
typedef int clock_t;

/* 6388 */
typedef tagCONVCONTEXT *PCONVCONTEXT;

/* 6389 */
typedef IDataObject *LPDATAOBJECT;

/* 6390 */
typedef unsigned int HCRYPTPROV;

/* 6391 */
typedef int FT_Encoding;

/* 6392 */
typedef tagJOYCAPSW *LPJOYCAPSW;

/* 6393 */
typedef char *PTSTR;

/* 6394 */
typedef HRSRC__ *HRSRC;

/* 6395 */
typedef int TScan;

/* 6396 */
typedef unsigned int DXFILEFORMAT;

/* 6397 */
typedef _devicemodeW *LPDEVMODEW;

/* 6398 */
typedef unsigned __int8 *PSECURITY_CONTEXT_TRACKING_MODE;

/* 6399 */
typedef void *HOLEMENU;

/* 6400 */
typedef _ABC *LPABC;

/* 6401 */
typedef unsigned __int8 *PUINT8;

/* 6402 */
typedef unsigned __int16 wctype_t;

/* 6403 */
typedef int GLsizei;

/* 6404 */
typedef unsigned int HWORLDOBJECT;

/* 6405 */
typedef _ITEMIDLIST *LPITEMIDLIST;

/* 6406 */
typedef void *HCERTSTORE;

/* 6407 */
typedef int *PSSIZE_T;

/* 6408 */
typedef const _MMIOINFO *LPCMMIOINFO;

/* 6409 */
typedef unsigned int POINTER_64_INT;

/* 6410 */
typedef tagOLEUIINSERTOBJECTW *LPOLEUIINSERTOBJECTW;

/* 6411 */
typedef _SecPkgInfoW *PSecPkgInfoW;

/* 6412 */
typedef unsigned int HREFTYPE;

/* 6413 */
typedef void *PSECURITY_DESCRIPTOR;

/* 6414 */
typedef void *HLOCAL;

/* 6415 */
typedef HKEY__ *HKEY;

/* 6416 */
typedef char *LPUTSTR;

/* 6417 */
typedef unsigned __int64 DWORD64;

/* 6418 */
typedef int *PLONG_PTR;

/* 6419 */
typedef int (__stdcall *ENUMERATE_SECURITY_PACKAGES_FN_W)(unsigned int *, _SecPkgInfoW **);

/* 6420 */
typedef tagALTTABINFO *PALTTABINFO;

/* 6421 */
typedef unsigned int MMRESULT;

/* 6422 */
typedef unsigned int *unpointer;

/* 6423 */
typedef void *I_RPC_HANDLE;

/* 6424 */
typedef int (__stdcall *PROPENUMPROCW)(HWND__ *, const unsigned __int16 *, void *);

/* 6425 */
typedef tagMSG *LPMSG;

/* 6426 */
typedef tagFINDREPLACEW *LPFINDREPLACEW;

/* 6427 */
typedef unsigned __int8 bool;

/* 6428 */
typedef char Bool;

/* 6429 */
typedef int (__stdcall *PROPENUMPROCA)(HWND__ *, const char *, void *);

/* 6430 */
typedef int TPos;

/* 6431 */
typedef unsigned int MCIDEVICEID;

/* 6432 */
typedef unsigned __int8 z_Byte;

/* 6433 */
typedef int T1_Field_Type;

/* 6434 */
typedef int *LPBOOL;

/* 6435 */
typedef HKL__ *HKL;

/* 6436 */
typedef int regoff_t;

/* 6437 */
typedef tagRECT *LPRECT;

/* 6438 */
typedef unsigned int SCARDHANDLE;

/* 6439 */
typedef int GLsizeiptrARB;

/* 6440 */
typedef int (__stdcall *ADD_CREDENTIALS_FN_W)(_SecHandle *, unsigned __int16 *, unsigned __int16 *, unsigned int, void *, void (__stdcall *)(void *, void *, unsigned int, void **, int *), void *, _LARGE_INTEGER *);

/* 6441 */
typedef unsigned int FT_ULong;

/* 6442 */
typedef unsigned __int8 z_Bytef;

/* 6443 */
typedef int FT_Frame_Op;

/* 6444 */
typedef char *PCHAR;

/* 6445 */
typedef int sopno;

/* 6446 */
typedef unsigned __int16 WCHAR;

/* 6447 */
typedef char TCHAR;

/* 6448 */
typedef unsigned __int8 BCHAR;

/* 6449 */
typedef char CCHAR;

/* 6450 */
typedef unsigned __int8 FCHAR;

/* 6451 */
typedef const _PROPSHEETPAGEW *LPCPROPSHEETPAGEW;

/* 6452 */
typedef void *GLOBALHANDLE;

/* 6453 */
typedef const unsigned __int16 *LPCWSTR;

/* 6454 */
typedef int (__stdcall *EXPORT_SECURITY_CONTEXT_FN)(_SecHandle *, unsigned int, _SecBuffer *, void **);

/* 6455 */
typedef int (__stdcall *FREE_CREDENTIALS_HANDLE_FN)(_SecHandle *);

/* 6456 */
typedef long double GLclampd;

/* 6457 */
typedef unsigned int (__stdcall *LPCFHOOKPROC)(HWND__ *, unsigned int, unsigned int, int);

/* 6458 */
typedef int GLint;

/* 6459 */
typedef unsigned __int16 LANGID;

/* 6460 */
typedef char *PSTR;

/* 6461 */
typedef unsigned __int16 *BSTR;

/* 6462 */
typedef unsigned int *PKSPIN_LOCK;

/* 6463 */
typedef void MENUTEMPLATEA;

/* 6464 */
typedef unsigned __int16 *LPWSTR;

/* 6465 */
typedef void *LPMENUTEMPLATEA;

/* 6466 */
typedef _browseinfoW *LPBROWSEINFOW;

/* 6467 */
typedef unsigned int FLONG;

/* 6468 */
typedef void *LPMENUTEMPLATEW;

/* 6469 */
typedef void MENUTEMPLATEW;

/* 6470 */
typedef int *PLONG;

/* 6471 */
typedef int *PLong;

/* 6472 */
typedef unsigned int ulong;

/* 6473 */
typedef IOleObject *LPOLEOBJECT;

/* 6474 */
typedef void *HCRYPTOIDFUNCADDR;

/* 6475 */
typedef char *LPTSTR;

/* 6476 */
typedef _DCB *LPDCB;

/* 6477 */
typedef int ptrdiff_t;

/* 6478 */
typedef void MENUTEMPLATE;

/* 6479 */
typedef void *LPMENUTEMPLATE;

/* 6480 */
typedef long double lreal;

/* 6481 */
typedef unsigned __int8 BOOLEAN;

/* 6482 */
typedef unsigned __int8 boolean;

/* 6483 */
typedef unsigned int GLuint;

/* 6484 */
typedef void (__stdcall *SENDASYNCPROC)(HWND__ *, unsigned int, unsigned int, int);

/* 6485 */
typedef int (__stdcall *DLGPROC)(HWND__ *, unsigned int, unsigned int, int);

/* 6486 */
typedef unsigned __int64 WOWGUID;

/* 6543 */
typedef struct tagDISPPARAMS DISPPARAMS;

/* 6517 */
typedef struct tagVARIANT VARIANT;

/* 6545 */
typedef struct tagEXCEPINFO EXCEPINFO;

/* 6487 */
#pragma pack(push, 8)
struct IDispatchVtbl
{
  HRESULT (__stdcall *QueryInterface)(IDispatch *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IDispatch *This);
  ULONG (__stdcall *Release)(IDispatch *This);
  HRESULT (__stdcall *GetTypeInfoCount)(IDispatch *This, UINT *pctinfo);
  HRESULT (__stdcall *GetTypeInfo)(IDispatch *This, UINT iTInfo, LCID lcid, ITypeInfo **ppTInfo);
  HRESULT (__stdcall *GetIDsOfNames)(IDispatch *This, const IID *const riid, LPOLESTR *rgszNames, UINT cNames, LCID lcid, DISPID *rgDispId);
  HRESULT (__stdcall *Invoke)(IDispatch *This, DISPID dispIdMember, const IID *const riid, LCID lcid, WORD wFlags, DISPPARAMS *pDispParams, VARIANT *pVarResult, EXCEPINFO *pExcepInfo, UINT *puArgErr);
};
#pragma pack(pop)

/* 6488 */
#pragma pack(push, 8)
struct IDispatch
{
  struct IDispatchVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6489 */
#pragma pack(push, 8)
struct ITypeInfo
{
  struct ITypeInfoVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6516 */
typedef VARIANT VARIANTARG;

/* 6544 */
#pragma pack(push, 8)
struct tagDISPPARAMS
{
  VARIANTARG *rgvarg;
  DISPID *rgdispidNamedArgs;
  UINT cArgs;
  UINT cNamedArgs;
};
#pragma pack(pop)

/* 6524 */
struct tagCY::$3EA7BC8C29B528C7CA1203FC489E132F
{
  ULONG Lo;
  LONG Hi;
};

/* 6523 */
union tagCY
{
  struct
  {
    ULONG Lo;
    LONG Hi;
  };
  LONGLONG int64;
};

/* 6522 */
typedef union tagCY CY;

/* 6525 */
typedef struct tagSAFEARRAY SAFEARRAY;

/* 6527 */
typedef struct tagDEC DECIMAL;

/* 6533 */
#pragma pack(push, 8)
struct tagVARIANT::$::$::$E09503A454170B491AC1C4312CE36FE6::$0FDBD249F1AECD6A49409B6B82281578
{
  PVOID pvRecord;
  IRecordInfo *pRecInfo;
};
#pragma pack(pop)

/* 6521 */
#pragma pack(push, 8)
union tagVARIANT::$::$65D68C826D16CA47CF95571D7BFCD657::$E09503A454170B491AC1C4312CE36FE6
{
  LONGLONG llVal;
  LONG lVal;
  BYTE bVal;
  SHORT iVal;
  FLOAT fltVal;
  DOUBLE dblVal;
  VARIANT_BOOL boolVal;
  SCODE scode;
  CY cyVal;
  DATE date;
  BSTR bstrVal;
  IUnknown *punkVal;
  IDispatch *pdispVal;
  SAFEARRAY *parray;
  BYTE *pbVal;
  SHORT *piVal;
  LONG *plVal;
  LONGLONG *pllVal;
  FLOAT *pfltVal;
  DOUBLE *pdblVal;
  VARIANT_BOOL *pboolVal;
  SCODE *pscode;
  CY *pcyVal;
  DATE *pdate;
  BSTR *pbstrVal;
  IUnknown **ppunkVal;
  IDispatch **ppdispVal;
  SAFEARRAY **pparray;
  VARIANT *pvarVal;
  PVOID byref;
  CHAR cVal;
  USHORT uiVal;
  ULONG ulVal;
  ULONGLONG ullVal;
  INT intVal;
  UINT uintVal;
  DECIMAL *pdecVal;
  CHAR *pcVal;
  USHORT *puiVal;
  ULONG *pulVal;
  ULONGLONG *pullVal;
  INT *pintVal;
  UINT *puintVal;
  #pragma pack(push, 8)
  struct
  {
    PVOID pvRecord;
    IRecordInfo *pRecInfo;
  };
  #pragma pack(pop)
};
#pragma pack(pop)

/* 6520 */
#pragma pack(push, 8)
struct tagVARIANT::$E93DC971A089CC95F6C875332324C1E7::$65D68C826D16CA47CF95571D7BFCD657
{
  VARTYPE vt;
  WORD wReserved1;
  WORD wReserved2;
  WORD wReserved3;
  #pragma pack(push, 8)
  union
  {
    LONGLONG llVal;
    LONG lVal;
    BYTE bVal;
    SHORT iVal;
    FLOAT fltVal;
    DOUBLE dblVal;
    VARIANT_BOOL boolVal;
    SCODE scode;
    CY cyVal;
    DATE date;
    BSTR bstrVal;
    IUnknown *punkVal;
    IDispatch *pdispVal;
    SAFEARRAY *parray;
    BYTE *pbVal;
    SHORT *piVal;
    LONG *plVal;
    LONGLONG *pllVal;
    FLOAT *pfltVal;
    DOUBLE *pdblVal;
    VARIANT_BOOL *pboolVal;
    SCODE *pscode;
    CY *pcyVal;
    DATE *pdate;
    BSTR *pbstrVal;
    IUnknown **ppunkVal;
    IDispatch **ppdispVal;
    SAFEARRAY **pparray;
    VARIANT *pvarVal;
    PVOID byref;
    CHAR cVal;
    USHORT uiVal;
    ULONG ulVal;
    ULONGLONG ullVal;
    INT intVal;
    UINT uintVal;
    DECIMAL *pdecVal;
    CHAR *pcVal;
    USHORT *puiVal;
    ULONG *pulVal;
    ULONGLONG *pullVal;
    INT *pintVal;
    UINT *puintVal;
    #pragma pack(push, 8)
    struct
    {
      PVOID pvRecord;
      IRecordInfo *pRecInfo;
    };
    #pragma pack(pop)
  };
  #pragma pack(pop)
};
#pragma pack(pop)

/* 6530 */
struct tagDEC::$64EC678C49E7BE49873AFBFB7A849D34::$7F8459940C2B08BD5D82B0F27239141B
{
  BYTE scale;
  BYTE sign;
};

/* 6529 */
union tagDEC::$64EC678C49E7BE49873AFBFB7A849D34
{
  struct
  {
    BYTE scale;
    BYTE sign;
  };
  USHORT signscale;
};

/* 6532 */
struct tagDEC::$D28E26DEC3EC762C06C2AA9D0F7AC301::$674876891A86A76F12C10005982BCA56
{
  ULONG Lo32;
  ULONG Mid32;
};

/* 6531 */
union tagDEC::$D28E26DEC3EC762C06C2AA9D0F7AC301
{
  struct
  {
    ULONG Lo32;
    ULONG Mid32;
  };
  ULONGLONG Lo64;
};

/* 6528 */
struct tagDEC
{
  USHORT wReserved;
  union
  {
    struct
    {
      BYTE scale;
      BYTE sign;
    };
    USHORT signscale;
  };
  ULONG Hi32;
  union
  {
    struct
    {
      ULONG Lo32;
      ULONG Mid32;
    };
    ULONGLONG Lo64;
  };
};

/* 6519 */
#pragma pack(push, 8)
union tagVARIANT::$E93DC971A089CC95F6C875332324C1E7
{
  #pragma pack(push, 8)
  struct
  {
    VARTYPE vt;
    WORD wReserved1;
    WORD wReserved2;
    WORD wReserved3;
    #pragma pack(push, 8)
    union
    {
      LONGLONG llVal;
      LONG lVal;
      BYTE bVal;
      SHORT iVal;
      FLOAT fltVal;
      DOUBLE dblVal;
      VARIANT_BOOL boolVal;
      SCODE scode;
      CY cyVal;
      DATE date;
      BSTR bstrVal;
      IUnknown *punkVal;
      IDispatch *pdispVal;
      SAFEARRAY *parray;
      BYTE *pbVal;
      SHORT *piVal;
      LONG *plVal;
      LONGLONG *pllVal;
      FLOAT *pfltVal;
      DOUBLE *pdblVal;
      VARIANT_BOOL *pboolVal;
      SCODE *pscode;
      CY *pcyVal;
      DATE *pdate;
      BSTR *pbstrVal;
      IUnknown **ppunkVal;
      IDispatch **ppdispVal;
      SAFEARRAY **pparray;
      VARIANT *pvarVal;
      PVOID byref;
      CHAR cVal;
      USHORT uiVal;
      ULONG ulVal;
      ULONGLONG ullVal;
      INT intVal;
      UINT uintVal;
      DECIMAL *pdecVal;
      CHAR *pcVal;
      USHORT *puiVal;
      ULONG *pulVal;
      ULONGLONG *pullVal;
      INT *pintVal;
      UINT *puintVal;
      #pragma pack(push, 8)
      struct
      {
        PVOID pvRecord;
        IRecordInfo *pRecInfo;
      };
      #pragma pack(pop)
    };
    #pragma pack(pop)
  };
  #pragma pack(pop)
  DECIMAL decVal;
};
#pragma pack(pop)

/* 6518 */
#pragma pack(push, 8)
struct tagVARIANT
{
  #pragma pack(push, 8)
  union
  {
    #pragma pack(push, 8)
    struct
    {
      VARTYPE vt;
      WORD wReserved1;
      WORD wReserved2;
      WORD wReserved3;
      #pragma pack(push, 8)
      union
      {
        LONGLONG llVal;
        LONG lVal;
        BYTE bVal;
        SHORT iVal;
        FLOAT fltVal;
        DOUBLE dblVal;
        VARIANT_BOOL boolVal;
        SCODE scode;
        CY cyVal;
        DATE date;
        BSTR bstrVal;
        IUnknown *punkVal;
        IDispatch *pdispVal;
        SAFEARRAY *parray;
        BYTE *pbVal;
        SHORT *piVal;
        LONG *plVal;
        LONGLONG *pllVal;
        FLOAT *pfltVal;
        DOUBLE *pdblVal;
        VARIANT_BOOL *pboolVal;
        SCODE *pscode;
        CY *pcyVal;
        DATE *pdate;
        BSTR *pbstrVal;
        IUnknown **ppunkVal;
        IDispatch **ppdispVal;
        SAFEARRAY **pparray;
        VARIANT *pvarVal;
        PVOID byref;
        CHAR cVal;
        USHORT uiVal;
        ULONG ulVal;
        ULONGLONG ullVal;
        INT intVal;
        UINT uintVal;
        DECIMAL *pdecVal;
        CHAR *pcVal;
        USHORT *puiVal;
        ULONG *pulVal;
        ULONGLONG *pullVal;
        INT *pintVal;
        UINT *puintVal;
        #pragma pack(push, 8)
        struct
        {
          PVOID pvRecord;
          IRecordInfo *pRecInfo;
        };
        #pragma pack(pop)
      };
      #pragma pack(pop)
    };
    #pragma pack(pop)
    DECIMAL decVal;
  };
  #pragma pack(pop)
};
#pragma pack(pop)

/* 6546 */
#pragma pack(push, 8)
struct tagEXCEPINFO
{
  WORD wCode;
  WORD wReserved;
  BSTR bstrSource;
  BSTR bstrDescription;
  BSTR bstrHelpFile;
  DWORD dwHelpContext;
  PVOID pvReserved;
  HRESULT (__stdcall *pfnDeferredFillIn)(struct tagEXCEPINFO *);
  SCODE scode;
};
#pragma pack(pop)

/* 6491 */
typedef struct tagTYPEATTR TYPEATTR;

/* 6507 */
typedef struct tagFUNCDESC FUNCDESC;

/* 6539 */
typedef struct tagVARDESC VARDESC;

/* 6537 */
typedef enum tagINVOKEKIND INVOKEKIND;

/* 6490 */
#pragma pack(push, 8)
struct ITypeInfoVtbl
{
  HRESULT (__stdcall *QueryInterface)(ITypeInfo *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(ITypeInfo *This);
  ULONG (__stdcall *Release)(ITypeInfo *This);
  HRESULT (__stdcall *GetTypeAttr)(ITypeInfo *This, TYPEATTR **ppTypeAttr);
  HRESULT (__stdcall *GetTypeComp)(ITypeInfo *This, ITypeComp **ppTComp);
  HRESULT (__stdcall *GetFuncDesc)(ITypeInfo *This, UINT index, FUNCDESC **ppFuncDesc);
  HRESULT (__stdcall *GetVarDesc)(ITypeInfo *This, UINT index, VARDESC **ppVarDesc);
  HRESULT (__stdcall *GetNames)(ITypeInfo *This, MEMBERID memid, BSTR *rgBstrNames, UINT cMaxNames, UINT *pcNames);
  HRESULT (__stdcall *GetRefTypeOfImplType)(ITypeInfo *This, UINT index, HREFTYPE *pRefType);
  HRESULT (__stdcall *GetImplTypeFlags)(ITypeInfo *This, UINT index, INT *pImplTypeFlags);
  HRESULT (__stdcall *GetIDsOfNames)(ITypeInfo *This, LPOLESTR *rgszNames, UINT cNames, MEMBERID *pMemId);
  HRESULT (__stdcall *Invoke)(ITypeInfo *This, PVOID pvInstance, MEMBERID memid, WORD wFlags, DISPPARAMS *pDispParams, VARIANT *pVarResult, EXCEPINFO *pExcepInfo, UINT *puArgErr);
  HRESULT (__stdcall *GetDocumentation)(ITypeInfo *This, MEMBERID memid, BSTR *pBstrName, BSTR *pBstrDocString, DWORD *pdwHelpContext, BSTR *pBstrHelpFile);
  HRESULT (__stdcall *GetDllEntry)(ITypeInfo *This, MEMBERID memid, INVOKEKIND invKind, BSTR *pBstrDllName, BSTR *pBstrName, WORD *pwOrdinal);
  HRESULT (__stdcall *GetRefTypeInfo)(ITypeInfo *This, HREFTYPE hRefType, ITypeInfo **ppTInfo);
  HRESULT (__stdcall *AddressOfMember)(ITypeInfo *This, MEMBERID memid, INVOKEKIND invKind, PVOID *ppv);
  HRESULT (__stdcall *CreateInstance)(ITypeInfo *This, IUnknown *pUnkOuter, const IID *const riid, PVOID *ppvObj);
  HRESULT (__stdcall *GetMops)(ITypeInfo *This, MEMBERID memid, BSTR *pBstrMops);
  HRESULT (__stdcall *GetContainingTypeLib)(ITypeInfo *This, ITypeLib **ppTLib, UINT *pIndex);
  void (__stdcall *ReleaseTypeAttr)(ITypeInfo *This, TYPEATTR *pTypeAttr);
  void (__stdcall *ReleaseFuncDesc)(ITypeInfo *This, FUNCDESC *pFuncDesc);
  void (__stdcall *ReleaseVarDesc)(ITypeInfo *This, VARDESC *pVarDesc);
};
#pragma pack(pop)

/* 6499 */
#pragma pack(push, 8)
struct tagSAFEARRAYBOUND
{
  ULONG cElements;
  LONG lLbound;
};
#pragma pack(pop)

/* 6498 */
typedef struct tagSAFEARRAYBOUND SAFEARRAYBOUND;

/* 6526 */
#pragma pack(push, 8)
struct tagSAFEARRAY
{
  USHORT cDims;
  USHORT fFeatures;
  ULONG cbElements;
  ULONG cLocks;
  PVOID pvData;
  SAFEARRAYBOUND rgsabound[1];
};
#pragma pack(pop)

/* 6534 */
#pragma pack(push, 8)
struct IRecordInfo
{
  struct IRecordInfoVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6493 */
typedef enum tagTYPEKIND TYPEKIND;

/* 6496 */
#pragma pack(push, 8)
union tagTYPEDESC::$AC700B6542D8071E244CADABF8A32897
{
  struct tagTYPEDESC *lptdesc;
  struct tagARRAYDESC *lpadesc;
  HREFTYPE hreftype;
};
#pragma pack(pop)

/* 6495 */
#pragma pack(push, 8)
struct tagTYPEDESC
{
  #pragma pack(push, 8)
  union
  {
    struct tagTYPEDESC *lptdesc;
    struct tagARRAYDESC *lpadesc;
    HREFTYPE hreftype;
  };
  #pragma pack(pop)
  VARTYPE vt;
};
#pragma pack(pop)

/* 6494 */
typedef struct tagTYPEDESC TYPEDESC;

/* 6501 */
#pragma pack(push, 8)
struct tagIDLDESC
{
  ULONG_PTR dwReserved;
  USHORT wIDLFlags;
};
#pragma pack(pop)

/* 6500 */
typedef struct tagIDLDESC IDLDESC;

/* 6492 */
#pragma pack(push, 8)
struct tagTYPEATTR
{
  GUID guid;
  LCID lcid;
  DWORD dwReserved;
  MEMBERID memidConstructor;
  MEMBERID memidDestructor;
  LPOLESTR lpstrSchema;
  ULONG cbSizeInstance;
  TYPEKIND typekind;
  WORD cFuncs;
  WORD cVars;
  WORD cImplTypes;
  WORD cbSizeVft;
  WORD cbAlignment;
  WORD wTypeFlags;
  WORD wMajorVerNum;
  WORD wMinorVerNum;
  TYPEDESC tdescAlias;
  IDLDESC idldescType;
};
#pragma pack(pop)

/* 6502 */
#pragma pack(push, 8)
struct ITypeComp
{
  struct ITypeCompVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6509 */
typedef struct tagELEMDESC ELEMDESC;

/* 6536 */
typedef enum tagFUNCKIND FUNCKIND;

/* 6538 */
typedef enum tagCALLCONV CALLCONV;

/* 6514 */
typedef struct tagPARAMDESCEX *LPPARAMDESCEX;

/* 6513 */
#pragma pack(push, 8)
struct tagPARAMDESC
{
  LPPARAMDESCEX pparamdescex;
  USHORT wParamFlags;
};
#pragma pack(pop)

/* 6512 */
typedef struct tagPARAMDESC PARAMDESC;

/* 6511 */
#pragma pack(push, 8)
union tagELEMDESC::$7C8F4CED1424251743D09680A1A0B07D
{
  IDLDESC idldesc;
  PARAMDESC paramdesc;
};
#pragma pack(pop)

/* 6510 */
#pragma pack(push, 8)
struct tagELEMDESC
{
  TYPEDESC tdesc;
  #pragma pack(push, 8)
  union
  {
    IDLDESC idldesc;
    PARAMDESC paramdesc;
  };
  #pragma pack(pop)
};
#pragma pack(pop)

/* 6508 */
#pragma pack(push, 8)
struct tagFUNCDESC
{
  MEMBERID memid;
  SCODE *lprgscode;
  ELEMDESC *lprgelemdescParam;
  FUNCKIND funckind;
  INVOKEKIND invkind;
  CALLCONV callconv;
  SHORT cParams;
  SHORT cParamsOpt;
  SHORT oVft;
  SHORT cScodes;
  ELEMDESC elemdescFunc;
  WORD wFuncFlags;
};
#pragma pack(pop)

/* 6541 */
#pragma pack(push, 8)
union tagVARDESC::$E6274BD6A7149C9CC2413444FF769F0B
{
  ULONG oInst;
  VARIANT *lpvarValue;
};
#pragma pack(pop)

/* 6542 */
typedef enum tagVARKIND VARKIND;

/* 6540 */
#pragma pack(push, 8)
struct tagVARDESC
{
  MEMBERID memid;
  LPOLESTR lpstrSchema;
  #pragma pack(push, 8)
  union
  {
    ULONG oInst;
    VARIANT *lpvarValue;
  };
  #pragma pack(pop)
  ELEMDESC elemdescVar;
  WORD wVarFlags;
  VARKIND varkind;
};
#pragma pack(pop)

/* 6547 */
#pragma pack(push, 8)
struct ITypeLib
{
  struct ITypeLibVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6535 */
#pragma pack(push, 8)
struct IRecordInfoVtbl
{
  HRESULT (__stdcall *QueryInterface)(IRecordInfo *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IRecordInfo *This);
  ULONG (__stdcall *Release)(IRecordInfo *This);
  HRESULT (__stdcall *RecordInit)(IRecordInfo *This, PVOID pvNew);
  HRESULT (__stdcall *RecordClear)(IRecordInfo *This, PVOID pvExisting);
  HRESULT (__stdcall *RecordCopy)(IRecordInfo *This, PVOID pvExisting, PVOID pvNew);
  HRESULT (__stdcall *GetGuid)(IRecordInfo *This, GUID *pguid);
  HRESULT (__stdcall *GetName)(IRecordInfo *This, BSTR *pbstrName);
  HRESULT (__stdcall *GetSize)(IRecordInfo *This, ULONG *pcbSize);
  HRESULT (__stdcall *GetTypeInfo)(IRecordInfo *This, ITypeInfo **ppTypeInfo);
  HRESULT (__stdcall *GetField)(IRecordInfo *This, PVOID pvData, LPCOLESTR szFieldName, VARIANT *pvarField);
  HRESULT (__stdcall *GetFieldNoCopy)(IRecordInfo *This, PVOID pvData, LPCOLESTR szFieldName, VARIANT *pvarField, PVOID *ppvDataCArray);
  HRESULT (__stdcall *PutField)(IRecordInfo *This, ULONG wFlags, PVOID pvData, LPCOLESTR szFieldName, VARIANT *pvarField);
  HRESULT (__stdcall *PutFieldNoCopy)(IRecordInfo *This, ULONG wFlags, PVOID pvData, LPCOLESTR szFieldName, VARIANT *pvarField);
  HRESULT (__stdcall *GetFieldNames)(IRecordInfo *This, ULONG *pcNames, BSTR *rgBstrNames);
  BOOL (__stdcall *IsMatchingType)(IRecordInfo *This, IRecordInfo *pRecordInfo);
  PVOID (__stdcall *RecordCreate)(IRecordInfo *This);
  HRESULT (__stdcall *RecordCreateCopy)(IRecordInfo *This, PVOID pvSource, PVOID *ppvDest);
  HRESULT (__stdcall *RecordDestroy)(IRecordInfo *This, PVOID pvRecord);
};
#pragma pack(pop)

/* 6497 */
#pragma pack(push, 8)
struct tagARRAYDESC
{
  TYPEDESC tdescElem;
  USHORT cDims;
  SAFEARRAYBOUND rgbounds[1];
};
#pragma pack(pop)

/* 6504 */
typedef enum tagDESCKIND DESCKIND;

/* 6505 */
typedef union tagBINDPTR BINDPTR;

/* 6503 */
#pragma pack(push, 8)
struct ITypeCompVtbl
{
  HRESULT (__stdcall *QueryInterface)(ITypeComp *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(ITypeComp *This);
  ULONG (__stdcall *Release)(ITypeComp *This);
  HRESULT (__stdcall *Bind)(ITypeComp *This, LPOLESTR szName, ULONG lHashVal, WORD wFlags, ITypeInfo **ppTInfo, DESCKIND *pDescKind, BINDPTR *pBindPtr);
  HRESULT (__stdcall *BindType)(ITypeComp *This, LPOLESTR szName, ULONG lHashVal, ITypeInfo **ppTInfo, ITypeComp **ppTComp);
};
#pragma pack(pop)

/* 6515 */
#pragma pack(push, 8)
struct tagPARAMDESCEX
{
  ULONG cBytes;
  VARIANTARG varDefaultValue;
};
#pragma pack(pop)

/* 6549 */
typedef struct tagTLIBATTR TLIBATTR;

/* 6548 */
#pragma pack(push, 8)
struct ITypeLibVtbl
{
  HRESULT (__stdcall *QueryInterface)(ITypeLib *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(ITypeLib *This);
  ULONG (__stdcall *Release)(ITypeLib *This);
  UINT (__stdcall *GetTypeInfoCount)(ITypeLib *This);
  HRESULT (__stdcall *GetTypeInfo)(ITypeLib *This, UINT index, ITypeInfo **ppTInfo);
  HRESULT (__stdcall *GetTypeInfoType)(ITypeLib *This, UINT index, TYPEKIND *pTKind);
  HRESULT (__stdcall *GetTypeInfoOfGuid)(ITypeLib *This, const GUID *const guid, ITypeInfo **ppTinfo);
  HRESULT (__stdcall *GetLibAttr)(ITypeLib *This, TLIBATTR **ppTLibAttr);
  HRESULT (__stdcall *GetTypeComp)(ITypeLib *This, ITypeComp **ppTComp);
  HRESULT (__stdcall *GetDocumentation)(ITypeLib *This, INT index, BSTR *pBstrName, BSTR *pBstrDocString, DWORD *pdwHelpContext, BSTR *pBstrHelpFile);
  HRESULT (__stdcall *IsName)(ITypeLib *This, LPOLESTR szNameBuf, ULONG lHashVal, BOOL *pfName);
  HRESULT (__stdcall *FindName)(ITypeLib *This, LPOLESTR szNameBuf, ULONG lHashVal, ITypeInfo **ppTInfo, MEMBERID *rgMemId, USHORT *pcFound);
  void (__stdcall *ReleaseTLibAttr)(ITypeLib *This, TLIBATTR *pTLibAttr);
};
#pragma pack(pop)

/* 6506 */
#pragma pack(push, 8)
union tagBINDPTR
{
  FUNCDESC *lpfuncdesc;
  VARDESC *lpvardesc;
  ITypeComp *lptcomp;
};
#pragma pack(pop)

/* 6551 */
typedef enum tagSYSKIND SYSKIND;

/* 6550 */
#pragma pack(push, 8)
struct tagTLIBATTR
{
  GUID guid;
  LCID lcid;
  SYSKIND syskind;
  WORD wMajorVerNum;
  WORD wMinorVerNum;
  WORD wLibFlags;
};
#pragma pack(pop)

/* 6552 */
#pragma pack(push, 8)
struct IDirectMusicDownloadedInstrumentVtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirectMusicDownloadedInstrument *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IDirectMusicDownloadedInstrument *This);
  ULONG (__stdcall *Release)(IDirectMusicDownloadedInstrument *This);
};
#pragma pack(pop)

/* 6553 */
#pragma pack(push, 8)
struct IServerSecurityVtbl
{
  HRESULT (__stdcall *QueryInterface)(IServerSecurity *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IServerSecurity *This);
  ULONG (__stdcall *Release)(IServerSecurity *This);
  HRESULT (__stdcall *QueryBlanket)(IServerSecurity *This, DWORD *pAuthnSvc, DWORD *pAuthzSvc, OLECHAR **pServerPrincName, DWORD *pAuthnLevel, DWORD *pImpLevel, void **pPrivs, DWORD *pCapabilities);
  HRESULT (__stdcall *ImpersonateClient)(IServerSecurity *This);
  HRESULT (__stdcall *RevertToSelf)(IServerSecurity *This);
  BOOL (__stdcall *IsImpersonating)(IServerSecurity *This);
};
#pragma pack(pop)

/* 6554 */
#pragma pack(push, 8)
struct IServerSecurity
{
  struct IServerSecurityVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6555 */
#pragma pack(push, 8)
struct IDirectMusicDownloadVtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirectMusicDownload *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IDirectMusicDownload *This);
  ULONG (__stdcall *Release)(IDirectMusicDownload *This);
  HRESULT (__stdcall *GetBuffer)(IDirectMusicDownload *This, void **ppvBuffer, DWORD *pdwSize);
};
#pragma pack(pop)

/* 6556 */
#pragma pack(push, 8)
struct IDirectMusicDownload
{
  struct IDirectMusicDownloadVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6557 */
struct IReferenceClockVtbl
{
  HRESULT (__stdcall *QueryInterface)(IReferenceClock *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IReferenceClock *This);
  ULONG (__stdcall *Release)(IReferenceClock *This);
  HRESULT (__stdcall *GetTime)(IReferenceClock *This, REFERENCE_TIME *pTime);
  HRESULT (__stdcall *AdviseTime)(IReferenceClock *This, REFERENCE_TIME rtBaseTime, REFERENCE_TIME rtStreamTime, HANDLE hEvent, LPDWORD pdwAdviseCookie);
  HRESULT (__stdcall *AdvisePeriodic)(IReferenceClock *This, REFERENCE_TIME rtStartTime, REFERENCE_TIME rtPeriodTime, HANDLE hSemaphore, LPDWORD pdwAdviseCookie);
  HRESULT (__stdcall *Unadvise)(IReferenceClock *This, DWORD dwAdviseCookie);
};

/* 6558 */
#pragma pack(push, 8)
struct IClientSecurityVtbl
{
  HRESULT (__stdcall *QueryInterface)(IClientSecurity *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IClientSecurity *This);
  ULONG (__stdcall *Release)(IClientSecurity *This);
  HRESULT (__stdcall *QueryBlanket)(IClientSecurity *This, IUnknown *pProxy, DWORD *pAuthnSvc, DWORD *pAuthzSvc, OLECHAR **pServerPrincName, DWORD *pAuthnLevel, DWORD *pImpLevel, void **pAuthInfo, DWORD *pCapabilites);
  HRESULT (__stdcall *SetBlanket)(IClientSecurity *This, IUnknown *pProxy, DWORD dwAuthnSvc, DWORD dwAuthzSvc, OLECHAR *pServerPrincName, DWORD dwAuthnLevel, DWORD dwImpLevel, void *pAuthInfo, DWORD dwCapabilities);
  HRESULT (__stdcall *CopyProxy)(IClientSecurity *This, IUnknown *pProxy, IUnknown **ppCopy);
};
#pragma pack(pop)

/* 6559 */
#pragma pack(push, 8)
struct IClientSecurity
{
  struct IClientSecurityVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6562 */
typedef union _ULARGE_INTEGER ULARGE_INTEGER;

/* 6560 */
#pragma pack(push, 8)
struct IFillLockBytesVtbl
{
  HRESULT (__stdcall *QueryInterface)(IFillLockBytes *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IFillLockBytes *This);
  ULONG (__stdcall *Release)(IFillLockBytes *This);
  HRESULT (__stdcall *FillAppend)(IFillLockBytes *This, const void *pv, ULONG cb, ULONG *pcbWritten);
  HRESULT (__stdcall *FillAt)(IFillLockBytes *This, ULARGE_INTEGER ulOffset, const void *pv, ULONG cb, ULONG *pcbWritten);
  HRESULT (__stdcall *SetFillSize)(IFillLockBytes *This, ULARGE_INTEGER ulSize);
  HRESULT (__stdcall *Terminate)(IFillLockBytes *This, BOOL bCanceled);
};
#pragma pack(pop)

/* 6561 */
#pragma pack(push, 8)
struct IFillLockBytes
{
  struct IFillLockBytesVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6564 */
typedef GUID CLSID;

/* 6563 */
#pragma pack(push, 8)
struct IPersistStreamVtbl
{
  HRESULT (__stdcall *QueryInterface)(IPersistStream *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IPersistStream *This);
  ULONG (__stdcall *Release)(IPersistStream *This);
  HRESULT (__stdcall *GetClassID)(IPersistStream *This, CLSID *pClassID);
  HRESULT (__stdcall *IsDirty)(IPersistStream *This);
  HRESULT (__stdcall *Load)(IPersistStream *This, IStream *pStm);
  HRESULT (__stdcall *Save)(IPersistStream *This, IStream *pStm, BOOL fClearDirty);
  HRESULT (__stdcall *GetSizeMax)(IPersistStream *This, ULARGE_INTEGER *pcbSize);
};
#pragma pack(pop)

/* 6566 */
typedef GUID *LPGUID;

/* 6565 */
#pragma pack(push, 8)
struct IDirectMusicBufferVtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirectMusicBuffer *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IDirectMusicBuffer *This);
  ULONG (__stdcall *Release)(IDirectMusicBuffer *This);
  HRESULT (__stdcall *Flush)(IDirectMusicBuffer *This);
  HRESULT (__stdcall *TotalTime)(IDirectMusicBuffer *This, LPREFERENCE_TIME prtTime);
  HRESULT (__stdcall *PackStructured)(IDirectMusicBuffer *This, REFERENCE_TIME rt, DWORD dwChannelGroup, DWORD dwChannelMessage);
  HRESULT (__stdcall *PackUnstructured)(IDirectMusicBuffer *This, REFERENCE_TIME rt, DWORD dwChannelGroup, DWORD cb, LPBYTE lpb);
  HRESULT (__stdcall *ResetReadPtr)(IDirectMusicBuffer *This);
  HRESULT (__stdcall *GetNextEvent)(IDirectMusicBuffer *This, LPREFERENCE_TIME prt, LPDWORD pdwChannelGroup, LPDWORD pdwLength, LPBYTE *ppData);
  HRESULT (__stdcall *GetRawBufferPtr)(IDirectMusicBuffer *This, LPBYTE *ppData);
  HRESULT (__stdcall *GetStartTime)(IDirectMusicBuffer *This, LPREFERENCE_TIME prt);
  HRESULT (__stdcall *GetUsedBytes)(IDirectMusicBuffer *This, LPDWORD pcb);
  HRESULT (__stdcall *GetMaxBytes)(IDirectMusicBuffer *This, LPDWORD pcb);
  HRESULT (__stdcall *GetBufferFormat)(IDirectMusicBuffer *This, LPGUID pGuidFormat);
  HRESULT (__stdcall *SetStartTime)(IDirectMusicBuffer *This, REFERENCE_TIME rt);
  HRESULT (__stdcall *SetUsedBytes)(IDirectMusicBuffer *This, DWORD cb);
};
#pragma pack(pop)

/* 6567 */
#pragma pack(push, 8)
struct IMarshalVtbl
{
  HRESULT (__stdcall *QueryInterface)(IMarshal *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IMarshal *This);
  ULONG (__stdcall *Release)(IMarshal *This);
  HRESULT (__stdcall *GetUnmarshalClass)(IMarshal *This, const IID *const riid, void *pv, DWORD dwDestContext, void *pvDestContext, DWORD mshlflags, CLSID *pCid);
  HRESULT (__stdcall *GetMarshalSizeMax)(IMarshal *This, const IID *const riid, void *pv, DWORD dwDestContext, void *pvDestContext, DWORD mshlflags, DWORD *pSize);
  HRESULT (__stdcall *MarshalInterface)(IMarshal *This, IStream *pStm, const IID *const riid, void *pv, DWORD dwDestContext, void *pvDestContext, DWORD mshlflags);
  HRESULT (__stdcall *UnmarshalInterface)(IMarshal *This, IStream *pStm, const IID *const riid, void **ppv);
  HRESULT (__stdcall *ReleaseMarshalData)(IMarshal *This, IStream *pStm);
  HRESULT (__stdcall *DisconnectObject)(IMarshal *This, DWORD dwReserved);
};
#pragma pack(pop)

/* 6568 */
#pragma pack(push, 8)
struct IMarshal
{
  struct IMarshalVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6569 */
#pragma pack(push, 8)
struct IDirectMusicPortDownloadVtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirectMusicPortDownload *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IDirectMusicPortDownload *This);
  ULONG (__stdcall *Release)(IDirectMusicPortDownload *This);
  HRESULT (__stdcall *GetBuffer)(IDirectMusicPortDownload *This, DWORD dwDLId, IDirectMusicDownload **ppIDMDownload);
  HRESULT (__stdcall *AllocateBuffer)(IDirectMusicPortDownload *This, DWORD dwSize, IDirectMusicDownload **ppIDMDownload);
  HRESULT (__stdcall *GetDLId)(IDirectMusicPortDownload *This, DWORD *pdwStartDLId, DWORD dwCount);
  HRESULT (__stdcall *GetAppend)(IDirectMusicPortDownload *This, DWORD *pdwAppend);
  HRESULT (__stdcall *Download)(IDirectMusicPortDownload *This, IDirectMusicDownload *pIDMDownload);
  HRESULT (__stdcall *Unload)(IDirectMusicPortDownload *This, IDirectMusicDownload *pIDMDownload);
};
#pragma pack(pop)

/* 6570 */
#pragma pack(push, 8)
struct IDirectMusicPortDownload
{
  struct IDirectMusicPortDownloadVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6573 */
typedef struct tagSTATSTG STATSTG;

/* 6571 */
#pragma pack(push, 8)
struct ILockBytesVtbl
{
  HRESULT (__stdcall *QueryInterface)(ILockBytes *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(ILockBytes *This);
  ULONG (__stdcall *Release)(ILockBytes *This);
  HRESULT (__stdcall *ReadAt)(ILockBytes *This, ULARGE_INTEGER ulOffset, void *pv, ULONG cb, ULONG *pcbRead);
  HRESULT (__stdcall *WriteAt)(ILockBytes *This, ULARGE_INTEGER ulOffset, const void *pv, ULONG cb, ULONG *pcbWritten);
  HRESULT (__stdcall *Flush)(ILockBytes *This);
  HRESULT (__stdcall *SetSize)(ILockBytes *This, ULARGE_INTEGER cb);
  HRESULT (__stdcall *LockRegion)(ILockBytes *This, ULARGE_INTEGER libOffset, ULARGE_INTEGER cb, DWORD dwLockType);
  HRESULT (__stdcall *UnlockRegion)(ILockBytes *This, ULARGE_INTEGER libOffset, ULARGE_INTEGER cb, DWORD dwLockType);
  HRESULT (__stdcall *Stat)(ILockBytes *This, STATSTG *pstatstg, DWORD grfStatFlag);
};
#pragma pack(pop)

/* 6572 */
#pragma pack(push, 8)
struct ILockBytes
{
  struct ILockBytesVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6577 */
typedef struct _DSBPOSITIONNOTIFY DSBPOSITIONNOTIFY;

/* 6576 */
typedef const DSBPOSITIONNOTIFY *LPCDSBPOSITIONNOTIFY;

/* 6574 */
struct IDirectSoundNotifyVtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirectSoundNotify *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IDirectSoundNotify *This);
  ULONG (__stdcall *Release)(IDirectSoundNotify *This);
  HRESULT (__stdcall *SetNotificationPositions)(IDirectSoundNotify *This, DWORD dwPositionNotifies, LPCDSBPOSITIONNOTIFY pcPositionNotifies);
};

/* 6575 */
struct IDirectSoundNotify
{
  struct IDirectSoundNotifyVtbl *lpVtbl;
};

/* 6578 */
struct _DSBPOSITIONNOTIFY
{
  DWORD dwOffset;
  HANDLE hEventNotify;
};

/* 6581 */
typedef struct _DS3DBUFFER *LPDS3DBUFFER;

/* 6583 */
typedef struct _D3DVECTOR D3DVECTOR;

/* 6585 */
typedef struct _DS3DBUFFER DS3DBUFFER;

/* 6584 */
typedef const DS3DBUFFER *LPCDS3DBUFFER;

/* 6579 */
struct IDirectSound3DBufferVtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirectSound3DBuffer *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IDirectSound3DBuffer *This);
  ULONG (__stdcall *Release)(IDirectSound3DBuffer *This);
  HRESULT (__stdcall *GetAllParameters)(IDirectSound3DBuffer *This, LPDS3DBUFFER pDs3dBuffer);
  HRESULT (__stdcall *GetConeAngles)(IDirectSound3DBuffer *This, LPDWORD pdwInsideConeAngle, LPDWORD pdwOutsideConeAngle);
  HRESULT (__stdcall *GetConeOrientation)(IDirectSound3DBuffer *This, D3DVECTOR *pvOrientation);
  HRESULT (__stdcall *GetConeOutsideVolume)(IDirectSound3DBuffer *This, LPLONG plConeOutsideVolume);
  HRESULT (__stdcall *GetMaxDistance)(IDirectSound3DBuffer *This, D3DVALUE *pflMaxDistance);
  HRESULT (__stdcall *GetMinDistance)(IDirectSound3DBuffer *This, D3DVALUE *pflMinDistance);
  HRESULT (__stdcall *GetMode)(IDirectSound3DBuffer *This, LPDWORD pdwMode);
  HRESULT (__stdcall *GetPosition)(IDirectSound3DBuffer *This, D3DVECTOR *pvPosition);
  HRESULT (__stdcall *GetVelocity)(IDirectSound3DBuffer *This, D3DVECTOR *pvVelocity);
  HRESULT (__stdcall *SetAllParameters)(IDirectSound3DBuffer *This, LPCDS3DBUFFER pcDs3dBuffer, DWORD dwApply);
  HRESULT (__stdcall *SetConeAngles)(IDirectSound3DBuffer *This, DWORD dwInsideConeAngle, DWORD dwOutsideConeAngle, DWORD dwApply);
  HRESULT (__stdcall *SetConeOrientation)(IDirectSound3DBuffer *This, D3DVALUE x, D3DVALUE y, D3DVALUE z, DWORD dwApply);
  HRESULT (__stdcall *SetConeOutsideVolume)(IDirectSound3DBuffer *This, LONG lConeOutsideVolume, DWORD dwApply);
  HRESULT (__stdcall *SetMaxDistance)(IDirectSound3DBuffer *This, D3DVALUE flMaxDistance, DWORD dwApply);
  HRESULT (__stdcall *SetMinDistance)(IDirectSound3DBuffer *This, D3DVALUE flMinDistance, DWORD dwApply);
  HRESULT (__stdcall *SetMode)(IDirectSound3DBuffer *This, DWORD dwMode, DWORD dwApply);
  HRESULT (__stdcall *SetPosition)(IDirectSound3DBuffer *This, D3DVALUE x, D3DVALUE y, D3DVALUE z, DWORD dwApply);
  HRESULT (__stdcall *SetVelocity)(IDirectSound3DBuffer *This, D3DVALUE x, D3DVALUE y, D3DVALUE z, DWORD dwApply);
};

/* 6580 */
struct IDirectSound3DBuffer
{
  struct IDirectSound3DBufferVtbl *lpVtbl;
};

/* 6582 */
struct _DS3DBUFFER
{
  DWORD dwSize;
  D3DVECTOR vPosition;
  D3DVECTOR vVelocity;
  DWORD dwInsideConeAngle;
  DWORD dwOutsideConeAngle;
  D3DVECTOR vConeOrientation;
  LONG lConeOutsideVolume;
  D3DVALUE flMinDistance;
  D3DVALUE flMaxDistance;
  DWORD dwMode;
};

/* 6586 */
#pragma pack(push, 8)
struct AsyncIPipeLongVtbl
{
  HRESULT (__stdcall *QueryInterface)(AsyncIPipeLong *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(AsyncIPipeLong *This);
  ULONG (__stdcall *Release)(AsyncIPipeLong *This);
  HRESULT (__stdcall *Begin_Pull)(AsyncIPipeLong *This, ULONG cRequest);
  HRESULT (__stdcall *Finish_Pull)(AsyncIPipeLong *This, LONG *buf, ULONG *pcReturned);
  HRESULT (__stdcall *Begin_Push)(AsyncIPipeLong *This, LONG *buf, ULONG cSent);
  HRESULT (__stdcall *Finish_Push)(AsyncIPipeLong *This);
};
#pragma pack(pop)

/* 6587 */
#pragma pack(push, 8)
struct AsyncIPipeLong
{
  struct AsyncIPipeLongVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6588 */
#pragma pack(push, 8)
struct ISurrogateVtbl
{
  HRESULT (__stdcall *QueryInterface)(ISurrogate *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(ISurrogate *This);
  ULONG (__stdcall *Release)(ISurrogate *This);
  HRESULT (__stdcall *LoadDllServer)(ISurrogate *This, const IID *const Clsid);
  HRESULT (__stdcall *FreeSurrogate)(ISurrogate *This);
};
#pragma pack(pop)

/* 6589 */
#pragma pack(push, 8)
struct ISurrogate
{
  struct ISurrogateVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6590 */
#pragma pack(push, 8)
struct IPersistFileVtbl
{
  HRESULT (__stdcall *QueryInterface)(IPersistFile *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IPersistFile *This);
  ULONG (__stdcall *Release)(IPersistFile *This);
  HRESULT (__stdcall *GetClassID)(IPersistFile *This, CLSID *pClassID);
  HRESULT (__stdcall *IsDirty)(IPersistFile *This);
  HRESULT (__stdcall *Load)(IPersistFile *This, LPCOLESTR pszFileName, DWORD dwMode);
  HRESULT (__stdcall *Save)(IPersistFile *This, LPCOLESTR pszFileName, BOOL fRemember);
  HRESULT (__stdcall *SaveCompleted)(IPersistFile *This, LPCOLESTR pszFileName);
  HRESULT (__stdcall *GetCurFile)(IPersistFile *This, LPOLESTR *ppszFileName);
};
#pragma pack(pop)

/* 6591 */
#pragma pack(push, 8)
struct IPersistFile
{
  struct IPersistFileVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6592 */
#pragma pack(push, 8)
struct IThumbnailExtractorVtbl
{
  HRESULT (__stdcall *QueryInterface)(IThumbnailExtractor *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IThumbnailExtractor *This);
  ULONG (__stdcall *Release)(IThumbnailExtractor *This);
  HRESULT (__stdcall *ExtractThumbnail)(IThumbnailExtractor *This, IStorage *pStg, ULONG ulLength, ULONG ulHeight, ULONG *pulOutputLength, ULONG *pulOutputHeight, HBITMAP *phOutputBitmap);
  HRESULT (__stdcall *OnFileUpdated)(IThumbnailExtractor *This, IStorage *pStg);
};
#pragma pack(pop)

/* 6593 */
#pragma pack(push, 8)
struct IThumbnailExtractor
{
  struct IThumbnailExtractorVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6594 */
struct IKsPropertySetVtbl
{
  HRESULT (__stdcall *QueryInterface)(IKsPropertySet *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IKsPropertySet *This);
  ULONG (__stdcall *Release)(IKsPropertySet *This);
  HRESULT (__stdcall *Get)(IKsPropertySet *This, const GUID *const rguidPropSet, ULONG ulId, LPVOID pInstanceData, ULONG ulInstanceLength, LPVOID pPropertyData, ULONG ulDataLength, PULONG pulBytesReturned);
  HRESULT (__stdcall *Set)(IKsPropertySet *This, const GUID *const rguidPropSet, ULONG ulId, LPVOID pInstanceData, ULONG ulInstanceLength, LPVOID pPropertyData, ULONG ulDataLength);
  HRESULT (__stdcall *QuerySupport)(IKsPropertySet *This, const GUID *const rguidPropSet, ULONG ulId, PULONG pulTypeSupport);
};

/* 6595 */
struct IKsPropertySet
{
  struct IKsPropertySetVtbl *lpVtbl;
};

/* 6596 */
#pragma pack(push, 8)
struct IProgressNotifyVtbl
{
  HRESULT (__stdcall *QueryInterface)(IProgressNotify *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IProgressNotify *This);
  ULONG (__stdcall *Release)(IProgressNotify *This);
  HRESULT (__stdcall *OnProgress)(IProgressNotify *This, DWORD dwProgressCurrent, DWORD dwProgressMaximum, BOOL fAccurate, BOOL fOwner);
};
#pragma pack(pop)

/* 6597 */
#pragma pack(push, 8)
struct IProgressNotify
{
  struct IProgressNotifyVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6600 */
typedef struct _DS3DLISTENER *LPDS3DLISTENER;

/* 6603 */
typedef struct _DS3DLISTENER DS3DLISTENER;

/* 6602 */
typedef const DS3DLISTENER *LPCDS3DLISTENER;

/* 6598 */
struct IDirectSound3DListenerVtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirectSound3DListener *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IDirectSound3DListener *This);
  ULONG (__stdcall *Release)(IDirectSound3DListener *This);
  HRESULT (__stdcall *GetAllParameters)(IDirectSound3DListener *This, LPDS3DLISTENER pListener);
  HRESULT (__stdcall *GetDistanceFactor)(IDirectSound3DListener *This, D3DVALUE *pflDistanceFactor);
  HRESULT (__stdcall *GetDopplerFactor)(IDirectSound3DListener *This, D3DVALUE *pflDopplerFactor);
  HRESULT (__stdcall *GetOrientation)(IDirectSound3DListener *This, D3DVECTOR *pvOrientFront, D3DVECTOR *pvOrientTop);
  HRESULT (__stdcall *GetPosition)(IDirectSound3DListener *This, D3DVECTOR *pvPosition);
  HRESULT (__stdcall *GetRolloffFactor)(IDirectSound3DListener *This, D3DVALUE *pflRolloffFactor);
  HRESULT (__stdcall *GetVelocity)(IDirectSound3DListener *This, D3DVECTOR *pvVelocity);
  HRESULT (__stdcall *SetAllParameters)(IDirectSound3DListener *This, LPCDS3DLISTENER pcListener, DWORD dwApply);
  HRESULT (__stdcall *SetDistanceFactor)(IDirectSound3DListener *This, D3DVALUE flDistanceFactor, DWORD dwApply);
  HRESULT (__stdcall *SetDopplerFactor)(IDirectSound3DListener *This, D3DVALUE flDopplerFactor, DWORD dwApply);
  HRESULT (__stdcall *SetOrientation)(IDirectSound3DListener *This, D3DVALUE xFront, D3DVALUE yFront, D3DVALUE zFront, D3DVALUE xTop, D3DVALUE yTop, D3DVALUE zTop, DWORD dwApply);
  HRESULT (__stdcall *SetPosition)(IDirectSound3DListener *This, D3DVALUE x, D3DVALUE y, D3DVALUE z, DWORD dwApply);
  HRESULT (__stdcall *SetRolloffFactor)(IDirectSound3DListener *This, D3DVALUE flRolloffFactor, DWORD dwApply);
  HRESULT (__stdcall *SetVelocity)(IDirectSound3DListener *This, D3DVALUE x, D3DVALUE y, D3DVALUE z, DWORD dwApply);
  HRESULT (__stdcall *CommitDeferredSettings)(IDirectSound3DListener *This);
};

/* 6599 */
struct IDirectSound3DListener
{
  struct IDirectSound3DListenerVtbl *lpVtbl;
};

/* 6601 */
struct _DS3DLISTENER
{
  DWORD dwSize;
  D3DVECTOR vPosition;
  D3DVECTOR vVelocity;
  D3DVECTOR vOrientFront;
  D3DVECTOR vOrientTop;
  D3DVALUE flDistanceFactor;
  D3DVALUE flRolloffFactor;
  D3DVALUE flDopplerFactor;
};

/* 6606 */
typedef struct _DSCBCAPS *LPDSCBCAPS;

/* 6608 */
typedef struct tWAVEFORMATEX *LPWAVEFORMATEX;

/* 6609 */
typedef struct IDirectSoundCapture *LPDIRECTSOUNDCAPTURE;

/* 6613 */
typedef struct _DSCBUFFERDESC DSCBUFFERDESC;

/* 6612 */
typedef const DSCBUFFERDESC *LPCDSCBUFFERDESC;

/* 6604 */
struct IDirectSoundCaptureBuffer8Vtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirectSoundCaptureBuffer8 *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IDirectSoundCaptureBuffer8 *This);
  ULONG (__stdcall *Release)(IDirectSoundCaptureBuffer8 *This);
  HRESULT (__stdcall *GetCaps)(IDirectSoundCaptureBuffer8 *This, LPDSCBCAPS pDSCBCaps);
  HRESULT (__stdcall *GetCurrentPosition)(IDirectSoundCaptureBuffer8 *This, LPDWORD pdwCapturePosition, LPDWORD pdwReadPosition);
  HRESULT (__stdcall *GetFormat)(IDirectSoundCaptureBuffer8 *This, LPWAVEFORMATEX pwfxFormat, DWORD dwSizeAllocated, LPDWORD pdwSizeWritten);
  HRESULT (__stdcall *GetStatus)(IDirectSoundCaptureBuffer8 *This, LPDWORD pdwStatus);
  HRESULT (__stdcall *Initialize)(IDirectSoundCaptureBuffer8 *This, LPDIRECTSOUNDCAPTURE pDirectSoundCapture, LPCDSCBUFFERDESC pcDSCBufferDesc);
  HRESULT (__stdcall *Lock)(IDirectSoundCaptureBuffer8 *This, DWORD dwOffset, DWORD dwBytes, LPVOID *ppvAudioPtr1, LPDWORD pdwAudioBytes1, LPVOID *ppvAudioPtr2, LPDWORD pdwAudioBytes2, DWORD dwFlags);
  HRESULT (__stdcall *Start)(IDirectSoundCaptureBuffer8 *This, DWORD dwFlags);
  HRESULT (__stdcall *Stop)(IDirectSoundCaptureBuffer8 *This);
  HRESULT (__stdcall *Unlock)(IDirectSoundCaptureBuffer8 *This, LPVOID pvAudioPtr1, DWORD dwAudioBytes1, LPVOID pvAudioPtr2, DWORD dwAudioBytes2);
  HRESULT (__stdcall *GetObjectInPath)(IDirectSoundCaptureBuffer8 *This, const GUID *const rguidObject, DWORD dwIndex, const GUID *const rguidInterface, LPVOID *ppObject);
  HRESULT (__stdcall *GetFXStatus)(DWORD dwEffectsCount, LPDWORD pdwFXStatus);
};

/* 6605 */
struct IDirectSoundCaptureBuffer8
{
  struct IDirectSoundCaptureBuffer8Vtbl *lpVtbl;
};

/* 6607 */
struct _DSCBCAPS
{
  DWORD dwSize;
  DWORD dwFlags;
  DWORD dwBufferBytes;
  DWORD dwReserved;
};

/* 6610 */
struct IDirectSoundCapture
{
  struct IDirectSoundCaptureVtbl *lpVtbl;
};

/* 6615 */
typedef struct _DSCEFFECTDESC *LPDSCEFFECTDESC;

/* 6614 */
struct _DSCBUFFERDESC
{
  DWORD dwSize;
  DWORD dwFlags;
  DWORD dwBufferBytes;
  DWORD dwReserved;
  LPWAVEFORMATEX lpwfxFormat;
  DWORD dwFXCount;
  LPDSCEFFECTDESC lpDSCFXDesc;
};

/* 6617 */
typedef struct IDirectSoundCaptureBuffer *LPDIRECTSOUNDCAPTUREBUFFER;

/* 6620 */
typedef IUnknown *LPUNKNOWN;

/* 6621 */
typedef struct _DSCCAPS *LPDSCCAPS;

/* 6623 */
typedef const GUID *LPCGUID;

/* 6611 */
struct IDirectSoundCaptureVtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirectSoundCapture *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IDirectSoundCapture *This);
  ULONG (__stdcall *Release)(IDirectSoundCapture *This);
  HRESULT (__stdcall *CreateCaptureBuffer)(IDirectSoundCapture *This, LPCDSCBUFFERDESC pcDSCBufferDesc, LPDIRECTSOUNDCAPTUREBUFFER *ppDSCBuffer, LPUNKNOWN pUnkOuter);
  HRESULT (__stdcall *GetCaps)(IDirectSoundCapture *This, LPDSCCAPS pDSCCaps);
  HRESULT (__stdcall *Initialize)(IDirectSoundCapture *This, LPCGUID pcGuidDevice);
};

/* 6616 */
struct _DSCEFFECTDESC
{
  DWORD dwSize;
  DWORD dwFlags;
  GUID guidDSCFXClass;
  GUID guidDSCFXInstance;
  DWORD dwReserved1;
  DWORD dwReserved2;
};

/* 6618 */
struct IDirectSoundCaptureBuffer
{
  struct IDirectSoundCaptureBufferVtbl *lpVtbl;
};

/* 6622 */
struct _DSCCAPS
{
  DWORD dwSize;
  DWORD dwFlags;
  DWORD dwFormats;
  DWORD dwChannels;
};

/* 6619 */
struct IDirectSoundCaptureBufferVtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirectSoundCaptureBuffer *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IDirectSoundCaptureBuffer *This);
  ULONG (__stdcall *Release)(IDirectSoundCaptureBuffer *This);
  HRESULT (__stdcall *GetCaps)(IDirectSoundCaptureBuffer *This, LPDSCBCAPS pDSCBCaps);
  HRESULT (__stdcall *GetCurrentPosition)(IDirectSoundCaptureBuffer *This, LPDWORD pdwCapturePosition, LPDWORD pdwReadPosition);
  HRESULT (__stdcall *GetFormat)(IDirectSoundCaptureBuffer *This, LPWAVEFORMATEX pwfxFormat, DWORD dwSizeAllocated, LPDWORD pdwSizeWritten);
  HRESULT (__stdcall *GetStatus)(IDirectSoundCaptureBuffer *This, LPDWORD pdwStatus);
  HRESULT (__stdcall *Initialize)(IDirectSoundCaptureBuffer *This, LPDIRECTSOUNDCAPTURE pDirectSoundCapture, LPCDSCBUFFERDESC pcDSCBufferDesc);
  HRESULT (__stdcall *Lock)(IDirectSoundCaptureBuffer *This, DWORD dwOffset, DWORD dwBytes, LPVOID *ppvAudioPtr1, LPDWORD pdwAudioBytes1, LPVOID *ppvAudioPtr2, LPDWORD pdwAudioBytes2, DWORD dwFlags);
  HRESULT (__stdcall *Start)(IDirectSoundCaptureBuffer *This, DWORD dwFlags);
  HRESULT (__stdcall *Stop)(IDirectSoundCaptureBuffer *This);
  HRESULT (__stdcall *Unlock)(IDirectSoundCaptureBuffer *This, LPVOID pvAudioPtr1, DWORD dwAudioBytes1, LPVOID pvAudioPtr2, DWORD dwAudioBytes2);
};

/* 6624 */
#pragma pack(push, 8)
struct IRootStorageVtbl
{
  HRESULT (__stdcall *QueryInterface)(IRootStorage *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IRootStorage *This);
  ULONG (__stdcall *Release)(IRootStorage *This);
  HRESULT (__stdcall *SwitchToFile)(IRootStorage *This, LPOLESTR pszFile);
};
#pragma pack(pop)

/* 6625 */
#pragma pack(push, 8)
struct IRootStorage
{
  struct IRootStorageVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6629 */
typedef struct _DSFXChorus DSFXChorus;

/* 6628 */
typedef const DSFXChorus *LPCDSFXChorus;

/* 6631 */
typedef struct _DSFXChorus *LPDSFXChorus;

/* 6626 */
struct IDirectSoundFXChorusVtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirectSoundFXChorus *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IDirectSoundFXChorus *This);
  ULONG (__stdcall *Release)(IDirectSoundFXChorus *This);
  HRESULT (__stdcall *SetAllParameters)(IDirectSoundFXChorus *This, LPCDSFXChorus pcDsFxChorus);
  HRESULT (__stdcall *GetAllParameters)(IDirectSoundFXChorus *This, LPDSFXChorus pDsFxChorus);
};

/* 6627 */
struct IDirectSoundFXChorus
{
  struct IDirectSoundFXChorusVtbl *lpVtbl;
};

/* 6630 */
struct _DSFXChorus
{
  FLOAT fWetDryMix;
  FLOAT fDepth;
  FLOAT fFeedback;
  FLOAT fFrequency;
  LONG lWaveform;
  FLOAT fDelay;
  LONG lPhase;
};

/* 6634 */
typedef struct tagFORMATETC FORMATETC;

/* 6636 */
typedef struct tagSTGMEDIUM uSTGMEDIUM;

/* 6635 */
typedef uSTGMEDIUM STGMEDIUM;

/* 6632 */
#pragma pack(push, 8)
struct AsyncIAdviseSinkVtbl
{
  HRESULT (__stdcall *QueryInterface)(AsyncIAdviseSink *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(AsyncIAdviseSink *This);
  ULONG (__stdcall *Release)(AsyncIAdviseSink *This);
  void (__stdcall *Begin_OnDataChange)(AsyncIAdviseSink *This, FORMATETC *pFormatetc, STGMEDIUM *pStgmed);
  void (__stdcall *Finish_OnDataChange)(AsyncIAdviseSink *This);
  void (__stdcall *Begin_OnViewChange)(AsyncIAdviseSink *This, DWORD dwAspect, LONG lindex);
  void (__stdcall *Finish_OnViewChange)(AsyncIAdviseSink *This);
  void (__stdcall *Begin_OnRename)(AsyncIAdviseSink *This, IMoniker *pmk);
  void (__stdcall *Finish_OnRename)(AsyncIAdviseSink *This);
  void (__stdcall *Begin_OnSave)(AsyncIAdviseSink *This);
  void (__stdcall *Finish_OnSave)(AsyncIAdviseSink *This);
  void (__stdcall *Begin_OnClose)(AsyncIAdviseSink *This);
  void (__stdcall *Finish_OnClose)(AsyncIAdviseSink *This);
};
#pragma pack(pop)

/* 6633 */
#pragma pack(push, 8)
struct AsyncIAdviseSink
{
  struct AsyncIAdviseSinkVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6637 */
#pragma pack(push, 8)
struct AsyncIAdviseSink2Vtbl
{
  HRESULT (__stdcall *QueryInterface)(AsyncIAdviseSink2 *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(AsyncIAdviseSink2 *This);
  ULONG (__stdcall *Release)(AsyncIAdviseSink2 *This);
  void (__stdcall *Begin_OnDataChange)(AsyncIAdviseSink2 *This, FORMATETC *pFormatetc, STGMEDIUM *pStgmed);
  void (__stdcall *Finish_OnDataChange)(AsyncIAdviseSink2 *This);
  void (__stdcall *Begin_OnViewChange)(AsyncIAdviseSink2 *This, DWORD dwAspect, LONG lindex);
  void (__stdcall *Finish_OnViewChange)(AsyncIAdviseSink2 *This);
  void (__stdcall *Begin_OnRename)(AsyncIAdviseSink2 *This, IMoniker *pmk);
  void (__stdcall *Finish_OnRename)(AsyncIAdviseSink2 *This);
  void (__stdcall *Begin_OnSave)(AsyncIAdviseSink2 *This);
  void (__stdcall *Finish_OnSave)(AsyncIAdviseSink2 *This);
  void (__stdcall *Begin_OnClose)(AsyncIAdviseSink2 *This);
  void (__stdcall *Finish_OnClose)(AsyncIAdviseSink2 *This);
  void (__stdcall *Begin_OnLinkSrcChange)(AsyncIAdviseSink2 *This, IMoniker *pmk);
  void (__stdcall *Finish_OnLinkSrcChange)(AsyncIAdviseSink2 *This);
};
#pragma pack(pop)

/* 6638 */
#pragma pack(push, 8)
struct AsyncIAdviseSink2
{
  struct AsyncIAdviseSink2Vtbl *lpVtbl;
};
#pragma pack(pop)

/* 6639 */
#pragma pack(push, 8)
struct IBlockingLockVtbl
{
  HRESULT (__stdcall *QueryInterface)(IBlockingLock *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IBlockingLock *This);
  ULONG (__stdcall *Release)(IBlockingLock *This);
  HRESULT (__stdcall *Lock)(IBlockingLock *This, DWORD dwTimeout);
  HRESULT (__stdcall *Unlock)(IBlockingLock *This);
};
#pragma pack(pop)

/* 6640 */
#pragma pack(push, 8)
struct IBlockingLock
{
  struct IBlockingLockVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6643 */
typedef struct tagRPCOLEMESSAGE RPCOLEMESSAGE;

/* 6641 */
#pragma pack(push, 8)
struct IRpcStubBufferVtbl
{
  HRESULT (__stdcall *QueryInterface)(IRpcStubBuffer *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IRpcStubBuffer *This);
  ULONG (__stdcall *Release)(IRpcStubBuffer *This);
  HRESULT (__stdcall *Connect)(IRpcStubBuffer *This, IUnknown *pUnkServer);
  void (__stdcall *Disconnect)(IRpcStubBuffer *This);
  HRESULT (__stdcall *Invoke)(IRpcStubBuffer *This, RPCOLEMESSAGE *prpcmsg, IRpcChannelBuffer *pRpcChannelBuffer);
  IRpcStubBuffer *(__stdcall *IsIIDSupported)(IRpcStubBuffer *This, const IID *const riid);
  ULONG (__stdcall *CountRefs)(IRpcStubBuffer *This);
  HRESULT (__stdcall *DebugServerQueryInterface)(IRpcStubBuffer *This, void **ppv);
  void (__stdcall *DebugServerRelease)(IRpcStubBuffer *This, void *pv);
};
#pragma pack(pop)

/* 6642 */
#pragma pack(push, 8)
struct IRpcStubBuffer
{
  struct IRpcStubBufferVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6644 */
#pragma pack(push, 8)
struct tagRPCOLEMESSAGE
{
  void *reserved1;
  RPCOLEDATAREP dataRepresentation;
  void *Buffer;
  ULONG cbBuffer;
  ULONG iMethod;
  void *reserved2[5];
  ULONG rpcFlags;
};
#pragma pack(pop)

/* 6645 */
#pragma pack(push, 8)
struct IRpcChannelBuffer
{
  struct IRpcChannelBufferVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6646 */
#pragma pack(push, 8)
struct IRpcChannelBufferVtbl
{
  HRESULT (__stdcall *QueryInterface)(IRpcChannelBuffer *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IRpcChannelBuffer *This);
  ULONG (__stdcall *Release)(IRpcChannelBuffer *This);
  HRESULT (__stdcall *GetBuffer)(IRpcChannelBuffer *This, RPCOLEMESSAGE *pMessage, const IID *const riid);
  HRESULT (__stdcall *SendReceive)(IRpcChannelBuffer *This, RPCOLEMESSAGE *pMessage, ULONG *pStatus);
  HRESULT (__stdcall *FreeBuffer)(IRpcChannelBuffer *This, RPCOLEMESSAGE *pMessage);
  HRESULT (__stdcall *GetDestCtx)(IRpcChannelBuffer *This, DWORD *pdwDestContext, void **ppvDestContext);
  HRESULT (__stdcall *IsConnected)(IRpcChannelBuffer *This);
};
#pragma pack(pop)

/* 6647 */
#pragma pack(push, 8)
struct IClassActivatorVtbl
{
  HRESULT (__stdcall *QueryInterface)(IClassActivator *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IClassActivator *This);
  ULONG (__stdcall *Release)(IClassActivator *This);
  HRESULT (__stdcall *GetClassObject)(IClassActivator *This, const IID *const rclsid, DWORD dwClassContext, LCID locale, const IID *const riid, void **ppv);
};
#pragma pack(pop)

/* 6648 */
#pragma pack(push, 8)
struct IClassActivator
{
  struct IClassActivatorVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6652 */
typedef struct _DSFXI3DL2Reverb DSFXI3DL2Reverb;

/* 6651 */
typedef const DSFXI3DL2Reverb *LPCDSFXI3DL2Reverb;

/* 6654 */
typedef struct _DSFXI3DL2Reverb *LPDSFXI3DL2Reverb;

/* 6649 */
struct IDirectSoundFXI3DL2ReverbVtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirectSoundFXI3DL2Reverb *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IDirectSoundFXI3DL2Reverb *This);
  ULONG (__stdcall *Release)(IDirectSoundFXI3DL2Reverb *This);
  HRESULT (__stdcall *SetAllParameters)(IDirectSoundFXI3DL2Reverb *This, LPCDSFXI3DL2Reverb pcDsFxI3DL2Reverb);
  HRESULT (__stdcall *GetAllParameters)(IDirectSoundFXI3DL2Reverb *This, LPDSFXI3DL2Reverb pDsFxI3DL2Reverb);
  HRESULT (__stdcall *SetPreset)(IDirectSoundFXI3DL2Reverb *This, DWORD dwPreset);
  HRESULT (__stdcall *GetPreset)(IDirectSoundFXI3DL2Reverb *This, LPDWORD pdwPreset);
  HRESULT (__stdcall *SetQuality)(IDirectSoundFXI3DL2Reverb *This, LONG lQuality);
  HRESULT (__stdcall *GetQuality)(IDirectSoundFXI3DL2Reverb *This, LONG *plQuality);
};

/* 6650 */
struct IDirectSoundFXI3DL2Reverb
{
  struct IDirectSoundFXI3DL2ReverbVtbl *lpVtbl;
};

/* 6653 */
struct _DSFXI3DL2Reverb
{
  LONG lRoom;
  LONG lRoomHF;
  FLOAT flRoomRolloffFactor;
  FLOAT flDecayTime;
  FLOAT flDecayHFRatio;
  LONG lReflections;
  FLOAT flReflectionsDelay;
  LONG lReverb;
  FLOAT flReverbDelay;
  FLOAT flDiffusion;
  FLOAT flDensity;
  FLOAT flHFReference;
};

/* 6655 */
#pragma pack(push, 8)
struct IDummyHICONIncluderVtbl
{
  HRESULT (__stdcall *QueryInterface)(IDummyHICONIncluder *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IDummyHICONIncluder *This);
  ULONG (__stdcall *Release)(IDummyHICONIncluder *This);
  HRESULT (__stdcall *Dummy)(IDummyHICONIncluder *This, HICON h1, HDC h2);
};
#pragma pack(pop)

/* 6656 */
#pragma pack(push, 8)
struct IDummyHICONIncluder
{
  struct IDummyHICONIncluderVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6657 */
#pragma pack(push, 8)
struct IDirectMusicInstrumentVtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirectMusicInstrument *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IDirectMusicInstrument *This);
  ULONG (__stdcall *Release)(IDirectMusicInstrument *This);
  HRESULT (__stdcall *GetPatch)(IDirectMusicInstrument *This, DWORD *pdwPatch);
  HRESULT (__stdcall *SetPatch)(IDirectMusicInstrument *This, DWORD dwPatch);
};
#pragma pack(pop)

/* 6661 */
typedef struct _DSFXWavesReverb DSFXWavesReverb;

/* 6660 */
typedef const DSFXWavesReverb *LPCDSFXWavesReverb;

/* 6663 */
typedef struct _DSFXWavesReverb *LPDSFXWavesReverb;

/* 6658 */
struct IDirectSoundFXWavesReverbVtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirectSoundFXWavesReverb *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IDirectSoundFXWavesReverb *This);
  ULONG (__stdcall *Release)(IDirectSoundFXWavesReverb *This);
  HRESULT (__stdcall *SetAllParameters)(IDirectSoundFXWavesReverb *This, LPCDSFXWavesReverb pcDsFxWavesReverb);
  HRESULT (__stdcall *GetAllParameters)(IDirectSoundFXWavesReverb *This, LPDSFXWavesReverb pDsFxWavesReverb);
};

/* 6659 */
struct IDirectSoundFXWavesReverb
{
  struct IDirectSoundFXWavesReverbVtbl *lpVtbl;
};

/* 6662 */
struct _DSFXWavesReverb
{
  FLOAT fInGain;
  FLOAT fReverbMix;
  FLOAT fReverbTime;
  FLOAT fHighFreqRTRatio;
};

/* 6666 */
typedef struct tagINTERFACEINFO *LPINTERFACEINFO;

/* 6664 */
#pragma pack(push, 8)
struct IMessageFilterVtbl
{
  HRESULT (__stdcall *QueryInterface)(IMessageFilter *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IMessageFilter *This);
  ULONG (__stdcall *Release)(IMessageFilter *This);
  DWORD (__stdcall *HandleInComingCall)(IMessageFilter *This, DWORD dwCallType, HTASK htaskCaller, DWORD dwTickCount, LPINTERFACEINFO lpInterfaceInfo);
  DWORD (__stdcall *RetryRejectedCall)(IMessageFilter *This, HTASK htaskCallee, DWORD dwTickCount, DWORD dwRejectType);
  DWORD (__stdcall *MessagePending)(IMessageFilter *This, HTASK htaskCallee, DWORD dwTickCount, DWORD dwPendingType);
};
#pragma pack(pop)

/* 6665 */
#pragma pack(push, 8)
struct IMessageFilter
{
  struct IMessageFilterVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6667 */
#pragma pack(push, 8)
struct tagINTERFACEINFO
{
  IUnknown *pUnk;
  IID iid;
  WORD wMethod;
};
#pragma pack(pop)

/* 6668 */
#pragma pack(push, 8)
struct ISynchronizeEventVtbl
{
  HRESULT (__stdcall *QueryInterface)(ISynchronizeEvent *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(ISynchronizeEvent *This);
  ULONG (__stdcall *Release)(ISynchronizeEvent *This);
  HRESULT (__stdcall *GetHandle)(ISynchronizeEvent *This, HANDLE *ph);
  HRESULT (__stdcall *SetEventHandle)(ISynchronizeEvent *This, HANDLE *ph);
};
#pragma pack(pop)

/* 6669 */
#pragma pack(push, 8)
struct ISynchronizeEvent
{
  struct ISynchronizeEventVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6670 */
#pragma pack(push, 8)
struct ISynchronizeVtbl
{
  HRESULT (__stdcall *QueryInterface)(ISynchronize *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(ISynchronize *This);
  ULONG (__stdcall *Release)(ISynchronize *This);
  HRESULT (__stdcall *Wait)(ISynchronize *This, DWORD dwFlags, DWORD dwMilliseconds);
  HRESULT (__stdcall *Signal)(ISynchronize *This);
  HRESULT (__stdcall *Reset)(ISynchronize *This);
};
#pragma pack(pop)

/* 6671 */
#pragma pack(push, 8)
struct ISynchronize
{
  struct ISynchronizeVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6672 */
#pragma pack(push, 8)
struct IChannelHookVtbl
{
  HRESULT (__stdcall *QueryInterface)(IChannelHook *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IChannelHook *This);
  ULONG (__stdcall *Release)(IChannelHook *This);
  void (__stdcall *ClientGetSize)(IChannelHook *This, const GUID *const uExtent, const IID *const riid, ULONG *pDataSize);
  void (__stdcall *ClientFillBuffer)(IChannelHook *This, const GUID *const uExtent, const IID *const riid, ULONG *pDataSize, void *pDataBuffer);
  void (__stdcall *ClientNotify)(IChannelHook *This, const GUID *const uExtent, const IID *const riid, ULONG cbDataSize, void *pDataBuffer, DWORD lDataRep, HRESULT hrFault);
  void (__stdcall *ServerNotify)(IChannelHook *This, const GUID *const uExtent, const IID *const riid, ULONG cbDataSize, void *pDataBuffer, DWORD lDataRep);
  void (__stdcall *ServerGetSize)(IChannelHook *This, const GUID *const uExtent, const IID *const riid, HRESULT hrFault, ULONG *pDataSize);
  void (__stdcall *ServerFillBuffer)(IChannelHook *This, const GUID *const uExtent, const IID *const riid, ULONG *pDataSize, void *pDataBuffer, HRESULT hrFault);
};
#pragma pack(pop)

/* 6673 */
#pragma pack(push, 8)
struct IChannelHook
{
  struct IChannelHookVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6674 */
#pragma pack(push, 8)
struct IUrlMonVtbl
{
  HRESULT (__stdcall *QueryInterface)(IUrlMon *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IUrlMon *This);
  ULONG (__stdcall *Release)(IUrlMon *This);
  HRESULT (__stdcall *AsyncGetClassBits)(IUrlMon *This, const IID *const rclsid, LPCWSTR pszTYPE, LPCWSTR pszExt, DWORD dwFileVersionMS, DWORD dwFileVersionLS, LPCWSTR pszCodeBase, IBindCtx *pbc, DWORD dwClassContext, const IID *const riid, DWORD flags);
};
#pragma pack(pop)

/* 6675 */
#pragma pack(push, 8)
struct IUrlMon
{
  struct IUrlMonVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6678 */
typedef IBindCtx *LPBINDCTX;

/* 6676 */
#pragma pack(push, 8)
struct IRunnableObjectVtbl
{
  HRESULT (__stdcall *QueryInterface)(IRunnableObject *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IRunnableObject *This);
  ULONG (__stdcall *Release)(IRunnableObject *This);
  HRESULT (__stdcall *GetRunningClass)(IRunnableObject *This, LPCLSID lpClsid);
  HRESULT (__stdcall *Run)(IRunnableObject *This, LPBINDCTX pbc);
  BOOL (__stdcall *IsRunning)(IRunnableObject *This);
  HRESULT (__stdcall *LockRunning)(IRunnableObject *This, BOOL fLock, BOOL fLastUnlockCloses);
  HRESULT (__stdcall *SetContainedObject)(IRunnableObject *This, BOOL fContained);
};
#pragma pack(pop)

/* 6677 */
#pragma pack(push, 8)
struct IRunnableObject
{
  struct IRunnableObjectVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6679 */
#pragma pack(push, 8)
struct IPersistVtbl
{
  HRESULT (__stdcall *QueryInterface)(IPersist *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IPersist *This);
  ULONG (__stdcall *Release)(IPersist *This);
  HRESULT (__stdcall *GetClassID)(IPersist *This, CLSID *pClassID);
};
#pragma pack(pop)

/* 6680 */
#pragma pack(push, 8)
struct IPipeDoubleVtbl
{
  HRESULT (__stdcall *QueryInterface)(IPipeDouble *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IPipeDouble *This);
  ULONG (__stdcall *Release)(IPipeDouble *This);
  HRESULT (__stdcall *Pull)(IPipeDouble *This, DOUBLE *buf, ULONG cRequest, ULONG *pcReturned);
  HRESULT (__stdcall *Push)(IPipeDouble *This, DOUBLE *buf, ULONG cSent);
};
#pragma pack(pop)

/* 6681 */
#pragma pack(push, 8)
struct IPipeDouble
{
  struct IPipeDoubleVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6682 */
#pragma pack(push, 8)
struct AsyncIPipeByteVtbl
{
  HRESULT (__stdcall *QueryInterface)(AsyncIPipeByte *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(AsyncIPipeByte *This);
  ULONG (__stdcall *Release)(AsyncIPipeByte *This);
  HRESULT (__stdcall *Begin_Pull)(AsyncIPipeByte *This, ULONG cRequest);
  HRESULT (__stdcall *Finish_Pull)(AsyncIPipeByte *This, BYTE *buf, ULONG *pcReturned);
  HRESULT (__stdcall *Begin_Push)(AsyncIPipeByte *This, BYTE *buf, ULONG cSent);
  HRESULT (__stdcall *Finish_Push)(AsyncIPipeByte *This);
};
#pragma pack(pop)

/* 6683 */
#pragma pack(push, 8)
struct AsyncIPipeByte
{
  struct AsyncIPipeByteVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6687 */
typedef struct _DSBUFFERDESC DSBUFFERDESC;

/* 6686 */
typedef const DSBUFFERDESC *LPCDSBUFFERDESC;

/* 6688 */
typedef struct IDirectSoundBuffer *LPDIRECTSOUNDBUFFER;

/* 6689 */
typedef struct _DSCAPS *LPDSCAPS;

/* 6684 */
struct IDirectSound8Vtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirectSound8 *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IDirectSound8 *This);
  ULONG (__stdcall *Release)(IDirectSound8 *This);
  HRESULT (__stdcall *CreateSoundBuffer)(IDirectSound8 *This, LPCDSBUFFERDESC pcDSBufferDesc, LPDIRECTSOUNDBUFFER *ppDSBuffer, LPUNKNOWN pUnkOuter);
  HRESULT (__stdcall *GetCaps)(IDirectSound8 *This, LPDSCAPS pDSCaps);
  HRESULT (__stdcall *DuplicateSoundBuffer)(IDirectSound8 *This, LPDIRECTSOUNDBUFFER pDSBufferOriginal, LPDIRECTSOUNDBUFFER *ppDSBufferDuplicate);
  HRESULT (__stdcall *SetCooperativeLevel)(IDirectSound8 *This, HWND hwnd, DWORD dwLevel);
  HRESULT (__stdcall *Compact)(IDirectSound8 *This);
  HRESULT (__stdcall *GetSpeakerConfig)(IDirectSound8 *This, LPDWORD pdwSpeakerConfig);
  HRESULT (__stdcall *SetSpeakerConfig)(IDirectSound8 *This, DWORD dwSpeakerConfig);
  HRESULT (__stdcall *Initialize)(IDirectSound8 *This, LPCGUID pcGuidDevice);
  HRESULT (__stdcall *VerifyCertification)(IDirectSound8 *This, LPDWORD pdwCertified);
};

/* 6685 */
struct IDirectSound8
{
  struct IDirectSound8Vtbl *lpVtbl;
};

/* 6690 */
struct IDirectSoundVtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirectSound *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IDirectSound *This);
  ULONG (__stdcall *Release)(IDirectSound *This);
  HRESULT (__stdcall *CreateSoundBuffer)(IDirectSound *This, LPCDSBUFFERDESC pcDSBufferDesc, LPDIRECTSOUNDBUFFER *ppDSBuffer, LPUNKNOWN pUnkOuter);
  HRESULT (__stdcall *GetCaps)(IDirectSound *This, LPDSCAPS pDSCaps);
  HRESULT (__stdcall *DuplicateSoundBuffer)(IDirectSound *This, LPDIRECTSOUNDBUFFER pDSBufferOriginal, LPDIRECTSOUNDBUFFER *ppDSBufferDuplicate);
  HRESULT (__stdcall *SetCooperativeLevel)(IDirectSound *This, HWND hwnd, DWORD dwLevel);
  HRESULT (__stdcall *Compact)(IDirectSound *This);
  HRESULT (__stdcall *GetSpeakerConfig)(IDirectSound *This, LPDWORD pdwSpeakerConfig);
  HRESULT (__stdcall *SetSpeakerConfig)(IDirectSound *This, DWORD dwSpeakerConfig);
  HRESULT (__stdcall *Initialize)(IDirectSound *This, LPCGUID pcGuidDevice);
};

/* 6691 */
#pragma pack(push, 8)
struct IPipeLongVtbl
{
  HRESULT (__stdcall *QueryInterface)(IPipeLong *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IPipeLong *This);
  ULONG (__stdcall *Release)(IPipeLong *This);
  HRESULT (__stdcall *Pull)(IPipeLong *This, LONG *buf, ULONG cRequest, ULONG *pcReturned);
  HRESULT (__stdcall *Push)(IPipeLong *This, LONG *buf, ULONG cSent);
};
#pragma pack(pop)

/* 6692 */
#pragma pack(push, 8)
struct IPipeLong
{
  struct IPipeLongVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6695 */
typedef struct _DMUS_PORTCAPS DMUS_PORTCAPS;

/* 6694 */
typedef DMUS_PORTCAPS *LPDMUS_PORTCAPS;

/* 6696 */
typedef struct _DMUS_BUFFERDESC *LPDMUS_BUFFERDESC;

/* 6697 */
typedef IDirectMusicBuffer *LPDIRECTMUSICBUFFER;

/* 6700 */
typedef struct _DMUS_PORTPARAMS8 DMUS_PORTPARAMS8;

/* 6699 */
typedef DMUS_PORTPARAMS8 DMUS_PORTPARAMS;

/* 6698 */
typedef DMUS_PORTPARAMS *LPDMUS_PORTPARAMS;

/* 6701 */
typedef IDirectMusicPort *LPDIRECTMUSICPORT;

/* 6704 */
typedef struct _DMUS_CLOCKINFO8 DMUS_CLOCKINFO8;

/* 6703 */
typedef DMUS_CLOCKINFO8 DMUS_CLOCKINFO;

/* 6702 */
typedef DMUS_CLOCKINFO *LPDMUS_CLOCKINFO;

/* 6705 */
typedef struct IDirectSound *LPDIRECTSOUND;

/* 6693 */
#pragma pack(push, 8)
struct IDirectMusicVtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirectMusic *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IDirectMusic *This);
  ULONG (__stdcall *Release)(IDirectMusic *This);
  HRESULT (__stdcall *EnumPort)(IDirectMusic *This, DWORD dwIndex, LPDMUS_PORTCAPS pPortCaps);
  HRESULT (__stdcall *CreateMusicBuffer)(IDirectMusic *This, LPDMUS_BUFFERDESC pBufferDesc, LPDIRECTMUSICBUFFER *ppBuffer, LPUNKNOWN pUnkOuter);
  HRESULT (__stdcall *CreatePort)(IDirectMusic *This, const IID *const rclsidPort, LPDMUS_PORTPARAMS pPortParams, LPDIRECTMUSICPORT *ppPort, LPUNKNOWN pUnkOuter);
  HRESULT (__stdcall *EnumMasterClock)(IDirectMusic *This, DWORD dwIndex, LPDMUS_CLOCKINFO lpClockInfo);
  HRESULT (__stdcall *GetMasterClock)(IDirectMusic *This, LPGUID pguidClock, IReferenceClock **ppReferenceClock);
  HRESULT (__stdcall *SetMasterClock)(IDirectMusic *This, const GUID *const rguidClock);
  HRESULT (__stdcall *Activate)(IDirectMusic *This, BOOL fEnable);
  HRESULT (__stdcall *GetDefaultPort)(IDirectMusic *This, LPGUID pguidPort);
  HRESULT (__stdcall *SetDirectSound)(IDirectMusic *This, LPDIRECTSOUND pDirectSound, HWND hWnd);
};
#pragma pack(pop)

/* 6706 */
#pragma pack(push, 8)
struct IDirectMusic8Vtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirectMusic8 *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IDirectMusic8 *This);
  ULONG (__stdcall *Release)(IDirectMusic8 *This);
  HRESULT (__stdcall *EnumPort)(IDirectMusic8 *This, DWORD dwIndex, LPDMUS_PORTCAPS pPortCaps);
  HRESULT (__stdcall *CreateMusicBuffer)(IDirectMusic8 *This, LPDMUS_BUFFERDESC pBufferDesc, LPDIRECTMUSICBUFFER *ppBuffer, LPUNKNOWN pUnkOuter);
  HRESULT (__stdcall *CreatePort)(IDirectMusic8 *This, const IID *const rclsidPort, LPDMUS_PORTPARAMS pPortParams, LPDIRECTMUSICPORT *ppPort, LPUNKNOWN pUnkOuter);
  HRESULT (__stdcall *EnumMasterClock)(IDirectMusic8 *This, DWORD dwIndex, LPDMUS_CLOCKINFO lpClockInfo);
  HRESULT (__stdcall *GetMasterClock)(IDirectMusic8 *This, LPGUID pguidClock, IReferenceClock **ppReferenceClock);
  HRESULT (__stdcall *SetMasterClock)(IDirectMusic8 *This, const GUID *const rguidClock);
  HRESULT (__stdcall *Activate)(IDirectMusic8 *This, BOOL fEnable);
  HRESULT (__stdcall *GetDefaultPort)(IDirectMusic8 *This, LPGUID pguidPort);
  HRESULT (__stdcall *SetDirectSound)(IDirectMusic8 *This, LPDIRECTSOUND pDirectSound, HWND hWnd);
  HRESULT (__stdcall *SetExternalMasterClock)(IDirectMusic8 *This, IReferenceClock *pClock);
};
#pragma pack(pop)

/* 6707 */
#pragma pack(push, 8)
struct IDirectMusic8
{
  struct IDirectMusic8Vtbl *lpVtbl;
};
#pragma pack(pop)

/* 6708 */
#pragma pack(push, 1)
struct IPrintDialogCallbackVtbl
{
  HRESULT (__stdcall *QueryInterface)(IPrintDialogCallback *This, const IID *const riid, void **ppvObj);
  ULONG (__stdcall *AddRef)(IPrintDialogCallback *This);
  ULONG (__stdcall *Release)(IPrintDialogCallback *This);
  HRESULT (__stdcall *InitDone)(IPrintDialogCallback *This);
  HRESULT (__stdcall *SelectionChange)(IPrintDialogCallback *This);
  HRESULT (__stdcall *HandleMessage)(IPrintDialogCallback *This, HWND hDlg, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT *pResult);
};
#pragma pack(pop)

/* 6709 */
#pragma pack(push, 1)
struct IPrintDialogCallback
{
  struct IPrintDialogCallbackVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6710 */
#pragma pack(push, 8)
struct ISequentialStreamVtbl
{
  HRESULT (__stdcall *QueryInterface)(ISequentialStream *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(ISequentialStream *This);
  ULONG (__stdcall *Release)(ISequentialStream *This);
  HRESULT (__stdcall *Read)(ISequentialStream *This, void *pv, ULONG cb, ULONG *pcbRead);
  HRESULT (__stdcall *Write)(ISequentialStream *This, const void *pv, ULONG cb, ULONG *pcbWritten);
};
#pragma pack(pop)

/* 6714 */
typedef struct _DSFXFlanger DSFXFlanger;

/* 6713 */
typedef const DSFXFlanger *LPCDSFXFlanger;

/* 6716 */
typedef struct _DSFXFlanger *LPDSFXFlanger;

/* 6711 */
struct IDirectSoundFXFlangerVtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirectSoundFXFlanger *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IDirectSoundFXFlanger *This);
  ULONG (__stdcall *Release)(IDirectSoundFXFlanger *This);
  HRESULT (__stdcall *SetAllParameters)(IDirectSoundFXFlanger *This, LPCDSFXFlanger pcDsFxFlanger);
  HRESULT (__stdcall *GetAllParameters)(IDirectSoundFXFlanger *This, LPDSFXFlanger pDsFxFlanger);
};

/* 6712 */
struct IDirectSoundFXFlanger
{
  struct IDirectSoundFXFlangerVtbl *lpVtbl;
};

/* 6715 */
struct _DSFXFlanger
{
  FLOAT fWetDryMix;
  FLOAT fDepth;
  FLOAT fFeedback;
  FLOAT fFrequency;
  LONG lWaveform;
  FLOAT fDelay;
  LONG lPhase;
};

/* 6717 */
#pragma pack(push, 8)
struct IPSFactoryBufferVtbl
{
  HRESULT (__stdcall *QueryInterface)(IPSFactoryBuffer *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IPSFactoryBuffer *This);
  ULONG (__stdcall *Release)(IPSFactoryBuffer *This);
  HRESULT (__stdcall *CreateProxy)(IPSFactoryBuffer *This, IUnknown *pUnkOuter, const IID *const riid, IRpcProxyBuffer **ppProxy, void **ppv);
  HRESULT (__stdcall *CreateStub)(IPSFactoryBuffer *This, const IID *const riid, IUnknown *pUnkServer, IRpcStubBuffer **ppStub);
};
#pragma pack(pop)

/* 6718 */
#pragma pack(push, 8)
struct IPSFactoryBuffer
{
  struct IPSFactoryBufferVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6719 */
#pragma pack(push, 8)
struct IRpcProxyBuffer
{
  struct IRpcProxyBufferVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6720 */
#pragma pack(push, 8)
struct IRpcProxyBufferVtbl
{
  HRESULT (__stdcall *QueryInterface)(IRpcProxyBuffer *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IRpcProxyBuffer *This);
  ULONG (__stdcall *Release)(IRpcProxyBuffer *This);
  HRESULT (__stdcall *Connect)(IRpcProxyBuffer *This, IRpcChannelBuffer *pRpcChannelBuffer);
  void (__stdcall *Disconnect)(IRpcProxyBuffer *This);
};
#pragma pack(pop)

/* 6721 */
#pragma pack(push, 8)
struct IRpcChannelBuffer2Vtbl
{
  HRESULT (__stdcall *QueryInterface)(IRpcChannelBuffer2 *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IRpcChannelBuffer2 *This);
  ULONG (__stdcall *Release)(IRpcChannelBuffer2 *This);
  HRESULT (__stdcall *GetBuffer)(IRpcChannelBuffer2 *This, RPCOLEMESSAGE *pMessage, const IID *const riid);
  HRESULT (__stdcall *SendReceive)(IRpcChannelBuffer2 *This, RPCOLEMESSAGE *pMessage, ULONG *pStatus);
  HRESULT (__stdcall *FreeBuffer)(IRpcChannelBuffer2 *This, RPCOLEMESSAGE *pMessage);
  HRESULT (__stdcall *GetDestCtx)(IRpcChannelBuffer2 *This, DWORD *pdwDestContext, void **ppvDestContext);
  HRESULT (__stdcall *IsConnected)(IRpcChannelBuffer2 *This);
  HRESULT (__stdcall *GetProtocolVersion)(IRpcChannelBuffer2 *This, DWORD *pdwVersion);
};
#pragma pack(pop)

/* 6722 */
#pragma pack(push, 8)
struct IRpcChannelBuffer2
{
  struct IRpcChannelBuffer2Vtbl *lpVtbl;
};
#pragma pack(pop)

/* 6723 */
#pragma pack(push, 8)
struct IStdMarshalInfoVtbl
{
  HRESULT (__stdcall *QueryInterface)(IStdMarshalInfo *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IStdMarshalInfo *This);
  ULONG (__stdcall *Release)(IStdMarshalInfo *This);
  HRESULT (__stdcall *GetClassForHandler)(IStdMarshalInfo *This, DWORD dwDestContext, void *pvDestContext, CLSID *pClsid);
};
#pragma pack(pop)

/* 6724 */
#pragma pack(push, 8)
struct IStdMarshalInfo
{
  struct IStdMarshalInfoVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6725 */
#pragma pack(push, 8)
struct IAdviseSink2Vtbl
{
  HRESULT (__stdcall *QueryInterface)(IAdviseSink2 *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IAdviseSink2 *This);
  ULONG (__stdcall *Release)(IAdviseSink2 *This);
  void (__stdcall *OnDataChange)(IAdviseSink2 *This, FORMATETC *pFormatetc, STGMEDIUM *pStgmed);
  void (__stdcall *OnViewChange)(IAdviseSink2 *This, DWORD dwAspect, LONG lindex);
  void (__stdcall *OnRename)(IAdviseSink2 *This, IMoniker *pmk);
  void (__stdcall *OnSave)(IAdviseSink2 *This);
  void (__stdcall *OnClose)(IAdviseSink2 *This);
  void (__stdcall *OnLinkSrcChange)(IAdviseSink2 *This, IMoniker *pmk);
};
#pragma pack(pop)

/* 6726 */
#pragma pack(push, 8)
struct IAdviseSink2
{
  struct IAdviseSink2Vtbl *lpVtbl;
};
#pragma pack(pop)

/* 6727 */
#pragma pack(push, 8)
struct IExternalConnectionVtbl
{
  HRESULT (__stdcall *QueryInterface)(IExternalConnection *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IExternalConnection *This);
  ULONG (__stdcall *Release)(IExternalConnection *This);
  DWORD (__stdcall *AddConnection)(IExternalConnection *This, DWORD extconn, DWORD reserved);
  DWORD (__stdcall *ReleaseConnection)(IExternalConnection *This, DWORD extconn, DWORD reserved, BOOL fLastReleaseCloses);
};
#pragma pack(pop)

/* 6728 */
#pragma pack(push, 8)
struct IExternalConnection
{
  struct IExternalConnectionVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6732 */
typedef struct _DSFXParamEq DSFXParamEq;

/* 6731 */
typedef const DSFXParamEq *LPCDSFXParamEq;

/* 6734 */
typedef struct _DSFXParamEq *LPDSFXParamEq;

/* 6729 */
struct IDirectSoundFXParamEqVtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirectSoundFXParamEq *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IDirectSoundFXParamEq *This);
  ULONG (__stdcall *Release)(IDirectSoundFXParamEq *This);
  HRESULT (__stdcall *SetAllParameters)(IDirectSoundFXParamEq *This, LPCDSFXParamEq pcDsFxParamEq);
  HRESULT (__stdcall *GetAllParameters)(IDirectSoundFXParamEq *This, LPDSFXParamEq pDsFxParamEq);
};

/* 6730 */
struct IDirectSoundFXParamEq
{
  struct IDirectSoundFXParamEqVtbl *lpVtbl;
};

/* 6733 */
struct _DSFXParamEq
{
  FLOAT fCenter;
  FLOAT fBandwidth;
  FLOAT fGain;
};

/* 6736 */
typedef struct _DMUS_NOTERANGE DMUS_NOTERANGE;

/* 6737 */
typedef struct _DMUS_SYNTHSTATS *LPDMUS_SYNTHSTATS;

/* 6738 */
typedef struct _OVERLAPPED *LPOVERLAPPED;

/* 6735 */
#pragma pack(push, 8)
struct IDirectMusicPortVtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirectMusicPort *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IDirectMusicPort *This);
  ULONG (__stdcall *Release)(IDirectMusicPort *This);
  HRESULT (__stdcall *PlayBuffer)(IDirectMusicPort *This, LPDIRECTMUSICBUFFER pBuffer);
  HRESULT (__stdcall *SetReadNotificationHandle)(IDirectMusicPort *This, HANDLE hEvent);
  HRESULT (__stdcall *Read)(IDirectMusicPort *This, LPDIRECTMUSICBUFFER pBuffer);
  HRESULT (__stdcall *DownloadInstrument)(IDirectMusicPort *This, IDirectMusicInstrument *pInstrument, IDirectMusicDownloadedInstrument **ppDownloadedInstrument, DMUS_NOTERANGE *pNoteRanges, DWORD dwNumNoteRanges);
  HRESULT (__stdcall *UnloadInstrument)(IDirectMusicPort *This, IDirectMusicDownloadedInstrument *pDownloadedInstrument);
  HRESULT (__stdcall *GetLatencyClock)(IDirectMusicPort *This, IReferenceClock **ppClock);
  HRESULT (__stdcall *GetRunningStats)(IDirectMusicPort *This, LPDMUS_SYNTHSTATS pStats);
  HRESULT (__stdcall *Compact)(IDirectMusicPort *This);
  HRESULT (__stdcall *GetCaps)(IDirectMusicPort *This, LPDMUS_PORTCAPS pPortCaps);
  HRESULT (__stdcall *DeviceIoControl)(IDirectMusicPort *This, DWORD dwIoControlCode, LPVOID lpInBuffer, DWORD nInBufferSize, LPVOID lpOutBuffer, DWORD nOutBufferSize, LPDWORD lpBytesReturned, LPOVERLAPPED lpOverlapped);
  HRESULT (__stdcall *SetNumChannelGroups)(IDirectMusicPort *This, DWORD dwChannelGroups);
  HRESULT (__stdcall *GetNumChannelGroups)(IDirectMusicPort *This, LPDWORD pdwChannelGroups);
  HRESULT (__stdcall *Activate)(IDirectMusicPort *This, BOOL fActive);
  HRESULT (__stdcall *SetChannelPriority)(IDirectMusicPort *This, DWORD dwChannelGroup, DWORD dwChannel, DWORD dwPriority);
  HRESULT (__stdcall *GetChannelPriority)(IDirectMusicPort *This, DWORD dwChannelGroup, DWORD dwChannel, LPDWORD pdwPriority);
  HRESULT (__stdcall *SetDirectSound)(IDirectMusicPort *This, LPDIRECTSOUND pDirectSound, LPDIRECTSOUNDBUFFER pDirectSoundBuffer);
  HRESULT (__stdcall *GetFormat)(IDirectMusicPort *This, LPWAVEFORMATEX pWaveFormatEx, LPDWORD pdwWaveFormatExSize, LPDWORD pdwBufferSize);
};
#pragma pack(pop)

/* 6739 */
#pragma pack(push, 8)
struct ITimeAndNoticeControlVtbl
{
  HRESULT (__stdcall *QueryInterface)(ITimeAndNoticeControl *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(ITimeAndNoticeControl *This);
  ULONG (__stdcall *Release)(ITimeAndNoticeControl *This);
  HRESULT (__stdcall *SuppressChanges)(ITimeAndNoticeControl *This, DWORD res1, DWORD res2);
};
#pragma pack(pop)

/* 6740 */
#pragma pack(push, 8)
struct ITimeAndNoticeControl
{
  struct ITimeAndNoticeControlVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6741 */
#pragma pack(push, 8)
struct IRpcChannelBuffer3Vtbl
{
  HRESULT (__stdcall *QueryInterface)(IRpcChannelBuffer3 *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IRpcChannelBuffer3 *This);
  ULONG (__stdcall *Release)(IRpcChannelBuffer3 *This);
  HRESULT (__stdcall *GetBuffer)(IRpcChannelBuffer3 *This, RPCOLEMESSAGE *pMessage, const IID *const riid);
  HRESULT (__stdcall *SendReceive)(IRpcChannelBuffer3 *This, RPCOLEMESSAGE *pMessage, ULONG *pStatus);
  HRESULT (__stdcall *FreeBuffer)(IRpcChannelBuffer3 *This, RPCOLEMESSAGE *pMessage);
  HRESULT (__stdcall *GetDestCtx)(IRpcChannelBuffer3 *This, DWORD *pdwDestContext, void **ppvDestContext);
  HRESULT (__stdcall *IsConnected)(IRpcChannelBuffer3 *This);
  HRESULT (__stdcall *GetProtocolVersion)(IRpcChannelBuffer3 *This, DWORD *pdwVersion);
  HRESULT (__stdcall *Send)(IRpcChannelBuffer3 *This, RPCOLEMESSAGE *pMsg, ULONG *pulStatus);
  HRESULT (__stdcall *Receive)(IRpcChannelBuffer3 *This, RPCOLEMESSAGE *pMsg, ULONG ulSize, ULONG *pulStatus);
  HRESULT (__stdcall *Cancel)(IRpcChannelBuffer3 *This, RPCOLEMESSAGE *pMsg);
  HRESULT (__stdcall *GetCallContext)(IRpcChannelBuffer3 *This, RPCOLEMESSAGE *pMsg, const IID *const riid, void **pInterface);
  HRESULT (__stdcall *GetDestCtxEx)(IRpcChannelBuffer3 *This, RPCOLEMESSAGE *pMsg, DWORD *pdwDestContext, void **ppvDestContext);
  HRESULT (__stdcall *GetState)(IRpcChannelBuffer3 *This, RPCOLEMESSAGE *pMsg, DWORD *pState);
  HRESULT (__stdcall *RegisterAsync)(IRpcChannelBuffer3 *This, RPCOLEMESSAGE *pMsg, IAsyncManager *pAsyncMgr);
};
#pragma pack(pop)

/* 6742 */
#pragma pack(push, 8)
struct IRpcChannelBuffer3
{
  struct IRpcChannelBuffer3Vtbl *lpVtbl;
};
#pragma pack(pop)

/* 6743 */
#pragma pack(push, 8)
struct IAsyncManager
{
  struct IAsyncManagerVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6744 */
#pragma pack(push, 8)
struct IAsyncManagerVtbl
{
  HRESULT (__stdcall *QueryInterface)(IAsyncManager *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IAsyncManager *This);
  ULONG (__stdcall *Release)(IAsyncManager *This);
  HRESULT (__stdcall *CompleteCall)(IAsyncManager *This, HRESULT Result);
  HRESULT (__stdcall *GetCallContext)(IAsyncManager *This, const IID *const riid, void **pInterface);
  HRESULT (__stdcall *GetState)(IAsyncManager *This, ULONG *pulStateFlags);
};
#pragma pack(pop)

/* 6747 */
typedef struct tagStorageLayout StorageLayout;

/* 6745 */
#pragma pack(push, 8)
struct ILayoutStorageVtbl
{
  HRESULT (__stdcall *QueryInterface)(ILayoutStorage *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(ILayoutStorage *This);
  ULONG (__stdcall *Release)(ILayoutStorage *This);
  HRESULT (__stdcall *LayoutScript)(ILayoutStorage *This, StorageLayout *pStorageLayout, DWORD nEntries, DWORD glfInterleavedFlag);
  HRESULT (__stdcall *BeginMonitor)(ILayoutStorage *This);
  HRESULT (__stdcall *EndMonitor)(ILayoutStorage *This);
  HRESULT (__stdcall *ReLayoutDocfile)(ILayoutStorage *This, OLECHAR *pwcsNewDfName);
  HRESULT (__stdcall *ReLayoutDocfileOnILockBytes)(ILayoutStorage *This, ILockBytes *pILockBytes);
};
#pragma pack(pop)

/* 6746 */
#pragma pack(push, 8)
struct ILayoutStorage
{
  struct ILayoutStorageVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6748 */
#pragma pack(push, 8)
struct tagStorageLayout
{
  DWORD LayoutType;
  OLECHAR *pwcsElementName;
  LARGE_INTEGER cOffset;
  LARGE_INTEGER cBytes;
};
#pragma pack(pop)

/* 6749 */
#pragma pack(push, 8)
struct AsyncIPipeDoubleVtbl
{
  HRESULT (__stdcall *QueryInterface)(AsyncIPipeDouble *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(AsyncIPipeDouble *This);
  ULONG (__stdcall *Release)(AsyncIPipeDouble *This);
  HRESULT (__stdcall *Begin_Pull)(AsyncIPipeDouble *This, ULONG cRequest);
  HRESULT (__stdcall *Finish_Pull)(AsyncIPipeDouble *This, DOUBLE *buf, ULONG *pcReturned);
  HRESULT (__stdcall *Begin_Push)(AsyncIPipeDouble *This, DOUBLE *buf, ULONG cSent);
  HRESULT (__stdcall *Finish_Push)(AsyncIPipeDouble *This);
};
#pragma pack(pop)

/* 6750 */
#pragma pack(push, 8)
struct AsyncIPipeDouble
{
  struct AsyncIPipeDoubleVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6751 */
#pragma pack(push, 8)
struct IDirectWriterLockVtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirectWriterLock *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IDirectWriterLock *This);
  ULONG (__stdcall *Release)(IDirectWriterLock *This);
  HRESULT (__stdcall *WaitForWriteAccess)(IDirectWriterLock *This, DWORD dwTimeout);
  HRESULT (__stdcall *ReleaseWriteAccess)(IDirectWriterLock *This);
  HRESULT (__stdcall *HaveWriteAccess)(IDirectWriterLock *This);
};
#pragma pack(pop)

/* 6752 */
#pragma pack(push, 8)
struct IDirectWriterLock
{
  struct IDirectWriterLockVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6755 */
typedef struct tagMULTI_QI MULTI_QI;

/* 6753 */
#pragma pack(push, 8)
struct IMultiQIVtbl
{
  HRESULT (__stdcall *QueryInterface)(IMultiQI *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IMultiQI *This);
  ULONG (__stdcall *Release)(IMultiQI *This);
  HRESULT (__stdcall *QueryMultipleInterfaces)(IMultiQI *This, ULONG cMQIs, MULTI_QI *pMQIs);
};
#pragma pack(pop)

/* 6754 */
#pragma pack(push, 8)
struct IMultiQI
{
  struct IMultiQIVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6756 */
#pragma pack(push, 8)
struct tagMULTI_QI
{
  const IID *pIID;
  IUnknown *pItf;
  HRESULT hr;
};
#pragma pack(pop)

/* 6760 */
typedef struct _DSFXEcho DSFXEcho;

/* 6759 */
typedef const DSFXEcho *LPCDSFXEcho;

/* 6762 */
typedef struct _DSFXEcho *LPDSFXEcho;

/* 6757 */
struct IDirectSoundFXEchoVtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirectSoundFXEcho *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IDirectSoundFXEcho *This);
  ULONG (__stdcall *Release)(IDirectSoundFXEcho *This);
  HRESULT (__stdcall *SetAllParameters)(IDirectSoundFXEcho *This, LPCDSFXEcho pcDsFxEcho);
  HRESULT (__stdcall *GetAllParameters)(IDirectSoundFXEcho *This, LPDSFXEcho pDsFxEcho);
};

/* 6758 */
struct IDirectSoundFXEcho
{
  struct IDirectSoundFXEchoVtbl *lpVtbl;
};

/* 6761 */
struct _DSFXEcho
{
  FLOAT fWetDryMix;
  FLOAT fFeedback;
  FLOAT fLeftDelay;
  FLOAT fRightDelay;
  LONG lPanDelay;
};

/* 6763 */
#pragma pack(push, 8)
struct IOplockStorageVtbl
{
  HRESULT (__stdcall *QueryInterface)(IOplockStorage *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IOplockStorage *This);
  ULONG (__stdcall *Release)(IOplockStorage *This);
  HRESULT (__stdcall *CreateStorageEx)(IOplockStorage *This, LPCWSTR pwcsName, DWORD grfMode, DWORD stgfmt, DWORD grfAttrs, const IID *const riid, void **ppstgOpen);
  HRESULT (__stdcall *OpenStorageEx)(IOplockStorage *This, LPCWSTR pwcsName, DWORD grfMode, DWORD stgfmt, DWORD grfAttrs, const IID *const riid, void **ppstgOpen);
};
#pragma pack(pop)

/* 6764 */
#pragma pack(push, 8)
struct IOplockStorage
{
  struct IOplockStorageVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6768 */
typedef struct IDirectSoundCaptureBuffer8 *LPDIRECTSOUNDCAPTUREBUFFER8;

/* 6767 */
typedef LPDIRECTSOUNDCAPTUREBUFFER8 *LPLPDIRECTSOUNDCAPTUREBUFFER8;

/* 6770 */
typedef struct IDirectSoundBuffer8 *LPDIRECTSOUNDBUFFER8;

/* 6769 */
typedef LPDIRECTSOUNDBUFFER8 *LPLPDIRECTSOUNDBUFFER8;

/* 6765 */
struct IDirectSoundFullDuplexVtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirectSoundFullDuplex *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IDirectSoundFullDuplex *This);
  ULONG (__stdcall *Release)(IDirectSoundFullDuplex *This);
  HRESULT (__stdcall *Initialize)(IDirectSoundFullDuplex *This, LPCGUID pCaptureGuid, LPCGUID pRenderGuid, LPCDSCBUFFERDESC lpDscBufferDesc, LPCDSBUFFERDESC lpDsBufferDesc, HWND hWnd, DWORD dwLevel, LPLPDIRECTSOUNDCAPTUREBUFFER8 lplpDirectSoundCaptureBuffer8, LPLPDIRECTSOUNDBUFFER8 lplpDirectSoundBuffer8);
};

/* 6766 */
struct IDirectSoundFullDuplex
{
  struct IDirectSoundFullDuplexVtbl *lpVtbl;
};

/* 6771 */
struct IDirectSoundBuffer8
{
  struct IDirectSoundBuffer8Vtbl *lpVtbl;
};

/* 6773 */
typedef struct _DSBCAPS *LPDSBCAPS;

/* 6775 */
typedef struct tWAVEFORMATEX WAVEFORMATEX;

/* 6774 */
typedef const WAVEFORMATEX *LPCWAVEFORMATEX;

/* 6776 */
typedef struct _DSEFFECTDESC *LPDSEFFECTDESC;

/* 6772 */
struct IDirectSoundBuffer8Vtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirectSoundBuffer8 *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IDirectSoundBuffer8 *This);
  ULONG (__stdcall *Release)(IDirectSoundBuffer8 *This);
  HRESULT (__stdcall *GetCaps)(IDirectSoundBuffer8 *This, LPDSBCAPS pDSBufferCaps);
  HRESULT (__stdcall *GetCurrentPosition)(IDirectSoundBuffer8 *This, LPDWORD pdwCurrentPlayCursor, LPDWORD pdwCurrentWriteCursor);
  HRESULT (__stdcall *GetFormat)(IDirectSoundBuffer8 *This, LPWAVEFORMATEX pwfxFormat, DWORD dwSizeAllocated, LPDWORD pdwSizeWritten);
  HRESULT (__stdcall *GetVolume)(IDirectSoundBuffer8 *This, LPLONG plVolume);
  HRESULT (__stdcall *GetPan)(IDirectSoundBuffer8 *This, LPLONG plPan);
  HRESULT (__stdcall *GetFrequency)(IDirectSoundBuffer8 *This, LPDWORD pdwFrequency);
  HRESULT (__stdcall *GetStatus)(IDirectSoundBuffer8 *This, LPDWORD pdwStatus);
  HRESULT (__stdcall *Initialize)(IDirectSoundBuffer8 *This, LPDIRECTSOUND pDirectSound, LPCDSBUFFERDESC pcDSBufferDesc);
  HRESULT (__stdcall *Lock)(IDirectSoundBuffer8 *This, DWORD dwOffset, DWORD dwBytes, LPVOID *ppvAudioPtr1, LPDWORD pdwAudioBytes1, LPVOID *ppvAudioPtr2, LPDWORD pdwAudioBytes2, DWORD dwFlags);
  HRESULT (__stdcall *Play)(IDirectSoundBuffer8 *This, DWORD dwReserved1, DWORD dwPriority, DWORD dwFlags);
  HRESULT (__stdcall *SetCurrentPosition)(IDirectSoundBuffer8 *This, DWORD dwNewPosition);
  HRESULT (__stdcall *SetFormat)(IDirectSoundBuffer8 *This, LPCWAVEFORMATEX pcfxFormat);
  HRESULT (__stdcall *SetVolume)(IDirectSoundBuffer8 *This, LONG lVolume);
  HRESULT (__stdcall *SetPan)(IDirectSoundBuffer8 *This, LONG lPan);
  HRESULT (__stdcall *SetFrequency)(IDirectSoundBuffer8 *This, DWORD dwFrequency);
  HRESULT (__stdcall *Stop)(IDirectSoundBuffer8 *This);
  HRESULT (__stdcall *Unlock)(IDirectSoundBuffer8 *This, LPVOID pvAudioPtr1, DWORD dwAudioBytes1, LPVOID pvAudioPtr2, DWORD dwAudioBytes2);
  HRESULT (__stdcall *Restore)(IDirectSoundBuffer8 *This);
  HRESULT (__stdcall *SetFX)(IDirectSoundBuffer8 *This, DWORD dwEffectsCount, LPDSEFFECTDESC pDSFXDesc, LPDWORD pdwResultCodes);
  HRESULT (__stdcall *AcquireResources)(IDirectSoundBuffer8 *This, DWORD dwFlags, DWORD dwEffectsCount, LPDWORD pdwResultCodes);
  HRESULT (__stdcall *GetObjectInPath)(IDirectSoundBuffer8 *This, const GUID *const rguidObject, DWORD dwIndex, const GUID *const rguidInterface, LPVOID *ppObject);
};

/* 6777 */
struct _DSEFFECTDESC
{
  DWORD dwSize;
  DWORD dwFlags;
  GUID guidDSFXClass;
  DWORD_PTR dwReserved1;
  DWORD_PTR dwReserved2;
};

/* 6778 */
#pragma pack(push, 8)
struct IDirectMusicCollectionVtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirectMusicCollection *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IDirectMusicCollection *This);
  ULONG (__stdcall *Release)(IDirectMusicCollection *This);
  HRESULT (__stdcall *GetInstrument)(IDirectMusicCollection *This, DWORD dwPatch, IDirectMusicInstrument **ppInstrument);
  HRESULT (__stdcall *EnumInstrument)(IDirectMusicCollection *This, DWORD dwIndex, DWORD *pdwPatch, LPWSTR pwszName, DWORD dwNameLen);
};
#pragma pack(pop)

/* 6779 */
#pragma pack(push, 8)
struct ISynchronizeMutexVtbl
{
  HRESULT (__stdcall *QueryInterface)(ISynchronizeMutex *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(ISynchronizeMutex *This);
  ULONG (__stdcall *Release)(ISynchronizeMutex *This);
  HRESULT (__stdcall *Wait)(ISynchronizeMutex *This, DWORD dwFlags, DWORD dwMilliseconds);
  HRESULT (__stdcall *Signal)(ISynchronizeMutex *This);
  HRESULT (__stdcall *Reset)(ISynchronizeMutex *This);
  HRESULT (__stdcall *ReleaseMutex)(ISynchronizeMutex *This);
};
#pragma pack(pop)

/* 6780 */
#pragma pack(push, 8)
struct ISynchronizeMutex
{
  struct ISynchronizeMutexVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6781 */
#pragma pack(push, 8)
struct IMallocVtbl
{
  HRESULT (__stdcall *QueryInterface)(IMalloc *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IMalloc *This);
  ULONG (__stdcall *Release)(IMalloc *This);
  void *(__stdcall *Alloc)(IMalloc *This, SIZE_T cb);
  void *(__stdcall *Realloc)(IMalloc *This, void *pv, SIZE_T cb);
  void (__stdcall *Free)(IMalloc *This, void *pv);
  SIZE_T (__stdcall *GetSize)(IMalloc *This, void *pv);
  int (__stdcall *DidAlloc)(IMalloc *This, void *pv);
  void (__stdcall *HeapMinimize)(IMalloc *This);
};
#pragma pack(pop)

/* 6782 */
#pragma pack(push, 8)
struct IMalloc
{
  struct IMallocVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6786 */
typedef struct _DSCFXNoiseSuppress DSCFXNoiseSuppress;

/* 6785 */
typedef const DSCFXNoiseSuppress *LPCDSCFXNoiseSuppress;

/* 6788 */
typedef struct _DSCFXNoiseSuppress *LPDSCFXNoiseSuppress;

/* 6783 */
struct IDirectSoundCaptureFXNoiseSuppressVtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirectSoundCaptureFXNoiseSuppress *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IDirectSoundCaptureFXNoiseSuppress *This);
  ULONG (__stdcall *Release)(IDirectSoundCaptureFXNoiseSuppress *This);
  HRESULT (__stdcall *SetAllParameters)(IDirectSoundCaptureFXNoiseSuppress *This, LPCDSCFXNoiseSuppress pcDscFxNoiseSuppress);
  HRESULT (__stdcall *GetAllParameters)(IDirectSoundCaptureFXNoiseSuppress *This, LPDSCFXNoiseSuppress pDscFxNoiseSuppress);
  HRESULT (__stdcall *Reset)(IDirectSoundCaptureFXNoiseSuppress *This);
};

/* 6784 */
struct IDirectSoundCaptureFXNoiseSuppress
{
  struct IDirectSoundCaptureFXNoiseSuppressVtbl *lpVtbl;
};

/* 6787 */
struct _DSCFXNoiseSuppress
{
  BOOL fEnable;
};

/* 6789 */
#pragma pack(push, 8)
struct IProcessInitControlVtbl
{
  HRESULT (__stdcall *QueryInterface)(IProcessInitControl *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IProcessInitControl *This);
  ULONG (__stdcall *Release)(IProcessInitControl *This);
  HRESULT (__stdcall *ResetInitializerTimeout)(IProcessInitControl *This, DWORD dwSecondsRemaining);
};
#pragma pack(pop)

/* 6790 */
#pragma pack(push, 8)
struct IProcessInitControl
{
  struct IProcessInitControlVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6794 */
typedef struct _DSFXGargle DSFXGargle;

/* 6793 */
typedef const DSFXGargle *LPCDSFXGargle;

/* 6796 */
typedef struct _DSFXGargle *LPDSFXGargle;

/* 6791 */
struct IDirectSoundFXGargleVtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirectSoundFXGargle *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IDirectSoundFXGargle *This);
  ULONG (__stdcall *Release)(IDirectSoundFXGargle *This);
  HRESULT (__stdcall *SetAllParameters)(IDirectSoundFXGargle *This, LPCDSFXGargle pcDsFxGargle);
  HRESULT (__stdcall *GetAllParameters)(IDirectSoundFXGargle *This, LPDSFXGargle pDsFxGargle);
};

/* 6792 */
struct IDirectSoundFXGargle
{
  struct IDirectSoundFXGargleVtbl *lpVtbl;
};

/* 6795 */
struct _DSFXGargle
{
  DWORD dwRateHz;
  DWORD dwWaveShape;
};

/* 6797 */
struct IDirectSoundBufferVtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirectSoundBuffer *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IDirectSoundBuffer *This);
  ULONG (__stdcall *Release)(IDirectSoundBuffer *This);
  HRESULT (__stdcall *GetCaps)(IDirectSoundBuffer *This, LPDSBCAPS pDSBufferCaps);
  HRESULT (__stdcall *GetCurrentPosition)(IDirectSoundBuffer *This, LPDWORD pdwCurrentPlayCursor, LPDWORD pdwCurrentWriteCursor);
  HRESULT (__stdcall *GetFormat)(IDirectSoundBuffer *This, LPWAVEFORMATEX pwfxFormat, DWORD dwSizeAllocated, LPDWORD pdwSizeWritten);
  HRESULT (__stdcall *GetVolume)(IDirectSoundBuffer *This, LPLONG plVolume);
  HRESULT (__stdcall *GetPan)(IDirectSoundBuffer *This, LPLONG plPan);
  HRESULT (__stdcall *GetFrequency)(IDirectSoundBuffer *This, LPDWORD pdwFrequency);
  HRESULT (__stdcall *GetStatus)(IDirectSoundBuffer *This, LPDWORD pdwStatus);
  HRESULT (__stdcall *Initialize)(IDirectSoundBuffer *This, LPDIRECTSOUND pDirectSound, LPCDSBUFFERDESC pcDSBufferDesc);
  HRESULT (__stdcall *Lock)(IDirectSoundBuffer *This, DWORD dwOffset, DWORD dwBytes, LPVOID *ppvAudioPtr1, LPDWORD pdwAudioBytes1, LPVOID *ppvAudioPtr2, LPDWORD pdwAudioBytes2, DWORD dwFlags);
  HRESULT (__stdcall *Play)(IDirectSoundBuffer *This, DWORD dwReserved1, DWORD dwPriority, DWORD dwFlags);
  HRESULT (__stdcall *SetCurrentPosition)(IDirectSoundBuffer *This, DWORD dwNewPosition);
  HRESULT (__stdcall *SetFormat)(IDirectSoundBuffer *This, LPCWAVEFORMATEX pcfxFormat);
  HRESULT (__stdcall *SetVolume)(IDirectSoundBuffer *This, LONG lVolume);
  HRESULT (__stdcall *SetPan)(IDirectSoundBuffer *This, LONG lPan);
  HRESULT (__stdcall *SetFrequency)(IDirectSoundBuffer *This, DWORD dwFrequency);
  HRESULT (__stdcall *Stop)(IDirectSoundBuffer *This);
  HRESULT (__stdcall *Unlock)(IDirectSoundBuffer *This, LPVOID pvAudioPtr1, DWORD dwAudioBytes1, LPVOID pvAudioPtr2, DWORD dwAudioBytes2);
  HRESULT (__stdcall *Restore)(IDirectSoundBuffer *This);
};

/* 6798 */
#pragma pack(push, 8)
struct IMallocSpyVtbl
{
  HRESULT (__stdcall *QueryInterface)(IMallocSpy *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IMallocSpy *This);
  ULONG (__stdcall *Release)(IMallocSpy *This);
  SIZE_T (__stdcall *PreAlloc)(IMallocSpy *This, SIZE_T cbRequest);
  void *(__stdcall *PostAlloc)(IMallocSpy *This, void *pActual);
  void *(__stdcall *PreFree)(IMallocSpy *This, void *pRequest, BOOL fSpyed);
  void (__stdcall *PostFree)(IMallocSpy *This, BOOL fSpyed);
  SIZE_T (__stdcall *PreRealloc)(IMallocSpy *This, void *pRequest, SIZE_T cbRequest, void **ppNewRequest, BOOL fSpyed);
  void *(__stdcall *PostRealloc)(IMallocSpy *This, void *pActual, BOOL fSpyed);
  void *(__stdcall *PreGetSize)(IMallocSpy *This, void *pRequest, BOOL fSpyed);
  SIZE_T (__stdcall *PostGetSize)(IMallocSpy *This, SIZE_T cbActual, BOOL fSpyed);
  void *(__stdcall *PreDidAlloc)(IMallocSpy *This, void *pRequest, BOOL fSpyed);
  int (__stdcall *PostDidAlloc)(IMallocSpy *This, void *pRequest, BOOL fSpyed, int fActual);
  void (__stdcall *PreHeapMinimize)(IMallocSpy *This);
  void (__stdcall *PostHeapMinimize)(IMallocSpy *This);
};
#pragma pack(pop)

/* 6799 */
#pragma pack(push, 8)
struct IMallocSpy
{
  struct IMallocSpyVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6800 */
#pragma pack(push, 8)
struct IPipeByteVtbl
{
  HRESULT (__stdcall *QueryInterface)(IPipeByte *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IPipeByte *This);
  ULONG (__stdcall *Release)(IPipeByte *This);
  HRESULT (__stdcall *Pull)(IPipeByte *This, BYTE *buf, ULONG cRequest, ULONG *pcReturned);
  HRESULT (__stdcall *Push)(IPipeByte *This, BYTE *buf, ULONG cSent);
};
#pragma pack(pop)

/* 6801 */
#pragma pack(push, 8)
struct IPipeByte
{
  struct IPipeByteVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6805 */
typedef struct _DSCFXAec DSCFXAec;

/* 6804 */
typedef const DSCFXAec *LPCDSCFXAec;

/* 6807 */
typedef struct _DSCFXAec *LPDSCFXAec;

/* 6802 */
struct IDirectSoundCaptureFXAecVtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirectSoundCaptureFXAec *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IDirectSoundCaptureFXAec *This);
  ULONG (__stdcall *Release)(IDirectSoundCaptureFXAec *This);
  HRESULT (__stdcall *SetAllParameters)(IDirectSoundCaptureFXAec *This, LPCDSCFXAec pDscFxAec);
  HRESULT (__stdcall *GetAllParameters)(IDirectSoundCaptureFXAec *This, LPDSCFXAec pDscFxAec);
  HRESULT (__stdcall *GetStatus)(IDirectSoundCaptureFXAec *This, LPDWORD pdwStatus);
  HRESULT (__stdcall *Reset)(IDirectSoundCaptureFXAec *This);
};

/* 6803 */
struct IDirectSoundCaptureFXAec
{
  struct IDirectSoundCaptureFXAecVtbl *lpVtbl;
};

/* 6806 */
struct _DSCFXAec
{
  BOOL fEnable;
  BOOL fNoiseFill;
  DWORD dwMode;
};

/* 6811 */
typedef struct _DSFXCompressor DSFXCompressor;

/* 6810 */
typedef const DSFXCompressor *LPCDSFXCompressor;

/* 6813 */
typedef struct _DSFXCompressor *LPDSFXCompressor;

/* 6808 */
struct IDirectSoundFXCompressorVtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirectSoundFXCompressor *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IDirectSoundFXCompressor *This);
  ULONG (__stdcall *Release)(IDirectSoundFXCompressor *This);
  HRESULT (__stdcall *SetAllParameters)(IDirectSoundFXCompressor *This, LPCDSFXCompressor pcDsFxCompressor);
  HRESULT (__stdcall *GetAllParameters)(IDirectSoundFXCompressor *This, LPDSFXCompressor pDsFxCompressor);
};

/* 6809 */
struct IDirectSoundFXCompressor
{
  struct IDirectSoundFXCompressorVtbl *lpVtbl;
};

/* 6812 */
struct _DSFXCompressor
{
  FLOAT fGain;
  FLOAT fAttack;
  FLOAT fRelease;
  FLOAT fThreshold;
  FLOAT fRatio;
  FLOAT fPredelay;
};

/* 6814 */
#pragma pack(push, 8)
struct IDirectMusicThruVtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirectMusicThru *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IDirectMusicThru *This);
  ULONG (__stdcall *Release)(IDirectMusicThru *This);
  HRESULT (__stdcall *ThruChannel)(IDirectMusicThru *This, DWORD dwSourceChannelGroup, DWORD dwSourceChannel, DWORD dwDestinationChannelGroup, DWORD dwDestinationChannel, LPDIRECTMUSICPORT pDestinationPort);
};
#pragma pack(pop)

/* 6815 */
#pragma pack(push, 8)
struct IDirectMusicThru
{
  struct IDirectMusicThruVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6816 */
#pragma pack(push, 8)
struct IDataAdviseHolderVtbl
{
  HRESULT (__stdcall *QueryInterface)(IDataAdviseHolder *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IDataAdviseHolder *This);
  ULONG (__stdcall *Release)(IDataAdviseHolder *This);
  HRESULT (__stdcall *Advise)(IDataAdviseHolder *This, IDataObject *pDataObject, FORMATETC *pFetc, DWORD advf, IAdviseSink *pAdvise, DWORD *pdwConnection);
  HRESULT (__stdcall *Unadvise)(IDataAdviseHolder *This, DWORD dwConnection);
  HRESULT (__stdcall *EnumAdvise)(IDataAdviseHolder *This, IEnumSTATDATA **ppenumAdvise);
  HRESULT (__stdcall *SendOnDataChange)(IDataAdviseHolder *This, IDataObject *pDataObject, DWORD dwReserved, DWORD advf);
};
#pragma pack(pop)

/* 6817 */
#pragma pack(push, 8)
struct IDataAdviseHolder
{
  struct IDataAdviseHolderVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6821 */
typedef struct _devicemodeA *LPDEVMODEA;

/* 6820 */
typedef LPDEVMODEA LPDEVMODE;

/* 6818 */
#pragma pack(push, 1)
struct IPrintDialogServicesVtbl
{
  HRESULT (__stdcall *QueryInterface)(IPrintDialogServices *This, const IID *const riid, void **ppvObj);
  ULONG (__stdcall *AddRef)(IPrintDialogServices *This);
  ULONG (__stdcall *Release)(IPrintDialogServices *This);
  HRESULT (__stdcall *GetCurrentDevMode)(IPrintDialogServices *This, LPDEVMODE pDevMode, UINT *pcbSize);
  HRESULT (__stdcall *GetCurrentPrinterName)(IPrintDialogServices *This, LPWSTR pPrinterName, UINT *pcchSize);
  HRESULT (__stdcall *GetCurrentPortName)(IPrintDialogServices *This, LPWSTR pPortName, UINT *pcchSize);
};
#pragma pack(pop)

/* 6819 */
#pragma pack(push, 1)
struct IPrintDialogServices
{
  struct IPrintDialogServicesVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6825 */
typedef struct _DSFXDistortion DSFXDistortion;

/* 6824 */
typedef const DSFXDistortion *LPCDSFXDistortion;

/* 6827 */
typedef struct _DSFXDistortion *LPDSFXDistortion;

/* 6822 */
struct IDirectSoundFXDistortionVtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirectSoundFXDistortion *This, const IID *const, LPVOID *);
  ULONG (__stdcall *AddRef)(IDirectSoundFXDistortion *This);
  ULONG (__stdcall *Release)(IDirectSoundFXDistortion *This);
  HRESULT (__stdcall *SetAllParameters)(IDirectSoundFXDistortion *This, LPCDSFXDistortion pcDsFxDistortion);
  HRESULT (__stdcall *GetAllParameters)(IDirectSoundFXDistortion *This, LPDSFXDistortion pDsFxDistortion);
};

/* 6823 */
struct IDirectSoundFXDistortion
{
  struct IDirectSoundFXDistortionVtbl *lpVtbl;
};

/* 6826 */
struct _DSFXDistortion
{
  FLOAT fGain;
  FLOAT fEdge;
  FLOAT fPostEQCenterFrequency;
  FLOAT fPostEQBandwidth;
  FLOAT fPreLowpassCutoff;
};

/* 6828 */
#pragma pack(push, 8)
struct IPersistStorageVtbl
{
  HRESULT (__stdcall *QueryInterface)(IPersistStorage *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IPersistStorage *This);
  ULONG (__stdcall *Release)(IPersistStorage *This);
  HRESULT (__stdcall *GetClassID)(IPersistStorage *This, CLSID *pClassID);
  HRESULT (__stdcall *IsDirty)(IPersistStorage *This);
  HRESULT (__stdcall *InitNew)(IPersistStorage *This, IStorage *pStg);
  HRESULT (__stdcall *Load)(IPersistStorage *This, IStorage *pStg);
  HRESULT (__stdcall *Save)(IPersistStorage *This, IStorage *pStgSave, BOOL fSameAsLoad);
  HRESULT (__stdcall *SaveCompleted)(IPersistStorage *This, IStorage *pStgNew);
  HRESULT (__stdcall *HandsOffStorage)(IPersistStorage *This);
};
#pragma pack(pop)

/* 6829 */
#pragma pack(push, 8)
struct IPersistStorage
{
  struct IPersistStorageVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6830 */
#pragma pack(push, 8)
struct IROTDataVtbl
{
  HRESULT (__stdcall *QueryInterface)(IROTData *This, const IID *const riid, void **ppvObject);
  ULONG (__stdcall *AddRef)(IROTData *This);
  ULONG (__stdcall *Release)(IROTData *This);
  HRESULT (__stdcall *GetComparisonData)(IROTData *This, byte *pbData, ULONG cbMax, ULONG *pcbData);
};
#pragma pack(pop)

/* 6831 */
#pragma pack(push, 8)
struct IROTData
{
  struct IROTDataVtbl *lpVtbl;
};
#pragma pack(pop)

/* 6833 */
typedef enum _D3DRESOURCETYPE D3DRESOURCETYPE;

/* 6834 */
typedef enum _D3DTEXTUREFILTERTYPE D3DTEXTUREFILTERTYPE;

/* 6835 */
typedef struct _D3DVOLUME_DESC D3DVOLUME_DESC;

/* 6836 */
typedef struct _D3DLOCKED_BOX D3DLOCKED_BOX;

/* 6837 */
typedef struct _D3DBOX D3DBOX;

/* 6838 */
typedef enum _D3DFORMAT D3DFORMAT;

/* 6839 */
typedef enum _D3DPOOL D3DPOOL;

/* 6832 */
struct IDirect3DVolumeTexture9Vtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirect3DVolumeTexture9 *This, const IID *const riid, void **ppvObj);
  ULONG (__stdcall *AddRef)(IDirect3DVolumeTexture9 *This);
  ULONG (__stdcall *Release)(IDirect3DVolumeTexture9 *This);
  HRESULT (__stdcall *GetDevice)(IDirect3DVolumeTexture9 *This, IDirect3DDevice9 **ppDevice);
  HRESULT (__stdcall *SetPrivateData)(IDirect3DVolumeTexture9 *This, const GUID *const refguid, const void *pData, DWORD SizeOfData, DWORD Flags);
  HRESULT (__stdcall *GetPrivateData)(IDirect3DVolumeTexture9 *This, const GUID *const refguid, void *pData, DWORD *pSizeOfData);
  HRESULT (__stdcall *FreePrivateData)(IDirect3DVolumeTexture9 *This, const GUID *const refguid);
  DWORD (__stdcall *SetPriority)(IDirect3DVolumeTexture9 *This, DWORD PriorityNew);
  DWORD (__stdcall *GetPriority)(IDirect3DVolumeTexture9 *This);
  void (__stdcall *PreLoad)(IDirect3DVolumeTexture9 *This);
  D3DRESOURCETYPE (__stdcall *GetType)(IDirect3DVolumeTexture9 *This);
  DWORD (__stdcall *SetLOD)(IDirect3DVolumeTexture9 *This, DWORD LODNew);
  DWORD (__stdcall *GetLOD)(IDirect3DVolumeTexture9 *This);
  DWORD (__stdcall *GetLevelCount)(IDirect3DVolumeTexture9 *This);
  HRESULT (__stdcall *SetAutoGenFilterType)(IDirect3DVolumeTexture9 *This, D3DTEXTUREFILTERTYPE FilterType);
  D3DTEXTUREFILTERTYPE (__stdcall *GetAutoGenFilterType)(IDirect3DVolumeTexture9 *This);
  void (__stdcall *GenerateMipSubLevels)(IDirect3DVolumeTexture9 *This);
  HRESULT (__stdcall *GetLevelDesc)(IDirect3DVolumeTexture9 *This, UINT Level, D3DVOLUME_DESC *pDesc);
  HRESULT (__stdcall *GetVolumeLevel)(IDirect3DVolumeTexture9 *This, UINT Level, IDirect3DVolume9 **ppVolumeLevel);
  HRESULT (__stdcall *LockBox)(IDirect3DVolumeTexture9 *This, UINT Level, D3DLOCKED_BOX *pLockedVolume, const D3DBOX *pBox, DWORD Flags);
  HRESULT (__stdcall *UnlockBox)(IDirect3DVolumeTexture9 *This, UINT Level);
  HRESULT (__stdcall *AddDirtyBox)(IDirect3DVolumeTexture9 *This, const D3DBOX *pDirtyBox);
  LPCWSTR Name;
  UINT Width;
  UINT Height;
  UINT Depth;
  UINT Levels;
  DWORD Usage;
  D3DFORMAT Format;
  D3DPOOL Pool;
  DWORD Priority;
  DWORD LOD;
  D3DTEXTUREFILTERTYPE FilterType;
  UINT LockCount;
};

/* 6841 */
typedef struct _RGNDATA RGNDATA;

/* 6842 */
typedef enum _D3DBACKBUFFER_TYPE D3DBACKBUFFER_TYPE;

/* 6843 */
typedef struct _D3DRASTER_STATUS D3DRASTER_STATUS;

/* 6844 */
typedef struct _D3DDISPLAYMODE D3DDISPLAYMODE;

/* 6845 */
typedef struct _D3DPRESENT_PARAMETERS_ D3DPRESENT_PARAMETERS;

/* 6840 */
struct IDirect3DSwapChain9Vtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirect3DSwapChain9 *This, const IID *const riid, void **ppvObj);
  ULONG (__stdcall *AddRef)(IDirect3DSwapChain9 *This);
  ULONG (__stdcall *Release)(IDirect3DSwapChain9 *This);
  HRESULT (__stdcall *Present)(IDirect3DSwapChain9 *This, const RECT *pSourceRect, const RECT *pDestRect, HWND hDestWindowOverride, const RGNDATA *pDirtyRegion, DWORD dwFlags);
  HRESULT (__stdcall *GetFrontBufferData)(IDirect3DSwapChain9 *This, IDirect3DSurface9 *pDestSurface);
  HRESULT (__stdcall *GetBackBuffer)(IDirect3DSwapChain9 *This, UINT iBackBuffer, D3DBACKBUFFER_TYPE Type, IDirect3DSurface9 **ppBackBuffer);
  HRESULT (__stdcall *GetRasterStatus)(IDirect3DSwapChain9 *This, D3DRASTER_STATUS *pRasterStatus);
  HRESULT (__stdcall *GetDisplayMode)(IDirect3DSwapChain9 *This, D3DDISPLAYMODE *pMode);
  HRESULT (__stdcall *GetDevice)(IDirect3DSwapChain9 *This, IDirect3DDevice9 **ppDevice);
  HRESULT (__stdcall *GetPresentParameters)(IDirect3DSwapChain9 *This, D3DPRESENT_PARAMETERS *pPresentationParameters);
  D3DPRESENT_PARAMETERS PresentParameters;
  D3DDISPLAYMODE DisplayMode;
};

/* 6846 */
struct IDirect3DBaseTexture9Vtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirect3DBaseTexture9 *This, const IID *const riid, void **ppvObj);
  ULONG (__stdcall *AddRef)(IDirect3DBaseTexture9 *This);
  ULONG (__stdcall *Release)(IDirect3DBaseTexture9 *This);
  HRESULT (__stdcall *GetDevice)(IDirect3DBaseTexture9 *This, IDirect3DDevice9 **ppDevice);
  HRESULT (__stdcall *SetPrivateData)(IDirect3DBaseTexture9 *This, const GUID *const refguid, const void *pData, DWORD SizeOfData, DWORD Flags);
  HRESULT (__stdcall *GetPrivateData)(IDirect3DBaseTexture9 *This, const GUID *const refguid, void *pData, DWORD *pSizeOfData);
  HRESULT (__stdcall *FreePrivateData)(IDirect3DBaseTexture9 *This, const GUID *const refguid);
  DWORD (__stdcall *SetPriority)(IDirect3DBaseTexture9 *This, DWORD PriorityNew);
  DWORD (__stdcall *GetPriority)(IDirect3DBaseTexture9 *This);
  void (__stdcall *PreLoad)(IDirect3DBaseTexture9 *This);
  D3DRESOURCETYPE (__stdcall *GetType)(IDirect3DBaseTexture9 *This);
  DWORD (__stdcall *SetLOD)(IDirect3DBaseTexture9 *This, DWORD LODNew);
  DWORD (__stdcall *GetLOD)(IDirect3DBaseTexture9 *This);
  DWORD (__stdcall *GetLevelCount)(IDirect3DBaseTexture9 *This);
  HRESULT (__stdcall *SetAutoGenFilterType)(IDirect3DBaseTexture9 *This, D3DTEXTUREFILTERTYPE FilterType);
  D3DTEXTUREFILTERTYPE (__stdcall *GetAutoGenFilterType)(IDirect3DBaseTexture9 *This);
  void (__stdcall *GenerateMipSubLevels)(IDirect3DBaseTexture9 *This);
};

/* 6848 */
typedef struct _D3DADAPTER_IDENTIFIER9 D3DADAPTER_IDENTIFIER9;

/* 6849 */
typedef enum _D3DDEVTYPE D3DDEVTYPE;

/* 6850 */
typedef enum _D3DMULTISAMPLE_TYPE D3DMULTISAMPLE_TYPE;

/* 6851 */
typedef struct _D3DCAPS9 D3DCAPS9;

/* 6847 */
struct IDirect3D9Vtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirect3D9 *This, const IID *const riid, void **ppvObj);
  ULONG (__stdcall *AddRef)(IDirect3D9 *This);
  ULONG (__stdcall *Release)(IDirect3D9 *This);
  HRESULT (__stdcall *RegisterSoftwareDevice)(IDirect3D9 *This, void *pInitializeFunction);
  UINT (__stdcall *GetAdapterCount)(IDirect3D9 *This);
  HRESULT (__stdcall *GetAdapterIdentifier)(IDirect3D9 *This, UINT Adapter, DWORD Flags, D3DADAPTER_IDENTIFIER9 *pIdentifier);
  UINT (__stdcall *GetAdapterModeCount)(IDirect3D9 *This, UINT Adapter, D3DFORMAT Format);
  HRESULT (__stdcall *EnumAdapterModes)(IDirect3D9 *This, UINT Adapter, D3DFORMAT Format, UINT Mode, D3DDISPLAYMODE *pMode);
  HRESULT (__stdcall *GetAdapterDisplayMode)(IDirect3D9 *This, UINT Adapter, D3DDISPLAYMODE *pMode);
  HRESULT (__stdcall *CheckDeviceType)(IDirect3D9 *This, UINT iAdapter, D3DDEVTYPE DevType, D3DFORMAT DisplayFormat, D3DFORMAT BackBufferFormat, BOOL bWindowed);
  HRESULT (__stdcall *CheckDeviceFormat)(IDirect3D9 *This, UINT Adapter, D3DDEVTYPE DeviceType, D3DFORMAT AdapterFormat, DWORD Usage, D3DRESOURCETYPE RType, D3DFORMAT CheckFormat);
  HRESULT (__stdcall *CheckDeviceMultiSampleType)(IDirect3D9 *This, UINT Adapter, D3DDEVTYPE DeviceType, D3DFORMAT SurfaceFormat, BOOL Windowed, D3DMULTISAMPLE_TYPE MultiSampleType, DWORD *pQualityLevels);
  HRESULT (__stdcall *CheckDepthStencilMatch)(IDirect3D9 *This, UINT Adapter, D3DDEVTYPE DeviceType, D3DFORMAT AdapterFormat, D3DFORMAT RenderTargetFormat, D3DFORMAT DepthStencilFormat);
  HRESULT (__stdcall *CheckDeviceFormatConversion)(IDirect3D9 *This, UINT Adapter, D3DDEVTYPE DeviceType, D3DFORMAT SourceFormat, D3DFORMAT TargetFormat);
  HRESULT (__stdcall *GetDeviceCaps)(IDirect3D9 *This, UINT Adapter, D3DDEVTYPE DeviceType, D3DCAPS9 *pCaps);
  HMONITOR (__stdcall *GetAdapterMonitor)(IDirect3D9 *This, UINT Adapter);
  HRESULT (__stdcall *CreateDevice)(IDirect3D9 *This, UINT Adapter, D3DDEVTYPE DeviceType, HWND hFocusWindow, DWORD BehaviorFlags, D3DPRESENT_PARAMETERS *pPresentationParameters, IDirect3DDevice9 **ppReturnedDeviceInterface);
  LPCWSTR Version;
};

/* 6853 */
typedef struct _D3DVERTEXBUFFER_DESC D3DVERTEXBUFFER_DESC;

/* 6852 */
struct IDirect3DVertexBuffer9Vtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirect3DVertexBuffer9 *This, const IID *const riid, void **ppvObj);
  ULONG (__stdcall *AddRef)(IDirect3DVertexBuffer9 *This);
  ULONG (__stdcall *Release)(IDirect3DVertexBuffer9 *This);
  HRESULT (__stdcall *GetDevice)(IDirect3DVertexBuffer9 *This, IDirect3DDevice9 **ppDevice);
  HRESULT (__stdcall *SetPrivateData)(IDirect3DVertexBuffer9 *This, const GUID *const refguid, const void *pData, DWORD SizeOfData, DWORD Flags);
  HRESULT (__stdcall *GetPrivateData)(IDirect3DVertexBuffer9 *This, const GUID *const refguid, void *pData, DWORD *pSizeOfData);
  HRESULT (__stdcall *FreePrivateData)(IDirect3DVertexBuffer9 *This, const GUID *const refguid);
  DWORD (__stdcall *SetPriority)(IDirect3DVertexBuffer9 *This, DWORD PriorityNew);
  DWORD (__stdcall *GetPriority)(IDirect3DVertexBuffer9 *This);
  void (__stdcall *PreLoad)(IDirect3DVertexBuffer9 *This);
  D3DRESOURCETYPE (__stdcall *GetType)(IDirect3DVertexBuffer9 *This);
  HRESULT (__stdcall *Lock)(IDirect3DVertexBuffer9 *This, UINT OffsetToLock, UINT SizeToLock, void **ppbData, DWORD Flags);
  HRESULT (__stdcall *Unlock)(IDirect3DVertexBuffer9 *This);
  HRESULT (__stdcall *GetDesc)(IDirect3DVertexBuffer9 *This, D3DVERTEXBUFFER_DESC *pDesc);
  LPCWSTR Name;
  UINT Length;
  DWORD Usage;
  DWORD FVF;
  D3DPOOL Pool;
  DWORD Priority;
  UINT LockCount;
};

/* 6855 */
typedef struct _D3DSURFACE_DESC D3DSURFACE_DESC;

/* 6856 */
typedef enum _D3DCUBEMAP_FACES D3DCUBEMAP_FACES;

/* 6857 */
typedef struct _D3DLOCKED_RECT D3DLOCKED_RECT;

/* 6854 */
struct IDirect3DCubeTexture9Vtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirect3DCubeTexture9 *This, const IID *const riid, void **ppvObj);
  ULONG (__stdcall *AddRef)(IDirect3DCubeTexture9 *This);
  ULONG (__stdcall *Release)(IDirect3DCubeTexture9 *This);
  HRESULT (__stdcall *GetDevice)(IDirect3DCubeTexture9 *This, IDirect3DDevice9 **ppDevice);
  HRESULT (__stdcall *SetPrivateData)(IDirect3DCubeTexture9 *This, const GUID *const refguid, const void *pData, DWORD SizeOfData, DWORD Flags);
  HRESULT (__stdcall *GetPrivateData)(IDirect3DCubeTexture9 *This, const GUID *const refguid, void *pData, DWORD *pSizeOfData);
  HRESULT (__stdcall *FreePrivateData)(IDirect3DCubeTexture9 *This, const GUID *const refguid);
  DWORD (__stdcall *SetPriority)(IDirect3DCubeTexture9 *This, DWORD PriorityNew);
  DWORD (__stdcall *GetPriority)(IDirect3DCubeTexture9 *This);
  void (__stdcall *PreLoad)(IDirect3DCubeTexture9 *This);
  D3DRESOURCETYPE (__stdcall *GetType)(IDirect3DCubeTexture9 *This);
  DWORD (__stdcall *SetLOD)(IDirect3DCubeTexture9 *This, DWORD LODNew);
  DWORD (__stdcall *GetLOD)(IDirect3DCubeTexture9 *This);
  DWORD (__stdcall *GetLevelCount)(IDirect3DCubeTexture9 *This);
  HRESULT (__stdcall *SetAutoGenFilterType)(IDirect3DCubeTexture9 *This, D3DTEXTUREFILTERTYPE FilterType);
  D3DTEXTUREFILTERTYPE (__stdcall *GetAutoGenFilterType)(IDirect3DCubeTexture9 *This);
  void (__stdcall *GenerateMipSubLevels)(IDirect3DCubeTexture9 *This);
  HRESULT (__stdcall *GetLevelDesc)(IDirect3DCubeTexture9 *This, UINT Level, D3DSURFACE_DESC *pDesc);
  HRESULT (__stdcall *GetCubeMapSurface)(IDirect3DCubeTexture9 *This, D3DCUBEMAP_FACES FaceType, UINT Level, IDirect3DSurface9 **ppCubeMapSurface);
  HRESULT (__stdcall *LockRect)(IDirect3DCubeTexture9 *This, D3DCUBEMAP_FACES FaceType, UINT Level, D3DLOCKED_RECT *pLockedRect, const RECT *pRect, DWORD Flags);
  HRESULT (__stdcall *UnlockRect)(IDirect3DCubeTexture9 *This, D3DCUBEMAP_FACES FaceType, UINT Level);
  HRESULT (__stdcall *AddDirtyRect)(IDirect3DCubeTexture9 *This, D3DCUBEMAP_FACES FaceType, const RECT *pDirtyRect);
  LPCWSTR Name;
  UINT Width;
  UINT Height;
  UINT Levels;
  DWORD Usage;
  D3DFORMAT Format;
  D3DPOOL Pool;
  DWORD Priority;
  DWORD LOD;
  D3DTEXTUREFILTERTYPE FilterType;
  UINT LockCount;
};

/* 6858 */
struct IDirect3DResource9Vtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirect3DResource9 *This, const IID *const riid, void **ppvObj);
  ULONG (__stdcall *AddRef)(IDirect3DResource9 *This);
  ULONG (__stdcall *Release)(IDirect3DResource9 *This);
  HRESULT (__stdcall *GetDevice)(IDirect3DResource9 *This, IDirect3DDevice9 **ppDevice);
  HRESULT (__stdcall *SetPrivateData)(IDirect3DResource9 *This, const GUID *const refguid, const void *pData, DWORD SizeOfData, DWORD Flags);
  HRESULT (__stdcall *GetPrivateData)(IDirect3DResource9 *This, const GUID *const refguid, void *pData, DWORD *pSizeOfData);
  HRESULT (__stdcall *FreePrivateData)(IDirect3DResource9 *This, const GUID *const refguid);
  DWORD (__stdcall *SetPriority)(IDirect3DResource9 *This, DWORD PriorityNew);
  DWORD (__stdcall *GetPriority)(IDirect3DResource9 *This);
  void (__stdcall *PreLoad)(IDirect3DResource9 *This);
  D3DRESOURCETYPE (__stdcall *GetType)(IDirect3DResource9 *This);
};

/* 6859 */
struct IDirect3DVertexShader9Vtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirect3DVertexShader9 *This, const IID *const riid, void **ppvObj);
  ULONG (__stdcall *AddRef)(IDirect3DVertexShader9 *This);
  ULONG (__stdcall *Release)(IDirect3DVertexShader9 *This);
  HRESULT (__stdcall *GetDevice)(IDirect3DVertexShader9 *This, IDirect3DDevice9 **ppDevice);
  HRESULT (__stdcall *GetFunction)(IDirect3DVertexShader9 *This, void *, UINT *pSizeOfData);
  DWORD Version;
};

/* 6860 */
struct IDirect3DStateBlock9Vtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirect3DStateBlock9 *This, const IID *const riid, void **ppvObj);
  ULONG (__stdcall *AddRef)(IDirect3DStateBlock9 *This);
  ULONG (__stdcall *Release)(IDirect3DStateBlock9 *This);
  HRESULT (__stdcall *GetDevice)(IDirect3DStateBlock9 *This, IDirect3DDevice9 **ppDevice);
  HRESULT (__stdcall *Capture)(IDirect3DStateBlock9 *This);
  HRESULT (__stdcall *Apply)(IDirect3DStateBlock9 *This);
};

/* 6861 */
struct IDirect3DVolume9Vtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirect3DVolume9 *This, const IID *const riid, void **ppvObj);
  ULONG (__stdcall *AddRef)(IDirect3DVolume9 *This);
  ULONG (__stdcall *Release)(IDirect3DVolume9 *This);
  HRESULT (__stdcall *GetDevice)(IDirect3DVolume9 *This, IDirect3DDevice9 **ppDevice);
  HRESULT (__stdcall *SetPrivateData)(IDirect3DVolume9 *This, const GUID *const refguid, const void *pData, DWORD SizeOfData, DWORD Flags);
  HRESULT (__stdcall *GetPrivateData)(IDirect3DVolume9 *This, const GUID *const refguid, void *pData, DWORD *pSizeOfData);
  HRESULT (__stdcall *FreePrivateData)(IDirect3DVolume9 *This, const GUID *const refguid);
  HRESULT (__stdcall *GetContainer)(IDirect3DVolume9 *This, const IID *const riid, void **ppContainer);
  HRESULT (__stdcall *GetDesc)(IDirect3DVolume9 *This, D3DVOLUME_DESC *pDesc);
  HRESULT (__stdcall *LockBox)(IDirect3DVolume9 *This, D3DLOCKED_BOX *pLockedVolume, const D3DBOX *pBox, DWORD Flags);
  HRESULT (__stdcall *UnlockBox)(IDirect3DVolume9 *This);
  LPCWSTR Name;
  UINT Width;
  UINT Height;
  UINT Depth;
  DWORD Usage;
  D3DFORMAT Format;
  D3DPOOL Pool;
  UINT LockCount;
};

/* 6863 */
typedef enum _D3DQUERYTYPE D3DQUERYTYPE;

/* 6862 */
struct IDirect3DQuery9Vtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirect3DQuery9 *This, const IID *const riid, void **ppvObj);
  ULONG (__stdcall *AddRef)(IDirect3DQuery9 *This);
  ULONG (__stdcall *Release)(IDirect3DQuery9 *This);
  HRESULT (__stdcall *GetDevice)(IDirect3DQuery9 *This, IDirect3DDevice9 **ppDevice);
  D3DQUERYTYPE (__stdcall *GetType)(IDirect3DQuery9 *This);
  DWORD (__stdcall *GetDataSize)(IDirect3DQuery9 *This);
  HRESULT (__stdcall *Issue)(IDirect3DQuery9 *This, DWORD dwIssueFlags);
  HRESULT (__stdcall *GetData)(IDirect3DQuery9 *This, void *pData, DWORD dwSize, DWORD dwGetDataFlags);
  D3DQUERYTYPE Type;
  DWORD DataSize;
};

/* 6865 */
typedef struct _D3DINDEXBUFFER_DESC D3DINDEXBUFFER_DESC;

/* 6864 */
struct IDirect3DIndexBuffer9Vtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirect3DIndexBuffer9 *This, const IID *const riid, void **ppvObj);
  ULONG (__stdcall *AddRef)(IDirect3DIndexBuffer9 *This);
  ULONG (__stdcall *Release)(IDirect3DIndexBuffer9 *This);
  HRESULT (__stdcall *GetDevice)(IDirect3DIndexBuffer9 *This, IDirect3DDevice9 **ppDevice);
  HRESULT (__stdcall *SetPrivateData)(IDirect3DIndexBuffer9 *This, const GUID *const refguid, const void *pData, DWORD SizeOfData, DWORD Flags);
  HRESULT (__stdcall *GetPrivateData)(IDirect3DIndexBuffer9 *This, const GUID *const refguid, void *pData, DWORD *pSizeOfData);
  HRESULT (__stdcall *FreePrivateData)(IDirect3DIndexBuffer9 *This, const GUID *const refguid);
  DWORD (__stdcall *SetPriority)(IDirect3DIndexBuffer9 *This, DWORD PriorityNew);
  DWORD (__stdcall *GetPriority)(IDirect3DIndexBuffer9 *This);
  void (__stdcall *PreLoad)(IDirect3DIndexBuffer9 *This);
  D3DRESOURCETYPE (__stdcall *GetType)(IDirect3DIndexBuffer9 *This);
  HRESULT (__stdcall *Lock)(IDirect3DIndexBuffer9 *This, UINT OffsetToLock, UINT SizeToLock, void **ppbData, DWORD Flags);
  HRESULT (__stdcall *Unlock)(IDirect3DIndexBuffer9 *This);
  HRESULT (__stdcall *GetDesc)(IDirect3DIndexBuffer9 *This, D3DINDEXBUFFER_DESC *pDesc);
  LPCWSTR Name;
  UINT Length;
  DWORD Usage;
  D3DFORMAT Format;
  D3DPOOL Pool;
  DWORD Priority;
  UINT LockCount;
};

/* 6867 */
typedef struct _D3DDEVICE_CREATION_PARAMETERS D3DDEVICE_CREATION_PARAMETERS;

/* 6868 */
typedef struct _D3DGAMMARAMP D3DGAMMARAMP;

/* 6869 */
typedef struct _D3DRECT D3DRECT;

/* 6870 */
typedef enum _D3DTRANSFORMSTATETYPE D3DTRANSFORMSTATETYPE;

/* 6871 */
typedef struct _D3DMATRIX D3DMATRIX;

/* 6872 */
typedef struct _D3DVIEWPORT9 D3DVIEWPORT9;

/* 6873 */
typedef struct _D3DMATERIAL9 D3DMATERIAL9;

/* 6874 */
typedef struct _D3DLIGHT9 D3DLIGHT9;

/* 6875 */
typedef enum _D3DRENDERSTATETYPE D3DRENDERSTATETYPE;

/* 6876 */
typedef enum _D3DSTATEBLOCKTYPE D3DSTATEBLOCKTYPE;

/* 6877 */
typedef struct _D3DCLIPSTATUS9 D3DCLIPSTATUS9;

/* 6878 */
typedef enum _D3DTEXTURESTAGESTATETYPE D3DTEXTURESTAGESTATETYPE;

/* 6879 */
typedef enum _D3DSAMPLERSTATETYPE D3DSAMPLERSTATETYPE;

/* 6880 */
typedef struct tagPALETTEENTRY PALETTEENTRY;

/* 6881 */
typedef enum _D3DPRIMITIVETYPE D3DPRIMITIVETYPE;

/* 6882 */
typedef struct _D3DVERTEXELEMENT9 D3DVERTEXELEMENT9;

/* 6883 */
typedef struct _D3DRECTPATCH_INFO D3DRECTPATCH_INFO;

/* 6884 */
typedef struct _D3DTRIPATCH_INFO D3DTRIPATCH_INFO;

/* 6866 */
struct IDirect3DDevice9Vtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirect3DDevice9 *This, const IID *const riid, void **ppvObj);
  ULONG (__stdcall *AddRef)(IDirect3DDevice9 *This);
  ULONG (__stdcall *Release)(IDirect3DDevice9 *This);
  HRESULT (__stdcall *TestCooperativeLevel)(IDirect3DDevice9 *This);
  UINT (__stdcall *GetAvailableTextureMem)(IDirect3DDevice9 *This);
  HRESULT (__stdcall *EvictManagedResources)(IDirect3DDevice9 *This);
  HRESULT (__stdcall *GetDirect3D)(IDirect3DDevice9 *This, IDirect3D9 **ppD3D9);
  HRESULT (__stdcall *GetDeviceCaps)(IDirect3DDevice9 *This, D3DCAPS9 *pCaps);
  HRESULT (__stdcall *GetDisplayMode)(IDirect3DDevice9 *This, UINT iSwapChain, D3DDISPLAYMODE *pMode);
  HRESULT (__stdcall *GetCreationParameters)(IDirect3DDevice9 *This, D3DDEVICE_CREATION_PARAMETERS *pParameters);
  HRESULT (__stdcall *SetCursorProperties)(IDirect3DDevice9 *This, UINT XHotSpot, UINT YHotSpot, IDirect3DSurface9 *pCursorBitmap);
  void (__stdcall *SetCursorPosition)(IDirect3DDevice9 *This, int X, int Y, DWORD Flags);
  BOOL (__stdcall *ShowCursor)(IDirect3DDevice9 *This, BOOL bShow);
  HRESULT (__stdcall *CreateAdditionalSwapChain)(IDirect3DDevice9 *This, D3DPRESENT_PARAMETERS *pPresentationParameters, IDirect3DSwapChain9 **pSwapChain);
  HRESULT (__stdcall *GetSwapChain)(IDirect3DDevice9 *This, UINT iSwapChain, IDirect3DSwapChain9 **pSwapChain);
  UINT (__stdcall *GetNumberOfSwapChains)(IDirect3DDevice9 *This);
  HRESULT (__stdcall *Reset)(IDirect3DDevice9 *This, D3DPRESENT_PARAMETERS *pPresentationParameters);
  HRESULT (__stdcall *Present)(IDirect3DDevice9 *This, const RECT *pSourceRect, const RECT *pDestRect, HWND hDestWindowOverride, const RGNDATA *pDirtyRegion);
  HRESULT (__stdcall *GetBackBuffer)(IDirect3DDevice9 *This, UINT iSwapChain, UINT iBackBuffer, D3DBACKBUFFER_TYPE Type, IDirect3DSurface9 **ppBackBuffer);
  HRESULT (__stdcall *GetRasterStatus)(IDirect3DDevice9 *This, UINT iSwapChain, D3DRASTER_STATUS *pRasterStatus);
  HRESULT (__stdcall *SetDialogBoxMode)(IDirect3DDevice9 *This, BOOL bEnableDialogs);
  void (__stdcall *SetGammaRamp)(IDirect3DDevice9 *This, UINT iSwapChain, DWORD Flags, const D3DGAMMARAMP *pRamp);
  void (__stdcall *GetGammaRamp)(IDirect3DDevice9 *This, UINT iSwapChain, D3DGAMMARAMP *pRamp);
  HRESULT (__stdcall *CreateTexture)(IDirect3DDevice9 *This, UINT Width, UINT Height, UINT Levels, DWORD Usage, D3DFORMAT Format, D3DPOOL Pool, IDirect3DTexture9 **ppTexture, HANDLE *pSharedHandle);
  HRESULT (__stdcall *CreateVolumeTexture)(IDirect3DDevice9 *This, UINT Width, UINT Height, UINT Depth, UINT Levels, DWORD Usage, D3DFORMAT Format, D3DPOOL Pool, IDirect3DVolumeTexture9 **ppVolumeTexture, HANDLE *pSharedHandle);
  HRESULT (__stdcall *CreateCubeTexture)(IDirect3DDevice9 *This, UINT EdgeLength, UINT Levels, DWORD Usage, D3DFORMAT Format, D3DPOOL Pool, IDirect3DCubeTexture9 **ppCubeTexture, HANDLE *pSharedHandle);
  HRESULT (__stdcall *CreateVertexBuffer)(IDirect3DDevice9 *This, UINT Length, DWORD Usage, DWORD FVF, D3DPOOL Pool, IDirect3DVertexBuffer9 **ppVertexBuffer, HANDLE *pSharedHandle);
  HRESULT (__stdcall *CreateIndexBuffer)(IDirect3DDevice9 *This, UINT Length, DWORD Usage, D3DFORMAT Format, D3DPOOL Pool, IDirect3DIndexBuffer9 **ppIndexBuffer, HANDLE *pSharedHandle);
  HRESULT (__stdcall *CreateRenderTarget)(IDirect3DDevice9 *This, UINT Width, UINT Height, D3DFORMAT Format, D3DMULTISAMPLE_TYPE MultiSample, DWORD MultisampleQuality, BOOL Lockable, IDirect3DSurface9 **ppSurface, HANDLE *pSharedHandle);
  HRESULT (__stdcall *CreateDepthStencilSurface)(IDirect3DDevice9 *This, UINT Width, UINT Height, D3DFORMAT Format, D3DMULTISAMPLE_TYPE MultiSample, DWORD MultisampleQuality, BOOL Discard, IDirect3DSurface9 **ppSurface, HANDLE *pSharedHandle);
  HRESULT (__stdcall *UpdateSurface)(IDirect3DDevice9 *This, IDirect3DSurface9 *pSourceSurface, const RECT *pSourceRect, IDirect3DSurface9 *pDestinationSurface, const POINT *pDestPoint);
  HRESULT (__stdcall *UpdateTexture)(IDirect3DDevice9 *This, IDirect3DBaseTexture9 *pSourceTexture, IDirect3DBaseTexture9 *pDestinationTexture);
  HRESULT (__stdcall *GetRenderTargetData)(IDirect3DDevice9 *This, IDirect3DSurface9 *pRenderTarget, IDirect3DSurface9 *pDestSurface);
  HRESULT (__stdcall *GetFrontBufferData)(IDirect3DDevice9 *This, UINT iSwapChain, IDirect3DSurface9 *pDestSurface);
  HRESULT (__stdcall *StretchRect)(IDirect3DDevice9 *This, IDirect3DSurface9 *pSourceSurface, const RECT *pSourceRect, IDirect3DSurface9 *pDestSurface, const RECT *pDestRect, D3DTEXTUREFILTERTYPE Filter);
  HRESULT (__stdcall *ColorFill)(IDirect3DDevice9 *This, IDirect3DSurface9 *pSurface, const RECT *pRect, D3DCOLOR color);
  HRESULT (__stdcall *CreateOffscreenPlainSurface)(IDirect3DDevice9 *This, UINT Width, UINT Height, D3DFORMAT Format, D3DPOOL Pool, IDirect3DSurface9 **ppSurface, HANDLE *pSharedHandle);
  HRESULT (__stdcall *SetRenderTarget)(IDirect3DDevice9 *This, DWORD RenderTargetIndex, IDirect3DSurface9 *pRenderTarget);
  HRESULT (__stdcall *GetRenderTarget)(IDirect3DDevice9 *This, DWORD RenderTargetIndex, IDirect3DSurface9 **ppRenderTarget);
  HRESULT (__stdcall *SetDepthStencilSurface)(IDirect3DDevice9 *This, IDirect3DSurface9 *pNewZStencil);
  HRESULT (__stdcall *GetDepthStencilSurface)(IDirect3DDevice9 *This, IDirect3DSurface9 **ppZStencilSurface);
  HRESULT (__stdcall *BeginScene)(IDirect3DDevice9 *This);
  HRESULT (__stdcall *EndScene)(IDirect3DDevice9 *This);
  HRESULT (__stdcall *Clear)(IDirect3DDevice9 *This, DWORD Count, const D3DRECT *pRects, DWORD Flags, D3DCOLOR Color, float Z, DWORD Stencil);
  HRESULT (__stdcall *SetTransform)(IDirect3DDevice9 *This, D3DTRANSFORMSTATETYPE State, const D3DMATRIX *pMatrix);
  HRESULT (__stdcall *GetTransform)(IDirect3DDevice9 *This, D3DTRANSFORMSTATETYPE State, D3DMATRIX *pMatrix);
  HRESULT (__stdcall *MultiplyTransform)(IDirect3DDevice9 *This, D3DTRANSFORMSTATETYPE, const D3DMATRIX *);
  HRESULT (__stdcall *SetViewport)(IDirect3DDevice9 *This, const D3DVIEWPORT9 *pViewport);
  HRESULT (__stdcall *GetViewport)(IDirect3DDevice9 *This, D3DVIEWPORT9 *pViewport);
  HRESULT (__stdcall *SetMaterial)(IDirect3DDevice9 *This, const D3DMATERIAL9 *pMaterial);
  HRESULT (__stdcall *GetMaterial)(IDirect3DDevice9 *This, D3DMATERIAL9 *pMaterial);
  HRESULT (__stdcall *SetLight)(IDirect3DDevice9 *This, DWORD Index, const D3DLIGHT9 *);
  HRESULT (__stdcall *GetLight)(IDirect3DDevice9 *This, DWORD Index, D3DLIGHT9 *);
  HRESULT (__stdcall *LightEnable)(IDirect3DDevice9 *This, DWORD Index, BOOL Enable);
  HRESULT (__stdcall *GetLightEnable)(IDirect3DDevice9 *This, DWORD Index, BOOL *pEnable);
  HRESULT (__stdcall *SetClipPlane)(IDirect3DDevice9 *This, DWORD Index, const float *pPlane);
  HRESULT (__stdcall *GetClipPlane)(IDirect3DDevice9 *This, DWORD Index, float *pPlane);
  HRESULT (__stdcall *SetRenderState)(IDirect3DDevice9 *This, D3DRENDERSTATETYPE State, DWORD Value);
  HRESULT (__stdcall *GetRenderState)(IDirect3DDevice9 *This, D3DRENDERSTATETYPE State, DWORD *pValue);
  HRESULT (__stdcall *CreateStateBlock)(IDirect3DDevice9 *This, D3DSTATEBLOCKTYPE Type, IDirect3DStateBlock9 **ppSB);
  HRESULT (__stdcall *BeginStateBlock)(IDirect3DDevice9 *This);
  HRESULT (__stdcall *EndStateBlock)(IDirect3DDevice9 *This, IDirect3DStateBlock9 **ppSB);
  HRESULT (__stdcall *SetClipStatus)(IDirect3DDevice9 *This, const D3DCLIPSTATUS9 *pClipStatus);
  HRESULT (__stdcall *GetClipStatus)(IDirect3DDevice9 *This, D3DCLIPSTATUS9 *pClipStatus);
  HRESULT (__stdcall *GetTexture)(IDirect3DDevice9 *This, DWORD Stage, IDirect3DBaseTexture9 **ppTexture);
  HRESULT (__stdcall *SetTexture)(IDirect3DDevice9 *This, DWORD Stage, IDirect3DBaseTexture9 *pTexture);
  HRESULT (__stdcall *GetTextureStageState)(IDirect3DDevice9 *This, DWORD Stage, D3DTEXTURESTAGESTATETYPE Type, DWORD *pValue);
  HRESULT (__stdcall *SetTextureStageState)(IDirect3DDevice9 *This, DWORD Stage, D3DTEXTURESTAGESTATETYPE Type, DWORD Value);
  HRESULT (__stdcall *GetSamplerState)(IDirect3DDevice9 *This, DWORD Sampler, D3DSAMPLERSTATETYPE Type, DWORD *pValue);
  HRESULT (__stdcall *SetSamplerState)(IDirect3DDevice9 *This, DWORD Sampler, D3DSAMPLERSTATETYPE Type, DWORD Value);
  HRESULT (__stdcall *ValidateDevice)(IDirect3DDevice9 *This, DWORD *pNumPasses);
  HRESULT (__stdcall *SetPaletteEntries)(IDirect3DDevice9 *This, UINT PaletteNumber, const PALETTEENTRY *pEntries);
  HRESULT (__stdcall *GetPaletteEntries)(IDirect3DDevice9 *This, UINT PaletteNumber, PALETTEENTRY *pEntries);
  HRESULT (__stdcall *SetCurrentTexturePalette)(IDirect3DDevice9 *This, UINT PaletteNumber);
  HRESULT (__stdcall *GetCurrentTexturePalette)(IDirect3DDevice9 *This, UINT *PaletteNumber);
  HRESULT (__stdcall *SetScissorRect)(IDirect3DDevice9 *This, const RECT *pRect);
  HRESULT (__stdcall *GetScissorRect)(IDirect3DDevice9 *This, RECT *pRect);
  HRESULT (__stdcall *SetSoftwareVertexProcessing)(IDirect3DDevice9 *This, BOOL bSoftware);
  BOOL (__stdcall *GetSoftwareVertexProcessing)(IDirect3DDevice9 *This);
  HRESULT (__stdcall *SetNPatchMode)(IDirect3DDevice9 *This, float nSegments);
  float (__stdcall *GetNPatchMode)(IDirect3DDevice9 *This);
  HRESULT (__stdcall *DrawPrimitive)(IDirect3DDevice9 *This, D3DPRIMITIVETYPE PrimitiveType, UINT StartVertex, UINT PrimitiveCount);
  HRESULT (__stdcall *DrawIndexedPrimitive)(IDirect3DDevice9 *This, D3DPRIMITIVETYPE, INT BaseVertexIndex, UINT MinVertexIndex, UINT NumVertices, UINT startIndex, UINT primCount);
  HRESULT (__stdcall *DrawPrimitiveUP)(IDirect3DDevice9 *This, D3DPRIMITIVETYPE PrimitiveType, UINT PrimitiveCount, const void *pVertexStreamZeroData, UINT VertexStreamZeroStride);
  HRESULT (__stdcall *DrawIndexedPrimitiveUP)(IDirect3DDevice9 *This, D3DPRIMITIVETYPE PrimitiveType, UINT MinVertexIndex, UINT NumVertices, UINT PrimitiveCount, const void *pIndexData, D3DFORMAT IndexDataFormat, const void *pVertexStreamZeroData, UINT VertexStreamZeroStride);
  HRESULT (__stdcall *ProcessVertices)(IDirect3DDevice9 *This, UINT SrcStartIndex, UINT DestIndex, UINT VertexCount, IDirect3DVertexBuffer9 *pDestBuffer, IDirect3DVertexDeclaration9 *pVertexDecl, DWORD Flags);
  HRESULT (__stdcall *CreateVertexDeclaration)(IDirect3DDevice9 *This, const D3DVERTEXELEMENT9 *pVertexElements, IDirect3DVertexDeclaration9 **ppDecl);
  HRESULT (__stdcall *SetVertexDeclaration)(IDirect3DDevice9 *This, IDirect3DVertexDeclaration9 *pDecl);
  HRESULT (__stdcall *GetVertexDeclaration)(IDirect3DDevice9 *This, IDirect3DVertexDeclaration9 **ppDecl);
  HRESULT (__stdcall *SetFVF)(IDirect3DDevice9 *This, DWORD FVF);
  HRESULT (__stdcall *GetFVF)(IDirect3DDevice9 *This, DWORD *pFVF);
  HRESULT (__stdcall *CreateVertexShader)(IDirect3DDevice9 *This, const DWORD *pFunction, IDirect3DVertexShader9 **ppShader);
  HRESULT (__stdcall *SetVertexShader)(IDirect3DDevice9 *This, IDirect3DVertexShader9 *pShader);
  HRESULT (__stdcall *GetVertexShader)(IDirect3DDevice9 *This, IDirect3DVertexShader9 **ppShader);
  HRESULT (__stdcall *SetVertexShaderConstantF)(IDirect3DDevice9 *This, UINT StartRegister, const float *pConstantData, UINT Vector4fCount);
  HRESULT (__stdcall *GetVertexShaderConstantF)(IDirect3DDevice9 *This, UINT StartRegister, float *pConstantData, UINT Vector4fCount);
  HRESULT (__stdcall *SetVertexShaderConstantI)(IDirect3DDevice9 *This, UINT StartRegister, const int *pConstantData, UINT Vector4iCount);
  HRESULT (__stdcall *GetVertexShaderConstantI)(IDirect3DDevice9 *This, UINT StartRegister, int *pConstantData, UINT Vector4iCount);
  HRESULT (__stdcall *SetVertexShaderConstantB)(IDirect3DDevice9 *This, UINT StartRegister, const BOOL *pConstantData, UINT BoolCount);
  HRESULT (__stdcall *GetVertexShaderConstantB)(IDirect3DDevice9 *This, UINT StartRegister, BOOL *pConstantData, UINT BoolCount);
  HRESULT (__stdcall *SetStreamSource)(IDirect3DDevice9 *This, UINT StreamNumber, IDirect3DVertexBuffer9 *pStreamData, UINT OffsetInBytes, UINT Stride);
  HRESULT (__stdcall *GetStreamSource)(IDirect3DDevice9 *This, UINT StreamNumber, IDirect3DVertexBuffer9 **ppStreamData, UINT *OffsetInBytes, UINT *pStride);
  HRESULT (__stdcall *SetStreamSourceFreq)(IDirect3DDevice9 *This, UINT StreamNumber, UINT Divider);
  HRESULT (__stdcall *GetStreamSourceFreq)(IDirect3DDevice9 *This, UINT StreamNumber, UINT *Divider);
  HRESULT (__stdcall *SetIndices)(IDirect3DDevice9 *This, IDirect3DIndexBuffer9 *pIndexData);
  HRESULT (__stdcall *GetIndices)(IDirect3DDevice9 *This, IDirect3DIndexBuffer9 **ppIndexData);
  HRESULT (__stdcall *CreatePixelShader)(IDirect3DDevice9 *This, const DWORD *pFunction, IDirect3DPixelShader9 **ppShader);
  HRESULT (__stdcall *SetPixelShader)(IDirect3DDevice9 *This, IDirect3DPixelShader9 *pShader);
  HRESULT (__stdcall *GetPixelShader)(IDirect3DDevice9 *This, IDirect3DPixelShader9 **ppShader);
  HRESULT (__stdcall *SetPixelShaderConstantF)(IDirect3DDevice9 *This, UINT StartRegister, const float *pConstantData, UINT Vector4fCount);
  HRESULT (__stdcall *GetPixelShaderConstantF)(IDirect3DDevice9 *This, UINT StartRegister, float *pConstantData, UINT Vector4fCount);
  HRESULT (__stdcall *SetPixelShaderConstantI)(IDirect3DDevice9 *This, UINT StartRegister, const int *pConstantData, UINT Vector4iCount);
  HRESULT (__stdcall *GetPixelShaderConstantI)(IDirect3DDevice9 *This, UINT StartRegister, int *pConstantData, UINT Vector4iCount);
  HRESULT (__stdcall *SetPixelShaderConstantB)(IDirect3DDevice9 *This, UINT StartRegister, const BOOL *pConstantData, UINT BoolCount);
  HRESULT (__stdcall *GetPixelShaderConstantB)(IDirect3DDevice9 *This, UINT StartRegister, BOOL *pConstantData, UINT BoolCount);
  HRESULT (__stdcall *DrawRectPatch)(IDirect3DDevice9 *This, UINT Handle, const float *pNumSegs, const D3DRECTPATCH_INFO *pRectPatchInfo);
  HRESULT (__stdcall *DrawTriPatch)(IDirect3DDevice9 *This, UINT Handle, const float *pNumSegs, const D3DTRIPATCH_INFO *pTriPatchInfo);
  HRESULT (__stdcall *DeletePatch)(IDirect3DDevice9 *This, UINT Handle);
  HRESULT (__stdcall *CreateQuery)(IDirect3DDevice9 *This, D3DQUERYTYPE Type, IDirect3DQuery9 **ppQuery);
  D3DDEVICE_CREATION_PARAMETERS CreationParameters;
  D3DPRESENT_PARAMETERS PresentParameters;
  D3DDISPLAYMODE DisplayMode;
  D3DCAPS9 Caps;
  UINT AvailableTextureMem;
  UINT SwapChains;
  UINT Textures;
  UINT VertexBuffers;
  UINT IndexBuffers;
  UINT VertexShaders;
  UINT PixelShaders;
  D3DVIEWPORT9 Viewport;
  D3DMATRIX ProjectionMatrix;
  D3DMATRIX ViewMatrix;
  D3DMATRIX WorldMatrix;
  D3DMATRIX TextureMatrices[8];
  DWORD FVF;
  UINT VertexSize;
  DWORD VertexShaderVersion;
  DWORD PixelShaderVersion;
  BOOL SoftwareVertexProcessing;
  D3DMATERIAL9 Material;
  D3DLIGHT9 Lights[16];
  BOOL LightsEnabled[16];
  D3DGAMMARAMP GammaRamp;
  RECT ScissorRect;
  BOOL DialogBoxMode;
};

/* 6885 */
struct IDirect3DPixelShader9Vtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirect3DPixelShader9 *This, const IID *const riid, void **ppvObj);
  ULONG (__stdcall *AddRef)(IDirect3DPixelShader9 *This);
  ULONG (__stdcall *Release)(IDirect3DPixelShader9 *This);
  HRESULT (__stdcall *GetDevice)(IDirect3DPixelShader9 *This, IDirect3DDevice9 **ppDevice);
  HRESULT (__stdcall *GetFunction)(IDirect3DPixelShader9 *This, void *, UINT *pSizeOfData);
  DWORD Version;
};

/* 6886 */
struct IDirect3DVertexDeclaration9Vtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirect3DVertexDeclaration9 *This, const IID *const riid, void **ppvObj);
  ULONG (__stdcall *AddRef)(IDirect3DVertexDeclaration9 *This);
  ULONG (__stdcall *Release)(IDirect3DVertexDeclaration9 *This);
  HRESULT (__stdcall *GetDevice)(IDirect3DVertexDeclaration9 *This, IDirect3DDevice9 **ppDevice);
  HRESULT (__stdcall *GetDeclaration)(IDirect3DVertexDeclaration9 *This, D3DVERTEXELEMENT9 *, UINT *pNumElements);
};

/* 6887 */
struct IDirect3DSurface9Vtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirect3DSurface9 *This, const IID *const riid, void **ppvObj);
  ULONG (__stdcall *AddRef)(IDirect3DSurface9 *This);
  ULONG (__stdcall *Release)(IDirect3DSurface9 *This);
  HRESULT (__stdcall *GetDevice)(IDirect3DSurface9 *This, IDirect3DDevice9 **ppDevice);
  HRESULT (__stdcall *SetPrivateData)(IDirect3DSurface9 *This, const GUID *const refguid, const void *pData, DWORD SizeOfData, DWORD Flags);
  HRESULT (__stdcall *GetPrivateData)(IDirect3DSurface9 *This, const GUID *const refguid, void *pData, DWORD *pSizeOfData);
  HRESULT (__stdcall *FreePrivateData)(IDirect3DSurface9 *This, const GUID *const refguid);
  DWORD (__stdcall *SetPriority)(IDirect3DSurface9 *This, DWORD PriorityNew);
  DWORD (__stdcall *GetPriority)(IDirect3DSurface9 *This);
  void (__stdcall *PreLoad)(IDirect3DSurface9 *This);
  D3DRESOURCETYPE (__stdcall *GetType)(IDirect3DSurface9 *This);
  HRESULT (__stdcall *GetContainer)(IDirect3DSurface9 *This, const IID *const riid, void **ppContainer);
  HRESULT (__stdcall *GetDesc)(IDirect3DSurface9 *This, D3DSURFACE_DESC *pDesc);
  HRESULT (__stdcall *LockRect)(IDirect3DSurface9 *This, D3DLOCKED_RECT *pLockedRect, const RECT *pRect, DWORD Flags);
  HRESULT (__stdcall *UnlockRect)(IDirect3DSurface9 *This);
  HRESULT (__stdcall *GetDC)(IDirect3DSurface9 *This, HDC *phdc);
  HRESULT (__stdcall *ReleaseDC)(IDirect3DSurface9 *This, HDC hdc);
  LPCWSTR Name;
  UINT Width;
  UINT Height;
  DWORD Usage;
  D3DFORMAT Format;
  D3DPOOL Pool;
  D3DMULTISAMPLE_TYPE MultiSampleType;
  DWORD MultiSampleQuality;
  DWORD Priority;
  UINT LockCount;
  UINT DCCount;
};

/* 6888 */
struct IDirect3DTexture9Vtbl
{
  HRESULT (__stdcall *QueryInterface)(IDirect3DTexture9 *This, const IID *const riid, void **ppvObj);
  ULONG (__stdcall *AddRef)(IDirect3DTexture9 *This);
  ULONG (__stdcall *Release)(IDirect3DTexture9 *This);
  HRESULT (__stdcall *GetDevice)(IDirect3DTexture9 *This, IDirect3DDevice9 **ppDevice);
  HRESULT (__stdcall *SetPrivateData)(IDirect3DTexture9 *This, const GUID *const refguid, const void *pData, DWORD SizeOfData, DWORD Flags);
  HRESULT (__stdcall *GetPrivateData)(IDirect3DTexture9 *This, const GUID *const refguid, void *pData, DWORD *pSizeOfData);
  HRESULT (__stdcall *FreePrivateData)(IDirect3DTexture9 *This, const GUID *const refguid);
  DWORD (__stdcall *SetPriority)(IDirect3DTexture9 *This, DWORD PriorityNew);
  DWORD (__stdcall *GetPriority)(IDirect3DTexture9 *This);
  void (__stdcall *PreLoad)(IDirect3DTexture9 *This);
  D3DRESOURCETYPE (__stdcall *GetType)(IDirect3DTexture9 *This);
  DWORD (__stdcall *SetLOD)(IDirect3DTexture9 *This, DWORD LODNew);
  DWORD (__stdcall *GetLOD)(IDirect3DTexture9 *This);
  DWORD (__stdcall *GetLevelCount)(IDirect3DTexture9 *This);
  HRESULT (__stdcall *SetAutoGenFilterType)(IDirect3DTexture9 *This, D3DTEXTUREFILTERTYPE FilterType);
  D3DTEXTUREFILTERTYPE (__stdcall *GetAutoGenFilterType)(IDirect3DTexture9 *This);
  void (__stdcall *GenerateMipSubLevels)(IDirect3DTexture9 *This);
  HRESULT (__stdcall *GetLevelDesc)(IDirect3DTexture9 *This, UINT Level, D3DSURFACE_DESC *pDesc);
  HRESULT (__stdcall *GetSurfaceLevel)(IDirect3DTexture9 *This, UINT Level, IDirect3DSurface9 **ppSurfaceLevel);
  HRESULT (__stdcall *LockRect)(IDirect3DTexture9 *This, UINT Level, D3DLOCKED_RECT *pLockedRect, const RECT *pRect, DWORD Flags);
  HRESULT (__stdcall *UnlockRect)(IDirect3DTexture9 *This, UINT Level);
  HRESULT (__stdcall *AddDirtyRect)(IDirect3DTexture9 *This, const RECT *pDirtyRect);
  LPCWSTR Name;
  UINT Width;
  UINT Height;
  UINT Levels;
  DWORD Usage;
  D3DFORMAT Format;
  D3DPOOL Pool;
  DWORD Priority;
  DWORD LOD;
  D3DTEXTUREFILTERTYPE FilterType;
  UINT LockCount;
};

/* 6889 */
struct EVENTLISTENERNODE;

/* 6890 */
struct FrameFactoryNode;

/* 6891 */
struct FrameScript_EventObject;

